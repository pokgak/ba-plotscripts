<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201112 12:42:07.005" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.118" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:42:08.126" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:42:10.068" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:42:08.115" endtime="20201112 12:42:10.069"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.075" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:42:10.071" endtime="20201112 12:42:10.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.114" endtime="20201112 12:42:10.077"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:10.082" endtime="20201112 12:42:10.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.079" endtime="20201112 12:42:10.413"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.444" endtime="20201112 12:42:10.462"></status>
</kw>
<msg timestamp="20201112 12:42:10.464" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:10.440" endtime="20201112 12:42:10.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.470" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:10.466" endtime="20201112 12:42:10.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.477" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:10.472" endtime="20201112 12:42:10.477"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:10.434" endtime="20201112 12:42:10.479"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:10.427" endtime="20201112 12:42:10.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.425" endtime="20201112 12:42:10.482"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:10.490" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:10.488" endtime="20201112 12:42:10.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.484" endtime="20201112 12:42:10.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.423" endtime="20201112 12:42:10.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.421" endtime="20201112 12:42:10.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.493" endtime="20201112 12:42:10.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.417" endtime="20201112 12:42:10.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.500" endtime="20201112 12:42:10.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.414" endtime="20201112 12:42:10.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.112" endtime="20201112 12:42:10.506"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:10.520" endtime="20201112 12:42:10.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.517" endtime="20201112 12:42:10.544"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.592" endtime="20201112 12:42:10.612"></status>
</kw>
<msg timestamp="20201112 12:42:10.613" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:10.588" endtime="20201112 12:42:10.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.621" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:10.616" endtime="20201112 12:42:10.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.628" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:10.623" endtime="20201112 12:42:10.629"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:10.581" endtime="20201112 12:42:10.631"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:10.573" endtime="20201112 12:42:10.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.559" endtime="20201112 12:42:10.633"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:10.642" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:10.641" endtime="20201112 12:42:10.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.636" endtime="20201112 12:42:10.644"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.557" endtime="20201112 12:42:10.644"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.554" endtime="20201112 12:42:10.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.646" endtime="20201112 12:42:10.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.550" endtime="20201112 12:42:10.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.545" endtime="20201112 12:42:10.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.514" endtime="20201112 12:42:10.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.674" endtime="20201112 12:42:10.687"></status>
</kw>
<msg timestamp="20201112 12:42:10.689" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:10.670" endtime="20201112 12:42:10.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.695" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:10.691" endtime="20201112 12:42:10.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.698" endtime="20201112 12:42:10.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.662" endtime="20201112 12:42:10.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.657" endtime="20201112 12:42:10.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.717" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 12:42:10.714" endtime="20201112 12:42:10.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.722" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 12:42:10.719" endtime="20201112 12:42:10.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.707" endtime="20201112 12:42:10.724"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:10.507" endtime="20201112 12:42:10.727" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:42:07.263" endtime="20201112 12:42:10.735"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.874" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:42:10.889" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:42:12.710" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:42:10.870" endtime="20201112 12:42:12.711"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.716" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:42:12.713" endtime="20201112 12:42:12.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.867" endtime="20201112 12:42:12.719"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:12.724" endtime="20201112 12:42:13.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.721" endtime="20201112 12:42:13.061"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.091" endtime="20201112 12:42:13.115"></status>
</kw>
<msg timestamp="20201112 12:42:13.116" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Succ...</msg>
<status status="PASS" starttime="20201112 12:42:13.088" endtime="20201112 12:42:13.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.123" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Succ...</msg>
<status status="PASS" starttime="20201112 12:42:13.119" endtime="20201112 12:42:13.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.131" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:13.126" endtime="20201112 12:42:13.131"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:13.081" endtime="20201112 12:42:13.133"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:13.076" endtime="20201112 12:42:13.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.073" endtime="20201112 12:42:13.136"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:13.144" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:13.143" endtime="20201112 12:42:13.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.138" endtime="20201112 12:42:13.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.071" endtime="20201112 12:42:13.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.069" endtime="20201112 12:42:13.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.148" endtime="20201112 12:42:13.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.066" endtime="20201112 12:42:13.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.155" endtime="20201112 12:42:13.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.063" endtime="20201112 12:42:13.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.864" endtime="20201112 12:42:13.162"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:13.177" endtime="20201112 12:42:13.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.173" endtime="20201112 12:42:13.201"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.301" endtime="20201112 12:42:13.321"></status>
</kw>
<msg timestamp="20201112 12:42:13.323" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.298" endtime="20201112 12:42:13.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.330" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.325" endtime="20201112 12:42:13.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.337" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:13.333" endtime="20201112 12:42:13.338"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:13.290" endtime="20201112 12:42:13.340"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:13.283" endtime="20201112 12:42:13.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.215" endtime="20201112 12:42:13.342"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:13.350" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:13.349" endtime="20201112 12:42:13.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.344" endtime="20201112 12:42:13.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.214" endtime="20201112 12:42:13.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.212" endtime="20201112 12:42:13.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.354" endtime="20201112 12:42:13.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.207" endtime="20201112 12:42:13.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.203" endtime="20201112 12:42:13.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.170" endtime="20201112 12:42:13.362"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 12:42:13.367" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.389" endtime="20201112 12:42:13.403"></status>
</kw>
<msg timestamp="20201112 12:42:13.404" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.385" endtime="20201112 12:42:13.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.411" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.407" endtime="20201112 12:42:13.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.413" endtime="20201112 12:42:13.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.377" endtime="20201112 12:42:13.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.372" endtime="20201112 12:42:13.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.441" endtime="20201112 12:42:13.794"></status>
</kw>
<msg timestamp="20201112 12:42:13.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.202784819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.202797333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:13.437" endtime="20201112 12:42:13.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.202784819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.202797333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:13.801" endtime="20201112 12:42:13.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.814" endtime="20201112 12:42:13.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.429" endtime="20201112 12:42:13.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.424" endtime="20201112 12:42:13.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.832" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:13.829" endtime="20201112 12:42:13.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.842" level="INFO">VALUE: [{'time': 0.202784819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.202797333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2513999999991254e-05, 'source_diff': 1.2513999999991254e-05}, {'time': 0.202805042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.708999999994637e-06, 'source_diff': 7.708999999994637e-06}, {'time': 0.202812972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.93000000001709e-06, 'source_diff': 7.93000000001709e-06}, {'time': 0.202819236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2640000000058205e-06, 'source_diff': 6.2640000000058205e-06}, {'time': 0.20282425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0139999999976315e-06, 'source_diff': 5.0139999999976315e-06}, {'time': 0.202838639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4388999999975782e-05, 'source_diff': 1.4388999999975782e-05}, {'time': 0.202850542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1903000000007546e-05, 'source_diff': 1.1903000000007546e-05}, {'time': 0.202853069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5270000000021664e-06, 'source_diff': 2.5270000000021664e-06}, {'time': 0.202868278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5209000000016015e-05, 'source_diff': 1.5209000000016015e-05}, {'time': 0.2028785, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0221999999976417e-05, 'source_diff': 1.0221999999976417e-05}, {'time': 0.202889806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.130600000001647e-05, 'source_diff': 1.130600000001647e-05}, {'time': 0.202903958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4151999999989506e-05, 'source_diff': 1.4151999999989506e-05}, {'time': 0.202908986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.028000000018018e-06, 'source_diff': 5.028000000018018e-06}, {'time': 0.202916264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.202930889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.462499999999034e-05, 'source_diff': 1.462499999999034e-05}, {'time': 0.202944208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3318999999983872e-05, 'source_diff': 1.3318999999983872e-05}, {'time': 0.202947347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1390000000131035e-06, 'source_diff': 3.1390000000131035e-06}, {'time': 0.202952806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.459000000013203e-06, 'source_diff': 5.459000000013203e-06}, {'time': 0.202967194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4387999999976309e-05, 'source_diff': 1.4387999999976309e-05}, {'time': 0.202975528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.333999999998731e-06, 'source_diff': 8.333999999998731e-06}, {'time': 0.202985958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0430000000005712e-05, 'source_diff': 1.0430000000005712e-05}, {'time': 0.202988486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.20299975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1264000000010821e-05, 'source_diff': 1.1264000000010821e-05}, {'time': 0.203009958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0207999999983786e-05, 'source_diff': 1.0207999999983786e-05}, {'time': 0.203013722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.764000000017198e-06, 'source_diff': 3.764000000017198e-06}, {'time': 0.20301625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.203024167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916999999996177e-06, 'source_diff': 7.916999999996177e-06}, {'time': 0.203032722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.554999999993429e-06, 'source_diff': 8.554999999993429e-06}, {'time': 0.203048153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5431000000010187e-05, 'source_diff': 1.5431000000010187e-05}, {'time': 0.203060042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.188899999998716e-05, 'source_diff': 1.188899999998716e-05}, {'time': 0.203064042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.000000000004e-06, 'source_diff': 4.000000000004e-06}, {'time': 0.203078, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3958000000008353e-05, 'source_diff': 1.3958000000008353e-05}, {'time': 0.203080708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7079999999901627e-06, 'source_diff': 2.7079999999901627e-06}, {'time': 0.203094694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3985999999993615e-05, 'source_diff': 1.3985999999993615e-05}, {'time': 0.203107014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.23200000000101e-05, 'source_diff': 1.23200000000101e-05}, {'time': 0.203121597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4582999999984692e-05, 'source_diff': 1.4582999999984692e-05}, {'time': 0.203127861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2640000000058205e-06, 'source_diff': 6.2640000000058205e-06}, {'time': 0.203141681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3819999999997723e-05, 'source_diff': 1.3819999999997723e-05}, {'time': 0.20314625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.569000000009815e-06, 'source_diff': 4.569000000009815e-06}, {'time': 0.203158528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2278000000004452e-05, 'source_diff': 1.2278000000004452e-05}, {'time': 0.203166042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.513999999986254e-06, 'source_diff': 7.513999999986254e-06}, {'time': 0.203172097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0550000000048065e-06, 'source_diff': 6.0550000000048065e-06}, {'time': 0.203182958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.20319775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4792000000013461e-05, 'source_diff': 1.4792000000013461e-05}, {'time': 0.203211306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3555999999997903e-05, 'source_diff': 1.3555999999997903e-05}, {'time': 0.203221528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0222000000004172e-05, 'source_diff': 1.0222000000004172e-05}, {'time': 0.203228833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.30499999998524e-06, 'source_diff': 7.30499999998524e-06}, {'time': 0.203236778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.945000000009195e-06, 'source_diff': 7.945000000009195e-06}, {'time': 0.203245542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.763999999994443e-06, 'source_diff': 8.763999999994443e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:13.835" endtime="20201112 12:42:13.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.823" endtime="20201112 12:42:13.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:13.878" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:13.847" endtime="20201112 12:42:13.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.888" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:13.886" endtime="20201112 12:42:13.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.897" level="INFO">VALUE: {'sourcediff': [0, 1.2513999999991254e-05, 7.708999999994637e-06, 7.93000000001709e-06, 6.2640000000058205e-06, 5.0139999999976315e-06, 1.4388999999975782e-05, 1.1903000000007546e-05, 2.5270000000021664e-06, 1.5209000000016015e-05, 1.0221999999976417e-05, 1.130600000001647e-05, 1.4151999999989506e-05, 5.028000000018018e-06, 7.2779999999994516e-06, 1.462499999999034e-05, 1.3318999999983872e-05, 3.1390000000131035e-06, 5.459000000013203e-06, 1.4387999999976309e-05, 8.333999999998731e-06, 1.0430000000005712e-05, 2.52800000000164e-06, 1.1264000000010821e-05, 1.0207999999983786e-05, 3.764000000017198e-06, 2.52800000000164e-06, 7.916999999996177e-06, 8.554999999993429e-06, 1.5431000000010187e-05, 1.188899999998716e-05, 4.000000000004e-06, 1.3958000000008353e-05, 2.7079999999901627e-06, 1.3985999999993615e-05, 1.23200000000101e-05, 1.4582999999984692e-05, 6.2640000000058205e-06, 1.3819999999997723e-05, 4.569000000009815e-06, 1.2278000000004452e-05, 7.513999999986254e-06, 6.0550000000048065e-06, 1.0861000000000898e-05, 1.4792000000013461e-05, 1.3555999999997903e-05, 1.0222000000004172e-05, 7.30499999998524e-06, 7.945000000009195e-06, 8.763999999994443e-06], 'time': [0.202784819, 0.202797333, 0.202805042, 0.202812972, 0.202819236, 0.20282425, 0.202838639, 0.202850542, 0.202853069, 0.202868278, 0.2028785, 0.202889806, 0.202903958, 0.202908986, 0.202916264, 0.202930889, 0.202944208, 0.202947347, 0.202952806, 0.202967194, 0.202975528, 0.202985958, 0.202988486, 0.20299975, 0.203009958, 0.203013722, 0.20301625, 0.203024167, 0.203032722, 0.203048153, 0.203060042, 0.203064042, 0.203078, 0.203080708, 0.203094694, 0.203107014, 0.203121597, 0.203127861, 0.203141681, 0.20314625, 0.203158528, 0.203166042, 0.203172097, 0.203182958, 0.20319775, 0.203211306, 0.203221528, 0.203228833, 0.203236778, 0.203245542], 'source_diff': [0, 1.2513999999991254e-05, 7.708999999994637e-06, 7.93000000001709e-06, 6.2640000000058205e-06, 5.0139999999976315e-06, 1.4388999999975782e-05, 1.1903000000007546e-05, 2.5270000000021664e-06, 1.5209000000016015e-05, 1.0221999999976417e-05, 1.130600000001647e-05, 1.4151999999989506e-05, 5.028000000018018e-06, 7.2779999999994516e-06, 1.462499999999034e-05, 1.3318999999983872e-05, 3.1390000000131035e-06, 5.459000000013203e-06, 1.4387999999976309e-05, 8.333999999998731e-06, 1.0430000000005712e-05, 2.52800000000164e-06, 1.1264000000010821e-05, 1.0207999999983786e-05, 3.764000000017198e-06, 2.52800000000164e-06, 7.916999999996177e-06, 8.554999999993429e-06, 1.5431000000010187e-05, 1.188899999998716e-05, 4.000000000004e-06, 1.3958000000008353e-05, 2.7079999999901627e-06, 1.3985999999993615e-05, 1.23200000000101e-05, 1.4582999999984692e-05, 6.2640000000058205e-06, 1.3819999999997723e-05, 4.569000000009815e-06, 1.2278000000004452e-05, 7.513999999986254e-06, 6.0550000000048065e-06, 1.0861000000000898e-05, 1.4792000000013461e-05, 1.3555999999997903e-05, 1.0222000000004172e-05, 7.30499999998524e-06, 7.945000000009195e-06, 8.763999999994443e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:13.891" endtime="20201112 12:42:13.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.881" endtime="20201112 12:42:13.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:13.909" level="INFO">${RESULT} = [{'time': 0.202797333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2513999999991254e-05, 'source_diff': 1.2513999999991254e-05}, {'time': 0.202812972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:13.901" endtime="20201112 12:42:13.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:13.929" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:13.911" endtime="20201112 12:42:13.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.941" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:13.937" endtime="20201112 12:42:13.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.947" level="INFO">VALUE: [1.2513999999991254e-05, 7.93000000001709e-06, 5.0139999999976315e-06, 1.1903000000007546e-05, 1.5209000000016015e-05, 1.130600000001647e-05, 5.028000000018018e-06, 1.462499999999034e-05, 3.1390000000131035e-06, 1.4387999999976309e-05, 1.0430000000005712e-05, 1.1264000000010821e-05, 3.764000000017198e-06, 7.916999999996177e-06, 1.5431000000010187e-05, 4.000000000004e-06, 2.7079999999901627e-06, 1.23200000000101e-05, 6.2640000000058205e-06, 4.569000000009815e-06, 7.513999999986254e-06, 1.0861000000000898e-05, 1.3555999999997903e-05, 7.30499999998524e-06, 8.763999999994443e-06]</msg>
<status status="PASS" starttime="20201112 12:42:13.944" endtime="20201112 12:42:13.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.931" endtime="20201112 12:42:13.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.958" endtime="20201112 12:42:13.961"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:13.968" endtime="20201112 12:42:13.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.963" endtime="20201112 12:42:13.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.952" endtime="20201112 12:42:13.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.368" endtime="20201112 12:42:13.995"></status>
</kw>
<msg timestamp="20201112 12:42:13.995" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.017" endtime="20201112 12:42:14.031"></status>
</kw>
<msg timestamp="20201112 12:42:14.032" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.014" endtime="20201112 12:42:14.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.039" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.035" endtime="20201112 12:42:14.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.041" endtime="20201112 12:42:14.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.006" endtime="20201112 12:42:14.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.000" endtime="20201112 12:42:14.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.068" endtime="20201112 12:42:14.405"></status>
</kw>
<msg timestamp="20201112 12:42:14.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040157819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040169708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:14.064" endtime="20201112 12:42:14.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040157819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040169708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:14.412" endtime="20201112 12:42:14.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.426" endtime="20201112 12:42:14.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.055" endtime="20201112 12:42:14.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.050" endtime="20201112 12:42:14.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.443" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:14.441" endtime="20201112 12:42:14.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.452" level="INFO">VALUE: [{'time': 0.040157819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040169708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1889000000001038e-05, 'source_diff': 1.1889000000001038e-05}, {'time': 0.040183472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.040186208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7360000000031803e-06, 'source_diff': 2.7360000000031803e-06}, {'time': 0.040198931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2722999999999207e-05, 'source_diff': 1.2722999999999207e-05}, {'time': 0.040203958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.026999999997728e-06, 'source_diff': 5.026999999997728e-06}, {'time': 0.040206444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4860000000029303e-06, 'source_diff': 2.4860000000029303e-06}, {'time': 0.040214375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.930999999995747e-06, 'source_diff': 7.930999999995747e-06}, {'time': 0.040217806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4310000000051244e-06, 'source_diff': 3.4310000000051244e-06}, {'time': 0.040224403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.5969999999970774e-06, 'source_diff': 6.5969999999970774e-06}, {'time': 0.040239417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5014000000000693e-05, 'source_diff': 1.5014000000000693e-05}, {'time': 0.040244028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.040253819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.791000000002048e-06, 'source_diff': 9.791000000002048e-06}, {'time': 0.040265917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2097999999995113e-05, 'source_diff': 1.2097999999995113e-05}, {'time': 0.040279903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3986000000000554e-05, 'source_diff': 1.3986000000000554e-05}, {'time': 0.040292667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2763999999998443e-05, 'source_diff': 1.2763999999998443e-05}, {'time': 0.040297444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.777000000004417e-06, 'source_diff': 4.777000000004417e-06}, {'time': 0.040309319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1875000000001468e-05, 'source_diff': 1.1875000000001468e-05}, {'time': 0.040316208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888999999996037e-06, 'source_diff': 6.888999999996037e-06}, {'time': 0.040321431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.222999999998645e-06, 'source_diff': 5.222999999998645e-06}, {'time': 0.04033125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.04034375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2499999999998623e-05, 'source_diff': 1.2499999999998623e-05}, {'time': 0.040347111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.040360653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3542000000005272e-05, 'source_diff': 1.3542000000005272e-05}, {'time': 0.040363375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7219999999966715e-06, 'source_diff': 2.7219999999966715e-06}, {'time': 0.040378806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5431000000003248e-05, 'source_diff': 1.5431000000003248e-05}, {'time': 0.040390903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2096999999995639e-05, 'source_diff': 1.2096999999995639e-05}, {'time': 0.040393625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7220000000036104e-06, 'source_diff': 2.7220000000036104e-06}, {'time': 0.040397181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.555999999994841e-06, 'source_diff': 3.555999999994841e-06}, {'time': 0.040412417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5236000000001804e-05, 'source_diff': 1.5236000000001804e-05}, {'time': 0.040415556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.040421819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.262999999999408e-06, 'source_diff': 6.262999999999408e-06}, {'time': 0.040435167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3348000000003302e-05, 'source_diff': 1.3348000000003302e-05}, {'time': 0.040444778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.040447083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.305000000001056e-06, 'source_diff': 2.305000000001056e-06}, {'time': 0.040459792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2708999999999637e-05, 'source_diff': 1.2708999999999637e-05}, {'time': 0.040463764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.04047525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1485999999998053e-05, 'source_diff': 1.1485999999998053e-05}, {'time': 0.040490458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5208000000002664e-05, 'source_diff': 1.5208000000002664e-05}, {'time': 0.040505056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4597999999997613e-05, 'source_diff': 1.4597999999997613e-05}, {'time': 0.040515903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.040523431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.040526764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.333000000001196e-06, 'source_diff': 3.333000000001196e-06}, {'time': 0.040538056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1292000000003022e-05, 'source_diff': 1.1292000000003022e-05}, {'time': 0.040548681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.040560778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2096999999995639e-05, 'source_diff': 1.2096999999995639e-05}, {'time': 0.040564403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.040578931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.040582694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7630000000038466e-06, 'source_diff': 3.7630000000038466e-06}, {'time': 0.040597083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4388999999996599e-05, 'source_diff': 1.4388999999996599e-05}]</msg>
<status status="PASS" starttime="20201112 12:42:14.446" endtime="20201112 12:42:14.454"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.434" endtime="20201112 12:42:14.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:14.489" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:14.458" endtime="20201112 12:42:14.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.499" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:14.497" endtime="20201112 12:42:14.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.506" level="INFO">VALUE: {'sourcediff': [0, 1.1889000000001038e-05, 1.3763999999999443e-05, 2.7360000000031803e-06, 1.2722999999999207e-05, 5.026999999997728e-06, 2.4860000000029303e-06, 7.930999999995747e-06, 3.4310000000051244e-06, 6.5969999999970774e-06, 1.5014000000000693e-05, 4.611000000001586e-06, 9.791000000002048e-06, 1.2097999999995113e-05, 1.3986000000000554e-05, 1.2763999999998443e-05, 4.777000000004417e-06, 1.1875000000001468e-05, 6.888999999996037e-06, 5.222999999998645e-06, 9.819000000001188e-06, 1.2499999999998623e-05, 3.361000000000336e-06, 1.3542000000005272e-05, 2.7219999999966715e-06, 1.5431000000003248e-05, 1.2096999999995639e-05, 2.7220000000036104e-06, 3.555999999994841e-06, 1.5236000000001804e-05, 3.1389999999992257e-06, 6.262999999999408e-06, 1.3348000000003302e-05, 9.610999999999648e-06, 2.305000000001056e-06, 1.2708999999999637e-05, 3.971999999997922e-06, 1.1485999999998053e-05, 1.5208000000002664e-05, 1.4597999999997613e-05, 1.0847000000001328e-05, 7.527999999999702e-06, 3.333000000001196e-06, 1.1292000000003022e-05, 1.0625000000000218e-05, 1.2096999999995639e-05, 3.625000000000156e-06, 1.4527999999999763e-05, 3.7630000000038466e-06, 1.4388999999996599e-05], 'time': [0.040157819, 0.040169708, 0.040183472, 0.040186208, 0.040198931, 0.040203958, 0.040206444, 0.040214375, 0.040217806, 0.040224403, 0.040239417, 0.040244028, 0.040253819, 0.040265917, 0.040279903, 0.040292667, 0.040297444, 0.040309319, 0.040316208, 0.040321431, 0.04033125, 0.04034375, 0.040347111, 0.040360653, 0.040363375, 0.040378806, 0.040390903, 0.040393625, 0.040397181, 0.040412417, 0.040415556, 0.040421819, 0.040435167, 0.040444778, 0.040447083, 0.040459792, 0.040463764, 0.04047525, 0.040490458, 0.040505056, 0.040515903, 0.040523431, 0.040526764, 0.040538056, 0.040548681, 0.040560778, 0.040564403, 0.040578931, 0.040582694, 0.040597083], 'source_diff': [0, 1.1889000000001038e-05, 1.3763999999999443e-05, 2.7360000000031803e-06, 1.2722999999999207e-05, 5.026999999997728e-06, 2.4860000000029303e-06, 7.930999999995747e-06, 3.4310000000051244e-06, 6.5969999999970774e-06, 1.5014000000000693e-05, 4.611000000001586e-06, 9.791000000002048e-06, 1.2097999999995113e-05, 1.3986000000000554e-05, 1.2763999999998443e-05, 4.777000000004417e-06, 1.1875000000001468e-05, 6.888999999996037e-06, 5.222999999998645e-06, 9.819000000001188e-06, 1.2499999999998623e-05, 3.361000000000336e-06, 1.3542000000005272e-05, 2.7219999999966715e-06, 1.5431000000003248e-05, 1.2096999999995639e-05, 2.7220000000036104e-06, 3.555999999994841e-06, 1.5236000000001804e-05, 3.1389999999992257e-06, 6.262999999999408e-06, 1.3348000000003302e-05, 9.610999999999648e-06, 2.305000000001056e-06, 1.2708999999999637e-05, 3.971999999997922e-06, 1.1485999999998053e-05, 1.5208000000002664e-05, 1.4597999999997613e-05, 1.0847000000001328e-05, 7.527999999999702e-06, 3.333000000001196e-06, 1.1292000000003022e-05, 1.0625000000000218e-05, 1.2096999999995639e-05, 3.625000000000156e-06, 1.4527999999999763e-05, 3.7630000000038466e-06, 1.4388999999996599e-05], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:14.502" endtime="20201112 12:42:14.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.491" endtime="20201112 12:42:14.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:14.512" level="INFO">${RESULT} = [{'time': 0.040169708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1889000000001038e-05, 'source_diff': 1.1889000000001038e-05}, {'time': 0.040186208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:14.508" endtime="20201112 12:42:14.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:14.520" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:14.513" endtime="20201112 12:42:14.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.525" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:14.524" endtime="20201112 12:42:14.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.528" level="INFO">VALUE: [1.1889000000001038e-05, 2.7360000000031803e-06, 5.026999999997728e-06, 7.930999999995747e-06, 6.5969999999970774e-06, 4.611000000001586e-06, 1.2097999999995113e-05, 1.2763999999998443e-05, 1.1875000000001468e-05, 5.222999999998645e-06, 1.2499999999998623e-05, 1.3542000000005272e-05, 1.5431000000003248e-05, 2.7220000000036104e-06, 1.5236000000001804e-05, 6.262999999999408e-06, 9.610999999999648e-06, 1.2708999999999637e-05, 1.1485999999998053e-05, 1.4597999999997613e-05, 7.527999999999702e-06, 1.1292000000003022e-05, 1.2096999999995639e-05, 1.4527999999999763e-05, 1.4388999999996599e-05]</msg>
<status status="PASS" starttime="20201112 12:42:14.526" endtime="20201112 12:42:14.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.521" endtime="20201112 12:42:14.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.532" endtime="20201112 12:42:14.534"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:14.536" endtime="20201112 12:42:14.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.534" endtime="20201112 12:42:14.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.530" endtime="20201112 12:42:14.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.996" endtime="20201112 12:42:14.558"></status>
</kw>
<msg timestamp="20201112 12:42:14.559" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.568" endtime="20201112 12:42:14.579"></status>
</kw>
<msg timestamp="20201112 12:42:14.579" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.567" endtime="20201112 12:42:14.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.582" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.580" endtime="20201112 12:42:14.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.584" endtime="20201112 12:42:14.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.563" endtime="20201112 12:42:14.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.561" endtime="20201112 12:42:14.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.595" endtime="20201112 12:42:14.863"></status>
</kw>
<msg timestamp="20201112 12:42:14.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022010278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022021542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:14.594" endtime="20201112 12:42:14.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022010278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022021542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:14.866" endtime="20201112 12:42:14.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.873" endtime="20201112 12:42:14.874"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.590" endtime="20201112 12:42:14.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.588" endtime="20201112 12:42:14.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.881" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:14.880" endtime="20201112 12:42:14.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.885" level="INFO">VALUE: [{'time': 0.022010278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022021542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1264000000000413e-05, 'source_diff': 1.1264000000000413e-05}, {'time': 0.022029472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.929999999999743e-06, 'source_diff': 7.929999999999743e-06}, {'time': 0.022038236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.763999999997912e-06, 'source_diff': 8.763999999997912e-06}, {'time': 0.022048458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0222000000000703e-05, 'source_diff': 1.0222000000000703e-05}, {'time': 0.022061264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2806000000000622e-05, 'source_diff': 1.2806000000000622e-05}, {'time': 0.02206725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.022079778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2528000000001233e-05, 'source_diff': 1.2528000000001233e-05}, {'time': 0.022082083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3049999999975868e-06, 'source_diff': 2.3049999999975868e-06}, {'time': 0.022097292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5209000000002137e-05, 'source_diff': 1.5209000000002137e-05}, {'time': 0.022102111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.022110042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.930999999999216e-06, 'source_diff': 7.930999999999216e-06}, {'time': 0.022123792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.022132181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.389000000001007e-06, 'source_diff': 8.389000000001007e-06}, {'time': 0.022137375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.022149889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.022154889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.000000000001531e-06, 'source_diff': 5.000000000001531e-06}, {'time': 0.022166153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1264000000000413e-05, 'source_diff': 1.1264000000000413e-05}, {'time': 0.022169917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.022181389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.022193292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1903000000000608e-05, 'source_diff': 1.1903000000000608e-05}, {'time': 0.022204139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.022213111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.022225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1889000000001038e-05, 'source_diff': 1.1889000000001038e-05}, {'time': 0.022238403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3402999999998638e-05, 'source_diff': 1.3402999999998638e-05}, {'time': 0.022252958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.455499999999943e-05, 'source_diff': 1.455499999999943e-05}, {'time': 0.022262333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.022276722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4389000000000068e-05, 'source_diff': 1.4389000000000068e-05}, {'time': 0.022283819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.097000000001047e-06, 'source_diff': 7.097000000001047e-06}, {'time': 0.022294042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0223000000000176e-05, 'source_diff': 1.0223000000000176e-05}, {'time': 0.022300931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.022315139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4208000000001664e-05, 'source_diff': 1.4208000000001664e-05}, {'time': 0.022324944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.804999999998149e-06, 'source_diff': 9.804999999998149e-06}, {'time': 0.022327875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.931000000001155e-06, 'source_diff': 2.931000000001155e-06}, {'time': 0.022330389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5139999999986007e-06, 'source_diff': 2.5139999999986007e-06}, {'time': 0.022336444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.055000000001337e-06, 'source_diff': 6.055000000001337e-06}, {'time': 0.022346444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.999999999999593e-06, 'source_diff': 9.999999999999593e-06}, {'time': 0.022361667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5222999999998238e-05, 'source_diff': 1.5222999999998238e-05}, {'time': 0.022373972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2305000000000649e-05, 'source_diff': 1.2305000000000649e-05}, {'time': 0.022382125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.022392125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.999999999999593e-06, 'source_diff': 9.999999999999593e-06}, {'time': 0.022402556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0431000000001717e-05, 'source_diff': 1.0431000000001717e-05}, {'time': 0.022410903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.022424889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3986000000000554e-05, 'source_diff': 1.3986000000000554e-05}, {'time': 0.022433639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.749999999998342e-06, 'source_diff': 8.749999999998342e-06}, {'time': 0.022438653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.022444736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.022448056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3200000000011e-06, 'source_diff': 3.3200000000011e-06}, {'time': 0.022463097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.504100000000036e-05, 'source_diff': 1.504100000000036e-05}, {'time': 0.022471056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.958999999998356e-06, 'source_diff': 7.958999999998356e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:14.882" endtime="20201112 12:42:14.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.877" endtime="20201112 12:42:14.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:14.902" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:14.888" endtime="20201112 12:42:14.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.907" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:14.906" endtime="20201112 12:42:14.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.911" level="INFO">VALUE: {'sourcediff': [0, 1.1264000000000413e-05, 7.929999999999743e-06, 8.763999999997912e-06, 1.0222000000000703e-05, 1.2806000000000622e-05, 5.985999999999492e-06, 1.2528000000001233e-05, 2.3049999999975868e-06, 1.5209000000002137e-05, 4.818999999999657e-06, 7.930999999999216e-06, 1.3749999999999873e-05, 8.389000000001007e-06, 5.194000000000032e-06, 1.2513999999998193e-05, 5.000000000001531e-06, 1.1264000000000413e-05, 3.763999999999851e-06, 1.1471999999998483e-05, 1.1903000000000608e-05, 1.0847000000001328e-05, 8.971999999999453e-06, 1.1889000000001038e-05, 1.3402999999998638e-05, 1.455499999999943e-05, 9.374999999998967e-06, 1.4389000000000068e-05, 7.097000000001047e-06, 1.0223000000000176e-05, 6.888999999999507e-06, 1.4208000000001664e-05, 9.804999999998149e-06, 2.931000000001155e-06, 2.5139999999986007e-06, 6.055000000001337e-06, 9.999999999999593e-06, 1.5222999999998238e-05, 1.2305000000000649e-05, 8.153000000000327e-06, 9.999999999999593e-06, 1.0431000000001717e-05, 8.346999999998828e-06, 1.3986000000000554e-05, 8.749999999998342e-06, 5.014000000001101e-06, 6.083000000000477e-06, 3.3200000000011e-06, 1.504100000000036e-05, 7.958999999998356e-06], 'time': [0.022010278, 0.022021542, 0.022029472, 0.022038236, 0.022048458, 0.022061264, 0.02206725, 0.022079778, 0.022082083, 0.022097292, 0.022102111, 0.022110042, 0.022123792, 0.022132181, 0.022137375, 0.022149889, 0.022154889, 0.022166153, 0.022169917, 0.022181389, 0.022193292, 0.022204139, 0.022213111, 0.022225, 0.022238403, 0.022252958, 0.022262333, 0.022276722, 0.022283819, 0.022294042, 0.022300931, 0.022315139, 0.022324944, 0.022327875, 0.022330389, 0.022336444, 0.022346444, 0.022361667, 0.022373972, 0.022382125, 0.022392125, 0.022402556, 0.022410903, 0.022424889, 0.022433639, 0.022438653, 0.022444736, 0.022448056, 0.022463097, 0.022471056], 'source_diff': [0, 1.1264000000000413e-05, 7.929999999999743e-06, 8.763999999997912e-06, 1.0222000000000703e-05, 1.2806000000000622e-05, 5.985999999999492e-06, 1.2528000000001233e-05, 2.3049999999975868e-06, 1.5209000000002137e-05, 4.818999999999657e-06, 7.930999999999216e-06, 1.3749999999999873e-05, 8.389000000001007e-06, 5.194000000000032e-06, 1.2513999999998193e-05, 5.000000000001531e-06, 1.1264000000000413e-05, 3.763999999999851e-06, 1.1471999999998483e-05, 1.1903000000000608e-05, 1.0847000000001328e-05, 8.971999999999453e-06, 1.1889000000001038e-05, 1.3402999999998638e-05, 1.455499999999943e-05, 9.374999999998967e-06, 1.4389000000000068e-05, 7.097000000001047e-06, 1.0223000000000176e-05, 6.888999999999507e-06, 1.4208000000001664e-05, 9.804999999998149e-06, 2.931000000001155e-06, 2.5139999999986007e-06, 6.055000000001337e-06, 9.999999999999593e-06, 1.5222999999998238e-05, 1.2305000000000649e-05, 8.153000000000327e-06, 9.999999999999593e-06, 1.0431000000001717e-05, 8.346999999998828e-06, 1.3986000000000554e-05, 8.749999999998342e-06, 5.014000000001101e-06, 6.083000000000477e-06, 3.3200000000011e-06, 1.504100000000036e-05, 7.958999999998356e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:14.908" endtime="20201112 12:42:14.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.903" endtime="20201112 12:42:14.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:14.916" level="INFO">${RESULT} = [{'time': 0.022021542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1264000000000413e-05, 'source_diff': 1.1264000000000413e-05}, {'time': 0.022038236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:14.913" endtime="20201112 12:42:14.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:14.925" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:14.917" endtime="20201112 12:42:14.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.930" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:14.929" endtime="20201112 12:42:14.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.933" level="INFO">VALUE: [1.1264000000000413e-05, 8.763999999997912e-06, 1.2806000000000622e-05, 1.2528000000001233e-05, 1.5209000000002137e-05, 7.930999999999216e-06, 8.389000000001007e-06, 1.2513999999998193e-05, 1.1264000000000413e-05, 1.1471999999998483e-05, 1.0847000000001328e-05, 1.1889000000001038e-05, 1.455499999999943e-05, 1.4389000000000068e-05, 1.0223000000000176e-05, 1.4208000000001664e-05, 2.931000000001155e-06, 6.055000000001337e-06, 1.5222999999998238e-05, 8.153000000000327e-06, 1.0431000000001717e-05, 1.3986000000000554e-05, 5.014000000001101e-06, 3.3200000000011e-06, 7.958999999998356e-06]</msg>
<status status="PASS" starttime="20201112 12:42:14.931" endtime="20201112 12:42:14.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.926" endtime="20201112 12:42:14.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.937" endtime="20201112 12:42:14.939"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:14.941" endtime="20201112 12:42:14.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.939" endtime="20201112 12:42:14.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.935" endtime="20201112 12:42:14.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.559" endtime="20201112 12:42:14.963"></status>
</kw>
<msg timestamp="20201112 12:42:14.963" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.973" endtime="20201112 12:42:14.984"></status>
</kw>
<msg timestamp="20201112 12:42:14.984" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.971" endtime="20201112 12:42:14.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.987" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.985" endtime="20201112 12:42:14.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.988" endtime="20201112 12:42:14.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.968" endtime="20201112 12:42:14.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.965" endtime="20201112 12:42:14.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.000" endtime="20201112 12:42:15.311"></status>
</kw>
<msg timestamp="20201112 12:42:15.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021463042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:14.998" endtime="20201112 12:42:15.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021463042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:15.318" endtime="20201112 12:42:15.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.331" endtime="20201112 12:42:15.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.995" endtime="20201112 12:42:15.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.993" endtime="20201112 12:42:15.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.350" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:15.348" endtime="20201112 12:42:15.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.359" level="INFO">VALUE: [{'time': 0.021463042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.957999999999883e-06, 'source_diff': 8.957999999999883e-06}, {'time': 0.021477306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.021492278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4971999999998514e-05, 'source_diff': 1.4971999999998514e-05}, {'time': 0.021498292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.021511236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2944000000000844e-05, 'source_diff': 1.2944000000000844e-05}, {'time': 0.021525611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4375000000000498e-05, 'source_diff': 1.4375000000000498e-05}, {'time': 0.021534389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.021549611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5221999999998764e-05, 'source_diff': 1.5221999999998764e-05}, {'time': 0.021554847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.021564014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.167000000000897e-06, 'source_diff': 9.167000000000897e-06}, {'time': 0.021567778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.02158325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5471999999999014e-05, 'source_diff': 1.5471999999999014e-05}, {'time': 0.021593431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0181000000001467e-05, 'source_diff': 1.0181000000001467e-05}, {'time': 0.021597431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.021608694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1263000000000939e-05, 'source_diff': 1.1263000000000939e-05}, {'time': 0.021612847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.021625153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2306000000000122e-05, 'source_diff': 1.2306000000000122e-05}, {'time': 0.021640375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5221999999998764e-05, 'source_diff': 1.5221999999998764e-05}, {'time': 0.021651028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0652999999999357e-05, 'source_diff': 1.0652999999999357e-05}, {'time': 0.021655625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.021670014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4389000000000068e-05, 'source_diff': 1.4389000000000068e-05}, {'time': 0.021681069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1054999999999399e-05, 'source_diff': 1.1054999999999399e-05}, {'time': 0.02169525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4180999999998528e-05, 'source_diff': 1.4180999999998528e-05}, {'time': 0.021707597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2346999999999358e-05, 'source_diff': 1.2346999999999358e-05}, {'time': 0.021715903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.306000000003061e-06, 'source_diff': 8.306000000003061e-06}, {'time': 0.021719458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.554999999998837e-06, 'source_diff': 3.554999999998837e-06}, {'time': 0.021722208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.021729903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.694999999998536e-06, 'source_diff': 7.694999999998536e-06}, {'time': 0.021736583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.680000000001962e-06, 'source_diff': 6.680000000001962e-06}, {'time': 0.021742847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.021757681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4834000000001762e-05, 'source_diff': 1.4834000000001762e-05}, {'time': 0.0217685, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0818999999998719e-05, 'source_diff': 1.0818999999998719e-05}, {'time': 0.021771014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.021775681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.021780417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.021793778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3360999999999928e-05, 'source_diff': 1.3360999999999928e-05}, {'time': 0.021807958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4179999999999054e-05, 'source_diff': 1.4179999999999054e-05}, {'time': 0.021816722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.021820694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.972000000001391e-06, 'source_diff': 3.972000000001391e-06}, {'time': 0.021832167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1472999999997957e-05, 'source_diff': 1.1472999999997957e-05}, {'time': 0.021842194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0026999999999259e-05, 'source_diff': 1.0026999999999259e-05}, {'time': 0.021855111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2917000000001178e-05, 'source_diff': 1.2917000000001178e-05}, {'time': 0.021859542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.021867667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.125000000001187e-06, 'source_diff': 8.125000000001187e-06}, {'time': 0.021880792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3124999999999248e-05, 'source_diff': 1.3124999999999248e-05}, {'time': 0.021884972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.021897681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2708999999999637e-05, 'source_diff': 1.2708999999999637e-05}, {'time': 0.021907486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.805000000001618e-06, 'source_diff': 9.805000000001618e-06}, {'time': 0.021910431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.945000000000725e-06, 'source_diff': 2.945000000000725e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:15.353" endtime="20201112 12:42:15.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.342" endtime="20201112 12:42:15.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:15.396" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:15.365" endtime="20201112 12:42:15.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.406" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:15.404" endtime="20201112 12:42:15.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.414" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 8.957999999999883e-06, 5.306000000000061e-06, 1.4971999999998514e-05, 6.0139999999986316e-06, 1.2944000000000844e-05, 1.4375000000000498e-05, 8.778000000000952e-06, 1.5221999999998764e-05, 5.235999999998742e-06, 9.167000000000897e-06, 3.763999999999851e-06, 1.5471999999999014e-05, 1.0181000000001467e-05, 4.000000000000531e-06, 1.1263000000000939e-05, 4.152999999999796e-06, 1.2306000000000122e-05, 1.5221999999998764e-05, 1.0652999999999357e-05, 4.597000000002016e-06, 1.4389000000000068e-05, 1.1054999999999399e-05, 1.4180999999998528e-05, 1.2346999999999358e-05, 8.306000000003061e-06, 3.554999999998837e-06, 2.749999999999281e-06, 7.694999999998536e-06, 6.680000000001962e-06, 6.2639999999988816e-06, 1.4834000000001762e-05, 1.0818999999998719e-05, 2.51400000000207e-06, 4.666999999999866e-06, 4.735999999998242e-06, 1.3360999999999928e-05, 1.4179999999999054e-05, 8.764000000001382e-06, 3.972000000001391e-06, 1.1472999999997957e-05, 1.0026999999999259e-05, 1.2917000000001178e-05, 4.430999999999186e-06, 8.125000000001187e-06, 1.3124999999999248e-05, 4.179999999999462e-06, 1.2708999999999637e-05, 9.805000000001618e-06, 2.945000000000725e-06], 'time': [0.021463042, 0.021472, 0.021477306, 0.021492278, 0.021498292, 0.021511236, 0.021525611, 0.021534389, 0.021549611, 0.021554847, 0.021564014, 0.021567778, 0.02158325, 0.021593431, 0.021597431, 0.021608694, 0.021612847, 0.021625153, 0.021640375, 0.021651028, 0.021655625, 0.021670014, 0.021681069, 0.02169525, 0.021707597, 0.021715903, 0.021719458, 0.021722208, 0.021729903, 0.021736583, 0.021742847, 0.021757681, 0.0217685, 0.021771014, 0.021775681, 0.021780417, 0.021793778, 0.021807958, 0.021816722, 0.021820694, 0.021832167, 0.021842194, 0.021855111, 0.021859542, 0.021867667, 0.021880792, 0.021884972, 0.021897681, 0.021907486, 0.021910431], 'source_diff': [0, 8.957999999999883e-06, 5.306000000000061e-06, 1.4971999999998514e-05, 6.0139999999986316e-06, 1.2944000000000844e-05, 1.4375000000000498e-05, 8.778000000000952e-06, 1.5221999999998764e-05, 5.235999999998742e-06, 9.167000000000897e-06, 3.763999999999851e-06, 1.5471999999999014e-05, 1.0181000000001467e-05, 4.000000000000531e-06, 1.1263000000000939e-05, 4.152999999999796e-06, 1.2306000000000122e-05, 1.5221999999998764e-05, 1.0652999999999357e-05, 4.597000000002016e-06, 1.4389000000000068e-05, 1.1054999999999399e-05, 1.4180999999998528e-05, 1.2346999999999358e-05, 8.306000000003061e-06, 3.554999999998837e-06, 2.749999999999281e-06, 7.694999999998536e-06, 6.680000000001962e-06, 6.2639999999988816e-06, 1.4834000000001762e-05, 1.0818999999998719e-05, 2.51400000000207e-06, 4.666999999999866e-06, 4.735999999998242e-06, 1.3360999999999928e-05, 1.4179999999999054e-05, 8.764000000001382e-06, 3.972000000001391e-06, 1.1472999999997957e-05, 1.0026999999999259e-05, 1.2917000000001178e-05, 4.430999999999186e-06, 8.125000000001187e-06, 1.3124999999999248e-05, 4.179999999999462e-06, 1.2708999999999637e-05, 9.805000000001618e-06, 2.945000000000725e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:15.409" endtime="20201112 12:42:15.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.398" endtime="20201112 12:42:15.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:15.426" level="INFO">${RESULT} = [{'time': 0.021472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.957999999999883e-06, 'source_diff': 8.957999999999883e-06}, {'time': 0.021492278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:42:15.418" endtime="20201112 12:42:15.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:15.446" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:15.428" endtime="20201112 12:42:15.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.457" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:15.454" endtime="20201112 12:42:15.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.462" level="INFO">VALUE: [8.957999999999883e-06, 1.4971999999998514e-05, 1.2944000000000844e-05, 8.778000000000952e-06, 5.235999999998742e-06, 3.763999999999851e-06, 1.0181000000001467e-05, 1.1263000000000939e-05, 1.2306000000000122e-05, 1.0652999999999357e-05, 1.4389000000000068e-05, 1.4180999999998528e-05, 8.306000000003061e-06, 2.749999999999281e-06, 6.680000000001962e-06, 1.4834000000001762e-05, 2.51400000000207e-06, 4.735999999998242e-06, 1.4179999999999054e-05, 3.972000000001391e-06, 1.0026999999999259e-05, 4.430999999999186e-06, 1.3124999999999248e-05, 1.2708999999999637e-05, 2.945000000000725e-06]</msg>
<status status="PASS" starttime="20201112 12:42:15.459" endtime="20201112 12:42:15.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.448" endtime="20201112 12:42:15.465"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.472" endtime="20201112 12:42:15.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:15.481" endtime="20201112 12:42:15.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.477" endtime="20201112 12:42:15.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.467" endtime="20201112 12:42:15.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.964" endtime="20201112 12:42:15.508"></status>
</kw>
<msg timestamp="20201112 12:42:15.508" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.529" endtime="20201112 12:42:15.544"></status>
</kw>
<msg timestamp="20201112 12:42:15.545" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:15.526" endtime="20201112 12:42:15.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.552" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:15.547" endtime="20201112 12:42:15.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.554" endtime="20201112 12:42:15.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.518" endtime="20201112 12:42:15.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.513" endtime="20201112 12:42:15.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.581" endtime="20201112 12:42:15.918"></status>
</kw>
<msg timestamp="20201112 12:42:15.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039043611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03904925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:15.576" endtime="20201112 12:42:15.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039043611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03904925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:15.925" endtime="20201112 12:42:15.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.938" endtime="20201112 12:42:15.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.568" endtime="20201112 12:42:15.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.563" endtime="20201112 12:42:15.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.956" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:15.954" endtime="20201112 12:42:15.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.965" level="INFO">VALUE: [{'time': 0.039043611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03904925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.039057194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.944000000002782e-06, 'source_diff': 7.944000000002782e-06}, {'time': 0.039068264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1069999999994973e-05, 'source_diff': 1.1069999999994973e-05}, {'time': 0.039076375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.111000000005086e-06, 'source_diff': 8.111000000005086e-06}, {'time': 0.039090764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4388999999996599e-05, 'source_diff': 1.4388999999996599e-05}, {'time': 0.039101403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.039106069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666000000000392e-06, 'source_diff': 4.666000000000392e-06}, {'time': 0.039108514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4449999999967553e-06, 'source_diff': 2.4449999999967553e-06}, {'time': 0.039121236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2721999999999734e-05, 'source_diff': 1.2721999999999734e-05}, {'time': 0.039124792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.55600000000178e-06, 'source_diff': 3.55600000000178e-06}, {'time': 0.039137306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.039148569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1263000000004408e-05, 'source_diff': 1.1263000000004408e-05}, {'time': 0.039160889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2319999999996223e-05, 'source_diff': 1.2319999999996223e-05}, {'time': 0.039167986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.097000000004516e-06, 'source_diff': 7.097000000004516e-06}, {'time': 0.039174875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.888999999996037e-06, 'source_diff': 6.888999999996037e-06}, {'time': 0.039181125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.039191347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0222000000004172e-05, 'source_diff': 1.0222000000004172e-05}, {'time': 0.039200736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.039214097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3361000000003398e-05, 'source_diff': 1.3361000000003398e-05}, {'time': 0.039218694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.596999999995077e-06, 'source_diff': 4.596999999995077e-06}, {'time': 0.039230167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1473000000004896e-05, 'source_diff': 1.1473000000004896e-05}, {'time': 0.039235389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.039242278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.888999999996037e-06, 'source_diff': 6.888999999996037e-06}, {'time': 0.039248181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.039251542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.039264194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2652000000001884e-05, 'source_diff': 1.2652000000001884e-05}, {'time': 0.039273, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.039281306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.039294028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2721999999999734e-05, 'source_diff': 1.2721999999999734e-05}, {'time': 0.039299292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.039312806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3513999999999193e-05, 'source_diff': 1.3513999999999193e-05}, {'time': 0.039322, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000004032e-06, 'source_diff': 9.194000000004032e-06}, {'time': 0.039327625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.624999999995217e-06, 'source_diff': 5.624999999995217e-06}, {'time': 0.039338069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0444000000005282e-05, 'source_diff': 1.0444000000005282e-05}, {'time': 0.039351625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3555999999997903e-05, 'source_diff': 1.3555999999997903e-05}, {'time': 0.039366861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5236000000001804e-05, 'source_diff': 1.5236000000001804e-05}, {'time': 0.039373111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.039383542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0430999999998247e-05, 'source_diff': 1.0430999999998247e-05}, {'time': 0.039386903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.039391278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.039396083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8049999999966175e-06, 'source_diff': 4.8049999999966175e-06}, {'time': 0.039404069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.039417569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3499999999999623e-05, 'source_diff': 1.3499999999999623e-05}, {'time': 0.03942425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.681000000001436e-06, 'source_diff': 6.681000000001436e-06}, {'time': 0.039438014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.039448917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.039452208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2910000000024864e-06, 'source_diff': 3.2910000000024864e-06}, {'time': 0.039461417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.208999999996137e-06, 'source_diff': 9.208999999996137e-06}, {'time': 0.039471417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0000000000003062e-05, 'source_diff': 1.0000000000003062e-05}]</msg>
<status status="PASS" starttime="20201112 12:42:15.958" endtime="20201112 12:42:15.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.947" endtime="20201112 12:42:15.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:16.002" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:15.970" endtime="20201112 12:42:16.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.012" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:16.009" endtime="20201112 12:42:16.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.019" level="INFO">VALUE: {'sourcediff': [0, 5.639000000001726e-06, 7.944000000002782e-06, 1.1069999999994973e-05, 8.111000000005086e-06, 1.4388999999996599e-05, 1.0638999999999788e-05, 4.666000000000392e-06, 2.4449999999967553e-06, 1.2721999999999734e-05, 3.55600000000178e-06, 1.2513999999998193e-05, 1.1263000000004408e-05, 1.2319999999996223e-05, 7.097000000004516e-06, 6.888999999996037e-06, 6.249999999999312e-06, 1.0222000000004172e-05, 9.388999999998537e-06, 1.3361000000003398e-05, 4.596999999995077e-06, 1.1473000000004896e-05, 5.221999999999172e-06, 6.888999999996037e-06, 5.903000000001546e-06, 3.361000000000336e-06, 1.2652000000001884e-05, 8.806000000000092e-06, 8.305999999999591e-06, 1.2721999999999734e-05, 5.2639999999978815e-06, 1.3513999999999193e-05, 9.194000000004032e-06, 5.624999999995217e-06, 1.0444000000005282e-05, 1.3555999999997903e-05, 1.5236000000001804e-05, 6.249999999999312e-06, 1.0430999999998247e-05, 3.361000000000336e-06, 4.375000000000906e-06, 4.8049999999966175e-06, 7.986000000001492e-06, 1.3499999999999623e-05, 6.681000000001436e-06, 1.3763999999999443e-05, 1.0902999999999607e-05, 3.2910000000024864e-06, 9.208999999996137e-06, 1.0000000000003062e-05], 'time': [0.039043611, 0.03904925, 0.039057194, 0.039068264, 0.039076375, 0.039090764, 0.039101403, 0.039106069, 0.039108514, 0.039121236, 0.039124792, 0.039137306, 0.039148569, 0.039160889, 0.039167986, 0.039174875, 0.039181125, 0.039191347, 0.039200736, 0.039214097, 0.039218694, 0.039230167, 0.039235389, 0.039242278, 0.039248181, 0.039251542, 0.039264194, 0.039273, 0.039281306, 0.039294028, 0.039299292, 0.039312806, 0.039322, 0.039327625, 0.039338069, 0.039351625, 0.039366861, 0.039373111, 0.039383542, 0.039386903, 0.039391278, 0.039396083, 0.039404069, 0.039417569, 0.03942425, 0.039438014, 0.039448917, 0.039452208, 0.039461417, 0.039471417], 'source_diff': [0, 5.639000000001726e-06, 7.944000000002782e-06, 1.1069999999994973e-05, 8.111000000005086e-06, 1.4388999999996599e-05, 1.0638999999999788e-05, 4.666000000000392e-06, 2.4449999999967553e-06, 1.2721999999999734e-05, 3.55600000000178e-06, 1.2513999999998193e-05, 1.1263000000004408e-05, 1.2319999999996223e-05, 7.097000000004516e-06, 6.888999999996037e-06, 6.249999999999312e-06, 1.0222000000004172e-05, 9.388999999998537e-06, 1.3361000000003398e-05, 4.596999999995077e-06, 1.1473000000004896e-05, 5.221999999999172e-06, 6.888999999996037e-06, 5.903000000001546e-06, 3.361000000000336e-06, 1.2652000000001884e-05, 8.806000000000092e-06, 8.305999999999591e-06, 1.2721999999999734e-05, 5.2639999999978815e-06, 1.3513999999999193e-05, 9.194000000004032e-06, 5.624999999995217e-06, 1.0444000000005282e-05, 1.3555999999997903e-05, 1.5236000000001804e-05, 6.249999999999312e-06, 1.0430999999998247e-05, 3.361000000000336e-06, 4.375000000000906e-06, 4.8049999999966175e-06, 7.986000000001492e-06, 1.3499999999999623e-05, 6.681000000001436e-06, 1.3763999999999443e-05, 1.0902999999999607e-05, 3.2910000000024864e-06, 9.208999999996137e-06, 1.0000000000003062e-05], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:16.014" endtime="20201112 12:42:16.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.004" endtime="20201112 12:42:16.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:16.032" level="INFO">${RESULT} = [{'time': 0.03904925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.039068264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:42:16.024" endtime="20201112 12:42:16.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:16.051" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:16.034" endtime="20201112 12:42:16.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.062" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:16.060" endtime="20201112 12:42:16.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.068" level="INFO">VALUE: [5.639000000001726e-06, 1.1069999999994973e-05, 1.4388999999996599e-05, 4.666000000000392e-06, 1.2721999999999734e-05, 1.2513999999998193e-05, 1.2319999999996223e-05, 6.888999999996037e-06, 1.0222000000004172e-05, 1.3361000000003398e-05, 1.1473000000004896e-05, 6.888999999996037e-06, 3.361000000000336e-06, 8.806000000000092e-06, 1.2721999999999734e-05, 1.3513999999999193e-05, 5.624999999995217e-06, 1.3555999999997903e-05, 6.249999999999312e-06, 3.361000000000336e-06, 4.8049999999966175e-06, 1.3499999999999623e-05, 1.3763999999999443e-05, 3.2910000000024864e-06, 1.0000000000003062e-05]</msg>
<status status="PASS" starttime="20201112 12:42:16.065" endtime="20201112 12:42:16.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.053" endtime="20201112 12:42:16.071"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.078" endtime="20201112 12:42:16.081"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:16.087" endtime="20201112 12:42:16.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.082" endtime="20201112 12:42:16.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.073" endtime="20201112 12:42:16.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.509" endtime="20201112 12:42:16.114"></status>
</kw>
<msg timestamp="20201112 12:42:16.114" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.137" endtime="20201112 12:42:16.151"></status>
</kw>
<msg timestamp="20201112 12:42:16.152" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.133" endtime="20201112 12:42:16.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.159" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.155" endtime="20201112 12:42:16.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.161" endtime="20201112 12:42:16.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.125" endtime="20201112 12:42:16.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.119" endtime="20201112 12:42:16.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.188" endtime="20201112 12:42:16.527"></status>
</kw>
<msg timestamp="20201112 12:42:16.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041379486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041383444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:16.185" endtime="20201112 12:42:16.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041379486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041383444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:16.534" endtime="20201112 12:42:16.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.548" endtime="20201112 12:42:16.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.175" endtime="20201112 12:42:16.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.170" endtime="20201112 12:42:16.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.565" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:16.563" endtime="20201112 12:42:16.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.574" level="INFO">VALUE: [{'time': 0.041379486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041383444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.041389542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.09800000000299e-06, 'source_diff': 6.09800000000299e-06}, {'time': 0.041399514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.971999999996983e-06, 'source_diff': 9.971999999996983e-06}, {'time': 0.041403292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.77800000000289e-06, 'source_diff': 3.77800000000289e-06}, {'time': 0.041413722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0429999999998774e-05, 'source_diff': 1.0429999999998774e-05}, {'time': 0.041418181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.458999999998325e-06, 'source_diff': 4.458999999998325e-06}, {'time': 0.041421056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.041425222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.041433986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.041444833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.041447986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.041456333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.041467792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1459000000005326e-05, 'source_diff': 1.1459000000005326e-05}, {'time': 0.041479264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.041489292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0027999999995263e-05, 'source_diff': 1.0027999999995263e-05}, {'time': 0.041497, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.708000000002102e-06, 'source_diff': 7.708000000002102e-06}, {'time': 0.041509528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2527999999997763e-05, 'source_diff': 1.2527999999997763e-05}, {'time': 0.041523486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3958000000001414e-05, 'source_diff': 1.3958000000001414e-05}, {'time': 0.041529556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.07000000000385e-06, 'source_diff': 6.07000000000385e-06}, {'time': 0.041535611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.054999999997868e-06, 'source_diff': 6.054999999997868e-06}, {'time': 0.041549167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3555999999997903e-05, 'source_diff': 1.3555999999997903e-05}, {'time': 0.041563569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4402000000003634e-05, 'source_diff': 1.4402000000003634e-05}, {'time': 0.041577958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4388999999996599e-05, 'source_diff': 1.4388999999996599e-05}, {'time': 0.041593181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5223000000001707e-05, 'source_diff': 1.5223000000001707e-05}, {'time': 0.041601097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.915999999996703e-06, 'source_diff': 7.915999999996703e-06}, {'time': 0.041605069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9720000000048605e-06, 'source_diff': 3.9720000000048605e-06}, {'time': 0.041613625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.041625931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2305999999996653e-05, 'source_diff': 1.2305999999996653e-05}, {'time': 0.041628681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7500000000027502e-06, 'source_diff': 2.7500000000027502e-06}, {'time': 0.041640792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2111000000002148e-05, 'source_diff': 1.2111000000002148e-05}, {'time': 0.041648903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.110999999998147e-06, 'source_diff': 8.110999999998147e-06}, {'time': 0.041661, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2096999999995639e-05, 'source_diff': 1.2096999999995639e-05}, {'time': 0.041675833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4833000000005758e-05, 'source_diff': 1.4833000000005758e-05}, {'time': 0.041681444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.610999999995647e-06, 'source_diff': 5.610999999995647e-06}, {'time': 0.041686667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.222999999998645e-06, 'source_diff': 5.222999999998645e-06}, {'time': 0.041694181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.041708569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4388000000004064e-05, 'source_diff': 1.4388000000004064e-05}, {'time': 0.041718167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597999999999551e-06, 'source_diff': 9.597999999999551e-06}, {'time': 0.041724236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0689999999974376e-06, 'source_diff': 6.0689999999974376e-06}, {'time': 0.041738194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3958000000001414e-05, 'source_diff': 1.3958000000001414e-05}, {'time': 0.041740917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.723000000003084e-06, 'source_diff': 2.723000000003084e-06}, {'time': 0.041747389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.041756181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.041759097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.915999999998642e-06, 'source_diff': 2.915999999998642e-06}, {'time': 0.041762861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7639999999963814e-06, 'source_diff': 3.7639999999963814e-06}, {'time': 0.04177225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.041782458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0208000000004602e-05, 'source_diff': 1.0208000000004602e-05}, {'time': 0.041786014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.55600000000178e-06, 'source_diff': 3.55600000000178e-06}, {'time': 0.041791486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:16.568" endtime="20201112 12:42:16.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.556" endtime="20201112 12:42:16.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:16.613" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:16.580" endtime="20201112 12:42:16.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.623" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:16.620" endtime="20201112 12:42:16.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.630" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 3.957999999998352e-06, 6.09800000000299e-06, 9.971999999996983e-06, 3.77800000000289e-06, 1.0429999999998774e-05, 4.458999999998325e-06, 2.874999999999406e-06, 4.165999999999892e-06, 8.764000000001382e-06, 1.0847000000001328e-05, 3.1529999999987957e-06, 8.346999999998828e-06, 1.1459000000005326e-05, 1.1471999999998483e-05, 1.0027999999995263e-05, 7.708000000002102e-06, 1.2527999999997763e-05, 1.3958000000001414e-05, 6.07000000000385e-06, 6.054999999997868e-06, 1.3555999999997903e-05, 1.4402000000003634e-05, 1.4388999999996599e-05, 1.5223000000001707e-05, 7.915999999996703e-06, 3.9720000000048605e-06, 8.555999999999842e-06, 1.2305999999996653e-05, 2.7500000000027502e-06, 1.2111000000002148e-05, 8.110999999998147e-06, 1.2096999999995639e-05, 1.4833000000005758e-05, 5.610999999995647e-06, 5.222999999998645e-06, 7.514000000000132e-06, 1.4388000000004064e-05, 9.597999999999551e-06, 6.0689999999974376e-06, 1.3958000000001414e-05, 2.723000000003084e-06, 6.472000000000422e-06, 8.792000000000522e-06, 2.915999999998642e-06, 3.7639999999963814e-06, 9.388999999998537e-06, 1.0208000000004602e-05, 3.55600000000178e-06, 5.471999999999422e-06], 'time': [0.041379486, 0.041383444, 0.041389542, 0.041399514, 0.041403292, 0.041413722, 0.041418181, 0.041421056, 0.041425222, 0.041433986, 0.041444833, 0.041447986, 0.041456333, 0.041467792, 0.041479264, 0.041489292, 0.041497, 0.041509528, 0.041523486, 0.041529556, 0.041535611, 0.041549167, 0.041563569, 0.041577958, 0.041593181, 0.041601097, 0.041605069, 0.041613625, 0.041625931, 0.041628681, 0.041640792, 0.041648903, 0.041661, 0.041675833, 0.041681444, 0.041686667, 0.041694181, 0.041708569, 0.041718167, 0.041724236, 0.041738194, 0.041740917, 0.041747389, 0.041756181, 0.041759097, 0.041762861, 0.04177225, 0.041782458, 0.041786014, 0.041791486], 'source_diff': [0, 3.957999999998352e-06, 6.09800000000299e-06, 9.971999999996983e-06, 3.77800000000289e-06, 1.0429999999998774e-05, 4.458999999998325e-06, 2.874999999999406e-06, 4.165999999999892e-06, 8.764000000001382e-06, 1.0847000000001328e-05, 3.1529999999987957e-06, 8.346999999998828e-06, 1.1459000000005326e-05, 1.1471999999998483e-05, 1.0027999999995263e-05, 7.708000000002102e-06, 1.2527999999997763e-05, 1.3958000000001414e-05, 6.07000000000385e-06, 6.054999999997868e-06, 1.3555999999997903e-05, 1.4402000000003634e-05, 1.4388999999996599e-05, 1.5223000000001707e-05, 7.915999999996703e-06, 3.9720000000048605e-06, 8.555999999999842e-06, 1.2305999999996653e-05, 2.7500000000027502e-06, 1.2111000000002148e-05, 8.110999999998147e-06, 1.2096999999995639e-05, 1.4833000000005758e-05, 5.610999999995647e-06, 5.222999999998645e-06, 7.514000000000132e-06, 1.4388000000004064e-05, 9.597999999999551e-06, 6.0689999999974376e-06, 1.3958000000001414e-05, 2.723000000003084e-06, 6.472000000000422e-06, 8.792000000000522e-06, 2.915999999998642e-06, 3.7639999999963814e-06, 9.388999999998537e-06, 1.0208000000004602e-05, 3.55600000000178e-06, 5.471999999999422e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:16.625" endtime="20201112 12:42:16.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.615" endtime="20201112 12:42:16.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:16.643" level="INFO">${RESULT} = [{'time': 0.041383444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.041399514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:16.635" endtime="20201112 12:42:16.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:16.662" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:16.645" endtime="20201112 12:42:16.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.673" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:16.671" endtime="20201112 12:42:16.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.678" level="INFO">VALUE: [3.957999999998352e-06, 9.971999999996983e-06, 1.0429999999998774e-05, 2.874999999999406e-06, 8.764000000001382e-06, 3.1529999999987957e-06, 1.1459000000005326e-05, 1.0027999999995263e-05, 1.2527999999997763e-05, 6.07000000000385e-06, 1.3555999999997903e-05, 1.4388999999996599e-05, 7.915999999996703e-06, 8.555999999999842e-06, 2.7500000000027502e-06, 8.110999999998147e-06, 1.4833000000005758e-05, 5.222999999998645e-06, 1.4388000000004064e-05, 6.0689999999974376e-06, 2.723000000003084e-06, 8.792000000000522e-06, 3.7639999999963814e-06, 1.0208000000004602e-05, 5.471999999999422e-06]</msg>
<status status="PASS" starttime="20201112 12:42:16.675" endtime="20201112 12:42:16.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.664" endtime="20201112 12:42:16.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.688" endtime="20201112 12:42:16.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:16.697" endtime="20201112 12:42:16.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.692" endtime="20201112 12:42:16.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.683" endtime="20201112 12:42:16.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.115" endtime="20201112 12:42:16.723"></status>
</kw>
<msg timestamp="20201112 12:42:16.724" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.745" endtime="20201112 12:42:16.759"></status>
</kw>
<msg timestamp="20201112 12:42:16.760" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.742" endtime="20201112 12:42:16.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.767" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.763" endtime="20201112 12:42:16.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.769" endtime="20201112 12:42:16.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.734" endtime="20201112 12:42:16.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.729" endtime="20201112 12:42:16.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.796" endtime="20201112 12:42:17.131"></status>
</kw>
<msg timestamp="20201112 12:42:17.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038927444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038942875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:16.793" endtime="20201112 12:42:17.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038927444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038942875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:17.138" endtime="20201112 12:42:17.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.152" endtime="20201112 12:42:17.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.783" endtime="20201112 12:42:17.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.778" endtime="20201112 12:42:17.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.170" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:17.168" endtime="20201112 12:42:17.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.179" level="INFO">VALUE: [{'time': 0.038927444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038942875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5431000000003248e-05, 'source_diff': 1.5431000000003248e-05}, {'time': 0.038950806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.930999999995747e-06, 'source_diff': 7.930999999995747e-06}, {'time': 0.038957083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.277000000005917e-06, 'source_diff': 6.277000000005917e-06}, {'time': 0.038968764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1680999999999497e-05, 'source_diff': 1.1680999999999497e-05}, {'time': 0.038971486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7219999999966715e-06, 'source_diff': 2.7219999999966715e-06}, {'time': 0.038983417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1930999999999747e-05, 'source_diff': 1.1930999999999747e-05}, {'time': 0.038992972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.555000000001368e-06, 'source_diff': 9.555000000001368e-06}, {'time': 0.039004431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1458999999998387e-05, 'source_diff': 1.1458999999998387e-05}, {'time': 0.039014236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.805000000001618e-06, 'source_diff': 9.805000000001618e-06}, {'time': 0.0390205, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.039023236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7360000000031803e-06, 'source_diff': 2.7360000000031803e-06}, {'time': 0.039028264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.027999999997201e-06, 'source_diff': 5.027999999997201e-06}, {'time': 0.039035347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0829999999980076e-06, 'source_diff': 7.0829999999980076e-06}, {'time': 0.039044111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.039053917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.0390575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.583000000001446e-06, 'source_diff': 3.583000000001446e-06}, {'time': 0.039069569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.20689999999965e-05, 'source_diff': 1.20689999999965e-05}, {'time': 0.039081875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2306000000003592e-05, 'source_diff': 1.2306000000003592e-05}, {'time': 0.039087319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.444000000000282e-06, 'source_diff': 5.444000000000282e-06}, {'time': 0.039102528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5208999999995199e-05, 'source_diff': 1.5208999999995199e-05}, {'time': 0.039116708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4180000000002524e-05, 'source_diff': 1.4180000000002524e-05}, {'time': 0.039126931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0222999999996707e-05, 'source_diff': 1.0222999999996707e-05}, {'time': 0.039140278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3347000000003828e-05, 'source_diff': 1.3347000000003828e-05}, {'time': 0.039150097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.039160944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.039175403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4458999999994449e-05, 'source_diff': 1.4458999999994449e-05}, {'time': 0.039183889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.039193486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.039197667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.039206222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.555000000000368e-06, 'source_diff': 8.555000000000368e-06}, {'time': 0.039215403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.181000000003936e-06, 'source_diff': 9.181000000003936e-06}, {'time': 0.039227722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.231899999999675e-05, 'source_diff': 1.231899999999675e-05}, {'time': 0.039230431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.709000000003514e-06, 'source_diff': 2.709000000003514e-06}, {'time': 0.039232736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3049999999941173e-06, 'source_diff': 2.3049999999941173e-06}, {'time': 0.039242333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.039249431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.09800000000399e-06, 'source_diff': 7.09800000000399e-06}, {'time': 0.039256944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.513000000000658e-06, 'source_diff': 7.513000000000658e-06}, {'time': 0.039264667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.723000000001146e-06, 'source_diff': 7.723000000001146e-06}, {'time': 0.039276347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1680000000000024e-05, 'source_diff': 1.1680000000000024e-05}, {'time': 0.039285139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.791999999993583e-06, 'source_diff': 8.791999999993583e-06}, {'time': 0.039296597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1458000000005852e-05, 'source_diff': 1.1458000000005852e-05}, {'time': 0.039305361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.763999999994443e-06, 'source_diff': 8.763999999994443e-06}, {'time': 0.039314333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.972000000002922e-06, 'source_diff': 8.972000000002922e-06}, {'time': 0.039324139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.039326861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7219999999966715e-06, 'source_diff': 2.7219999999966715e-06}, {'time': 0.039335833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.972000000002922e-06, 'source_diff': 8.972000000002922e-06}, {'time': 0.039350639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4805999999999153e-05, 'source_diff': 1.4805999999999153e-05}, {'time': 0.039360042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.039372556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2514000000005132e-05, 'source_diff': 1.2514000000005132e-05}]</msg>
<status status="PASS" starttime="20201112 12:42:17.173" endtime="20201112 12:42:17.182"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.161" endtime="20201112 12:42:17.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:17.217" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:17.185" endtime="20201112 12:42:17.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.227" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:17.224" endtime="20201112 12:42:17.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.234" level="INFO">VALUE: {'sourcediff': [0, 1.5431000000003248e-05, 7.930999999995747e-06, 6.277000000005917e-06, 1.1680999999999497e-05, 2.7219999999966715e-06, 1.1930999999999747e-05, 9.555000000001368e-06, 1.1458999999998387e-05, 9.805000000001618e-06, 6.2639999999988816e-06, 2.7360000000031803e-06, 5.027999999997201e-06, 7.0829999999980076e-06, 8.764000000001382e-06, 9.806000000001092e-06, 3.583000000001446e-06, 1.20689999999965e-05, 1.2306000000003592e-05, 5.444000000000282e-06, 1.5208999999995199e-05, 1.4180000000002524e-05, 1.0222999999996707e-05, 1.3347000000003828e-05, 9.819000000001188e-06, 1.0847000000001328e-05, 1.4458999999994449e-05, 8.486000000001992e-06, 9.597000000000078e-06, 4.1809999999989356e-06, 8.555000000000368e-06, 9.181000000003936e-06, 1.231899999999675e-05, 2.709000000003514e-06, 2.3049999999941173e-06, 9.597000000000078e-06, 7.09800000000399e-06, 7.513000000000658e-06, 7.723000000001146e-06, 1.1680000000000024e-05, 8.791999999993583e-06, 1.1458000000005852e-05, 8.763999999994443e-06, 8.972000000002922e-06, 9.806000000001092e-06, 2.7219999999966715e-06, 8.972000000002922e-06, 1.4805999999999153e-05, 9.402999999998107e-06, 1.2514000000005132e-05], 'time': [0.038927444, 0.038942875, 0.038950806, 0.038957083, 0.038968764, 0.038971486, 0.038983417, 0.038992972, 0.039004431, 0.039014236, 0.0390205, 0.039023236, 0.039028264, 0.039035347, 0.039044111, 0.039053917, 0.0390575, 0.039069569, 0.039081875, 0.039087319, 0.039102528, 0.039116708, 0.039126931, 0.039140278, 0.039150097, 0.039160944, 0.039175403, 0.039183889, 0.039193486, 0.039197667, 0.039206222, 0.039215403, 0.039227722, 0.039230431, 0.039232736, 0.039242333, 0.039249431, 0.039256944, 0.039264667, 0.039276347, 0.039285139, 0.039296597, 0.039305361, 0.039314333, 0.039324139, 0.039326861, 0.039335833, 0.039350639, 0.039360042, 0.039372556], 'source_diff': [0, 1.5431000000003248e-05, 7.930999999995747e-06, 6.277000000005917e-06, 1.1680999999999497e-05, 2.7219999999966715e-06, 1.1930999999999747e-05, 9.555000000001368e-06, 1.1458999999998387e-05, 9.805000000001618e-06, 6.2639999999988816e-06, 2.7360000000031803e-06, 5.027999999997201e-06, 7.0829999999980076e-06, 8.764000000001382e-06, 9.806000000001092e-06, 3.583000000001446e-06, 1.20689999999965e-05, 1.2306000000003592e-05, 5.444000000000282e-06, 1.5208999999995199e-05, 1.4180000000002524e-05, 1.0222999999996707e-05, 1.3347000000003828e-05, 9.819000000001188e-06, 1.0847000000001328e-05, 1.4458999999994449e-05, 8.486000000001992e-06, 9.597000000000078e-06, 4.1809999999989356e-06, 8.555000000000368e-06, 9.181000000003936e-06, 1.231899999999675e-05, 2.709000000003514e-06, 2.3049999999941173e-06, 9.597000000000078e-06, 7.09800000000399e-06, 7.513000000000658e-06, 7.723000000001146e-06, 1.1680000000000024e-05, 8.791999999993583e-06, 1.1458000000005852e-05, 8.763999999994443e-06, 8.972000000002922e-06, 9.806000000001092e-06, 2.7219999999966715e-06, 8.972000000002922e-06, 1.4805999999999153e-05, 9.402999999998107e-06, 1.2514000000005132e-05], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:17.229" endtime="20201112 12:42:17.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.219" endtime="20201112 12:42:17.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:17.247" level="INFO">${RESULT} = [{'time': 0.038942875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5431000000003248e-05, 'source_diff': 1.5431000000003248e-05}, {'time': 0.038957083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:17.239" endtime="20201112 12:42:17.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:17.266" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:17.249" endtime="20201112 12:42:17.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.277" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:17.274" endtime="20201112 12:42:17.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.282" level="INFO">VALUE: [1.5431000000003248e-05, 6.277000000005917e-06, 2.7219999999966715e-06, 9.555000000001368e-06, 9.805000000001618e-06, 2.7360000000031803e-06, 7.0829999999980076e-06, 9.806000000001092e-06, 1.20689999999965e-05, 5.444000000000282e-06, 1.4180000000002524e-05, 1.3347000000003828e-05, 1.0847000000001328e-05, 8.486000000001992e-06, 4.1809999999989356e-06, 9.181000000003936e-06, 2.709000000003514e-06, 9.597000000000078e-06, 7.513000000000658e-06, 1.1680000000000024e-05, 1.1458000000005852e-05, 8.972000000002922e-06, 2.7219999999966715e-06, 1.4805999999999153e-05, 1.2514000000005132e-05]</msg>
<status status="PASS" starttime="20201112 12:42:17.279" endtime="20201112 12:42:17.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.268" endtime="20201112 12:42:17.285"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.292" endtime="20201112 12:42:17.295"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:17.301" endtime="20201112 12:42:17.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.296" endtime="20201112 12:42:17.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.287" endtime="20201112 12:42:17.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.725" endtime="20201112 12:42:17.328"></status>
</kw>
<msg timestamp="20201112 12:42:17.328" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.349" endtime="20201112 12:42:17.363"></status>
</kw>
<msg timestamp="20201112 12:42:17.365" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:17.346" endtime="20201112 12:42:17.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.371" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:17.367" endtime="20201112 12:42:17.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.374" endtime="20201112 12:42:17.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.338" endtime="20201112 12:42:17.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.333" endtime="20201112 12:42:17.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.401" endtime="20201112 12:42:17.734"></status>
</kw>
<msg timestamp="20201112 12:42:17.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039177319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039184625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:17.397" endtime="20201112 12:42:17.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039177319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039184625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:17.741" endtime="20201112 12:42:17.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.755" endtime="20201112 12:42:17.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.387" endtime="20201112 12:42:17.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.382" endtime="20201112 12:42:17.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.772" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:17.770" endtime="20201112 12:42:17.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.781" level="INFO">VALUE: [{'time': 0.039177319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039184625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.039193194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.039208611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.541699999999674e-05, 'source_diff': 1.541699999999674e-05}, {'time': 0.039215708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.097000000004516e-06, 'source_diff': 7.097000000004516e-06}, {'time': 0.039223014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.039225944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.929999999998212e-06, 'source_diff': 2.929999999998212e-06}, {'time': 0.039236375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0430999999998247e-05, 'source_diff': 1.0430999999998247e-05}, {'time': 0.039251389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5014000000000693e-05, 'source_diff': 1.5014000000000693e-05}, {'time': 0.039262889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1500000000004562e-05, 'source_diff': 1.1500000000004562e-05}, {'time': 0.039271431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.039283319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1887999999994625e-05, 'source_diff': 1.1887999999994625e-05}, {'time': 0.039289819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.039305014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5195000000002568e-05, 'source_diff': 1.5195000000002568e-05}, {'time': 0.039309819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8050000000035564e-06, 'source_diff': 4.8050000000035564e-06}, {'time': 0.039313375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.555999999994841e-06, 'source_diff': 3.555999999994841e-06}, {'time': 0.039317347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9720000000048605e-06, 'source_diff': 3.9720000000048605e-06}, {'time': 0.039321958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.610999999994647e-06, 'source_diff': 4.610999999994647e-06}, {'time': 0.039327375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.039333639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.039341569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.930000000003212e-06, 'source_diff': 7.930000000003212e-06}, {'time': 0.039355972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4403000000003108e-05, 'source_diff': 1.4403000000003108e-05}, {'time': 0.039358903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9309999999976855e-06, 'source_diff': 2.9309999999976855e-06}, {'time': 0.039366625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.039380583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3957999999994475e-05, 'source_diff': 1.3957999999994475e-05}, {'time': 0.039392097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1514000000004132e-05, 'source_diff': 1.1514000000004132e-05}, {'time': 0.039404389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2291999999997083e-05, 'source_diff': 1.2291999999997083e-05}, {'time': 0.039410847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.458000000000852e-06, 'source_diff': 6.458000000000852e-06}, {'time': 0.039413778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9309999999976855e-06, 'source_diff': 2.9309999999976855e-06}, {'time': 0.039428597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4819000000006188e-05, 'source_diff': 1.4819000000006188e-05}, {'time': 0.039442972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}, {'time': 0.039453014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0042000000001772e-05, 'source_diff': 1.0042000000001772e-05}, {'time': 0.039458833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8189999999971875e-06, 'source_diff': 5.8189999999971875e-06}, {'time': 0.039463278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4449999999987555e-06, 'source_diff': 4.4449999999987555e-06}, {'time': 0.039467403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.039477417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0014000000002632e-05, 'source_diff': 1.0014000000002632e-05}, {'time': 0.039491389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3972000000000984e-05, 'source_diff': 1.3972000000000984e-05}, {'time': 0.039495375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.039507889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.039522278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4389000000003538e-05, 'source_diff': 1.4389000000003538e-05}, {'time': 0.039535417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3139000000002288e-05, 'source_diff': 1.3139000000002288e-05}, {'time': 0.039545431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0013999999995693e-05, 'source_diff': 1.0013999999995693e-05}, {'time': 0.039557125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1693999999999594e-05, 'source_diff': 1.1693999999999594e-05}, {'time': 0.039562347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.039571375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.039586125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4750000000000874e-05, 'source_diff': 1.4750000000000874e-05}, {'time': 0.039593625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.039604486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.039607625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.039622208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.458299999999857e-05, 'source_diff': 1.458299999999857e-05}]</msg>
<status status="PASS" starttime="20201112 12:42:17.775" endtime="20201112 12:42:17.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.763" endtime="20201112 12:42:17.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:17.818" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:17.787" endtime="20201112 12:42:17.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.828" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:17.826" endtime="20201112 12:42:17.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.836" level="INFO">VALUE: {'sourcediff': [0, 7.305999999998591e-06, 8.568999999999938e-06, 1.541699999999674e-05, 7.097000000004516e-06, 7.305999999998591e-06, 2.929999999998212e-06, 1.0430999999998247e-05, 1.5014000000000693e-05, 1.1500000000004562e-05, 8.542000000000272e-06, 1.1887999999994625e-05, 6.499999999999562e-06, 1.5195000000002568e-05, 4.8050000000035564e-06, 3.555999999994841e-06, 3.9720000000048605e-06, 4.610999999994647e-06, 5.417000000000616e-06, 6.2639999999988816e-06, 7.930000000003212e-06, 1.4403000000003108e-05, 2.9309999999976855e-06, 7.722000000001672e-06, 1.3957999999994475e-05, 1.1514000000004132e-05, 1.2291999999997083e-05, 6.458000000000852e-06, 2.9309999999976855e-06, 1.4819000000006188e-05, 1.4374999999997029e-05, 1.0042000000001772e-05, 5.8189999999971875e-06, 4.4449999999987555e-06, 4.125000000000656e-06, 1.0014000000002632e-05, 1.3972000000000984e-05, 3.9859999999974915e-06, 1.2513999999998193e-05, 1.4389000000003538e-05, 1.3139000000002288e-05, 1.0013999999995693e-05, 1.1693999999999594e-05, 5.221999999999172e-06, 9.028000000001202e-06, 1.4750000000000874e-05, 7.500000000000562e-06, 1.0861000000000898e-05, 3.1389999999992257e-06, 1.458299999999857e-05], 'time': [0.039177319, 0.039184625, 0.039193194, 0.039208611, 0.039215708, 0.039223014, 0.039225944, 0.039236375, 0.039251389, 0.039262889, 0.039271431, 0.039283319, 0.039289819, 0.039305014, 0.039309819, 0.039313375, 0.039317347, 0.039321958, 0.039327375, 0.039333639, 0.039341569, 0.039355972, 0.039358903, 0.039366625, 0.039380583, 0.039392097, 0.039404389, 0.039410847, 0.039413778, 0.039428597, 0.039442972, 0.039453014, 0.039458833, 0.039463278, 0.039467403, 0.039477417, 0.039491389, 0.039495375, 0.039507889, 0.039522278, 0.039535417, 0.039545431, 0.039557125, 0.039562347, 0.039571375, 0.039586125, 0.039593625, 0.039604486, 0.039607625, 0.039622208], 'source_diff': [0, 7.305999999998591e-06, 8.568999999999938e-06, 1.541699999999674e-05, 7.097000000004516e-06, 7.305999999998591e-06, 2.929999999998212e-06, 1.0430999999998247e-05, 1.5014000000000693e-05, 1.1500000000004562e-05, 8.542000000000272e-06, 1.1887999999994625e-05, 6.499999999999562e-06, 1.5195000000002568e-05, 4.8050000000035564e-06, 3.555999999994841e-06, 3.9720000000048605e-06, 4.610999999994647e-06, 5.417000000000616e-06, 6.2639999999988816e-06, 7.930000000003212e-06, 1.4403000000003108e-05, 2.9309999999976855e-06, 7.722000000001672e-06, 1.3957999999994475e-05, 1.1514000000004132e-05, 1.2291999999997083e-05, 6.458000000000852e-06, 2.9309999999976855e-06, 1.4819000000006188e-05, 1.4374999999997029e-05, 1.0042000000001772e-05, 5.8189999999971875e-06, 4.4449999999987555e-06, 4.125000000000656e-06, 1.0014000000002632e-05, 1.3972000000000984e-05, 3.9859999999974915e-06, 1.2513999999998193e-05, 1.4389000000003538e-05, 1.3139000000002288e-05, 1.0013999999995693e-05, 1.1693999999999594e-05, 5.221999999999172e-06, 9.028000000001202e-06, 1.4750000000000874e-05, 7.500000000000562e-06, 1.0861000000000898e-05, 3.1389999999992257e-06, 1.458299999999857e-05], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:17.831" endtime="20201112 12:42:17.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.821" endtime="20201112 12:42:17.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:17.849" level="INFO">${RESULT} = [{'time': 0.039184625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.039208611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:17.841" endtime="20201112 12:42:17.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:17.868" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:17.851" endtime="20201112 12:42:17.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.879" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:17.877" endtime="20201112 12:42:17.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.885" level="INFO">VALUE: [7.305999999998591e-06, 1.541699999999674e-05, 7.305999999998591e-06, 1.0430999999998247e-05, 1.1500000000004562e-05, 1.1887999999994625e-05, 1.5195000000002568e-05, 3.555999999994841e-06, 4.610999999994647e-06, 6.2639999999988816e-06, 1.4403000000003108e-05, 7.722000000001672e-06, 1.1514000000004132e-05, 6.458000000000852e-06, 1.4819000000006188e-05, 1.0042000000001772e-05, 4.4449999999987555e-06, 1.0014000000002632e-05, 3.9859999999974915e-06, 1.4389000000003538e-05, 1.0013999999995693e-05, 5.221999999999172e-06, 1.4750000000000874e-05, 1.0861000000000898e-05, 1.458299999999857e-05]</msg>
<status status="PASS" starttime="20201112 12:42:17.882" endtime="20201112 12:42:17.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.871" endtime="20201112 12:42:17.888"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.895" endtime="20201112 12:42:17.898"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:17.904" endtime="20201112 12:42:17.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.899" endtime="20201112 12:42:17.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.890" endtime="20201112 12:42:17.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.329" endtime="20201112 12:42:17.930"></status>
</kw>
<msg timestamp="20201112 12:42:17.931" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.952" endtime="20201112 12:42:17.965"></status>
</kw>
<msg timestamp="20201112 12:42:17.966" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:17.948" endtime="20201112 12:42:17.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.973" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:17.969" endtime="20201112 12:42:17.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.975" endtime="20201112 12:42:17.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.941" endtime="20201112 12:42:17.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.936" endtime="20201112 12:42:17.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.002" endtime="20201112 12:42:18.336"></status>
</kw>
<msg timestamp="20201112 12:42:18.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039048278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039050597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:17.999" endtime="20201112 12:42:18.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039048278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039050597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:18.343" endtime="20201112 12:42:18.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.352" endtime="20201112 12:42:18.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.991" endtime="20201112 12:42:18.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.986" endtime="20201112 12:42:18.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.360" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:18.359" endtime="20201112 12:42:18.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.364" level="INFO">VALUE: [{'time': 0.039048278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039050597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.319000000000626e-06, 'source_diff': 2.319000000000626e-06}, {'time': 0.039066014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5417000000003678e-05, 'source_diff': 1.5417000000003678e-05}, {'time': 0.039071639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.624999999995217e-06, 'source_diff': 5.624999999995217e-06}, {'time': 0.039083542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1903000000000608e-05, 'source_diff': 1.1903000000000608e-05}, {'time': 0.039093125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.039101056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.931000000002686e-06, 'source_diff': 7.931000000002686e-06}, {'time': 0.039114625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3568999999998e-05, 'source_diff': 1.3568999999998e-05}, {'time': 0.039129222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.459699999999814e-05, 'source_diff': 1.459699999999814e-05}, {'time': 0.039142764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3541999999998333e-05, 'source_diff': 1.3541999999998333e-05}, {'time': 0.039146792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.02800000000314e-06, 'source_diff': 4.02800000000314e-06}, {'time': 0.039151556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7639999999973814e-06, 'source_diff': 4.7639999999973814e-06}, {'time': 0.039160514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.958000000003352e-06, 'source_diff': 8.958000000003352e-06}, {'time': 0.039164903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.039177028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2125000000001718e-05, 'source_diff': 1.2125000000001718e-05}, {'time': 0.039183278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.039195583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.230499999999718e-05, 'source_diff': 1.230499999999718e-05}, {'time': 0.039207889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2306000000003592e-05, 'source_diff': 1.2306000000003592e-05}, {'time': 0.039210403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5139999999951312e-06, 'source_diff': 2.5139999999951312e-06}, {'time': 0.03922125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.039232778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1528000000003702e-05, 'source_diff': 1.1528000000003702e-05}, {'time': 0.039236903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.124999999993717e-06, 'source_diff': 4.124999999993717e-06}, {'time': 0.039240875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9720000000048605e-06, 'source_diff': 3.9720000000048605e-06}, {'time': 0.039245056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.039252153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0969999999975775e-06, 'source_diff': 7.0969999999975775e-06}, {'time': 0.039259667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.039265306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.039267625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.319000000000626e-06, 'source_diff': 2.319000000000626e-06}, {'time': 0.039280542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2917000000001178e-05, 'source_diff': 1.2917000000001178e-05}, {'time': 0.039284097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5549999999953674e-06, 'source_diff': 3.5549999999953674e-06}, {'time': 0.0392985, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4403000000003108e-05, 'source_diff': 1.4403000000003108e-05}, {'time': 0.039311653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3153000000001858e-05, 'source_diff': 1.3153000000001858e-05}, {'time': 0.039327069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5415999999997265e-05, 'source_diff': 1.5415999999997265e-05}, {'time': 0.039340431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3362000000002872e-05, 'source_diff': 1.3362000000002872e-05}, {'time': 0.039355222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.479100000000011e-05, 'source_diff': 1.479100000000011e-05}, {'time': 0.039359194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.03936275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.55600000000178e-06, 'source_diff': 3.55600000000178e-06}, {'time': 0.039372764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0013999999995693e-05, 'source_diff': 1.0013999999995693e-05}, {'time': 0.039376319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5550000000023063e-06, 'source_diff': 3.5550000000023063e-06}, {'time': 0.039379681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3619999999998096e-06, 'source_diff': 3.3619999999998096e-06}, {'time': 0.039384681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.039393444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.763000000001908e-06, 'source_diff': 8.763000000001908e-06}, {'time': 0.039407208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.039414542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.333999999997731e-06, 'source_diff': 7.333999999997731e-06}, {'time': 0.039418486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.944000000005721e-06, 'source_diff': 3.944000000005721e-06}, {'time': 0.039427056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.569999999999411e-06, 'source_diff': 8.569999999999411e-06}, {'time': 0.039433319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.262999999999408e-06, 'source_diff': 6.262999999999408e-06}, {'time': 0.039444167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0848000000000801e-05, 'source_diff': 1.0848000000000801e-05}, {'time': 0.039453361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.193999999997093e-06, 'source_diff': 9.193999999997093e-06}, {'time': 0.039459611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:18.361" endtime="20201112 12:42:18.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.356" endtime="20201112 12:42:18.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:18.381" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:18.367" endtime="20201112 12:42:18.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.386" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:18.385" endtime="20201112 12:42:18.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.389" level="INFO">VALUE: {'sourcediff': [0, 2.319000000000626e-06, 1.5417000000003678e-05, 5.624999999995217e-06, 1.1903000000000608e-05, 9.583000000000508e-06, 7.931000000002686e-06, 1.3568999999998e-05, 1.459699999999814e-05, 1.3541999999998333e-05, 4.02800000000314e-06, 4.7639999999973814e-06, 8.958000000003352e-06, 4.389000000000476e-06, 1.2125000000001718e-05, 6.249999999999312e-06, 1.230499999999718e-05, 1.2306000000003592e-05, 2.5139999999951312e-06, 1.0847000000001328e-05, 1.1528000000003702e-05, 4.124999999993717e-06, 3.9720000000048605e-06, 4.1809999999989356e-06, 7.0969999999975775e-06, 7.514000000000132e-06, 5.639000000001726e-06, 2.319000000000626e-06, 1.2917000000001178e-05, 3.5549999999953674e-06, 1.4403000000003108e-05, 1.3153000000001858e-05, 1.5415999999997265e-05, 1.3362000000002872e-05, 1.479100000000011e-05, 3.971999999997922e-06, 3.55600000000178e-06, 1.0013999999995693e-05, 3.5550000000023063e-06, 3.3619999999998096e-06, 4.9999999999980616e-06, 8.763000000001908e-06, 1.3763999999999443e-05, 7.333999999997731e-06, 3.944000000005721e-06, 8.569999999999411e-06, 6.262999999999408e-06, 1.0848000000000801e-05, 9.193999999997093e-06, 6.249999999999312e-06], 'time': [0.039048278, 0.039050597, 0.039066014, 0.039071639, 0.039083542, 0.039093125, 0.039101056, 0.039114625, 0.039129222, 0.039142764, 0.039146792, 0.039151556, 0.039160514, 0.039164903, 0.039177028, 0.039183278, 0.039195583, 0.039207889, 0.039210403, 0.03922125, 0.039232778, 0.039236903, 0.039240875, 0.039245056, 0.039252153, 0.039259667, 0.039265306, 0.039267625, 0.039280542, 0.039284097, 0.0392985, 0.039311653, 0.039327069, 0.039340431, 0.039355222, 0.039359194, 0.03936275, 0.039372764, 0.039376319, 0.039379681, 0.039384681, 0.039393444, 0.039407208, 0.039414542, 0.039418486, 0.039427056, 0.039433319, 0.039444167, 0.039453361, 0.039459611], 'source_diff': [0, 2.319000000000626e-06, 1.5417000000003678e-05, 5.624999999995217e-06, 1.1903000000000608e-05, 9.583000000000508e-06, 7.931000000002686e-06, 1.3568999999998e-05, 1.459699999999814e-05, 1.3541999999998333e-05, 4.02800000000314e-06, 4.7639999999973814e-06, 8.958000000003352e-06, 4.389000000000476e-06, 1.2125000000001718e-05, 6.249999999999312e-06, 1.230499999999718e-05, 1.2306000000003592e-05, 2.5139999999951312e-06, 1.0847000000001328e-05, 1.1528000000003702e-05, 4.124999999993717e-06, 3.9720000000048605e-06, 4.1809999999989356e-06, 7.0969999999975775e-06, 7.514000000000132e-06, 5.639000000001726e-06, 2.319000000000626e-06, 1.2917000000001178e-05, 3.5549999999953674e-06, 1.4403000000003108e-05, 1.3153000000001858e-05, 1.5415999999997265e-05, 1.3362000000002872e-05, 1.479100000000011e-05, 3.971999999997922e-06, 3.55600000000178e-06, 1.0013999999995693e-05, 3.5550000000023063e-06, 3.3619999999998096e-06, 4.9999999999980616e-06, 8.763000000001908e-06, 1.3763999999999443e-05, 7.333999999997731e-06, 3.944000000005721e-06, 8.569999999999411e-06, 6.262999999999408e-06, 1.0848000000000801e-05, 9.193999999997093e-06, 6.249999999999312e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:18.387" endtime="20201112 12:42:18.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.382" endtime="20201112 12:42:18.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:18.395" level="INFO">${RESULT} = [{'time': 0.039050597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.319000000000626e-06, 'source_diff': 2.319000000000626e-06}, {'time': 0.039071639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:18.392" endtime="20201112 12:42:18.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:18.404" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:18.396" endtime="20201112 12:42:18.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.409" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:18.408" endtime="20201112 12:42:18.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.412" level="INFO">VALUE: [2.319000000000626e-06, 5.624999999995217e-06, 9.583000000000508e-06, 1.3568999999998e-05, 1.3541999999998333e-05, 4.7639999999973814e-06, 4.389000000000476e-06, 6.249999999999312e-06, 1.2306000000003592e-05, 1.0847000000001328e-05, 4.124999999993717e-06, 4.1809999999989356e-06, 7.514000000000132e-06, 2.319000000000626e-06, 3.5549999999953674e-06, 1.3153000000001858e-05, 1.3362000000002872e-05, 3.971999999997922e-06, 1.0013999999995693e-05, 3.3619999999998096e-06, 8.763000000001908e-06, 7.333999999997731e-06, 8.569999999999411e-06, 1.0848000000000801e-05, 6.249999999999312e-06]</msg>
<status status="PASS" starttime="20201112 12:42:18.410" endtime="20201112 12:42:18.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.405" endtime="20201112 12:42:18.413"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.416" endtime="20201112 12:42:18.417"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:18.420" endtime="20201112 12:42:18.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.418" endtime="20201112 12:42:18.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.414" endtime="20201112 12:42:18.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.932" endtime="20201112 12:42:18.442"></status>
</kw>
<msg timestamp="20201112 12:42:18.442" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.453" endtime="20201112 12:42:18.463"></status>
</kw>
<msg timestamp="20201112 12:42:18.463" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:18.450" endtime="20201112 12:42:18.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.467" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:18.465" endtime="20201112 12:42:18.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.468" endtime="20201112 12:42:18.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.446" endtime="20201112 12:42:18.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.444" endtime="20201112 12:42:18.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.479" endtime="20201112 12:42:18.749"></status>
</kw>
<msg timestamp="20201112 12:42:18.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02236925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022373431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:18.478" endtime="20201112 12:42:18.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02236925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022373431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:18.752" endtime="20201112 12:42:18.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.758" endtime="20201112 12:42:18.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.474" endtime="20201112 12:42:18.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.472" endtime="20201112 12:42:18.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.766" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:18.765" endtime="20201112 12:42:18.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.770" level="INFO">VALUE: [{'time': 0.02236925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022373431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.022381236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.804999999999618e-06, 'source_diff': 7.804999999999618e-06}, {'time': 0.022388042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.806000000001561e-06, 'source_diff': 6.806000000001561e-06}, {'time': 0.022396194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.152000000000853e-06, 'source_diff': 8.152000000000853e-06}, {'time': 0.022399958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.022411417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1458999999998387e-05, 'source_diff': 1.1458999999998387e-05}, {'time': 0.022417681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.022426861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.180000000000993e-06, 'source_diff': 9.180000000000993e-06}, {'time': 0.022436458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.022451903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5444999999999348e-05, 'source_diff': 1.5444999999999348e-05}, {'time': 0.022455444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5410000000027364e-06, 'source_diff': 3.5410000000027364e-06}, {'time': 0.02246525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.805999999997622e-06, 'source_diff': 9.805999999997622e-06}, {'time': 0.022469014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.022478208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.022480514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.30600000000053e-06, 'source_diff': 2.30600000000053e-06}, {'time': 0.022486764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.022492, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.236000000002211e-06, 'source_diff': 5.236000000002211e-06}, {'time': 0.022499569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.022508278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.708999999999106e-06, 'source_diff': 8.708999999999106e-06}, {'time': 0.022520417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2139000000001288e-05, 'source_diff': 1.2139000000001288e-05}, {'time': 0.022534347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3929999999998804e-05, 'source_diff': 1.3929999999998804e-05}, {'time': 0.022537486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.022550625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3139000000002288e-05, 'source_diff': 1.3139000000002288e-05}, {'time': 0.022561056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0430999999998247e-05, 'source_diff': 1.0430999999998247e-05}, {'time': 0.022573792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2735999999999303e-05, 'source_diff': 1.2735999999999303e-05}, {'time': 0.022577972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.180000000002931e-06, 'source_diff': 4.180000000002931e-06}, {'time': 0.022583389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.416999999997146e-06, 'source_diff': 5.416999999997146e-06}, {'time': 0.02258825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.022591125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.022598847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.721999999998203e-06, 'source_diff': 7.721999999998203e-06}, {'time': 0.022613472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4625000000000749e-05, 'source_diff': 1.4625000000000749e-05}, {'time': 0.022619319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.022624319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.000000000001531e-06, 'source_diff': 5.000000000001531e-06}, {'time': 0.022635792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1472999999997957e-05, 'source_diff': 1.1472999999997957e-05}, {'time': 0.022648319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2527000000001759e-05, 'source_diff': 1.2527000000001759e-05}, {'time': 0.022654389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.022661278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.022667514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.022682528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5014000000000693e-05, 'source_diff': 1.5014000000000693e-05}, {'time': 0.022695667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3138999999998818e-05, 'source_diff': 1.3138999999998818e-05}, {'time': 0.022706722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1054999999999399e-05, 'source_diff': 1.1054999999999399e-05}, {'time': 0.022709028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.30600000000053e-06, 'source_diff': 2.30600000000053e-06}, {'time': 0.022711389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.022722597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1208000000002133e-05, 'source_diff': 1.1208000000002133e-05}, {'time': 0.022736361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.022749722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3360999999999928e-05, 'source_diff': 1.3360999999999928e-05}, {'time': 0.022760361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.022765375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.022774972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:18.767" endtime="20201112 12:42:18.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.762" endtime="20201112 12:42:18.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:18.786" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:18.773" endtime="20201112 12:42:18.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.791" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:18.790" endtime="20201112 12:42:18.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.795" level="INFO">VALUE: {'sourcediff': [0, 4.1809999999989356e-06, 7.804999999999618e-06, 6.806000000001561e-06, 8.152000000000853e-06, 3.763999999999851e-06, 1.1458999999998387e-05, 6.2639999999988816e-06, 9.180000000000993e-06, 9.597000000000078e-06, 1.5444999999999348e-05, 3.5410000000027364e-06, 9.805999999997622e-06, 3.763999999999851e-06, 9.194000000000563e-06, 2.30600000000053e-06, 6.249999999999312e-06, 5.236000000002211e-06, 7.568999999998938e-06, 8.708999999999106e-06, 1.2139000000001288e-05, 1.3929999999998804e-05, 3.1389999999992257e-06, 1.3139000000002288e-05, 1.0430999999998247e-05, 1.2735999999999303e-05, 4.180000000002931e-06, 5.416999999997146e-06, 4.861000000001836e-06, 2.874999999999406e-06, 7.721999999998203e-06, 1.4625000000000749e-05, 5.846999999999797e-06, 5.000000000001531e-06, 1.1472999999997957e-05, 1.2527000000001759e-05, 6.070000000000381e-06, 6.888999999999507e-06, 6.235999999999742e-06, 1.5014000000000693e-05, 1.3138999999998818e-05, 1.1054999999999399e-05, 2.30600000000053e-06, 2.360999999999336e-06, 1.1208000000002133e-05, 1.3763999999999443e-05, 1.3360999999999928e-05, 1.0638999999999788e-05, 5.014000000001101e-06, 9.597000000000078e-06], 'time': [0.02236925, 0.022373431, 0.022381236, 0.022388042, 0.022396194, 0.022399958, 0.022411417, 0.022417681, 0.022426861, 0.022436458, 0.022451903, 0.022455444, 0.02246525, 0.022469014, 0.022478208, 0.022480514, 0.022486764, 0.022492, 0.022499569, 0.022508278, 0.022520417, 0.022534347, 0.022537486, 0.022550625, 0.022561056, 0.022573792, 0.022577972, 0.022583389, 0.02258825, 0.022591125, 0.022598847, 0.022613472, 0.022619319, 0.022624319, 0.022635792, 0.022648319, 0.022654389, 0.022661278, 0.022667514, 0.022682528, 0.022695667, 0.022706722, 0.022709028, 0.022711389, 0.022722597, 0.022736361, 0.022749722, 0.022760361, 0.022765375, 0.022774972], 'source_diff': [0, 4.1809999999989356e-06, 7.804999999999618e-06, 6.806000000001561e-06, 8.152000000000853e-06, 3.763999999999851e-06, 1.1458999999998387e-05, 6.2639999999988816e-06, 9.180000000000993e-06, 9.597000000000078e-06, 1.5444999999999348e-05, 3.5410000000027364e-06, 9.805999999997622e-06, 3.763999999999851e-06, 9.194000000000563e-06, 2.30600000000053e-06, 6.249999999999312e-06, 5.236000000002211e-06, 7.568999999998938e-06, 8.708999999999106e-06, 1.2139000000001288e-05, 1.3929999999998804e-05, 3.1389999999992257e-06, 1.3139000000002288e-05, 1.0430999999998247e-05, 1.2735999999999303e-05, 4.180000000002931e-06, 5.416999999997146e-06, 4.861000000001836e-06, 2.874999999999406e-06, 7.721999999998203e-06, 1.4625000000000749e-05, 5.846999999999797e-06, 5.000000000001531e-06, 1.1472999999997957e-05, 1.2527000000001759e-05, 6.070000000000381e-06, 6.888999999999507e-06, 6.235999999999742e-06, 1.5014000000000693e-05, 1.3138999999998818e-05, 1.1054999999999399e-05, 2.30600000000053e-06, 2.360999999999336e-06, 1.1208000000002133e-05, 1.3763999999999443e-05, 1.3360999999999928e-05, 1.0638999999999788e-05, 5.014000000001101e-06, 9.597000000000078e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:18.792" endtime="20201112 12:42:18.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.787" endtime="20201112 12:42:18.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:18.800" level="INFO">${RESULT} = [{'time': 0.022373431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.022388042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:18.797" endtime="20201112 12:42:18.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:18.809" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:18.801" endtime="20201112 12:42:18.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.814" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:18.813" endtime="20201112 12:42:18.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.817" level="INFO">VALUE: [4.1809999999989356e-06, 6.806000000001561e-06, 3.763999999999851e-06, 6.2639999999988816e-06, 9.597000000000078e-06, 3.5410000000027364e-06, 3.763999999999851e-06, 2.30600000000053e-06, 5.236000000002211e-06, 8.708999999999106e-06, 1.3929999999998804e-05, 1.3139000000002288e-05, 1.2735999999999303e-05, 5.416999999997146e-06, 2.874999999999406e-06, 1.4625000000000749e-05, 5.000000000001531e-06, 1.2527000000001759e-05, 6.888999999999507e-06, 1.5014000000000693e-05, 1.1054999999999399e-05, 2.360999999999336e-06, 1.3763999999999443e-05, 1.0638999999999788e-05, 9.597000000000078e-06]</msg>
<status status="PASS" starttime="20201112 12:42:18.815" endtime="20201112 12:42:18.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.810" endtime="20201112 12:42:18.818"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.821" endtime="20201112 12:42:18.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:18.825" endtime="20201112 12:42:18.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.823" endtime="20201112 12:42:18.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.819" endtime="20201112 12:42:18.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.443" endtime="20201112 12:42:18.847"></status>
</kw>
<msg timestamp="20201112 12:42:18.847" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.858" endtime="20201112 12:42:18.868"></status>
</kw>
<msg timestamp="20201112 12:42:18.869" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:18.855" endtime="20201112 12:42:18.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.872" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:18.870" endtime="20201112 12:42:18.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.873" endtime="20201112 12:42:18.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.852" endtime="20201112 12:42:18.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.849" endtime="20201112 12:42:18.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.884" endtime="20201112 12:42:19.153"></status>
</kw>
<msg timestamp="20201112 12:42:19.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022153333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022166903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:18.883" endtime="20201112 12:42:19.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022153333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022166903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:19.156" endtime="20201112 12:42:19.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.162" endtime="20201112 12:42:19.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.879" endtime="20201112 12:42:19.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.877" endtime="20201112 12:42:19.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.170" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:19.169" endtime="20201112 12:42:19.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.174" level="INFO">VALUE: [{'time': 0.022153333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022166903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3570000000000942e-05, 'source_diff': 1.3570000000000942e-05}, {'time': 0.022177528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0624999999996748e-05, 'source_diff': 1.0624999999996748e-05}, {'time': 0.022182333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.805000000000087e-06, 'source_diff': 4.805000000000087e-06}, {'time': 0.022186722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.022193819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.097000000001047e-06, 'source_diff': 7.097000000001047e-06}, {'time': 0.0222005, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.681000000001436e-06, 'source_diff': 6.681000000001436e-06}, {'time': 0.022214264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.022228236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3971999999997514e-05, 'source_diff': 1.3971999999997514e-05}, {'time': 0.022232208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.972000000001391e-06, 'source_diff': 3.972000000001391e-06}, {'time': 0.022238694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.022248292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597999999999551e-06, 'source_diff': 9.597999999999551e-06}, {'time': 0.022256417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.125000000001187e-06, 'source_diff': 8.125000000001187e-06}, {'time': 0.022262917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.022265819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.901999999999072e-06, 'source_diff': 2.901999999999072e-06}, {'time': 0.022269806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.987000000000435e-06, 'source_diff': 3.987000000000435e-06}, {'time': 0.022276056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.022288153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2097000000002578e-05, 'source_diff': 1.2097000000002578e-05}, {'time': 0.022301111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2957999999996944e-05, 'source_diff': 1.2957999999996944e-05}, {'time': 0.022314042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2931000000000747e-05, 'source_diff': 1.2931000000000747e-05}, {'time': 0.022318833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791000000000517e-06, 'source_diff': 4.791000000000517e-06}, {'time': 0.022325097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.022329708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.022336167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.459000000000326e-06, 'source_diff': 6.459000000000326e-06}, {'time': 0.022346597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0429999999998774e-05, 'source_diff': 1.0429999999998774e-05}, {'time': 0.022353903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.306000000002061e-06, 'source_diff': 7.306000000002061e-06}, {'time': 0.022367667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.022371431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.022386861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5430000000000305e-05, 'source_diff': 1.5430000000000305e-05}, {'time': 0.022400625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.022407722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.097000000001047e-06, 'source_diff': 7.097000000001047e-06}, {'time': 0.022415042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.319999999998161e-06, 'source_diff': 7.319999999998161e-06}, {'time': 0.022427764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2721999999999734e-05, 'source_diff': 1.2721999999999734e-05}, {'time': 0.022430292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.02243675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.4579999999973825e-06, 'source_diff': 6.4579999999973825e-06}, {'time': 0.022444056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.306000000002061e-06, 'source_diff': 7.306000000002061e-06}, {'time': 0.022446375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.319000000000626e-06, 'source_diff': 2.319000000000626e-06}, {'time': 0.022459097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2721999999999734e-05, 'source_diff': 1.2721999999999734e-05}, {'time': 0.022470556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1458999999998387e-05, 'source_diff': 1.1458999999998387e-05}, {'time': 0.022474542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.022486847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2305000000000649e-05, 'source_diff': 1.2305000000000649e-05}, {'time': 0.022499972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3124999999999248e-05, 'source_diff': 1.3124999999999248e-05}, {'time': 0.022510625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0652999999999357e-05, 'source_diff': 1.0652999999999357e-05}, {'time': 0.022513542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.917000000001585e-06, 'source_diff': 2.917000000001585e-06}, {'time': 0.022524194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0651999999999884e-05, 'source_diff': 1.0651999999999884e-05}, {'time': 0.02253525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1055999999998872e-05, 'source_diff': 1.1055999999998872e-05}, {'time': 0.022550056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4805999999999153e-05, 'source_diff': 1.4805999999999153e-05}, {'time': 0.022558194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.138000000001283e-06, 'source_diff': 8.138000000001283e-06}, {'time': 0.022565292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0980000000005206e-06, 'source_diff': 7.0980000000005206e-06}, {'time': 0.022573639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:19.171" endtime="20201112 12:42:19.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.166" endtime="20201112 12:42:19.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:19.190" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:19.177" endtime="20201112 12:42:19.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.195" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:19.194" endtime="20201112 12:42:19.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.198" level="INFO">VALUE: {'sourcediff': [0, 1.3570000000000942e-05, 1.0624999999996748e-05, 4.805000000000087e-06, 4.389000000000476e-06, 7.097000000001047e-06, 6.681000000001436e-06, 1.3763999999999443e-05, 1.3971999999997514e-05, 3.972000000001391e-06, 6.485999999999992e-06, 9.597999999999551e-06, 8.125000000001187e-06, 6.499999999999562e-06, 2.901999999999072e-06, 3.987000000000435e-06, 6.249999999999312e-06, 1.2097000000002578e-05, 1.2957999999996944e-05, 1.2931000000000747e-05, 4.791000000000517e-06, 6.2639999999988816e-06, 4.611000000001586e-06, 6.459000000000326e-06, 1.0429999999998774e-05, 7.306000000002061e-06, 1.3763999999999443e-05, 3.763999999999851e-06, 1.5430000000000305e-05, 1.3763999999999443e-05, 7.097000000001047e-06, 7.319999999998161e-06, 1.2721999999999734e-05, 2.52800000000164e-06, 6.4579999999973825e-06, 7.306000000002061e-06, 2.319000000000626e-06, 1.2721999999999734e-05, 1.1458999999998387e-05, 3.986000000000961e-06, 1.2305000000000649e-05, 1.3124999999999248e-05, 1.0652999999999357e-05, 2.917000000001585e-06, 1.0651999999999884e-05, 1.1055999999998872e-05, 1.4805999999999153e-05, 8.138000000001283e-06, 7.0980000000005206e-06, 8.346999999998828e-06], 'time': [0.022153333, 0.022166903, 0.022177528, 0.022182333, 0.022186722, 0.022193819, 0.0222005, 0.022214264, 0.022228236, 0.022232208, 0.022238694, 0.022248292, 0.022256417, 0.022262917, 0.022265819, 0.022269806, 0.022276056, 0.022288153, 0.022301111, 0.022314042, 0.022318833, 0.022325097, 0.022329708, 0.022336167, 0.022346597, 0.022353903, 0.022367667, 0.022371431, 0.022386861, 0.022400625, 0.022407722, 0.022415042, 0.022427764, 0.022430292, 0.02243675, 0.022444056, 0.022446375, 0.022459097, 0.022470556, 0.022474542, 0.022486847, 0.022499972, 0.022510625, 0.022513542, 0.022524194, 0.02253525, 0.022550056, 0.022558194, 0.022565292, 0.022573639], 'source_diff': [0, 1.3570000000000942e-05, 1.0624999999996748e-05, 4.805000000000087e-06, 4.389000000000476e-06, 7.097000000001047e-06, 6.681000000001436e-06, 1.3763999999999443e-05, 1.3971999999997514e-05, 3.972000000001391e-06, 6.485999999999992e-06, 9.597999999999551e-06, 8.125000000001187e-06, 6.499999999999562e-06, 2.901999999999072e-06, 3.987000000000435e-06, 6.249999999999312e-06, 1.2097000000002578e-05, 1.2957999999996944e-05, 1.2931000000000747e-05, 4.791000000000517e-06, 6.2639999999988816e-06, 4.611000000001586e-06, 6.459000000000326e-06, 1.0429999999998774e-05, 7.306000000002061e-06, 1.3763999999999443e-05, 3.763999999999851e-06, 1.5430000000000305e-05, 1.3763999999999443e-05, 7.097000000001047e-06, 7.319999999998161e-06, 1.2721999999999734e-05, 2.52800000000164e-06, 6.4579999999973825e-06, 7.306000000002061e-06, 2.319000000000626e-06, 1.2721999999999734e-05, 1.1458999999998387e-05, 3.986000000000961e-06, 1.2305000000000649e-05, 1.3124999999999248e-05, 1.0652999999999357e-05, 2.917000000001585e-06, 1.0651999999999884e-05, 1.1055999999998872e-05, 1.4805999999999153e-05, 8.138000000001283e-06, 7.0980000000005206e-06, 8.346999999998828e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:19.196" endtime="20201112 12:42:19.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.191" endtime="20201112 12:42:19.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:19.205" level="INFO">${RESULT} = [{'time': 0.022166903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3570000000000942e-05, 'source_diff': 1.3570000000000942e-05}, {'time': 0.022182333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:19.201" endtime="20201112 12:42:19.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:19.213" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:19.206" endtime="20201112 12:42:19.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.219" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:19.218" endtime="20201112 12:42:19.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.222" level="INFO">VALUE: [1.3570000000000942e-05, 4.805000000000087e-06, 7.097000000001047e-06, 1.3763999999999443e-05, 3.972000000001391e-06, 9.597999999999551e-06, 6.499999999999562e-06, 3.987000000000435e-06, 1.2097000000002578e-05, 1.2931000000000747e-05, 6.2639999999988816e-06, 6.459000000000326e-06, 7.306000000002061e-06, 3.763999999999851e-06, 1.3763999999999443e-05, 7.319999999998161e-06, 2.52800000000164e-06, 7.306000000002061e-06, 1.2721999999999734e-05, 3.986000000000961e-06, 1.3124999999999248e-05, 2.917000000001585e-06, 1.1055999999998872e-05, 8.138000000001283e-06, 8.346999999998828e-06]</msg>
<status status="PASS" starttime="20201112 12:42:19.220" endtime="20201112 12:42:19.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.214" endtime="20201112 12:42:19.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.227" endtime="20201112 12:42:19.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:19.231" endtime="20201112 12:42:19.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.229" endtime="20201112 12:42:19.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.225" endtime="20201112 12:42:19.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.848" endtime="20201112 12:42:19.253"></status>
</kw>
<msg timestamp="20201112 12:42:19.253" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.272" endtime="20201112 12:42:19.286"></status>
</kw>
<msg timestamp="20201112 12:42:19.287" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:19.267" endtime="20201112 12:42:19.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.294" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:19.290" endtime="20201112 12:42:19.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.297" endtime="20201112 12:42:19.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.259" endtime="20201112 12:42:19.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.255" endtime="20201112 12:42:19.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.322" endtime="20201112 12:42:19.658"></status>
</kw>
<msg timestamp="20201112 12:42:19.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032471181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032482236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:19.318" endtime="20201112 12:42:19.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032471181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032482236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:19.665" endtime="20201112 12:42:19.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.678" endtime="20201112 12:42:19.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.310" endtime="20201112 12:42:19.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.305" endtime="20201112 12:42:19.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.696" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:19.694" endtime="20201112 12:42:19.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.705" level="INFO">VALUE: [{'time': 0.032471181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032482236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.105499999999593e-05, 'source_diff': 1.105499999999593e-05}, {'time': 0.032493486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1250000000004312e-05, 'source_diff': 1.1250000000004312e-05}, {'time': 0.032505597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2110999999995209e-05, 'source_diff': 1.2110999999995209e-05}, {'time': 0.032517264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1666999999999927e-05, 'source_diff': 1.1666999999999927e-05}, {'time': 0.032523542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.27800000000539e-06, 'source_diff': 6.27800000000539e-06}, {'time': 0.032538972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5429999999996835e-05, 'source_diff': 1.5429999999996835e-05}, {'time': 0.032547528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.032553583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.054999999997868e-06, 'source_diff': 6.054999999997868e-06}, {'time': 0.032565958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2375000000001968e-05, 'source_diff': 1.2375000000001968e-05}, {'time': 0.032574694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.032584264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.570000000000412e-06, 'source_diff': 9.570000000000412e-06}, {'time': 0.032590111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999996327e-06, 'source_diff': 5.846999999996327e-06}, {'time': 0.032605111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000001124e-05, 'source_diff': 1.5000000000001124e-05}, {'time': 0.032619736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4625000000004218e-05, 'source_diff': 1.4625000000004218e-05}, {'time': 0.032632847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3110999999996209e-05, 'source_diff': 1.3110999999996209e-05}, {'time': 0.032639111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.03264725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.139000000004226e-06, 'source_diff': 8.139000000004226e-06}, {'time': 0.032650806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.555999999994841e-06, 'source_diff': 3.555999999994841e-06}, {'time': 0.032654583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7770000000034165e-06, 'source_diff': 3.7770000000034165e-06}, {'time': 0.032662083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.032676694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.461099999999771e-05, 'source_diff': 1.461099999999771e-05}, {'time': 0.032681097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.032691931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0834000000001232e-05, 'source_diff': 1.0834000000001232e-05}, {'time': 0.032698208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.276999999998978e-06, 'source_diff': 6.276999999998978e-06}, {'time': 0.032704042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.83400000000317e-06, 'source_diff': 5.83400000000317e-06}, {'time': 0.032714056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0013999999995693e-05, 'source_diff': 1.0013999999995693e-05}, {'time': 0.032724903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.032730153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.032738472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.032747042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.569999999999411e-06, 'source_diff': 8.569999999999411e-06}, {'time': 0.032754333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.290999999999548e-06, 'source_diff': 7.290999999999548e-06}, {'time': 0.032760181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.84800000000274e-06, 'source_diff': 5.84800000000274e-06}, {'time': 0.032764167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.032770208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.041000000005237e-06, 'source_diff': 6.041000000005237e-06}, {'time': 0.032781681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1472999999997957e-05, 'source_diff': 1.1472999999997957e-05}, {'time': 0.032792986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1305000000003118e-05, 'source_diff': 1.1305000000003118e-05}, {'time': 0.032802347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.03280925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.902999999995607e-06, 'source_diff': 6.902999999995607e-06}, {'time': 0.032823417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4167000000002428e-05, 'source_diff': 1.4167000000002428e-05}, {'time': 0.032831972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.555000000000368e-06, 'source_diff': 8.555000000000368e-06}, {'time': 0.032839292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.319999999998161e-06, 'source_diff': 7.319999999998161e-06}, {'time': 0.032848097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.805000000000618e-06, 'source_diff': 8.805000000000618e-06}, {'time': 0.032853903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.805999999997091e-06, 'source_diff': 5.805999999997091e-06}, {'time': 0.032869111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5208000000002664e-05, 'source_diff': 1.5208000000002664e-05}, {'time': 0.032884125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5014000000000693e-05, 'source_diff': 1.5014000000000693e-05}, {'time': 0.032890806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.681000000001436e-06, 'source_diff': 6.681000000001436e-06}, {'time': 0.032902083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.127699999999704e-05, 'source_diff': 1.127699999999704e-05}, {'time': 0.032904597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.032908764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:19.698" endtime="20201112 12:42:19.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.687" endtime="20201112 12:42:19.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:19.744" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:19.710" endtime="20201112 12:42:19.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.754" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:19.751" endtime="20201112 12:42:19.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.761" level="INFO">VALUE: {'sourcediff': [0, 1.105499999999593e-05, 1.1250000000004312e-05, 1.2110999999995209e-05, 1.1666999999999927e-05, 6.27800000000539e-06, 1.5429999999996835e-05, 8.555999999999842e-06, 6.054999999997868e-06, 1.2375000000001968e-05, 8.736000000002242e-06, 9.570000000000412e-06, 5.846999999996327e-06, 1.5000000000001124e-05, 1.4625000000004218e-05, 1.3110999999996209e-05, 6.2639999999988816e-06, 8.139000000004226e-06, 3.555999999994841e-06, 3.7770000000034165e-06, 7.500000000000562e-06, 1.461099999999771e-05, 4.403000000000046e-06, 1.0834000000001232e-05, 6.276999999998978e-06, 5.83400000000317e-06, 1.0013999999995693e-05, 1.0847000000001328e-05, 5.2499999999983116e-06, 8.318999999999688e-06, 8.569999999999411e-06, 7.290999999999548e-06, 5.84800000000274e-06, 3.9859999999974915e-06, 6.041000000005237e-06, 1.1472999999997957e-05, 1.1305000000003118e-05, 9.360999999999398e-06, 6.902999999995607e-06, 1.4167000000002428e-05, 8.555000000000368e-06, 7.319999999998161e-06, 8.805000000000618e-06, 5.805999999997091e-06, 1.5208000000002664e-05, 1.5014000000000693e-05, 6.681000000001436e-06, 1.127699999999704e-05, 2.51400000000207e-06, 4.166999999999366e-06], 'time': [0.032471181, 0.032482236, 0.032493486, 0.032505597, 0.032517264, 0.032523542, 0.032538972, 0.032547528, 0.032553583, 0.032565958, 0.032574694, 0.032584264, 0.032590111, 0.032605111, 0.032619736, 0.032632847, 0.032639111, 0.03264725, 0.032650806, 0.032654583, 0.032662083, 0.032676694, 0.032681097, 0.032691931, 0.032698208, 0.032704042, 0.032714056, 0.032724903, 0.032730153, 0.032738472, 0.032747042, 0.032754333, 0.032760181, 0.032764167, 0.032770208, 0.032781681, 0.032792986, 0.032802347, 0.03280925, 0.032823417, 0.032831972, 0.032839292, 0.032848097, 0.032853903, 0.032869111, 0.032884125, 0.032890806, 0.032902083, 0.032904597, 0.032908764], 'source_diff': [0, 1.105499999999593e-05, 1.1250000000004312e-05, 1.2110999999995209e-05, 1.1666999999999927e-05, 6.27800000000539e-06, 1.5429999999996835e-05, 8.555999999999842e-06, 6.054999999997868e-06, 1.2375000000001968e-05, 8.736000000002242e-06, 9.570000000000412e-06, 5.846999999996327e-06, 1.5000000000001124e-05, 1.4625000000004218e-05, 1.3110999999996209e-05, 6.2639999999988816e-06, 8.139000000004226e-06, 3.555999999994841e-06, 3.7770000000034165e-06, 7.500000000000562e-06, 1.461099999999771e-05, 4.403000000000046e-06, 1.0834000000001232e-05, 6.276999999998978e-06, 5.83400000000317e-06, 1.0013999999995693e-05, 1.0847000000001328e-05, 5.2499999999983116e-06, 8.318999999999688e-06, 8.569999999999411e-06, 7.290999999999548e-06, 5.84800000000274e-06, 3.9859999999974915e-06, 6.041000000005237e-06, 1.1472999999997957e-05, 1.1305000000003118e-05, 9.360999999999398e-06, 6.902999999995607e-06, 1.4167000000002428e-05, 8.555000000000368e-06, 7.319999999998161e-06, 8.805000000000618e-06, 5.805999999997091e-06, 1.5208000000002664e-05, 1.5014000000000693e-05, 6.681000000001436e-06, 1.127699999999704e-05, 2.51400000000207e-06, 4.166999999999366e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:19.756" endtime="20201112 12:42:19.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.746" endtime="20201112 12:42:19.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:19.774" level="INFO">${RESULT} = [{'time': 0.032482236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.105499999999593e-05, 'source_diff': 1.105499999999593e-05}, {'time': 0.032505597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:19.766" endtime="20201112 12:42:19.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:19.793" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:19.776" endtime="20201112 12:42:19.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.804" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:19.802" endtime="20201112 12:42:19.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.810" level="INFO">VALUE: [1.105499999999593e-05, 1.2110999999995209e-05, 6.27800000000539e-06, 8.555999999999842e-06, 1.2375000000001968e-05, 9.570000000000412e-06, 1.5000000000001124e-05, 1.3110999999996209e-05, 8.139000000004226e-06, 3.7770000000034165e-06, 1.461099999999771e-05, 1.0834000000001232e-05, 5.83400000000317e-06, 1.0847000000001328e-05, 8.318999999999688e-06, 7.290999999999548e-06, 3.9859999999974915e-06, 1.1472999999997957e-05, 9.360999999999398e-06, 1.4167000000002428e-05, 7.319999999998161e-06, 5.805999999997091e-06, 1.5014000000000693e-05, 1.127699999999704e-05, 4.166999999999366e-06]</msg>
<status status="PASS" starttime="20201112 12:42:19.807" endtime="20201112 12:42:19.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.795" endtime="20201112 12:42:19.813"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.819" endtime="20201112 12:42:19.822"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:19.828" endtime="20201112 12:42:19.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.824" endtime="20201112 12:42:19.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.815" endtime="20201112 12:42:19.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.254" endtime="20201112 12:42:19.855"></status>
</kw>
<msg timestamp="20201112 12:42:19.855" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.878" endtime="20201112 12:42:19.892"></status>
</kw>
<msg timestamp="20201112 12:42:19.894" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:19.873" endtime="20201112 12:42:19.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.900" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:19.896" endtime="20201112 12:42:19.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.903" endtime="20201112 12:42:19.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.865" endtime="20201112 12:42:19.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.860" endtime="20201112 12:42:19.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.928" endtime="20201112 12:42:20.263"></status>
</kw>
<msg timestamp="20201112 12:42:20.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040832319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040836083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:19.924" endtime="20201112 12:42:20.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040832319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040836083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:20.270" endtime="20201112 12:42:20.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.284" endtime="20201112 12:42:20.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.916" endtime="20201112 12:42:20.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.911" endtime="20201112 12:42:20.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.302" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:20.299" endtime="20201112 12:42:20.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.310" level="INFO">VALUE: [{'time': 0.040832319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040836083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7640000000033202e-06, 'source_diff': 3.7640000000033202e-06}, {'time': 0.040845264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.180999999996997e-06, 'source_diff': 9.180999999996997e-06}, {'time': 0.040849444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.040858625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000003936e-06, 'source_diff': 9.181000000003936e-06}, {'time': 0.04087325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4624999999997279e-05, 'source_diff': 1.4624999999997279e-05}, {'time': 0.040880111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.860999999996897e-06, 'source_diff': 6.860999999996897e-06}, {'time': 0.040883667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.55600000000178e-06, 'source_diff': 3.55600000000178e-06}, {'time': 0.040887847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.040895375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.040905181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.040920403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5222000000002234e-05, 'source_diff': 1.5222000000002234e-05}, {'time': 0.040929806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.040933361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5550000000023063e-06, 'source_diff': 3.5550000000023063e-06}, {'time': 0.040944403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1041999999995833e-05, 'source_diff': 1.1041999999995833e-05}, {'time': 0.040956778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2375000000001968e-05, 'source_diff': 1.2375000000001968e-05}, {'time': 0.040965264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.040979653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4388999999996599e-05, 'source_diff': 1.4388999999996599e-05}, {'time': 0.040991181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1528000000003702e-05, 'source_diff': 1.1528000000003702e-05}, {'time': 0.041001347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0165999999998954e-05, 'source_diff': 1.0165999999998954e-05}, {'time': 0.041007403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.055999999997341e-06, 'source_diff': 6.055999999997341e-06}, {'time': 0.041016222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.041022847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.041032681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.834000000000231e-06, 'source_diff': 9.834000000000231e-06}, {'time': 0.041041028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.041043736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7079999999971016e-06, 'source_diff': 2.7079999999971016e-06}, {'time': 0.041053542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.041057931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.041062528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.041070681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.152999999996857e-06, 'source_diff': 8.152999999996857e-06}, {'time': 0.041075264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.583000000002446e-06, 'source_diff': 4.583000000002446e-06}, {'time': 0.041085986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0721999999997733e-05, 'source_diff': 1.0721999999997733e-05}, {'time': 0.041094042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.055999999999341e-06, 'source_diff': 8.055999999999341e-06}, {'time': 0.041099722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.680000000000962e-06, 'source_diff': 5.680000000000962e-06}, {'time': 0.041114292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4569999999998473e-05, 'source_diff': 1.4569999999998473e-05}, {'time': 0.041127, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2708000000000164e-05, 'source_diff': 1.2708000000000164e-05}, {'time': 0.041135361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000005336e-06, 'source_diff': 8.361000000005336e-06}, {'time': 0.041149542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4180999999995059e-05, 'source_diff': 1.4180999999995059e-05}, {'time': 0.041159153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.041171236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2083000000003008e-05, 'source_diff': 1.2083000000003008e-05}, {'time': 0.041185625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4388999999996599e-05, 'source_diff': 1.4388999999996599e-05}, {'time': 0.041192722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.097000000004516e-06, 'source_diff': 7.097000000004516e-06}, {'time': 0.041206903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4181000000001998e-05, 'source_diff': 1.4181000000001998e-05}, {'time': 0.041211083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.041222569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1485999999998053e-05, 'source_diff': 1.1485999999998053e-05}, {'time': 0.041235069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2499999999998623e-05, 'source_diff': 1.2499999999998623e-05}, {'time': 0.041239042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.972999999997395e-06, 'source_diff': 3.972999999997395e-06}, {'time': 0.041250736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1694000000006533e-05, 'source_diff': 1.1694000000006533e-05}, {'time': 0.041264917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4180999999995059e-05, 'source_diff': 1.4180999999995059e-05}, {'time': 0.041272222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.304999999999118e-06, 'source_diff': 7.304999999999118e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:20.304" endtime="20201112 12:42:20.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.293" endtime="20201112 12:42:20.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:20.348" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:20.316" endtime="20201112 12:42:20.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.358" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:20.355" endtime="20201112 12:42:20.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.365" level="INFO">VALUE: {'sourcediff': [0, 3.7640000000033202e-06, 9.180999999996997e-06, 4.179999999999462e-06, 9.181000000003936e-06, 1.4624999999997279e-05, 6.860999999996897e-06, 3.55600000000178e-06, 4.179999999999462e-06, 7.527999999999702e-06, 9.806000000001092e-06, 1.5222000000002234e-05, 9.402999999998107e-06, 3.5550000000023063e-06, 1.1041999999995833e-05, 1.2375000000001968e-05, 8.486000000001992e-06, 1.4388999999996599e-05, 1.1528000000003702e-05, 1.0165999999998954e-05, 6.055999999997341e-06, 8.819000000000188e-06, 6.625000000003156e-06, 9.834000000000231e-06, 8.346999999998828e-06, 2.7079999999971016e-06, 9.806000000001092e-06, 4.389000000000476e-06, 4.597000000002016e-06, 8.152999999996857e-06, 4.583000000002446e-06, 1.0721999999997733e-05, 8.055999999999341e-06, 5.680000000000962e-06, 1.4569999999998473e-05, 1.2708000000000164e-05, 8.361000000005336e-06, 1.4180999999995059e-05, 9.610999999999648e-06, 1.2083000000003008e-05, 1.4388999999996599e-05, 7.097000000004516e-06, 1.4181000000001998e-05, 4.179999999999462e-06, 1.1485999999998053e-05, 1.2499999999998623e-05, 3.972999999997395e-06, 1.1694000000006533e-05, 1.4180999999995059e-05, 7.304999999999118e-06], 'time': [0.040832319, 0.040836083, 0.040845264, 0.040849444, 0.040858625, 0.04087325, 0.040880111, 0.040883667, 0.040887847, 0.040895375, 0.040905181, 0.040920403, 0.040929806, 0.040933361, 0.040944403, 0.040956778, 0.040965264, 0.040979653, 0.040991181, 0.041001347, 0.041007403, 0.041016222, 0.041022847, 0.041032681, 0.041041028, 0.041043736, 0.041053542, 0.041057931, 0.041062528, 0.041070681, 0.041075264, 0.041085986, 0.041094042, 0.041099722, 0.041114292, 0.041127, 0.041135361, 0.041149542, 0.041159153, 0.041171236, 0.041185625, 0.041192722, 0.041206903, 0.041211083, 0.041222569, 0.041235069, 0.041239042, 0.041250736, 0.041264917, 0.041272222], 'source_diff': [0, 3.7640000000033202e-06, 9.180999999996997e-06, 4.179999999999462e-06, 9.181000000003936e-06, 1.4624999999997279e-05, 6.860999999996897e-06, 3.55600000000178e-06, 4.179999999999462e-06, 7.527999999999702e-06, 9.806000000001092e-06, 1.5222000000002234e-05, 9.402999999998107e-06, 3.5550000000023063e-06, 1.1041999999995833e-05, 1.2375000000001968e-05, 8.486000000001992e-06, 1.4388999999996599e-05, 1.1528000000003702e-05, 1.0165999999998954e-05, 6.055999999997341e-06, 8.819000000000188e-06, 6.625000000003156e-06, 9.834000000000231e-06, 8.346999999998828e-06, 2.7079999999971016e-06, 9.806000000001092e-06, 4.389000000000476e-06, 4.597000000002016e-06, 8.152999999996857e-06, 4.583000000002446e-06, 1.0721999999997733e-05, 8.055999999999341e-06, 5.680000000000962e-06, 1.4569999999998473e-05, 1.2708000000000164e-05, 8.361000000005336e-06, 1.4180999999995059e-05, 9.610999999999648e-06, 1.2083000000003008e-05, 1.4388999999996599e-05, 7.097000000004516e-06, 1.4181000000001998e-05, 4.179999999999462e-06, 1.1485999999998053e-05, 1.2499999999998623e-05, 3.972999999997395e-06, 1.1694000000006533e-05, 1.4180999999995059e-05, 7.304999999999118e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:20.360" endtime="20201112 12:42:20.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.350" endtime="20201112 12:42:20.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:20.377" level="INFO">${RESULT} = [{'time': 0.040836083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7640000000033202e-06, 'source_diff': 3.7640000000033202e-06}, {'time': 0.040849444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:20.370" endtime="20201112 12:42:20.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:20.397" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:20.380" endtime="20201112 12:42:20.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.408" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:20.406" endtime="20201112 12:42:20.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.413" level="INFO">VALUE: [3.7640000000033202e-06, 4.179999999999462e-06, 1.4624999999997279e-05, 3.55600000000178e-06, 7.527999999999702e-06, 1.5222000000002234e-05, 3.5550000000023063e-06, 1.2375000000001968e-05, 1.4388999999996599e-05, 1.0165999999998954e-05, 8.819000000000188e-06, 9.834000000000231e-06, 2.7079999999971016e-06, 4.389000000000476e-06, 8.152999999996857e-06, 1.0721999999997733e-05, 5.680000000000962e-06, 1.2708000000000164e-05, 1.4180999999995059e-05, 1.2083000000003008e-05, 7.097000000004516e-06, 4.179999999999462e-06, 1.2499999999998623e-05, 1.1694000000006533e-05, 7.304999999999118e-06]</msg>
<status status="PASS" starttime="20201112 12:42:20.411" endtime="20201112 12:42:20.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.399" endtime="20201112 12:42:20.417"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.423" endtime="20201112 12:42:20.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:20.432" endtime="20201112 12:42:20.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.428" endtime="20201112 12:42:20.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.418" endtime="20201112 12:42:20.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.857" endtime="20201112 12:42:20.459"></status>
</kw>
<msg timestamp="20201112 12:42:20.459" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.482" endtime="20201112 12:42:20.496"></status>
</kw>
<msg timestamp="20201112 12:42:20.497" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:20.477" endtime="20201112 12:42:20.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.504" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:20.500" endtime="20201112 12:42:20.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.507" endtime="20201112 12:42:20.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.469" endtime="20201112 12:42:20.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.464" endtime="20201112 12:42:20.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.532" endtime="20201112 12:42:20.866"></status>
</kw>
<msg timestamp="20201112 12:42:20.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040773389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040785653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:20.528" endtime="20201112 12:42:20.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040773389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040785653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:20.873" endtime="20201112 12:42:20.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.887" endtime="20201112 12:42:20.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.521" endtime="20201112 12:42:20.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.516" endtime="20201112 12:42:20.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.905" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:20.902" endtime="20201112 12:42:20.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.913" level="INFO">VALUE: [{'time': 0.040773389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040785653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2263999999997943e-05, 'source_diff': 1.2263999999997943e-05}, {'time': 0.040793153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.040803167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0014000000002632e-05, 'source_diff': 1.0014000000002632e-05}, {'time': 0.040808806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.040823875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.50689999999995e-05, 'source_diff': 1.50689999999995e-05}, {'time': 0.040834889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1013999999996693e-05, 'source_diff': 1.1013999999996693e-05}, {'time': 0.040846778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1889000000001038e-05, 'source_diff': 1.1889000000001038e-05}, {'time': 0.040851194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.040857014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.819999999996661e-06, 'source_diff': 5.819999999996661e-06}, {'time': 0.040869528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2514000000005132e-05, 'source_diff': 1.2514000000005132e-05}, {'time': 0.040875375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.846999999996327e-06, 'source_diff': 5.846999999996327e-06}, {'time': 0.040878097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7220000000036104e-06, 'source_diff': 2.7220000000036104e-06}, {'time': 0.04089275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4652999999996419e-05, 'source_diff': 1.4652999999996419e-05}, {'time': 0.040897917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.040913347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5430000000003774e-05, 'source_diff': 1.5430000000003774e-05}, {'time': 0.040928861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5513999999994255e-05, 'source_diff': 1.5513999999994255e-05}, {'time': 0.04094025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389000000000538e-05, 'source_diff': 1.1389000000000538e-05}, {'time': 0.040948417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.167000000003366e-06, 'source_diff': 8.167000000003366e-06}, {'time': 0.040963639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5222000000002234e-05, 'source_diff': 1.5222000000002234e-05}, {'time': 0.040977389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.0409845, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.110999999997147e-06, 'source_diff': 7.110999999997147e-06}, {'time': 0.040988875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.04099475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.875000000002406e-06, 'source_diff': 5.875000000002406e-06}, {'time': 0.040997028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.277999999994451e-06, 'source_diff': 2.277999999994451e-06}, {'time': 0.041004347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.318999999998688e-06, 'source_diff': 7.318999999998688e-06}, {'time': 0.041006847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.041017486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.0410275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0014000000002632e-05, 'source_diff': 1.0014000000002632e-05}, {'time': 0.041038597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1097000000001578e-05, 'source_diff': 1.1097000000001578e-05}, {'time': 0.04105275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4152999999995919e-05, 'source_diff': 1.4152999999995919e-05}, {'time': 0.041061708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.958000000003352e-06, 'source_diff': 8.958000000003352e-06}, {'time': 0.041067986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.041078194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0207999999997663e-05, 'source_diff': 1.0207999999997663e-05}, {'time': 0.041092194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4000000000000123e-05, 'source_diff': 1.4000000000000123e-05}, {'time': 0.041099069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.875000000003406e-06, 'source_diff': 6.875000000003406e-06}, {'time': 0.041110972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1903000000000608e-05, 'source_diff': 1.1903000000000608e-05}, {'time': 0.041121194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0221999999997233e-05, 'source_diff': 1.0221999999997233e-05}, {'time': 0.041133903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2708999999999637e-05, 'source_diff': 1.2708999999999637e-05}, {'time': 0.041141625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.041152264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.041165403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3139000000002288e-05, 'source_diff': 1.3139000000002288e-05}, {'time': 0.041180625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5221999999995295e-05, 'source_diff': 1.5221999999995295e-05}, {'time': 0.041188167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.041195444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.276999999999978e-06, 'source_diff': 7.276999999999978e-06}, {'time': 0.041210667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5223000000001707e-05, 'source_diff': 1.5223000000001707e-05}, {'time': 0.041223625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2958000000000414e-05, 'source_diff': 1.2958000000000414e-05}, {'time': 0.041229264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.041237611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.041251444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.383299999999782e-05, 'source_diff': 1.383299999999782e-05}]</msg>
<status status="PASS" starttime="20201112 12:42:20.907" endtime="20201112 12:42:20.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.896" endtime="20201112 12:42:20.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:20.951" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:20.919" endtime="20201112 12:42:20.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.961" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:20.958" endtime="20201112 12:42:20.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.968" level="INFO">VALUE: {'sourcediff': [0, 1.2263999999997943e-05, 7.500000000000562e-06, 1.0014000000002632e-05, 5.639000000001726e-06, 1.50689999999995e-05, 1.1013999999996693e-05, 1.1889000000001038e-05, 4.416000000000142e-06, 5.819999999996661e-06, 1.2514000000005132e-05, 5.846999999996327e-06, 2.7220000000036104e-06, 1.4652999999996419e-05, 5.167000000000366e-06, 1.5430000000003774e-05, 1.5513999999994255e-05, 1.1389000000000538e-05, 8.167000000003366e-06, 1.5222000000002234e-05, 1.3749999999999873e-05, 7.110999999997147e-06, 4.375000000000906e-06, 5.875000000002406e-06, 2.277999999994451e-06, 7.318999999998688e-06, 2.5000000000025002e-06, 1.0638999999999788e-05, 1.0014000000002632e-05, 1.1097000000001578e-05, 1.4152999999995919e-05, 8.958000000003352e-06, 6.2779999999984515e-06, 1.0207999999997663e-05, 1.4000000000000123e-05, 6.875000000003406e-06, 1.1903000000000608e-05, 1.0221999999997233e-05, 1.2708999999999637e-05, 7.722000000001672e-06, 1.0638999999999788e-05, 1.3139000000002288e-05, 1.5221999999995295e-05, 7.5419999999992715e-06, 7.276999999999978e-06, 1.5223000000001707e-05, 1.2958000000000414e-05, 5.639000000001726e-06, 8.346999999998828e-06, 1.383299999999782e-05], 'time': [0.040773389, 0.040785653, 0.040793153, 0.040803167, 0.040808806, 0.040823875, 0.040834889, 0.040846778, 0.040851194, 0.040857014, 0.040869528, 0.040875375, 0.040878097, 0.04089275, 0.040897917, 0.040913347, 0.040928861, 0.04094025, 0.040948417, 0.040963639, 0.040977389, 0.0409845, 0.040988875, 0.04099475, 0.040997028, 0.041004347, 0.041006847, 0.041017486, 0.0410275, 0.041038597, 0.04105275, 0.041061708, 0.041067986, 0.041078194, 0.041092194, 0.041099069, 0.041110972, 0.041121194, 0.041133903, 0.041141625, 0.041152264, 0.041165403, 0.041180625, 0.041188167, 0.041195444, 0.041210667, 0.041223625, 0.041229264, 0.041237611, 0.041251444], 'source_diff': [0, 1.2263999999997943e-05, 7.500000000000562e-06, 1.0014000000002632e-05, 5.639000000001726e-06, 1.50689999999995e-05, 1.1013999999996693e-05, 1.1889000000001038e-05, 4.416000000000142e-06, 5.819999999996661e-06, 1.2514000000005132e-05, 5.846999999996327e-06, 2.7220000000036104e-06, 1.4652999999996419e-05, 5.167000000000366e-06, 1.5430000000003774e-05, 1.5513999999994255e-05, 1.1389000000000538e-05, 8.167000000003366e-06, 1.5222000000002234e-05, 1.3749999999999873e-05, 7.110999999997147e-06, 4.375000000000906e-06, 5.875000000002406e-06, 2.277999999994451e-06, 7.318999999998688e-06, 2.5000000000025002e-06, 1.0638999999999788e-05, 1.0014000000002632e-05, 1.1097000000001578e-05, 1.4152999999995919e-05, 8.958000000003352e-06, 6.2779999999984515e-06, 1.0207999999997663e-05, 1.4000000000000123e-05, 6.875000000003406e-06, 1.1903000000000608e-05, 1.0221999999997233e-05, 1.2708999999999637e-05, 7.722000000001672e-06, 1.0638999999999788e-05, 1.3139000000002288e-05, 1.5221999999995295e-05, 7.5419999999992715e-06, 7.276999999999978e-06, 1.5223000000001707e-05, 1.2958000000000414e-05, 5.639000000001726e-06, 8.346999999998828e-06, 1.383299999999782e-05], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:20.963" endtime="20201112 12:42:20.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.953" endtime="20201112 12:42:20.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:20.980" level="INFO">${RESULT} = [{'time': 0.040785653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2263999999997943e-05, 'source_diff': 1.2263999999997943e-05}, {'time': 0.040803167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:20.973" endtime="20201112 12:42:20.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:21.000" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:20.983" endtime="20201112 12:42:21.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.011" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:21.009" endtime="20201112 12:42:21.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.016" level="INFO">VALUE: [1.2263999999997943e-05, 1.0014000000002632e-05, 1.50689999999995e-05, 1.1889000000001038e-05, 5.819999999996661e-06, 5.846999999996327e-06, 1.4652999999996419e-05, 1.5430000000003774e-05, 1.1389000000000538e-05, 1.5222000000002234e-05, 7.110999999997147e-06, 5.875000000002406e-06, 7.318999999998688e-06, 1.0638999999999788e-05, 1.1097000000001578e-05, 8.958000000003352e-06, 1.0207999999997663e-05, 6.875000000003406e-06, 1.0221999999997233e-05, 7.722000000001672e-06, 1.3139000000002288e-05, 7.5419999999992715e-06, 1.5223000000001707e-05, 5.639000000001726e-06, 1.383299999999782e-05]</msg>
<status status="PASS" starttime="20201112 12:42:21.014" endtime="20201112 12:42:21.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.002" endtime="20201112 12:42:21.019"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.026" endtime="20201112 12:42:21.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:21.035" endtime="20201112 12:42:21.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.031" endtime="20201112 12:42:21.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.022" endtime="20201112 12:42:21.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.461" endtime="20201112 12:42:21.062"></status>
</kw>
<msg timestamp="20201112 12:42:21.062" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.085" endtime="20201112 12:42:21.099"></status>
</kw>
<msg timestamp="20201112 12:42:21.100" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:21.080" endtime="20201112 12:42:21.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.107" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:21.102" endtime="20201112 12:42:21.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.109" endtime="20201112 12:42:21.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.072" endtime="20201112 12:42:21.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.067" endtime="20201112 12:42:21.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.134" endtime="20201112 12:42:21.469"></status>
</kw>
<msg timestamp="20201112 12:42:21.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040790556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040796403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:21.131" endtime="20201112 12:42:21.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040790556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040796403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:21.476" endtime="20201112 12:42:21.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.489" endtime="20201112 12:42:21.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.123" endtime="20201112 12:42:21.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.118" endtime="20201112 12:42:21.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.507" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:21.504" endtime="20201112 12:42:21.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.515" level="INFO">VALUE: [{'time': 0.040790556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040796403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.847000000003266e-06, 'source_diff': 5.847000000003266e-06}, {'time': 0.040806833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0429999999998774e-05, 'source_diff': 1.0429999999998774e-05}, {'time': 0.040814361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.040818153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.79200000000246e-06, 'source_diff': 3.79200000000246e-06}, {'time': 0.040822514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.360999999994397e-06, 'source_diff': 4.360999999994397e-06}, {'time': 0.040829403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.889000000002976e-06, 'source_diff': 6.889000000002976e-06}, {'time': 0.040838597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.193999999997093e-06, 'source_diff': 9.193999999997093e-06}, {'time': 0.040853819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5222000000002234e-05, 'source_diff': 1.5222000000002234e-05}, {'time': 0.040858611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.79200000000346e-06, 'source_diff': 4.79200000000346e-06}, {'time': 0.040873639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5028000000000263e-05, 'source_diff': 1.5028000000000263e-05}, {'time': 0.040883847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0207999999997663e-05, 'source_diff': 1.0207999999997663e-05}, {'time': 0.040893861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0013999999995693e-05, 'source_diff': 1.0013999999995693e-05}, {'time': 0.04090325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.389000000005476e-06, 'source_diff': 9.389000000005476e-06}, {'time': 0.040913486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0235999999996803e-05, 'source_diff': 1.0235999999996803e-05}, {'time': 0.040921403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.917000000003116e-06, 'source_diff': 7.917000000003116e-06}, {'time': 0.040930583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.179999999997523e-06, 'source_diff': 9.179999999997523e-06}, {'time': 0.040944375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3791999999998583e-05, 'source_diff': 1.3791999999998583e-05}, {'time': 0.040956042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1666999999999927e-05, 'source_diff': 1.1666999999999927e-05}, {'time': 0.040966264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0222000000004172e-05, 'source_diff': 1.0222000000004172e-05}, {'time': 0.040980653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4388999999996599e-05, 'source_diff': 1.4388999999996599e-05}, {'time': 0.040988375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.040991931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.55600000000178e-06, 'source_diff': 3.55600000000178e-06}, {'time': 0.041007375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5443999999996405e-05, 'source_diff': 1.5443999999996405e-05}, {'time': 0.041010931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.55600000000178e-06, 'source_diff': 3.55600000000178e-06}, {'time': 0.041024681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.041033444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.763000000001908e-06, 'source_diff': 8.763000000001908e-06}, {'time': 0.041037, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.555999999994841e-06, 'source_diff': 3.555999999994841e-06}, {'time': 0.041040764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7640000000033202e-06, 'source_diff': 3.7640000000033202e-06}, {'time': 0.041053903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3139000000002288e-05, 'source_diff': 1.3139000000002288e-05}, {'time': 0.041060597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.693999999994593e-06, 'source_diff': 6.693999999994593e-06}, {'time': 0.041071847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1250000000004312e-05, 'source_diff': 1.1250000000004312e-05}, {'time': 0.041085833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3986000000000554e-05, 'source_diff': 1.3986000000000554e-05}, {'time': 0.041100653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4819999999998723e-05, 'source_diff': 1.4819999999998723e-05}, {'time': 0.041114611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3958000000001414e-05, 'source_diff': 1.3958000000001414e-05}, {'time': 0.041117167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.55600000000078e-06, 'source_diff': 2.55600000000078e-06}, {'time': 0.041123806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.638999999995787e-06, 'source_diff': 6.638999999995787e-06}, {'time': 0.041134236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0429999999998774e-05, 'source_diff': 1.0429999999998774e-05}, {'time': 0.041141347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000004086e-06, 'source_diff': 7.111000000004086e-06}, {'time': 0.041151139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.792000000001522e-06, 'source_diff': 9.792000000001522e-06}, {'time': 0.041164069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2929999999994335e-05, 'source_diff': 1.2929999999994335e-05}, {'time': 0.04117825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4181000000001998e-05, 'source_diff': 1.4181000000001998e-05}, {'time': 0.041193069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.481899999999925e-05, 'source_diff': 1.481899999999925e-05}, {'time': 0.041198486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.041203722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.041213944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0222000000004172e-05, 'source_diff': 1.0222000000004172e-05}, {'time': 0.041224583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.041227306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722999999996145e-06, 'source_diff': 2.722999999996145e-06}, {'time': 0.041236278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.972000000002922e-06, 'source_diff': 8.972000000002922e-06}, {'time': 0.041248583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.230499999999718e-05, 'source_diff': 1.230499999999718e-05}]</msg>
<status status="PASS" starttime="20201112 12:42:21.509" endtime="20201112 12:42:21.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.498" endtime="20201112 12:42:21.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:21.554" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:21.521" endtime="20201112 12:42:21.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.564" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:21.562" endtime="20201112 12:42:21.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.572" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 5.847000000003266e-06, 1.0429999999998774e-05, 7.527999999999702e-06, 3.79200000000246e-06, 4.360999999994397e-06, 6.889000000002976e-06, 9.193999999997093e-06, 1.5222000000002234e-05, 4.79200000000346e-06, 1.5028000000000263e-05, 1.0207999999997663e-05, 1.0013999999995693e-05, 9.389000000005476e-06, 1.0235999999996803e-05, 7.917000000003116e-06, 9.179999999997523e-06, 1.3791999999998583e-05, 1.1666999999999927e-05, 1.0222000000004172e-05, 1.4388999999996599e-05, 7.722000000001672e-06, 3.55600000000178e-06, 1.5443999999996405e-05, 3.55600000000178e-06, 1.3749999999999873e-05, 8.763000000001908e-06, 3.555999999994841e-06, 3.7640000000033202e-06, 1.3139000000002288e-05, 6.693999999994593e-06, 1.1250000000004312e-05, 1.3986000000000554e-05, 1.4819999999998723e-05, 1.3958000000001414e-05, 2.55600000000078e-06, 6.638999999995787e-06, 1.0429999999998774e-05, 7.111000000004086e-06, 9.792000000001522e-06, 1.2929999999994335e-05, 1.4181000000001998e-05, 1.481899999999925e-05, 5.417000000000616e-06, 5.235999999998742e-06, 1.0222000000004172e-05, 1.0638999999999788e-05, 2.722999999996145e-06, 8.972000000002922e-06, 1.230499999999718e-05], 'time': [0.040790556, 0.040796403, 0.040806833, 0.040814361, 0.040818153, 0.040822514, 0.040829403, 0.040838597, 0.040853819, 0.040858611, 0.040873639, 0.040883847, 0.040893861, 0.04090325, 0.040913486, 0.040921403, 0.040930583, 0.040944375, 0.040956042, 0.040966264, 0.040980653, 0.040988375, 0.040991931, 0.041007375, 0.041010931, 0.041024681, 0.041033444, 0.041037, 0.041040764, 0.041053903, 0.041060597, 0.041071847, 0.041085833, 0.041100653, 0.041114611, 0.041117167, 0.041123806, 0.041134236, 0.041141347, 0.041151139, 0.041164069, 0.04117825, 0.041193069, 0.041198486, 0.041203722, 0.041213944, 0.041224583, 0.041227306, 0.041236278, 0.041248583], 'source_diff': [0, 5.847000000003266e-06, 1.0429999999998774e-05, 7.527999999999702e-06, 3.79200000000246e-06, 4.360999999994397e-06, 6.889000000002976e-06, 9.193999999997093e-06, 1.5222000000002234e-05, 4.79200000000346e-06, 1.5028000000000263e-05, 1.0207999999997663e-05, 1.0013999999995693e-05, 9.389000000005476e-06, 1.0235999999996803e-05, 7.917000000003116e-06, 9.179999999997523e-06, 1.3791999999998583e-05, 1.1666999999999927e-05, 1.0222000000004172e-05, 1.4388999999996599e-05, 7.722000000001672e-06, 3.55600000000178e-06, 1.5443999999996405e-05, 3.55600000000178e-06, 1.3749999999999873e-05, 8.763000000001908e-06, 3.555999999994841e-06, 3.7640000000033202e-06, 1.3139000000002288e-05, 6.693999999994593e-06, 1.1250000000004312e-05, 1.3986000000000554e-05, 1.4819999999998723e-05, 1.3958000000001414e-05, 2.55600000000078e-06, 6.638999999995787e-06, 1.0429999999998774e-05, 7.111000000004086e-06, 9.792000000001522e-06, 1.2929999999994335e-05, 1.4181000000001998e-05, 1.481899999999925e-05, 5.417000000000616e-06, 5.235999999998742e-06, 1.0222000000004172e-05, 1.0638999999999788e-05, 2.722999999996145e-06, 8.972000000002922e-06, 1.230499999999718e-05], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:21.567" endtime="20201112 12:42:21.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.556" endtime="20201112 12:42:21.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:21.584" level="INFO">${RESULT} = [{'time': 0.040796403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.847000000003266e-06, 'source_diff': 5.847000000003266e-06}, {'time': 0.040814361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:21.576" endtime="20201112 12:42:21.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:21.604" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:21.586" endtime="20201112 12:42:21.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.614" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:21.612" endtime="20201112 12:42:21.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.620" level="INFO">VALUE: [5.847000000003266e-06, 7.527999999999702e-06, 4.360999999994397e-06, 9.193999999997093e-06, 4.79200000000346e-06, 1.0207999999997663e-05, 9.389000000005476e-06, 7.917000000003116e-06, 1.3791999999998583e-05, 1.0222000000004172e-05, 7.722000000001672e-06, 1.5443999999996405e-05, 1.3749999999999873e-05, 3.555999999994841e-06, 1.3139000000002288e-05, 1.1250000000004312e-05, 1.4819999999998723e-05, 2.55600000000078e-06, 1.0429999999998774e-05, 9.792000000001522e-06, 1.4181000000001998e-05, 5.417000000000616e-06, 1.0222000000004172e-05, 2.722999999996145e-06, 1.230499999999718e-05]</msg>
<status status="PASS" starttime="20201112 12:42:21.617" endtime="20201112 12:42:21.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.605" endtime="20201112 12:42:21.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.630" endtime="20201112 12:42:21.633"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:21.639" endtime="20201112 12:42:21.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.634" endtime="20201112 12:42:21.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.625" endtime="20201112 12:42:21.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.064" endtime="20201112 12:42:21.665"></status>
</kw>
<msg timestamp="20201112 12:42:21.665" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.688" endtime="20201112 12:42:21.702"></status>
</kw>
<msg timestamp="20201112 12:42:21.703" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:21.683" endtime="20201112 12:42:21.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.710" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:21.706" endtime="20201112 12:42:21.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.712" endtime="20201112 12:42:21.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.675" endtime="20201112 12:42:21.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.670" endtime="20201112 12:42:21.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.737" endtime="20201112 12:42:22.074"></status>
</kw>
<msg timestamp="20201112 12:42:22.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040603264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040606389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:21.734" endtime="20201112 12:42:22.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040603264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040606389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:22.081" endtime="20201112 12:42:22.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.094" endtime="20201112 12:42:22.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.726" endtime="20201112 12:42:22.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.721" endtime="20201112 12:42:22.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.112" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:22.109" endtime="20201112 12:42:22.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.121" level="INFO">VALUE: [{'time': 0.040603264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040606389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.040615583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.193999999997093e-06, 'source_diff': 9.193999999997093e-06}, {'time': 0.040628722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3139000000002288e-05, 'source_diff': 1.3139000000002288e-05}, {'time': 0.040641236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.040649181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.945000000002256e-06, 'source_diff': 7.945000000002256e-06}, {'time': 0.040660222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1041000000003298e-05, 'source_diff': 1.1041000000003298e-05}, {'time': 0.040669403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.180999999996997e-06, 'source_diff': 9.180999999996997e-06}, {'time': 0.040680042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.040694847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.480499999999968e-05, 'source_diff': 1.480499999999968e-05}, {'time': 0.040700542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.040709875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.040713889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.01400000000357e-06, 'source_diff': 4.01400000000357e-06}, {'time': 0.040719486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999996077e-06, 'source_diff': 5.596999999996077e-06}, {'time': 0.040728042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.040732222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.040734736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.040740389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.040746875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.04075375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.874999999996467e-06, 'source_diff': 6.874999999996467e-06}, {'time': 0.040761069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.318999999998688e-06, 'source_diff': 7.318999999998688e-06}, {'time': 0.040769208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.139000000004226e-06, 'source_diff': 8.139000000004226e-06}, {'time': 0.040775042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833999999996231e-06, 'source_diff': 5.833999999996231e-06}, {'time': 0.040790264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5222000000002234e-05, 'source_diff': 1.5222000000002234e-05}, {'time': 0.040792569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.305000000001056e-06, 'source_diff': 2.305000000001056e-06}, {'time': 0.040802181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.611999999999121e-06, 'source_diff': 9.611999999999121e-06}, {'time': 0.040816556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}, {'time': 0.040827208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0651999999999884e-05, 'source_diff': 1.0651999999999884e-05}, {'time': 0.040839708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2500000000005562e-05, 'source_diff': 1.2500000000005562e-05}, {'time': 0.040847653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.944999999995317e-06, 'source_diff': 7.944999999995317e-06}, {'time': 0.040853903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.040857528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.040871875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4347000000004828e-05, 'source_diff': 1.4347000000004828e-05}, {'time': 0.040877917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.041999999997771e-06, 'source_diff': 6.041999999997771e-06}, {'time': 0.040888556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.040898194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.637999999999314e-06, 'source_diff': 9.637999999999314e-06}, {'time': 0.040906917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.723000000002146e-06, 'source_diff': 8.723000000002146e-06}, {'time': 0.040914708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.791000000000048e-06, 'source_diff': 7.791000000000048e-06}, {'time': 0.040926333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1625000000001218e-05, 'source_diff': 1.1625000000001218e-05}, {'time': 0.040937583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999997373e-05, 'source_diff': 1.1249999999997373e-05}, {'time': 0.040944694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.110999999997147e-06, 'source_diff': 7.110999999997147e-06}, {'time': 0.040951583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.889000000002976e-06, 'source_diff': 6.889000000002976e-06}, {'time': 0.0409595, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.917000000003116e-06, 'source_diff': 7.917000000003116e-06}, {'time': 0.040964306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.805999999996091e-06, 'source_diff': 4.805999999996091e-06}, {'time': 0.040978903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.459699999999814e-05, 'source_diff': 1.459699999999814e-05}, {'time': 0.040989958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1055000000002868e-05, 'source_diff': 1.1055000000002868e-05}, {'time': 0.041003792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3833999999997293e-05, 'source_diff': 1.3833999999997293e-05}, {'time': 0.041011514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.041018139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.041029611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}]</msg>
<status status="PASS" starttime="20201112 12:42:22.114" endtime="20201112 12:42:22.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.103" endtime="20201112 12:42:22.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:22.158" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:22.126" endtime="20201112 12:42:22.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.167" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:22.165" endtime="20201112 12:42:22.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.175" level="INFO">VALUE: {'sourcediff': [0, 3.124999999999656e-06, 9.193999999997093e-06, 1.3139000000002288e-05, 1.2513999999998193e-05, 7.945000000002256e-06, 1.1041000000003298e-05, 9.180999999996997e-06, 1.0638999999999788e-05, 1.480499999999968e-05, 5.695000000000006e-06, 9.333000000000258e-06, 4.01400000000357e-06, 5.596999999996077e-06, 8.555999999999842e-06, 4.179999999999462e-06, 2.51400000000207e-06, 5.653000000001296e-06, 6.485999999999992e-06, 6.874999999996467e-06, 7.318999999998688e-06, 8.139000000004226e-06, 5.833999999996231e-06, 1.5222000000002234e-05, 2.305000000001056e-06, 9.611999999999121e-06, 1.4374999999997029e-05, 1.0651999999999884e-05, 1.2500000000005562e-05, 7.944999999995317e-06, 6.249999999999312e-06, 3.625000000000156e-06, 1.4347000000004828e-05, 6.041999999997771e-06, 1.0638999999999788e-05, 9.637999999999314e-06, 8.723000000002146e-06, 7.791000000000048e-06, 1.1625000000001218e-05, 1.1249999999997373e-05, 7.110999999997147e-06, 6.889000000002976e-06, 7.917000000003116e-06, 4.805999999996091e-06, 1.459699999999814e-05, 1.1055000000002868e-05, 1.3833999999997293e-05, 7.722000000001672e-06, 6.625000000003156e-06, 1.1471999999998483e-05], 'time': [0.040603264, 0.040606389, 0.040615583, 0.040628722, 0.040641236, 0.040649181, 0.040660222, 0.040669403, 0.040680042, 0.040694847, 0.040700542, 0.040709875, 0.040713889, 0.040719486, 0.040728042, 0.040732222, 0.040734736, 0.040740389, 0.040746875, 0.04075375, 0.040761069, 0.040769208, 0.040775042, 0.040790264, 0.040792569, 0.040802181, 0.040816556, 0.040827208, 0.040839708, 0.040847653, 0.040853903, 0.040857528, 0.040871875, 0.040877917, 0.040888556, 0.040898194, 0.040906917, 0.040914708, 0.040926333, 0.040937583, 0.040944694, 0.040951583, 0.0409595, 0.040964306, 0.040978903, 0.040989958, 0.041003792, 0.041011514, 0.041018139, 0.041029611], 'source_diff': [0, 3.124999999999656e-06, 9.193999999997093e-06, 1.3139000000002288e-05, 1.2513999999998193e-05, 7.945000000002256e-06, 1.1041000000003298e-05, 9.180999999996997e-06, 1.0638999999999788e-05, 1.480499999999968e-05, 5.695000000000006e-06, 9.333000000000258e-06, 4.01400000000357e-06, 5.596999999996077e-06, 8.555999999999842e-06, 4.179999999999462e-06, 2.51400000000207e-06, 5.653000000001296e-06, 6.485999999999992e-06, 6.874999999996467e-06, 7.318999999998688e-06, 8.139000000004226e-06, 5.833999999996231e-06, 1.5222000000002234e-05, 2.305000000001056e-06, 9.611999999999121e-06, 1.4374999999997029e-05, 1.0651999999999884e-05, 1.2500000000005562e-05, 7.944999999995317e-06, 6.249999999999312e-06, 3.625000000000156e-06, 1.4347000000004828e-05, 6.041999999997771e-06, 1.0638999999999788e-05, 9.637999999999314e-06, 8.723000000002146e-06, 7.791000000000048e-06, 1.1625000000001218e-05, 1.1249999999997373e-05, 7.110999999997147e-06, 6.889000000002976e-06, 7.917000000003116e-06, 4.805999999996091e-06, 1.459699999999814e-05, 1.1055000000002868e-05, 1.3833999999997293e-05, 7.722000000001672e-06, 6.625000000003156e-06, 1.1471999999998483e-05], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:22.170" endtime="20201112 12:42:22.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.160" endtime="20201112 12:42:22.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:22.188" level="INFO">${RESULT} = [{'time': 0.040606389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.040628722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:22.180" endtime="20201112 12:42:22.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:22.207" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:22.190" endtime="20201112 12:42:22.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.218" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:22.216" endtime="20201112 12:42:22.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.223" level="INFO">VALUE: [3.124999999999656e-06, 1.3139000000002288e-05, 7.945000000002256e-06, 9.180999999996997e-06, 1.480499999999968e-05, 9.333000000000258e-06, 5.596999999996077e-06, 4.179999999999462e-06, 5.653000000001296e-06, 6.874999999996467e-06, 8.139000000004226e-06, 1.5222000000002234e-05, 9.611999999999121e-06, 1.0651999999999884e-05, 7.944999999995317e-06, 3.625000000000156e-06, 6.041999999997771e-06, 9.637999999999314e-06, 7.791000000000048e-06, 1.1249999999997373e-05, 6.889000000002976e-06, 4.805999999996091e-06, 1.1055000000002868e-05, 7.722000000001672e-06, 1.1471999999998483e-05]</msg>
<status status="PASS" starttime="20201112 12:42:22.220" endtime="20201112 12:42:22.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.209" endtime="20201112 12:42:22.226"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.233" endtime="20201112 12:42:22.236"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:22.242" endtime="20201112 12:42:22.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.237" endtime="20201112 12:42:22.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.228" endtime="20201112 12:42:22.268"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.667" endtime="20201112 12:42:22.269"></status>
</kw>
<msg timestamp="20201112 12:42:22.269" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.292" endtime="20201112 12:42:22.307"></status>
</kw>
<msg timestamp="20201112 12:42:22.308" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:22.287" endtime="20201112 12:42:22.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.315" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:22.310" endtime="20201112 12:42:22.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.318" endtime="20201112 12:42:22.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.279" endtime="20201112 12:42:22.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.274" endtime="20201112 12:42:22.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.344" endtime="20201112 12:42:22.641"></status>
</kw>
<msg timestamp="20201112 12:42:22.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041035847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041043986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:22.340" endtime="20201112 12:42:22.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041035847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041043986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:22.644" endtime="20201112 12:42:22.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.650" endtime="20201112 12:42:22.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.332" endtime="20201112 12:42:22.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.327" endtime="20201112 12:42:22.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.658" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:22.657" endtime="20201112 12:42:22.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.662" level="INFO">VALUE: [{'time': 0.041035847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041043986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.138999999997287e-06, 'source_diff': 8.138999999997287e-06}, {'time': 0.041059, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5014000000000693e-05, 'source_diff': 1.5014000000000693e-05}, {'time': 0.041067764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.041076111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.041088417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2306000000003592e-05, 'source_diff': 1.2306000000003592e-05}, {'time': 0.041093028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999994647e-06, 'source_diff': 4.610999999994647e-06}, {'time': 0.041104292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1264000000003882e-05, 'source_diff': 1.1264000000003882e-05}, {'time': 0.041111181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888999999996037e-06, 'source_diff': 6.888999999996037e-06}, {'time': 0.04111475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5690000000018762e-06, 'source_diff': 3.5690000000018762e-06}, {'time': 0.041122472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.041135806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3333999999996793e-05, 'source_diff': 1.3333999999996793e-05}, {'time': 0.041146444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0638000000000314e-05, 'source_diff': 1.0638000000000314e-05}, {'time': 0.041154167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.723000000001146e-06, 'source_diff': 7.723000000001146e-06}, {'time': 0.041161472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.304999999999118e-06, 'source_diff': 7.304999999999118e-06}, {'time': 0.041168986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.041183375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4389000000003538e-05, 'source_diff': 1.4389000000003538e-05}, {'time': 0.041191569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.193999999996093e-06, 'source_diff': 8.193999999996093e-06}, {'time': 0.041206528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4959000000001887e-05, 'source_diff': 1.4959000000001887e-05}, {'time': 0.041216125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.041227194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1069000000002438e-05, 'source_diff': 1.1069000000002438e-05}, {'time': 0.041240958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.041245139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.041251819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.680000000001962e-06, 'source_diff': 6.680000000001962e-06}, {'time': 0.041266, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4180999999995059e-05, 'source_diff': 1.4180999999995059e-05}, {'time': 0.041271861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.861000000002836e-06, 'source_diff': 5.861000000002836e-06}, {'time': 0.041274583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7219999999966715e-06, 'source_diff': 2.7219999999966715e-06}, {'time': 0.041285431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0848000000000801e-05, 'source_diff': 1.0848000000000801e-05}, {'time': 0.041296278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.041305028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.041315292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0264000000002882e-05, 'source_diff': 1.0264000000002882e-05}, {'time': 0.041321722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.429999999994773e-06, 'source_diff': 6.429999999994773e-06}, {'time': 0.041333625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1903000000000608e-05, 'source_diff': 1.1903000000000608e-05}, {'time': 0.041339875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.041342875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0000000000030003e-06, 'source_diff': 3.0000000000030003e-06}, {'time': 0.041353875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0999999999997123e-05, 'source_diff': 1.0999999999997123e-05}, {'time': 0.041365778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1903000000000608e-05, 'source_diff': 1.1903000000000608e-05}, {'time': 0.041376819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1041000000003298e-05, 'source_diff': 1.1041000000003298e-05}, {'time': 0.041386639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.041394139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.041398736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.596999999995077e-06, 'source_diff': 4.596999999995077e-06}, {'time': 0.041401681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9450000000041943e-06, 'source_diff': 2.9450000000041943e-06}, {'time': 0.041414181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2499999999998623e-05, 'source_diff': 1.2499999999998623e-05}, {'time': 0.041424208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.002699999999579e-05, 'source_diff': 1.002699999999579e-05}, {'time': 0.041429861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.041436306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.445000000000756e-06, 'source_diff': 6.445000000000756e-06}, {'time': 0.0414405, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.041455292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4791999999999583e-05, 'source_diff': 1.4791999999999583e-05}, {'time': 0.041466972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1680000000000024e-05, 'source_diff': 1.1680000000000024e-05}, {'time': 0.041471375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:22.659" endtime="20201112 12:42:22.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.654" endtime="20201112 12:42:22.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:22.679" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:22.665" endtime="20201112 12:42:22.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.683" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:22.682" endtime="20201112 12:42:22.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.687" level="INFO">VALUE: {'sourcediff': [0, 8.138999999997287e-06, 1.5014000000000693e-05, 8.764000000001382e-06, 8.346999999998828e-06, 1.2306000000003592e-05, 4.610999999994647e-06, 1.1264000000003882e-05, 6.888999999996037e-06, 3.5690000000018762e-06, 7.722000000001672e-06, 1.3333999999996793e-05, 1.0638000000000314e-05, 7.723000000001146e-06, 7.304999999999118e-06, 7.514000000000132e-06, 1.4389000000003538e-05, 8.193999999996093e-06, 1.4959000000001887e-05, 9.597000000000078e-06, 1.1069000000002438e-05, 1.3763999999999443e-05, 4.1809999999989356e-06, 6.680000000001962e-06, 1.4180999999995059e-05, 5.861000000002836e-06, 2.7219999999966715e-06, 1.0848000000000801e-05, 1.0847000000001328e-05, 8.750000000001812e-06, 1.0264000000002882e-05, 6.429999999994773e-06, 1.1903000000000608e-05, 6.249999999999312e-06, 3.0000000000030003e-06, 1.0999999999997123e-05, 1.1903000000000608e-05, 1.1041000000003298e-05, 9.820000000000662e-06, 7.500000000000562e-06, 4.596999999995077e-06, 2.9450000000041943e-06, 1.2499999999998623e-05, 1.002699999999579e-05, 5.653000000001296e-06, 6.445000000000756e-06, 4.193999999999032e-06, 1.4791999999999583e-05, 1.1680000000000024e-05, 4.403000000000046e-06], 'time': [0.041035847, 0.041043986, 0.041059, 0.041067764, 0.041076111, 0.041088417, 0.041093028, 0.041104292, 0.041111181, 0.04111475, 0.041122472, 0.041135806, 0.041146444, 0.041154167, 0.041161472, 0.041168986, 0.041183375, 0.041191569, 0.041206528, 0.041216125, 0.041227194, 0.041240958, 0.041245139, 0.041251819, 0.041266, 0.041271861, 0.041274583, 0.041285431, 0.041296278, 0.041305028, 0.041315292, 0.041321722, 0.041333625, 0.041339875, 0.041342875, 0.041353875, 0.041365778, 0.041376819, 0.041386639, 0.041394139, 0.041398736, 0.041401681, 0.041414181, 0.041424208, 0.041429861, 0.041436306, 0.0414405, 0.041455292, 0.041466972, 0.041471375], 'source_diff': [0, 8.138999999997287e-06, 1.5014000000000693e-05, 8.764000000001382e-06, 8.346999999998828e-06, 1.2306000000003592e-05, 4.610999999994647e-06, 1.1264000000003882e-05, 6.888999999996037e-06, 3.5690000000018762e-06, 7.722000000001672e-06, 1.3333999999996793e-05, 1.0638000000000314e-05, 7.723000000001146e-06, 7.304999999999118e-06, 7.514000000000132e-06, 1.4389000000003538e-05, 8.193999999996093e-06, 1.4959000000001887e-05, 9.597000000000078e-06, 1.1069000000002438e-05, 1.3763999999999443e-05, 4.1809999999989356e-06, 6.680000000001962e-06, 1.4180999999995059e-05, 5.861000000002836e-06, 2.7219999999966715e-06, 1.0848000000000801e-05, 1.0847000000001328e-05, 8.750000000001812e-06, 1.0264000000002882e-05, 6.429999999994773e-06, 1.1903000000000608e-05, 6.249999999999312e-06, 3.0000000000030003e-06, 1.0999999999997123e-05, 1.1903000000000608e-05, 1.1041000000003298e-05, 9.820000000000662e-06, 7.500000000000562e-06, 4.596999999995077e-06, 2.9450000000041943e-06, 1.2499999999998623e-05, 1.002699999999579e-05, 5.653000000001296e-06, 6.445000000000756e-06, 4.193999999999032e-06, 1.4791999999999583e-05, 1.1680000000000024e-05, 4.403000000000046e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:22.684" endtime="20201112 12:42:22.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.680" endtime="20201112 12:42:22.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:22.692" level="INFO">${RESULT} = [{'time': 0.041043986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.138999999997287e-06, 'source_diff': 8.138999999997287e-06}, {'time': 0.041067764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:22.689" endtime="20201112 12:42:22.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:22.701" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:22.693" endtime="20201112 12:42:22.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.706" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:22.705" endtime="20201112 12:42:22.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.709" level="INFO">VALUE: [8.138999999997287e-06, 8.764000000001382e-06, 1.2306000000003592e-05, 1.1264000000003882e-05, 3.5690000000018762e-06, 1.3333999999996793e-05, 7.723000000001146e-06, 7.514000000000132e-06, 8.193999999996093e-06, 9.597000000000078e-06, 1.3763999999999443e-05, 6.680000000001962e-06, 5.861000000002836e-06, 1.0848000000000801e-05, 8.750000000001812e-06, 6.429999999994773e-06, 6.249999999999312e-06, 1.0999999999997123e-05, 1.1041000000003298e-05, 7.500000000000562e-06, 2.9450000000041943e-06, 1.002699999999579e-05, 6.445000000000756e-06, 1.4791999999999583e-05, 4.403000000000046e-06]</msg>
<status status="PASS" starttime="20201112 12:42:22.707" endtime="20201112 12:42:22.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.702" endtime="20201112 12:42:22.710"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.713" endtime="20201112 12:42:22.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:22.717" endtime="20201112 12:42:22.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.715" endtime="20201112 12:42:22.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.711" endtime="20201112 12:42:22.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.270" endtime="20201112 12:42:22.739"></status>
</kw>
<msg timestamp="20201112 12:42:22.739" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.750" endtime="20201112 12:42:22.760"></status>
</kw>
<msg timestamp="20201112 12:42:22.761" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:22.747" endtime="20201112 12:42:22.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.764" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:22.762" endtime="20201112 12:42:22.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.765" endtime="20201112 12:42:22.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.744" endtime="20201112 12:42:22.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.741" endtime="20201112 12:42:22.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.776" endtime="20201112 12:42:23.045"></status>
</kw>
<msg timestamp="20201112 12:42:23.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02239225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022399375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:22.775" endtime="20201112 12:42:23.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02239225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022399375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:23.048" endtime="20201112 12:42:23.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.054" endtime="20201112 12:42:23.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.771" endtime="20201112 12:42:23.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.769" endtime="20201112 12:42:23.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.062" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:23.061" endtime="20201112 12:42:23.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.066" level="INFO">VALUE: [{'time': 0.02239225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022399375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.022408736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.022422083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3347000000000359e-05, 'source_diff': 1.3347000000000359e-05}, {'time': 0.022430222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.022444625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4402999999999638e-05, 'source_diff': 1.4402999999999638e-05}, {'time': 0.022453389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.022462403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.013999999998162e-06, 'source_diff': 9.013999999998162e-06}, {'time': 0.022466958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.554999999999837e-06, 'source_diff': 4.554999999999837e-06}, {'time': 0.022475111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.022485736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.022490986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.250000000001781e-06, 'source_diff': 5.250000000001781e-06}, {'time': 0.022499722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.735999999998773e-06, 'source_diff': 8.735999999998773e-06}, {'time': 0.022508903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.022514347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.444000000000282e-06, 'source_diff': 5.444000000000282e-06}, {'time': 0.022524569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0222000000000703e-05, 'source_diff': 1.0222000000000703e-05}, {'time': 0.022527694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.022536264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.569999999999411e-06, 'source_diff': 8.569999999999411e-06}, {'time': 0.022549431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3167000000001428e-05, 'source_diff': 1.3167000000001428e-05}, {'time': 0.022561903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2471999999999483e-05, 'source_diff': 1.2471999999999483e-05}, {'time': 0.022573389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1485999999998053e-05, 'source_diff': 1.1485999999998053e-05}, {'time': 0.022582222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.022595722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3499999999999623e-05, 'source_diff': 1.3499999999999623e-05}, {'time': 0.022604278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.022609903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.022616792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.022622056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.264000000001351e-06, 'source_diff': 5.264000000001351e-06}, {'time': 0.022633694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1637999999997845e-05, 'source_diff': 1.1637999999997845e-05}, {'time': 0.022641, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.306000000002061e-06, 'source_diff': 7.306000000002061e-06}, {'time': 0.022645597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.022648111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5139999999986007e-06, 'source_diff': 2.5139999999986007e-06}, {'time': 0.022660014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1903000000000608e-05, 'source_diff': 1.1903000000000608e-05}, {'time': 0.022668986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.022682125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3139000000002288e-05, 'source_diff': 1.3139000000002288e-05}, {'time': 0.022694042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1917000000000177e-05, 'source_diff': 1.1917000000000177e-05}, {'time': 0.022702778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.735999999998773e-06, 'source_diff': 8.735999999998773e-06}, {'time': 0.022705708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9300000000016813e-06, 'source_diff': 2.9300000000016813e-06}, {'time': 0.022713444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.735999999997772e-06, 'source_diff': 7.735999999997772e-06}, {'time': 0.022728861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.541700000000021e-05, 'source_diff': 1.541700000000021e-05}, {'time': 0.0227345, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.022737431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9309999999976855e-06, 'source_diff': 2.9309999999976855e-06}, {'time': 0.022739736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.305000000001056e-06, 'source_diff': 2.305000000001056e-06}, {'time': 0.022747458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.022759139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1680999999999497e-05, 'source_diff': 1.1680999999999497e-05}, {'time': 0.022768736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.02277125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5139999999986007e-06, 'source_diff': 2.5139999999986007e-06}, {'time': 0.022774194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.944000000001251e-06, 'source_diff': 2.944000000001251e-06}, {'time': 0.022787319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3124999999999248e-05, 'source_diff': 1.3124999999999248e-05}, {'time': 0.0227915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.022804014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2514000000001663e-05, 'source_diff': 1.2514000000001663e-05}]</msg>
<status status="PASS" starttime="20201112 12:42:23.063" endtime="20201112 12:42:23.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.058" endtime="20201112 12:42:23.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:23.083" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:23.069" endtime="20201112 12:42:23.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.088" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:23.087" endtime="20201112 12:42:23.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.091" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 7.125000000000187e-06, 9.360999999999398e-06, 1.3347000000000359e-05, 8.139000000000757e-06, 1.4402999999999638e-05, 8.764000000001382e-06, 9.013999999998162e-06, 4.554999999999837e-06, 8.153000000000327e-06, 1.0625000000000218e-05, 5.250000000001781e-06, 8.735999999998773e-06, 9.181000000000467e-06, 5.444000000000282e-06, 1.0222000000000703e-05, 3.124999999999656e-06, 8.569999999999411e-06, 1.3167000000001428e-05, 1.2471999999999483e-05, 1.1485999999998053e-05, 8.832999999999758e-06, 1.3499999999999623e-05, 8.555999999999842e-06, 5.625000000002156e-06, 6.888999999999507e-06, 5.264000000001351e-06, 1.1637999999997845e-05, 7.306000000002061e-06, 4.596999999998547e-06, 2.5139999999986007e-06, 1.1903000000000608e-05, 8.971999999999453e-06, 1.3139000000002288e-05, 1.1917000000000177e-05, 8.735999999998773e-06, 2.9300000000016813e-06, 7.735999999997772e-06, 1.541700000000021e-05, 5.639000000001726e-06, 2.9309999999976855e-06, 2.305000000001056e-06, 7.722000000001672e-06, 1.1680999999999497e-05, 9.597000000000078e-06, 2.5139999999986007e-06, 2.944000000001251e-06, 1.3124999999999248e-05, 4.1809999999989356e-06, 1.2514000000001663e-05], 'time': [0.02239225, 0.022399375, 0.022408736, 0.022422083, 0.022430222, 0.022444625, 0.022453389, 0.022462403, 0.022466958, 0.022475111, 0.022485736, 0.022490986, 0.022499722, 0.022508903, 0.022514347, 0.022524569, 0.022527694, 0.022536264, 0.022549431, 0.022561903, 0.022573389, 0.022582222, 0.022595722, 0.022604278, 0.022609903, 0.022616792, 0.022622056, 0.022633694, 0.022641, 0.022645597, 0.022648111, 0.022660014, 0.022668986, 0.022682125, 0.022694042, 0.022702778, 0.022705708, 0.022713444, 0.022728861, 0.0227345, 0.022737431, 0.022739736, 0.022747458, 0.022759139, 0.022768736, 0.02277125, 0.022774194, 0.022787319, 0.0227915, 0.022804014], 'source_diff': [0, 7.125000000000187e-06, 9.360999999999398e-06, 1.3347000000000359e-05, 8.139000000000757e-06, 1.4402999999999638e-05, 8.764000000001382e-06, 9.013999999998162e-06, 4.554999999999837e-06, 8.153000000000327e-06, 1.0625000000000218e-05, 5.250000000001781e-06, 8.735999999998773e-06, 9.181000000000467e-06, 5.444000000000282e-06, 1.0222000000000703e-05, 3.124999999999656e-06, 8.569999999999411e-06, 1.3167000000001428e-05, 1.2471999999999483e-05, 1.1485999999998053e-05, 8.832999999999758e-06, 1.3499999999999623e-05, 8.555999999999842e-06, 5.625000000002156e-06, 6.888999999999507e-06, 5.264000000001351e-06, 1.1637999999997845e-05, 7.306000000002061e-06, 4.596999999998547e-06, 2.5139999999986007e-06, 1.1903000000000608e-05, 8.971999999999453e-06, 1.3139000000002288e-05, 1.1917000000000177e-05, 8.735999999998773e-06, 2.9300000000016813e-06, 7.735999999997772e-06, 1.541700000000021e-05, 5.639000000001726e-06, 2.9309999999976855e-06, 2.305000000001056e-06, 7.722000000001672e-06, 1.1680999999999497e-05, 9.597000000000078e-06, 2.5139999999986007e-06, 2.944000000001251e-06, 1.3124999999999248e-05, 4.1809999999989356e-06, 1.2514000000001663e-05], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:23.089" endtime="20201112 12:42:23.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.084" endtime="20201112 12:42:23.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:23.097" level="INFO">${RESULT} = [{'time': 0.022399375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.022422083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:23.094" endtime="20201112 12:42:23.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:23.106" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:23.098" endtime="20201112 12:42:23.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.111" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:23.110" endtime="20201112 12:42:23.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.113" level="INFO">VALUE: [7.125000000000187e-06, 1.3347000000000359e-05, 1.4402999999999638e-05, 9.013999999998162e-06, 8.153000000000327e-06, 5.250000000001781e-06, 9.181000000000467e-06, 1.0222000000000703e-05, 8.569999999999411e-06, 1.2471999999999483e-05, 8.832999999999758e-06, 8.555999999999842e-06, 6.888999999999507e-06, 1.1637999999997845e-05, 4.596999999998547e-06, 1.1903000000000608e-05, 1.3139000000002288e-05, 8.735999999998773e-06, 7.735999999997772e-06, 5.639000000001726e-06, 2.305000000001056e-06, 1.1680999999999497e-05, 2.5139999999986007e-06, 1.3124999999999248e-05, 1.2514000000001663e-05]</msg>
<status status="PASS" starttime="20201112 12:42:23.112" endtime="20201112 12:42:23.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.107" endtime="20201112 12:42:23.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.118" endtime="20201112 12:42:23.119"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:23.122" endtime="20201112 12:42:23.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.120" endtime="20201112 12:42:23.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.116" endtime="20201112 12:42:23.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.740" endtime="20201112 12:42:23.144"></status>
</kw>
<msg timestamp="20201112 12:42:23.144" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.154" endtime="20201112 12:42:23.165"></status>
</kw>
<msg timestamp="20201112 12:42:23.166" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:23.152" endtime="20201112 12:42:23.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.169" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:23.167" endtime="20201112 12:42:23.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.170" endtime="20201112 12:42:23.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.148" endtime="20201112 12:42:23.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.146" endtime="20201112 12:42:23.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.182" endtime="20201112 12:42:23.461"></status>
</kw>
<msg timestamp="20201112 12:42:23.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022394958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022409972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:23.180" endtime="20201112 12:42:23.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022394958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022409972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:23.468" endtime="20201112 12:42:23.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.482" endtime="20201112 12:42:23.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.176" endtime="20201112 12:42:23.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.174" endtime="20201112 12:42:23.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.499" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:23.497" endtime="20201112 12:42:23.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.508" level="INFO">VALUE: [{'time': 0.022394958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022409972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5014000000000693e-05, 'source_diff': 1.5014000000000693e-05}, {'time': 0.022421458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1485999999998053e-05, 'source_diff': 1.1485999999998053e-05}, {'time': 0.022436889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5431000000003248e-05, 'source_diff': 1.5431000000003248e-05}, {'time': 0.022446264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.022454819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.555000000000368e-06, 'source_diff': 8.555000000000368e-06}, {'time': 0.022470056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5236999999997808e-05, 'source_diff': 1.5236999999997808e-05}, {'time': 0.022479667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.022485153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.486000000002461e-06, 'source_diff': 5.486000000002461e-06}, {'time': 0.022487806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6529999999982956e-06, 'source_diff': 2.6529999999982956e-06}, {'time': 0.022496361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.555000000000368e-06, 'source_diff': 8.555000000000368e-06}, {'time': 0.022505333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.022509931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.59800000000149e-06, 'source_diff': 4.59800000000149e-06}, {'time': 0.022520778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.022533917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3138999999998818e-05, 'source_diff': 1.3138999999998818e-05}, {'time': 0.0225375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5829999999979767e-06, 'source_diff': 3.5829999999979767e-06}, {'time': 0.022548347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.022555847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.022569833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3986000000000554e-05, 'source_diff': 1.3986000000000554e-05}, {'time': 0.022585042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5208999999998668e-05, 'source_diff': 1.5208999999998668e-05}, {'time': 0.022600472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5430000000000305e-05, 'source_diff': 1.5430000000000305e-05}, {'time': 0.022615708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5236000000001804e-05, 'source_diff': 1.5236000000001804e-05}, {'time': 0.022628833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3124999999999248e-05, 'source_diff': 1.3124999999999248e-05}, {'time': 0.022636972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.022645111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.138999999997287e-06, 'source_diff': 8.138999999997287e-06}, {'time': 0.022658667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3556000000001373e-05, 'source_diff': 1.3556000000001373e-05}, {'time': 0.022671194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.252699999999829e-05, 'source_diff': 1.252699999999829e-05}, {'time': 0.022682667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1473000000001427e-05, 'source_diff': 1.1473000000001427e-05}, {'time': 0.022696222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.355499999999843e-05, 'source_diff': 1.355499999999843e-05}, {'time': 0.022705389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.167000000000897e-06, 'source_diff': 9.167000000000897e-06}, {'time': 0.022712278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.022718583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.305000000001587e-06, 'source_diff': 6.305000000001587e-06}, {'time': 0.022729806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1223000000001176e-05, 'source_diff': 1.1223000000001176e-05}, {'time': 0.022738597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.790999999997579e-06, 'source_diff': 8.790999999997579e-06}, {'time': 0.022747778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.022750083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.305000000001056e-06, 'source_diff': 2.305000000001056e-06}, {'time': 0.022752806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7229999999996146e-06, 'source_diff': 2.7229999999996146e-06}, {'time': 0.022755931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.022760528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.022774917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4389000000000068e-05, 'source_diff': 1.4389000000000068e-05}, {'time': 0.022781806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.889000000002976e-06, 'source_diff': 6.889000000002976e-06}, {'time': 0.022784319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.512999999999127e-06, 'source_diff': 2.512999999999127e-06}, {'time': 0.022797958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3638999999999318e-05, 'source_diff': 1.3638999999999318e-05}, {'time': 0.022807681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.722999999999676e-06, 'source_diff': 9.722999999999676e-06}, {'time': 0.022810208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.526999999998697e-06, 'source_diff': 2.526999999998697e-06}, {'time': 0.0228125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.29200000000096e-06, 'source_diff': 2.29200000000096e-06}, {'time': 0.022826681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4181000000001998e-05, 'source_diff': 1.4181000000001998e-05}, {'time': 0.022840083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3401999999999165e-05, 'source_diff': 1.3401999999999165e-05}, {'time': 0.022848792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.708999999999106e-06, 'source_diff': 8.708999999999106e-06}, {'time': 0.022856111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.318999999998688e-06, 'source_diff': 7.318999999998688e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:23.502" endtime="20201112 12:42:23.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.490" endtime="20201112 12:42:23.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:23.545" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:23.514" endtime="20201112 12:42:23.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.555" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:23.553" endtime="20201112 12:42:23.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.563" level="INFO">VALUE: {'sourcediff': [0, 1.5014000000000693e-05, 1.1485999999998053e-05, 1.5431000000003248e-05, 9.374999999998967e-06, 8.555000000000368e-06, 1.5236999999997808e-05, 9.610999999999648e-06, 5.486000000002461e-06, 2.6529999999982956e-06, 8.555000000000368e-06, 8.971999999999453e-06, 4.59800000000149e-06, 1.0847000000001328e-05, 1.3138999999998818e-05, 3.5829999999979767e-06, 1.0847000000001328e-05, 7.500000000000562e-06, 1.3986000000000554e-05, 1.5208999999998668e-05, 1.5430000000000305e-05, 1.5236000000001804e-05, 1.3124999999999248e-05, 8.139000000000757e-06, 8.138999999997287e-06, 1.3556000000001373e-05, 1.252699999999829e-05, 1.1473000000001427e-05, 1.355499999999843e-05, 9.167000000000897e-06, 6.888999999999507e-06, 6.305000000001587e-06, 1.1223000000001176e-05, 8.790999999997579e-06, 9.181000000000467e-06, 2.305000000001056e-06, 2.7229999999996146e-06, 3.124999999999656e-06, 4.596999999998547e-06, 1.4389000000000068e-05, 6.889000000002976e-06, 2.512999999999127e-06, 1.3638999999999318e-05, 9.722999999999676e-06, 2.526999999998697e-06, 2.29200000000096e-06, 1.4181000000001998e-05, 1.3401999999999165e-05, 8.708999999999106e-06, 7.318999999998688e-06], 'time': [0.022394958, 0.022409972, 0.022421458, 0.022436889, 0.022446264, 0.022454819, 0.022470056, 0.022479667, 0.022485153, 0.022487806, 0.022496361, 0.022505333, 0.022509931, 0.022520778, 0.022533917, 0.0225375, 0.022548347, 0.022555847, 0.022569833, 0.022585042, 0.022600472, 0.022615708, 0.022628833, 0.022636972, 0.022645111, 0.022658667, 0.022671194, 0.022682667, 0.022696222, 0.022705389, 0.022712278, 0.022718583, 0.022729806, 0.022738597, 0.022747778, 0.022750083, 0.022752806, 0.022755931, 0.022760528, 0.022774917, 0.022781806, 0.022784319, 0.022797958, 0.022807681, 0.022810208, 0.0228125, 0.022826681, 0.022840083, 0.022848792, 0.022856111], 'source_diff': [0, 1.5014000000000693e-05, 1.1485999999998053e-05, 1.5431000000003248e-05, 9.374999999998967e-06, 8.555000000000368e-06, 1.5236999999997808e-05, 9.610999999999648e-06, 5.486000000002461e-06, 2.6529999999982956e-06, 8.555000000000368e-06, 8.971999999999453e-06, 4.59800000000149e-06, 1.0847000000001328e-05, 1.3138999999998818e-05, 3.5829999999979767e-06, 1.0847000000001328e-05, 7.500000000000562e-06, 1.3986000000000554e-05, 1.5208999999998668e-05, 1.5430000000000305e-05, 1.5236000000001804e-05, 1.3124999999999248e-05, 8.139000000000757e-06, 8.138999999997287e-06, 1.3556000000001373e-05, 1.252699999999829e-05, 1.1473000000001427e-05, 1.355499999999843e-05, 9.167000000000897e-06, 6.888999999999507e-06, 6.305000000001587e-06, 1.1223000000001176e-05, 8.790999999997579e-06, 9.181000000000467e-06, 2.305000000001056e-06, 2.7229999999996146e-06, 3.124999999999656e-06, 4.596999999998547e-06, 1.4389000000000068e-05, 6.889000000002976e-06, 2.512999999999127e-06, 1.3638999999999318e-05, 9.722999999999676e-06, 2.526999999998697e-06, 2.29200000000096e-06, 1.4181000000001998e-05, 1.3401999999999165e-05, 8.708999999999106e-06, 7.318999999998688e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:23.558" endtime="20201112 12:42:23.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.547" endtime="20201112 12:42:23.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:23.575" level="INFO">${RESULT} = [{'time': 0.022409972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5014000000000693e-05, 'source_diff': 1.5014000000000693e-05}, {'time': 0.022436889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:23.567" endtime="20201112 12:42:23.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:23.594" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:23.577" endtime="20201112 12:42:23.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.605" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:23.603" endtime="20201112 12:42:23.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.611" level="INFO">VALUE: [1.5014000000000693e-05, 1.5431000000003248e-05, 8.555000000000368e-06, 9.610999999999648e-06, 2.6529999999982956e-06, 8.971999999999453e-06, 1.0847000000001328e-05, 3.5829999999979767e-06, 7.500000000000562e-06, 1.5208999999998668e-05, 1.5236000000001804e-05, 8.139000000000757e-06, 1.3556000000001373e-05, 1.1473000000001427e-05, 9.167000000000897e-06, 6.305000000001587e-06, 8.790999999997579e-06, 2.305000000001056e-06, 3.124999999999656e-06, 1.4389000000000068e-05, 2.512999999999127e-06, 9.722999999999676e-06, 2.29200000000096e-06, 1.3401999999999165e-05, 7.318999999998688e-06]</msg>
<status status="PASS" starttime="20201112 12:42:23.608" endtime="20201112 12:42:23.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.596" endtime="20201112 12:42:23.614"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.621" endtime="20201112 12:42:23.624"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:23.630" endtime="20201112 12:42:23.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.625" endtime="20201112 12:42:23.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.616" endtime="20201112 12:42:23.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.144" endtime="20201112 12:42:23.656"></status>
</kw>
<msg timestamp="20201112 12:42:23.657" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.679" endtime="20201112 12:42:23.694"></status>
</kw>
<msg timestamp="20201112 12:42:23.695" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:23.674" endtime="20201112 12:42:23.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.702" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:23.697" endtime="20201112 12:42:23.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.704" endtime="20201112 12:42:23.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.666" endtime="20201112 12:42:23.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.662" endtime="20201112 12:42:23.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.729" endtime="20201112 12:42:24.064"></status>
</kw>
<msg timestamp="20201112 12:42:24.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040729375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04074, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 12:42:23.725" endtime="20201112 12:42:24.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040729375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04074, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 12:42:24.071" endtime="20201112 12:42:24.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.084" endtime="20201112 12:42:24.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.718" endtime="20201112 12:42:24.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.713" endtime="20201112 12:42:24.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.102" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:24.099" endtime="20201112 12:42:24.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.110" level="INFO">VALUE: [{'time': 0.040729375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04074, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.040753972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3972000000000984e-05, 'source_diff': 1.3972000000000984e-05}, {'time': 0.040765444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.040774222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.040779889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.04079425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4360999999997459e-05, 'source_diff': 1.4360999999997459e-05}, {'time': 0.040809264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5014000000000693e-05, 'source_diff': 1.5014000000000693e-05}, {'time': 0.040814306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.04200000000371e-06, 'source_diff': 5.04200000000371e-06}, {'time': 0.040817014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7079999999971016e-06, 'source_diff': 2.7079999999971016e-06}, {'time': 0.040821597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.583000000002446e-06, 'source_diff': 4.583000000002446e-06}, {'time': 0.040835986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4388999999996599e-05, 'source_diff': 1.4388999999996599e-05}, {'time': 0.040842042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.05600000000428e-06, 'source_diff': 6.05600000000428e-06}, {'time': 0.040854972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2930000000001274e-05, 'source_diff': 1.2930000000001274e-05}, {'time': 0.040862903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.930999999995747e-06, 'source_diff': 7.930999999995747e-06}, {'time': 0.040868333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.430000000000712e-06, 'source_diff': 5.430000000000712e-06}, {'time': 0.040872931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.59800000000149e-06, 'source_diff': 4.59800000000149e-06}, {'time': 0.040875444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5129999999956576e-06, 'source_diff': 2.5129999999956576e-06}, {'time': 0.040882972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.040891528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.55600000000678e-06, 'source_diff': 8.55600000000678e-06}, {'time': 0.040898, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.471999999993483e-06, 'source_diff': 6.471999999993483e-06}, {'time': 0.040913264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5264000000000943e-05, 'source_diff': 1.5264000000000943e-05}, {'time': 0.040915514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.25000000000225e-06, 'source_diff': 2.25000000000225e-06}, {'time': 0.040926167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0652999999999357e-05, 'source_diff': 1.0652999999999357e-05}, {'time': 0.040928681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.040942653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3972000000000984e-05, 'source_diff': 1.3972000000000984e-05}, {'time': 0.040946014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.040957889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1874999999994529e-05, 'source_diff': 1.1874999999994529e-05}, {'time': 0.040963111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.222000000006111e-06, 'source_diff': 5.222000000006111e-06}, {'time': 0.040966097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9859999999964915e-06, 'source_diff': 2.9859999999964915e-06}, {'time': 0.040980444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.434699999999789e-05, 'source_diff': 1.434699999999789e-05}, {'time': 0.040983806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3619999999998096e-06, 'source_diff': 3.3619999999998096e-06}, {'time': 0.040992347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.541000000000798e-06, 'source_diff': 8.541000000000798e-06}, {'time': 0.041003194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.041006528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3340000000006698e-06, 'source_diff': 3.3340000000006698e-06}, {'time': 0.041009889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.041023042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3153000000001858e-05, 'source_diff': 1.3153000000001858e-05}, {'time': 0.041026153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.041036375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0221999999997233e-05, 'source_diff': 1.0221999999997233e-05}, {'time': 0.041050583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4208000000001664e-05, 'source_diff': 1.4208000000001664e-05}, {'time': 0.041056431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.847999999995801e-06, 'source_diff': 5.847999999995801e-06}, {'time': 0.041065806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.375000000005906e-06, 'source_diff': 9.375000000005906e-06}, {'time': 0.041074153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.041080833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.679999999995023e-06, 'source_diff': 6.679999999995023e-06}, {'time': 0.041087722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.889000000002976e-06, 'source_diff': 6.889000000002976e-06}, {'time': 0.041096083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.041103375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.041115889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2514000000005132e-05, 'source_diff': 1.2514000000005132e-05}, {'time': 0.041123194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.304999999999118e-06, 'source_diff': 7.304999999999118e-06}, {'time': 0.041129042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.847999999995801e-06, 'source_diff': 5.847999999995801e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:24.104" endtime="20201112 12:42:24.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.093" endtime="20201112 12:42:24.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:24.148" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:24.116" endtime="20201112 12:42:24.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.158" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:24.155" endtime="20201112 12:42:24.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.165" level="INFO">VALUE: {'sourcediff': [0, 1.0625000000000218e-05, 1.3972000000000984e-05, 1.1471999999998483e-05, 8.778000000000952e-06, 5.667000000000866e-06, 1.4360999999997459e-05, 1.5014000000000693e-05, 5.04200000000371e-06, 2.7079999999971016e-06, 4.583000000002446e-06, 1.4388999999996599e-05, 6.05600000000428e-06, 1.2930000000001274e-05, 7.930999999995747e-06, 5.430000000000712e-06, 4.59800000000149e-06, 2.5129999999956576e-06, 7.527999999999702e-06, 8.55600000000678e-06, 6.471999999993483e-06, 1.5264000000000943e-05, 2.25000000000225e-06, 1.0652999999999357e-05, 2.51400000000207e-06, 1.3972000000000984e-05, 3.361000000000336e-06, 1.1874999999994529e-05, 5.222000000006111e-06, 2.9859999999964915e-06, 1.434699999999789e-05, 3.3619999999998096e-06, 8.541000000000798e-06, 1.0847000000001328e-05, 3.3340000000006698e-06, 3.361000000000336e-06, 1.3153000000001858e-05, 3.111000000000086e-06, 1.0221999999997233e-05, 1.4208000000001664e-05, 5.847999999995801e-06, 9.375000000005906e-06, 8.346999999998828e-06, 6.679999999995023e-06, 6.889000000002976e-06, 8.360999999998397e-06, 7.2919999999990215e-06, 1.2514000000005132e-05, 7.304999999999118e-06, 5.847999999995801e-06], 'time': [0.040729375, 0.04074, 0.040753972, 0.040765444, 0.040774222, 0.040779889, 0.04079425, 0.040809264, 0.040814306, 0.040817014, 0.040821597, 0.040835986, 0.040842042, 0.040854972, 0.040862903, 0.040868333, 0.040872931, 0.040875444, 0.040882972, 0.040891528, 0.040898, 0.040913264, 0.040915514, 0.040926167, 0.040928681, 0.040942653, 0.040946014, 0.040957889, 0.040963111, 0.040966097, 0.040980444, 0.040983806, 0.040992347, 0.041003194, 0.041006528, 0.041009889, 0.041023042, 0.041026153, 0.041036375, 0.041050583, 0.041056431, 0.041065806, 0.041074153, 0.041080833, 0.041087722, 0.041096083, 0.041103375, 0.041115889, 0.041123194, 0.041129042], 'source_diff': [0, 1.0625000000000218e-05, 1.3972000000000984e-05, 1.1471999999998483e-05, 8.778000000000952e-06, 5.667000000000866e-06, 1.4360999999997459e-05, 1.5014000000000693e-05, 5.04200000000371e-06, 2.7079999999971016e-06, 4.583000000002446e-06, 1.4388999999996599e-05, 6.05600000000428e-06, 1.2930000000001274e-05, 7.930999999995747e-06, 5.430000000000712e-06, 4.59800000000149e-06, 2.5129999999956576e-06, 7.527999999999702e-06, 8.55600000000678e-06, 6.471999999993483e-06, 1.5264000000000943e-05, 2.25000000000225e-06, 1.0652999999999357e-05, 2.51400000000207e-06, 1.3972000000000984e-05, 3.361000000000336e-06, 1.1874999999994529e-05, 5.222000000006111e-06, 2.9859999999964915e-06, 1.434699999999789e-05, 3.3619999999998096e-06, 8.541000000000798e-06, 1.0847000000001328e-05, 3.3340000000006698e-06, 3.361000000000336e-06, 1.3153000000001858e-05, 3.111000000000086e-06, 1.0221999999997233e-05, 1.4208000000001664e-05, 5.847999999995801e-06, 9.375000000005906e-06, 8.346999999998828e-06, 6.679999999995023e-06, 6.889000000002976e-06, 8.360999999998397e-06, 7.2919999999990215e-06, 1.2514000000005132e-05, 7.304999999999118e-06, 5.847999999995801e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:24.160" endtime="20201112 12:42:24.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.150" endtime="20201112 12:42:24.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:24.178" level="INFO">${RESULT} = [{'time': 0.04074, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.040765444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:24.170" endtime="20201112 12:42:24.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:24.197" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:24.180" endtime="20201112 12:42:24.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.208" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:24.206" endtime="20201112 12:42:24.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.214" level="INFO">VALUE: [1.0625000000000218e-05, 1.1471999999998483e-05, 5.667000000000866e-06, 1.5014000000000693e-05, 2.7079999999971016e-06, 1.4388999999996599e-05, 1.2930000000001274e-05, 5.430000000000712e-06, 2.5129999999956576e-06, 8.55600000000678e-06, 1.5264000000000943e-05, 1.0652999999999357e-05, 1.3972000000000984e-05, 1.1874999999994529e-05, 2.9859999999964915e-06, 3.3619999999998096e-06, 1.0847000000001328e-05, 3.361000000000336e-06, 3.111000000000086e-06, 1.4208000000001664e-05, 9.375000000005906e-06, 6.679999999995023e-06, 8.360999999998397e-06, 1.2514000000005132e-05, 5.847999999995801e-06]</msg>
<status status="PASS" starttime="20201112 12:42:24.211" endtime="20201112 12:42:24.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.199" endtime="20201112 12:42:24.217"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.224" endtime="20201112 12:42:24.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:24.233" endtime="20201112 12:42:24.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.228" endtime="20201112 12:42:24.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.219" endtime="20201112 12:42:24.258"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.658" endtime="20201112 12:42:24.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.365" endtime="20201112 12:42:24.260"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:24.271" endtime="20201112 12:42:24.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.266" endtime="20201112 12:42:24.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.264" endtime="20201112 12:42:24.296"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:13.163" endtime="20201112 12:42:24.297" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:24.318" endtime="20201112 12:42:24.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.314" endtime="20201112 12:42:24.342"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.382" endtime="20201112 12:42:24.402"></status>
</kw>
<msg timestamp="20201112 12:42:24.403" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:24.378" endtime="20201112 12:42:24.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.410" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:24.405" endtime="20201112 12:42:24.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.417" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:24.412" endtime="20201112 12:42:24.417"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:24.370" endtime="20201112 12:42:24.419"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:24.363" endtime="20201112 12:42:24.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.360" endtime="20201112 12:42:24.422"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:24.430" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:24.429" endtime="20201112 12:42:24.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.424" endtime="20201112 12:42:24.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.358" endtime="20201112 12:42:24.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.356" endtime="20201112 12:42:24.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.434" endtime="20201112 12:42:24.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.351" endtime="20201112 12:42:24.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.344" endtime="20201112 12:42:24.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.311" endtime="20201112 12:42:24.442"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 12:42:24.447" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.469" endtime="20201112 12:42:24.485"></status>
</kw>
<msg timestamp="20201112 12:42:24.486" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:24.465" endtime="20201112 12:42:24.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.493" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:24.488" endtime="20201112 12:42:24.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.495" endtime="20201112 12:42:24.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.457" endtime="20201112 12:42:24.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.452" endtime="20201112 12:42:24.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.522" endtime="20201112 12:42:24.903"></status>
</kw>
<msg timestamp="20201112 12:42:24.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143583167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143584875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:24.519" endtime="20201112 12:42:24.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143583167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143584875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:24.913" endtime="20201112 12:42:24.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.933" endtime="20201112 12:42:24.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.511" endtime="20201112 12:42:24.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.504" endtime="20201112 12:42:24.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:24.951" level="INFO">${RESULT} = [{'time': 0.143584875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7079999999891626e-06, 'source_diff': 1.7079999999891626e-06}, {'time': 0.143589389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:24.942" endtime="20201112 12:42:24.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:24.986" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:24.954" endtime="20201112 12:42:24.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.997" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:24.994" endtime="20201112 12:42:24.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.003" level="INFO">VALUE: [1.7079999999891626e-06, 1.6530000000181122e-06, 1.651999999990883e-06, 1.651999999990883e-06, 1.7770000000083552e-06, 1.6389999999977256e-06, 1.7079999999891626e-06, 1.7090000000163919e-06, 1.6389999999977256e-06, 1.6529999999903566e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.6529999999903566e-06, 1.6939999999965316e-06, 1.6529999999903566e-06, 1.6529999999903566e-06, 1.665999999983514e-06, 1.6389999999977256e-06, 1.6529999999903566e-06, 1.7229999999812673e-06, 1.6669999999829876e-06, 1.6939999999965316e-06, 1.7080000000169182e-06, 1.7089999999886363e-06, 1.7079999999891626e-06, 1.6800000000039006e-06, 1.7079999999891626e-06, 1.651999999990883e-06, 1.7090000000163919e-06, 1.7080000000169182e-06, 1.7079999999891626e-06, 1.6949999999960053e-06, 1.7080000000169182e-06, 1.7220000000095492e-06, 1.6529999999903566e-06, 1.6529999999903566e-06, 1.7089999999886363e-06, 1.6939999999965316e-06, 1.6660000000112696e-06, 1.7220000000095492e-06, 1.7219999999817936e-06, 1.6939999999965316e-06, 1.7780000000078289e-06, 1.6390000000254812e-06, 1.6669999999829876e-06, 1.6669999999829876e-06, 1.651999999990883e-06, 1.6389999999977256e-06, 1.6529999999903566e-06, 1.6530000000181122e-06]</msg>
<status status="PASS" starttime="20201112 12:42:24.999" endtime="20201112 12:42:25.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.988" endtime="20201112 12:42:25.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.012" endtime="20201112 12:42:25.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:25.021" endtime="20201112 12:42:25.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.016" endtime="20201112 12:42:25.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.007" endtime="20201112 12:42:25.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.448" endtime="20201112 12:42:25.048"></status>
</kw>
<msg timestamp="20201112 12:42:25.048" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.070" endtime="20201112 12:42:25.086"></status>
</kw>
<msg timestamp="20201112 12:42:25.087" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:25.067" endtime="20201112 12:42:25.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.094" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:25.089" endtime="20201112 12:42:25.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.096" endtime="20201112 12:42:25.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.059" endtime="20201112 12:42:25.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.054" endtime="20201112 12:42:25.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.121" endtime="20201112 12:42:25.495"></status>
</kw>
<msg timestamp="20201112 12:42:25.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041122597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041124306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:25.118" endtime="20201112 12:42:25.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041122597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041124306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:25.506" endtime="20201112 12:42:25.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.526" endtime="20201112 12:42:25.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.110" endtime="20201112 12:42:25.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.105" endtime="20201112 12:42:25.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:25.544" level="INFO">${RESULT} = [{'time': 0.041124306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.709000000002514e-06, 'source_diff': 1.709000000002514e-06}, {'time': 0.041137986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:25.535" endtime="20201112 12:42:25.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:25.577" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:25.547" endtime="20201112 12:42:25.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.588" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:25.586" endtime="20201112 12:42:25.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.594" level="INFO">VALUE: [1.709000000002514e-06, 1.6800000000039006e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6530000000042344e-06, 1.6530000000042344e-06, 1.77800000000089e-06, 1.6530000000042344e-06, 1.7080000000030404e-06, 1.7910000000009862e-06, 1.6389999999977256e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7089999999955752e-06, 1.6389999999977256e-06, 1.7080000000030404e-06, 1.6940000000034705e-06, 1.6389999999977256e-06, 1.7220000000026103e-06, 1.6530000000042344e-06, 1.7080000000030404e-06, 1.6949999999960053e-06, 1.6669999999968654e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.6669999999968654e-06, 1.6940000000034705e-06, 1.709000000002514e-06, 1.6529999999972955e-06, 1.709000000002514e-06, 1.637999999998252e-06, 1.7079999999961015e-06, 1.6109999999985858e-06, 1.76400000000132e-06, 1.6519999999978219e-06, 1.6810000000033742e-06, 1.6950000000029442e-06, 1.6940000000034705e-06, 1.6799999999969617e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.6950000000029442e-06, 1.6519999999978219e-06, 1.6669999999968654e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.637999999998252e-06, 1.7089999999955752e-06, 1.7500000000017502e-06]</msg>
<status status="PASS" starttime="20201112 12:42:25.590" endtime="20201112 12:42:25.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.579" endtime="20201112 12:42:25.596"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.603" endtime="20201112 12:42:25.606"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:25.613" endtime="20201112 12:42:25.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.608" endtime="20201112 12:42:25.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.598" endtime="20201112 12:42:25.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.050" endtime="20201112 12:42:25.640"></status>
</kw>
<msg timestamp="20201112 12:42:25.640" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.662" endtime="20201112 12:42:25.677"></status>
</kw>
<msg timestamp="20201112 12:42:25.678" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:25.658" endtime="20201112 12:42:25.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.685" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:25.680" endtime="20201112 12:42:25.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.687" endtime="20201112 12:42:25.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.650" endtime="20201112 12:42:25.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.645" endtime="20201112 12:42:25.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.712" endtime="20201112 12:42:26.064"></status>
</kw>
<msg timestamp="20201112 12:42:26.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040331681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040333319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:25.708" endtime="20201112 12:42:26.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040331681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040333319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:26.075" endtime="20201112 12:42:26.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.094" endtime="20201112 12:42:26.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.701" endtime="20201112 12:42:26.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.696" endtime="20201112 12:42:26.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:26.111" level="INFO">${RESULT} = [{'time': 0.040333319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.637999999998252e-06, 'source_diff': 1.637999999998252e-06}, {'time': 0.040349722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:26.102" endtime="20201112 12:42:26.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:26.142" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:26.113" endtime="20201112 12:42:26.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.152" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:26.150" endtime="20201112 12:42:26.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.158" level="INFO">VALUE: [1.637999999998252e-06, 1.6659999999973918e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.6939999999965316e-06, 1.6530000000042344e-06, 1.77800000000089e-06, 1.7080000000030404e-06, 1.6530000000042344e-06, 1.6519999999978219e-06, 1.6669999999968654e-06, 1.6669999999968654e-06, 1.6669999999968654e-06, 1.7220000000026103e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.6670000000038043e-06, 1.6519999999978219e-06, 1.7499999999948113e-06, 1.6519999999978219e-06, 1.7080000000030404e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6660000000043307e-06, 1.709000000002514e-06, 1.709000000002514e-06, 1.709000000002514e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.7770000000014163e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.76400000000132e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.7089999999955752e-06, 1.7079999999961015e-06, 1.6530000000042344e-06, 1.6670000000038043e-06, 1.6670000000038043e-06, 1.6390000000046645e-06, 1.7089999999955752e-06, 1.7079999999961015e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6670000000038043e-06, 1.6249999999981557e-06]</msg>
<status status="PASS" starttime="20201112 12:42:26.154" endtime="20201112 12:42:26.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.144" endtime="20201112 12:42:26.161"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.167" endtime="20201112 12:42:26.170"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:26.175" endtime="20201112 12:42:26.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.171" endtime="20201112 12:42:26.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.163" endtime="20201112 12:42:26.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.641" endtime="20201112 12:42:26.201"></status>
</kw>
<msg timestamp="20201112 12:42:26.202" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.222" endtime="20201112 12:42:26.237"></status>
</kw>
<msg timestamp="20201112 12:42:26.238" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:26.218" endtime="20201112 12:42:26.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.245" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:26.241" endtime="20201112 12:42:26.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.247" endtime="20201112 12:42:26.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.211" endtime="20201112 12:42:26.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.206" endtime="20201112 12:42:26.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.270" endtime="20201112 12:42:26.621"></status>
</kw>
<msg timestamp="20201112 12:42:26.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037864458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037866167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:26.267" endtime="20201112 12:42:26.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037864458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037866167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:26.630" endtime="20201112 12:42:26.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.645" endtime="20201112 12:42:26.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.260" endtime="20201112 12:42:26.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.255" endtime="20201112 12:42:26.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:26.653" level="INFO">${RESULT} = [{'time': 0.037866167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.709000000002514e-06, 'source_diff': 1.709000000002514e-06}, {'time': 0.037870125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:26.649" endtime="20201112 12:42:26.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:26.668" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:26.654" endtime="20201112 12:42:26.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.674" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:26.671" endtime="20201112 12:42:26.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.676" level="INFO">VALUE: [1.709000000002514e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.6530000000042344e-06, 1.7360000000021802e-06, 1.6529999999972955e-06, 1.6669999999968654e-06, 1.7770000000014163e-06, 1.5970000000059548e-06, 1.77800000000089e-06, 1.7080000000030404e-06, 1.77800000000089e-06, 1.6810000000033742e-06, 1.7769999999944774e-06, 1.6530000000042344e-06, 1.7080000000030404e-06, 1.7359999999952413e-06, 1.709000000002514e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.6660000000043307e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.6659999999973918e-06, 1.6670000000038043e-06, 1.6659999999973918e-06, 1.6670000000038043e-06, 1.709000000002514e-06, 1.722999999995145e-06, 1.5969999999990159e-06, 1.77800000000089e-06, 1.6670000000038043e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.7219999999956714e-06, 1.5969999999990159e-06, 1.76400000000132e-06, 1.6109999999985858e-06, 1.6519999999978219e-06, 1.6670000000038043e-06, 1.6389999999977256e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.7079999999961015e-06]</msg>
<status status="PASS" starttime="20201112 12:42:26.675" endtime="20201112 12:42:26.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.668" endtime="20201112 12:42:26.678"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.681" endtime="20201112 12:42:26.682"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:26.685" endtime="20201112 12:42:26.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.683" endtime="20201112 12:42:26.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.678" endtime="20201112 12:42:26.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.203" endtime="20201112 12:42:26.706"></status>
</kw>
<msg timestamp="20201112 12:42:26.706" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.715" endtime="20201112 12:42:26.727"></status>
</kw>
<msg timestamp="20201112 12:42:26.727" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:26.714" endtime="20201112 12:42:26.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.730" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:26.728" endtime="20201112 12:42:26.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.731" endtime="20201112 12:42:26.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.710" endtime="20201112 12:42:26.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.708" endtime="20201112 12:42:26.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.743" endtime="20201112 12:42:27.026"></status>
</kw>
<msg timestamp="20201112 12:42:27.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021817986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021819708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:26.741" endtime="20201112 12:42:27.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021817986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021819708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:27.031" endtime="20201112 12:42:27.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.039" endtime="20201112 12:42:27.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.738" endtime="20201112 12:42:27.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.735" endtime="20201112 12:42:27.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:27.047" level="INFO">${RESULT} = [{'time': 0.021819708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.021827958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:27.043" endtime="20201112 12:42:27.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:27.062" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:27.048" endtime="20201112 12:42:27.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.067" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:27.066" endtime="20201112 12:42:27.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.070" level="INFO">VALUE: [1.7219999999991409e-06, 1.6250000000016251e-06, 1.707999999999571e-06, 1.6529999999972955e-06, 1.7639999999978506e-06, 1.7089999999990446e-06, 1.7089999999990446e-06, 1.7770000000014163e-06, 1.6949999999994747e-06, 1.7089999999990446e-06, 1.6670000000003349e-06, 1.653000000000765e-06, 1.7089999999990446e-06, 1.709000000002514e-06, 1.7770000000014163e-06, 1.6670000000003349e-06, 1.6670000000003349e-06, 1.6809999999999048e-06, 1.653000000000765e-06, 1.6949999999994747e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.6529999999972955e-06, 1.6809999999999048e-06, 1.7219999999991409e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.6380000000017214e-06, 1.707999999999571e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.6949999999994747e-06, 1.6389999999977256e-06, 1.7089999999990446e-06, 1.6800000000004311e-06, 1.7770000000014163e-06, 1.7229999999986145e-06, 1.7770000000014163e-06, 1.7089999999990446e-06, 1.707999999999571e-06, 1.7360000000021802e-06, 1.707999999999571e-06, 1.7219999999991409e-06, 1.6949999999994747e-06, 1.7089999999990446e-06, 1.707999999999571e-06, 1.6670000000003349e-06, 1.6389999999977256e-06, 1.6949999999994747e-06, 1.639000000001195e-06]</msg>
<status status="PASS" starttime="20201112 12:42:27.068" endtime="20201112 12:42:27.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.063" endtime="20201112 12:42:27.073"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.076" endtime="20201112 12:42:27.077"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:27.079" endtime="20201112 12:42:27.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.077" endtime="20201112 12:42:27.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.073" endtime="20201112 12:42:27.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.707" endtime="20201112 12:42:27.101"></status>
</kw>
<msg timestamp="20201112 12:42:27.101" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.110" endtime="20201112 12:42:27.122"></status>
</kw>
<msg timestamp="20201112 12:42:27.123" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:27.109" endtime="20201112 12:42:27.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.126" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:27.124" endtime="20201112 12:42:27.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.127" endtime="20201112 12:42:27.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.105" endtime="20201112 12:42:27.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.103" endtime="20201112 12:42:27.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.138" endtime="20201112 12:42:27.484"></status>
</kw>
<msg timestamp="20201112 12:42:27.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021887375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021889028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:27.136" endtime="20201112 12:42:27.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021887375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021889028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:27.493" endtime="20201112 12:42:27.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.512" endtime="20201112 12:42:27.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.133" endtime="20201112 12:42:27.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.131" endtime="20201112 12:42:27.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:27.529" level="INFO">${RESULT} = [{'time': 0.021889028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.021903417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:27.520" endtime="20201112 12:42:27.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:27.561" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:27.531" endtime="20201112 12:42:27.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.571" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:27.569" endtime="20201112 12:42:27.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.577" level="INFO">VALUE: [1.653000000000765e-06, 1.7360000000021802e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.6949999999994747e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.7219999999991409e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.709000000002514e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6520000000012913e-06, 1.653000000000765e-06, 1.7359999999987108e-06, 1.707999999999571e-06, 1.6800000000004311e-06, 1.7089999999990446e-06, 1.7089999999990446e-06, 1.7779999999974205e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.7080000000030404e-06, 1.6950000000029442e-06, 1.707999999999571e-06, 1.6389999999977256e-06, 1.6809999999999048e-06, 1.653000000000765e-06, 1.7229999999986145e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.6670000000003349e-06, 1.6529999999972955e-06, 1.7359999999987108e-06, 1.77800000000089e-06, 1.76400000000132e-06, 1.7219999999991409e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6660000000008612e-06, 1.6519999999978219e-06, 1.6950000000029442e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.6389999999977256e-06, 1.707999999999571e-06, 1.582999999999446e-06]</msg>
<status status="PASS" starttime="20201112 12:42:27.574" endtime="20201112 12:42:27.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.563" endtime="20201112 12:42:27.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.586" endtime="20201112 12:42:27.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:27.594" endtime="20201112 12:42:27.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.590" endtime="20201112 12:42:27.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.582" endtime="20201112 12:42:27.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.102" endtime="20201112 12:42:27.620"></status>
</kw>
<msg timestamp="20201112 12:42:27.621" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.640" endtime="20201112 12:42:27.655"></status>
</kw>
<msg timestamp="20201112 12:42:27.657" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:27.637" endtime="20201112 12:42:27.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.663" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:27.659" endtime="20201112 12:42:27.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.665" endtime="20201112 12:42:27.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.630" endtime="20201112 12:42:27.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.625" endtime="20201112 12:42:27.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.689" endtime="20201112 12:42:28.036"></status>
</kw>
<msg timestamp="20201112 12:42:28.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037934944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037936708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:27.686" endtime="20201112 12:42:28.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037934944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037936708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:28.046" endtime="20201112 12:42:28.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.064" endtime="20201112 12:42:28.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.679" endtime="20201112 12:42:28.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.674" endtime="20201112 12:42:28.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:28.083" level="INFO">${RESULT} = [{'time': 0.037936708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.03794075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:42:28.074" endtime="20201112 12:42:28.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:28.114" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:28.085" endtime="20201112 12:42:28.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.125" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:28.122" endtime="20201112 12:42:28.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.131" level="INFO">VALUE: [1.76400000000132e-06, 1.6530000000042344e-06, 1.7370000000016539e-06, 1.7080000000030404e-06, 1.6520000000047608e-06, 1.6530000000042344e-06, 1.6939999999965316e-06, 1.77800000000089e-06, 1.6939999999965316e-06, 1.6809999999964353e-06, 1.6529999999972955e-06, 1.709000000002514e-06, 1.6390000000046645e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6670000000038043e-06, 1.7079999999961015e-06, 1.777999999993951e-06, 1.6529999999972955e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.6940000000034705e-06, 1.7079999999961015e-06, 1.6529999999972955e-06, 1.6800000000039006e-06, 1.5699999999993497e-06, 1.6950000000029442e-06, 1.7360000000021802e-06, 1.6529999999972955e-06, 1.6519999999978219e-06, 1.6530000000042344e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.6249999999981557e-06, 1.7220000000026103e-06, 1.6530000000042344e-06, 1.7079999999961015e-06, 1.6389999999977256e-06, 1.6119999999980594e-06, 1.5969999999990159e-06, 1.6950000000029442e-06, 1.6659999999973918e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.7219999999956714e-06, 1.77800000000089e-06, 1.723000000002084e-06, 1.6670000000038043e-06]</msg>
<status status="PASS" starttime="20201112 12:42:28.128" endtime="20201112 12:42:28.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.116" endtime="20201112 12:42:28.134"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.141" endtime="20201112 12:42:28.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:28.149" endtime="20201112 12:42:28.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.144" endtime="20201112 12:42:28.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.136" endtime="20201112 12:42:28.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.622" endtime="20201112 12:42:28.174"></status>
</kw>
<msg timestamp="20201112 12:42:28.175" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.195" endtime="20201112 12:42:28.209"></status>
</kw>
<msg timestamp="20201112 12:42:28.210" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:28.191" endtime="20201112 12:42:28.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.216" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:28.212" endtime="20201112 12:42:28.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.219" endtime="20201112 12:42:28.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.184" endtime="20201112 12:42:28.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.179" endtime="20201112 12:42:28.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.242" endtime="20201112 12:42:28.584"></status>
</kw>
<msg timestamp="20201112 12:42:28.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037467847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037469556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:28.238" endtime="20201112 12:42:28.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037467847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037469556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:28.593" endtime="20201112 12:42:28.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.612" endtime="20201112 12:42:28.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.231" endtime="20201112 12:42:28.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.227" endtime="20201112 12:42:28.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:28.629" level="INFO">${RESULT} = [{'time': 0.037469556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.709000000002514e-06, 'source_diff': 1.709000000002514e-06}, {'time': 0.037474347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:28.620" endtime="20201112 12:42:28.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:28.660" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:28.632" endtime="20201112 12:42:28.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.671" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:28.668" endtime="20201112 12:42:28.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.677" level="INFO">VALUE: [1.709000000002514e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.6659999999973918e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.637999999998252e-06, 1.6660000000043307e-06, 1.7079999999961015e-06, 1.6809999999964353e-06, 1.6389999999977256e-06, 1.6940000000034705e-06, 1.6659999999973918e-06, 1.7080000000030404e-06, 1.77800000000089e-06, 1.6950000000029442e-06, 1.7079999999961015e-06, 1.723000000002084e-06, 1.6520000000047608e-06, 1.6389999999977256e-06, 1.7079999999961015e-06, 1.6659999999973918e-06, 1.7080000000030404e-06, 1.6950000000029442e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.6249999999981557e-06, 1.7639999999943812e-06, 1.709000000002514e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.6519999999978219e-06, 1.7080000000030404e-06, 1.7359999999952413e-06, 1.6530000000042344e-06, 1.6530000000042344e-06, 1.7080000000030404e-06, 1.7089999999955752e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.7089999999955752e-06, 1.7360000000021802e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.709000000002514e-06, 1.709000000002514e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6529999999972955e-06]</msg>
<status status="PASS" starttime="20201112 12:42:28.674" endtime="20201112 12:42:28.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.662" endtime="20201112 12:42:28.680"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.688" endtime="20201112 12:42:28.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:28.696" endtime="20201112 12:42:28.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.692" endtime="20201112 12:42:28.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.682" endtime="20201112 12:42:28.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.176" endtime="20201112 12:42:28.722"></status>
</kw>
<msg timestamp="20201112 12:42:28.722" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.742" endtime="20201112 12:42:28.756"></status>
</kw>
<msg timestamp="20201112 12:42:28.757" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:28.738" endtime="20201112 12:42:28.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.764" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:28.759" endtime="20201112 12:42:28.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.766" endtime="20201112 12:42:28.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.731" endtime="20201112 12:42:28.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.727" endtime="20201112 12:42:28.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.789" endtime="20201112 12:42:29.140"></status>
</kw>
<msg timestamp="20201112 12:42:29.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037290958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037292542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:28.786" endtime="20201112 12:42:29.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037290958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037292542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:29.150" endtime="20201112 12:42:29.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.170" endtime="20201112 12:42:29.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.779" endtime="20201112 12:42:29.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.774" endtime="20201112 12:42:29.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:29.189" level="INFO">${RESULT} = [{'time': 0.037292542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.037300042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:29.179" endtime="20201112 12:42:29.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:29.224" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:29.191" endtime="20201112 12:42:29.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.235" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:29.232" endtime="20201112 12:42:29.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.240" level="INFO">VALUE: [1.5839999999989196e-06, 1.7089999999955752e-06, 1.6250000000050946e-06, 1.7219999999956714e-06, 1.6659999999973918e-06, 1.582999999999446e-06, 1.637999999998252e-06, 1.7219999999956714e-06, 1.6519999999978219e-06, 1.6949999999960053e-06, 1.7220000000026103e-06, 1.637999999998252e-06, 1.6659999999973918e-06, 1.6669999999968654e-06, 1.6939999999965316e-06, 1.7089999999955752e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.6529999999972955e-06, 1.7359999999952413e-06, 1.709000000002514e-06, 1.6519999999978219e-06, 1.6519999999978219e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6530000000042344e-06, 1.7080000000030404e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.777999999993951e-06, 1.709000000002514e-06, 1.6530000000042344e-06, 1.7079999999961015e-06, 1.6519999999978219e-06, 1.6669999999968654e-06, 1.7079999999961015e-06, 1.637999999998252e-06, 1.6810000000033742e-06, 1.6519999999978219e-06, 1.6389999999977256e-06, 1.6660000000043307e-06, 1.637999999998252e-06, 1.6669999999968654e-06, 1.6390000000046645e-06, 1.7079999999961015e-06, 1.6800000000039006e-06, 1.6799999999969617e-06]</msg>
<status status="PASS" starttime="20201112 12:42:29.237" endtime="20201112 12:42:29.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.226" endtime="20201112 12:42:29.244"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.251" endtime="20201112 12:42:29.253"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:29.260" endtime="20201112 12:42:29.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.255" endtime="20201112 12:42:29.285"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.246" endtime="20201112 12:42:29.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.723" endtime="20201112 12:42:29.287"></status>
</kw>
<msg timestamp="20201112 12:42:29.288" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.309" endtime="20201112 12:42:29.325"></status>
</kw>
<msg timestamp="20201112 12:42:29.326" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:29.305" endtime="20201112 12:42:29.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.332" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:29.328" endtime="20201112 12:42:29.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.335" endtime="20201112 12:42:29.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.298" endtime="20201112 12:42:29.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.293" endtime="20201112 12:42:29.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.360" endtime="20201112 12:42:29.726"></status>
</kw>
<msg timestamp="20201112 12:42:29.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041365931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041367583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:29.356" endtime="20201112 12:42:29.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041365931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041367583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:29.736" endtime="20201112 12:42:29.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.757" endtime="20201112 12:42:29.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.349" endtime="20201112 12:42:29.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.344" endtime="20201112 12:42:29.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:29.775" level="INFO">${RESULT} = [{'time': 0.041367583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6519999999978219e-06, 'source_diff': 1.6519999999978219e-06}, {'time': 0.041373, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:42:29.766" endtime="20201112 12:42:29.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:29.808" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:29.778" endtime="20201112 12:42:29.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.819" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:29.817" endtime="20201112 12:42:29.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.825" level="INFO">VALUE: [1.6519999999978219e-06, 1.6810000000033742e-06, 1.7220000000026103e-06, 1.6529999999972955e-06, 1.7219999999956714e-06, 1.6529999999972955e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.6530000000042344e-06, 1.6670000000038043e-06, 1.6529999999972955e-06, 1.7500000000017502e-06, 1.709000000002514e-06, 1.637999999998252e-06, 1.6670000000038043e-06, 1.6520000000047608e-06, 1.7370000000016539e-06, 1.7219999999956714e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6670000000038043e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.6669999999968654e-06, 1.6530000000042344e-06, 1.6530000000042344e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.6530000000042344e-06, 1.6529999999972955e-06, 1.6950000000029442e-06, 1.6529999999972955e-06, 1.7080000000030404e-06, 1.77800000000089e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.6530000000042344e-06, 1.637999999998252e-06, 1.6939999999965316e-06, 1.6109999999985858e-06, 1.7220000000026103e-06, 1.723000000002084e-06, 1.6530000000042344e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6939999999965316e-06, 1.7360000000021802e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6530000000042344e-06]</msg>
<status status="PASS" starttime="20201112 12:42:29.822" endtime="20201112 12:42:29.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.810" endtime="20201112 12:42:29.828"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.835" endtime="20201112 12:42:29.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:29.844" endtime="20201112 12:42:29.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.839" endtime="20201112 12:42:29.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.830" endtime="20201112 12:42:29.870"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.289" endtime="20201112 12:42:29.871"></status>
</kw>
<msg timestamp="20201112 12:42:29.871" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.894" endtime="20201112 12:42:29.909"></status>
</kw>
<msg timestamp="20201112 12:42:29.910" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:29.890" endtime="20201112 12:42:29.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.917" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:29.913" endtime="20201112 12:42:29.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.920" endtime="20201112 12:42:29.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.883" endtime="20201112 12:42:29.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.876" endtime="20201112 12:42:29.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.945" endtime="20201112 12:42:30.302"></status>
</kw>
<msg timestamp="20201112 12:42:30.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041613333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041615042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:29.941" endtime="20201112 12:42:30.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041613333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041615042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:30.313" endtime="20201112 12:42:30.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.333" endtime="20201112 12:42:30.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.933" endtime="20201112 12:42:30.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.928" endtime="20201112 12:42:30.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:30.351" level="INFO">${RESULT} = [{'time': 0.041615042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7089999999955752e-06, 'source_diff': 1.7089999999955752e-06}, {'time': 0.041623319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:30.342" endtime="20201112 12:42:30.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:30.384" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:30.353" endtime="20201112 12:42:30.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.390" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:30.389" endtime="20201112 12:42:30.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.393" level="INFO">VALUE: [1.7089999999955752e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.6390000000046645e-06, 1.6810000000033742e-06, 1.6530000000042344e-06, 1.6800000000039006e-06, 1.6519999999978219e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.7219999999956714e-06, 1.6519999999978219e-06, 1.6949999999960053e-06, 1.637999999998252e-06, 1.5830000000063849e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6659999999973918e-06, 1.6949999999960053e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6529999999972955e-06, 1.76400000000132e-06, 1.7080000000030404e-06, 1.6530000000042344e-06, 1.723000000002084e-06, 1.6810000000033742e-06, 1.7080000000030404e-06, 1.6249999999981557e-06, 1.6949999999960053e-06, 1.6950000000029442e-06, 1.6949999999960053e-06, 1.7080000000030404e-06, 1.6530000000042344e-06, 1.6670000000038043e-06, 1.6520000000047608e-06, 1.6529999999972955e-06, 1.7080000000030404e-06, 1.6529999999972955e-06, 1.6519999999978219e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.6529999999972955e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.6670000000038043e-06]</msg>
<status status="PASS" starttime="20201112 12:42:30.391" endtime="20201112 12:42:30.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.386" endtime="20201112 12:42:30.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.398" endtime="20201112 12:42:30.399"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:30.402" endtime="20201112 12:42:30.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.400" endtime="20201112 12:42:30.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.395" endtime="20201112 12:42:30.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.872" endtime="20201112 12:42:30.423"></status>
</kw>
<msg timestamp="20201112 12:42:30.423" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.433" endtime="20201112 12:42:30.445"></status>
</kw>
<msg timestamp="20201112 12:42:30.446" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:30.431" endtime="20201112 12:42:30.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.449" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:30.447" endtime="20201112 12:42:30.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.450" endtime="20201112 12:42:30.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.428" endtime="20201112 12:42:30.454"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.426" endtime="20201112 12:42:30.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.463" endtime="20201112 12:42:30.792"></status>
</kw>
<msg timestamp="20201112 12:42:30.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022356639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022358347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:30.461" endtime="20201112 12:42:30.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022356639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022358347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:30.803" endtime="20201112 12:42:30.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.823" endtime="20201112 12:42:30.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.457" endtime="20201112 12:42:30.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.455" endtime="20201112 12:42:30.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:30.843" level="INFO">${RESULT} = [{'time': 0.022358347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.022371625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:30.833" endtime="20201112 12:42:30.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:30.876" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:30.845" endtime="20201112 12:42:30.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.887" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:30.885" endtime="20201112 12:42:30.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.893" level="INFO">VALUE: [1.707999999999571e-06, 1.6670000000003349e-06, 1.7500000000017502e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.6949999999994747e-06, 1.7359999999987108e-06, 1.653000000000765e-06, 1.6380000000017214e-06, 1.639000000001195e-06, 1.707999999999571e-06, 1.6669999999968654e-06, 1.653000000000765e-06, 1.6660000000008612e-06, 1.7639999999978506e-06, 1.6670000000003349e-06, 1.707999999999571e-06, 1.6809999999999048e-06, 1.6800000000004311e-06, 1.6670000000003349e-06, 1.6519999999978219e-06, 1.6389999999977256e-06, 1.5970000000024853e-06, 1.7359999999987108e-06, 1.6949999999994747e-06, 1.7219999999991409e-06, 1.707999999999571e-06, 1.6659999999973918e-06, 1.6809999999999048e-06, 1.653000000000765e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.707999999999571e-06, 1.7219999999991409e-06, 1.639000000001195e-06, 1.694000000000001e-06, 1.5970000000024853e-06, 1.707999999999571e-06, 1.653000000000765e-06, 1.6520000000012913e-06, 1.6519999999978219e-06, 1.7089999999990446e-06, 1.6670000000003349e-06, 1.709000000002514e-06, 1.707999999999571e-06]</msg>
<status status="PASS" starttime="20201112 12:42:30.890" endtime="20201112 12:42:30.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.878" endtime="20201112 12:42:30.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.904" endtime="20201112 12:42:30.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:30.912" endtime="20201112 12:42:30.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.908" endtime="20201112 12:42:30.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.899" endtime="20201112 12:42:30.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.424" endtime="20201112 12:42:30.939"></status>
</kw>
<msg timestamp="20201112 12:42:30.939" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.961" endtime="20201112 12:42:30.975"></status>
</kw>
<msg timestamp="20201112 12:42:30.977" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:30.957" endtime="20201112 12:42:30.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.983" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:30.979" endtime="20201112 12:42:30.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.986" endtime="20201112 12:42:30.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.949" endtime="20201112 12:42:30.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.944" endtime="20201112 12:42:30.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.013" endtime="20201112 12:42:31.370"></status>
</kw>
<msg timestamp="20201112 12:42:31.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039977111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039978764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:31.009" endtime="20201112 12:42:31.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039977111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039978764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:31.380" endtime="20201112 12:42:31.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.401" endtime="20201112 12:42:31.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.999" endtime="20201112 12:42:31.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.994" endtime="20201112 12:42:31.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:31.419" level="INFO">${RESULT} = [{'time': 0.039978764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.039984653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:31.410" endtime="20201112 12:42:31.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:31.455" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:31.422" endtime="20201112 12:42:31.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.466" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:31.463" endtime="20201112 12:42:31.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.472" level="INFO">VALUE: [1.6529999999972955e-06, 1.77800000000089e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.7079999999961015e-06, 1.6519999999978219e-06, 1.709000000002514e-06, 1.6659999999973918e-06, 1.6249999999981557e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.6390000000046645e-06, 1.7219999999956714e-06, 1.7089999999955752e-06, 1.6529999999972955e-06, 1.6519999999978219e-06, 1.6530000000042344e-06, 1.7080000000030404e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.5970000000059548e-06, 1.7089999999955752e-06, 1.6530000000042344e-06, 1.6250000000050946e-06, 1.777999999993951e-06, 1.6659999999973918e-06, 1.7080000000030404e-06, 1.6660000000043307e-06, 1.6660000000043307e-06, 1.5969999999990159e-06, 1.637999999998252e-06, 1.76400000000132e-06, 1.7079999999961015e-06, 1.7089999999955752e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.6389999999977256e-06, 1.7220000000026103e-06, 1.6530000000042344e-06, 1.7219999999956714e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.7910000000009862e-06, 1.7080000000030404e-06, 1.6949999999960053e-06, 1.6670000000038043e-06, 1.6660000000043307e-06, 1.6529999999972955e-06, 1.7360000000021802e-06]</msg>
<status status="PASS" starttime="20201112 12:42:31.468" endtime="20201112 12:42:31.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.457" endtime="20201112 12:42:31.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.482" endtime="20201112 12:42:31.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:31.491" endtime="20201112 12:42:31.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.486" endtime="20201112 12:42:31.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.477" endtime="20201112 12:42:31.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.941" endtime="20201112 12:42:31.517"></status>
</kw>
<msg timestamp="20201112 12:42:31.518" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.539" endtime="20201112 12:42:31.555"></status>
</kw>
<msg timestamp="20201112 12:42:31.556" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:31.535" endtime="20201112 12:42:31.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.563" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:31.559" endtime="20201112 12:42:31.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.565" endtime="20201112 12:42:31.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.527" endtime="20201112 12:42:31.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.523" endtime="20201112 12:42:31.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.592" endtime="20201112 12:42:31.959"></status>
</kw>
<msg timestamp="20201112 12:42:31.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040440542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040442264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:31.588" endtime="20201112 12:42:31.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040440542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040442264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:31.969" endtime="20201112 12:42:31.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.989" endtime="20201112 12:42:31.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.580" endtime="20201112 12:42:31.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.575" endtime="20201112 12:42:31.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:32.008" level="INFO">${RESULT} = [{'time': 0.040442264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999956714e-06, 'source_diff': 1.7219999999956714e-06}, {'time': 0.040446208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:31.998" endtime="20201112 12:42:32.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:32.040" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:32.010" endtime="20201112 12:42:32.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.051" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:32.049" endtime="20201112 12:42:32.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.057" level="INFO">VALUE: [1.7219999999956714e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.6529999999972955e-06, 1.709000000002514e-06, 1.6519999999978219e-06, 1.6380000000051909e-06, 1.6389999999977256e-06, 1.6110000000055247e-06, 1.6529999999972955e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.582999999999446e-06, 1.7080000000030404e-06, 1.77800000000089e-06, 1.6389999999977256e-06, 1.6660000000043307e-06, 1.7080000000030404e-06, 1.6520000000047608e-06, 1.7080000000030404e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.6939999999965316e-06, 1.6520000000047608e-06, 1.6669999999968654e-06, 1.6519999999978219e-06, 1.7089999999955752e-06, 1.7220000000026103e-06, 1.6529999999972955e-06, 1.5969999999990159e-06, 1.6530000000042344e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.7080000000030404e-06, 1.6670000000038043e-06, 1.7219999999956714e-06, 1.6939999999965316e-06, 1.7219999999956714e-06, 1.6950000000029442e-06, 1.6519999999978219e-06, 1.6529999999972955e-06, 1.6250000000050946e-06, 1.6949999999960053e-06, 1.7220000000026103e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.709000000002514e-06, 1.582999999999446e-06]</msg>
<status status="PASS" starttime="20201112 12:42:32.054" endtime="20201112 12:42:32.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.042" endtime="20201112 12:42:32.061"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.067" endtime="20201112 12:42:32.070"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:32.076" endtime="20201112 12:42:32.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.072" endtime="20201112 12:42:32.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.063" endtime="20201112 12:42:32.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.519" endtime="20201112 12:42:32.103"></status>
</kw>
<msg timestamp="20201112 12:42:32.103" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.124" endtime="20201112 12:42:32.141"></status>
</kw>
<msg timestamp="20201112 12:42:32.142" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.121" endtime="20201112 12:42:32.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.149" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.144" endtime="20201112 12:42:32.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.151" endtime="20201112 12:42:32.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.113" endtime="20201112 12:42:32.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.108" endtime="20201112 12:42:32.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.176" endtime="20201112 12:42:32.534"></status>
</kw>
<msg timestamp="20201112 12:42:32.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039975972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039977681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:32.173" endtime="20201112 12:42:32.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039975972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039977681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:32.544" endtime="20201112 12:42:32.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.565" endtime="20201112 12:42:32.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.165" endtime="20201112 12:42:32.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.160" endtime="20201112 12:42:32.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:32.584" level="INFO">${RESULT} = [{'time': 0.039977681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.709000000002514e-06, 'source_diff': 1.709000000002514e-06}, {'time': 0.039991208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:32.574" endtime="20201112 12:42:32.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:32.616" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:32.586" endtime="20201112 12:42:32.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.628" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:32.625" endtime="20201112 12:42:32.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.634" level="INFO">VALUE: [1.709000000002514e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.7089999999955752e-06, 1.6939999999965316e-06, 1.7359999999952413e-06, 1.6519999999978219e-06, 1.7079999999961015e-06, 1.6670000000038043e-06, 1.6389999999977256e-06, 1.6519999999978219e-06, 1.77800000000089e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.6940000000034705e-06, 1.6950000000029442e-06, 1.7080000000030404e-06, 1.6530000000042344e-06, 1.6529999999972955e-06, 1.709000000002514e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.7500000000017502e-06, 1.6529999999972955e-06, 1.6950000000029442e-06, 1.6529999999972955e-06, 1.7079999999961015e-06, 1.6809999999964353e-06, 1.6660000000043307e-06, 1.6939999999965316e-06, 1.6950000000029442e-06, 1.722999999995145e-06, 1.7089999999955752e-06, 1.6939999999965316e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7089999999955752e-06, 1.7079999999961015e-06, 1.6389999999977256e-06, 1.6809999999964353e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.6120000000049983e-06, 1.7080000000030404e-06, 1.6530000000042344e-06, 1.6950000000029442e-06, 1.637999999998252e-06, 1.7080000000030404e-06, 1.6940000000034705e-06, 1.6519999999978219e-06]</msg>
<status status="PASS" starttime="20201112 12:42:32.631" endtime="20201112 12:42:32.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.619" endtime="20201112 12:42:32.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.645" endtime="20201112 12:42:32.648"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:32.654" endtime="20201112 12:42:32.676"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.649" endtime="20201112 12:42:32.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.640" endtime="20201112 12:42:32.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.104" endtime="20201112 12:42:32.681"></status>
</kw>
<msg timestamp="20201112 12:42:32.681" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.702" endtime="20201112 12:42:32.718"></status>
</kw>
<msg timestamp="20201112 12:42:32.719" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.699" endtime="20201112 12:42:32.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.726" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.722" endtime="20201112 12:42:32.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.728" endtime="20201112 12:42:32.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.691" endtime="20201112 12:42:32.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.686" endtime="20201112 12:42:32.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.753" endtime="20201112 12:42:33.116"></status>
</kw>
<msg timestamp="20201112 12:42:33.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040600736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040602375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:32.750" endtime="20201112 12:42:33.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040600736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040602375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:33.126" endtime="20201112 12:42:33.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.146" endtime="20201112 12:42:33.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.742" endtime="20201112 12:42:33.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.737" endtime="20201112 12:42:33.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:33.166" level="INFO">${RESULT} = [{'time': 0.040602375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6390000000046645e-06, 'source_diff': 1.6390000000046645e-06}, {'time': 0.040611542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:33.157" endtime="20201112 12:42:33.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:33.199" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:33.169" endtime="20201112 12:42:33.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.210" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:33.207" endtime="20201112 12:42:33.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.216" level="INFO">VALUE: [1.6390000000046645e-06, 1.6810000000033742e-06, 1.7220000000026103e-06, 1.6520000000047608e-06, 1.6800000000039006e-06, 1.7770000000014163e-06, 1.7080000000030404e-06, 1.76400000000132e-06, 1.7079999999961015e-06, 1.6529999999972955e-06, 1.6800000000039006e-06, 1.7079999999961015e-06, 1.6109999999985858e-06, 1.709000000002514e-06, 1.6660000000043307e-06, 1.709000000002514e-06, 1.6390000000046645e-06, 1.7080000000030404e-06, 1.6530000000042344e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.6530000000042344e-06, 1.582999999999446e-06, 1.7360000000021802e-06, 1.6950000000029442e-06, 1.723000000002084e-06, 1.6660000000043307e-06, 1.7089999999955752e-06, 1.6809999999964353e-06, 1.5969999999990159e-06, 1.7080000000030404e-06, 1.6390000000046645e-06, 1.6800000000039006e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.7080000000030404e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.5699999999993497e-06, 1.6389999999977256e-06, 1.7080000000030404e-06, 1.6390000000046645e-06, 1.6950000000029442e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.6519999999978219e-06]</msg>
<status status="PASS" starttime="20201112 12:42:33.212" endtime="20201112 12:42:33.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.201" endtime="20201112 12:42:33.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.226" endtime="20201112 12:42:33.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:33.235" endtime="20201112 12:42:33.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.230" endtime="20201112 12:42:33.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.221" endtime="20201112 12:42:33.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.682" endtime="20201112 12:42:33.261"></status>
</kw>
<msg timestamp="20201112 12:42:33.262" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.283" endtime="20201112 12:42:33.299"></status>
</kw>
<msg timestamp="20201112 12:42:33.300" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:33.279" endtime="20201112 12:42:33.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.307" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:33.303" endtime="20201112 12:42:33.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.309" endtime="20201112 12:42:33.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.272" endtime="20201112 12:42:33.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.267" endtime="20201112 12:42:33.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.334" endtime="20201112 12:42:33.701"></status>
</kw>
<msg timestamp="20201112 12:42:33.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040215958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040217611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:33.331" endtime="20201112 12:42:33.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040215958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040217611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:33.712" endtime="20201112 12:42:33.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.733" endtime="20201112 12:42:33.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.323" endtime="20201112 12:42:33.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.318" endtime="20201112 12:42:33.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:33.753" level="INFO">${RESULT} = [{'time': 0.040217611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.040223431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:33.744" endtime="20201112 12:42:33.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:33.792" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:33.756" endtime="20201112 12:42:33.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.803" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:33.801" endtime="20201112 12:42:33.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.809" level="INFO">VALUE: [1.6529999999972955e-06, 1.7089999999955752e-06, 1.6529999999972955e-06, 1.6940000000034705e-06, 1.5839999999989196e-06, 1.709000000002514e-06, 1.7359999999952413e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6659999999973918e-06, 1.6389999999977256e-06, 1.7089999999955752e-06, 1.6520000000047608e-06, 1.76400000000132e-06, 1.7080000000030404e-06, 1.6519999999978219e-06, 1.568999999999876e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.7079999999961015e-06, 1.723000000002084e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.6939999999965316e-06, 1.7080000000030404e-06, 1.6810000000033742e-06, 1.7079999999961015e-06, 1.7920000000004599e-06, 1.7079999999961015e-06, 1.6390000000046645e-06, 1.6519999999978219e-06, 1.6390000000046645e-06, 1.709000000002514e-06, 1.6670000000038043e-06, 1.7079999999961015e-06, 1.6390000000046645e-06, 1.6950000000029442e-06, 1.7080000000030404e-06, 1.6950000000029442e-06, 1.7080000000030404e-06, 1.6939999999965316e-06, 1.6669999999968654e-06, 1.6949999999960053e-06, 1.5969999999990159e-06, 1.7500000000017502e-06, 1.6519999999978219e-06, 1.6799999999969617e-06, 1.6660000000043307e-06, 1.7079999999961015e-06, 1.7219999999956714e-06]</msg>
<status status="PASS" starttime="20201112 12:42:33.806" endtime="20201112 12:42:33.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.794" endtime="20201112 12:42:33.815"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.826" endtime="20201112 12:42:33.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:33.832" endtime="20201112 12:42:33.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.829" endtime="20201112 12:42:33.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.818" endtime="20201112 12:42:33.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.263" endtime="20201112 12:42:33.854"></status>
</kw>
<msg timestamp="20201112 12:42:33.854" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.864" endtime="20201112 12:42:33.875"></status>
</kw>
<msg timestamp="20201112 12:42:33.876" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:33.862" endtime="20201112 12:42:33.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.879" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:33.877" endtime="20201112 12:42:33.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.881" endtime="20201112 12:42:33.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.858" endtime="20201112 12:42:33.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.856" endtime="20201112 12:42:33.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.892" endtime="20201112 12:42:34.179"></status>
</kw>
<msg timestamp="20201112 12:42:34.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022398986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022400681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:33.891" endtime="20201112 12:42:34.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022398986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022400681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:34.183" endtime="20201112 12:42:34.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.192" endtime="20201112 12:42:34.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.887" endtime="20201112 12:42:34.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.885" endtime="20201112 12:42:34.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:34.201" level="INFO">${RESULT} = [{'time': 0.022400681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.022409625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:34.196" endtime="20201112 12:42:34.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:34.216" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:34.202" endtime="20201112 12:42:34.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.221" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:34.220" endtime="20201112 12:42:34.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.224" level="INFO">VALUE: [1.6949999999994747e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.5979999999984895e-06, 1.6520000000012913e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.653000000000765e-06, 1.6250000000016251e-06, 1.653000000000765e-06, 1.6670000000003349e-06, 1.7089999999990446e-06, 1.6670000000003349e-06, 1.707999999999571e-06, 1.639000000001195e-06, 1.6949999999994747e-06, 1.6949999999994747e-06, 1.653000000000765e-06, 1.7500000000017502e-06, 1.639000000001195e-06, 1.7499999999982807e-06, 1.7080000000030404e-06, 1.6949999999994747e-06, 1.6670000000003349e-06, 1.707999999999571e-06, 1.639000000001195e-06, 1.694000000000001e-06, 1.7910000000009862e-06, 1.707999999999571e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6660000000008612e-06, 1.7219999999991409e-06, 1.6659999999973918e-06, 1.707999999999571e-06, 1.6660000000008612e-06, 1.6520000000012913e-06, 1.694000000000001e-06, 1.653000000000765e-06, 1.6670000000003349e-06, 1.653000000000765e-06, 1.7219999999991409e-06, 1.653000000000765e-06, 1.77800000000089e-06, 1.653000000000765e-06, 1.6949999999994747e-06, 1.6670000000003349e-06, 1.6670000000003349e-06, 1.6520000000012913e-06]</msg>
<status status="PASS" starttime="20201112 12:42:34.223" endtime="20201112 12:42:34.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.217" endtime="20201112 12:42:34.226"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.229" endtime="20201112 12:42:34.230"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:34.233" endtime="20201112 12:42:34.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.231" endtime="20201112 12:42:34.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.227" endtime="20201112 12:42:34.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.854" endtime="20201112 12:42:34.254"></status>
</kw>
<msg timestamp="20201112 12:42:34.255" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.265" endtime="20201112 12:42:34.277"></status>
</kw>
<msg timestamp="20201112 12:42:34.277" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:34.263" endtime="20201112 12:42:34.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.280" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:34.278" endtime="20201112 12:42:34.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.281" endtime="20201112 12:42:34.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.259" endtime="20201112 12:42:34.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.257" endtime="20201112 12:42:34.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.293" endtime="20201112 12:42:34.577"></status>
</kw>
<msg timestamp="20201112 12:42:34.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022570569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022572292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:34.291" endtime="20201112 12:42:34.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022570569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022572292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:34.582" endtime="20201112 12:42:34.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.591" endtime="20201112 12:42:34.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.288" endtime="20201112 12:42:34.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.286" endtime="20201112 12:42:34.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:34.599" level="INFO">${RESULT} = [{'time': 0.022572292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.723000000002084e-06, 'source_diff': 1.723000000002084e-06}, {'time': 0.022582069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:34.595" endtime="20201112 12:42:34.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:34.614" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:34.600" endtime="20201112 12:42:34.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.619" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:34.618" endtime="20201112 12:42:34.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.622" level="INFO">VALUE: [1.723000000002084e-06, 1.707999999999571e-06, 1.637999999998252e-06, 1.707999999999571e-06, 1.7089999999990446e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.7220000000026103e-06, 1.7089999999990446e-06, 1.76400000000132e-06, 1.653000000000765e-06, 1.707999999999571e-06, 1.653000000000765e-06, 1.694000000000001e-06, 1.6520000000012913e-06, 1.6670000000003349e-06, 1.7229999999986145e-06, 1.709000000002514e-06, 1.7359999999987108e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.653000000000765e-06, 1.6520000000012913e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.6529999999972955e-06, 1.6949999999994747e-06, 1.7500000000017502e-06, 1.6529999999972955e-06, 1.694000000000001e-06, 1.6660000000008612e-06, 1.6529999999972955e-06, 1.7359999999987108e-06, 1.694000000000001e-06, 1.7219999999991409e-06, 1.7219999999991409e-06, 1.707999999999571e-06, 1.653000000000765e-06, 1.7080000000030404e-06, 1.653000000000765e-06, 1.5969999999990159e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.653000000000765e-06, 1.6660000000008612e-06, 1.6389999999977256e-06, 1.694000000000001e-06, 1.6670000000003349e-06, 1.653000000000765e-06, 1.707999999999571e-06]</msg>
<status status="PASS" starttime="20201112 12:42:34.620" endtime="20201112 12:42:34.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.615" endtime="20201112 12:42:34.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.627" endtime="20201112 12:42:34.628"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:34.631" endtime="20201112 12:42:34.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.629" endtime="20201112 12:42:34.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.624" endtime="20201112 12:42:34.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.255" endtime="20201112 12:42:34.652"></status>
</kw>
<msg timestamp="20201112 12:42:34.652" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.662" endtime="20201112 12:42:34.674"></status>
</kw>
<msg timestamp="20201112 12:42:34.675" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:34.660" endtime="20201112 12:42:34.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.678" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:34.676" endtime="20201112 12:42:34.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.680" endtime="20201112 12:42:34.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.657" endtime="20201112 12:42:34.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.655" endtime="20201112 12:42:34.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.692" endtime="20201112 12:42:35.041"></status>
</kw>
<msg timestamp="20201112 12:42:35.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0224495, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022451153, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:34.690" endtime="20201112 12:42:35.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0224495, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022451153, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:35.051" endtime="20201112 12:42:35.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.071" endtime="20201112 12:42:35.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.687" endtime="20201112 12:42:35.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.684" endtime="20201112 12:42:35.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:35.090" level="INFO">${RESULT} = [{'time': 0.022451153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.022462542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:35.080" endtime="20201112 12:42:35.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:35.124" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:35.092" endtime="20201112 12:42:35.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.135" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:35.132" endtime="20201112 12:42:35.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.141" level="INFO">VALUE: [1.653000000000765e-06, 1.6529999999972955e-06, 1.653000000000765e-06, 1.6519999999978219e-06, 1.6520000000012913e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.694000000000001e-06, 1.6809999999999048e-06, 1.707999999999571e-06, 1.7360000000021802e-06, 1.653000000000765e-06, 1.707999999999571e-06, 1.6670000000003349e-06, 1.707999999999571e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7219999999991409e-06, 1.653000000000765e-06, 1.694000000000001e-06, 1.6670000000003349e-06, 1.637999999998252e-06, 1.707999999999571e-06, 1.653000000000765e-06, 1.6520000000012913e-06, 1.639000000001195e-06, 1.7089999999990446e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6520000000012913e-06, 1.7370000000016539e-06, 1.707999999999571e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.7219999999991409e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.5699999999993497e-06, 1.709000000002514e-06, 1.6520000000012913e-06, 1.6249999999981557e-06, 1.709000000002514e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.6520000000012913e-06, 1.653000000000765e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.7779999999974205e-06]</msg>
<status status="PASS" starttime="20201112 12:42:35.137" endtime="20201112 12:42:35.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.126" endtime="20201112 12:42:35.144"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.151" endtime="20201112 12:42:35.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:35.160" endtime="20201112 12:42:35.182"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.155" endtime="20201112 12:42:35.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.146" endtime="20201112 12:42:35.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.653" endtime="20201112 12:42:35.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.445" endtime="20201112 12:42:35.187"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:35.199" endtime="20201112 12:42:35.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.194" endtime="20201112 12:42:35.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.191" endtime="20201112 12:42:35.224"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:24.304" endtime="20201112 12:42:35.225" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:35.247" endtime="20201112 12:42:35.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.243" endtime="20201112 12:42:35.271"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.307" endtime="20201112 12:42:35.327"></status>
</kw>
<msg timestamp="20201112 12:42:35.328" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:35.303" endtime="20201112 12:42:35.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.335" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:35.330" endtime="20201112 12:42:35.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.342" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:35.337" endtime="20201112 12:42:35.343"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:35.296" endtime="20201112 12:42:35.344"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:35.289" endtime="20201112 12:42:35.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.286" endtime="20201112 12:42:35.347"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:35.357" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:35.356" endtime="20201112 12:42:35.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.349" endtime="20201112 12:42:35.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.284" endtime="20201112 12:42:35.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.282" endtime="20201112 12:42:35.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.361" endtime="20201112 12:42:35.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.278" endtime="20201112 12:42:35.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.273" endtime="20201112 12:42:35.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.239" endtime="20201112 12:42:35.369"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.394" endtime="20201112 12:42:35.420"></status>
</kw>
<msg timestamp="20201112 12:42:35.421" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:35.391" endtime="20201112 12:42:35.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.429" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:35.424" endtime="20201112 12:42:35.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.431" endtime="20201112 12:42:35.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.383" endtime="20201112 12:42:35.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.377" endtime="20201112 12:42:35.438"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.443" endtime="20201112 12:42:35.448"></status>
</kw>
<msg timestamp="20201112 12:42:35.449" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:42:35.440" endtime="20201112 12:42:35.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.460" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:35.458" endtime="20201112 12:42:35.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.465" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:35.463" endtime="20201112 12:42:35.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.451" endtime="20201112 12:42:35.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.478" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:35.475" endtime="20201112 12:42:35.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.483" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:35.480" endtime="20201112 12:42:35.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.469" endtime="20201112 12:42:35.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.503" endtime="20201112 12:42:35.887"></status>
</kw>
<msg timestamp="20201112 12:42:35.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.141481097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.141484819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:35.499" endtime="20201112 12:42:35.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.141481097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.141484819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:35.897" endtime="20201112 12:42:35.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.918" endtime="20201112 12:42:35.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.491" endtime="20201112 12:42:35.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.486" endtime="20201112 12:42:35.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:35.937" level="INFO">${RESULT} = [{'time': 0.141484819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7220000000115494e-06, 'source_diff': 3.7220000000115494e-06}, {'time': 0.141501958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:35.927" endtime="20201112 12:42:35.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:35.975" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:35.939" endtime="20201112 12:42:35.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.987" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 12:42:35.984" endtime="20201112 12:42:35.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.994" level="INFO">VALUE: [3.7220000000115494e-06, 3.7220000000115494e-06, 3.8049999999956174e-06, 3.7639999999894425e-06, 3.778000000009829e-06, 3.723000000011023e-06, 3.778000000009829e-06, 3.8049999999956174e-06, 3.7220000000115494e-06, 3.7770000000103554e-06, 3.693999999998532e-06, 3.737000000003654e-06, 3.778000000009829e-06, 3.7220000000115494e-06, 3.7769999999826e-06, 3.778000000009829e-06, 3.7360000000041804e-06, 3.7220000000115494e-06, 3.778000000009829e-06, 3.7770000000103554e-06, 3.7229999999832675e-06, 3.7220000000115494e-06, 3.7499999999968114e-06, 3.7639999999894425e-06, 3.7910000000029864e-06, 3.7080000000189184e-06, 3.7639999999894425e-06, 3.7639999999894425e-06, 3.7779999999820735e-06, 3.778000000009829e-06, 3.7220000000115494e-06, 3.7080000000189184e-06, 3.666999999984988e-06, 3.7360000000041804e-06, 3.8049999999956174e-06, 3.707999999991163e-06, 3.778000000009829e-06, 3.79200000000246e-06, 3.723000000011023e-06, 3.7639999999894425e-06, 3.778000000009829e-06, 3.737000000003654e-06, 3.7220000000115494e-06, 3.778000000009829e-06, 3.7080000000189184e-06, 3.8049999999956174e-06, 3.79200000000246e-06, 3.7220000000115494e-06, 3.7220000000115494e-06, 3.7220000000115494e-06]</msg>
<status status="PASS" starttime="20201112 12:42:35.990" endtime="20201112 12:42:35.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.977" endtime="20201112 12:42:35.996"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.003" endtime="20201112 12:42:36.006"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:36.012" endtime="20201112 12:42:36.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.007" endtime="20201112 12:42:36.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.998" endtime="20201112 12:42:36.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.371" endtime="20201112 12:42:36.039"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:35.233" endtime="20201112 12:42:36.042" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:36.063" endtime="20201112 12:42:36.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.059" endtime="20201112 12:42:36.087"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.123" endtime="20201112 12:42:36.143"></status>
</kw>
<msg timestamp="20201112 12:42:36.144" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.119" endtime="20201112 12:42:36.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.151" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.146" endtime="20201112 12:42:36.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.158" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:36.153" endtime="20201112 12:42:36.159"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:36.112" endtime="20201112 12:42:36.161"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:36.105" endtime="20201112 12:42:36.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.102" endtime="20201112 12:42:36.163"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:36.172" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:36.170" endtime="20201112 12:42:36.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.165" endtime="20201112 12:42:36.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.100" endtime="20201112 12:42:36.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.098" endtime="20201112 12:42:36.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.175" endtime="20201112 12:42:36.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.094" endtime="20201112 12:42:36.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.089" endtime="20201112 12:42:36.182"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.056" endtime="20201112 12:42:36.183"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.212" endtime="20201112 12:42:36.280"></status>
</kw>
<msg timestamp="20201112 12:42:36.281" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.208" endtime="20201112 12:42:36.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.288" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.284" endtime="20201112 12:42:36.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.290" endtime="20201112 12:42:36.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.200" endtime="20201112 12:42:36.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.191" endtime="20201112 12:42:36.298"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.302" endtime="20201112 12:42:36.307"></status>
</kw>
<msg timestamp="20201112 12:42:36.308" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:42:36.299" endtime="20201112 12:42:36.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.319" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:36.317" endtime="20201112 12:42:36.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.324" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:36.322" endtime="20201112 12:42:36.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.310" endtime="20201112 12:42:36.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.337" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:36.334" endtime="20201112 12:42:36.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.342" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:36.339" endtime="20201112 12:42:36.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.328" endtime="20201112 12:42:36.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.362" endtime="20201112 12:42:36.747"></status>
</kw>
<msg timestamp="20201112 12:42:36.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.142935625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.142966569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:36.358" endtime="20201112 12:42:36.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.142935625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.142966569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:36.757" endtime="20201112 12:42:36.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.777" endtime="20201112 12:42:36.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.351" endtime="20201112 12:42:36.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.345" endtime="20201112 12:42:36.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:36.795" level="INFO">${RESULT} = [{'time': 0.142966569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.094399999997721e-05, 'source_diff': 3.094399999997721e-05}, {'time': 0.143839792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:36.786" endtime="20201112 12:42:36.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:36.828" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:36.798" endtime="20201112 12:42:36.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.841" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 12:42:36.839" endtime="20201112 12:42:36.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.848" level="INFO">VALUE: [3.094399999997721e-05, 3.095899999999707e-05, 3.0916999999991424e-05, 3.097199999999023e-05, 3.090299999999879e-05, 3.090299999999879e-05, 3.08610000000209e-05, 3.09579999999976e-05, 3.091700000001918e-05, 3.090199999999932e-05, 3.090299999999879e-05, 3.0916000000019705e-05, 3.0986000000010616e-05, 3.0916999999991424e-05, 3.0916999999991424e-05, 3.088900000000616e-05, 3.088800000000669e-05, 3.08610000000209e-05, 3.0986000000010616e-05, 3.098700000001009e-05, 3.094500000000444e-05, 3.09579999999976e-05, 3.0916000000019705e-05, 3.0916999999991424e-05, 3.090299999999879e-05, 3.09579999999976e-05, 3.093100000001181e-05, 3.0916999999991424e-05, 3.088900000000616e-05, 3.0972000000017985e-05, 3.087500000001353e-05, 3.092999999998458e-05, 3.095900000002483e-05, 3.094500000000444e-05, 3.097199999999023e-05, 3.090299999999879e-05, 3.091599999999195e-05, 3.0930999999984055e-05, 3.090199999999932e-05, 3.090299999999879e-05, 3.09579999999976e-05, 3.0860999999993144e-05, 3.0916999999991424e-05, 3.0958000000025354e-05, 3.0930999999984055e-05, 6.202699999999228e-05, 3.094500000000444e-05, 3.088900000000616e-05, 3.101399999999588e-05, 3.094400000000497e-05]</msg>
<status status="PASS" starttime="20201112 12:42:36.844" endtime="20201112 12:42:36.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.831" endtime="20201112 12:42:36.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.858" endtime="20201112 12:42:36.861"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:36.867" endtime="20201112 12:42:36.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.862" endtime="20201112 12:42:36.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.853" endtime="20201112 12:42:36.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.186" endtime="20201112 12:42:36.894"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:36.049" endtime="20201112 12:42:36.897" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:36.918" endtime="20201112 12:42:36.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.914" endtime="20201112 12:42:36.942"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.978" endtime="20201112 12:42:36.997"></status>
</kw>
<msg timestamp="20201112 12:42:36.999" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.974" endtime="20201112 12:42:36.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.006" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:37.001" endtime="20201112 12:42:37.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.013" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:37.008" endtime="20201112 12:42:37.013"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:36.966" endtime="20201112 12:42:37.015"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:36.960" endtime="20201112 12:42:37.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.957" endtime="20201112 12:42:37.018"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:37.026" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:37.025" endtime="20201112 12:42:37.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.020" endtime="20201112 12:42:37.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.955" endtime="20201112 12:42:37.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.953" endtime="20201112 12:42:37.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.030" endtime="20201112 12:42:37.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.949" endtime="20201112 12:42:37.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.944" endtime="20201112 12:42:37.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.911" endtime="20201112 12:42:37.038"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.066" endtime="20201112 12:42:37.249"></status>
</kw>
<msg timestamp="20201112 12:42:37.250" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:37.062" endtime="20201112 12:42:37.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.257" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:37.253" endtime="20201112 12:42:37.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.259" endtime="20201112 12:42:37.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.052" endtime="20201112 12:42:37.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.046" endtime="20201112 12:42:37.267"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.272" endtime="20201112 12:42:37.277"></status>
</kw>
<msg timestamp="20201112 12:42:37.278" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:42:37.269" endtime="20201112 12:42:37.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.289" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:37.286" endtime="20201112 12:42:37.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.293" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:37.291" endtime="20201112 12:42:37.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.280" endtime="20201112 12:42:37.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.306" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:37.304" endtime="20201112 12:42:37.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.311" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:37.309" endtime="20201112 12:42:37.312"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.297" endtime="20201112 12:42:37.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.332" endtime="20201112 12:42:37.712"></status>
</kw>
<msg timestamp="20201112 12:42:37.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143566125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143625472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:37.328" endtime="20201112 12:42:37.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143566125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143625472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:37.722" endtime="20201112 12:42:37.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.741" endtime="20201112 12:42:37.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.320" endtime="20201112 12:42:37.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.315" endtime="20201112 12:42:37.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:37.760" level="INFO">${RESULT} = [{'time': 0.143625472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.934700000001514e-05, 'source_diff': 5.934700000001514e-05}, {'time': 0.14687275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:42:37.750" endtime="20201112 12:42:37.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:37.794" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:37.763" endtime="20201112 12:42:37.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.806" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 12:42:37.804" endtime="20201112 12:42:37.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.812" level="INFO">VALUE: [5.934700000001514e-05, 5.877800000000932e-05, 5.876400000001669e-05, 5.8763999999988936e-05, 5.8805999999994585e-05, 5.876400000001669e-05, 5.880600000002234e-05, 5.8736000000003674e-05, 5.8792000000001954e-05, 5.8805999999994585e-05, 5.8749999999996305e-05, 5.876400000001669e-05, 5.882000000001497e-05, 5.880499999999511e-05, 5.88190000000155e-05, 5.88190000000155e-05, 5.877700000000985e-05, 5.8763999999988936e-05, 5.873599999997592e-05, 5.880499999999511e-05, 5.8749999999996305e-05, 5.870899999999013e-05, 5.8848000000000233e-05, 5.88190000000155e-05, 5.880499999999511e-05, 5.879100000000248e-05, 5.880499999999511e-05, 5.873699999997539e-05, 5.876400000001669e-05, 5.879100000000248e-05, 5.884700000000076e-05, 5.8805999999994585e-05, 5.88340000000076e-05, 5.8749999999996305e-05, 5.877799999998157e-05, 5.876300000001722e-05, 5.881899999998774e-05, 5.880600000002234e-05, 5.887500000001378e-05, 5.88340000000076e-05, 5.887500000001378e-05, 5.881899999998774e-05, 5.8763999999988936e-05, 5.8749999999996305e-05, 5.881899999998774e-05, 5.8736000000003674e-05, 5.882000000001497e-05, 5.8749999999996305e-05, 5.8861000000021146e-05, 5.873599999994816e-05]</msg>
<status status="PASS" starttime="20201112 12:42:37.809" endtime="20201112 12:42:37.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.796" endtime="20201112 12:42:37.815"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.822" endtime="20201112 12:42:37.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:37.831" endtime="20201112 12:42:37.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.826" endtime="20201112 12:42:37.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.817" endtime="20201112 12:42:37.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.041" endtime="20201112 12:42:37.859"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:36.904" endtime="20201112 12:42:37.862" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:37.883" endtime="20201112 12:42:37.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.879" endtime="20201112 12:42:37.908"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.943" endtime="20201112 12:42:37.963"></status>
</kw>
<msg timestamp="20201112 12:42:37.964" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:37.940" endtime="20201112 12:42:37.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.971" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:37.967" endtime="20201112 12:42:37.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.978" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:37.974" endtime="20201112 12:42:37.979"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:37.932" endtime="20201112 12:42:37.981"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:37.925" endtime="20201112 12:42:37.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.922" endtime="20201112 12:42:37.984"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:37.992" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:37.990" endtime="20201112 12:42:37.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.986" endtime="20201112 12:42:37.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.920" endtime="20201112 12:42:37.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.918" endtime="20201112 12:42:37.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.996" endtime="20201112 12:42:38.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.914" endtime="20201112 12:42:38.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.909" endtime="20201112 12:42:38.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.876" endtime="20201112 12:42:38.004"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.032" endtime="20201112 12:42:38.057"></status>
</kw>
<msg timestamp="20201112 12:42:38.058" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.026" endtime="20201112 12:42:38.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.065" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.060" endtime="20201112 12:42:38.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.067" endtime="20201112 12:42:38.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.018" endtime="20201112 12:42:38.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.012" endtime="20201112 12:42:38.075"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.079" endtime="20201112 12:42:38.085"></status>
</kw>
<msg timestamp="20201112 12:42:38.086" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:42:38.076" endtime="20201112 12:42:38.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.096" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:38.094" endtime="20201112 12:42:38.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.101" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:38.099" endtime="20201112 12:42:38.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.087" endtime="20201112 12:42:38.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.114" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:38.111" endtime="20201112 12:42:38.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.118" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:38.116" endtime="20201112 12:42:38.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.105" endtime="20201112 12:42:38.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.139" endtime="20201112 12:42:38.526"></status>
</kw>
<msg timestamp="20201112 12:42:38.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.142323583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.142324444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:38.135" endtime="20201112 12:42:38.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.142323583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.142324444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:38.536" endtime="20201112 12:42:38.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.556" endtime="20201112 12:42:38.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.127" endtime="20201112 12:42:38.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.122" endtime="20201112 12:42:38.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:38.575" level="INFO">${RESULT} = [{'time': 0.142324444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.609999999908968e-07, 'source_diff': 8.609999999908968e-07}, {'time': 0.142334264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:38.566" endtime="20201112 12:42:38.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:38.610" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:38.578" endtime="20201112 12:42:38.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.622" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 12:42:38.620" endtime="20201112 12:42:38.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.628" level="INFO">VALUE: [8.609999999908968e-07, 8.469999999982658e-07, 8.609999999908968e-07, 8.749999999835278e-07, 8.749999999835278e-07, 8.609999999908968e-07, 8.610000000186524e-07, 8.330000000056348e-07, 8.619999999903705e-07, 8.609999999908968e-07, 8.619999999903705e-07, 8.609999999908968e-07, 8.890000000039144e-07, 8.750000000112834e-07, 8.609999999908968e-07, 8.619999999903705e-07, 8.610000000186524e-07, 8.750000000112834e-07, 8.609999999908968e-07, 8.749999999835278e-07, 9.029999999965455e-07, 9.17000000016932e-07, 8.479999999977395e-07, 8.609999999908968e-07, 8.609999999908968e-07, 8.469999999982658e-07, 8.469999999982658e-07, 7.919999999994598e-07, 8.749999999835278e-07, 9.17000000016932e-07, 8.609999999908968e-07, 8.469999999982658e-07, 8.610000000186524e-07, 8.610000000186524e-07, 8.609999999908968e-07, 8.750000000112834e-07, 8.610000000186524e-07, 8.610000000186524e-07, 8.890000000039144e-07, 7.909999999999862e-07, 8.609999999908968e-07, 8.749999999835278e-07, 8.609999999908968e-07, 8.469999999982658e-07, 8.609999999908968e-07, 8.62000000018126e-07, 8.750000000112834e-07, 8.610000000186524e-07, 8.749999999835278e-07, 8.610000000186524e-07]</msg>
<status status="PASS" starttime="20201112 12:42:38.625" endtime="20201112 12:42:38.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.612" endtime="20201112 12:42:38.631"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.638" endtime="20201112 12:42:38.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:38.647" endtime="20201112 12:42:38.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.642" endtime="20201112 12:42:38.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.633" endtime="20201112 12:42:38.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.007" endtime="20201112 12:42:38.673"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:37.869" endtime="20201112 12:42:38.676" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:38.698" endtime="20201112 12:42:38.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.694" endtime="20201112 12:42:38.724"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.759" endtime="20201112 12:42:38.778"></status>
</kw>
<msg timestamp="20201112 12:42:38.779" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.755" endtime="20201112 12:42:38.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.786" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.782" endtime="20201112 12:42:38.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.794" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:38.789" endtime="20201112 12:42:38.795"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:38.748" endtime="20201112 12:42:38.797"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:38.741" endtime="20201112 12:42:38.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.738" endtime="20201112 12:42:38.800"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:38.809" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:38.807" endtime="20201112 12:42:38.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.802" endtime="20201112 12:42:38.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.736" endtime="20201112 12:42:38.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.734" endtime="20201112 12:42:38.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.813" endtime="20201112 12:42:38.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.730" endtime="20201112 12:42:38.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.725" endtime="20201112 12:42:38.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.691" endtime="20201112 12:42:38.822"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.847" endtime="20201112 12:42:38.916"></status>
</kw>
<msg timestamp="20201112 12:42:38.918" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.844" endtime="20201112 12:42:38.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.924" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.920" endtime="20201112 12:42:38.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.927" endtime="20201112 12:42:38.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.836" endtime="20201112 12:42:38.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.829" endtime="20201112 12:42:38.934"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.939" endtime="20201112 12:42:38.944"></status>
</kw>
<msg timestamp="20201112 12:42:38.945" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:42:38.936" endtime="20201112 12:42:38.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.958" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:38.953" endtime="20201112 12:42:38.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.963" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:38.960" endtime="20201112 12:42:38.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.947" endtime="20201112 12:42:38.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.975" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:38.973" endtime="20201112 12:42:38.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.980" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:38.978" endtime="20201112 12:42:38.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.967" endtime="20201112 12:42:38.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.001" endtime="20201112 12:42:39.387"></status>
</kw>
<msg timestamp="20201112 12:42:39.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.142730792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.142741819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:38.997" endtime="20201112 12:42:39.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.142730792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.142741819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:39.397" endtime="20201112 12:42:39.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.417" endtime="20201112 12:42:39.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.989" endtime="20201112 12:42:39.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.984" endtime="20201112 12:42:39.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:39.436" level="INFO">${RESULT} = [{'time': 0.142741819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.102699999999679e-05, 'source_diff': 1.102699999999679e-05}, {'time': 0.1436145, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:39.426" endtime="20201112 12:42:39.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:39.469" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:39.438" endtime="20201112 12:42:39.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.481" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 12:42:39.479" endtime="20201112 12:42:39.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.487" level="INFO">VALUE: [1.102699999999679e-05, 1.105600000000928e-05, 1.1014000000003632e-05, 1.1014000000003632e-05, 1.102699999999679e-05, 1.1027999999996263e-05, 1.102699999999679e-05, 1.0999999999983245e-05, 1.1055000000009807e-05, 1.1041000000017176e-05, 1.1027999999996263e-05, 1.1027999999996263e-05, 1.1028000000024019e-05, 1.1027999999996263e-05, 1.104200000001665e-05, 1.1027999999996263e-05, 1.102699999999679e-05, 1.1110999999980331e-05, 1.1041999999988894e-05, 1.1000000000011001e-05, 1.1041999999988894e-05, 1.1027999999996263e-05, 1.1028000000024019e-05, 1.102699999999679e-05, 1.1069000000002438e-05, 1.1041999999988894e-05, 1.1027999999996263e-05, 1.1027999999996263e-05, 1.1027999999996263e-05, 1.1027999999996263e-05, 1.1027999999996263e-05, 1.1027999999996263e-05, 1.1041999999988894e-05, 1.102699999999679e-05, 1.1014000000003632e-05, 1.1082999999995069e-05, 1.1027999999996263e-05, 1.1027999999996263e-05, 1.0985999999990614e-05, 1.104200000001665e-05, 1.1041999999988894e-05, 1.1055000000009807e-05, 1.1082999999995069e-05, 1.102699999999679e-05, 1.109800000001493e-05, 1.1027999999996263e-05, 1.1027000000024545e-05, 1.1027999999996263e-05, 1.1027999999996263e-05, 1.1014000000003632e-05]</msg>
<status status="PASS" starttime="20201112 12:42:39.484" endtime="20201112 12:42:39.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.471" endtime="20201112 12:42:39.489"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.496" endtime="20201112 12:42:39.499"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:39.505" endtime="20201112 12:42:39.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.501" endtime="20201112 12:42:39.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.491" endtime="20201112 12:42:39.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.824" endtime="20201112 12:42:39.532"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:38.683" endtime="20201112 12:42:39.535" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:39.557" endtime="20201112 12:42:39.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.553" endtime="20201112 12:42:39.581"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.618" endtime="20201112 12:42:39.638"></status>
</kw>
<msg timestamp="20201112 12:42:39.639" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:39.615" endtime="20201112 12:42:39.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.646" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:39.642" endtime="20201112 12:42:39.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.654" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:39.649" endtime="20201112 12:42:39.655"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:39.607" endtime="20201112 12:42:39.657"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:39.600" endtime="20201112 12:42:39.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.597" endtime="20201112 12:42:39.659"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:39.667" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:39.666" endtime="20201112 12:42:39.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.661" endtime="20201112 12:42:39.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.595" endtime="20201112 12:42:39.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.592" endtime="20201112 12:42:39.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.671" endtime="20201112 12:42:39.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.587" endtime="20201112 12:42:39.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.583" endtime="20201112 12:42:39.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.550" endtime="20201112 12:42:39.679"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.705" endtime="20201112 12:42:39.889"></status>
</kw>
<msg timestamp="20201112 12:42:39.891" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:39.701" endtime="20201112 12:42:39.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.897" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:39.893" endtime="20201112 12:42:39.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.900" endtime="20201112 12:42:39.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.693" endtime="20201112 12:42:39.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.687" endtime="20201112 12:42:39.907"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.912" endtime="20201112 12:42:39.917"></status>
</kw>
<msg timestamp="20201112 12:42:39.918" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:42:39.909" endtime="20201112 12:42:39.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.929" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:39.926" endtime="20201112 12:42:39.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.934" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:39.932" endtime="20201112 12:42:39.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.920" endtime="20201112 12:42:39.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.947" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:39.945" endtime="20201112 12:42:39.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.952" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:39.950" endtime="20201112 12:42:39.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.938" endtime="20201112 12:42:39.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.974" endtime="20201112 12:42:40.308"></status>
</kw>
<msg timestamp="20201112 12:42:40.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.144696708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.144718139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:39.971" endtime="20201112 12:42:40.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.144696708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.144718139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:40.313" endtime="20201112 12:42:40.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.321" endtime="20201112 12:42:40.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.961" endtime="20201112 12:42:40.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.956" endtime="20201112 12:42:40.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:40.330" level="INFO">${RESULT} = [{'time': 0.144718139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.143099999998843e-05, 'source_diff': 2.143099999998843e-05}, {'time': 0.147927542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:40.325" endtime="20201112 12:42:40.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:40.344" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:40.331" endtime="20201112 12:42:40.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.350" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 12:42:40.349" endtime="20201112 12:42:40.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.353" level="INFO">VALUE: [2.143099999998843e-05, 2.140300000000317e-05, 2.1429999999988958e-05, 2.1429999999988958e-05, 2.145900000000145e-05, 2.1431000000016187e-05, 2.1444000000009344e-05, 2.144399999998159e-05, 2.144399999998159e-05, 2.1444000000009344e-05, 2.1445000000008818e-05, 2.145900000000145e-05, 2.1458000000001975e-05, 2.1471999999994607e-05, 2.140300000000317e-05, 2.145900000000145e-05, 2.1431000000016187e-05, 2.143099999998843e-05, 2.1471999999994607e-05, 2.143099999998843e-05, 2.1458000000001975e-05, 2.1415999999996327e-05, 2.1415999999996327e-05, 2.145799999997422e-05, 2.1458000000001975e-05, 2.1415999999996327e-05, 2.144399999998159e-05, 2.143099999998843e-05, 2.1444999999981063e-05, 2.144399999998159e-05, 2.1444999999981063e-05, 2.145900000000145e-05, 2.144399999998159e-05, 2.145799999997422e-05, 2.145900000000145e-05, 2.145800000002973e-05, 2.1445000000008818e-05, 2.1444999999953307e-05, 2.1429999999988958e-05, 2.1500000000007624e-05, 2.1472000000022362e-05, 2.1415999999996327e-05, 2.145799999997422e-05, 2.1444999999953307e-05, 2.1415999999996327e-05, 2.144399999998159e-05, 2.145799999997422e-05, 2.1416999999968045e-05, 2.143000000004447e-05, 2.145800000002973e-05]</msg>
<status status="PASS" starttime="20201112 12:42:40.351" endtime="20201112 12:42:40.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.345" endtime="20201112 12:42:40.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.357" endtime="20201112 12:42:40.358"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:40.361" endtime="20201112 12:42:40.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.359" endtime="20201112 12:42:40.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.355" endtime="20201112 12:42:40.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.682" endtime="20201112 12:42:40.383"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:39.542" endtime="20201112 12:42:40.384" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:42:10.751" endtime="20201112 12:42:40.395"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.568" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:42:40.583" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:42:42.541" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:42:40.564" endtime="20201112 12:42:42.543"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.548" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:42:42.545" endtime="20201112 12:42:42.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.561" endtime="20201112 12:42:42.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:42.555" endtime="20201112 12:42:42.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.552" endtime="20201112 12:42:42.893"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.923" endtime="20201112 12:42:42.947"></status>
</kw>
<msg timestamp="20201112 12:42:42.948" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.920" endtime="20201112 12:42:42.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.955" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.951" endtime="20201112 12:42:42.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.963" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:42.958" endtime="20201112 12:42:42.964"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:42.914" endtime="20201112 12:42:42.966"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:42.908" endtime="20201112 12:42:42.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.905" endtime="20201112 12:42:42.969"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:42.977" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:42.976" endtime="20201112 12:42:42.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.971" endtime="20201112 12:42:42.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.903" endtime="20201112 12:42:42.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.901" endtime="20201112 12:42:42.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.981" endtime="20201112 12:42:42.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.898" endtime="20201112 12:42:42.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.988" endtime="20201112 12:42:42.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.894" endtime="20201112 12:42:42.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.557" endtime="20201112 12:42:42.995"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:43.013" endtime="20201112 12:42:43.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.006" endtime="20201112 12:42:43.037"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.073" endtime="20201112 12:42:43.093"></status>
</kw>
<msg timestamp="20201112 12:42:43.094" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:43.069" endtime="20201112 12:42:43.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.101" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:43.096" endtime="20201112 12:42:43.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.108" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:43.103" endtime="20201112 12:42:43.108"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:43.062" endtime="20201112 12:42:43.110"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:43.054" endtime="20201112 12:42:43.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.052" endtime="20201112 12:42:43.113"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:43.122" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:43.121" endtime="20201112 12:42:43.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.115" endtime="20201112 12:42:43.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.050" endtime="20201112 12:42:43.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.048" endtime="20201112 12:42:43.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.126" endtime="20201112 12:42:43.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.043" endtime="20201112 12:42:43.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.039" endtime="20201112 12:42:43.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.003" endtime="20201112 12:42:43.133"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.161" endtime="20201112 12:42:43.180"></status>
</kw>
<msg timestamp="20201112 12:42:43.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:43.158" endtime="20201112 12:42:43.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:43.183" endtime="20201112 12:42:43.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.190" endtime="20201112 12:42:43.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.150" endtime="20201112 12:42:43.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.144" endtime="20201112 12:42:43.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.218" endtime="20201112 12:42:43.519"></status>
</kw>
<msg timestamp="20201112 12:42:43.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.141726222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.141728708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:43.214" endtime="20201112 12:42:43.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.141726222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.141728708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:43.524" endtime="20201112 12:42:43.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.532" endtime="20201112 12:42:43.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.204" endtime="20201112 12:42:43.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.199" endtime="20201112 12:42:43.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:43.541" level="INFO">${RESULT} = [{'time': 0.141728708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4859999999959914e-06, 'source_diff': 2.4859999999959914e-06}, {'time': 0.141743653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:43.536" endtime="20201112 12:42:43.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:43.555" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:43.542" endtime="20201112 12:42:43.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.561" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 12:42:43.559" endtime="20201112 12:42:43.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.563" level="INFO">VALUE: [2.4859999999959914e-06, 2.4309999999971854e-06, 2.457999999982974e-06, 2.9579999999973516e-06, 3.0000000000030003e-06, 2.9589999999968253e-06, 2.4309999999971854e-06, 3.443999999991343e-06, 3.4720000000043605e-06, 2.4439999999903428e-06, 2.9310000000115632e-06, 2.4580000000107294e-06, 2.9719999999899827e-06, 2.943999999976965e-06, 2.9579999999973516e-06, 3.4859999999969915e-06, 2.4030000000119234e-06, 2.9309999999838077e-06, 2.4580000000107294e-06, 2.4309999999971854e-06, 2.9580000000251072e-06, 2.4580000000107294e-06, 2.457999999982974e-06, 2.9589999999968253e-06, 2.4299999999977118e-06, 2.457999999982974e-06, 2.445000000017572e-06, 2.9589999999968253e-06, 2.445000000017572e-06, 2.4580000000107294e-06, 2.4449999999898164e-06, 2.9440000000047206e-06, 2.9860000000103692e-06, 2.445000000017572e-06, 2.9440000000047206e-06, 2.4440000000180984e-06, 2.4589999999824474e-06, 2.9579999999973516e-06, 2.9860000000103692e-06, 2.5130000000095354e-06, 2.9310000000115632e-06, 2.457999999982974e-06, 2.9300000000120896e-06, 2.9589999999968253e-06, 2.4449999999898164e-06, 2.445000000017572e-06, 2.4440000000180984e-06, 2.9440000000047206e-06, 2.9580000000251072e-06, 3.4720000000043605e-06]</msg>
<status status="PASS" starttime="20201112 12:42:43.562" endtime="20201112 12:42:43.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.556" endtime="20201112 12:42:43.565"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.568" endtime="20201112 12:42:43.569"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:43.572" endtime="20201112 12:42:43.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.570" endtime="20201112 12:42:43.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.566" endtime="20201112 12:42:43.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.139" endtime="20201112 12:42:43.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.137" endtime="20201112 12:42:43.594"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.605" endtime="20201112 12:42:43.620"></status>
</kw>
<msg timestamp="20201112 12:42:43.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:43.603" endtime="20201112 12:42:43.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:43.622" endtime="20201112 12:42:43.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.625" endtime="20201112 12:42:43.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.600" endtime="20201112 12:42:43.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.597" endtime="20201112 12:42:43.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.636" endtime="20201112 12:42:43.922"></status>
</kw>
<msg timestamp="20201112 12:42:43.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025377403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025381375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:43.635" endtime="20201112 12:42:43.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025377403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025381375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:43.926" endtime="20201112 12:42:43.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.935" endtime="20201112 12:42:43.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.631" endtime="20201112 12:42:43.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.629" endtime="20201112 12:42:43.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:43.944" level="INFO">${RESULT} = [{'time': 0.025381375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.972000000001391e-06, 'source_diff': 3.972000000001391e-06}, {'time': 0.025396694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:43.939" endtime="20201112 12:42:43.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:43.958" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:43.945" endtime="20201112 12:42:43.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.964" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 12:42:43.962" endtime="20201112 12:42:43.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.966" level="INFO">VALUE: [3.972000000001391e-06, 3.4440000000017512e-06, 3.931000000002155e-06, 3.4440000000017512e-06, 3.4590000000007948e-06, 3.916999999999116e-06, 3.401999999999572e-06, 3.958000000001821e-06, 3.4590000000007948e-06, 3.4589999999973253e-06, 3.972000000001391e-06, 3.4440000000017512e-06, 4.444000000002751e-06, 3.472000000000891e-06, 4.430999999999186e-06, 3.943999999998782e-06, 3.4440000000017512e-06, 3.943999999998782e-06, 3.945000000001725e-06, 4.014000000000101e-06, 4.430999999999186e-06, 3.4589999999973253e-06, 3.472000000000891e-06, 3.4439999999982818e-06, 3.458000000001321e-06, 3.4589999999973253e-06, 3.957999999998352e-06, 4.458000000002321e-06, 4.443999999999282e-06, 3.4309999999981855e-06, 3.931000000002155e-06, 3.943999999998782e-06, 3.4590000000007948e-06, 3.4440000000017512e-06, 3.4579999999978517e-06, 3.4440000000017512e-06, 3.9309999999986855e-06, 3.4440000000017512e-06, 3.945000000001725e-06, 3.458000000001321e-06, 3.943999999998782e-06, 3.472000000000891e-06, 3.9449999999982555e-06, 3.417000000002085e-06, 3.415999999999142e-06, 3.958999999997825e-06, 3.4449999999977554e-06, 3.472000000000891e-06, 3.972000000001391e-06, 3.9449999999982555e-06]</msg>
<status status="PASS" starttime="20201112 12:42:43.965" endtime="20201112 12:42:43.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.959" endtime="20201112 12:42:43.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.972" endtime="20201112 12:42:43.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:43.976" endtime="20201112 12:42:43.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.974" endtime="20201112 12:42:43.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.969" endtime="20201112 12:42:43.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.595" endtime="20201112 12:42:43.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.594" endtime="20201112 12:42:43.998"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.009" endtime="20201112 12:42:44.024"></status>
</kw>
<msg timestamp="20201112 12:42:44.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.008" endtime="20201112 12:42:44.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.025" endtime="20201112 12:42:44.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.029" endtime="20201112 12:42:44.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.004" endtime="20201112 12:42:44.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.002" endtime="20201112 12:42:44.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.040" endtime="20201112 12:42:44.400"></status>
</kw>
<msg timestamp="20201112 12:42:44.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025571194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025575694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:44.038" endtime="20201112 12:42:44.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025571194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025575694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:44.411" endtime="20201112 12:42:44.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.430" endtime="20201112 12:42:44.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.035" endtime="20201112 12:42:44.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.033" endtime="20201112 12:42:44.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:44.449" level="INFO">${RESULT} = [{'time': 0.025575694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.025591875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:44.439" endtime="20201112 12:42:44.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:44.481" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:44.451" endtime="20201112 12:42:44.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.493" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 12:42:44.491" endtime="20201112 12:42:44.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.499" level="INFO">VALUE: [4.500000000001031e-06, 4.943999999999782e-06, 4.902999999997076e-06, 4.443999999999282e-06, 4.473000000001365e-06, 4.443999999999282e-06, 4.943999999999782e-06, 4.459000000001795e-06, 4.931000000003155e-06, 4.443999999999282e-06, 4.416000000000142e-06, 4.9449999999992555e-06, 5.457999999999852e-06, 4.4449999999987555e-06, 4.9449999999992555e-06, 4.458999999998325e-06, 4.889000000000976e-06, 4.457999999998852e-06, 4.443999999999282e-06, 4.444000000002751e-06, 4.958000000002821e-06, 4.458000000002321e-06, 4.957999999999352e-06, 4.945000000002725e-06, 4.957999999999352e-06, 5.472000000002891e-06, 4.457999999998852e-06, 4.445000000002225e-06, 4.943999999999782e-06, 4.8749999999979365e-06, 4.957999999999352e-06, 4.957999999999352e-06, 4.930999999999686e-06, 5.471999999999422e-06, 5.444000000000282e-06, 4.943999999999782e-06, 4.972000000002391e-06, 4.4449999999987555e-06, 4.9589999999988255e-06, 5.000000000001531e-06, 4.972000000002391e-06, 4.443999999999282e-06, 4.457999999998852e-06, 4.930000000000212e-06, 4.458999999998325e-06, 4.971999999998922e-06, 4.903000000000546e-06, 4.528000000000171e-06, 5.389000000001476e-06, 4.917000000000116e-06]</msg>
<status status="PASS" starttime="20201112 12:42:44.495" endtime="20201112 12:42:44.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.483" endtime="20201112 12:42:44.502"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.509" endtime="20201112 12:42:44.512"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:44.518" endtime="20201112 12:42:44.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.513" endtime="20201112 12:42:44.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.504" endtime="20201112 12:42:44.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.999" endtime="20201112 12:42:44.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.999" endtime="20201112 12:42:44.545"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.569" endtime="20201112 12:42:44.587"></status>
</kw>
<msg timestamp="20201112 12:42:44.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.565" endtime="20201112 12:42:44.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.591" endtime="20201112 12:42:44.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.597" endtime="20201112 12:42:44.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.558" endtime="20201112 12:42:44.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.552" endtime="20201112 12:42:44.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.622" endtime="20201112 12:42:44.979"></status>
</kw>
<msg timestamp="20201112 12:42:44.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044257931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044263375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:44.619" endtime="20201112 12:42:44.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044257931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044263375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:44.990" endtime="20201112 12:42:45.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.011" endtime="20201112 12:42:45.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.611" endtime="20201112 12:42:45.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.606" endtime="20201112 12:42:45.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:45.030" level="INFO">${RESULT} = [{'time': 0.044263375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.444000000000282e-06, 'source_diff': 5.444000000000282e-06}, {'time': 0.044278806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:45.020" endtime="20201112 12:42:45.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:45.063" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:45.032" endtime="20201112 12:42:45.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.075" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 12:42:45.073" endtime="20201112 12:42:45.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.081" level="INFO">VALUE: [5.444000000000282e-06, 6.444999999993817e-06, 5.415999999994203e-06, 5.9589999999998255e-06, 5.945000000000256e-06, 6.429999999994773e-06, 5.444999999999756e-06, 5.958000000000352e-06, 5.917000000001116e-06, 5.888999999995037e-06, 5.971999999999922e-06, 5.944000000000782e-06, 5.457999999999852e-06, 5.931000000000686e-06, 5.8879999999955634e-06, 5.9589999999998255e-06, 5.4589999999993255e-06, 5.958000000000352e-06, 5.944000000000782e-06, 5.945000000000256e-06, 5.457999999999852e-06, 5.985999999999492e-06, 5.930000000001212e-06, 5.444000000000282e-06, 5.944000000000782e-06, 5.499999999998562e-06, 5.444999999999756e-06, 5.444000000000282e-06, 6.444000000001282e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.944000000000782e-06, 5.4589999999993255e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.944000000000782e-06, 5.944000000000782e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.917000000001116e-06, 5.444000000000282e-06, 5.9589999999998255e-06, 5.957999999993413e-06, 5.945000000000256e-06, 5.944000000000782e-06, 5.444000000000282e-06, 5.929999999994273e-06, 5.458000000006791e-06, 5.931000000000686e-06, 6.444999999993817e-06]</msg>
<status status="PASS" starttime="20201112 12:42:45.078" endtime="20201112 12:42:45.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.065" endtime="20201112 12:42:45.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.091" endtime="20201112 12:42:45.094"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:45.100" endtime="20201112 12:42:45.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.095" endtime="20201112 12:42:45.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.086" endtime="20201112 12:42:45.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.547" endtime="20201112 12:42:45.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.545" endtime="20201112 12:42:45.127"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.151" endtime="20201112 12:42:45.170"></status>
</kw>
<msg timestamp="20201112 12:42:45.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:45.148" endtime="20201112 12:42:45.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:45.173" endtime="20201112 12:42:45.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.180" endtime="20201112 12:42:45.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.140" endtime="20201112 12:42:45.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.134" endtime="20201112 12:42:45.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.205" endtime="20201112 12:42:45.565"></status>
</kw>
<msg timestamp="20201112 12:42:45.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044742653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044749028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:45.201" endtime="20201112 12:42:45.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044742653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044749028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:45.575" endtime="20201112 12:42:45.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.595" endtime="20201112 12:42:45.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.194" endtime="20201112 12:42:45.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.189" endtime="20201112 12:42:45.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:45.614" level="INFO">${RESULT} = [{'time': 0.044749028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.375000000002906e-06, 'source_diff': 6.375000000002906e-06}, {'time': 0.044761111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:45.604" endtime="20201112 12:42:45.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:45.649" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:45.616" endtime="20201112 12:42:45.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.661" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 12:42:45.658" endtime="20201112 12:42:45.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.667" level="INFO">VALUE: [6.375000000002906e-06, 6.444000000001282e-06, 6.917000000002116e-06, 6.931000000001686e-06, 6.930000000002212e-06, 6.445000000000756e-06, 6.459000000000326e-06, 6.458000000000852e-06, 6.459000000000326e-06, 6.443999999994343e-06, 6.416000000002142e-06, 6.472000000000422e-06, 6.9730000000003955e-06, 6.445000000000756e-06, 6.944000000001782e-06, 6.930999999994747e-06, 6.959000000000826e-06, 6.444000000001282e-06, 6.931000000001686e-06, 6.472000000000422e-06, 6.459000000000326e-06, 6.485999999999992e-06, 6.958000000001352e-06, 6.972000000000922e-06, 7.457999999994913e-06, 6.445000000000756e-06, 6.416000000002142e-06, 6.944000000001782e-06, 6.945000000001256e-06, 6.931000000001686e-06, 6.943999999994843e-06, 6.444000000001282e-06, 6.958000000001352e-06, 7.429999999995773e-06, 6.458000000000852e-06, 6.443999999994343e-06, 6.431000000001186e-06, 6.958000000001352e-06, 6.472000000000422e-06, 7.013999999999632e-06, 6.459000000000326e-06, 6.945000000001256e-06, 7.444999999994817e-06, 7.458999999994387e-06, 6.945000000001256e-06, 6.4729999999998955e-06, 6.972000000000922e-06, 6.958000000001352e-06, 6.445000000000756e-06, 6.958000000001352e-06]</msg>
<status status="PASS" starttime="20201112 12:42:45.663" endtime="20201112 12:42:45.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.651" endtime="20201112 12:42:45.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.677" endtime="20201112 12:42:45.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:45.686" endtime="20201112 12:42:45.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.681" endtime="20201112 12:42:45.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.672" endtime="20201112 12:42:45.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.129" endtime="20201112 12:42:45.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.128" endtime="20201112 12:42:45.712"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.737" endtime="20201112 12:42:45.756"></status>
</kw>
<msg timestamp="20201112 12:42:45.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:45.733" endtime="20201112 12:42:45.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:45.759" endtime="20201112 12:42:45.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.766" endtime="20201112 12:42:45.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.725" endtime="20201112 12:42:45.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.719" endtime="20201112 12:42:45.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.791" endtime="20201112 12:42:46.152"></status>
</kw>
<msg timestamp="20201112 12:42:46.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044171875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044179792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:45.788" endtime="20201112 12:42:46.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044171875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044179792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:46.163" endtime="20201112 12:42:46.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.182" endtime="20201112 12:42:46.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.780" endtime="20201112 12:42:46.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.775" endtime="20201112 12:42:46.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:46.201" level="INFO">${RESULT} = [{'time': 0.044179792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.917000000003116e-06, 'source_diff': 7.917000000003116e-06}, {'time': 0.044191708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:46.191" endtime="20201112 12:42:46.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:46.235" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:46.203" endtime="20201112 12:42:46.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.246" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 12:42:46.244" endtime="20201112 12:42:46.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.252" level="INFO">VALUE: [7.917000000003116e-06, 7.861000000004836e-06, 7.958000000002352e-06, 7.944000000002782e-06, 8.459000000002326e-06, 7.459000000001326e-06, 7.431000000002186e-06, 7.945000000002256e-06, 7.958999999994887e-06, 8.445000000002756e-06, 7.943999999995843e-06, 7.945000000002256e-06, 7.458000000001852e-06, 7.445000000001756e-06, 7.930000000003212e-06, 7.888999999997037e-06, 7.944000000002782e-06, 7.473000000000896e-06, 7.985999999994553e-06, 7.943999999995843e-06, 7.915999999996703e-06, 7.388999999996537e-06, 7.957999999995413e-06, 7.402999999996107e-06, 7.86200000000431e-06, 7.958000000002352e-06, 7.944000000002782e-06, 7.458000000001852e-06, 7.944000000002782e-06, 7.945000000002256e-06, 7.957999999995413e-06, 7.916999999996177e-06, 7.930000000003212e-06, 7.943999999995843e-06, 7.444000000002282e-06, 7.958000000002352e-06, 7.443999999995343e-06, 7.445000000001756e-06, 7.443999999995343e-06, 7.943999999995843e-06, 7.945000000002256e-06, 7.444000000002282e-06, 7.444000000002282e-06, 7.458000000001852e-06, 7.957999999995413e-06, 8.471999999995483e-06, 7.430999999995247e-06, 7.943999999995843e-06, 8.458000000002852e-06, 7.471999999994483e-06]</msg>
<status status="PASS" starttime="20201112 12:42:46.249" endtime="20201112 12:42:46.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.237" endtime="20201112 12:42:46.256"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.263" endtime="20201112 12:42:46.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:46.271" endtime="20201112 12:42:46.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.267" endtime="20201112 12:42:46.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.258" endtime="20201112 12:42:46.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.715" endtime="20201112 12:42:46.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.713" endtime="20201112 12:42:46.298"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.323" endtime="20201112 12:42:46.341"></status>
</kw>
<msg timestamp="20201112 12:42:46.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:46.319" endtime="20201112 12:42:46.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:46.344" endtime="20201112 12:42:46.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.351" endtime="20201112 12:42:46.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.311" endtime="20201112 12:42:46.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.305" endtime="20201112 12:42:46.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.376" endtime="20201112 12:42:46.736"></status>
</kw>
<msg timestamp="20201112 12:42:46.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044372792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044381236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:46.372" endtime="20201112 12:42:46.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044372792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044381236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:46.746" endtime="20201112 12:42:46.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.766" endtime="20201112 12:42:46.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.365" endtime="20201112 12:42:46.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.359" endtime="20201112 12:42:46.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:46.785" level="INFO">${RESULT} = [{'time': 0.044381236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.443999999996343e-06, 'source_diff': 8.443999999996343e-06}, {'time': 0.044405153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:46.775" endtime="20201112 12:42:46.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:46.818" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:46.787" endtime="20201112 12:42:46.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.831" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 12:42:46.828" endtime="20201112 12:42:46.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.836" level="INFO">VALUE: [8.443999999996343e-06, 8.445000000002756e-06, 8.973000000002396e-06, 8.943999999996843e-06, 8.458000000002852e-06, 8.945000000003256e-06, 8.444999999995817e-06, 9.444000000004282e-06, 8.458000000002852e-06, 8.985999999995553e-06, 8.944000000003782e-06, 8.889000000004976e-06, 9.443999999997343e-06, 8.473000000001896e-06, 8.458000000002852e-06, 8.944999999996317e-06, 8.459000000002326e-06, 8.958000000003352e-06, 8.972000000002922e-06, 8.457999999995913e-06, 8.958999999995887e-06, 8.459000000002326e-06, 8.944000000003782e-06, 8.958000000003352e-06, 8.945000000003256e-06, 8.957999999996413e-06, 8.958999999995887e-06, 8.473000000001896e-06, 9.457999999996913e-06, 8.444000000003282e-06, 8.444000000003282e-06, 8.958000000003352e-06, 8.944000000003782e-06, 8.945000000003256e-06, 1.3806000000005092e-05, 8.457999999995913e-06, 8.957999999996413e-06, 8.458000000002852e-06, 9.444999999996817e-06, 8.959000000002826e-06, 8.459000000002326e-06, 8.500000000001562e-06, 9.458999999996387e-06, 8.957999999996413e-06, 8.943999999996843e-06, 8.459000000002326e-06, 9.014000000001632e-06, 9.513999999995193e-06, 8.473000000001896e-06, 8.417000000003616e-06]</msg>
<status status="PASS" starttime="20201112 12:42:46.833" endtime="20201112 12:42:46.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.820" endtime="20201112 12:42:46.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.847" endtime="20201112 12:42:46.850"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:46.856" endtime="20201112 12:42:46.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.851" endtime="20201112 12:42:46.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.842" endtime="20201112 12:42:46.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.300" endtime="20201112 12:42:46.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.299" endtime="20201112 12:42:46.883"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.907" endtime="20201112 12:42:46.925"></status>
</kw>
<msg timestamp="20201112 12:42:46.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:46.904" endtime="20201112 12:42:46.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:46.929" endtime="20201112 12:42:46.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.936" endtime="20201112 12:42:46.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.896" endtime="20201112 12:42:46.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.889" endtime="20201112 12:42:46.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.961" endtime="20201112 12:42:47.309"></status>
</kw>
<msg timestamp="20201112 12:42:47.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044920125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044930097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:46.957" endtime="20201112 12:42:47.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044920125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044930097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:47.313" endtime="20201112 12:42:47.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.322" endtime="20201112 12:42:47.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.949" endtime="20201112 12:42:47.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.944" endtime="20201112 12:42:47.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:47.331" level="INFO">${RESULT} = [{'time': 0.044930097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.972000000003922e-06, 'source_diff': 9.972000000003922e-06}, {'time': 0.044947347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:47.326" endtime="20201112 12:42:47.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:47.345" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:47.332" endtime="20201112 12:42:47.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.350" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 12:42:47.349" endtime="20201112 12:42:47.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.354" level="INFO">VALUE: [9.972000000003922e-06, 9.888999999999037e-06, 9.444000000004282e-06, 9.458000000003852e-06, 9.972999999996457e-06, 9.459000000003326e-06, 1.0472000000004422e-05, 9.443999999997343e-06, 9.945000000004256e-06, 9.429999999997773e-06, 9.416000000005142e-06, 1.0014000000002632e-05, 9.957999999997413e-06, 9.444999999996817e-06, 9.444999999996817e-06, 9.444999999996817e-06, 9.957999999997413e-06, 9.430999999997247e-06, 9.514000000002132e-06, 9.957999999997413e-06, 9.916999999998177e-06, 9.457999999996913e-06, 9.944000000004782e-06, 9.430999999997247e-06, 9.957999999997413e-06, 9.458000000003852e-06, 9.930000000005212e-06, 9.444999999996817e-06, 1.0028000000002202e-05, 9.416999999997677e-06, 9.457999999996913e-06, 9.957999999997413e-06, 1.0458999999997387e-05, 9.443999999997343e-06, 9.957999999997413e-06, 9.929999999998274e-06, 9.944999999997317e-06, 9.929999999998274e-06, 9.459000000003326e-06, 9.486000000002992e-06, 9.944000000004782e-06, 9.957999999997413e-06, 9.457999999996913e-06, 9.944000000004782e-06, 9.944999999997317e-06, 9.958999999996887e-06, 9.431000000004186e-06, 9.458000000003852e-06, 9.930999999997747e-06, 9.944000000004782e-06]</msg>
<status status="PASS" starttime="20201112 12:42:47.352" endtime="20201112 12:42:47.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.346" endtime="20201112 12:42:47.355"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.359" endtime="20201112 12:42:47.360"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:47.363" endtime="20201112 12:42:47.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.361" endtime="20201112 12:42:47.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.356" endtime="20201112 12:42:47.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.885" endtime="20201112 12:42:47.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.884" endtime="20201112 12:42:47.384"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.396" endtime="20201112 12:42:47.410"></status>
</kw>
<msg timestamp="20201112 12:42:47.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:47.394" endtime="20201112 12:42:47.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:47.412" endtime="20201112 12:42:47.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.415" endtime="20201112 12:42:47.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.390" endtime="20201112 12:42:47.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.387" endtime="20201112 12:42:47.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.427" endtime="20201112 12:42:47.712"></status>
</kw>
<msg timestamp="20201112 12:42:47.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025173, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025184472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:47.425" endtime="20201112 12:42:47.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025173, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025184472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:47.716" endtime="20201112 12:42:47.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.725" endtime="20201112 12:42:47.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.421" endtime="20201112 12:42:47.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.419" endtime="20201112 12:42:47.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:47.733" level="INFO">${RESULT} = [{'time': 0.025184472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.025197194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:47.729" endtime="20201112 12:42:47.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:47.748" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:47.734" endtime="20201112 12:42:47.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.754" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 12:42:47.753" endtime="20201112 12:42:47.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.757" level="INFO">VALUE: [1.1471999999998483e-05, 1.0443999999998343e-05, 1.0458000000001383e-05, 1.0430999999998247e-05, 1.1444999999998817e-05, 1.0957999999998413e-05, 1.1457999999998913e-05, 1.1429999999999774e-05, 1.1444999999998817e-05, 1.1389000000000538e-05, 1.0958000000001883e-05, 1.0957999999998413e-05, 1.0929999999999274e-05, 1.0915999999999704e-05, 1.0957999999998413e-05, 1.0458000000001383e-05, 1.0943999999998844e-05, 1.0444000000001813e-05, 1.0458000000001383e-05, 1.1472000000001953e-05, 1.0458000000001383e-05, 1.0486000000000523e-05, 1.1443999999999344e-05, 1.0472000000000953e-05, 1.0958000000001883e-05, 1.0444999999997817e-05, 1.0430999999998247e-05, 1.0931000000002217e-05, 1.0931000000002217e-05, 1.0473000000000426e-05, 1.0429999999998774e-05, 1.0943999999998844e-05, 1.0486000000000523e-05, 1.0958999999997887e-05, 1.0945000000001787e-05, 1.0945000000001787e-05, 1.0486000000000523e-05, 1.0959000000001357e-05, 1.0459000000000857e-05, 1.0972000000001453e-05, 1.0915999999999704e-05, 1.0958999999997887e-05, 1.0472000000000953e-05, 1.0445000000001287e-05, 1.1458000000002383e-05, 1.1443999999999344e-05, 1.0459000000000857e-05, 1.1403000000000107e-05, 1.0445000000001287e-05, 1.0957999999998413e-05]</msg>
<status status="PASS" starttime="20201112 12:42:47.755" endtime="20201112 12:42:47.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.749" endtime="20201112 12:42:47.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.761" endtime="20201112 12:42:47.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:47.766" endtime="20201112 12:42:47.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.764" endtime="20201112 12:42:47.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.759" endtime="20201112 12:42:47.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.385" endtime="20201112 12:42:47.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.385" endtime="20201112 12:42:47.788"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.799" endtime="20201112 12:42:47.814"></status>
</kw>
<msg timestamp="20201112 12:42:47.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:47.797" endtime="20201112 12:42:47.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:47.816" endtime="20201112 12:42:47.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.819" endtime="20201112 12:42:47.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.794" endtime="20201112 12:42:47.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.791" endtime="20201112 12:42:47.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.830" endtime="20201112 12:42:48.125"></status>
</kw>
<msg timestamp="20201112 12:42:48.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025497306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02550925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:47.829" endtime="20201112 12:42:48.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025497306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02550925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:48.135" endtime="20201112 12:42:48.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.155" endtime="20201112 12:42:48.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.825" endtime="20201112 12:42:48.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.823" endtime="20201112 12:42:48.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:48.174" level="INFO">${RESULT} = [{'time': 0.02550925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1943999999999844e-05, 'source_diff': 1.1943999999999844e-05}, {'time': 0.025525403, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:42:48.164" endtime="20201112 12:42:48.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:48.206" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:48.176" endtime="20201112 12:42:48.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.218" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 12:42:48.216" endtime="20201112 12:42:48.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.224" level="INFO">VALUE: [1.1943999999999844e-05, 1.1971999999998983e-05, 1.1457999999998913e-05, 1.1986000000002023e-05, 1.1957999999999414e-05, 1.2457999999999914e-05, 1.1444999999998817e-05, 1.1472000000001953e-05, 1.1499999999997623e-05, 1.1457999999998913e-05, 1.1957999999999414e-05, 1.2444000000000344e-05, 1.1957999999999414e-05, 1.2471999999999483e-05, 1.1443999999999344e-05, 1.1943999999999844e-05, 1.1457999999998913e-05, 1.1943999999999844e-05, 1.1443999999999344e-05, 1.2457999999999914e-05, 1.1972000000002453e-05, 1.1888999999997568e-05, 1.1945000000002787e-05, 1.1457999999998913e-05, 1.1971999999998983e-05, 1.1874999999997998e-05, 1.1930999999999747e-05, 1.1457999999998913e-05, 1.1443999999999344e-05, 1.1943999999999844e-05, 1.2444000000000344e-05, 1.1943999999999844e-05, 1.1458999999998387e-05, 1.1971999999998983e-05, 1.1445000000002287e-05, 1.1457999999998913e-05, 1.1957999999999414e-05, 1.1972000000002453e-05, 1.1971999999998983e-05, 1.1972999999998457e-05, 1.1958000000002883e-05, 1.1943999999999844e-05, 1.1443999999999344e-05, 1.1930000000000274e-05, 1.1457999999998913e-05, 1.1458000000002383e-05, 1.1443999999999344e-05, 1.1443999999999344e-05, 1.1944999999999317e-05, 1.1458000000002383e-05]</msg>
<status status="PASS" starttime="20201112 12:42:48.221" endtime="20201112 12:42:48.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.209" endtime="20201112 12:42:48.228"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.234" endtime="20201112 12:42:48.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:48.243" endtime="20201112 12:42:48.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.239" endtime="20201112 12:42:48.267"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.229" endtime="20201112 12:42:48.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.789" endtime="20201112 12:42:48.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.788" endtime="20201112 12:42:48.270"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.296" endtime="20201112 12:42:48.314"></status>
</kw>
<msg timestamp="20201112 12:42:48.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.293" endtime="20201112 12:42:48.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.318" endtime="20201112 12:42:48.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.325" endtime="20201112 12:42:48.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.285" endtime="20201112 12:42:48.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.277" endtime="20201112 12:42:48.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.350" endtime="20201112 12:42:48.711"></status>
</kw>
<msg timestamp="20201112 12:42:48.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046219208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046232139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:48.346" endtime="20201112 12:42:48.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046219208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046232139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:48.721" endtime="20201112 12:42:48.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.741" endtime="20201112 12:42:48.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.339" endtime="20201112 12:42:48.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.334" endtime="20201112 12:42:48.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:48.760" level="INFO">${RESULT} = [{'time': 0.046232139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2931000000000747e-05, 'source_diff': 1.2931000000000747e-05}, {'time': 0.046259153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:48.750" endtime="20201112 12:42:48.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:48.793" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:48.762" endtime="20201112 12:42:48.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.804" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 12:42:48.802" endtime="20201112 12:42:48.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.810" level="INFO">VALUE: [1.2931000000000747e-05, 1.3459000000000387e-05, 1.2944000000000844e-05, 1.2457999999999914e-05, 1.2457999999999914e-05, 1.2958000000000414e-05, 1.2471999999999483e-05, 1.2958000000000414e-05, 1.3445000000000817e-05, 1.2930000000001274e-05, 1.2499999999998623e-05, 1.2485999999999053e-05, 1.2945000000000317e-05, 1.2444000000000344e-05, 1.2944000000000844e-05, 1.301299999999922e-05, 1.2958000000000414e-05, 1.2972999999999457e-05, 1.3027999999998263e-05, 1.2958999999999887e-05, 1.3444999999993879e-05, 1.2458999999999387e-05, 1.2457999999999914e-05, 1.2444999999999817e-05, 1.2472999999998957e-05, 1.2903000000001608e-05, 1.2971999999999984e-05, 1.2444000000000344e-05, 1.2457999999999914e-05, 1.2457999999999914e-05, 1.2972999999999457e-05, 1.2444999999999817e-05, 1.2499999999998623e-05, 1.2444999999999817e-05, 1.2457999999999914e-05, 1.2944000000000844e-05, 1.2430000000000774e-05, 1.2444999999999817e-05, 1.2430999999993309e-05, 1.2958000000000414e-05, 1.2930000000001274e-05, 1.2485999999999053e-05, 1.2444999999999817e-05, 1.2958999999999887e-05, 1.2457999999999914e-05, 1.2945000000000317e-05, 1.2444999999999817e-05, 1.2944000000000844e-05, 1.2958999999999887e-05, 1.2444000000000344e-05]</msg>
<status status="PASS" starttime="20201112 12:42:48.807" endtime="20201112 12:42:48.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.795" endtime="20201112 12:42:48.814"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.821" endtime="20201112 12:42:48.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:48.829" endtime="20201112 12:42:48.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.825" endtime="20201112 12:42:48.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.816" endtime="20201112 12:42:48.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.272" endtime="20201112 12:42:48.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.271" endtime="20201112 12:42:48.856"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.881" endtime="20201112 12:42:48.901"></status>
</kw>
<msg timestamp="20201112 12:42:48.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.877" endtime="20201112 12:42:48.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.905" endtime="20201112 12:42:48.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.911" endtime="20201112 12:42:48.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.869" endtime="20201112 12:42:48.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.863" endtime="20201112 12:42:48.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.936" endtime="20201112 12:42:49.297"></status>
</kw>
<msg timestamp="20201112 12:42:49.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045988361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046001806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:48.933" endtime="20201112 12:42:49.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045988361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046001806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:49.307" endtime="20201112 12:42:49.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.327" endtime="20201112 12:42:49.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.925" endtime="20201112 12:42:49.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.920" endtime="20201112 12:42:49.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:49.346" level="INFO">${RESULT} = [{'time': 0.046001806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3445000000000817e-05, 'source_diff': 1.3445000000000817e-05}, {'time': 0.046026806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:49.336" endtime="20201112 12:42:49.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:49.378" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:49.348" endtime="20201112 12:42:49.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.390" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 12:42:49.388" endtime="20201112 12:42:49.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.396" level="INFO">VALUE: [1.3445000000000817e-05, 1.3945000000001317e-05, 1.3945000000001317e-05, 1.3915999999995765e-05, 1.4472000000001484e-05, 1.3458000000000914e-05, 1.3443999999994405e-05, 1.3458000000000914e-05, 1.3957999999994475e-05, 1.3958000000001414e-05, 1.3958000000001414e-05, 1.3458000000000914e-05, 1.3444000000001344e-05, 1.3930999999994809e-05, 1.4457999999994975e-05, 1.3444000000001344e-05, 1.3986000000000554e-05, 1.3958000000001414e-05, 1.3444000000001344e-05, 1.3972000000000984e-05, 1.3458000000000914e-05, 1.3445000000000817e-05, 1.3958000000001414e-05, 1.3944999999994379e-05, 1.3943999999994905e-05, 1.3959000000000887e-05, 1.3973000000000457e-05, 1.3903000000002608e-05, 1.3945000000001317e-05, 1.3958000000001414e-05, 1.4443999999995405e-05, 1.3401999999995695e-05, 1.3889000000003038e-05, 1.4445000000001817e-05, 1.3889000000003038e-05, 1.3444000000001344e-05, 1.3443999999994405e-05, 1.3944999999994379e-05, 1.3944000000001844e-05, 1.3958000000001414e-05, 1.3445000000000817e-05, 1.3445000000000817e-05, 1.3458000000000914e-05, 1.3959000000000887e-05, 1.3944000000001844e-05, 1.3943999999994905e-05, 1.4444000000002344e-05, 1.3459000000000387e-05, 1.3459000000000387e-05, 1.3959000000000887e-05]</msg>
<status status="PASS" starttime="20201112 12:42:49.393" endtime="20201112 12:42:49.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.381" endtime="20201112 12:42:49.399"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.406" endtime="20201112 12:42:49.409"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:49.415" endtime="20201112 12:42:49.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.411" endtime="20201112 12:42:49.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.401" endtime="20201112 12:42:49.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.858" endtime="20201112 12:42:49.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.857" endtime="20201112 12:42:49.442"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.467" endtime="20201112 12:42:49.486"></status>
</kw>
<msg timestamp="20201112 12:42:49.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.463" endtime="20201112 12:42:49.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.489" endtime="20201112 12:42:49.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.496" endtime="20201112 12:42:49.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.455" endtime="20201112 12:42:49.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.449" endtime="20201112 12:42:49.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.523" endtime="20201112 12:42:49.883"></status>
</kw>
<msg timestamp="20201112 12:42:49.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044833194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044848222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:49.519" endtime="20201112 12:42:49.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044833194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044848222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:49.893" endtime="20201112 12:42:49.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.913" endtime="20201112 12:42:49.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.510" endtime="20201112 12:42:49.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.505" endtime="20201112 12:42:49.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:49.932" level="INFO">${RESULT} = [{'time': 0.044848222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5028000000000263e-05, 'source_diff': 1.5028000000000263e-05}, {'time': 0.044866889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:49.922" endtime="20201112 12:42:49.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:49.966" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:49.934" endtime="20201112 12:42:49.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.978" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 12:42:49.976" endtime="20201112 12:42:49.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.984" level="INFO">VALUE: [1.5028000000000263e-05, 1.4958000000002414e-05, 1.4972000000001984e-05, 1.5000000000001124e-05, 1.4958000000002414e-05, 1.4958000000002414e-05, 1.4444000000002344e-05, 1.4430000000002774e-05, 1.4457999999994975e-05, 1.4958000000002414e-05, 1.4972000000001984e-05, 1.4944000000002844e-05, 1.4486000000001054e-05, 1.4429999999995835e-05, 1.4929999999996335e-05, 1.4944000000002844e-05, 1.5443999999996405e-05, 1.4430999999995309e-05, 1.4374999999997029e-05, 1.4958999999994949e-05, 1.4999999999994185e-05, 1.4958000000002414e-05, 1.4457999999994975e-05, 1.4931000000002748e-05, 1.4889000000004038e-05, 1.5486000000002054e-05, 1.4958000000002414e-05, 1.4444000000002344e-05, 1.4486000000001054e-05, 1.4929999999996335e-05, 1.4472000000001484e-05, 1.4443999999995405e-05, 1.4957999999995475e-05, 1.4986000000001554e-05, 1.4472000000001484e-05, 1.4445000000001817e-05, 1.4458000000001914e-05, 1.4958000000002414e-05, 1.4472000000001484e-05, 1.4958000000002414e-05, 1.4416999999995739e-05, 1.4943999999995905e-05, 1.4958000000002414e-05, 1.4972000000001984e-05, 1.4444999999994879e-05, 1.4457999999994975e-05, 1.5014000000000693e-05, 1.4458000000001914e-05, 1.4486000000001054e-05, 1.4943999999995905e-05]</msg>
<status status="PASS" starttime="20201112 12:42:49.981" endtime="20201112 12:42:49.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.968" endtime="20201112 12:42:49.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.994" endtime="20201112 12:42:49.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:50.003" endtime="20201112 12:42:50.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.998" endtime="20201112 12:42:50.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.989" endtime="20201112 12:42:50.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.444" endtime="20201112 12:42:50.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.443" endtime="20201112 12:42:50.030"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.054" endtime="20201112 12:42:50.073"></status>
</kw>
<msg timestamp="20201112 12:42:50.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.051" endtime="20201112 12:42:50.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.076" endtime="20201112 12:42:50.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.083" endtime="20201112 12:42:50.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.043" endtime="20201112 12:42:50.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.037" endtime="20201112 12:42:50.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.108" endtime="20201112 12:42:50.471"></status>
</kw>
<msg timestamp="20201112 12:42:50.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044323708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044339181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:50.104" endtime="20201112 12:42:50.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044323708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044339181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:50.482" endtime="20201112 12:42:50.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.502" endtime="20201112 12:42:50.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.097" endtime="20201112 12:42:50.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.092" endtime="20201112 12:42:50.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:50.520" level="INFO">${RESULT} = [{'time': 0.044339181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.547299999999502e-05, 'source_diff': 1.547299999999502e-05}, {'time': 0.044366917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:50.511" endtime="20201112 12:42:50.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:50.553" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:50.522" endtime="20201112 12:42:50.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.565" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 12:42:50.562" endtime="20201112 12:42:50.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.570" level="INFO">VALUE: [1.547299999999502e-05, 1.544499999999588e-05, 1.5945000000003318e-05, 1.5972000000002984e-05, 1.5929999999997335e-05, 1.5959000000002888e-05, 1.5944000000003844e-05, 1.5459000000002387e-05, 1.5444000000003344e-05, 1.6459000000003388e-05, 1.644499999999688e-05, 1.6014000000001694e-05, 1.6443999999997405e-05, 1.6471999999996545e-05, 1.5444000000003344e-05, 1.5458000000002914e-05, 1.5972000000002984e-05, 1.5459000000002387e-05, 1.5945000000003318e-05, 1.5431000000003248e-05, 1.5473000000001957e-05, 1.6028000000001263e-05, 1.5445000000002818e-05, 1.5943999999996905e-05, 1.5943999999996905e-05, 1.5443999999996405e-05, 1.6014000000001694e-05, 1.5931000000003748e-05, 1.5986000000002554e-05, 1.593099999999681e-05, 1.594499999999638e-05, 1.5929999999997335e-05, 1.5999999999995185e-05, 1.5943999999996905e-05, 1.595899999999595e-05, 1.5929999999997335e-05, 1.6014000000001694e-05, 1.5944000000003844e-05, 1.543099999999631e-05, 1.5958000000003414e-05, 1.545899999999545e-05, 1.5985999999995615e-05, 1.594499999999638e-05, 1.5514000000001194e-05, 1.5445000000002818e-05, 1.5901999999998195e-05, 1.5971999999996045e-05, 1.5459000000002387e-05, 1.5444000000003344e-05, 1.5443999999996405e-05]</msg>
<status status="PASS" starttime="20201112 12:42:50.567" endtime="20201112 12:42:50.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.555" endtime="20201112 12:42:50.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.581" endtime="20201112 12:42:50.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:50.589" endtime="20201112 12:42:50.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.585" endtime="20201112 12:42:50.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.576" endtime="20201112 12:42:50.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.032" endtime="20201112 12:42:50.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.031" endtime="20201112 12:42:50.616"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.641" endtime="20201112 12:42:50.659"></status>
</kw>
<msg timestamp="20201112 12:42:50.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.637" endtime="20201112 12:42:50.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.663" endtime="20201112 12:42:50.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.669" endtime="20201112 12:42:50.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.629" endtime="20201112 12:42:50.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.623" endtime="20201112 12:42:50.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.694" endtime="20201112 12:42:51.057"></status>
</kw>
<msg timestamp="20201112 12:42:51.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044432028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044448931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:50.691" endtime="20201112 12:42:51.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044432028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044448931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:51.067" endtime="20201112 12:42:51.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.087" endtime="20201112 12:42:51.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.683" endtime="20201112 12:42:51.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.678" endtime="20201112 12:42:51.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:51.106" level="INFO">${RESULT} = [{'time': 0.044448931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.690299999999867e-05, 'source_diff': 1.690299999999867e-05}, {'time': 0.04447175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:42:51.096" endtime="20201112 12:42:51.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:51.138" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:51.108" endtime="20201112 12:42:51.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.150" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 12:42:51.148" endtime="20201112 12:42:51.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.156" level="INFO">VALUE: [1.690299999999867e-05, 1.6957999999997475e-05, 1.6443999999997405e-05, 1.6471999999996545e-05, 1.6429999999997835e-05, 1.6445000000003818e-05, 1.7458000000004914e-05, 1.6472000000003484e-05, 1.6945000000004318e-05, 1.7485999999997115e-05, 1.6973000000003458e-05, 1.6457999999996975e-05, 1.694499999999738e-05, 1.694499999999738e-05, 1.6486000000003054e-05, 1.7458000000004914e-05, 1.6444000000004344e-05, 1.6471999999996545e-05, 1.7443999999998405e-05, 1.6443999999997405e-05, 1.6943999999997905e-05, 1.694499999999738e-05, 1.644499999999688e-05, 1.645899999999645e-05, 1.6375000000005968e-05, 1.636099999999946e-05, 1.7471999999997545e-05, 1.7443999999998405e-05, 1.6957999999997475e-05, 1.695899999999695e-05, 1.745899999999745e-05, 1.644499999999688e-05, 1.6943999999997905e-05, 1.6430000000004774e-05, 1.693099999999781e-05, 1.6471999999996545e-05, 1.6457999999996975e-05, 1.652699999999535e-05, 1.6957999999997475e-05, 1.6943999999997905e-05, 1.7471999999997545e-05, 1.6500000000002624e-05, 1.6457999999996975e-05, 1.652700000000229e-05, 1.691699999999824e-05, 1.6458000000003914e-05, 1.6457999999996975e-05, 1.6443999999997405e-05, 1.694499999999738e-05, 1.6945000000004318e-05]</msg>
<status status="PASS" starttime="20201112 12:42:51.153" endtime="20201112 12:42:51.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.140" endtime="20201112 12:42:51.159"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.167" endtime="20201112 12:42:51.170"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:51.176" endtime="20201112 12:42:51.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.172" endtime="20201112 12:42:51.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.162" endtime="20201112 12:42:51.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.618" endtime="20201112 12:42:51.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.617" endtime="20201112 12:42:51.204"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.229" endtime="20201112 12:42:51.248"></status>
</kw>
<msg timestamp="20201112 12:42:51.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.225" endtime="20201112 12:42:51.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.252" endtime="20201112 12:42:51.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.259" endtime="20201112 12:42:51.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.218" endtime="20201112 12:42:51.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.211" endtime="20201112 12:42:51.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.284" endtime="20201112 12:42:51.597"></status>
</kw>
<msg timestamp="20201112 12:42:51.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046364042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0463815, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:51.280" endtime="20201112 12:42:51.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046364042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0463815, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:51.601" endtime="20201112 12:42:51.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.610" endtime="20201112 12:42:51.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.272" endtime="20201112 12:42:51.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.267" endtime="20201112 12:42:51.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:51.619" level="INFO">${RESULT} = [{'time': 0.0463815, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7457999999997975e-05, 'source_diff': 1.7457999999997975e-05}, {'time': 0.046402625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:51.615" endtime="20201112 12:42:51.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:51.633" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:51.621" endtime="20201112 12:42:51.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.639" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 12:42:51.638" endtime="20201112 12:42:51.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.642" level="INFO">VALUE: [1.7457999999997975e-05, 1.7986000000004554e-05, 1.7971999999998045e-05, 1.7957999999998475e-05, 1.844499999999888e-05, 1.797299999999752e-05, 1.794499999999838e-05, 1.7958000000005414e-05, 1.795899999999795e-05, 1.744499999999788e-05, 1.743099999999831e-05, 1.7443999999998405e-05, 1.7943999999998905e-05, 1.7457999999997975e-05, 1.7402000000006634e-05, 1.790299999999967e-05, 1.7443999999998405e-05, 1.843099999999931e-05, 1.7415999999999265e-05, 1.794499999999838e-05, 1.794499999999838e-05, 1.7499999999996685e-05, 1.7458000000004914e-05, 1.791699999999924e-05, 1.7443999999998405e-05, 1.745899999999745e-05, 1.740299999999917e-05, 1.7443999999998405e-05, 1.7472000000004484e-05, 1.7958000000005414e-05, 1.7985999999997615e-05, 1.7429999999998835e-05, 1.7500000000003624e-05, 1.794499999999838e-05, 1.7444000000005344e-05, 1.7485999999997115e-05, 1.844499999999888e-05, 1.7957999999998475e-05, 1.7499999999996685e-05, 1.744499999999788e-05, 1.7944000000005844e-05, 1.7443999999998405e-05, 1.7999999999997185e-05, 1.7915999999999765e-05, 1.7445000000004818e-05, 1.787500000000053e-05, 1.7457999999997975e-05, 1.843099999999931e-05, 1.7957999999998475e-05, 1.7443999999998405e-05]</msg>
<status status="PASS" starttime="20201112 12:42:51.640" endtime="20201112 12:42:51.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.634" endtime="20201112 12:42:51.643"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.646" endtime="20201112 12:42:51.648"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:51.651" endtime="20201112 12:42:51.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.649" endtime="20201112 12:42:51.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.644" endtime="20201112 12:42:51.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.206" endtime="20201112 12:42:51.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.205" endtime="20201112 12:42:51.672"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.683" endtime="20201112 12:42:51.699"></status>
</kw>
<msg timestamp="20201112 12:42:51.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.682" endtime="20201112 12:42:51.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.700" endtime="20201112 12:42:51.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.704" endtime="20201112 12:42:51.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.678" endtime="20201112 12:42:51.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.675" endtime="20201112 12:42:51.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.715" endtime="20201112 12:42:52.001"></status>
</kw>
<msg timestamp="20201112 12:42:52.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025292208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025310653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:51.713" endtime="20201112 12:42:52.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025292208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025310653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.005" endtime="20201112 12:42:52.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.014" endtime="20201112 12:42:52.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.710" endtime="20201112 12:42:52.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.708" endtime="20201112 12:42:52.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:52.023" level="INFO">${RESULT} = [{'time': 0.025310653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.844499999999888e-05, 'source_diff': 1.844499999999888e-05}, {'time': 0.02533775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:42:52.019" endtime="20201112 12:42:52.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:52.039" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:52.024" endtime="20201112 12:42:52.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.044" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 12:42:52.043" endtime="20201112 12:42:52.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.047" level="INFO">VALUE: [1.844499999999888e-05, 1.8957999999999475e-05, 1.8957999999999475e-05, 1.8971999999999045e-05, 1.8943999999999905e-05, 1.8443999999999405e-05, 1.8472000000002015e-05, 1.8973000000001988e-05, 1.8943999999999905e-05, 1.8444000000002875e-05, 1.844499999999888e-05, 1.8458000000002445e-05, 1.837500000000103e-05, 1.9457999999999975e-05, 1.8443999999999405e-05, 1.8541999999999864e-05, 1.8500000000001154e-05, 1.894500000000285e-05, 1.8958000000002945e-05, 1.8485999999998115e-05, 1.895899999999895e-05, 1.845900000000192e-05, 1.895899999999895e-05, 1.895899999999895e-05, 1.8944000000003375e-05, 1.8957999999999475e-05, 1.844499999999888e-05, 1.8971999999999045e-05, 1.845899999999845e-05, 1.8957999999999475e-05, 1.8999999999998185e-05, 1.8443999999999405e-05, 1.9416000000001266e-05, 1.845899999999845e-05, 1.8971999999999045e-05, 1.8930000000000335e-05, 1.945899999999945e-05, 1.895900000000242e-05, 1.894499999999938e-05, 1.8486000000001584e-05, 1.8472000000002015e-05, 1.8957999999999475e-05, 1.844499999999888e-05, 1.8973000000001988e-05, 1.8443999999999405e-05, 1.845900000000192e-05, 1.895899999999895e-05, 1.944499999999988e-05, 1.8929999999996866e-05, 1.893099999999981e-05]</msg>
<status status="PASS" starttime="20201112 12:42:52.046" endtime="20201112 12:42:52.048"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.040" endtime="20201112 12:42:52.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.052" endtime="20201112 12:42:52.053"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:52.056" endtime="20201112 12:42:52.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.054" endtime="20201112 12:42:52.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.050" endtime="20201112 12:42:52.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.673" endtime="20201112 12:42:52.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.673" endtime="20201112 12:42:52.077"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.089" endtime="20201112 12:42:52.104"></status>
</kw>
<msg timestamp="20201112 12:42:52.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.087" endtime="20201112 12:42:52.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.106" endtime="20201112 12:42:52.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.109" endtime="20201112 12:42:52.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.084" endtime="20201112 12:42:52.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.081" endtime="20201112 12:42:52.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.120" endtime="20201112 12:42:52.449"></status>
</kw>
<msg timestamp="20201112 12:42:52.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025338917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025358375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.119" endtime="20201112 12:42:52.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025338917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025358375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.459" endtime="20201112 12:42:52.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.479" endtime="20201112 12:42:52.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.115" endtime="20201112 12:42:52.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.113" endtime="20201112 12:42:52.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:52.498" level="INFO">${RESULT} = [{'time': 0.025358375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9457999999999975e-05, 'source_diff': 1.9457999999999975e-05}, {'time': 0.025385431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:52.488" endtime="20201112 12:42:52.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:52.532" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:52.500" endtime="20201112 12:42:52.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.544" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 12:42:52.541" endtime="20201112 12:42:52.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.549" level="INFO">VALUE: [1.9457999999999975e-05, 1.997299999999952e-05, 1.9444000000000405e-05, 1.944499999999988e-05, 1.9985999999999615e-05, 1.9958000000000475e-05, 1.9944000000000905e-05, 1.9944000000000905e-05, 1.944499999999988e-05, 1.995899999999995e-05, 1.9457999999999975e-05, 1.943100000000031e-05, 1.9444000000000405e-05, 1.99029999999982e-05, 1.9499999999998685e-05, 1.9985999999999615e-05, 1.944499999999988e-05, 1.936100000000246e-05, 1.994500000000038e-05, 1.9500000000002154e-05, 1.993100000000081e-05, 1.9958000000000475e-05, 1.945899999999945e-05, 1.945899999999945e-05, 1.9444000000000405e-05, 1.9972000000000045e-05, 1.9929999999997866e-05, 2.0458000000000975e-05, 1.9457999999999975e-05, 1.9471999999999545e-05, 1.9500000000002154e-05, 1.9958000000000475e-05, 2.044500000000088e-05, 1.9444000000000405e-05, 1.9430000000000835e-05, 1.994500000000038e-05, 2.0458000000000975e-05, 1.993100000000081e-05, 1.9457999999999975e-05, 1.9444000000000405e-05, 1.9972000000000045e-05, 1.9958000000000475e-05, 2.044500000000088e-05, 1.995899999999995e-05, 1.9471999999999545e-05, 1.9444000000000405e-05, 2.0458000000000975e-05, 1.9444000000000405e-05, 1.9943999999997436e-05, 1.945899999999945e-05]</msg>
<status status="PASS" starttime="20201112 12:42:52.546" endtime="20201112 12:42:52.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.534" endtime="20201112 12:42:52.553"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.560" endtime="20201112 12:42:52.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:52.569" endtime="20201112 12:42:52.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.564" endtime="20201112 12:42:52.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.555" endtime="20201112 12:42:52.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.079" endtime="20201112 12:42:52.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.078" endtime="20201112 12:42:52.595"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.620" endtime="20201112 12:42:52.640"></status>
</kw>
<msg timestamp="20201112 12:42:52.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.616" endtime="20201112 12:42:52.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.643" endtime="20201112 12:42:52.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.650" endtime="20201112 12:42:52.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.608" endtime="20201112 12:42:52.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.602" endtime="20201112 12:42:52.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.675" endtime="20201112 12:42:53.034"></status>
</kw>
<msg timestamp="20201112 12:42:53.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044459694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044484222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.672" endtime="20201112 12:42:53.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044459694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044484222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:53.044" endtime="20201112 12:42:53.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.064" endtime="20201112 12:42:53.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.664" endtime="20201112 12:42:53.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.659" endtime="20201112 12:42:53.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:53.083" level="INFO">${RESULT} = [{'time': 0.044484222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4527999999995886e-05, 'source_diff': 2.4527999999995886e-05}, {'time': 0.044527222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:53.073" endtime="20201112 12:42:53.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:53.117" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:53.085" endtime="20201112 12:42:53.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.129" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 12:42:53.126" endtime="20201112 12:42:53.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.135" level="INFO">VALUE: [2.4527999999995886e-05, 2.4304999999995303e-05, 2.490299999999973e-05, 2.49169999999993e-05, 2.4986000000004616e-05, 2.4846999999994512e-05, 2.418099999999812e-05, 2.4750000000003936e-05, 2.4957999999998537e-05, 2.466699999999905e-05, 2.4806000000002215e-05, 2.440299999999923e-05, 2.4749999999996997e-05, 2.4527999999995886e-05, 2.4250000000003435e-05, 2.487500000000059e-05, 2.4513999999996317e-05, 2.490299999999973e-05, 2.438899999999966e-05, 2.5098000000001175e-05, 2.4888000000000687e-05, 2.50970000000017e-05, 2.418099999999812e-05, 2.4262999999996593e-05, 2.4250000000003435e-05, 2.484700000000145e-05, 2.488900000000016e-05, 2.487500000000059e-05, 2.4693999999998717e-05, 2.4193999999998217e-05, 2.4528000000002825e-05, 2.506900000000256e-05, 2.5054999999996053e-05, 2.4514000000003255e-05, 2.4222000000004296e-05, 2.50970000000017e-05, 2.466700000000599e-05, 2.4235999999996927e-05, 2.4777999999996136e-05, 2.4985999999997677e-05, 2.4499999999996747e-05, 2.490299999999973e-05, 2.4820000000001785e-05, 2.45970000000012e-05, 2.488900000000016e-05, 2.5055999999995526e-05, 2.419499999999769e-05, 2.5055999999995526e-05, 2.463899999999991e-05, 2.5042000000002895e-05]</msg>
<status status="PASS" starttime="20201112 12:42:53.131" endtime="20201112 12:42:53.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.119" endtime="20201112 12:42:53.138"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.145" endtime="20201112 12:42:53.148"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:53.154" endtime="20201112 12:42:53.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.149" endtime="20201112 12:42:53.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.140" endtime="20201112 12:42:53.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.597" endtime="20201112 12:42:53.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.596" endtime="20201112 12:42:53.181"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.205" endtime="20201112 12:42:53.224"></status>
</kw>
<msg timestamp="20201112 12:42:53.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.201" endtime="20201112 12:42:53.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.228" endtime="20201112 12:42:53.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.235" endtime="20201112 12:42:53.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.194" endtime="20201112 12:42:53.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.187" endtime="20201112 12:42:53.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.262" endtime="20201112 12:42:53.625"></status>
</kw>
<msg timestamp="20201112 12:42:53.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044420472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044446417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:53.258" endtime="20201112 12:42:53.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044420472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044446417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:53.635" endtime="20201112 12:42:53.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.654" endtime="20201112 12:42:53.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.249" endtime="20201112 12:42:53.660"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.244" endtime="20201112 12:42:53.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:53.676" level="INFO">${RESULT} = [{'time': 0.044446417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.594499999999944e-05, 'source_diff': 2.594499999999944e-05}, {'time': 0.044486403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:53.664" endtime="20201112 12:42:53.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:53.712" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:53.679" endtime="20201112 12:42:53.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.723" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 12:42:53.721" endtime="20201112 12:42:53.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.729" level="INFO">VALUE: [2.594499999999944e-05, 2.5749999999997997e-05, 2.543099999999937e-05, 2.588900000000116e-05, 2.5555999999996026e-05, 2.5790999999997233e-05, 2.6013999999997817e-05, 2.537500000000109e-05, 2.5348000000001425e-05, 2.5612000000001245e-05, 2.57369999999979e-05, 2.5999999999998247e-05, 2.5320000000002285e-05, 2.545899999999851e-05, 2.545900000000545e-05, 2.5972000000006046e-05, 2.583300000000288e-05, 2.587500000000159e-05, 2.586100000000202e-05, 2.5791999999996706e-05, 2.5916000000000827e-05, 2.615300000000098e-05, 2.6027999999997387e-05, 2.5749999999997997e-05, 2.587500000000159e-05, 2.5388999999993722e-05, 2.5957999999999537e-05, 2.5485999999998177e-05, 2.515299999999998e-05, 2.54169999999998e-05, 2.5957999999999537e-05, 2.5985999999998677e-05, 2.584700000000245e-05, 2.5555999999996026e-05, 2.6041999999996956e-05, 2.5972000000006046e-05, 2.5250000000004436e-05, 2.5263999999997067e-05, 2.516699999999955e-05, 2.516699999999955e-05, 2.5555999999996026e-05, 2.5986000000005616e-05, 2.6082999999996193e-05, 2.5721999999998857e-05, 2.5527000000004352e-05, 2.598699999999815e-05, 2.60970000000027e-05, 2.587500000000159e-05, 2.605500000000399e-05, 2.554100000000392e-05]</msg>
<status status="PASS" starttime="20201112 12:42:53.725" endtime="20201112 12:42:53.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.714" endtime="20201112 12:42:53.732"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.738" endtime="20201112 12:42:53.741"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:53.746" endtime="20201112 12:42:53.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.742" endtime="20201112 12:42:53.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.734" endtime="20201112 12:42:53.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.183" endtime="20201112 12:42:53.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.182" endtime="20201112 12:42:53.772"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.795" endtime="20201112 12:42:53.814"></status>
</kw>
<msg timestamp="20201112 12:42:53.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.792" endtime="20201112 12:42:53.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.817" endtime="20201112 12:42:53.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.824" endtime="20201112 12:42:53.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.785" endtime="20201112 12:42:53.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.779" endtime="20201112 12:42:53.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.848" endtime="20201112 12:42:54.189"></status>
</kw>
<msg timestamp="20201112 12:42:54.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042378806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042405306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:53.845" endtime="20201112 12:42:54.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042378806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042405306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.199" endtime="20201112 12:42:54.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.218" endtime="20201112 12:42:54.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.836" endtime="20201112 12:42:54.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.832" endtime="20201112 12:42:54.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:54.236" level="INFO">${RESULT} = [{'time': 0.042405306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6499999999998747e-05, 'source_diff': 2.6499999999998747e-05}, {'time': 0.042438292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:54.227" endtime="20201112 12:42:54.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:54.277" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:54.238" endtime="20201112 12:42:54.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.289" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 12:42:54.286" endtime="20201112 12:42:54.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.294" level="INFO">VALUE: [2.6499999999998747e-05, 2.618100000000012e-05, 2.620899999999926e-05, 2.6874999999995652e-05, 2.640199999999482e-05, 2.6958000000000537e-05, 2.6221999999999357e-05, 2.6194000000000217e-05, 2.6916000000001827e-05, 2.638900000000166e-05, 2.7082999999997193e-05, 2.6235999999998927e-05, 2.6264000000005006e-05, 2.634700000000295e-05, 2.638900000000166e-05, 2.687500000000259e-05, 2.633300000000338e-05, 2.6721999999999857e-05, 2.637500000000209e-05, 2.6708000000000287e-05, 2.6958000000000537e-05, 2.6999999999999247e-05, 2.665300000000148e-05, 2.619499999999969e-05, 2.687500000000259e-05, 2.643100000000037e-05, 2.6792000000004645e-05, 2.6791999999997707e-05, 2.7070000000004035e-05, 2.6777999999998137e-05, 2.645899999999951e-05, 2.670899999999976e-05, 2.6318999999996873e-05, 2.7040999999998483e-05, 2.6680000000001147e-05, 2.688900000000216e-05, 2.6444000000000467e-05, 2.686100000000302e-05, 2.6262999999998593e-05, 2.6277999999997637e-05, 2.6458000000000037e-05, 2.6972000000000107e-05, 2.6458000000000037e-05, 2.6485999999999177e-05, 2.686100000000302e-05, 2.6777999999998137e-05, 2.6527999999997887e-05, 2.7056000000004465e-05, 2.6721999999999857e-05, 2.693100000000087e-05]</msg>
<status status="PASS" starttime="20201112 12:42:54.291" endtime="20201112 12:42:54.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.279" endtime="20201112 12:42:54.298"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.304" endtime="20201112 12:42:54.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:54.313" endtime="20201112 12:42:54.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.308" endtime="20201112 12:42:54.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.300" endtime="20201112 12:42:54.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.774" endtime="20201112 12:42:54.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.773" endtime="20201112 12:42:54.339"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.362" endtime="20201112 12:42:54.380"></status>
</kw>
<msg timestamp="20201112 12:42:54.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.358" endtime="20201112 12:42:54.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.384" endtime="20201112 12:42:54.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.390" endtime="20201112 12:42:54.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.351" endtime="20201112 12:42:54.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.345" endtime="20201112 12:42:54.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.414" endtime="20201112 12:42:54.748"></status>
</kw>
<msg timestamp="20201112 12:42:54.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042232625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042260653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.410" endtime="20201112 12:42:54.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042232625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042260653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.757" endtime="20201112 12:42:54.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.776" endtime="20201112 12:42:54.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.403" endtime="20201112 12:42:54.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.398" endtime="20201112 12:42:54.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:54.794" level="INFO">${RESULT} = [{'time': 0.042260653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8027999999999387e-05, 'source_diff': 2.8027999999999387e-05}, {'time': 0.042304653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:54.785" endtime="20201112 12:42:54.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:54.825" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:54.796" endtime="20201112 12:42:54.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.837" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 12:42:54.834" endtime="20201112 12:42:54.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.843" level="INFO">VALUE: [2.8027999999999387e-05, 2.8013999999999817e-05, 2.7805999999998277e-05, 2.7888999999996222e-05, 2.7263999999999067e-05, 2.8124999999996902e-05, 2.8068999999998623e-05, 2.7526999999999413e-05, 2.766700000000205e-05, 2.786100000000402e-05, 2.8110999999997333e-05, 2.715199999999557e-05, 2.7971999999994168e-05, 2.794399999999503e-05, 2.7513999999999317e-05, 2.7916000000002827e-05, 2.7930000000002397e-05, 2.7499999999999747e-05, 2.741599999999539e-05, 2.7472000000000607e-05, 2.7749999999999997e-05, 2.7874999999996652e-05, 2.7402999999995292e-05, 2.7736000000000427e-05, 2.7208000000000787e-05, 2.7306000000004715e-05, 2.786100000000402e-05, 2.7860999999997083e-05, 2.8041999999998957e-05, 2.7736000000000427e-05, 2.7249999999999497e-05, 2.761100000000377e-05, 2.77369999999999e-05, 2.8097999999997236e-05, 2.7499999999999747e-05, 2.747300000000008e-05, 2.7292000000005145e-05, 2.7277999999998637e-05, 2.7500000000006686e-05, 2.7222000000000357e-05, 2.7708000000001287e-05, 2.812500000000384e-05, 2.7722000000000857e-05, 2.8000000000000247e-05, 2.7320000000004285e-05, 2.788900000000316e-05, 2.7846999999997513e-05, 2.7208000000000787e-05, 2.7777999999999137e-05, 2.7527999999998887e-05]</msg>
<status status="PASS" starttime="20201112 12:42:54.839" endtime="20201112 12:42:54.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.827" endtime="20201112 12:42:54.846"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.852" endtime="20201112 12:42:54.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:54.860" endtime="20201112 12:42:54.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.856" endtime="20201112 12:42:54.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.848" endtime="20201112 12:42:54.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.341" endtime="20201112 12:42:54.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.339" endtime="20201112 12:42:54.886"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.909" endtime="20201112 12:42:54.928"></status>
</kw>
<msg timestamp="20201112 12:42:54.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.906" endtime="20201112 12:42:54.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.932" endtime="20201112 12:42:54.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.938" endtime="20201112 12:42:54.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.899" endtime="20201112 12:42:54.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.893" endtime="20201112 12:42:54.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.961" endtime="20201112 12:42:55.291"></status>
</kw>
<msg timestamp="20201112 12:42:55.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042041014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042069431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.958" endtime="20201112 12:42:55.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042041014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042069431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:55.296" endtime="20201112 12:42:55.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.304" endtime="20201112 12:42:55.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.951" endtime="20201112 12:42:55.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.946" endtime="20201112 12:42:55.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:55.313" level="INFO">${RESULT} = [{'time': 0.042069431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8416999999995862e-05, 'source_diff': 2.8416999999995862e-05}, {'time': 0.042116431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:55.309" endtime="20201112 12:42:55.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:55.327" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:55.314" endtime="20201112 12:42:55.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.333" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 12:42:55.331" endtime="20201112 12:42:55.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.335" level="INFO">VALUE: [2.8416999999995862e-05, 2.837500000000409e-05, 2.8500000000000747e-05, 2.844500000000194e-05, 2.9028000000000387e-05, 2.8944999999995502e-05, 2.8500000000000747e-05, 2.8638000000004438e-05, 2.845900000000151e-05, 2.8527999999999887e-05, 2.820900000000126e-05, 2.8791000000000233e-05, 2.8514000000000317e-05, 2.8527000000000413e-05, 2.8832999999998943e-05, 2.8208000000001787e-05, 2.8444000000002467e-05, 2.894399999999603e-05, 2.8804999999999803e-05, 2.8320000000005285e-05, 2.9096999999998763e-05, 2.9000000000001247e-05, 2.8680999999995682e-05, 2.844399999999553e-05, 2.84170000000028e-05, 2.8583999999998166e-05, 2.8458000000002037e-05, 2.844500000000194e-05, 2.8236000000000927e-05, 2.9096999999998763e-05, 2.9098000000005175e-05, 2.8708999999994822e-05, 2.8832999999998943e-05, 2.8250000000000497e-05, 2.888900000000416e-05, 2.8860999999998083e-05, 2.890199999999732e-05, 2.8805999999999277e-05, 2.9041000000000483e-05, 2.8804999999999803e-05, 2.9000000000001247e-05, 2.861100000000477e-05, 2.8346999999998013e-05, 2.8554999999999553e-05, 2.8680000000003147e-05, 2.8318999999998873e-05, 2.8180000000002647e-05, 2.8888999999997222e-05, 2.8194000000002217e-05, 2.837500000000409e-05]</msg>
<status status="PASS" starttime="20201112 12:42:55.334" endtime="20201112 12:42:55.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.328" endtime="20201112 12:42:55.337"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.340" endtime="20201112 12:42:55.342"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:55.344" endtime="20201112 12:42:55.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.342" endtime="20201112 12:42:55.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.338" endtime="20201112 12:42:55.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.888" endtime="20201112 12:42:55.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.887" endtime="20201112 12:42:55.366"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.378" endtime="20201112 12:42:55.396"></status>
</kw>
<msg timestamp="20201112 12:42:55.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.375" endtime="20201112 12:42:55.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.400" endtime="20201112 12:42:55.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.406" endtime="20201112 12:42:55.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.371" endtime="20201112 12:42:55.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.369" endtime="20201112 12:42:55.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.429" endtime="20201112 12:42:55.764"></status>
</kw>
<msg timestamp="20201112 12:42:55.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027641764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027671375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:55.426" endtime="20201112 12:42:55.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027641764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027671375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:55.774" endtime="20201112 12:42:55.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.792" endtime="20201112 12:42:55.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.419" endtime="20201112 12:42:55.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.414" endtime="20201112 12:42:55.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:55.810" level="INFO">${RESULT} = [{'time': 0.027671375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9611000000002302e-05, 'source_diff': 2.9611000000002302e-05}, {'time': 0.027707333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:55.801" endtime="20201112 12:42:55.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:55.841" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:55.812" endtime="20201112 12:42:55.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.851" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 12:42:55.849" endtime="20201112 12:42:55.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.857" level="INFO">VALUE: [2.9611000000002302e-05, 2.9846999999999513e-05, 2.9819000000000373e-05, 2.9528000000000887e-05, 2.9250000000001497e-05, 2.9361000000002052e-05, 2.9417000000000332e-05, 3.0056000000000527e-05, 2.9791999999997237e-05, 2.9264000000001067e-05, 3.0083000000000193e-05, 2.9625000000001872e-05, 2.994499999999997e-05, 2.9847000000002982e-05, 2.9596999999999263e-05, 2.9834000000002886e-05, 2.9681000000000152e-05, 2.967999999999721e-05, 3.0014000000001817e-05, 2.995900000000301e-05, 2.9888999999998223e-05, 2.97370000000019e-05, 2.9346999999999013e-05, 2.9791000000001233e-05, 2.9889000000001692e-05, 2.9596999999999263e-05, 2.9986000000002677e-05, 2.9847000000002982e-05, 3.0139000000001942e-05, 3.0166999999997612e-05, 2.9971999999999638e-05, 3.0124999999998903e-05, 2.9735999999998958e-05, 2.9457999999999568e-05, 2.9403000000000762e-05, 3.0167000000001082e-05, 3.0069000000000623e-05, 3.0056000000000527e-05, 2.9528000000000887e-05, 2.9832999999999943e-05, 2.9167000000000082e-05, 2.9569999999999597e-05, 2.9584000000002636e-05, 2.994499999999997e-05, 3.0056000000000527e-05, 2.9861000000002552e-05, 2.995899999999954e-05, 2.9639000000001442e-05, 3.0097999999999236e-05, 2.9582999999999693e-05]</msg>
<status status="PASS" starttime="20201112 12:42:55.854" endtime="20201112 12:42:55.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.842" endtime="20201112 12:42:55.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.866" endtime="20201112 12:42:55.870"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:55.876" endtime="20201112 12:42:55.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.872" endtime="20201112 12:42:55.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.862" endtime="20201112 12:42:55.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.367" endtime="20201112 12:42:55.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.366" endtime="20201112 12:42:55.902"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.925" endtime="20201112 12:42:55.944"></status>
</kw>
<msg timestamp="20201112 12:42:55.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.921" endtime="20201112 12:42:55.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.947" endtime="20201112 12:42:55.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.953" endtime="20201112 12:42:55.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.914" endtime="20201112 12:42:55.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.908" endtime="20201112 12:42:55.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.977" endtime="20201112 12:42:56.310"></status>
</kw>
<msg timestamp="20201112 12:42:56.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041621667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041652347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:55.973" endtime="20201112 12:42:56.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041621667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041652347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:56.320" endtime="20201112 12:42:56.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.339" endtime="20201112 12:42:56.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.966" endtime="20201112 12:42:56.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.962" endtime="20201112 12:42:56.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:56.357" level="INFO">${RESULT} = [{'time': 0.041652347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.067999999999821e-05, 'source_diff': 3.067999999999821e-05}, {'time': 0.041693319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:56.348" endtime="20201112 12:42:56.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:56.390" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:56.359" endtime="20201112 12:42:56.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.401" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 12:42:56.399" endtime="20201112 12:42:56.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.406" level="INFO">VALUE: [3.067999999999821e-05, 3.04579999999971e-05, 3.059700000000026e-05, 3.11249999999999e-05, 3.017999999999771e-05, 3.076399999999563e-05, 3.072199999999692e-05, 3.081900000000137e-05, 3.101399999999588e-05, 3.102799999999545e-05, 3.0360999999999583e-05, 3.095800000000454e-05, 3.0333000000000443e-05, 3.105600000000153e-05, 3.0402999999998293e-05, 3.098599999999674e-05, 3.079200000000171e-05, 3.0166999999997612e-05, 3.0263999999995128e-05, 3.066699999999811e-05, 3.088899999999922e-05, 3.0292000000001207e-05, 3.087499999999965e-05, 3.063899999999897e-05, 3.104199999999502e-05, 3.11249999999999e-05, 3.11249999999999e-05, 3.0276999999995224e-05, 3.0306000000000777e-05, 3.0347000000000013e-05, 3.069399999999778e-05, 3.081900000000137e-05, 3.067999999999821e-05, 3.115299999999904e-05, 3.068000000000515e-05, 3.0500000000002747e-05, 3.105599999999459e-05, 3.0194000000004217e-05, 3.097299999999664e-05, 3.06249999999994e-05, 3.0278000000001637e-05, 3.0458000000004037e-05, 3.088899999999922e-05, 3.093099999999793e-05, 3.022300000000283e-05, 3.080600000000128e-05, 3.108400000000067e-05, 3.0292000000001207e-05, 3.0264000000002067e-05, 3.0486000000003177e-05]</msg>
<status status="PASS" starttime="20201112 12:42:56.403" endtime="20201112 12:42:56.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.392" endtime="20201112 12:42:56.416"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.423" endtime="20201112 12:42:56.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:56.432" endtime="20201112 12:42:56.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.427" endtime="20201112 12:42:56.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.418" endtime="20201112 12:42:56.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.904" endtime="20201112 12:42:56.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.903" endtime="20201112 12:42:56.460"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.485" endtime="20201112 12:42:56.505"></status>
</kw>
<msg timestamp="20201112 12:42:56.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.481" endtime="20201112 12:42:56.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.509" endtime="20201112 12:42:56.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.515" endtime="20201112 12:42:56.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.473" endtime="20201112 12:42:56.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.467" endtime="20201112 12:42:56.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.540" endtime="20201112 12:42:56.901"></status>
</kw>
<msg timestamp="20201112 12:42:56.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046184903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046216167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:56.537" endtime="20201112 12:42:56.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046184903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046216167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:56.911" endtime="20201112 12:42:56.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.931" endtime="20201112 12:42:56.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.529" endtime="20201112 12:42:56.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.524" endtime="20201112 12:42:56.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:56.949" level="INFO">${RESULT} = [{'time': 0.046216167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.126400000000307e-05, 'source_diff': 3.126400000000307e-05}, {'time': 0.046264236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:56.940" endtime="20201112 12:42:56.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:56.982" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:56.952" endtime="20201112 12:42:56.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.994" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 12:42:56.991" endtime="20201112 12:42:56.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.999" level="INFO">VALUE: [3.126400000000307e-05, 3.14579999999981e-05, 3.155600000000203e-05, 3.124999999999656e-05, 3.158300000000169e-05, 3.122199999999742e-05, 3.2096999999994824e-05, 3.134700000000101e-05, 3.191599999999989e-05, 3.187500000000065e-05, 3.158400000000117e-05, 3.187500000000065e-05, 3.151400000000332e-05, 3.137500000000015e-05, 3.179200000000271e-05, 3.141699999999886e-05, 3.1444999999998e-05, 3.141699999999886e-05, 3.198599999999774e-05, 3.197200000000511e-05, 3.201399999999688e-05, 3.155600000000203e-05, 3.204200000000296e-05, 3.21250000000009e-05, 3.116699999999861e-05, 3.136100000000058e-05, 3.14170000000058e-05, 3.211100000000133e-05, 3.204100000000348e-05, 3.16250000000004e-05, 3.148600000000418e-05, 3.137500000000015e-05, 3.1818999999995434e-05, 3.1568999999995184e-05, 3.1540999999996044e-05, 3.155500000000255e-05, 3.1750000000004e-05, 3.159700000000126e-05, 3.200000000000425e-05, 3.204199999999602e-05, 3.201399999999688e-05, 3.194400000000597e-05, 3.138899999999972e-05, 3.186100000000108e-05, 3.148599999999724e-05, 3.12779999999957e-05, 3.205599999999559e-05, 3.133300000000144e-05, 3.173599999999749e-05, 3.150000000000375e-05]</msg>
<status status="PASS" starttime="20201112 12:42:56.996" endtime="20201112 12:42:57.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.984" endtime="20201112 12:42:57.003"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.010" endtime="20201112 12:42:57.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:57.018" endtime="20201112 12:42:57.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.014" endtime="20201112 12:42:57.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.005" endtime="20201112 12:42:57.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.462" endtime="20201112 12:42:57.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.461" endtime="20201112 12:42:57.045"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.071" endtime="20201112 12:42:57.091"></status>
</kw>
<msg timestamp="20201112 12:42:57.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.068" endtime="20201112 12:42:57.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.094" endtime="20201112 12:42:57.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.101" endtime="20201112 12:42:57.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.060" endtime="20201112 12:42:57.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.052" endtime="20201112 12:42:57.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.126" endtime="20201112 12:42:57.485"></status>
</kw>
<msg timestamp="20201112 12:42:57.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046529681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046562417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:57.123" endtime="20201112 12:42:57.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046529681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046562417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:57.495" endtime="20201112 12:42:57.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.515" endtime="20201112 12:42:57.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.115" endtime="20201112 12:42:57.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.110" endtime="20201112 12:42:57.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:57.534" level="INFO">${RESULT} = [{'time': 0.046562417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.273599999999849e-05, 'source_diff': 3.273599999999849e-05}, {'time': 0.046601403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:57.524" endtime="20201112 12:42:57.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:57.566" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:57.536" endtime="20201112 12:42:57.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.578" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 12:42:57.575" endtime="20201112 12:42:57.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.584" level="INFO">VALUE: [3.273599999999849e-05, 3.259700000000226e-05, 3.311100000000233e-05, 3.288900000000122e-05, 3.276399999999763e-05, 3.269499999999925e-05, 3.287500000000165e-05, 3.238800000000125e-05, 3.258300000000269e-05, 3.294400000000003e-05, 3.2388999999993784e-05, 3.258300000000269e-05, 3.2610999999994894e-05, 3.22500000000045e-05, 3.287500000000165e-05, 3.276399999999763e-05, 3.2346999999995074e-05, 3.297199999999917e-05, 3.2568999999996184e-05, 3.26250000000014e-05, 3.279200000000371e-05, 3.22500000000045e-05, 3.30700000000031e-05, 3.295899999999907e-05, 3.281999999999591e-05, 3.258400000000217e-05, 3.259800000000174e-05, 3.304200000000396e-05, 3.270799999999935e-05, 3.238900000000072e-05, 3.279199999999677e-05, 3.220899999999832e-05, 3.276399999999763e-05, 3.241600000000039e-05, 3.238800000000125e-05, 3.2582999999995754e-05, 3.3054999999997114e-05, 3.216600000000014e-05, 3.3068999999996684e-05, 3.2346999999995074e-05, 3.287500000000165e-05, 3.273600000000543e-05, 3.266700000000011e-05, 3.23050000000033e-05, 3.223599999999799e-05, 3.306999999999616e-05, 3.249999999999781e-05, 3.2444999999999e-05, 3.220799999999885e-05, 3.26380000000015e-05]</msg>
<status status="PASS" starttime="20201112 12:42:57.580" endtime="20201112 12:42:57.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.568" endtime="20201112 12:42:57.587"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.594" endtime="20201112 12:42:57.597"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:57.603" endtime="20201112 12:42:57.625"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.598" endtime="20201112 12:42:57.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.589" endtime="20201112 12:42:57.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.047" endtime="20201112 12:42:57.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.046" endtime="20201112 12:42:57.629"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.654" endtime="20201112 12:42:57.674"></status>
</kw>
<msg timestamp="20201112 12:42:57.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.650" endtime="20201112 12:42:57.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.677" endtime="20201112 12:42:57.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.684" endtime="20201112 12:42:57.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.643" endtime="20201112 12:42:57.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.636" endtime="20201112 12:42:57.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.711" endtime="20201112 12:42:58.077"></status>
</kw>
<msg timestamp="20201112 12:42:58.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04446125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044495194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:57.707" endtime="20201112 12:42:58.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04446125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044495194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:58.087" endtime="20201112 12:42:58.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.107" endtime="20201112 12:42:58.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.700" endtime="20201112 12:42:58.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.695" endtime="20201112 12:42:58.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:58.126" level="INFO">${RESULT} = [{'time': 0.044495194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.394400000000103e-05, 'source_diff': 3.394400000000103e-05}, {'time': 0.044536153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:58.116" endtime="20201112 12:42:58.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:58.158" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:58.128" endtime="20201112 12:42:58.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.170" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 12:42:58.167" endtime="20201112 12:42:58.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.176" level="INFO">VALUE: [3.394400000000103e-05, 3.401399999999888e-05, 3.319499999999975e-05, 3.351399999999838e-05, 3.322199999999942e-05, 3.337500000000215e-05, 3.393100000000093e-05, 3.337500000000215e-05, 3.3832999999997004e-05, 3.3610999999995894e-05, 3.3540999999998045e-05, 3.334700000000301e-05, 3.343000000000096e-05, 3.36250000000024e-05, 3.338900000000172e-05, 3.391600000000189e-05, 3.3818999999997434e-05, 3.3624999999995464e-05, 3.356900000000412e-05, 3.372199999999992e-05, 3.363900000000197e-05, 3.338900000000172e-05, 3.4096999999996824e-05, 3.333399999999598e-05, 3.39580000000006e-05, 3.387500000000265e-05, 3.413900000000247e-05, 3.376399999999863e-05, 3.331999999999641e-05, 3.363900000000197e-05, 3.393100000000093e-05, 3.334800000000249e-05, 3.3638999999995034e-05, 3.393100000000093e-05, 3.322199999999942e-05, 3.342999999999402e-05, 3.3610999999995894e-05, 3.351399999999838e-05, 3.3596999999996324e-05, 3.4068999999997684e-05, 3.337500000000215e-05, 3.41250000000029e-05, 3.367999999999427e-05, 3.330599999999684e-05, 3.329199999999727e-05, 3.400000000000625e-05, 3.397200000000017e-05, 3.341700000000086e-05, 3.368100000000068e-05, 3.34580000000001e-05]</msg>
<status status="PASS" starttime="20201112 12:42:58.172" endtime="20201112 12:42:58.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.160" endtime="20201112 12:42:58.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.187" endtime="20201112 12:42:58.190"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:58.196" endtime="20201112 12:42:58.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.191" endtime="20201112 12:42:58.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.182" endtime="20201112 12:42:58.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.632" endtime="20201112 12:42:58.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.630" endtime="20201112 12:42:58.223"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.247" endtime="20201112 12:42:58.267"></status>
</kw>
<msg timestamp="20201112 12:42:58.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.243" endtime="20201112 12:42:58.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.271" endtime="20201112 12:42:58.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.278" endtime="20201112 12:42:58.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.236" endtime="20201112 12:42:58.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.229" endtime="20201112 12:42:58.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.304" endtime="20201112 12:42:58.654"></status>
</kw>
<msg timestamp="20201112 12:42:58.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044908806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044943306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:58.301" endtime="20201112 12:42:58.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044908806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044943306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:58.658" endtime="20201112 12:42:58.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.667" endtime="20201112 12:42:58.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.291" endtime="20201112 12:42:58.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.286" endtime="20201112 12:42:58.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:58.676" level="INFO">${RESULT} = [{'time': 0.044943306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.449999999999981e-05, 'source_diff': 3.449999999999981e-05}, {'time': 0.044987319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:58.671" endtime="20201112 12:42:58.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:58.691" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:58.677" endtime="20201112 12:42:58.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.696" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 12:42:58.695" endtime="20201112 12:42:58.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.699" level="INFO">VALUE: [3.449999999999981e-05, 3.4276999999999225e-05, 3.50700000000051e-05, 3.5096999999997824e-05, 3.4512999999999905e-05, 3.420800000000085e-05, 3.422200000000042e-05, 3.441600000000239e-05, 3.4402999999995354e-05, 3.418000000000171e-05, 3.491600000000289e-05, 3.433300000000444e-05, 3.469400000000178e-05, 3.497200000000117e-05, 3.452799999999895e-05, 3.5138999999996534e-05, 3.441700000000186e-05, 3.49450000000015e-05, 3.475000000000006e-05, 3.4416999999994924e-05, 3.480599999999834e-05, 3.424999999999956e-05, 3.437500000000315e-05, 3.481999999999791e-05, 3.424999999999956e-05, 3.463900000000297e-05, 3.436200000000306e-05, 3.429200000000521e-05, 3.470900000000082e-05, 3.4624999999996464e-05, 3.449999999999981e-05, 3.5124999999996964e-05, 3.434700000000401e-05, 3.4540999999999045e-05, 3.443000000000196e-05, 3.4388999999995784e-05, 3.418000000000171e-05, 3.418000000000171e-05, 3.501399999999988e-05, 3.4596999999997324e-05, 3.5096999999997824e-05, 3.475000000000006e-05, 3.502799999999945e-05, 3.513900000000347e-05, 3.4596999999997324e-05, 3.465300000000254e-05, 3.501399999999988e-05, 3.504199999999902e-05, 3.488900000000322e-05, 3.5138999999996534e-05]</msg>
<status status="PASS" starttime="20201112 12:42:58.698" endtime="20201112 12:42:58.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.692" endtime="20201112 12:42:58.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.704" endtime="20201112 12:42:58.705"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:58.708" endtime="20201112 12:42:58.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.706" endtime="20201112 12:42:58.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.702" endtime="20201112 12:42:58.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.225" endtime="20201112 12:42:58.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.224" endtime="20201112 12:42:58.730"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.741" endtime="20201112 12:42:58.757"></status>
</kw>
<msg timestamp="20201112 12:42:58.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.739" endtime="20201112 12:42:58.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.759" endtime="20201112 12:42:58.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.762" endtime="20201112 12:42:58.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.736" endtime="20201112 12:42:58.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.733" endtime="20201112 12:42:58.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.774" endtime="20201112 12:42:59.061"></status>
</kw>
<msg timestamp="20201112 12:42:59.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025285889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025321611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:58.772" endtime="20201112 12:42:59.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025285889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025321611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.066" endtime="20201112 12:42:59.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.074" endtime="20201112 12:42:59.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.769" endtime="20201112 12:42:59.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.766" endtime="20201112 12:42:59.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:59.083" level="INFO">${RESULT} = [{'time': 0.025321611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.572200000000192e-05, 'source_diff': 3.572200000000192e-05}, {'time': 0.025364597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:59.079" endtime="20201112 12:42:59.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:59.097" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:59.084" endtime="20201112 12:42:59.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.102" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 12:42:59.101" endtime="20201112 12:42:59.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.105" level="INFO">VALUE: [3.572200000000192e-05, 3.5389000000000254e-05, 3.5903000000000324e-05, 3.57780000000002e-05, 3.599999999999784e-05, 3.5846999999998574e-05, 3.6082999999999255e-05, 3.5375000000000684e-05, 3.581999999999891e-05, 3.5375000000000684e-05, 3.5597000000001794e-05, 3.569500000000225e-05, 3.52779999999997e-05, 3.550000000000081e-05, 3.6125000000001434e-05, 3.570900000000182e-05, 3.593099999999946e-05, 3.59719999999987e-05, 3.598700000000121e-05, 3.6041000000000545e-05, 3.5375000000000684e-05, 3.605599999999959e-05, 3.5318999999998935e-05, 3.6082999999999255e-05, 3.568000000000321e-05, 3.5653000000000074e-05, 3.5583000000002224e-05, 3.522200000000142e-05, 3.5416999999999393e-05, 3.6138999999997534e-05, 3.5445000000002e-05, 3.5666999999999643e-05, 3.5653000000000074e-05, 3.5375000000000684e-05, 3.54580000000021e-05, 3.522199999999795e-05, 3.541700000000286e-05, 3.5846999999998574e-05, 3.593099999999946e-05, 3.568099999999921e-05, 3.6138999999997534e-05, 3.522300000000089e-05, 3.518000000000271e-05, 3.5611000000001364e-05, 3.523600000000099e-05, 3.5833000000002474e-05, 3.597200000000217e-05, 3.526400000000013e-05, 3.519399999999881e-05, 3.5554999999999615e-05]</msg>
<status status="PASS" starttime="20201112 12:42:59.104" endtime="20201112 12:42:59.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.098" endtime="20201112 12:42:59.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.110" endtime="20201112 12:42:59.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:59.114" endtime="20201112 12:42:59.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.112" endtime="20201112 12:42:59.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.108" endtime="20201112 12:42:59.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.731" endtime="20201112 12:42:59.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.730" endtime="20201112 12:42:59.136"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.147" endtime="20201112 12:42:59.163"></status>
</kw>
<msg timestamp="20201112 12:42:59.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.145" endtime="20201112 12:42:59.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.165" endtime="20201112 12:42:59.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.168" endtime="20201112 12:42:59.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.142" endtime="20201112 12:42:59.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.139" endtime="20201112 12:42:59.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.179" endtime="20201112 12:42:59.479"></status>
</kw>
<msg timestamp="20201112 12:42:59.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025215236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025251986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.178" endtime="20201112 12:42:59.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025215236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025251986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.489" endtime="20201112 12:42:59.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.509" endtime="20201112 12:42:59.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.174" endtime="20201112 12:42:59.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.172" endtime="20201112 12:42:59.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:59.528" level="INFO">${RESULT} = [{'time': 0.025251986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.675000000000206e-05, 'source_diff': 3.675000000000206e-05}, {'time': 0.025298986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:59.518" endtime="20201112 12:42:59.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:59.560" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:59.530" endtime="20201112 12:42:59.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.572" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 12:42:59.569" endtime="20201112 12:42:59.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.578" level="INFO">VALUE: [3.675000000000206e-05, 3.643000000000049e-05, 3.619399999999981e-05, 3.6846999999999575e-05, 3.619399999999981e-05, 3.6917000000000894e-05, 3.622199999999895e-05, 3.6332999999999505e-05, 3.694500000000003e-05, 3.6430999999999963e-05, 3.6625000000001934e-05, 3.625000000000156e-05, 3.650000000000181e-05, 3.65979999999988e-05, 3.663800000000203e-05, 3.695800000000013e-05, 3.6889000000001754e-05, 3.694400000000056e-05, 3.7069000000000685e-05, 3.6611000000002364e-05, 3.651400000000138e-05, 3.6417000000000394e-05, 3.623600000000199e-05, 3.651399999999791e-05, 3.6374999999998214e-05, 3.6167000000000143e-05, 3.6833000000000005e-05, 3.634799999999855e-05, 3.629200000000027e-05, 3.619500000000275e-05, 3.652800000000095e-05, 3.656999999999966e-05, 3.6167000000000143e-05, 3.6417000000000394e-05, 3.651400000000138e-05, 3.651399999999791e-05, 3.680600000000034e-05, 3.6417000000000394e-05, 3.651399999999791e-05, 3.69719999999997e-05, 3.61520000000011e-05, 3.6846999999999575e-05, 3.62780000000007e-05, 3.645799999999963e-05, 3.625000000000156e-05, 3.672199999999945e-05, 3.643000000000049e-05, 3.672199999999945e-05, 3.679200000000077e-05, 3.7124999999998964e-05]</msg>
<status status="PASS" starttime="20201112 12:42:59.574" endtime="20201112 12:42:59.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.562" endtime="20201112 12:42:59.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.588" endtime="20201112 12:42:59.591"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:59.597" endtime="20201112 12:42:59.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.592" endtime="20201112 12:42:59.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.583" endtime="20201112 12:42:59.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.137" endtime="20201112 12:42:59.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.136" endtime="20201112 12:42:59.624"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.648" endtime="20201112 12:42:59.668"></status>
</kw>
<msg timestamp="20201112 12:42:59.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.644" endtime="20201112 12:42:59.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.672" endtime="20201112 12:42:59.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.679" endtime="20201112 12:42:59.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.637" endtime="20201112 12:42:59.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.630" endtime="20201112 12:42:59.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.704" endtime="20201112 12:43:00.064"></status>
</kw>
<msg timestamp="20201112 12:43:00.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044527833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044565306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.700" endtime="20201112 12:43:00.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044527833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044565306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:00.074" endtime="20201112 12:43:00.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.094" endtime="20201112 12:43:00.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.692" endtime="20201112 12:43:00.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.687" endtime="20201112 12:43:00.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:00.114" level="INFO">${RESULT} = [{'time': 0.044565306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7472999999996204e-05, 'source_diff': 3.7472999999996204e-05}, {'time': 0.044618306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:00.105" endtime="20201112 12:43:00.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:00.147" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:00.117" endtime="20201112 12:43:00.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.158" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 12:43:00.156" endtime="20201112 12:43:00.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.164" level="INFO">VALUE: [3.7472999999996204e-05, 3.743100000000443e-05, 3.7374999999999214e-05, 3.76659999999987e-05, 3.7624999999999464e-05, 3.8138999999999534e-05, 3.7555000000001615e-05, 3.723600000000299e-05, 3.7874999999999714e-05, 3.7347000000000075e-05, 3.7554999999994676e-05, 3.7583000000000755e-05, 3.7888999999999284e-05, 3.729200000000127e-05, 3.775000000000306e-05, 3.741700000000486e-05, 3.79859999999968e-05, 3.7416999999997924e-05, 3.7888999999999284e-05, 3.7833000000001005e-05, 3.783400000000048e-05, 3.7458999999996634e-05, 3.7597000000000325e-05, 3.783400000000048e-05, 3.750000000000281e-05, 3.7569000000001185e-05, 3.795799999999766e-05, 3.751400000000238e-05, 3.79580000000046e-05, 3.724999999999562e-05, 3.8124999999999964e-05, 3.8069000000001685e-05, 3.797200000000417e-05, 3.769400000000478e-05, 3.7944999999997564e-05, 3.7360999999999644e-05, 3.8110999999993456e-05, 3.74580000000041e-05, 3.729200000000127e-05, 3.79859999999968e-05, 3.7360999999999644e-05, 3.772199999999698e-05, 3.7902999999998854e-05, 3.807000000000116e-05, 3.7874999999999714e-05, 3.752800000000195e-05, 3.7194999999996814e-05, 3.740300000000529e-05, 3.738799999999931e-05, 3.8054999999995176e-05]</msg>
<status status="PASS" starttime="20201112 12:43:00.161" endtime="20201112 12:43:00.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.149" endtime="20201112 12:43:00.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.175" endtime="20201112 12:43:00.177"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:00.183" endtime="20201112 12:43:00.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.179" endtime="20201112 12:43:00.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.170" endtime="20201112 12:43:00.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.626" endtime="20201112 12:43:00.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.625" endtime="20201112 12:43:00.210"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.235" endtime="20201112 12:43:00.254"></status>
</kw>
<msg timestamp="20201112 12:43:00.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.231" endtime="20201112 12:43:00.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.258" endtime="20201112 12:43:00.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.264" endtime="20201112 12:43:00.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.223" endtime="20201112 12:43:00.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.217" endtime="20201112 12:43:00.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.289" endtime="20201112 12:43:00.650"></status>
</kw>
<msg timestamp="20201112 12:43:00.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044478625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044517347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:00.286" endtime="20201112 12:43:00.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044478625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044517347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:00.661" endtime="20201112 12:43:00.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.681" endtime="20201112 12:43:00.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.278" endtime="20201112 12:43:00.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.273" endtime="20201112 12:43:00.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:00.701" level="INFO">${RESULT} = [{'time': 0.044517347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.872199999999798e-05, 'source_diff': 3.872199999999798e-05}, {'time': 0.044564319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:00.691" endtime="20201112 12:43:00.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:00.736" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:00.703" endtime="20201112 12:43:00.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.748" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 12:43:00.745" endtime="20201112 12:43:00.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.753" level="INFO">VALUE: [3.872199999999798e-05, 3.897199999999823e-05, 3.867999999999927e-05, 3.8124999999999964e-05, 3.8875000000000715e-05, 3.8611000000000895e-05, 3.8554999999995676e-05, 3.879200000000277e-05, 3.898600000000474e-05, 3.8416999999998924e-05, 3.8930999999998994e-05, 3.873600000000449e-05, 3.8666999999999174e-05, 3.9153000000000104e-05, 3.8361000000000645e-05, 3.8402999999999354e-05, 3.830600000000184e-05, 3.882000000000191e-05, 3.84859999999973e-05, 3.8889000000000284e-05, 3.908399999999479e-05, 3.858399999999429e-05, 3.894400000000603e-05, 3.848600000000424e-05, 3.877799999999626e-05, 3.901400000000388e-05, 3.823600000000399e-05, 3.8347000000001075e-05, 3.8375000000000214e-05, 3.8360999999993706e-05, 3.895799999999866e-05, 3.851399999999644e-05, 3.8375000000000214e-05, 3.9096999999994886e-05, 3.9139000000000534e-05, 3.882000000000191e-05, 3.8833000000002005e-05, 3.899999999999737e-05, 3.834799999999361e-05, 3.895799999999866e-05, 3.855599999999515e-05, 3.8972999999997704e-05, 3.869400000000578e-05, 3.870900000000482e-05, 3.888800000000081e-05, 3.867999999999927e-05, 3.8569000000002185e-05, 3.847199999999773e-05, 3.897199999999823e-05, 3.87780000000032e-05]</msg>
<status status="PASS" starttime="20201112 12:43:00.750" endtime="20201112 12:43:00.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.738" endtime="20201112 12:43:00.757"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.764" endtime="20201112 12:43:00.766"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:00.773" endtime="20201112 12:43:00.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.768" endtime="20201112 12:43:00.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.759" endtime="20201112 12:43:00.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.212" endtime="20201112 12:43:00.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.211" endtime="20201112 12:43:00.799"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.823" endtime="20201112 12:43:00.844"></status>
</kw>
<msg timestamp="20201112 12:43:00.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.820" endtime="20201112 12:43:00.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.848" endtime="20201112 12:43:00.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.854" endtime="20201112 12:43:00.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.812" endtime="20201112 12:43:00.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.806" endtime="20201112 12:43:00.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.880" endtime="20201112 12:43:01.239"></status>
</kw>
<msg timestamp="20201112 12:43:01.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044292528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044332722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:00.876" endtime="20201112 12:43:01.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044292528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044332722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:01.249" endtime="20201112 12:43:01.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.269" endtime="20201112 12:43:01.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.868" endtime="20201112 12:43:01.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.863" endtime="20201112 12:43:01.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:01.288" level="INFO">${RESULT} = [{'time': 0.044332722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.019400000000034e-05, 'source_diff': 4.019400000000034e-05}, {'time': 0.044378694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:01.279" endtime="20201112 12:43:01.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:01.322" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:01.291" endtime="20201112 12:43:01.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.334" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 12:43:01.332" endtime="20201112 12:43:01.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.340" level="INFO">VALUE: [4.019400000000034e-05, 3.9861000000002145e-05, 3.9888999999994346e-05, 3.977799999999726e-05, 3.941600000000045e-05, 3.972200000000592e-05, 4.0040999999997606e-05, 3.94580000000061e-05, 3.9875000000001715e-05, 3.976399999999769e-05, 4.001399999999794e-05, 4.0110999999995456e-05, 3.9638999999994096e-05, 3.956999999999572e-05, 3.9361000000001645e-05, 3.973599999999855e-05, 3.999999999999837e-05, 4.002799999999751e-05, 3.983399999999554e-05, 3.9153000000000104e-05, 4.005599999999665e-05, 4.004200000000402e-05, 3.940200000000088e-05, 3.947199999999873e-05, 3.999999999999837e-05, 3.9375000000001215e-05, 3.9318999999995996e-05, 3.9653000000000604e-05, 3.920800000000585e-05, 3.993000000000052e-05, 3.976399999999769e-05, 3.994400000000009e-05, 3.9653000000000604e-05, 3.920799999999891e-05, 3.983400000000248e-05, 3.9166999999999674e-05, 3.945799999999916e-05, 3.997199999999923e-05, 3.9653000000000604e-05, 3.9194999999998814e-05, 3.951399999999744e-05, 3.9194999999998814e-05, 4.002799999999751e-05, 3.9458999999998634e-05, 3.9290999999996856e-05, 3.920800000000585e-05, 3.9804999999996926e-05, 3.9846999999995636e-05, 3.924999999999762e-05, 3.9875000000001715e-05]</msg>
<status status="PASS" starttime="20201112 12:43:01.336" endtime="20201112 12:43:01.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.324" endtime="20201112 12:43:01.343"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.350" endtime="20201112 12:43:01.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:01.359" endtime="20201112 12:43:01.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.354" endtime="20201112 12:43:01.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.345" endtime="20201112 12:43:01.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.801" endtime="20201112 12:43:01.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.800" endtime="20201112 12:43:01.386"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.410" endtime="20201112 12:43:01.430"></status>
</kw>
<msg timestamp="20201112 12:43:01.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.406" endtime="20201112 12:43:01.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.434" endtime="20201112 12:43:01.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.441" endtime="20201112 12:43:01.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.399" endtime="20201112 12:43:01.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.392" endtime="20201112 12:43:01.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.466" endtime="20201112 12:43:01.838"></status>
</kw>
<msg timestamp="20201112 12:43:01.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044467639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044508361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:01.462" endtime="20201112 12:43:01.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044467639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044508361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:01.848" endtime="20201112 12:43:01.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.868" endtime="20201112 12:43:01.872"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.454" endtime="20201112 12:43:01.874"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.449" endtime="20201112 12:43:01.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:01.887" level="INFO">${RESULT} = [{'time': 0.044508361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.072199999999998e-05, 'source_diff': 4.072199999999998e-05}, {'time': 0.044564319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:01.877" endtime="20201112 12:43:01.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:01.921" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:01.889" endtime="20201112 12:43:01.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.933" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 12:43:01.931" endtime="20201112 12:43:01.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.939" level="INFO">VALUE: [4.072199999999998e-05, 4.022199999999948e-05, 4.094400000000109e-05, 4.01939999999934e-05, 4.1026999999999036e-05, 4.0347000000003075e-05, 4.051399999999844e-05, 4.052800000000495e-05, 4.0361000000002645e-05, 4.102800000000545e-05, 4.051400000000538e-05, 4.0167000000000674e-05, 4.099999999999937e-05, 4.0874999999995776e-05, 4.0667000000001174e-05, 4.0639000000002035e-05, 4.022199999999948e-05, 4.058399999999629e-05, 4.104199999999808e-05, 4.081999999999697e-05, 4.0875000000002715e-05, 4.0931000000000994e-05, 4.041600000000145e-05, 4.099999999999937e-05, 4.018000000000077e-05, 4.0790999999998356e-05, 4.1082999999997316e-05, 4.0290999999997856e-05, 4.0554999999997676e-05, 4.099999999999937e-05, 4.023599999999905e-05, 4.0417000000000924e-05, 4.0931000000000994e-05, 4.0625000000002465e-05, 4.0847000000003575e-05, 4.0347000000003075e-05, 4.099999999999937e-05, 4.0374999999995276e-05, 4.105600000000459e-05, 4.102799999999851e-05, 4.020900000000632e-05, 4.094400000000109e-05, 4.05980000000028e-05, 4.076399999999869e-05, 4.044400000000059e-05, 4.0776999999998786e-05, 4.0903000000001855e-05, 4.0804999999997926e-05, 4.03059999999969e-05, 4.0333000000003505e-05]</msg>
<status status="PASS" starttime="20201112 12:43:01.936" endtime="20201112 12:43:01.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.923" endtime="20201112 12:43:01.943"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.949" endtime="20201112 12:43:01.952"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:01.958" endtime="20201112 12:43:01.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.954" endtime="20201112 12:43:01.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.944" endtime="20201112 12:43:01.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.388" endtime="20201112 12:43:01.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.387" endtime="20201112 12:43:01.985"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.009" endtime="20201112 12:43:02.030"></status>
</kw>
<msg timestamp="20201112 12:43:02.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.006" endtime="20201112 12:43:02.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.034" endtime="20201112 12:43:02.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.040" endtime="20201112 12:43:02.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.998" endtime="20201112 12:43:02.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.992" endtime="20201112 12:43:02.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.065" endtime="20201112 12:43:02.424"></status>
</kw>
<msg timestamp="20201112 12:43:02.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0447585, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0448, 'source': 'DUT_IC', 'event': 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:43:02.062" endtime="20201112 12:43:02.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0447585, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0448, 'source': 'DUT_IC', 'event': 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:43:02.434" endtime="20201112 12:43:02.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.454" endtime="20201112 12:43:02.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.054" endtime="20201112 12:43:02.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.049" endtime="20201112 12:43:02.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:02.472" level="INFO">${RESULT} = [{'time': 0.0448, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.149999999999987e-05, 'source_diff': 4.149999999999987e-05}, {'time': 0.044853028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4....</msg>
<status status="PASS" starttime="20201112 12:43:02.463" endtime="20201112 12:43:02.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:02.506" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:02.474" endtime="20201112 12:43:02.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.518" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 12:43:02.516" endtime="20201112 12:43:02.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.525" level="INFO">VALUE: [4.149999999999987e-05, 4.1597000000004325e-05, 4.1902999999995916e-05, 4.176399999999969e-05, 4.1681000000001744e-05, 4.201399999999994e-05, 4.1209000000000384e-05, 4.2068999999998746e-05, 4.1209000000000384e-05, 4.169400000000184e-05, 4.1903000000002855e-05, 4.118000000000177e-05, 4.2054999999999176e-05, 4.118000000000177e-05, 4.1818999999998496e-05, 4.150000000000681e-05, 4.149999999999987e-05, 4.194399999999515e-05, 4.1889000000003285e-05, 4.172200000000098e-05, 4.173600000000055e-05, 4.1610999999996956e-05, 4.1624999999996526e-05, 4.2138999999996596e-05, 4.175000000000012e-05, 4.1709000000000884e-05, 4.1430999999994556e-05, 4.123600000000005e-05, 4.207000000000516e-05, 4.201399999999994e-05, 4.13059999999979e-05, 4.201300000000047e-05, 4.158400000000423e-05, 4.124999999999962e-05, 4.1526999999999537e-05, 4.168000000000227e-05, 4.2082999999998316e-05, 4.123600000000005e-05, 4.151399999999944e-05, 4.145800000000116e-05, 4.19860000000008e-05, 4.147200000000073e-05, 4.1361000000003645e-05, 4.201399999999994e-05, 4.1569000000005185e-05, 4.1667000000002175e-05, 4.1389000000002785e-05, 4.1403000000002355e-05, 4.131999999999747e-05, 4.124999999999962e-05]</msg>
<status status="PASS" starttime="20201112 12:43:02.521" endtime="20201112 12:43:02.526"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.508" endtime="20201112 12:43:02.528"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.535" endtime="20201112 12:43:02.538"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:02.545" endtime="20201112 12:43:02.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.540" endtime="20201112 12:43:02.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.530" endtime="20201112 12:43:02.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.987" endtime="20201112 12:43:02.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.986" endtime="20201112 12:43:02.572"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.597" endtime="20201112 12:43:02.616"></status>
</kw>
<msg timestamp="20201112 12:43:02.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.593" endtime="20201112 12:43:02.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.620" endtime="20201112 12:43:02.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.627" endtime="20201112 12:43:02.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.585" endtime="20201112 12:43:02.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.579" endtime="20201112 12:43:02.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.652" endtime="20201112 12:43:02.986"></status>
</kw>
<msg timestamp="20201112 12:43:02.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044602069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044644847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.648" endtime="20201112 12:43:02.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044602069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044644847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.996" endtime="20201112 12:43:03.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.016" endtime="20201112 12:43:03.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.641" endtime="20201112 12:43:03.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.636" endtime="20201112 12:43:03.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:03.035" level="INFO">${RESULT} = [{'time': 0.044644847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277800000000026e-05, 'source_diff': 4.277800000000026e-05}, {'time': 0.044695833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:03.025" endtime="20201112 12:43:03.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:03.071" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:03.037" endtime="20201112 12:43:03.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.083" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 12:43:03.080" endtime="20201112 12:43:03.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.088" level="INFO">VALUE: [4.277800000000026e-05, 4.292999999999658e-05, 4.2596999999998386e-05, 4.2832999999999066e-05, 4.3111000000005395e-05, 4.2653000000003605e-05, 4.272200000000198e-05, 4.279199999999983e-05, 4.247200000000173e-05, 4.279199999999983e-05, 4.2875000000004715e-05, 4.284799999999811e-05, 4.223600000000105e-05, 4.2930999999996056e-05, 4.2931000000002995e-05, 4.2680999999995806e-05, 4.283400000000548e-05, 4.290199999999744e-05, 4.2568999999999246e-05, 4.2832999999999066e-05, 4.3055000000000176e-05, 4.2832999999999066e-05, 4.3055000000000176e-05, 4.2652999999996666e-05, 4.2568999999999246e-05, 4.2638999999997096e-05, 4.3167000000003675e-05, 4.2568999999999246e-05, 4.245800000000216e-05, 4.225000000000062e-05, 4.2972999999994765e-05, 4.3153000000004105e-05, 4.247199999999479e-05, 4.283399999999854e-05, 4.245800000000216e-05, 4.2166999999995736e-05, 4.279199999999983e-05, 4.274999999999418e-05, 4.3124999999998026e-05, 4.244399999999565e-05, 4.2290999999999856e-05, 4.315200000000463e-05, 4.251400000000044e-05, 4.241599999999651e-05, 4.2903000000003855e-05, 4.270800000000241e-05, 4.2846999999998636e-05, 4.3055000000000176e-05, 4.301400000000094e-05, 4.294400000000309e-05]</msg>
<status status="PASS" starttime="20201112 12:43:03.085" endtime="20201112 12:43:03.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.073" endtime="20201112 12:43:03.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.099" endtime="20201112 12:43:03.101"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:03.107" endtime="20201112 12:43:03.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.103" endtime="20201112 12:43:03.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.094" endtime="20201112 12:43:03.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.575" endtime="20201112 12:43:03.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.573" endtime="20201112 12:43:03.134"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.158" endtime="20201112 12:43:03.179"></status>
</kw>
<msg timestamp="20201112 12:43:03.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.155" endtime="20201112 12:43:03.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.183" endtime="20201112 12:43:03.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.189" endtime="20201112 12:43:03.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.147" endtime="20201112 12:43:03.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.141" endtime="20201112 12:43:03.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.214" endtime="20201112 12:43:03.580"></status>
</kw>
<msg timestamp="20201112 12:43:03.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044504917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044548778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:03.211" endtime="20201112 12:43:03.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044504917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044548778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:03.591" endtime="20201112 12:43:03.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.611" endtime="20201112 12:43:03.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.203" endtime="20201112 12:43:03.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.198" endtime="20201112 12:43:03.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:03.629" level="INFO">${RESULT} = [{'time': 0.044548778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3860999999999206e-05, 'source_diff': 4.3860999999999206e-05}, {'time': 0.044603778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:03.619" endtime="20201112 12:43:03.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:03.662" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:03.631" endtime="20201112 12:43:03.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.675" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 12:43:03.671" endtime="20201112 12:43:03.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.681" level="INFO">VALUE: [4.3860999999999206e-05, 4.3874999999998776e-05, 4.3902999999997916e-05, 4.377800000000126e-05, 4.4153000000005105e-05, 4.376400000000169e-05, 4.376399999999475e-05, 4.326400000000119e-05, 4.323599999999511e-05, 4.4013999999995e-05, 4.3209000000002384e-05, 4.407000000000022e-05, 4.3318999999999996e-05, 4.379100000000136e-05, 4.3846999999999636e-05, 4.342999999999708e-05, 4.395799999999672e-05, 4.404199999999414e-05, 4.3459000000002634e-05, 4.3305000000000426e-05, 4.325000000000162e-05, 4.347200000000273e-05, 4.370800000000341e-05, 4.3666999999997236e-05, 4.326400000000119e-05, 4.404200000000108e-05, 4.3388999999997846e-05, 4.3430999999996556e-05, 4.400000000000237e-05, 4.3638999999998096e-05, 4.327800000000076e-05, 4.323600000000205e-05, 4.3805000000000927e-05, 4.4083000000000316e-05, 4.373600000000255e-05, 4.325000000000162e-05, 4.4083000000000316e-05, 4.4124999999999026e-05, 4.3569000000000246e-05, 4.3582999999999816e-05, 4.355600000000015e-05, 4.36939999999969e-05, 4.398599999999586e-05, 4.399999999999543e-05, 4.4055000000001177e-05, 4.3916999999997486e-05, 4.331999999999947e-05, 4.376400000000169e-05, 4.354200000000058e-05, 4.3944999999996626e-05]</msg>
<status status="PASS" starttime="20201112 12:43:03.678" endtime="20201112 12:43:03.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.664" endtime="20201112 12:43:03.685"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.691" endtime="20201112 12:43:03.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:03.700" endtime="20201112 12:43:03.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.696" endtime="20201112 12:43:03.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.686" endtime="20201112 12:43:03.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.136" endtime="20201112 12:43:03.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.135" endtime="20201112 12:43:03.727"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.752" endtime="20201112 12:43:03.772"></status>
</kw>
<msg timestamp="20201112 12:43:03.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.748" endtime="20201112 12:43:03.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.775" endtime="20201112 12:43:03.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.782" endtime="20201112 12:43:03.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.740" endtime="20201112 12:43:03.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.734" endtime="20201112 12:43:03.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.807" endtime="20201112 12:43:04.178"></status>
</kw>
<msg timestamp="20201112 12:43:04.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044589306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044634, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:03.804" endtime="20201112 12:43:04.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044589306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044634, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:04.188" endtime="20201112 12:43:04.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.208" endtime="20201112 12:43:04.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.796" endtime="20201112 12:43:04.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.791" endtime="20201112 12:43:04.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:04.226" level="INFO">${RESULT} = [{'time': 0.044634, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.46939999999979e-05, 'source_diff': 4.46939999999979e-05}, {'time': 0.044690972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4....</msg>
<status status="PASS" starttime="20201112 12:43:04.217" endtime="20201112 12:43:04.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:04.259" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:04.229" endtime="20201112 12:43:04.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.271" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 12:43:04.269" endtime="20201112 12:43:04.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.277" level="INFO">VALUE: [4.46939999999979e-05, 4.49860000000038e-05, 4.498599999999686e-05, 4.427800000000176e-05, 4.452800000000201e-05, 4.5152999999999166e-05, 4.495799999999772e-05, 4.499999999999643e-05, 4.4402999999998416e-05, 4.4680999999997806e-05, 4.474999999999618e-05, 4.424999999999568e-05, 4.484800000000011e-05, 4.515199999999969e-05, 4.4416999999997986e-05, 4.505600000000165e-05, 4.500000000000337e-05, 4.472200000000398e-05, 4.4305000000001427e-05, 4.4459000000003635e-05, 4.5097000000000886e-05, 4.469400000000484e-05, 4.479100000000236e-05, 4.473600000000355e-05, 4.4374999999999276e-05, 4.4610999999999956e-05, 4.451400000000244e-05, 4.495799999999772e-05, 4.4667000000005175e-05, 4.476400000000269e-05, 4.433400000000004e-05, 4.505600000000165e-05, 4.434799999999961e-05, 4.509800000000036e-05, 4.4445000000004065e-05, 4.4458999999996696e-05, 4.454200000000158e-05, 4.4333000000000566e-05, 4.508299999999438e-05, 4.499999999999643e-05, 4.495799999999772e-05, 4.4624999999999526e-05, 4.479099999999542e-05, 4.4833000000001066e-05, 4.4374999999999276e-05, 4.501400000000294e-05, 4.506899999999481e-05, 4.4638999999999096e-05, 4.4388999999998846e-05, 4.4694999999997376e-05]</msg>
<status status="PASS" starttime="20201112 12:43:04.274" endtime="20201112 12:43:04.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.261" endtime="20201112 12:43:04.282"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.288" endtime="20201112 12:43:04.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:04.297" endtime="20201112 12:43:04.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.293" endtime="20201112 12:43:04.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.284" endtime="20201112 12:43:04.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.729" endtime="20201112 12:43:04.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.728" endtime="20201112 12:43:04.324"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.349" endtime="20201112 12:43:04.369"></status>
</kw>
<msg timestamp="20201112 12:43:04.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.345" endtime="20201112 12:43:04.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.373" endtime="20201112 12:43:04.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.380" endtime="20201112 12:43:04.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.337" endtime="20201112 12:43:04.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.331" endtime="20201112 12:43:04.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.405" endtime="20201112 12:43:04.775"></status>
</kw>
<msg timestamp="20201112 12:43:04.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044860528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04490625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:04.401" endtime="20201112 12:43:04.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044860528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04490625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:04.785" endtime="20201112 12:43:04.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.805" endtime="20201112 12:43:04.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.393" endtime="20201112 12:43:04.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.388" endtime="20201112 12:43:04.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:04.824" level="INFO">${RESULT} = [{'time': 0.04490625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.572200000000498e-05, 'source_diff': 4.572200000000498e-05}, {'time': 0.044965208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:43:04.814" endtime="20201112 12:43:04.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:04.859" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:04.826" endtime="20201112 12:43:04.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.871" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 12:43:04.869" endtime="20201112 12:43:04.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.878" level="INFO">VALUE: [4.572200000000498e-05, 4.5347000000001136e-05, 4.549999999999693e-05, 4.595799999999872e-05, 4.5931000000005995e-05, 4.5597000000001386e-05, 4.6139000000000596e-05, 4.5930999999999056e-05, 4.6013999999997e-05, 4.55139999999965e-05, 4.555599999999521e-05, 4.5847000000001636e-05, 4.5153000000006105e-05, 4.5611000000000956e-05, 4.5889000000000346e-05, 4.6013999999997e-05, 4.5875000000000776e-05, 4.597199999999829e-05, 4.576399999999675e-05, 4.547199999999779e-05, 4.605500000000318e-05, 4.5569000000002247e-05, 4.572199999999804e-05, 4.532000000000147e-05, 4.522199999999754e-05, 4.545799999999822e-05, 4.5930999999999056e-05, 4.56939999999989e-05, 4.520800000000491e-05, 4.554200000000258e-05, 4.5639000000000096e-05, 4.557000000000172e-05, 4.557000000000172e-05, 4.5625000000000526e-05, 4.5902999999999916e-05, 4.555500000000268e-05, 4.5708999999997946e-05, 4.602799999999657e-05, 4.6111000000001456e-05, 4.5833000000002067e-05, 4.58190000000025e-05, 4.516599999999926e-05, 4.572199999999804e-05, 4.529199999999539e-05, 4.598599999999786e-05, 4.5430999999998556e-05, 4.605599999999571e-05, 4.544399999999865e-05, 4.5875000000000776e-05, 4.597199999999829e-05]</msg>
<status status="PASS" starttime="20201112 12:43:04.875" endtime="20201112 12:43:04.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.862" endtime="20201112 12:43:04.882"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.888" endtime="20201112 12:43:04.893"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:04.899" endtime="20201112 12:43:04.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.894" endtime="20201112 12:43:04.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.884" endtime="20201112 12:43:04.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.327" endtime="20201112 12:43:04.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.325" endtime="20201112 12:43:04.926"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.951" endtime="20201112 12:43:04.971"></status>
</kw>
<msg timestamp="20201112 12:43:04.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.947" endtime="20201112 12:43:04.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.974" endtime="20201112 12:43:04.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.981" endtime="20201112 12:43:04.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.939" endtime="20201112 12:43:04.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.933" endtime="20201112 12:43:04.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.006" endtime="20201112 12:43:05.377"></status>
</kw>
<msg timestamp="20201112 12:43:05.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044721542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044768514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.003" endtime="20201112 12:43:05.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044721542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044768514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.387" endtime="20201112 12:43:05.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.406" endtime="20201112 12:43:05.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.995" endtime="20201112 12:43:05.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.990" endtime="20201112 12:43:05.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:05.425" level="INFO">${RESULT} = [{'time': 0.044768514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.697199999999929e-05, 'source_diff': 4.697199999999929e-05}, {'time': 0.0448325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:05.415" endtime="20201112 12:43:05.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:05.458" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:05.427" endtime="20201112 12:43:05.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.469" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 12:43:05.467" endtime="20201112 12:43:05.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.475" level="INFO">VALUE: [4.697199999999929e-05, 4.681899999999656e-05, 4.68190000000035e-05, 4.705599999999671e-05, 4.627799999999682e-05, 4.699999999999843e-05, 4.632000000000247e-05, 4.6625000000001526e-05, 4.657000000000272e-05, 4.6180999999999306e-05, 4.630599999999596e-05, 4.674999999999818e-05, 4.706899999999681e-05, 4.627799999999682e-05, 4.7097000000002887e-05, 4.6375000000001276e-05, 4.677799999999732e-05, 4.698599999999886e-05, 4.648599999999836e-05, 4.6903000000000916e-05, 4.623599999999811e-05, 4.652799999999707e-05, 4.677800000000426e-05, 4.6389000000000846e-05, 4.6667000000000236e-05, 4.6166999999999736e-05, 4.677799999999732e-05, 4.626399999999725e-05, 4.6375000000001276e-05, 4.702800000000451e-05, 4.676299999999828e-05, 4.647199999999879e-05, 4.6625000000001526e-05, 4.7013999999998e-05, 4.6583000000002817e-05, 4.709699999999595e-05, 4.68469999999957e-05, 4.620799999999897e-05, 4.698599999999886e-05, 4.697199999999929e-05, 4.7139000000001596e-05, 4.655599999999621e-05, 4.647199999999879e-05, 4.624999999999768e-05, 4.6583000000002817e-05, 4.652700000000454e-05, 4.6708999999998946e-05, 4.65269999999976e-05, 4.6375000000001276e-05, 4.706900000000375e-05]</msg>
<status status="PASS" starttime="20201112 12:43:05.472" endtime="20201112 12:43:05.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.460" endtime="20201112 12:43:05.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.486" endtime="20201112 12:43:05.488"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:05.494" endtime="20201112 12:43:05.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.490" endtime="20201112 12:43:05.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.481" endtime="20201112 12:43:05.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.928" endtime="20201112 12:43:05.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.927" endtime="20201112 12:43:05.525"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.549" endtime="20201112 12:43:05.571"></status>
</kw>
<msg timestamp="20201112 12:43:05.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.546" endtime="20201112 12:43:05.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.574" endtime="20201112 12:43:05.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.581" endtime="20201112 12:43:05.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.538" endtime="20201112 12:43:05.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.532" endtime="20201112 12:43:05.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.606" endtime="20201112 12:43:05.977"></status>
</kw>
<msg timestamp="20201112 12:43:05.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045278403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045326208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.603" endtime="20201112 12:43:05.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045278403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045326208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.988" endtime="20201112 12:43:06.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.003" endtime="20201112 12:43:06.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.595" endtime="20201112 12:43:06.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.590" endtime="20201112 12:43:06.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:06.012" level="INFO">${RESULT} = [{'time': 0.045326208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.780499999999799e-05, 'source_diff': 4.780499999999799e-05}, {'time': 0.045391194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:06.008" endtime="20201112 12:43:06.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:06.026" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:06.013" endtime="20201112 12:43:06.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.032" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 12:43:06.031" endtime="20201112 12:43:06.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.035" level="INFO">VALUE: [4.780499999999799e-05, 4.798599999999986e-05, 4.733299999999663e-05, 4.765200000000219e-05, 4.740200000000194e-05, 4.805599999999771e-05, 4.723599999999911e-05, 4.766600000000176e-05, 4.8139000000002596e-05, 4.756899999999731e-05, 4.757000000000372e-05, 4.7875000000002776e-05, 4.774999999999918e-05, 4.727799999999782e-05, 4.772200000000004e-05, 4.759799999999592e-05, 4.755599999999721e-05, 4.793099999999412e-05, 4.7667000000001236e-05, 4.726400000000519e-05, 4.754199999999764e-05, 4.780500000000493e-05, 4.716600000000126e-05, 4.744400000000065e-05, 4.7403000000001416e-05, 4.777800000000526e-05, 4.783299999999713e-05, 4.747199999999979e-05, 4.736099999999577e-05, 4.801400000000594e-05, 4.740299999999448e-05, 4.756999999999678e-05, 4.770800000000047e-05, 4.747199999999979e-05, 4.7236999999998586e-05, 4.7237000000005525e-05, 4.787499999999584e-05, 4.804199999999814e-05, 4.758400000000329e-05, 4.786200000000268e-05, 4.741600000000151e-05, 4.80269999999991e-05, 4.7389000000001846e-05, 4.8013999999999e-05, 4.71940000000004e-05, 4.756900000000425e-05, 4.755499999999774e-05, 4.7153000000001166e-05, 4.7917000000001486e-05, 4.7875000000002776e-05]</msg>
<status status="PASS" starttime="20201112 12:43:06.033" endtime="20201112 12:43:06.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.027" endtime="20201112 12:43:06.036"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.040" endtime="20201112 12:43:06.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:06.044" endtime="20201112 12:43:06.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.042" endtime="20201112 12:43:06.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.037" endtime="20201112 12:43:06.066"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.527" endtime="20201112 12:43:06.066"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.526" endtime="20201112 12:43:06.066"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.078" endtime="20201112 12:43:06.095"></status>
</kw>
<msg timestamp="20201112 12:43:06.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.076" endtime="20201112 12:43:06.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.097" endtime="20201112 12:43:06.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.100" endtime="20201112 12:43:06.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.073" endtime="20201112 12:43:06.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.069" endtime="20201112 12:43:06.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.124" endtime="20201112 12:43:06.484"></status>
</kw>
<msg timestamp="20201112 12:43:06.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026287083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026335806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:06.120" endtime="20201112 12:43:06.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026287083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026335806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:06.494" endtime="20201112 12:43:06.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.514" endtime="20201112 12:43:06.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.113" endtime="20201112 12:43:06.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.107" endtime="20201112 12:43:06.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:06.532" level="INFO">${RESULT} = [{'time': 0.026335806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8723000000000516e-05, 'source_diff': 4.8723000000000516e-05}, {'time': 0.026391819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:06.523" endtime="20201112 12:43:06.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:06.565" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:06.535" endtime="20201112 12:43:06.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.576" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 12:43:06.574" endtime="20201112 12:43:06.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.582" level="INFO">VALUE: [4.8723000000000516e-05, 4.873600000000061e-05, 4.875000000000018e-05, 4.818000000000183e-05, 4.836100000000024e-05, 4.840299999999895e-05, 4.829099999999892e-05, 4.837499999999981e-05, 4.861100000000049e-05, 4.877799999999932e-05, 4.837499999999981e-05, 4.848599999999689e-05, 4.9153000000003166e-05, 4.897200000000129e-05, 4.826399999999925e-05, 4.881999999999803e-05, 4.8431000000001556e-05, 4.906900000000228e-05, 4.875000000000018e-05, 4.868099999999834e-05, 4.887500000000031e-05, 4.88330000000016e-05, 4.847199999999732e-05, 4.862500000000006e-05, 4.851400000000297e-05, 4.824999999999968e-05, 4.8403000000002416e-05, 4.836100000000024e-05, 4.840299999999895e-05, 4.827799999999882e-05, 4.85139999999995e-05, 4.88469999999977e-05, 4.869499999999791e-05, 4.907000000000175e-05, 4.909800000000089e-05, 4.88339999999976e-05, 4.884700000000117e-05, 4.900000000000043e-05, 4.824999999999968e-05, 4.907000000000175e-05, 4.816599999999879e-05, 4.842999999999861e-05, 4.9014e-05, 4.88330000000016e-05, 4.8653000000002666e-05, 4.905499999999924e-05, 4.845800000000122e-05, 4.911099999999752e-05, 4.91529999999997e-05, 4.830600000000143e-05]</msg>
<status status="PASS" starttime="20201112 12:43:06.579" endtime="20201112 12:43:06.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.567" endtime="20201112 12:43:06.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.593" endtime="20201112 12:43:06.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:06.602" endtime="20201112 12:43:06.625"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.598" endtime="20201112 12:43:06.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.588" endtime="20201112 12:43:06.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.067" endtime="20201112 12:43:06.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.066" endtime="20201112 12:43:06.629"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.654" endtime="20201112 12:43:06.674"></status>
</kw>
<msg timestamp="20201112 12:43:06.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.650" endtime="20201112 12:43:06.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.678" endtime="20201112 12:43:06.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.685" endtime="20201112 12:43:06.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.642" endtime="20201112 12:43:06.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.636" endtime="20201112 12:43:06.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.712" endtime="20201112 12:43:07.073"></status>
</kw>
<msg timestamp="20201112 12:43:07.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044710292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044760069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:06.709" endtime="20201112 12:43:07.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044710292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044760069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:07.083" endtime="20201112 12:43:07.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.103" endtime="20201112 12:43:07.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.701" endtime="20201112 12:43:07.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.696" endtime="20201112 12:43:07.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:07.121" level="INFO">${RESULT} = [{'time': 0.044760069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.977700000000085e-05, 'source_diff': 4.977700000000085e-05}, {'time': 0.044819097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:07.112" endtime="20201112 12:43:07.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:07.154" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:07.123" endtime="20201112 12:43:07.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.166" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 12:43:07.164" endtime="20201112 12:43:07.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.172" level="INFO">VALUE: [4.977700000000085e-05, 4.96940000000029e-05, 4.977700000000085e-05, 4.944400000000265e-05, 4.93469999999982e-05, 4.998600000000186e-05, 5.006899999999981e-05, 4.945899999999476e-05, 4.986100000000521e-05, 4.926400000000025e-05, 4.944499999999519e-05, 4.977800000000032e-05, 4.9889000000004347e-05, 4.9209000000001446e-05, 4.936100000000471e-05, 4.986199999999774e-05, 4.959799999999792e-05, 5.023600000000211e-05, 5.0137999999998184e-05, 4.9459000000001696e-05, 4.972200000000204e-05, 5.009699999999895e-05, 4.999999999999449e-05, 4.9943999999996214e-05, 5.000000000000143e-05, 4.9389000000003846e-05, 4.937499999999734e-05, 4.937499999999734e-05, 4.9901999999997504e-05, 4.986099999999827e-05, 4.987499999999784e-05, 4.9667000000003236e-05, 4.959799999999792e-05, 4.936199999999724e-05, 4.925000000000068e-05, 4.987499999999784e-05, 4.999999999999449e-05, 4.936099999999777e-05, 5.006899999999981e-05, 4.963899999999716e-05, 4.95140000000005e-05, 4.997200000000229e-05, 5.015299999999723e-05, 5.009699999999895e-05, 4.950000000000093e-05, 4.9457999999995284e-05, 4.987500000000478e-05, 4.979199999999989e-05, 4.965299999999673e-05, 4.997200000000229e-05]</msg>
<status status="PASS" starttime="20201112 12:43:07.168" endtime="20201112 12:43:07.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.156" endtime="20201112 12:43:07.175"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.182" endtime="20201112 12:43:07.185"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:07.191" endtime="20201112 12:43:07.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.186" endtime="20201112 12:43:07.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.177" endtime="20201112 12:43:07.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.631" endtime="20201112 12:43:07.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.630" endtime="20201112 12:43:07.218"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.242" endtime="20201112 12:43:07.263"></status>
</kw>
<msg timestamp="20201112 12:43:07.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.238" endtime="20201112 12:43:07.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.267" endtime="20201112 12:43:07.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.274" endtime="20201112 12:43:07.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.231" endtime="20201112 12:43:07.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.224" endtime="20201112 12:43:07.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.301" endtime="20201112 12:43:07.661"></status>
</kw>
<msg timestamp="20201112 12:43:07.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044331431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044382097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:07.297" endtime="20201112 12:43:07.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044331431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044382097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:07.671" endtime="20201112 12:43:07.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.691" endtime="20201112 12:43:07.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.287" endtime="20201112 12:43:07.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.282" endtime="20201112 12:43:07.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:07.711" level="INFO">${RESULT} = [{'time': 0.044382097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.066600000000476e-05, 'source_diff': 5.066600000000476e-05}, {'time': 0.044441014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:07.701" endtime="20201112 12:43:07.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:07.744" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:07.713" endtime="20201112 12:43:07.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.756" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 12:43:07.753" endtime="20201112 12:43:07.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.762" level="INFO">VALUE: [5.066600000000476e-05, 5.091699999999755e-05, 5.0181000000003306e-05, 5.061099999999902e-05, 5.061099999999902e-05, 5.038899999999791e-05, 5.052800000000107e-05, 5.0957999999996784e-05, 5.108399999999985e-05, 5.0151999999997754e-05, 5.098600000000286e-05, 5.095800000000372e-05, 5.0721999999996104e-05, 5.108300000000038e-05, 5.097200000000329e-05, 5.022200000000254e-05, 5.105600000000071e-05, 5.050000000000193e-05, 5.026400000000125e-05, 5.054200000000064e-05, 5.029200000000039e-05, 5.025000000000168e-05, 5.055600000000021e-05, 5.084800000000611e-05, 5.0417000000003986e-05, 5.059799999999892e-05, 5.031900000000006e-05, 5.111099999999952e-05, 5.0735999999995673e-05, 5.108300000000038e-05, 5.054100000000117e-05, 5.0429999999997144e-05, 5.0179999999996894e-05, 5.059699999999945e-05, 5.0667000000004236e-05, 5.084799999999917e-05, 5.056999999999978e-05, 5.0735999999995673e-05, 5.095800000000372e-05, 5.113899999999866e-05, 5.063899999999816e-05, 5.115299999999823e-05, 5.061199999999849e-05, 5.091600000000501e-05, 5.080600000000046e-05, 5.03469999999992e-05, 5.075000000000218e-05, 5.079100000000142e-05, 5.058299999999988e-05, 5.037499999999834e-05]</msg>
<status status="PASS" starttime="20201112 12:43:07.758" endtime="20201112 12:43:07.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.746" endtime="20201112 12:43:07.765"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.772" endtime="20201112 12:43:07.775"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:07.781" endtime="20201112 12:43:07.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.776" endtime="20201112 12:43:07.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.767" endtime="20201112 12:43:07.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.220" endtime="20201112 12:43:07.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.219" endtime="20201112 12:43:07.808"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.832" endtime="20201112 12:43:07.854"></status>
</kw>
<msg timestamp="20201112 12:43:07.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.828" endtime="20201112 12:43:07.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.858" endtime="20201112 12:43:07.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.864" endtime="20201112 12:43:07.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.821" endtime="20201112 12:43:07.870"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.815" endtime="20201112 12:43:07.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.890" endtime="20201112 12:43:08.255"></status>
</kw>
<msg timestamp="20201112 12:43:08.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044820319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044872292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:07.886" endtime="20201112 12:43:08.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044820319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044872292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:08.265" endtime="20201112 12:43:08.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.285" endtime="20201112 12:43:08.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.878" endtime="20201112 12:43:08.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.873" endtime="20201112 12:43:08.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:08.304" level="INFO">${RESULT} = [{'time': 0.044872292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1973000000003766e-05, 'source_diff': 5.1973000000003766e-05}, {'time': 0.044934278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:08.294" endtime="20201112 12:43:08.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:08.336" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:08.306" endtime="20201112 12:43:08.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.348" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 12:43:08.346" endtime="20201112 12:43:08.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.354" level="INFO">VALUE: [5.1973000000003766e-05, 5.211100000000052e-05, 5.155600000000121e-05, 5.126400000000225e-05, 5.205599999999477e-05, 5.138899999999891e-05, 5.2014000000003e-05, 5.1651999999999254e-05, 5.213899999999966e-05, 5.147200000000379e-05, 5.1165999999998324e-05, 5.137499999999934e-05, 5.179099999999548e-05, 5.161100000000002e-05, 5.15419999999947e-05, 5.140299999999848e-05, 5.159700000000045e-05, 5.1181000000004306e-05, 5.141699999999805e-05, 5.157000000000078e-05, 5.176399999999581e-05, 5.138900000000585e-05, 5.158400000000035e-05, 5.1195000000003876e-05, 5.1637999999999684e-05, 5.130600000000096e-05, 5.186100000000027e-05, 5.158300000000088e-05, 5.148600000000336e-05, 5.1665999999998824e-05, 5.13470000000002e-05, 5.193000000000558e-05, 5.183300000000113e-05, 5.1207999999997034e-05, 5.141699999999805e-05, 5.205600000000171e-05, 5.1707999999997534e-05, 5.16669999999983e-05, 5.165299999999873e-05, 5.1473000000003266e-05, 5.2179999999998894e-05, 5.197299999999683e-05, 5.130500000000149e-05, 5.197200000000429e-05, 5.1693999999997964e-05, 5.138899999999891e-05, 5.1179999999997894e-05, 5.168000000000533e-05, 5.165299999999873e-05, 5.126399999999531e-05]</msg>
<status status="PASS" starttime="20201112 12:43:08.351" endtime="20201112 12:43:08.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.338" endtime="20201112 12:43:08.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.364" endtime="20201112 12:43:08.367"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:08.373" endtime="20201112 12:43:08.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.368" endtime="20201112 12:43:08.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.359" endtime="20201112 12:43:08.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.810" endtime="20201112 12:43:08.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.809" endtime="20201112 12:43:08.400"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.424" endtime="20201112 12:43:08.445"></status>
</kw>
<msg timestamp="20201112 12:43:08.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.421" endtime="20201112 12:43:08.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.449" endtime="20201112 12:43:08.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.455" endtime="20201112 12:43:08.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.413" endtime="20201112 12:43:08.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.407" endtime="20201112 12:43:08.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.481" endtime="20201112 12:43:08.842"></status>
</kw>
<msg timestamp="20201112 12:43:08.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044633569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044685806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:08.477" endtime="20201112 12:43:08.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044633569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044685806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:08.852" endtime="20201112 12:43:08.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.873" endtime="20201112 12:43:08.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.469" endtime="20201112 12:43:08.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.464" endtime="20201112 12:43:08.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:08.891" level="INFO">${RESULT} = [{'time': 0.044685806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2237000000003586e-05, 'source_diff': 5.2237000000003586e-05}, {'time': 0.044750778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:08.882" endtime="20201112 12:43:08.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:08.924" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:08.894" endtime="20201112 12:43:08.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.936" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 12:43:08.933" endtime="20201112 12:43:08.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.942" level="INFO">VALUE: [5.2237000000003586e-05, 5.237500000000034e-05, 5.302800000000357e-05, 5.254200000000264e-05, 5.297299999999783e-05, 5.2235999999997174e-05, 5.302799999999663e-05, 5.237500000000034e-05, 5.2999999999997494e-05, 5.275000000000418e-05, 5.30270000000041e-05, 5.259700000000145e-05, 5.2263999999996313e-05, 5.262500000000059e-05, 5.276400000000375e-05, 5.26669999999993e-05, 5.315300000000023e-05, 5.273600000000461e-05, 5.3179999999999894e-05, 5.2402000000000004e-05, 5.302800000000357e-05, 5.276400000000375e-05, 5.286100000000127e-05, 5.2167000000005737e-05, 5.287500000000084e-05, 5.2763999999996813e-05, 5.251299999999709e-05, 5.243099999999862e-05, 5.302799999999663e-05, 5.254099999999623e-05, 5.2929999999999644e-05, 5.287500000000084e-05, 5.2513999999996563e-05, 5.2499999999996994e-05, 5.2221999999997604e-05, 5.311100000000152e-05, 5.225000000000368e-05, 5.2749999999997244e-05, 5.309800000000142e-05, 5.293099999999912e-05, 5.223600000000411e-05, 5.2167000000005737e-05, 5.236200000000024e-05, 5.255599999999527e-05, 5.265299999999973e-05, 5.2151999999999754e-05, 5.208300000000138e-05, 5.308299999999544e-05, 5.263900000000016e-05, 5.287500000000084e-05]</msg>
<status status="PASS" starttime="20201112 12:43:08.938" endtime="20201112 12:43:08.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.926" endtime="20201112 12:43:08.945"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.952" endtime="20201112 12:43:08.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:08.961" endtime="20201112 12:43:08.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.956" endtime="20201112 12:43:08.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.947" endtime="20201112 12:43:08.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.402" endtime="20201112 12:43:08.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.401" endtime="20201112 12:43:08.987"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.012" endtime="20201112 12:43:09.034"></status>
</kw>
<msg timestamp="20201112 12:43:09.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.008" endtime="20201112 12:43:09.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.037" endtime="20201112 12:43:09.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.044" endtime="20201112 12:43:09.048"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.000" endtime="20201112 12:43:09.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.994" endtime="20201112 12:43:09.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.069" endtime="20201112 12:43:09.410"></status>
</kw>
<msg timestamp="20201112 12:43:09.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044750319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04480425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:09.065" endtime="20201112 12:43:09.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044750319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04480425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:09.414" endtime="20201112 12:43:09.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.423" endtime="20201112 12:43:09.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.058" endtime="20201112 12:43:09.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.053" endtime="20201112 12:43:09.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:09.432" level="INFO">${RESULT} = [{'time': 0.04480425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.393100000000012e-05, 'source_diff': 5.393100000000012e-05}, {'time': 0.044874236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:43:09.428" endtime="20201112 12:43:09.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:09.446" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:09.433" endtime="20201112 12:43:09.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.452" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 12:43:09.451" endtime="20201112 12:43:09.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.455" level="INFO">VALUE: [5.393100000000012e-05, 5.337500000000134e-05, 5.3513999999997564e-05, 5.3193999999999464e-05, 5.336100000000177e-05, 5.345899999999876e-05, 5.35140000000045e-05, 5.3263999999997313e-05, 5.3209000000005446e-05, 5.373600000000561e-05, 5.35140000000045e-05, 5.404099999999773e-05, 5.3693999999999964e-05, 5.361100000000202e-05, 5.35549999999968e-05, 5.3152000000000754e-05, 5.337500000000134e-05, 5.3166000000000324e-05, 5.393100000000012e-05, 5.3471999999998854e-05, 5.381900000000356e-05, 5.3999999999998494e-05, 5.318099999999937e-05, 5.35419999999967e-05, 5.405600000000371e-05, 5.369499999999944e-05, 5.331999999999559e-05, 5.3749999999998244e-05, 5.379200000000389e-05, 5.3249999999997744e-05, 5.3971999999999354e-05, 5.3499999999997994e-05, 5.3263999999997313e-05, 5.363900000000116e-05, 5.386099999999533e-05, 5.337500000000134e-05, 5.3249999999997744e-05, 5.326400000000425e-05, 5.368099999999987e-05, 5.376400000000475e-05, 5.330599999999602e-05, 5.341700000000005e-05, 5.406999999999634e-05, 5.412500000000209e-05, 5.362500000000159e-05, 5.3707999999999534e-05, 5.379200000000389e-05, 5.352699999999766e-05, 5.3235999999998174e-05, 5.412500000000209e-05]</msg>
<status status="PASS" starttime="20201112 12:43:09.453" endtime="20201112 12:43:09.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.447" endtime="20201112 12:43:09.456"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.459" endtime="20201112 12:43:09.461"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:09.464" endtime="20201112 12:43:09.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.462" endtime="20201112 12:43:09.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.457" endtime="20201112 12:43:09.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.990" endtime="20201112 12:43:09.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.988" endtime="20201112 12:43:09.485"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.496" endtime="20201112 12:43:09.513"></status>
</kw>
<msg timestamp="20201112 12:43:09.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.495" endtime="20201112 12:43:09.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.515" endtime="20201112 12:43:09.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.518" endtime="20201112 12:43:09.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.491" endtime="20201112 12:43:09.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.488" endtime="20201112 12:43:09.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.529" endtime="20201112 12:43:09.815"></status>
</kw>
<msg timestamp="20201112 12:43:09.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025221778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025276181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:09.528" endtime="20201112 12:43:09.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025221778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025276181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:09.820" endtime="20201112 12:43:09.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.828" endtime="20201112 12:43:09.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.524" endtime="20201112 12:43:09.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.522" endtime="20201112 12:43:09.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:09.838" level="INFO">${RESULT} = [{'time': 0.025276181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.440300000000148e-05, 'source_diff': 5.440300000000148e-05}, {'time': 0.025345167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:09.833" endtime="20201112 12:43:09.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:09.860" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:09.839" endtime="20201112 12:43:09.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.872" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 12:43:09.869" endtime="20201112 12:43:09.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.878" level="INFO">VALUE: [5.440300000000148e-05, 5.4735999999999674e-05, 5.447299999999933e-05, 5.483400000000013e-05, 5.438899999999844e-05, 5.4444000000000714e-05, 5.437499999999887e-05, 5.475000000000271e-05, 5.438900000000191e-05, 5.455500000000127e-05, 5.50549999999983e-05, 5.4958000000000784e-05, 5.438900000000191e-05, 5.456900000000084e-05, 5.4221999999999604e-05, 5.430600000000049e-05, 5.494500000000069e-05, 5.516699999999833e-05, 5.419499999999994e-05, 5.505600000000124e-05, 5.495900000000026e-05, 5.451400000000203e-05, 5.4430000000001144e-05, 5.4402000000002004e-05, 5.4930000000001644e-05, 5.437499999999887e-05, 5.463900000000216e-05, 5.4958000000000784e-05, 5.4471999999999854e-05, 5.415299999999776e-05, 5.443100000000062e-05, 5.463899999999869e-05, 5.4777999999998384e-05, 5.466699999999783e-05, 5.440299999999801e-05, 5.433399999999963e-05, 5.491699999999808e-05, 5.480600000000099e-05, 5.443100000000062e-05, 5.48609999999998e-05, 5.4972000000000354e-05, 5.504099999999873e-05, 5.4471999999999854e-05, 5.4985999999999924e-05, 5.4972000000000354e-05, 5.4972000000000354e-05, 5.4430000000001144e-05, 5.48609999999998e-05, 5.4777999999998384e-05, 5.4235999999999174e-05]</msg>
<status status="PASS" starttime="20201112 12:43:09.874" endtime="20201112 12:43:09.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.862" endtime="20201112 12:43:09.881"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.888" endtime="20201112 12:43:09.891"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:09.897" endtime="20201112 12:43:09.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.892" endtime="20201112 12:43:09.921"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.883" endtime="20201112 12:43:09.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.486" endtime="20201112 12:43:09.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.486" endtime="20201112 12:43:09.924"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.948" endtime="20201112 12:43:09.969"></status>
</kw>
<msg timestamp="20201112 12:43:09.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.945" endtime="20201112 12:43:09.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.973" endtime="20201112 12:43:09.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.980" endtime="20201112 12:43:09.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.937" endtime="20201112 12:43:09.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.931" endtime="20201112 12:43:09.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.005" endtime="20201112 12:43:10.365"></status>
</kw>
<msg timestamp="20201112 12:43:10.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044626319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044682472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:10.001" endtime="20201112 12:43:10.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044626319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044682472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:10.375" endtime="20201112 12:43:10.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.395" endtime="20201112 12:43:10.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.993" endtime="20201112 12:43:10.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.988" endtime="20201112 12:43:10.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:10.417" level="INFO">${RESULT} = [{'time': 0.044682472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.615300000000323e-05, 'source_diff': 5.615300000000323e-05}, {'time': 0.044755444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:10.407" endtime="20201112 12:43:10.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:10.449" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:10.419" endtime="20201112 12:43:10.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.461" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 12:43:10.459" endtime="20201112 12:43:10.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.467" level="INFO">VALUE: [5.615300000000323e-05, 5.5179999999994955e-05, 5.579099999999948e-05, 5.5458000000001284e-05, 5.6027999999999634e-05, 5.5458000000001284e-05, 5.5513999999999564e-05, 5.516699999999486e-05, 5.613899999999672e-05, 5.583299999999819e-05, 5.538900000000291e-05, 5.5736000000000674e-05, 5.534799999999673e-05, 5.588900000000341e-05, 5.520900000000051e-05, 5.530600000000496e-05, 5.54869999999999e-05, 5.53470000000042e-05, 5.5222000000000604e-05, 5.580499999999905e-05, 5.579099999999948e-05, 5.556899999999837e-05, 5.5958000000001784e-05, 5.561099999999708e-05, 5.5943999999995275e-05, 5.563900000000316e-05, 5.530600000000496e-05, 5.530499999999855e-05, 5.538900000000291e-05, 5.613900000000366e-05, 5.526400000000625e-05, 5.5249999999999744e-05, 5.5401999999996066e-05, 5.523699999999965e-05, 5.559699999999751e-05, 5.5666000000002824e-05, 5.5222000000000604e-05, 5.583299999999819e-05, 5.5986000000000924e-05, 5.6014000000000064e-05, 5.615300000000323e-05, 5.590300000000298e-05, 5.5555999999998273e-05, 5.565299999999579e-05, 5.518099999999443e-05, 5.5986000000000924e-05, 5.5791999999998954e-05, 5.593100000000212e-05, 5.5249999999999744e-05, 5.593100000000212e-05]</msg>
<status status="PASS" starttime="20201112 12:43:10.464" endtime="20201112 12:43:10.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.451" endtime="20201112 12:43:10.470"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.477" endtime="20201112 12:43:10.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:10.486" endtime="20201112 12:43:10.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.482" endtime="20201112 12:43:10.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.472" endtime="20201112 12:43:10.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.926" endtime="20201112 12:43:10.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.925" endtime="20201112 12:43:10.513"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.537" endtime="20201112 12:43:10.558"></status>
</kw>
<msg timestamp="20201112 12:43:10.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:10.534" endtime="20201112 12:43:10.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:10.562" endtime="20201112 12:43:10.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.569" endtime="20201112 12:43:10.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.526" endtime="20201112 12:43:10.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.520" endtime="20201112 12:43:10.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.594" endtime="20201112 12:43:10.952"></status>
</kw>
<msg timestamp="20201112 12:43:10.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044522514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044579111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:10.590" endtime="20201112 12:43:10.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044522514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044579111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:10.961" endtime="20201112 12:43:10.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.980" endtime="20201112 12:43:10.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.583" endtime="20201112 12:43:10.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.577" endtime="20201112 12:43:10.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:10.999" level="INFO">${RESULT} = [{'time': 0.044579111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.659699999999851e-05, 'source_diff': 5.659699999999851e-05}, {'time': 0.044654097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:10.990" endtime="20201112 12:43:10.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:11.029" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:11.001" endtime="20201112 12:43:11.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.040" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 12:43:11.038" endtime="20201112 12:43:11.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.046" level="INFO">VALUE: [5.659699999999851e-05, 5.6777999999993445e-05, 5.634699999999826e-05, 5.6736000000001674e-05, 5.681900000000656e-05, 5.6500000000000994e-05, 5.7014000000001064e-05, 5.713900000000466e-05, 5.643100000000262e-05, 5.7000000000001494e-05, 5.7028000000000634e-05, 5.641700000000305e-05, 5.6277999999999884e-05, 5.620900000000151e-05, 5.659699999999851e-05, 5.6250000000000744e-05, 5.6500000000000994e-05, 5.638899999999697e-05, 5.65549999999998e-05, 5.7028000000000634e-05, 5.7055999999999774e-05, 5.6555999999999274e-05, 5.708299999999944e-05, 5.668100000000287e-05, 5.6514000000000564e-05, 5.695900000000226e-05, 5.691700000000355e-05, 5.711099999999858e-05, 5.661200000000449e-05, 5.65549999999998e-05, 5.7083999999998913e-05, 5.6458000000002284e-05, 5.663899999999722e-05, 5.6971999999995415e-05, 5.6986000000001924e-05, 5.6458000000002284e-05, 5.61670000000028e-05, 5.6222000000001604e-05, 5.6694000000002964e-05, 5.63749999999974e-05, 5.666699999999636e-05, 5.7069999999999343e-05, 5.7222000000002604e-05, 5.645900000000176e-05, 5.6319999999998593e-05, 5.638899999999697e-05, 5.6555999999999274e-05, 5.634699999999826e-05, 5.626300000000084e-05, 5.708299999999944e-05]</msg>
<status status="PASS" starttime="20201112 12:43:11.043" endtime="20201112 12:43:11.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.031" endtime="20201112 12:43:11.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.055" endtime="20201112 12:43:11.058"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:11.064" endtime="20201112 12:43:11.085"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.059" endtime="20201112 12:43:11.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.051" endtime="20201112 12:43:11.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.515" endtime="20201112 12:43:11.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.514" endtime="20201112 12:43:11.090"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.112" endtime="20201112 12:43:11.133"></status>
</kw>
<msg timestamp="20201112 12:43:11.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.109" endtime="20201112 12:43:11.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.137" endtime="20201112 12:43:11.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.143" endtime="20201112 12:43:11.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.102" endtime="20201112 12:43:11.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.096" endtime="20201112 12:43:11.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.166" endtime="20201112 12:43:11.500"></status>
</kw>
<msg timestamp="20201112 12:43:11.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042143958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04220175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:11.163" endtime="20201112 12:43:11.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042143958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04220175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:11.510" endtime="20201112 12:43:11.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.528" endtime="20201112 12:43:11.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.156" endtime="20201112 12:43:11.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.151" endtime="20201112 12:43:11.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:11.547" level="INFO">${RESULT} = [{'time': 0.04220175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7792000000000954e-05, 'source_diff': 5.7792000000000954e-05}, {'time': 0.042277764, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:43:11.538" endtime="20201112 12:43:11.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:11.578" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:11.549" endtime="20201112 12:43:11.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.589" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 12:43:11.586" endtime="20201112 12:43:11.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.594" level="INFO">VALUE: [5.7792000000000954e-05, 5.7319999999999593e-05, 5.8028000000001634e-05, 5.7278000000000884e-05, 5.7820000000000094e-05, 5.772300000000258e-05, 5.740299999999754e-05, 5.741700000000405e-05, 5.7652000000005255e-05, 5.7944000000004214e-05, 5.741700000000405e-05, 5.731900000000012e-05, 5.713900000000466e-05, 5.7958000000003784e-05, 5.7722000000003104e-05, 5.790299999999804e-05, 5.7806000000000524e-05, 5.73749999999984e-05, 5.761099999999908e-05, 5.763900000000516e-05, 5.811099999999958e-05, 5.719500000000294e-05, 5.7792000000000954e-05, 5.777699999999497e-05, 5.762499999999865e-05, 5.7943999999997275e-05, 5.786099999999933e-05, 5.7750000000002244e-05, 5.790300000000498e-05, 5.7443999999996775e-05, 5.740299999999754e-05, 5.790299999999804e-05, 5.76949999999965e-05, 5.78340000000066e-05, 5.7236000000002174e-05, 5.768099999999693e-05, 5.816699999999786e-05, 5.8056000000000774e-05, 5.73619999999983e-05, 5.78749999999989e-05, 5.761199999999855e-05, 5.772300000000258e-05, 5.752700000000166e-05, 5.78749999999989e-05, 5.78749999999989e-05, 5.806900000000087e-05, 5.758299999999994e-05, 5.808300000000044e-05, 5.786099999999933e-05, 5.738900000000491e-05]</msg>
<status status="PASS" starttime="20201112 12:43:11.591" endtime="20201112 12:43:11.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.579" endtime="20201112 12:43:11.602"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.608" endtime="20201112 12:43:11.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:11.616" endtime="20201112 12:43:11.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.612" endtime="20201112 12:43:11.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.603" endtime="20201112 12:43:11.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.092" endtime="20201112 12:43:11.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.091" endtime="20201112 12:43:11.642"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.665" endtime="20201112 12:43:11.685"></status>
</kw>
<msg timestamp="20201112 12:43:11.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.661" endtime="20201112 12:43:11.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.688" endtime="20201112 12:43:11.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.694" endtime="20201112 12:43:11.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.654" endtime="20201112 12:43:11.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.648" endtime="20201112 12:43:11.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.718" endtime="20201112 12:43:12.052"></status>
</kw>
<msg timestamp="20201112 12:43:12.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041659264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041718389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:11.714" endtime="20201112 12:43:12.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041659264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041718389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:12.061" endtime="20201112 12:43:12.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.080" endtime="20201112 12:43:12.085"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.707" endtime="20201112 12:43:12.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.703" endtime="20201112 12:43:12.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:12.099" level="INFO">${RESULT} = [{'time': 0.041718389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.912500000000015e-05, 'source_diff': 5.912500000000015e-05}, {'time': 0.041784361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:12.090" endtime="20201112 12:43:12.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:12.129" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:12.101" endtime="20201112 12:43:12.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.140" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 12:43:12.138" endtime="20201112 12:43:12.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.146" level="INFO">VALUE: [5.912500000000015e-05, 5.83749999999994e-05, 5.908300000000144e-05, 5.8764000000002814e-05, 5.9042000000002204e-05, 5.8722000000004104e-05, 5.891700000000555e-05, 5.8528000000002134e-05, 5.9056000000001774e-05, 5.9151999999999816e-05, 5.8848000000000233e-05, 5.876300000000334e-05, 5.8750000000003244e-05, 5.883300000000119e-05, 5.8402000000006005e-05, 5.905499999999536e-05, 5.879100000000248e-05, 5.8806000000001524e-05, 5.913899999999972e-05, 5.913899999999972e-05, 5.8334000000000163e-05, 5.8541999999994765e-05, 5.888899999999947e-05, 5.8722000000004104e-05, 5.863899999999922e-05, 5.8500000000002994e-05, 5.8820000000001094e-05, 5.8958000000004784e-05, 5.827700000000241e-05, 5.863899999999922e-05, 5.8193999999997525e-05, 5.861100000000008e-05, 5.9000000000003494e-05, 5.884700000000076e-05, 5.841699999999811e-05, 5.8485999999996485e-05, 5.8249999999995805e-05, 5.858300000000094e-05, 5.912500000000015e-05, 5.9000000000003494e-05, 5.843100000000462e-05, 5.891699999999861e-05, 5.8486000000003424e-05, 5.86670000000053e-05, 5.831900000000112e-05, 5.8708000000004534e-05, 5.906899999999493e-05, 5.829099999999504e-05, 5.8972000000004354e-05, 5.895899999999732e-05]</msg>
<status status="PASS" starttime="20201112 12:43:12.143" endtime="20201112 12:43:12.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.131" endtime="20201112 12:43:12.149"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.155" endtime="20201112 12:43:12.158"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:12.163" endtime="20201112 12:43:12.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.159" endtime="20201112 12:43:12.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.151" endtime="20201112 12:43:12.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.644" endtime="20201112 12:43:12.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.643" endtime="20201112 12:43:12.189"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.212" endtime="20201112 12:43:12.233"></status>
</kw>
<msg timestamp="20201112 12:43:12.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:12.209" endtime="20201112 12:43:12.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:12.236" endtime="20201112 12:43:12.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.242" endtime="20201112 12:43:12.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.202" endtime="20201112 12:43:12.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.196" endtime="20201112 12:43:12.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.266" endtime="20201112 12:43:12.601"></status>
</kw>
<msg timestamp="20201112 12:43:12.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041985375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042044931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:12.263" endtime="20201112 12:43:12.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041985375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042044931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:12.610" endtime="20201112 12:43:12.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.629" endtime="20201112 12:43:12.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.255" endtime="20201112 12:43:12.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.251" endtime="20201112 12:43:12.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:12.650" level="INFO">${RESULT} = [{'time': 0.042044931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9556000000002274e-05, 'source_diff': 5.9556000000002274e-05}, {'time': 0.042118917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:12.641" endtime="20201112 12:43:12.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:12.680" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:12.652" endtime="20201112 12:43:12.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.691" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 12:43:12.688" endtime="20201112 12:43:12.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.696" level="INFO">VALUE: [5.9556000000002274e-05, 5.9735999999997735e-05, 5.918099999999843e-05, 5.9194999999998e-05, 5.945899999999782e-05, 5.920899999999757e-05, 5.980500000000305e-05, 5.9638000000000746e-05, 5.9999999999997555e-05, 5.9513999999996625e-05, 5.983300000000219e-05, 5.983300000000219e-05, 6.0013999999997125e-05, 6.0000000000004494e-05, 5.9193999999998526e-05, 5.9305999999995085e-05, 5.934700000000126e-05, 5.920899999999757e-05, 5.993099999999918e-05, 6.011100000000158e-05, 6.0055999999995835e-05, 5.9584000000001414e-05, 5.9652000000000316e-05, 5.959700000000151e-05, 5.930499999999561e-05, 5.979100000000348e-05, 5.9249999999996805e-05, 5.9513999999996625e-05, 5.956899999999543e-05, 5.934700000000126e-05, 5.9999999999997555e-05, 6.0000000000004494e-05, 5.9513999999996625e-05, 5.9541999999995765e-05, 5.947299999999739e-05, 5.918100000000537e-05, 6.0112000000001053e-05, 5.9806000000002524e-05, 5.980499999999611e-05, 5.9179999999998956e-05, 5.938899999999997e-05, 6.011100000000158e-05, 5.984700000000176e-05, 5.9235999999997235e-05, 6.0070000000002344e-05, 5.936100000000083e-05, 5.938899999999997e-05, 5.9791999999996015e-05, 5.918099999999843e-05, 5.9249999999996805e-05]</msg>
<status status="PASS" starttime="20201112 12:43:12.693" endtime="20201112 12:43:12.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.682" endtime="20201112 12:43:12.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.706" endtime="20201112 12:43:12.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:12.714" endtime="20201112 12:43:12.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.709" endtime="20201112 12:43:12.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.701" endtime="20201112 12:43:12.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.191" endtime="20201112 12:43:12.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.190" endtime="20201112 12:43:12.740"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.762" endtime="20201112 12:43:12.783"></status>
</kw>
<msg timestamp="20201112 12:43:12.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:12.759" endtime="20201112 12:43:12.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:12.787" endtime="20201112 12:43:12.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.793" endtime="20201112 12:43:12.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.752" endtime="20201112 12:43:12.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.746" endtime="20201112 12:43:12.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.816" endtime="20201112 12:43:13.141"></status>
</kw>
<msg timestamp="20201112 12:43:13.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041975472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:12.813" endtime="20201112 12:43:13.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041975472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:13.145" endtime="20201112 12:43:13.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.154" endtime="20201112 12:43:13.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.806" endtime="20201112 12:43:13.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.801" endtime="20201112 12:43:13.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:13.163" level="INFO">${RESULT} = [{'time': 0.041975472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0471999999998916e-05, 'source_diff': 6.0471999999998916e-05}, {'time': 0.042051542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:13.159" endtime="20201112 12:43:13.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:13.176" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:13.164" endtime="20201112 12:43:13.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.182" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 12:43:13.180" endtime="20201112 12:43:13.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.184" level="INFO">VALUE: [6.0471999999998916e-05, 6.070899999999907e-05, 6.1028000000004634e-05, 6.0957999999999846e-05, 6.0221999999998665e-05, 6.0584000000002414e-05, 6.0305999999996085e-05, 6.0999999999998555e-05, 6.0513999999997625e-05, 6.041700000000011e-05, 6.0277999999996945e-05, 6.0430000000000206e-05, 6.0235999999998235e-05, 6.109700000000301e-05, 6.0193999999999526e-05, 6.080499999999711e-05, 6.0985999999998985e-05, 6.087499999999496e-05, 6.0944000000000276e-05, 6.0277999999996945e-05, 6.059700000000251e-05, 6.062500000000165e-05, 6.0735999999998735e-05, 6.0319999999995655e-05, 6.040300000000054e-05, 6.104099999999779e-05, 6.041700000000011e-05, 6.115300000000129e-05, 6.0944000000000276e-05, 6.0179999999999956e-05, 6.0250000000004744e-05, 6.081900000000362e-05, 6.1027999999997695e-05, 6.081900000000362e-05, 6.0971999999999416e-05, 6.08750000000019e-05, 6.043099999999968e-05, 6.015300000000029e-05, 6.0777999999997445e-05, 6.0584000000002414e-05, 6.041700000000011e-05, 6.0235999999998235e-05, 6.0471999999998916e-05, 6.0416000000000636e-05, 6.0972000000006354e-05, 6.080499999999711e-05, 6.062500000000165e-05, 6.079100000000448e-05, 6.088899999999453e-05, 6.018099999999943e-05]</msg>
<status status="PASS" starttime="20201112 12:43:13.183" endtime="20201112 12:43:13.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.177" endtime="20201112 12:43:13.186"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.189" endtime="20201112 12:43:13.190"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:13.193" endtime="20201112 12:43:13.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.191" endtime="20201112 12:43:13.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.186" endtime="20201112 12:43:13.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.742" endtime="20201112 12:43:13.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.741" endtime="20201112 12:43:13.214"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.225" endtime="20201112 12:43:13.241"></status>
</kw>
<msg timestamp="20201112 12:43:13.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.223" endtime="20201112 12:43:13.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.243" endtime="20201112 12:43:13.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.246" endtime="20201112 12:43:13.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.220" endtime="20201112 12:43:13.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.217" endtime="20201112 12:43:13.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.257" endtime="20201112 12:43:13.570"></status>
</kw>
<msg timestamp="20201112 12:43:13.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024606444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024668347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:13.256" endtime="20201112 12:43:13.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024606444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024668347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:13.579" endtime="20201112 12:43:13.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.598" endtime="20201112 12:43:13.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.252" endtime="20201112 12:43:13.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.250" endtime="20201112 12:43:13.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:13.617" level="INFO">${RESULT} = [{'time': 0.024668347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.190299999999857e-05, 'source_diff': 6.190299999999857e-05}, {'time': 0.024743236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:13.608" endtime="20201112 12:43:13.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:13.647" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:13.619" endtime="20201112 12:43:13.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.658" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 12:43:13.656" endtime="20201112 12:43:13.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.664" level="INFO">VALUE: [6.190299999999857e-05, 6.154199999999777e-05, 6.193100000000118e-05, 6.147199999999992e-05, 6.126400000000184e-05, 6.208300000000097e-05, 6.122300000000261e-05, 6.111200000000205e-05, 6.13889999999985e-05, 6.215300000000229e-05, 6.15560000000008e-05, 6.13750000000024e-05, 6.163899999999875e-05, 6.155500000000133e-05, 6.187499999999943e-05, 6.125000000000227e-05, 6.137499999999893e-05, 6.172200000000017e-05, 6.172200000000017e-05, 6.191699999999814e-05, 6.201399999999913e-05, 6.172200000000017e-05, 6.138900000000197e-05, 6.1195e-05, 6.199999999999956e-05, 6.212499999999968e-05, 6.14019999999986e-05, 6.134699999999979e-05, 6.180500000000158e-05, 6.211100000000011e-05, 6.155500000000133e-05, 6.134699999999979e-05, 6.130600000000055e-05, 6.172200000000017e-05, 6.15560000000008e-05, 6.140299999999807e-05, 6.218100000000143e-05, 6.166700000000136e-05, 6.138900000000197e-05, 6.162499999999918e-05, 6.144500000000025e-05, 6.127800000000141e-05, 6.209700000000054e-05, 6.148599999999949e-05, 6.154100000000176e-05, 6.147200000000339e-05, 6.1888999999999e-05, 6.202800000000216e-05, 6.125000000000227e-05, 6.15560000000008e-05]</msg>
<status status="PASS" starttime="20201112 12:43:13.661" endtime="20201112 12:43:13.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.649" endtime="20201112 12:43:13.667"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.674" endtime="20201112 12:43:13.676"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:13.682" endtime="20201112 12:43:13.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.678" endtime="20201112 12:43:13.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.669" endtime="20201112 12:43:13.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.215" endtime="20201112 12:43:13.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.214" endtime="20201112 12:43:13.708"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.731" endtime="20201112 12:43:13.752"></status>
</kw>
<msg timestamp="20201112 12:43:13.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.727" endtime="20201112 12:43:13.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.757" endtime="20201112 12:43:13.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.764" endtime="20201112 12:43:13.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.720" endtime="20201112 12:43:13.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.714" endtime="20201112 12:43:13.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.789" endtime="20201112 12:43:14.126"></status>
</kw>
<msg timestamp="20201112 12:43:14.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041768694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041831472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:13.785" endtime="20201112 12:43:14.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041768694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041831472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:14.135" endtime="20201112 12:43:14.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.154" endtime="20201112 12:43:14.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.778" endtime="20201112 12:43:14.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.773" endtime="20201112 12:43:14.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:14.173" level="INFO">${RESULT} = [{'time': 0.041831472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.277799999999945e-05, 'source_diff': 6.277799999999945e-05}, {'time': 0.041913472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:14.164" endtime="20201112 12:43:14.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:14.204" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:14.175" endtime="20201112 12:43:14.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.214" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 12:43:14.212" endtime="20201112 12:43:14.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.220" level="INFO">VALUE: [6.277799999999945e-05, 6.304099999999979e-05, 6.226399999999938e-05, 6.30279999999997e-05, 6.265300000000279e-05, 6.263900000000322e-05, 6.211100000000358e-05, 6.297200000000142e-05, 6.216700000000186e-05, 6.300000000000056e-05, 6.218100000000143e-05, 6.217999999999502e-05, 6.304099999999979e-05, 6.252699999999972e-05, 6.24029999999956e-05, 6.266700000000236e-05, 6.229099999999904e-05, 6.298600000000099e-05, 6.288899999999653e-05, 6.301400000000013e-05, 6.218100000000143e-05, 6.298600000000099e-05, 6.243100000000168e-05, 6.261199999999661e-05, 6.259800000000398e-05, 6.291700000000261e-05, 6.247300000000039e-05, 6.312500000000415e-05, 6.254099999999929e-05, 6.294499999999481e-05, 6.316699999999592e-05, 6.276399999999988e-05, 6.222200000000067e-05, 6.30279999999997e-05, 6.216700000000186e-05, 6.259699999999757e-05, 6.30279999999997e-05, 6.309700000000501e-05, 6.288900000000347e-05, 6.25279999999992e-05, 6.277799999999945e-05, 6.284800000000423e-05, 6.27630000000004e-05, 6.30829999999985e-05, 6.267999999999552e-05, 6.283299999999825e-05, 6.240300000000254e-05, 6.304199999999927e-05, 6.256899999999843e-05, 6.300000000000056e-05]</msg>
<status status="PASS" starttime="20201112 12:43:14.217" endtime="20201112 12:43:14.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.205" endtime="20201112 12:43:14.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.229" endtime="20201112 12:43:14.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:14.238" endtime="20201112 12:43:14.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.233" endtime="20201112 12:43:14.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.225" endtime="20201112 12:43:14.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.710" endtime="20201112 12:43:14.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.709" endtime="20201112 12:43:14.264"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.286" endtime="20201112 12:43:14.307"></status>
</kw>
<msg timestamp="20201112 12:43:14.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:14.283" endtime="20201112 12:43:14.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:14.310" endtime="20201112 12:43:14.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.316" endtime="20201112 12:43:14.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.276" endtime="20201112 12:43:14.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.270" endtime="20201112 12:43:14.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.340" endtime="20201112 12:43:14.675"></status>
</kw>
<msg timestamp="20201112 12:43:14.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042260278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042324139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:14.336" endtime="20201112 12:43:14.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042260278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042324139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:14.684" endtime="20201112 12:43:14.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.703" endtime="20201112 12:43:14.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.329" endtime="20201112 12:43:14.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.325" endtime="20201112 12:43:14.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:14.724" level="INFO">${RESULT} = [{'time': 0.042324139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.386099999999839e-05, 'source_diff': 6.386099999999839e-05}, {'time': 0.042404125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:14.715" endtime="20201112 12:43:14.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:14.754" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:14.726" endtime="20201112 12:43:14.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.765" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 12:43:14.763" endtime="20201112 12:43:14.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.771" level="INFO">VALUE: [6.386099999999839e-05, 6.405599999999984e-05, 6.405599999999984e-05, 6.359700000000551e-05, 6.405599999999984e-05, 6.316700000000286e-05, 6.405599999999984e-05, 6.381999999999916e-05, 6.381999999999916e-05, 6.322199999999473e-05, 6.40829999999995e-05, 6.401400000000113e-05, 6.40829999999995e-05, 6.395800000000285e-05, 6.323600000000124e-05, 6.374999999999437e-05, 6.388899999999753e-05, 6.412499999999821e-05, 6.365300000000379e-05, 6.380599999999959e-05, 6.39029999999971e-05, 6.34029999999966e-05, 6.340300000000354e-05, 6.359799999999804e-05, 6.319399999999559e-05, 6.406899999999993e-05, 6.377800000000045e-05, 6.359699999999857e-05, 6.3582999999999e-05, 6.344500000000225e-05, 6.394399999999634e-05, 6.383399999999873e-05, 6.369400000000303e-05, 6.322200000000167e-05, 6.340300000000354e-05, 6.359699999999857e-05, 6.40699999999994e-05, 6.345900000000182e-05, 6.387499999999796e-05, 6.322199999999473e-05, 6.347200000000192e-05, 6.362499999999771e-05, 6.374999999999437e-05, 6.317999999999602e-05, 6.338899999999703e-05, 6.333399999999823e-05, 6.341700000000311e-05, 6.383299999999925e-05, 6.411100000000558e-05, 6.42080000000031e-05]</msg>
<status status="PASS" starttime="20201112 12:43:14.767" endtime="20201112 12:43:14.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.756" endtime="20201112 12:43:14.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.780" endtime="20201112 12:43:14.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:14.788" endtime="20201112 12:43:14.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.784" endtime="20201112 12:43:14.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.776" endtime="20201112 12:43:14.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.266" endtime="20201112 12:43:14.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.265" endtime="20201112 12:43:14.814"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.837" endtime="20201112 12:43:14.858"></status>
</kw>
<msg timestamp="20201112 12:43:14.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:14.834" endtime="20201112 12:43:14.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:14.862" endtime="20201112 12:43:14.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.868" endtime="20201112 12:43:14.872"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.827" endtime="20201112 12:43:14.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.821" endtime="20201112 12:43:14.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.891" endtime="20201112 12:43:15.226"></status>
</kw>
<msg timestamp="20201112 12:43:15.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042236597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042301694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:14.888" endtime="20201112 12:43:15.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042236597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042301694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:15.235" endtime="20201112 12:43:15.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.254" endtime="20201112 12:43:15.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.881" endtime="20201112 12:43:15.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.876" endtime="20201112 12:43:15.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:15.273" level="INFO">${RESULT} = [{'time': 0.042301694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.509700000000007e-05, 'source_diff': 6.509700000000007e-05}, {'time': 0.042376667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:15.264" endtime="20201112 12:43:15.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:15.303" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:15.275" endtime="20201112 12:43:15.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.314" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 12:43:15.312" endtime="20201112 12:43:15.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.320" level="INFO">VALUE: [6.509700000000007e-05, 6.49029999999981e-05, 6.44029999999976e-05, 6.468099999999699e-05, 6.484699999999982e-05, 6.419399999999659e-05, 6.506900000000093e-05, 6.423600000000224e-05, 6.440300000000454e-05, 6.486100000000633e-05, 6.42080000000031e-05, 6.468099999999699e-05, 6.434699999999932e-05, 6.415299999999735e-05, 6.480599999999365e-05, 6.459699999999957e-05, 6.423600000000224e-05, 6.426400000000138e-05, 6.487499999999896e-05, 6.465200000000532e-05, 6.480500000000111e-05, 6.509700000000007e-05, 6.436099999999889e-05, 6.500000000000256e-05, 6.441699999999717e-05, 6.455500000000086e-05, 6.483399999999973e-05, 6.454200000000077e-05, 6.42500000000018e-05, 6.463899999999828e-05, 6.441700000000411e-05, 6.43479999999988e-05, 6.511099999999964e-05, 6.423600000000224e-05, 6.463800000000575e-05, 6.462499999999871e-05, 6.455500000000086e-05, 6.474999999999537e-05, 6.47080000000036e-05, 6.447200000000292e-05, 6.501399999999519e-05, 6.444400000000378e-05, 6.50830000000005e-05, 6.512500000000615e-05, 6.441700000000411e-05, 6.493099999999724e-05, 6.509799999999955e-05, 6.499999999999562e-05, 6.467999999999752e-05, 6.42500000000018e-05]</msg>
<status status="PASS" starttime="20201112 12:43:15.317" endtime="20201112 12:43:15.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.305" endtime="20201112 12:43:15.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.329" endtime="20201112 12:43:15.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:15.338" endtime="20201112 12:43:15.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.333" endtime="20201112 12:43:15.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.325" endtime="20201112 12:43:15.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.816" endtime="20201112 12:43:15.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.815" endtime="20201112 12:43:15.363"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.386" endtime="20201112 12:43:15.407"></status>
</kw>
<msg timestamp="20201112 12:43:15.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.383" endtime="20201112 12:43:15.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.410" endtime="20201112 12:43:15.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.417" endtime="20201112 12:43:15.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.375" endtime="20201112 12:43:15.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.370" endtime="20201112 12:43:15.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.440" endtime="20201112 12:43:15.777"></status>
</kw>
<msg timestamp="20201112 12:43:15.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041759597, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:15.437" endtime="20201112 12:43:15.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041759597, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:15.787" endtime="20201112 12:43:15.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.806" endtime="20201112 12:43:15.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.429" endtime="20201112 12:43:15.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.425" endtime="20201112 12:43:15.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:15.825" level="INFO">${RESULT} = [{'time': 0.041759597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.559700000000057e-05, 'source_diff': 6.559700000000057e-05}, {'time': 0.041833583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:15.816" endtime="20201112 12:43:15.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:15.855" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:15.827" endtime="20201112 12:43:15.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.866" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 12:43:15.864" endtime="20201112 12:43:15.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.871" level="INFO">VALUE: [6.559700000000057e-05, 6.534700000000032e-05, 6.57500000000033e-05, 6.595799999999791e-05, 6.605600000000184e-05, 6.579200000000202e-05, 6.561100000000014e-05, 6.569499999999756e-05, 6.60280000000027e-05, 6.565299999999885e-05, 6.586100000000039e-05, 6.60280000000027e-05, 6.538899999999903e-05, 6.581900000000168e-05, 6.573600000000374e-05, 6.517999999999802e-05, 6.563899999999928e-05, 6.565299999999885e-05, 6.565299999999885e-05, 6.57359999999968e-05, 6.562499999999971e-05, 6.530600000000109e-05, 6.530600000000109e-05, 6.604199999999533e-05, 6.568099999999799e-05, 6.60700000000014e-05, 6.593099999999824e-05, 6.548599999999655e-05, 6.566599999999895e-05, 6.593099999999824e-05, 6.587499999999996e-05, 6.562499999999971e-05, 6.552799999999526e-05, 6.572200000000417e-05, 6.590300000000604e-05, 6.54029999999986e-05, 6.597199999999748e-05, 6.522200000000367e-05, 6.549999999999612e-05, 6.522300000000314e-05, 6.582000000000116e-05, 6.583400000000073e-05, 6.558400000000048e-05, 6.538899999999903e-05, 6.597200000000442e-05, 6.526400000000238e-05, 6.520799999999716e-05, 6.57909999999956e-05, 6.597200000000442e-05, 6.584700000000082e-05]</msg>
<status status="PASS" starttime="20201112 12:43:15.868" endtime="20201112 12:43:15.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.857" endtime="20201112 12:43:15.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.881" endtime="20201112 12:43:15.884"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:15.889" endtime="20201112 12:43:15.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.885" endtime="20201112 12:43:15.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.876" endtime="20201112 12:43:15.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.365" endtime="20201112 12:43:15.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.364" endtime="20201112 12:43:15.915"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.938" endtime="20201112 12:43:15.959"></status>
</kw>
<msg timestamp="20201112 12:43:15.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.935" endtime="20201112 12:43:15.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.962" endtime="20201112 12:43:15.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.969" endtime="20201112 12:43:15.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.927" endtime="20201112 12:43:15.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.922" endtime="20201112 12:43:15.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.993" endtime="20201112 12:43:16.329"></status>
</kw>
<msg timestamp="20201112 12:43:16.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041947556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042014792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:15.990" endtime="20201112 12:43:16.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041947556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042014792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:16.339" endtime="20201112 12:43:16.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.357" endtime="20201112 12:43:16.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.982" endtime="20201112 12:43:16.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.977" endtime="20201112 12:43:16.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:16.376" level="INFO">${RESULT} = [{'time': 0.042014792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.723600000000524e-05, 'source_diff': 6.723600000000524e-05}, {'time': 0.042088722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:16.367" endtime="20201112 12:43:16.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:16.407" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:16.378" endtime="20201112 12:43:16.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.418" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 12:43:16.415" endtime="20201112 12:43:16.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.423" level="INFO">VALUE: [6.723600000000524e-05, 6.661100000000114e-05, 6.638900000000003e-05, 6.636100000000089e-05, 6.693099999999924e-05, 6.711100000000164e-05, 6.647199999999798e-05, 6.684700000000182e-05, 6.691700000000661e-05, 6.619499999999806e-05, 6.662500000000071e-05, 6.690200000000063e-05, 6.62630000000039e-05, 6.662499999999377e-05, 6.692999999999977e-05, 6.672199999999823e-05, 6.654100000000329e-05, 6.620900000000457e-05, 6.6583000000002e-05, 6.691699999999967e-05, 6.687499999999402e-05, 6.632000000000166e-05, 6.688900000000053e-05, 6.665299999999985e-05, 6.712500000000121e-05, 6.644499999999831e-05, 6.658399999999454e-05, 6.715300000000035e-05, 6.618000000000596e-05, 6.627800000000295e-05, 6.662500000000071e-05, 6.647199999999798e-05, 6.679199999999608e-05, 6.618100000000543e-05, 6.698599999999805e-05, 6.687500000000096e-05, 6.701399999999719e-05, 6.620899999999763e-05, 6.662500000000071e-05, 6.648600000000449e-05, 6.617999999999902e-05, 6.686100000000139e-05, 6.618000000000596e-05, 6.70559999999959e-05, 6.64159999999997e-05, 6.706999999999547e-05, 6.666700000000636e-05, 6.630500000000261e-05, 6.661200000000062e-05, 6.656900000000243e-05]</msg>
<status status="PASS" starttime="20201112 12:43:16.420" endtime="20201112 12:43:16.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.408" endtime="20201112 12:43:16.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.433" endtime="20201112 12:43:16.435"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:16.441" endtime="20201112 12:43:16.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.437" endtime="20201112 12:43:16.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.428" endtime="20201112 12:43:16.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.917" endtime="20201112 12:43:16.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.916" endtime="20201112 12:43:16.467"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.490" endtime="20201112 12:43:16.511"></status>
</kw>
<msg timestamp="20201112 12:43:16.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:16.486" endtime="20201112 12:43:16.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:16.514" endtime="20201112 12:43:16.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.520" endtime="20201112 12:43:16.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.479" endtime="20201112 12:43:16.526"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.473" endtime="20201112 12:43:16.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.544" endtime="20201112 12:43:16.834"></status>
</kw>
<msg timestamp="20201112 12:43:16.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041934722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042002708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:16.540" endtime="20201112 12:43:16.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041934722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042002708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:16.838" endtime="20201112 12:43:16.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.847" endtime="20201112 12:43:16.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.533" endtime="20201112 12:43:16.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.528" endtime="20201112 12:43:16.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:16.857" level="INFO">${RESULT} = [{'time': 0.042002708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.798599999999905e-05, 'source_diff': 6.798599999999905e-05}, {'time': 0.042078722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:16.853" endtime="20201112 12:43:16.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:16.870" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:16.858" endtime="20201112 12:43:16.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.876" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 12:43:16.874" endtime="20201112 12:43:16.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.878" level="INFO">VALUE: [6.798599999999905e-05, 6.813900000000178e-05, 6.744399999999984e-05, 6.809699999999613e-05, 6.733299999999581e-05, 6.752799999999726e-05, 6.761100000000214e-05, 6.787500000000196e-05, 6.747199999999898e-05, 6.736100000000189e-05, 6.80280000000047e-05, 6.802799999999776e-05, 6.804200000000427e-05, 6.720799999999916e-05, 6.730499999999667e-05, 6.768000000000052e-05, 6.766700000000042e-05, 6.813900000000178e-05, 6.731900000000318e-05, 6.747199999999898e-05, 6.784700000000282e-05, 6.730499999999667e-05, 6.769400000000009e-05, 6.726400000000438e-05, 6.797299999999895e-05, 6.759700000000257e-05, 6.729200000000352e-05, 6.795799999999991e-05, 6.799999999999862e-05, 6.733299999999581e-05, 6.781899999999674e-05, 6.80830000000035e-05, 6.722199999999873e-05, 6.780600000000359e-05, 6.787500000000196e-05, 6.722199999999873e-05, 6.719499999999906e-05, 6.727800000000395e-05, 6.787499999999502e-05, 6.780600000000359e-05, 6.709800000000155e-05, 6.793000000000077e-05, 6.747199999999898e-05, 6.74030000000006e-05, 6.747200000000592e-05, 6.804200000000427e-05, 6.722199999999873e-05, 6.722199999999873e-05, 6.769499999999956e-05, 6.768099999999999e-05]</msg>
<status status="PASS" starttime="20201112 12:43:16.877" endtime="20201112 12:43:16.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.871" endtime="20201112 12:43:16.884"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.887" endtime="20201112 12:43:16.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:16.891" endtime="20201112 12:43:16.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.889" endtime="20201112 12:43:16.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.885" endtime="20201112 12:43:16.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.469" endtime="20201112 12:43:16.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.468" endtime="20201112 12:43:16.913"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.923" endtime="20201112 12:43:16.943"></status>
</kw>
<msg timestamp="20201112 12:43:16.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:16.922" endtime="20201112 12:43:16.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:16.946" endtime="20201112 12:43:16.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.953" endtime="20201112 12:43:16.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.918" endtime="20201112 12:43:16.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.916" endtime="20201112 12:43:16.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.976" endtime="20201112 12:43:17.311"></status>
</kw>
<msg timestamp="20201112 12:43:17.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024510722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024578958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:16.973" endtime="20201112 12:43:17.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024510722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024578958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:17.321" endtime="20201112 12:43:17.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.339" endtime="20201112 12:43:17.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.965" endtime="20201112 12:43:17.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.961" endtime="20201112 12:43:17.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:17.358" level="INFO">${RESULT} = [{'time': 0.024578958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.823600000000277e-05, 'source_diff': 6.823600000000277e-05}, {'time': 0.024653972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:17.349" endtime="20201112 12:43:17.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:17.388" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:17.360" endtime="20201112 12:43:17.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.399" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 12:43:17.397" endtime="20201112 12:43:17.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.405" level="INFO">VALUE: [6.823600000000277e-05, 6.818000000000102e-05, 6.818000000000102e-05, 6.913900000000278e-05, 6.897200000000048e-05, 6.863900000000228e-05, 6.851400000000216e-05, 6.830600000000062e-05, 6.829200000000105e-05, 6.868100000000099e-05, 6.893100000000124e-05, 6.84030000000016e-05, 6.888899999999906e-05, 6.847199999999998e-05, 6.880500000000164e-05, 6.904099999999885e-05, 6.813899999999831e-05, 6.85970000000001e-05, 6.897200000000048e-05, 6.820800000000016e-05, 6.829200000000105e-05, 6.862499999999924e-05, 6.886099999999992e-05, 6.913899999999931e-05, 6.84030000000016e-05, 6.884799999999983e-05, 6.829200000000105e-05, 6.904100000000232e-05, 6.911100000000017e-05, 6.911100000000017e-05, 6.894399999999787e-05, 6.852800000000173e-05, 6.858300000000053e-05, 6.884700000000035e-05, 6.830600000000062e-05, 6.882000000000069e-05, 6.877800000000198e-05, 6.868100000000099e-05, 6.857000000000044e-05, 6.82229999999992e-05, 6.881900000000121e-05, 6.829100000000157e-05, 6.869400000000109e-05, 6.851399999999869e-05, 6.851399999999869e-05, 6.897200000000048e-05, 6.90970000000006e-05, 6.887499999999949e-05, 6.898600000000005e-05, 6.895799999999744e-05]</msg>
<status status="PASS" starttime="20201112 12:43:17.402" endtime="20201112 12:43:17.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.390" endtime="20201112 12:43:17.408"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.414" endtime="20201112 12:43:17.417"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:17.423" endtime="20201112 12:43:17.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.418" endtime="20201112 12:43:17.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.410" endtime="20201112 12:43:17.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.914" endtime="20201112 12:43:17.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.913" endtime="20201112 12:43:17.448"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.471" endtime="20201112 12:43:17.492"></status>
</kw>
<msg timestamp="20201112 12:43:17.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:17.468" endtime="20201112 12:43:17.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:17.496" endtime="20201112 12:43:17.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.502" endtime="20201112 12:43:17.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.461" endtime="20201112 12:43:17.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.455" endtime="20201112 12:43:17.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.525" endtime="20201112 12:43:17.861"></status>
</kw>
<msg timestamp="20201112 12:43:17.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041972944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042042569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:17.522" endtime="20201112 12:43:17.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041972944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042042569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:17.870" endtime="20201112 12:43:17.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.889" endtime="20201112 12:43:17.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.515" endtime="20201112 12:43:17.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.510" endtime="20201112 12:43:17.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:17.908" level="INFO">${RESULT} = [{'time': 0.042042569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.962500000000371e-05, 'source_diff': 6.962500000000371e-05}, {'time': 0.042120528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:17.899" endtime="20201112 12:43:17.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:17.938" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:17.910" endtime="20201112 12:43:17.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.949" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 12:43:17.947" endtime="20201112 12:43:17.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.954" level="INFO">VALUE: [6.962500000000371e-05, 6.976399999999994e-05, 7.012499999999727e-05, 7.006899999999899e-05, 6.924999999999987e-05, 6.915200000000288e-05, 6.944400000000184e-05, 6.916600000000245e-05, 6.972200000000123e-05, 6.943000000000227e-05, 6.959700000000457e-05, 6.918100000000149e-05, 6.945799999999447e-05, 7.002799999999976e-05, 6.97360000000008e-05, 6.986099999999745e-05, 7.00979999999976e-05, 6.99030000000031e-05, 6.930500000000561e-05, 6.997199999999454e-05, 6.938899999999609e-05, 6.965299999999591e-05, 6.981899999999874e-05, 7.009699999999813e-05, 6.99030000000031e-05, 6.956900000000543e-05, 6.959699999999763e-05, 6.937499999999652e-05, 6.922200000000073e-05, 6.950000000000012e-05, 6.945900000000088e-05, 6.988899999999659e-05, 6.933399999999729e-05, 6.981899999999874e-05, 6.948600000000055e-05, 6.991599999999626e-05, 6.962499999999677e-05, 6.952799999999926e-05, 7.008299999999856e-05, 6.993100000000224e-05, 6.958299999999806e-05, 6.956999999999797e-05, 6.998600000000105e-05, 7.004199999999933e-05, 6.924999999999987e-05, 6.969400000000209e-05, 7.000000000000062e-05, 6.954099999999935e-05, 6.965299999999591e-05, 6.917999999999508e-05]</msg>
<status status="PASS" starttime="20201112 12:43:17.951" endtime="20201112 12:43:17.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.940" endtime="20201112 12:43:17.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.964" endtime="20201112 12:43:17.966"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:17.972" endtime="20201112 12:43:17.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.968" endtime="20201112 12:43:17.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.959" endtime="20201112 12:43:17.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.451" endtime="20201112 12:43:17.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.449" endtime="20201112 12:43:17.998"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.021" endtime="20201112 12:43:18.043"></status>
</kw>
<msg timestamp="20201112 12:43:18.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:18.017" endtime="20201112 12:43:18.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:18.046" endtime="20201112 12:43:18.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.053" endtime="20201112 12:43:18.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.010" endtime="20201112 12:43:18.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.004" endtime="20201112 12:43:18.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.077" endtime="20201112 12:43:18.414"></status>
</kw>
<msg timestamp="20201112 12:43:18.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042617514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042687958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:18.073" endtime="20201112 12:43:18.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042617514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042687958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:18.423" endtime="20201112 12:43:18.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.442" endtime="20201112 12:43:18.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.066" endtime="20201112 12:43:18.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.061" endtime="20201112 12:43:18.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:18.461" level="INFO">${RESULT} = [{'time': 0.042687958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.04439999999959e-05, 'source_diff': 7.04439999999959e-05}, {'time': 0.042771931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:18.452" endtime="20201112 12:43:18.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:18.491" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:18.463" endtime="20201112 12:43:18.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.502" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 12:43:18.499" endtime="20201112 12:43:18.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.507" level="INFO">VALUE: [7.04439999999959e-05, 7.097300000000195e-05, 7.083399999999879e-05, 7.090199999999769e-05, 7.052800000000026e-05, 7.090199999999769e-05, 7.036099999999795e-05, 7.092999999999683e-05, 7.112499999999827e-05, 7.054199999999983e-05, 7.088900000000453e-05, 7.093100000000324e-05, 7.094500000000281e-05, 7.108399999999904e-05, 7.062499999999777e-05, 7.079200000000008e-05, 7.095899999999544e-05, 7.079200000000008e-05, 7.026300000000096e-05, 7.025000000000087e-05, 7.025000000000087e-05, 7.102800000000076e-05, 7.04160000000037e-05, 7.065300000000385e-05, 7.04030000000036e-05, 7.073700000000127e-05, 7.097200000000248e-05, 7.025000000000087e-05, 7.079200000000008e-05, 7.02910000000001e-05, 7.041700000000317e-05, 7.069500000000256e-05, 7.063899999999734e-05, 7.088799999999812e-05, 7.040199999999719e-05, 7.079099999999366e-05, 7.088900000000453e-05, 7.102800000000076e-05, 7.019400000000259e-05, 7.038899999999709e-05, 7.032000000000566e-05, 7.016699999999598e-05, 7.063900000000428e-05, 7.101300000000171e-05, 7.100000000000162e-05, 7.097299999999501e-05, 7.038799999999762e-05, 7.095800000000291e-05, 7.052800000000026e-05, 7.084699999999888e-05]</msg>
<status status="PASS" starttime="20201112 12:43:18.504" endtime="20201112 12:43:18.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.493" endtime="20201112 12:43:18.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.517" endtime="20201112 12:43:18.519"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:18.525" endtime="20201112 12:43:18.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.521" endtime="20201112 12:43:18.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.512" endtime="20201112 12:43:18.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.000" endtime="20201112 12:43:18.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.999" endtime="20201112 12:43:18.551"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.574" endtime="20201112 12:43:18.594"></status>
</kw>
<msg timestamp="20201112 12:43:18.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:18.570" endtime="20201112 12:43:18.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:18.597" endtime="20201112 12:43:18.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.604" endtime="20201112 12:43:18.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.563" endtime="20201112 12:43:18.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.557" endtime="20201112 12:43:18.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.627" endtime="20201112 12:43:18.962"></status>
</kw>
<msg timestamp="20201112 12:43:18.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041855806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041927861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:18.624" endtime="20201112 12:43:18.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041855806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041927861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:18.971" endtime="20201112 12:43:18.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.990" endtime="20201112 12:43:18.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.617" endtime="20201112 12:43:18.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.612" endtime="20201112 12:43:19.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:19.011" level="INFO">${RESULT} = [{'time': 0.041927861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.205499999999448e-05, 'source_diff': 7.205499999999448e-05}, {'time': 0.042007875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:19.002" endtime="20201112 12:43:19.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:19.041" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:19.013" endtime="20201112 12:43:19.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.052" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 12:43:19.050" endtime="20201112 12:43:19.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.058" level="INFO">VALUE: [7.205499999999448e-05, 7.152800000000126e-05, 7.159699999999963e-05, 7.208300000000056e-05, 7.138900000000503e-05, 7.212499999999927e-05, 7.212499999999927e-05, 7.165299999999791e-05, 7.161199999999868e-05, 7.184699999999988e-05, 7.163899999999834e-05, 7.213800000000631e-05, 7.190199999999869e-05, 7.215299999999841e-05, 7.123599999999536e-05, 7.184699999999988e-05, 7.158300000000006e-05, 7.133299999999981e-05, 7.168099999999705e-05, 7.154200000000083e-05, 7.120900000000263e-05, 7.207000000000047e-05, 7.116700000000392e-05, 7.17230000000027e-05, 7.147199999999604e-05, 7.116599999999751e-05, 7.208300000000056e-05, 7.201400000000219e-05, 7.141599999999776e-05, 7.212500000000621e-05, 7.15690000000005e-05, 7.119400000000359e-05, 7.130600000000015e-05, 7.134799999999886e-05, 7.188899999999859e-05, 7.158399999999954e-05, 7.186099999999945e-05, 7.166700000000442e-05, 7.143000000000427e-05, 7.162500000000571e-05, 7.213899999999884e-05, 7.2069000000001e-05, 7.201400000000219e-05, 7.197199999999654e-05, 7.154200000000083e-05, 7.124999999999493e-05, 7.124999999999493e-05, 7.130600000000015e-05, 7.151400000000169e-05, 7.148599999999561e-05]</msg>
<status status="PASS" starttime="20201112 12:43:19.055" endtime="20201112 12:43:19.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.043" endtime="20201112 12:43:19.061"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.068" endtime="20201112 12:43:19.071"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:19.077" endtime="20201112 12:43:19.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.072" endtime="20201112 12:43:19.101"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.063" endtime="20201112 12:43:19.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.553" endtime="20201112 12:43:19.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.552" endtime="20201112 12:43:19.103"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.126" endtime="20201112 12:43:19.147"></status>
</kw>
<msg timestamp="20201112 12:43:19.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:19.122" endtime="20201112 12:43:19.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:19.151" endtime="20201112 12:43:19.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.157" endtime="20201112 12:43:19.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.115" endtime="20201112 12:43:19.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.109" endtime="20201112 12:43:19.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.180" endtime="20201112 12:43:19.517"></status>
</kw>
<msg timestamp="20201112 12:43:19.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041983319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042055722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:19.177" endtime="20201112 12:43:19.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041983319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042055722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:19.526" endtime="20201112 12:43:19.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.545" endtime="20201112 12:43:19.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.169" endtime="20201112 12:43:19.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.165" endtime="20201112 12:43:19.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:19.564" level="INFO">${RESULT} = [{'time': 0.042055722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.240299999999866e-05, 'source_diff': 7.240299999999866e-05}, {'time': 0.042146694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:19.555" endtime="20201112 12:43:19.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:19.594" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:19.566" endtime="20201112 12:43:19.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.605" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 12:43:19.603" endtime="20201112 12:43:19.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.610" level="INFO">VALUE: [7.240299999999866e-05, 7.27769999999961e-05, 7.302700000000328e-05, 7.275000000000337e-05, 7.25560000000014e-05, 7.218000000000502e-05, 7.265299999999891e-05, 7.277799999999557e-05, 7.295800000000491e-05, 7.31110000000007e-05, 7.288899999999959e-05, 7.270900000000413e-05, 7.25560000000014e-05, 7.259800000000011e-05, 7.304200000000233e-05, 7.279099999999566e-05, 7.31110000000007e-05, 7.267999999999858e-05, 7.220800000000416e-05, 7.230500000000167e-05, 7.279200000000208e-05, 7.301400000000319e-05, 7.308300000000156e-05, 7.226400000000244e-05, 7.291599999999926e-05, 7.297299999999701e-05, 7.238899999999909e-05, 7.281900000000174e-05, 7.309700000000113e-05, 7.3069000000002e-05, 7.276400000000294e-05, 7.263899999999934e-05, 7.301399999999625e-05, 7.268099999999805e-05, 7.298600000000405e-05, 7.2763999999996e-05, 7.251399999999575e-05, 7.272199999999729e-05, 7.22639999999955e-05, 7.297200000000448e-05, 7.242999999999833e-05, 7.24439999999979e-05, 7.219399999999765e-05, 7.218000000000502e-05, 7.22360000000033e-05, 7.245799999999747e-05, 7.231900000000124e-05, 7.258300000000106e-05, 7.309700000000113e-05, 7.223599999999636e-05]</msg>
<status status="PASS" starttime="20201112 12:43:19.607" endtime="20201112 12:43:19.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.596" endtime="20201112 12:43:19.613"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.620" endtime="20201112 12:43:19.623"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:19.628" endtime="20201112 12:43:19.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.624" endtime="20201112 12:43:19.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.615" endtime="20201112 12:43:19.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.105" endtime="20201112 12:43:19.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.104" endtime="20201112 12:43:19.654"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.677" endtime="20201112 12:43:19.698"></status>
</kw>
<msg timestamp="20201112 12:43:19.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:19.673" endtime="20201112 12:43:19.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:19.701" endtime="20201112 12:43:19.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.707" endtime="20201112 12:43:19.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.666" endtime="20201112 12:43:19.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.660" endtime="20201112 12:43:19.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.730" endtime="20201112 12:43:20.064"></status>
</kw>
<msg timestamp="20201112 12:43:20.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042119403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042193625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:19.727" endtime="20201112 12:43:20.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042119403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042193625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.073" endtime="20201112 12:43:20.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.092" endtime="20201112 12:43:20.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.720" endtime="20201112 12:43:20.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.715" endtime="20201112 12:43:20.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:20.112" level="INFO">${RESULT} = [{'time': 0.042193625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.422199999999879e-05, 'source_diff': 7.422199999999879e-05}, {'time': 0.042284556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:20.103" endtime="20201112 12:43:20.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:20.143" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:20.115" endtime="20201112 12:43:20.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.154" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 12:43:20.152" endtime="20201112 12:43:20.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.159" level="INFO">VALUE: [7.422199999999879e-05, 7.359800000000111e-05, 7.319399999999865e-05, 7.313899999999984e-05, 7.398599999999811e-05, 7.383299999999537e-05, 7.32639999999965e-05, 7.333300000000181e-05, 7.391699999999973e-05, 7.365299999999991e-05, 7.35560000000024e-05, 7.399999999999768e-05, 7.368099999999905e-05, 7.384800000000136e-05, 7.319499999999812e-05, 7.363800000000087e-05, 7.317999999999908e-05, 7.36110000000012e-05, 7.376400000000394e-05, 7.34439999999989e-05, 7.338900000000009e-05, 7.334699999999444e-05, 7.369500000000556e-05, 7.374999999999743e-05, 7.407000000000247e-05, 7.319499999999812e-05, 7.316699999999898e-05, 7.415200000000094e-05, 7.34309999999988e-05, 7.365200000000044e-05, 7.381900000000274e-05, 7.320799999999822e-05, 7.32639999999965e-05, 7.366699999999948e-05, 7.36110000000012e-05, 7.3763999999997e-05, 7.359700000000163e-05, 7.366699999999948e-05, 7.395899999999844e-05, 7.351399999999675e-05, 7.380599999999571e-05, 7.387500000000102e-05, 7.386100000000145e-05, 7.405500000000342e-05, 7.354199999999589e-05, 7.345799999999847e-05, 7.372199999999829e-05, 7.32360000000043e-05, 7.374999999999743e-05, 7.341699999999923e-05]</msg>
<status status="PASS" starttime="20201112 12:43:20.156" endtime="20201112 12:43:20.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.145" endtime="20201112 12:43:20.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.168" endtime="20201112 12:43:20.170"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:20.173" endtime="20201112 12:43:20.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.171" endtime="20201112 12:43:20.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.164" endtime="20201112 12:43:20.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.656" endtime="20201112 12:43:20.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.655" endtime="20201112 12:43:20.194"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.205" endtime="20201112 12:43:20.223"></status>
</kw>
<msg timestamp="20201112 12:43:20.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.203" endtime="20201112 12:43:20.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.225" endtime="20201112 12:43:20.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.228" endtime="20201112 12:43:20.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.200" endtime="20201112 12:43:20.231"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.197" endtime="20201112 12:43:20.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.239" endtime="20201112 12:43:20.525"></status>
</kw>
<msg timestamp="20201112 12:43:20.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024964167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025038556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.237" endtime="20201112 12:43:20.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024964167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025038556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.529" endtime="20201112 12:43:20.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.538" endtime="20201112 12:43:20.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.234" endtime="20201112 12:43:20.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.232" endtime="20201112 12:43:20.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:20.547" level="INFO">${RESULT} = [{'time': 0.025038556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.438900000000109e-05, 'source_diff': 7.438900000000109e-05}, {'time': 0.025128583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:20.543" endtime="20201112 12:43:20.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:20.560" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:20.548" endtime="20201112 12:43:20.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.565" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 12:43:20.564" endtime="20201112 12:43:20.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.568" level="INFO">VALUE: [7.438900000000109e-05, 7.513899999999837e-05, 7.45699999999995e-05, 7.49440000000004e-05, 7.434699999999891e-05, 7.477800000000104e-05, 7.42500000000014e-05, 7.427800000000054e-05, 7.438900000000109e-05, 7.473600000000233e-05, 7.497199999999954e-05, 7.502800000000129e-05, 7.463900000000134e-05, 7.427800000000054e-05, 7.463899999999787e-05, 7.455599999999993e-05, 7.433399999999882e-05, 7.452800000000079e-05, 7.513900000000184e-05, 7.479100000000113e-05, 7.498600000000258e-05, 7.493000000000083e-05, 7.505500000000095e-05, 7.488900000000159e-05, 7.469499999999962e-05, 7.448599999999861e-05, 7.418099999999955e-05, 7.455599999999993e-05, 7.416699999999998e-05, 7.430599999999968e-05, 7.484699999999941e-05, 7.501399999999825e-05, 7.420800000000269e-05, 7.45699999999995e-05, 7.469400000000015e-05, 7.493000000000083e-05, 7.44309999999998e-05, 7.499999999999868e-05, 7.447200000000251e-05, 7.511099999999923e-05, 7.506900000000052e-05, 7.437499999999805e-05, 7.504200000000086e-05, 7.513900000000184e-05, 7.422199999999879e-05, 7.420799999999922e-05, 7.443000000000033e-05, 7.455500000000045e-05, 7.499999999999868e-05, 7.431999999999925e-05]</msg>
<status status="PASS" starttime="20201112 12:43:20.566" endtime="20201112 12:43:20.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.561" endtime="20201112 12:43:20.569"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.572" endtime="20201112 12:43:20.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:20.576" endtime="20201112 12:43:20.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.574" endtime="20201112 12:43:20.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.570" endtime="20201112 12:43:20.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.195" endtime="20201112 12:43:20.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.194" endtime="20201112 12:43:20.598"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.608" endtime="20201112 12:43:20.627"></status>
</kw>
<msg timestamp="20201112 12:43:20.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.607" endtime="20201112 12:43:20.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.628" endtime="20201112 12:43:20.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.632" endtime="20201112 12:43:20.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.604" endtime="20201112 12:43:20.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.601" endtime="20201112 12:43:20.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.642" endtime="20201112 12:43:20.929"></status>
</kw>
<msg timestamp="20201112 12:43:20.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024498917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024574472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.641" endtime="20201112 12:43:20.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024498917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024574472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.933" endtime="20201112 12:43:20.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.941" endtime="20201112 12:43:20.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.637" endtime="20201112 12:43:20.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.635" endtime="20201112 12:43:20.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:20.951" level="INFO">${RESULT} = [{'time': 0.024574472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.555500000000145e-05, 'source_diff': 7.555500000000145e-05}, {'time': 0.024662417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:20.947" endtime="20201112 12:43:20.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:20.965" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:20.952" endtime="20201112 12:43:20.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.970" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 12:43:20.969" endtime="20201112 12:43:20.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.972" level="INFO">VALUE: [7.555500000000145e-05, 7.554199999999789e-05, 7.593099999999783e-05, 7.615199999999947e-05, 7.61249999999998e-05, 7.55969999999967e-05, 7.54440000000009e-05, 7.561099999999973e-05, 7.536099999999948e-05, 7.565300000000191e-05, 7.57500000000029e-05, 7.55830000000006e-05, 7.520899999999969e-05, 7.515300000000141e-05, 7.579199999999814e-05, 7.565200000000244e-05, 7.56249999999993e-05, 7.519400000000065e-05, 7.53050000000012e-05, 7.608299999999762e-05, 7.605499999999848e-05, 7.604199999999839e-05, 7.548599999999961e-05, 7.569500000000062e-05, 7.532000000000025e-05, 7.552799999999832e-05, 7.587499999999955e-05, 7.545899999999994e-05, 7.61249999999998e-05, 7.52500000000024e-05, 7.530499999999773e-05, 7.604099999999892e-05, 7.602800000000229e-05, 7.613899999999937e-05, 7.563899999999887e-05, 7.52500000000024e-05, 7.568100000000105e-05, 7.566699999999801e-05, 7.530600000000068e-05, 7.59029999999987e-05, 7.59029999999987e-05, 7.522199999999979e-05, 7.559799999999964e-05, 7.545800000000047e-05, 7.57769999999991e-05, 7.52639999999985e-05, 7.551400000000222e-05, 7.55830000000006e-05, 7.598600000000011e-05, 7.55830000000006e-05]</msg>
<status status="PASS" starttime="20201112 12:43:20.971" endtime="20201112 12:43:20.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.966" endtime="20201112 12:43:20.974"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.977" endtime="20201112 12:43:20.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:20.981" endtime="20201112 12:43:21.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.979" endtime="20201112 12:43:21.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.975" endtime="20201112 12:43:21.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.599" endtime="20201112 12:43:21.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.598" endtime="20201112 12:43:21.002"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.013" endtime="20201112 12:43:21.031"></status>
</kw>
<msg timestamp="20201112 12:43:21.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:21.011" endtime="20201112 12:43:21.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:21.033" endtime="20201112 12:43:21.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.036" endtime="20201112 12:43:21.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.008" endtime="20201112 12:43:21.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.005" endtime="20201112 12:43:21.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.047" endtime="20201112 12:43:21.376"></status>
</kw>
<msg timestamp="20201112 12:43:21.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024956681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025033361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:21.045" endtime="20201112 12:43:21.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024956681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025033361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:21.386" endtime="20201112 12:43:21.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.404" endtime="20201112 12:43:21.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.042" endtime="20201112 12:43:21.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.039" endtime="20201112 12:43:21.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:21.423" level="INFO">${RESULT} = [{'time': 0.025033361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.667999999999911e-05, 'source_diff': 7.667999999999911e-05}, {'time': 0.025120333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:21.414" endtime="20201112 12:43:21.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:21.454" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:21.425" endtime="20201112 12:43:21.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.465" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 12:43:21.463" endtime="20201112 12:43:21.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.470" level="INFO">VALUE: [7.667999999999911e-05, 7.668000000000258e-05, 7.684700000000141e-05, 7.713900000000037e-05, 7.704199999999939e-05, 7.666699999999901e-05, 7.64029999999992e-05, 7.65839999999976e-05, 7.632000000000125e-05, 7.694399999999893e-05, 7.683300000000184e-05, 7.670899999999772e-05, 7.672200000000129e-05, 7.706899999999905e-05, 7.654200000000236e-05, 7.695800000000197e-05, 7.69440000000024e-05, 7.655499999999898e-05, 7.680599999999871e-05, 7.630599999999821e-05, 7.695800000000197e-05, 7.658400000000107e-05, 7.655600000000193e-05, 7.706899999999905e-05, 7.624999999999993e-05, 7.630499999999873e-05, 7.641700000000223e-05, 7.701400000000025e-05, 7.69579999999985e-05, 7.623600000000036e-05, 7.631900000000177e-05, 7.6457999999998e-05, 7.69579999999985e-05, 7.677799999999957e-05, 7.638899999999962e-05, 7.677799999999957e-05, 7.680599999999871e-05, 7.659700000000116e-05, 7.634700000000091e-05, 7.705499999999949e-05, 7.672199999999782e-05, 7.705499999999949e-05, 7.659700000000116e-05, 7.631900000000177e-05, 7.669399999999868e-05, 7.64029999999992e-05, 7.656999999999803e-05, 7.706899999999905e-05, 7.622300000000026e-05, 7.654199999999889e-05]</msg>
<status status="PASS" starttime="20201112 12:43:21.467" endtime="20201112 12:43:21.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.456" endtime="20201112 12:43:21.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.480" endtime="20201112 12:43:21.482"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:21.488" endtime="20201112 12:43:21.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.484" endtime="20201112 12:43:21.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.475" endtime="20201112 12:43:21.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.003" endtime="20201112 12:43:21.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.003" endtime="20201112 12:43:21.514"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.536" endtime="20201112 12:43:21.557"></status>
</kw>
<msg timestamp="20201112 12:43:21.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:21.533" endtime="20201112 12:43:21.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:21.561" endtime="20201112 12:43:21.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.567" endtime="20201112 12:43:21.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.526" endtime="20201112 12:43:21.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.520" endtime="20201112 12:43:21.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.590" endtime="20201112 12:43:21.925"></status>
</kw>
<msg timestamp="20201112 12:43:21.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041686722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041764819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:21.587" endtime="20201112 12:43:21.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041686722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041764819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:21.934" endtime="20201112 12:43:21.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.953" endtime="20201112 12:43:21.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.580" endtime="20201112 12:43:21.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.575" endtime="20201112 12:43:21.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:21.972" level="INFO">${RESULT} = [{'time': 0.041764819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.80969999999992e-05, 'source_diff': 7.80969999999992e-05}, {'time': 0.041858833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:21.963" endtime="20201112 12:43:21.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:22.003" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:21.974" endtime="20201112 12:43:22.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.014" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 12:43:22.011" endtime="20201112 12:43:22.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.019" level="INFO">VALUE: [7.80969999999992e-05, 7.74719999999951e-05, 7.75839999999986e-05, 7.808300000000656e-05, 7.786099999999851e-05, 7.716599999999657e-05, 7.81389999999979e-05, 7.745800000000247e-05, 7.769399999999621e-05, 7.762499999999783e-05, 7.791700000000373e-05, 7.731999999999878e-05, 7.756999999999903e-05, 7.79310000000033e-05, 7.794399999999646e-05, 7.734700000000538e-05, 7.784699999999894e-05, 7.75969999999987e-05, 7.752700000000085e-05, 7.734699999999844e-05, 7.74310000000028e-05, 7.780500000000024e-05, 7.723600000000136e-05, 7.75839999999986e-05, 7.784799999999842e-05, 7.805599999999996e-05, 7.797299999999507e-05, 7.752800000000032e-05, 7.738799999999768e-05, 7.713800000000437e-05, 7.737500000000452e-05, 7.736100000000495e-05, 7.74719999999951e-05, 7.801400000000125e-05, 7.719399999999571e-05, 7.802800000000082e-05, 7.76110000000052e-05, 7.718100000000255e-05, 7.786199999999799e-05, 7.772299999999482e-05, 7.79440000000034e-05, 7.787499999999808e-05, 7.730499999999974e-05, 7.805500000000049e-05, 7.725000000000093e-05, 7.734699999999844e-05, 7.79440000000034e-05, 7.741700000000323e-05, 7.718100000000255e-05, 7.716700000000298e-05]</msg>
<status status="PASS" starttime="20201112 12:43:22.016" endtime="20201112 12:43:22.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.005" endtime="20201112 12:43:22.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.033" endtime="20201112 12:43:22.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:22.041" endtime="20201112 12:43:22.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.037" endtime="20201112 12:43:22.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.028" endtime="20201112 12:43:22.066"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.516" endtime="20201112 12:43:22.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.515" endtime="20201112 12:43:22.067"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.090" endtime="20201112 12:43:22.112"></status>
</kw>
<msg timestamp="20201112 12:43:22.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.086" endtime="20201112 12:43:22.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.115" endtime="20201112 12:43:22.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.121" endtime="20201112 12:43:22.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.079" endtime="20201112 12:43:22.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.073" endtime="20201112 12:43:22.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.144" endtime="20201112 12:43:22.481"></status>
</kw>
<msg timestamp="20201112 12:43:22.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042126764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042205528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:22.141" endtime="20201112 12:43:22.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042126764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042205528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:22.490" endtime="20201112 12:43:22.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.509" endtime="20201112 12:43:22.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.134" endtime="20201112 12:43:22.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.129" endtime="20201112 12:43:22.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:22.528" level="INFO">${RESULT} = [{'time': 0.042205528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.8764000000002e-05, 'source_diff': 7.8764000000002e-05}, {'time': 0.042294528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7...</msg>
<status status="PASS" starttime="20201112 12:43:22.519" endtime="20201112 12:43:22.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:22.558" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:22.530" endtime="20201112 12:43:22.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.569" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 12:43:22.567" endtime="20201112 12:43:22.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.575" level="INFO">VALUE: [7.8764000000002e-05, 7.886099999999951e-05, 7.902799999999488e-05, 7.859799999999917e-05, 7.8764000000002e-05, 7.898700000000258e-05, 7.866600000000501e-05, 7.812500000000527e-05, 7.86389999999984e-05, 7.880500000000124e-05, 7.861099999999926e-05, 7.89310000000043e-05, 7.855600000000046e-05, 7.886100000000645e-05, 7.870800000000372e-05, 7.862499999999883e-05, 7.82640000000015e-05, 7.901400000000225e-05, 7.894399999999746e-05, 7.86519999999985e-05, 7.895799999999703e-05, 7.8764000000002e-05, 7.83890000000051e-05, 7.906899999999412e-05, 7.840299999999772e-05, 7.870900000000319e-05, 7.850000000000218e-05, 7.913900000000584e-05, 7.882000000000028e-05, 7.823700000000183e-05, 7.826399999999456e-05, 7.84169999999973e-05, 7.861099999999926e-05, 7.840200000000519e-05, 7.908300000000063e-05, 7.820800000000322e-05, 7.84440000000039e-05, 7.898600000000311e-05, 7.865300000000491e-05, 7.851399999999481e-05, 7.897200000000354e-05, 7.816700000000398e-05, 7.820900000000269e-05, 7.911099999999976e-05, 7.837499999999858e-05, 7.85969999999997e-05, 7.88190000000008e-05, 7.841600000000476e-05, 7.86389999999984e-05, 7.876399999999506e-05]</msg>
<status status="PASS" starttime="20201112 12:43:22.572" endtime="20201112 12:43:22.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.560" endtime="20201112 12:43:22.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.584" endtime="20201112 12:43:22.587"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:22.592" endtime="20201112 12:43:22.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.588" endtime="20201112 12:43:22.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.580" endtime="20201112 12:43:22.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.069" endtime="20201112 12:43:22.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.068" endtime="20201112 12:43:22.618"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.641" endtime="20201112 12:43:22.662"></status>
</kw>
<msg timestamp="20201112 12:43:22.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.638" endtime="20201112 12:43:22.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.665" endtime="20201112 12:43:22.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.672" endtime="20201112 12:43:22.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.630" endtime="20201112 12:43:22.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.625" endtime="20201112 12:43:22.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.695" endtime="20201112 12:43:23.030"></status>
</kw>
<msg timestamp="20201112 12:43:23.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041804403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041883653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:22.692" endtime="20201112 12:43:23.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041804403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041883653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:23.039" endtime="20201112 12:43:23.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.058" endtime="20201112 12:43:23.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.684" endtime="20201112 12:43:23.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.680" endtime="20201112 12:43:23.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:23.079" level="INFO">${RESULT} = [{'time': 0.041883653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.925000000000293e-05, 'source_diff': 7.925000000000293e-05}, {'time': 0.041982681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:23.070" endtime="20201112 12:43:23.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:23.109" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:23.081" endtime="20201112 12:43:23.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.120" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 12:43:23.118" endtime="20201112 12:43:23.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.125" level="INFO">VALUE: [7.925000000000293e-05, 8.011200000000024e-05, 7.988899999999965e-05, 7.951400000000275e-05, 7.917999999999814e-05, 7.963799999999993e-05, 7.93049999999948e-05, 7.919399999999771e-05, 7.940299999999872e-05, 8.000000000000368e-05, 7.962499999999983e-05, 7.974999999999649e-05, 7.9458999999997e-05, 7.962499999999983e-05, 8.001399999999631e-05, 7.959800000000017e-05, 7.94719999999971e-05, 7.967999999999864e-05, 7.927699999999566e-05, 7.956900000000156e-05, 7.919399999999771e-05, 7.948599999999667e-05, 7.95970000000007e-05, 8.008300000000163e-05, 8.005600000000196e-05, 7.981999999999434e-05, 7.940299999999872e-05, 7.981999999999434e-05, 8.004199999999545e-05, 7.926399999999556e-05, 7.984700000000094e-05, 7.994399999999846e-05, 7.951399999999581e-05, 7.925000000000293e-05, 7.962499999999983e-05, 7.952800000000232e-05, 7.9764000000003e-05, 7.977799999999563e-05, 7.961100000000026e-05, 7.979200000000214e-05, 8.002800000000282e-05, 7.981899999999487e-05, 7.955500000000199e-05, 7.929100000000217e-05, 7.988899999999965e-05, 8.015299999999947e-05, 7.993000000000583e-05, 7.916699999999804e-05, 7.919500000000412e-05, 7.977800000000257e-05]</msg>
<status status="PASS" starttime="20201112 12:43:23.122" endtime="20201112 12:43:23.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.111" endtime="20201112 12:43:23.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.135" endtime="20201112 12:43:23.138"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:23.143" endtime="20201112 12:43:23.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.139" endtime="20201112 12:43:23.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.130" endtime="20201112 12:43:23.168"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.620" endtime="20201112 12:43:23.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.619" endtime="20201112 12:43:23.169"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.192" endtime="20201112 12:43:23.214"></status>
</kw>
<msg timestamp="20201112 12:43:23.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:23.188" endtime="20201112 12:43:23.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:23.217" endtime="20201112 12:43:23.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.224" endtime="20201112 12:43:23.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.181" endtime="20201112 12:43:23.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.176" endtime="20201112 12:43:23.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.248" endtime="20201112 12:43:23.583"></status>
</kw>
<msg timestamp="20201112 12:43:23.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042003097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042083583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:23.244" endtime="20201112 12:43:23.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042003097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042083583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:23.592" endtime="20201112 12:43:23.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.611" endtime="20201112 12:43:23.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.237" endtime="20201112 12:43:23.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.232" endtime="20201112 12:43:23.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:23.630" level="INFO">${RESULT} = [{'time': 0.042083583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.048599999999767e-05, 'source_diff': 8.048599999999767e-05}, {'time': 0.042173583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:23.621" endtime="20201112 12:43:23.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:23.660" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:23.632" endtime="20201112 12:43:23.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.671" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 12:43:23.669" endtime="20201112 12:43:23.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.676" level="INFO">VALUE: [8.048599999999767e-05, 8.054100000000342e-05, 8.040200000000025e-05, 8.072200000000529e-05, 8.066600000000007e-05, 8.100000000000468e-05, 8.083300000000238e-05, 8.04719999999981e-05, 8.066699999999954e-05, 8.034700000000145e-05, 8.098599999999817e-05, 8.077800000000357e-05, 8.101299999999784e-05, 8.070899999999825e-05, 8.034700000000145e-05, 8.03190000000023e-05, 8.094399999999946e-05, 8.029100000000317e-05, 8.073599999999792e-05, 8.105600000000296e-05, 8.037499999999365e-05, 8.09719999999986e-05, 8.034700000000145e-05, 8.11390000000009e-05, 8.10840000000021e-05, 8.05269999999969e-05, 8.056899999999562e-05, 8.024999999999699e-05, 8.062500000000083e-05, 8.04169999999993e-05, 8.020800000000522e-05, 8.07919999999962e-05, 8.0764000000004e-05, 8.04169999999993e-05, 8.09589999999985e-05, 8.111100000000177e-05, 8.055500000000299e-05, 8.020899999999775e-05, 8.065299999999997e-05, 8.020799999999828e-05, 8.054099999999648e-05, 8.061100000000126e-05, 8.065299999999997e-05, 8.09719999999986e-05, 8.095799999999903e-05, 8.108300000000263e-05, 8.04169999999993e-05, 8.099999999999774e-05, 8.075000000000443e-05, 8.09719999999986e-05]</msg>
<status status="PASS" starttime="20201112 12:43:23.673" endtime="20201112 12:43:23.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.662" endtime="20201112 12:43:23.680"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.686" endtime="20201112 12:43:23.689"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:23.694" endtime="20201112 12:43:23.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.690" endtime="20201112 12:43:23.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.681" endtime="20201112 12:43:23.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.171" endtime="20201112 12:43:23.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.170" endtime="20201112 12:43:23.720"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.743" endtime="20201112 12:43:23.764"></status>
</kw>
<msg timestamp="20201112 12:43:23.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:23.739" endtime="20201112 12:43:23.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:23.767" endtime="20201112 12:43:23.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.774" endtime="20201112 12:43:23.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.732" endtime="20201112 12:43:23.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.726" endtime="20201112 12:43:23.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.797" endtime="20201112 12:43:24.131"></status>
</kw>
<msg timestamp="20201112 12:43:24.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041569889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041651611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:23.793" endtime="20201112 12:43:24.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041569889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041651611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.141" endtime="20201112 12:43:24.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.159" endtime="20201112 12:43:24.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.786" endtime="20201112 12:43:24.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.782" endtime="20201112 12:43:24.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:24.178" level="INFO">${RESULT} = [{'time': 0.041651611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.172199999999935e-05, 'source_diff': 8.172199999999935e-05}, {'time': 0.041742569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:24.169" endtime="20201112 12:43:24.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:24.209" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:24.180" endtime="20201112 12:43:24.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.219" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 12:43:24.217" endtime="20201112 12:43:24.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.225" level="INFO">VALUE: [8.172199999999935e-05, 8.174999999999849e-05, 8.159699999999576e-05, 8.15970000000027e-05, 8.15970000000027e-05, 8.161099999999533e-05, 8.152800000000432e-05, 8.201399999999831e-05, 8.162500000000183e-05, 8.175000000000543e-05, 8.195900000000644e-05, 8.136100000000202e-05, 8.151399999999781e-05, 8.20840000000031e-05, 8.150000000000518e-05, 8.193100000000036e-05, 8.138900000000115e-05, 8.201399999999831e-05, 8.194400000000046e-05, 8.16390000000014e-05, 8.119399999999971e-05, 8.12090000000057e-05, 8.1846999999996e-05, 8.131999999999584e-05, 8.148599999999867e-05, 8.127699999999766e-05, 8.155500000000399e-05, 8.198599999999917e-05, 8.12919999999967e-05, 8.199999999999874e-05, 8.118000000000014e-05, 8.154200000000389e-05, 8.17919999999972e-05, 8.161099999999533e-05, 8.179099999999773e-05, 8.144399999999996e-05, 8.133399999999541e-05, 8.119499999999918e-05, 8.212500000000234e-05, 8.2152000000002e-05, 8.11249999999944e-05, 8.137500000000158e-05, 8.19719999999996e-05, 8.201400000000525e-05, 8.184700000000295e-05, 8.176399999999806e-05, 8.212500000000234e-05, 8.182000000000328e-05, 8.197299999999907e-05, 8.13469999999955e-05]</msg>
<status status="PASS" starttime="20201112 12:43:24.222" endtime="20201112 12:43:24.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.211" endtime="20201112 12:43:24.228"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.235" endtime="20201112 12:43:24.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:24.244" endtime="20201112 12:43:24.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.239" endtime="20201112 12:43:24.268"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.230" endtime="20201112 12:43:24.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.722" endtime="20201112 12:43:24.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.721" endtime="20201112 12:43:24.270"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.293" endtime="20201112 12:43:24.315"></status>
</kw>
<msg timestamp="20201112 12:43:24.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.290" endtime="20201112 12:43:24.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.317" endtime="20201112 12:43:24.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.319" endtime="20201112 12:43:24.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.282" endtime="20201112 12:43:24.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.277" endtime="20201112 12:43:24.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.330" endtime="20201112 12:43:24.617"></status>
</kw>
<msg timestamp="20201112 12:43:24.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042555139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042638028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.329" endtime="20201112 12:43:24.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042555139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042638028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.621" endtime="20201112 12:43:24.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.629" endtime="20201112 12:43:24.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.325" endtime="20201112 12:43:24.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.323" endtime="20201112 12:43:24.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:24.638" level="INFO">${RESULT} = [{'time': 0.042638028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.288900000000265e-05, 'source_diff': 8.288900000000265e-05}, {'time': 0.042733014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:24.634" endtime="20201112 12:43:24.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:24.652" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:24.639" endtime="20201112 12:43:24.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.657" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 12:43:24.656" endtime="20201112 12:43:24.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.660" level="INFO">VALUE: [8.288900000000265e-05, 8.281999999999734e-05, 8.273599999999992e-05, 8.2764000000006e-05, 8.243100000000086e-05, 8.288800000000318e-05, 8.266700000000154e-05, 8.309699999999726e-05, 8.316600000000257e-05, 8.269399999999427e-05, 8.245800000000053e-05, 8.218100000000061e-05, 8.308299999999769e-05, 8.232000000000378e-05, 8.237499999999565e-05, 8.226299999999909e-05, 8.244500000000043e-05, 8.233399999999641e-05, 8.216700000000104e-05, 8.259699999999676e-05, 8.238900000000215e-05, 8.243000000000139e-05, 8.238900000000215e-05, 8.233300000000388e-05, 8.294500000000093e-05, 8.284700000000395e-05, 8.216700000000104e-05, 8.269500000000068e-05, 8.238900000000215e-05, 8.266700000000154e-05, 8.238900000000215e-05, 8.251299999999934e-05, 8.308299999999769e-05, 8.258300000000413e-05, 8.298600000000017e-05, 8.251399999999881e-05, 8.220800000000028e-05, 8.302800000000582e-05, 8.277799999999863e-05, 8.224999999999899e-05, 8.311100000000377e-05, 8.294500000000093e-05, 8.255599999999752e-05, 8.24720000000001e-05, 8.272200000000035e-05, 8.265300000000197e-05, 8.316700000000204e-05, 8.307000000000453e-05, 8.216700000000104e-05, 8.249999999999924e-05]</msg>
<status status="PASS" starttime="20201112 12:43:24.658" endtime="20201112 12:43:24.660"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.653" endtime="20201112 12:43:24.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.664" endtime="20201112 12:43:24.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:24.668" endtime="20201112 12:43:24.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.666" endtime="20201112 12:43:24.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.662" endtime="20201112 12:43:24.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.272" endtime="20201112 12:43:24.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.271" endtime="20201112 12:43:24.690"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.700" endtime="20201112 12:43:24.719"></status>
</kw>
<msg timestamp="20201112 12:43:24.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.699" endtime="20201112 12:43:24.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.720" endtime="20201112 12:43:24.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.723" endtime="20201112 12:43:24.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.695" endtime="20201112 12:43:24.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.693" endtime="20201112 12:43:24.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.734" endtime="20201112 12:43:25.019"></status>
</kw>
<msg timestamp="20201112 12:43:25.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024612444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024696319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.733" endtime="20201112 12:43:25.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024612444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024696319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:25.024" endtime="20201112 12:43:25.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.032" endtime="20201112 12:43:25.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.729" endtime="20201112 12:43:25.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.727" endtime="20201112 12:43:25.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:25.042" level="INFO">${RESULT} = [{'time': 0.024696319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.387500000000062e-05, 'source_diff': 8.387500000000062e-05}, {'time': 0.024794306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:25.038" endtime="20201112 12:43:25.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:25.055" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:25.043" endtime="20201112 12:43:25.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.061" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 12:43:25.060" endtime="20201112 12:43:25.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.063" level="INFO">VALUE: [8.387500000000062e-05, 8.331999999999784e-05, 8.352699999999991e-05, 8.399999999999727e-05, 8.398600000000117e-05, 8.388900000000019e-05, 8.412500000000087e-05, 8.395799999999856e-05, 8.413900000000044e-05, 8.406999999999859e-05, 8.359699999999776e-05, 8.341699999999883e-05, 8.370899999999779e-05, 8.401299999999737e-05, 8.362500000000037e-05, 8.409699999999826e-05, 8.395799999999856e-05, 8.33330000000014e-05, 8.406899999999912e-05, 8.382000000000181e-05, 8.34170000000023e-05, 8.375000000000049e-05, 8.39720000000016e-05, 8.318099999999815e-05, 8.377799999999963e-05, 8.358400000000113e-05, 8.34720000000011e-05, 8.406899999999912e-05, 8.355500000000252e-05, 8.387500000000062e-05, 8.391699999999933e-05, 8.404199999999945e-05, 8.408300000000216e-05, 8.350000000000024e-05, 8.368099999999865e-05, 8.369499999999822e-05, 8.36529999999995e-05, 8.351399999999981e-05, 8.330500000000227e-05, 8.398600000000117e-05, 8.388900000000019e-05, 8.350000000000024e-05, 8.376400000000006e-05, 8.359700000000123e-05, 8.373599999999745e-05, 8.402799999999988e-05, 8.347199999999763e-05, 8.343100000000186e-05, 8.39720000000016e-05, 8.324999999999999e-05]</msg>
<status status="PASS" starttime="20201112 12:43:25.062" endtime="20201112 12:43:25.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.056" endtime="20201112 12:43:25.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.068" endtime="20201112 12:43:25.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:25.072" endtime="20201112 12:43:25.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.070" endtime="20201112 12:43:25.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.066" endtime="20201112 12:43:25.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.691" endtime="20201112 12:43:25.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.690" endtime="20201112 12:43:25.093"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.104" endtime="20201112 12:43:25.123"></status>
</kw>
<msg timestamp="20201112 12:43:25.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:25.102" endtime="20201112 12:43:25.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:25.124" endtime="20201112 12:43:25.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.127" endtime="20201112 12:43:25.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.099" endtime="20201112 12:43:25.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.096" endtime="20201112 12:43:25.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.138" endtime="20201112 12:43:25.442"></status>
</kw>
<msg timestamp="20201112 12:43:25.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024691708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024776736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:25.137" endtime="20201112 12:43:25.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024691708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024776736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:25.452" endtime="20201112 12:43:25.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.470" endtime="20201112 12:43:25.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.133" endtime="20201112 12:43:25.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.131" endtime="20201112 12:43:25.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:25.489" level="INFO">${RESULT} = [{'time': 0.024776736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.502800000000088e-05, 'source_diff': 8.502800000000088e-05}, {'time': 0.02487075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:43:25.480" endtime="20201112 12:43:25.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:25.519" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:25.491" endtime="20201112 12:43:25.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.530" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 12:43:25.528" endtime="20201112 12:43:25.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.536" level="INFO">VALUE: [8.502800000000088e-05, 8.427800000000013e-05, 8.470800000000278e-05, 8.459699999999876e-05, 8.501400000000131e-05, 8.456999999999909e-05, 8.420799999999881e-05, 8.445899999999854e-05, 8.454100000000048e-05, 8.458299999999919e-05, 8.465299999999704e-05, 8.493000000000042e-05, 8.440300000000026e-05, 8.418100000000261e-05, 8.490300000000076e-05, 8.476399999999759e-05, 8.505500000000055e-05, 8.456999999999909e-05, 8.484800000000195e-05, 8.477800000000063e-05, 8.440300000000026e-05, 8.505500000000055e-05, 8.440300000000026e-05, 8.477800000000063e-05, 8.458299999999919e-05, 8.468099999999965e-05, 8.430599999999927e-05, 8.42919999999997e-05, 8.468099999999965e-05, 8.424999999999752e-05, 8.426400000000056e-05, 8.477800000000063e-05, 8.500000000000174e-05, 8.431899999999937e-05, 8.48050000000003e-05, 8.424999999999752e-05, 8.426400000000056e-05, 8.468100000000311e-05, 8.487500000000162e-05, 8.509699999999926e-05, 8.419500000000218e-05, 8.462500000000137e-05, 8.425000000000099e-05, 8.477800000000063e-05, 8.469400000000321e-05, 8.48050000000003e-05, 8.46799999999967e-05, 8.444399999999949e-05, 8.438900000000069e-05, 8.420799999999881e-05]</msg>
<status status="PASS" starttime="20201112 12:43:25.533" endtime="20201112 12:43:25.537"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.521" endtime="20201112 12:43:25.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.545" endtime="20201112 12:43:25.548"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:25.554" endtime="20201112 12:43:25.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.549" endtime="20201112 12:43:25.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.541" endtime="20201112 12:43:25.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.094" endtime="20201112 12:43:25.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.094" endtime="20201112 12:43:25.579"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.602" endtime="20201112 12:43:25.624"></status>
</kw>
<msg timestamp="20201112 12:43:25.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:25.599" endtime="20201112 12:43:25.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:25.628" endtime="20201112 12:43:25.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.634" endtime="20201112 12:43:25.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.592" endtime="20201112 12:43:25.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.586" endtime="20201112 12:43:25.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.657" endtime="20201112 12:43:25.994"></status>
</kw>
<msg timestamp="20201112 12:43:26.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041690611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041776611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:25.654" endtime="20201112 12:43:26.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041690611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041776611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:26.003" endtime="20201112 12:43:26.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.022" endtime="20201112 12:43:26.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.647" endtime="20201112 12:43:26.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.642" endtime="20201112 12:43:26.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:26.041" level="INFO">${RESULT} = [{'time': 0.041776611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.59999999999958e-05, 'source_diff': 8.59999999999958e-05}, {'time': 0.041877556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:26.032" endtime="20201112 12:43:26.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:26.071" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:26.043" endtime="20201112 12:43:26.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.083" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 12:43:26.080" endtime="20201112 12:43:26.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.088" level="INFO">VALUE: [8.59999999999958e-05, 8.588900000000566e-05, 8.572200000000335e-05, 8.538899999999822e-05, 8.538899999999822e-05, 8.516599999999763e-05, 8.57920000000012e-05, 8.518100000000361e-05, 8.565299999999804e-05, 8.582000000000034e-05, 8.57920000000012e-05, 8.537499999999865e-05, 8.590300000000523e-05, 8.584799999999948e-05, 8.5847e-05, 8.588899999999872e-05, 8.5847e-05, 8.613899999999897e-05, 8.600000000000274e-05, 8.572199999999641e-05, 8.558300000000019e-05, 8.551400000000181e-05, 8.56669999999976e-05, 8.608400000000016e-05, 8.605499999999461e-05, 8.531900000000037e-05, 8.56249999999989e-05, 8.561099999999933e-05, 8.565300000000498e-05, 8.598599999999623e-05, 8.51669999999971e-05, 8.545800000000353e-05, 8.572200000000335e-05, 8.56669999999976e-05, 8.576400000000206e-05, 8.615299999999854e-05, 8.547299999999564e-05, 8.588899999999872e-05, 8.537500000000559e-05, 8.565199999999856e-05, 8.543000000000439e-05, 8.619500000000418e-05, 8.538900000000516e-05, 8.524999999999505e-05, 8.607000000000059e-05, 8.51669999999971e-05, 8.593100000000437e-05, 8.541699999999736e-05, 8.524999999999505e-05, 8.540199999999831e-05]</msg>
<status status="PASS" starttime="20201112 12:43:26.085" endtime="20201112 12:43:26.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.073" endtime="20201112 12:43:26.091"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.097" endtime="20201112 12:43:26.100"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:26.106" endtime="20201112 12:43:26.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.101" endtime="20201112 12:43:26.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.093" endtime="20201112 12:43:26.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.582" endtime="20201112 12:43:26.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.580" endtime="20201112 12:43:26.131"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.154" endtime="20201112 12:43:26.177"></status>
</kw>
<msg timestamp="20201112 12:43:26.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.151" endtime="20201112 12:43:26.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.180" endtime="20201112 12:43:26.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.187" endtime="20201112 12:43:26.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.144" endtime="20201112 12:43:26.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.138" endtime="20201112 12:43:26.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.210" endtime="20201112 12:43:26.546"></status>
</kw>
<msg timestamp="20201112 12:43:26.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041726597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041812861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:26.207" endtime="20201112 12:43:26.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041726597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041812861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:26.556" endtime="20201112 12:43:26.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.574" endtime="20201112 12:43:26.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.200" endtime="20201112 12:43:26.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.195" endtime="20201112 12:43:26.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:26.593" level="INFO">${RESULT} = [{'time': 0.041812861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.626400000000256e-05, 'source_diff': 8.626400000000256e-05}, {'time': 0.041911861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:26.584" endtime="20201112 12:43:26.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:26.624" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:26.595" endtime="20201112 12:43:26.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.635" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 12:43:26.632" endtime="20201112 12:43:26.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.640" level="INFO">VALUE: [8.626400000000256e-05, 8.676400000000306e-05, 8.69999999999968e-05, 8.670799999999784e-05, 8.665299999999904e-05, 8.656999999999415e-05, 8.713899999999997e-05, 8.686200000000005e-05, 8.652799999999544e-05, 8.71250000000004e-05, 8.663899999999947e-05, 8.663899999999947e-05, 8.669399999999827e-05, 8.61799999999982e-05, 8.665299999999904e-05, 8.626400000000256e-05, 8.69999999999968e-05, 8.615299999999854e-05, 8.71250000000004e-05, 8.661100000000033e-05, 8.640299999999879e-05, 8.713800000000049e-05, 8.676400000000306e-05, 8.630499999999486e-05, 8.622200000000385e-05, 8.700000000000374e-05, 8.668100000000512e-05, 8.636100000000008e-05, 8.69590000000045e-05, 8.688899999999972e-05, 8.701400000000331e-05, 8.626399999999562e-05, 8.687500000000015e-05, 8.627700000000266e-05, 8.661100000000033e-05, 8.648599999999673e-05, 8.622200000000385e-05, 8.654200000000195e-05, 8.619500000000418e-05, 8.71669999999991e-05, 8.709800000000073e-05, 8.665199999999956e-05, 8.693100000000537e-05, 8.679100000000273e-05, 8.622199999999691e-05, 8.705500000000255e-05, 8.64999999999963e-05, 8.708300000000169e-05, 8.655500000000205e-05, 8.640299999999879e-05]</msg>
<status status="PASS" starttime="20201112 12:43:26.637" endtime="20201112 12:43:26.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.625" endtime="20201112 12:43:26.643"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.650" endtime="20201112 12:43:26.653"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:26.658" endtime="20201112 12:43:26.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.654" endtime="20201112 12:43:26.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.645" endtime="20201112 12:43:26.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.134" endtime="20201112 12:43:26.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.132" endtime="20201112 12:43:26.684"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.706" endtime="20201112 12:43:26.728"></status>
</kw>
<msg timestamp="20201112 12:43:26.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.703" endtime="20201112 12:43:26.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.732" endtime="20201112 12:43:26.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.738" endtime="20201112 12:43:26.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.696" endtime="20201112 12:43:26.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.690" endtime="20201112 12:43:26.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.761" endtime="20201112 12:43:27.096"></status>
</kw>
<msg timestamp="20201112 12:43:27.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041648569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041736014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:26.758" endtime="20201112 12:43:27.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041648569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041736014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:27.106" endtime="20201112 12:43:27.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.124" endtime="20201112 12:43:27.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.751" endtime="20201112 12:43:27.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.746" endtime="20201112 12:43:27.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:27.146" level="INFO">${RESULT} = [{'time': 0.041736014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.74449999999985e-05, 'source_diff': 8.74449999999985e-05}, {'time': 0.04184, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.8...</msg>
<status status="PASS" starttime="20201112 12:43:27.136" endtime="20201112 12:43:27.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:27.250" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:27.148" endtime="20201112 12:43:27.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.261" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 12:43:27.259" endtime="20201112 12:43:27.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.267" level="INFO">VALUE: [8.74449999999985e-05, 8.806900000000312e-05, 8.726400000000356e-05, 8.769499999999875e-05, 8.804200000000345e-05, 8.743099999999893e-05, 8.751399999999687e-05, 8.738900000000022e-05, 8.770799999999884e-05, 8.801400000000431e-05, 8.720799999999834e-05, 8.772200000000535e-05, 8.723600000000442e-05, 8.718099999999868e-05, 8.806900000000312e-05, 8.802799999999694e-05, 8.807000000000259e-05, 8.744400000000596e-05, 8.744399999999902e-05, 8.779199999999626e-05, 8.733300000000194e-05, 8.745800000000553e-05, 8.791600000000038e-05, 8.754099999999654e-05, 8.743099999999893e-05, 8.794399999999952e-05, 8.73470000000015e-05, 8.752799999999644e-05, 8.76250000000009e-05, 8.76250000000009e-05, 8.752699999999697e-05, 8.808300000000269e-05, 8.78050000000033e-05, 8.71799999999992e-05, 8.751400000000381e-05, 8.776399999999712e-05, 8.805600000000302e-05, 8.797199999999866e-05, 8.715299999999954e-05, 8.769500000000569e-05, 8.729100000000323e-05, 8.776300000000459e-05, 8.802699999999747e-05, 8.805499999999661e-05, 8.779100000000373e-05, 8.722199999999791e-05, 8.747199999999816e-05, 8.808300000000269e-05, 8.769399999999927e-05, 8.757000000000209e-05]</msg>
<status status="PASS" starttime="20201112 12:43:27.264" endtime="20201112 12:43:27.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.252" endtime="20201112 12:43:27.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.282" endtime="20201112 12:43:27.284"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:27.290" endtime="20201112 12:43:27.312"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.286" endtime="20201112 12:43:27.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.277" endtime="20201112 12:43:27.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.686" endtime="20201112 12:43:27.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.685" endtime="20201112 12:43:27.316"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.341" endtime="20201112 12:43:27.364"></status>
</kw>
<msg timestamp="20201112 12:43:27.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:27.338" endtime="20201112 12:43:27.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:27.368" endtime="20201112 12:43:27.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.374" endtime="20201112 12:43:27.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.329" endtime="20201112 12:43:27.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.323" endtime="20201112 12:43:27.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.397" endtime="20201112 12:43:27.730"></status>
</kw>
<msg timestamp="20201112 12:43:27.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045337111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045425611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:27.394" endtime="20201112 12:43:27.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045337111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045425611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:27.740" endtime="20201112 12:43:27.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.759" endtime="20201112 12:43:27.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.387" endtime="20201112 12:43:27.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.382" endtime="20201112 12:43:27.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:27.776" level="INFO">${RESULT} = [{'time': 0.045425611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.84999999999983e-05, 'source_diff': 8.84999999999983e-05}, {'time': 0.045527639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:27.767" endtime="20201112 12:43:27.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:27.806" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:27.778" endtime="20201112 12:43:27.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.817" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 12:43:27.815" endtime="20201112 12:43:27.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.823" level="INFO">VALUE: [8.84999999999983e-05, 8.898599999999923e-05, 8.909699999999632e-05, 8.880600000000377e-05, 8.89999999999988e-05, 8.81670000000001e-05, 8.900000000000574e-05, 8.912499999999546e-05, 8.886200000000205e-05, 8.872300000000582e-05, 8.872199999999941e-05, 8.911100000000283e-05, 8.848599999999873e-05, 8.890300000000129e-05, 8.830499999999686e-05, 8.855599999999658e-05, 8.847199999999916e-05, 8.841700000000036e-05, 8.884700000000301e-05, 8.913899999999503e-05, 8.830599999999633e-05, 8.822199999999891e-05, 8.816600000000063e-05, 8.893000000000095e-05, 8.872199999999941e-05, 8.836099999999514e-05, 8.873599999999898e-05, 8.820799999999934e-05, 8.884800000000248e-05, 8.847199999999916e-05, 8.841599999999394e-05, 8.833399999999547e-05, 8.852800000000438e-05, 8.834700000000251e-05, 8.823599999999848e-05, 8.863899999999453e-05, 8.823599999999848e-05, 8.837500000000165e-05, 8.86670000000006e-05, 8.858399999999572e-05, 8.847199999999916e-05, 8.84999999999983e-05, 8.84999999999983e-05, 8.886100000000258e-05, 8.859700000000276e-05, 8.888900000000172e-05, 8.872199999999941e-05, 8.833300000000294e-05, 8.838900000000122e-05, 8.89999999999988e-05]</msg>
<status status="PASS" starttime="20201112 12:43:27.819" endtime="20201112 12:43:27.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.808" endtime="20201112 12:43:27.826"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.832" endtime="20201112 12:43:27.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:27.840" endtime="20201112 12:43:27.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.836" endtime="20201112 12:43:27.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.827" endtime="20201112 12:43:27.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.318" endtime="20201112 12:43:27.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.317" endtime="20201112 12:43:27.866"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.889" endtime="20201112 12:43:27.912"></status>
</kw>
<msg timestamp="20201112 12:43:27.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:27.885" endtime="20201112 12:43:27.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:27.915" endtime="20201112 12:43:27.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.922" endtime="20201112 12:43:27.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.878" endtime="20201112 12:43:27.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.872" endtime="20201112 12:43:27.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.945" endtime="20201112 12:43:28.280"></status>
</kw>
<msg timestamp="20201112 12:43:28.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043118778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043208292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:27.942" endtime="20201112 12:43:28.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043118778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043208292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:28.290" endtime="20201112 12:43:28.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.308" endtime="20201112 12:43:28.312"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.934" endtime="20201112 12:43:28.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.930" endtime="20201112 12:43:28.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:28.326" level="INFO">${RESULT} = [{'time': 0.043208292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.951399999999887e-05, 'source_diff': 8.951399999999887e-05}, {'time': 0.043316292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:28.317" endtime="20201112 12:43:28.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:28.356" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:28.328" endtime="20201112 12:43:28.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.367" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 12:43:28.365" endtime="20201112 12:43:28.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.373" level="INFO">VALUE: [8.951399999999887e-05, 9.015300000000254e-05, 8.933300000000394e-05, 8.96800000000017e-05, 8.974999999999955e-05, 8.919400000000077e-05, 8.955500000000505e-05, 8.959699999999682e-05, 8.94999999999993e-05, 8.991700000000186e-05, 8.96670000000016e-05, 8.987499999999621e-05, 8.959800000000323e-05, 8.974999999999955e-05, 8.990300000000229e-05, 8.980499999999836e-05, 8.931900000000437e-05, 9.015300000000254e-05, 8.970900000000032e-05, 8.976400000000606e-05, 8.993100000000143e-05, 8.980599999999783e-05, 8.983399999999697e-05, 8.972299999999989e-05, 9.008399999999722e-05, 8.997300000000014e-05, 8.980499999999836e-05, 9.005499999999861e-05, 8.941599999999494e-05, 9.012499999999646e-05, 8.9332999999997e-05, 8.997200000000066e-05, 8.963900000000247e-05, 8.997200000000066e-05, 8.9945000000001e-05, 8.934800000000298e-05, 8.943100000000093e-05, 8.930600000000427e-05, 8.945800000000059e-05, 9.009699999999732e-05, 8.925000000000599e-05, 8.955499999999811e-05, 8.927799999999819e-05, 8.916699999999417e-05, 8.96670000000016e-05, 8.933399999999647e-05, 8.959699999999682e-05, 8.961100000000333e-05, 8.945800000000059e-05, 8.995800000000109e-05]</msg>
<status status="PASS" starttime="20201112 12:43:28.370" endtime="20201112 12:43:28.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.358" endtime="20201112 12:43:28.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.383" endtime="20201112 12:43:28.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:28.392" endtime="20201112 12:43:28.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.387" endtime="20201112 12:43:28.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.379" endtime="20201112 12:43:28.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.868" endtime="20201112 12:43:28.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.867" endtime="20201112 12:43:28.418"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.440" endtime="20201112 12:43:28.462"></status>
</kw>
<msg timestamp="20201112 12:43:28.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:28.437" endtime="20201112 12:43:28.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:28.465" endtime="20201112 12:43:28.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.472" endtime="20201112 12:43:28.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.430" endtime="20201112 12:43:28.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.424" endtime="20201112 12:43:28.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.497" endtime="20201112 12:43:28.788"></status>
</kw>
<msg timestamp="20201112 12:43:28.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04180725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041898403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:28.493" endtime="20201112 12:43:28.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04180725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041898403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:28.793" endtime="20201112 12:43:28.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.801" endtime="20201112 12:43:28.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.485" endtime="20201112 12:43:28.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.480" endtime="20201112 12:43:28.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:28.809" level="INFO">${RESULT} = [{'time': 0.041898403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.115300000000354e-05, 'source_diff': 9.115300000000354e-05}, {'time': 0.042006403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:28.805" endtime="20201112 12:43:28.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:28.823" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:28.810" endtime="20201112 12:43:28.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.828" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 12:43:28.827" endtime="20201112 12:43:28.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.831" level="INFO">VALUE: [9.115300000000354e-05, 9.076400000000012e-05, 9.034699999999757e-05, 9.041600000000288e-05, 9.059799999999729e-05, 9.073700000000046e-05, 9.08329999999985e-05, 9.111099999999789e-05, 9.016600000000263e-05, 9.06529999999961e-05, 9.022200000000091e-05, 9.058400000000466e-05, 9.073600000000098e-05, 9.018100000000168e-05, 9.098600000000123e-05, 9.095899999999463e-05, 9.080599999999883e-05, 9.045800000000159e-05, 9.020800000000134e-05, 9.022199999999397e-05, 9.108299999999875e-05, 9.073600000000098e-05, 9.022200000000091e-05, 9.030599999999833e-05, 9.055599999999858e-05, 9.086099999999764e-05, 9.077799999999969e-05, 9.058400000000466e-05, 9.087500000000415e-05, 9.11529999999966e-05, 9.037500000000365e-05, 9.088900000000372e-05, 9.102799999999994e-05, 9.052800000000638e-05, 9.104199999999951e-05, 9.065300000000304e-05, 9.033399999999747e-05, 9.058399999999772e-05, 9.095900000000157e-05, 9.095900000000157e-05, 9.065199999999662e-05, 9.047200000000116e-05, 9.027799999999919e-05, 9.020800000000134e-05, 9.054199999999901e-05, 9.063900000000347e-05, 9.076400000000012e-05, 9.101400000000037e-05, 9.07920000000062e-05, 9.06670000000026e-05]</msg>
<status status="PASS" starttime="20201112 12:43:28.829" endtime="20201112 12:43:28.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.824" endtime="20201112 12:43:28.832"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.835" endtime="20201112 12:43:28.837"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:28.839" endtime="20201112 12:43:28.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.837" endtime="20201112 12:43:28.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.833" endtime="20201112 12:43:28.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.420" endtime="20201112 12:43:28.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.419" endtime="20201112 12:43:28.861"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.871" endtime="20201112 12:43:28.890"></status>
</kw>
<msg timestamp="20201112 12:43:28.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:28.870" endtime="20201112 12:43:28.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:28.892" endtime="20201112 12:43:28.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.894" endtime="20201112 12:43:28.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.866" endtime="20201112 12:43:28.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.864" endtime="20201112 12:43:28.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.905" endtime="20201112 12:43:29.229"></status>
</kw>
<msg timestamp="20201112 12:43:29.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024608542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024700264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:28.904" endtime="20201112 12:43:29.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024608542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024700264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:29.239" endtime="20201112 12:43:29.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.258" endtime="20201112 12:43:29.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.900" endtime="20201112 12:43:29.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.898" endtime="20201112 12:43:29.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:29.276" level="INFO">${RESULT} = [{'time': 0.024700264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.172199999999894e-05, 'source_diff': 9.172199999999894e-05}, {'time': 0.024806222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:29.267" endtime="20201112 12:43:29.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:29.308" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:29.278" endtime="20201112 12:43:29.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.319" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 12:43:29.316" endtime="20201112 12:43:29.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.324" level="INFO">VALUE: [9.172199999999894e-05, 9.213899999999803e-05, 9.1639000000001e-05, 9.173599999999851e-05, 9.176400000000112e-05, 9.163899999999753e-05, 9.166700000000014e-05, 9.147300000000164e-05, 9.215300000000107e-05, 9.142999999999998e-05, 9.117999999999973e-05, 9.129199999999976e-05, 9.194400000000005e-05, 9.184699999999907e-05, 9.118099999999921e-05, 9.116699999999964e-05, 9.166700000000014e-05, 9.215300000000107e-05, 9.159800000000176e-05, 9.223599999999901e-05, 9.152700000000097e-05, 9.147300000000164e-05, 9.123599999999801e-05, 9.204100000000104e-05, 9.126400000000062e-05, 9.175000000000155e-05, 9.141699999999989e-05, 9.18199999999994e-05, 9.183399999999897e-05, 9.13060000000028e-05, 9.175000000000155e-05, 9.159700000000229e-05, 9.162500000000143e-05, 9.155500000000011e-05, 9.141600000000041e-05, 9.131899999999943e-05, 9.195799999999962e-05, 9.179200000000026e-05, 9.191700000000039e-05, 9.148600000000173e-05, 9.176400000000112e-05, 9.186099999999864e-05, 9.120799999999887e-05, 9.129100000000029e-05, 9.204099999999757e-05, 9.16939999999998e-05, 9.201400000000137e-05, 9.168100000000318e-05, 9.156999999999915e-05, 9.211100000000236e-05]</msg>
<status status="PASS" starttime="20201112 12:43:29.321" endtime="20201112 12:43:29.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.310" endtime="20201112 12:43:29.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.333" endtime="20201112 12:43:29.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:29.342" endtime="20201112 12:43:29.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.337" endtime="20201112 12:43:29.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.329" endtime="20201112 12:43:29.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.862" endtime="20201112 12:43:29.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.861" endtime="20201112 12:43:29.367"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.391" endtime="20201112 12:43:29.414"></status>
</kw>
<msg timestamp="20201112 12:43:29.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:29.387" endtime="20201112 12:43:29.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:29.417" endtime="20201112 12:43:29.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.423" endtime="20201112 12:43:29.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.379" endtime="20201112 12:43:29.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.374" endtime="20201112 12:43:29.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.447" endtime="20201112 12:43:29.782"></status>
</kw>
<msg timestamp="20201112 12:43:29.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042386875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04247975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:29.443" endtime="20201112 12:43:29.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042386875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04247975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:29.792" endtime="20201112 12:43:29.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.810" endtime="20201112 12:43:29.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.436" endtime="20201112 12:43:29.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.432" endtime="20201112 12:43:29.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:29.829" level="INFO">${RESULT} = [{'time': 0.04247975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.287499999999921e-05, 'source_diff': 9.287499999999921e-05}, {'time': 0.04258175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:29.820" endtime="20201112 12:43:29.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:29.860" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:29.832" endtime="20201112 12:43:29.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.871" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 12:43:29.868" endtime="20201112 12:43:29.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.876" level="INFO">VALUE: [9.287499999999921e-05, 9.31529999999986e-05, 9.290299999999835e-05, 9.222199999999597e-05, 9.279199999999432e-05, 9.223700000000196e-05, 9.225000000000205e-05, 9.270800000000384e-05, 9.276400000000212e-05, 9.21659999999977e-05, 9.315300000000554e-05, 9.24859999999958e-05, 9.22079999999964e-05, 9.311099999999989e-05, 9.301399999999543e-05, 9.268100000000418e-05, 9.220899999999588e-05, 9.297300000000314e-05, 9.276400000000212e-05, 9.237499999999871e-05, 9.226399999999468e-05, 9.265199999999862e-05, 9.222200000000291e-05, 9.287499999999921e-05, 9.301400000000237e-05, 9.227800000000119e-05, 9.245899999999613e-05, 9.279200000000126e-05, 9.291699999999792e-05, 9.252800000000144e-05, 9.248600000000273e-05, 9.304100000000204e-05, 9.215200000000506e-05, 9.268099999999724e-05, 9.266700000000461e-05, 9.227800000000119e-05, 9.316699999999817e-05, 9.309700000000032e-05, 9.258399999999972e-05, 9.257000000000015e-05, 9.259800000000623e-05, 9.301399999999543e-05, 9.229199999999382e-05, 9.297199999999672e-05, 9.270800000000384e-05, 9.304200000000151e-05, 9.21529999999976e-05, 9.276400000000212e-05, 9.268099999999724e-05, 9.286099999999964e-05]</msg>
<status status="PASS" starttime="20201112 12:43:29.873" endtime="20201112 12:43:29.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.862" endtime="20201112 12:43:29.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.886" endtime="20201112 12:43:29.888"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:29.894" endtime="20201112 12:43:29.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.889" endtime="20201112 12:43:29.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.881" endtime="20201112 12:43:29.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.370" endtime="20201112 12:43:29.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.368" endtime="20201112 12:43:29.920"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.942" endtime="20201112 12:43:29.964"></status>
</kw>
<msg timestamp="20201112 12:43:29.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:29.939" endtime="20201112 12:43:29.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:29.968" endtime="20201112 12:43:29.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.974" endtime="20201112 12:43:29.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.932" endtime="20201112 12:43:29.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.926" endtime="20201112 12:43:29.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.997" endtime="20201112 12:43:30.331"></status>
</kw>
<msg timestamp="20201112 12:43:30.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041527042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041620639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:29.994" endtime="20201112 12:43:30.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:30.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041527042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041620639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:30.341" endtime="20201112 12:43:30.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.359" endtime="20201112 12:43:30.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.987" endtime="20201112 12:43:30.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.982" endtime="20201112 12:43:30.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:30.378" level="INFO">${RESULT} = [{'time': 0.041620639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.359700000000082e-05, 'source_diff': 9.359700000000082e-05}, {'time': 0.041721625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:30.369" endtime="20201112 12:43:30.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:30.408" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:30.380" endtime="20201112 12:43:30.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:30.419" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 12:43:30.417" endtime="20201112 12:43:30.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:30.425" level="INFO">VALUE: [9.359700000000082e-05, 9.401399999999643e-05, 9.413900000000003e-05, 9.33200000000009e-05, 9.362499999999996e-05, 9.338900000000622e-05, 9.41659999999997e-05, 9.379099999999585e-05, 9.323600000000348e-05, 9.405499999999567e-05, 9.363899999999953e-05, 9.319399999999783e-05, 9.326400000000262e-05, 9.326399999999568e-05, 9.343099999999799e-05, 9.397199999999772e-05, 9.358400000000072e-05, 9.380600000000183e-05, 9.380500000000236e-05, 9.388899999999978e-05, 9.36529999999991e-05, 9.324999999999611e-05, 9.362499999999996e-05, 9.368099999999824e-05, 9.357000000000115e-05, 9.384700000000107e-05, 9.417999999999926e-05, 9.320899999999688e-05, 9.392999999999901e-05, 9.344400000000502e-05, 9.358300000000125e-05, 9.406900000000218e-05, 9.36659999999992e-05, 9.37079999999979e-05, 9.334700000000057e-05, 9.337499999999971e-05, 9.409700000000132e-05, 9.333400000000047e-05, 9.408399999999428e-05, 9.38880000000003e-05, 9.390199999999987e-05, 9.323599999999654e-05, 9.326400000000262e-05, 9.324999999999611e-05, 9.334800000000004e-05, 9.36529999999991e-05, 9.390299999999935e-05, 9.320900000000382e-05, 9.390299999999935e-05, 9.365300000000604e-05]</msg>
<status status="PASS" starttime="20201112 12:43:30.422" endtime="20201112 12:43:30.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.410" endtime="20201112 12:43:30.428"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.435" endtime="20201112 12:43:30.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:30.444" endtime="20201112 12:43:30.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.439" endtime="20201112 12:43:30.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.430" endtime="20201112 12:43:30.469"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.922" endtime="20201112 12:43:30.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.921" endtime="20201112 12:43:30.470"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.493" endtime="20201112 12:43:30.515"></status>
</kw>
<msg timestamp="20201112 12:43:30.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:30.489" endtime="20201112 12:43:30.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:30.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:30.518" endtime="20201112 12:43:30.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.525" endtime="20201112 12:43:30.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.482" endtime="20201112 12:43:30.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.477" endtime="20201112 12:43:30.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.548" endtime="20201112 12:43:30.882"></status>
</kw>
<msg timestamp="20201112 12:43:30.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042120528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042215556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:30.545" endtime="20201112 12:43:30.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:30.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042120528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042215556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:30.892" endtime="20201112 12:43:30.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.910" endtime="20201112 12:43:30.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.538" endtime="20201112 12:43:30.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.533" endtime="20201112 12:43:30.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:30.929" level="INFO">${RESULT} = [{'time': 0.042215556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.502800000000394e-05, 'source_diff': 9.502800000000394e-05}, {'time': 0.042320569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:30.920" endtime="20201112 12:43:30.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:30.959" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:30.931" endtime="20201112 12:43:30.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:30.970" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 12:43:30.968" endtime="20201112 12:43:30.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:30.976" level="INFO">VALUE: [9.502800000000394e-05, 9.423600000000448e-05, 9.473599999999804e-05, 9.452800000000344e-05, 9.5027999999997e-05, 9.501399999999743e-05, 9.491699999999992e-05, 9.423599999999754e-05, 9.491699999999992e-05, 9.473699999999752e-05, 9.504200000000351e-05, 9.477799999999675e-05, 9.426400000000362e-05, 9.442999999999951e-05, 9.440299999999985e-05, 9.481899999999599e-05, 9.440299999999985e-05, 9.418099999999874e-05, 9.458300000000225e-05, 9.511100000000189e-05, 9.46530000000001e-05, 9.484800000000154e-05, 9.461100000000139e-05, 9.41659999999997e-05, 9.458300000000225e-05, 9.505499999999667e-05, 9.502800000000394e-05, 9.488899999999384e-05, 9.509800000000179e-05, 9.49859999999983e-05, 9.431999999999496e-05, 9.502800000000394e-05, 9.473699999999752e-05, 9.504100000000404e-05, 9.438900000000028e-05, 9.422199999999797e-05, 9.41659999999997e-05, 9.479199999999632e-05, 9.434700000000157e-05, 9.426400000000362e-05, 9.438900000000028e-05, 9.502800000000394e-05, 9.424999999999711e-05, 9.455499999999617e-05, 9.430499999999592e-05, 9.462500000000096e-05, 9.477799999999675e-05, 9.47079999999989e-05, 9.505499999999667e-05, 9.488900000000078e-05]</msg>
<status status="PASS" starttime="20201112 12:43:30.973" endtime="20201112 12:43:30.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.961" endtime="20201112 12:43:30.979"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.985" endtime="20201112 12:43:30.988"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:30.994" endtime="20201112 12:43:31.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.989" endtime="20201112 12:43:31.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.981" endtime="20201112 12:43:31.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.472" endtime="20201112 12:43:31.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.471" endtime="20201112 12:43:31.020"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.042" endtime="20201112 12:43:31.065"></status>
</kw>
<msg timestamp="20201112 12:43:31.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:31.039" endtime="20201112 12:43:31.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:31.068" endtime="20201112 12:43:31.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.075" endtime="20201112 12:43:31.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.032" endtime="20201112 12:43:31.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.026" endtime="20201112 12:43:31.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.098" endtime="20201112 12:43:31.433"></status>
</kw>
<msg timestamp="20201112 12:43:31.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041995528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042090889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:31.095" endtime="20201112 12:43:31.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041995528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042090889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:31.443" endtime="20201112 12:43:31.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.461" endtime="20201112 12:43:31.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.087" endtime="20201112 12:43:31.469"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.083" endtime="20201112 12:43:31.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:31.481" level="INFO">${RESULT} = [{'time': 0.042090889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.536100000000214e-05, 'source_diff': 9.536100000000214e-05}, {'time': 0.042198875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:31.472" endtime="20201112 12:43:31.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:31.514" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:31.484" endtime="20201112 12:43:31.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.525" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 12:43:31.523" endtime="20201112 12:43:31.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.531" level="INFO">VALUE: [9.536100000000214e-05, 9.581899999999699e-05, 9.544499999999956e-05, 9.615200000000212e-05, 9.573599999999904e-05, 9.59729999999992e-05, 9.531899999999649e-05, 9.522199999999897e-05, 9.561100000000239e-05, 9.527799999999725e-05, 9.529199999999682e-05, 9.541700000000042e-05, 9.595800000000015e-05, 9.595800000000015e-05, 9.56530000000011e-05, 9.591700000000092e-05, 9.56660000000012e-05, 9.53880000000018e-05, 9.611099999999595e-05, 9.573599999999904e-05, 9.531900000000343e-05, 9.524999999999811e-05, 9.527799999999725e-05, 9.591700000000092e-05, 9.549999999999836e-05, 9.615299999999466e-05, 9.594400000000058e-05, 9.551400000000487e-05, 9.544400000000008e-05, 9.555499999999717e-05, 9.512500000000146e-05, 9.534700000000257e-05, 9.559699999999588e-05, 9.561099999999545e-05, 9.605599999999714e-05, 9.526399999999768e-05, 9.523699999999802e-05, 9.519500000000625e-05, 9.57079999999999e-05, 9.526400000000462e-05, 9.56809999999933e-05, 9.59859999999993e-05, 9.524999999999811e-05, 9.57079999999999e-05, 9.616699999999423e-05, 9.519499999999931e-05, 9.529200000000376e-05, 9.513900000000103e-05, 9.605600000000408e-05, 9.527699999999778e-05]</msg>
<status status="PASS" starttime="20201112 12:43:31.527" endtime="20201112 12:43:31.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.516" endtime="20201112 12:43:31.534"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.540" endtime="20201112 12:43:31.543"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:31.548" endtime="20201112 12:43:31.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.544" endtime="20201112 12:43:31.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.535" endtime="20201112 12:43:31.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.022" endtime="20201112 12:43:31.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.020" endtime="20201112 12:43:31.574"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.597" endtime="20201112 12:43:31.619"></status>
</kw>
<msg timestamp="20201112 12:43:31.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:31.593" endtime="20201112 12:43:31.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:31.623" endtime="20201112 12:43:31.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.629" endtime="20201112 12:43:31.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.586" endtime="20201112 12:43:31.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.580" endtime="20201112 12:43:31.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.652" endtime="20201112 12:43:31.988"></status>
</kw>
<msg timestamp="20201112 12:43:31.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041537139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041633861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:31.649" endtime="20201112 12:43:31.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041537139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041633861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:31.998" endtime="20201112 12:43:32.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.017" endtime="20201112 12:43:32.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.641" endtime="20201112 12:43:32.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.637" endtime="20201112 12:43:32.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:32.034" level="INFO">${RESULT} = [{'time': 0.041633861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.672200000000047e-05, 'source_diff': 9.672200000000047e-05}, {'time': 0.041741847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:32.025" endtime="20201112 12:43:32.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:32.066" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:32.036" endtime="20201112 12:43:32.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.077" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 12:43:32.074" endtime="20201112 12:43:32.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.082" level="INFO">VALUE: [9.672200000000047e-05, 9.665299999999516e-05, 9.659699999999688e-05, 9.691699999999498e-05, 9.626399999999868e-05, 9.624999999999911e-05, 9.624999999999911e-05, 9.643099999999405e-05, 9.713799999999662e-05, 9.706999999999771e-05, 9.672200000000047e-05, 9.693000000000201e-05, 9.663900000000253e-05, 9.669400000000133e-05, 9.662500000000296e-05, 9.630600000000433e-05, 9.651399999999893e-05, 9.676399999999918e-05, 9.647200000000022e-05, 9.672200000000047e-05, 9.694399999999465e-05, 9.663900000000253e-05, 9.694400000000158e-05, 9.644400000000108e-05, 9.694399999999465e-05, 9.634800000000304e-05, 9.68059999999979e-05, 9.686100000000364e-05, 9.627799999999825e-05, 9.66660000000022e-05, 9.629100000000529e-05, 9.626399999999868e-05, 9.666599999999526e-05, 9.658299999999731e-05, 9.69860000000003e-05, 9.669400000000133e-05, 9.66530000000021e-05, 9.63059999999974e-05, 9.701399999999943e-05, 9.669500000000081e-05, 9.677799999999875e-05, 9.61660000000017e-05, 9.712500000000346e-05, 9.690300000000235e-05, 9.655600000000458e-05, 9.666599999999526e-05, 9.68609999999967e-05, 9.679199999999832e-05, 9.658399999999678e-05, 9.699999999999986e-05]</msg>
<status status="PASS" starttime="20201112 12:43:32.079" endtime="20201112 12:43:32.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.068" endtime="20201112 12:43:32.085"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.092" endtime="20201112 12:43:32.094"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:32.100" endtime="20201112 12:43:32.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.095" endtime="20201112 12:43:32.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.087" endtime="20201112 12:43:32.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.576" endtime="20201112 12:43:32.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.575" endtime="20201112 12:43:32.126"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.148" endtime="20201112 12:43:32.171"></status>
</kw>
<msg timestamp="20201112 12:43:32.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:32.145" endtime="20201112 12:43:32.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:32.175" endtime="20201112 12:43:32.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.181" endtime="20201112 12:43:32.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.138" endtime="20201112 12:43:32.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.132" endtime="20201112 12:43:32.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.204" endtime="20201112 12:43:32.522"></status>
</kw>
<msg timestamp="20201112 12:43:32.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041547097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041644639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:32.201" endtime="20201112 12:43:32.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041547097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041644639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:32.532" endtime="20201112 12:43:32.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.551" endtime="20201112 12:43:32.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.194" endtime="20201112 12:43:32.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.189" endtime="20201112 12:43:32.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:32.568" level="INFO">${RESULT} = [{'time': 0.041644639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.754199999999907e-05, 'source_diff': 9.754199999999907e-05}, {'time': 0.041755653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:32.559" endtime="20201112 12:43:32.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:32.600" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:32.570" endtime="20201112 12:43:32.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.611" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 12:43:32.609" endtime="20201112 12:43:32.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.616" level="INFO">VALUE: [9.754199999999907e-05, 9.73059999999984e-05, 9.73059999999984e-05, 9.722199999999404e-05, 9.78609999999977e-05, 9.772200000000147e-05, 9.809699999999838e-05, 9.809699999999838e-05, 9.74860000000008e-05, 9.813899999999709e-05, 9.794500000000206e-05, 9.763899999999659e-05, 9.726399999999968e-05, 9.766699999999573e-05, 9.76530000000031e-05, 9.78609999999977e-05, 9.756899999999874e-05, 9.727799999999925e-05, 9.733299999999806e-05, 9.790299999999641e-05, 9.722200000000097e-05, 9.809800000000479e-05, 9.802700000000053e-05, 9.801400000000043e-05, 9.755599999999864e-05, 9.718000000000226e-05, 9.759699999999788e-05, 9.75279999999995e-05, 9.747199999999429e-05, 9.78609999999977e-05, 9.718100000000174e-05, 9.723600000000054e-05, 9.773600000000104e-05, 9.800000000000086e-05, 9.762500000000396e-05, 9.719499999999437e-05, 9.71939999999949e-05, 9.720799999999447e-05, 9.725000000000011e-05, 9.787500000000421e-05, 9.745800000000165e-05, 9.816699999999623e-05, 9.719500000000131e-05, 9.78609999999977e-05, 9.734800000000404e-05, 9.806899999999924e-05, 9.772200000000147e-05, 9.77080000000019e-05, 9.7415999999996e-05, 9.811099999999795e-05]</msg>
<status status="PASS" starttime="20201112 12:43:32.613" endtime="20201112 12:43:32.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.602" endtime="20201112 12:43:32.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.630" endtime="20201112 12:43:32.632"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:32.638" endtime="20201112 12:43:32.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.634" endtime="20201112 12:43:32.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.625" endtime="20201112 12:43:32.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.128" endtime="20201112 12:43:32.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.126" endtime="20201112 12:43:32.664"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.686" endtime="20201112 12:43:32.709"></status>
</kw>
<msg timestamp="20201112 12:43:32.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:32.683" endtime="20201112 12:43:32.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:32.712" endtime="20201112 12:43:32.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.719" endtime="20201112 12:43:32.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.676" endtime="20201112 12:43:32.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.670" endtime="20201112 12:43:32.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.742" endtime="20201112 12:43:33.076"></status>
</kw>
<msg timestamp="20201112 12:43:33.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041696472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041794708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:32.738" endtime="20201112 12:43:33.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041696472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041794708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:33.086" endtime="20201112 12:43:33.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.105" endtime="20201112 12:43:33.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.731" endtime="20201112 12:43:33.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.727" endtime="20201112 12:43:33.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:33.122" level="INFO">${RESULT} = [{'time': 0.041794708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.823600000000154e-05, 'source_diff': 9.823600000000154e-05}, {'time': 0.041910708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:33.113" endtime="20201112 12:43:33.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:33.154" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:33.124" endtime="20201112 12:43:33.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.165" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 12:43:33.163" endtime="20201112 12:43:33.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.170" level="INFO">VALUE: [9.823600000000154e-05, 9.881899999999999e-05, 9.824999999999418e-05, 9.85280000000005e-05, 9.823600000000154e-05, 9.863899999999759e-05, 9.905600000000014e-05, 9.863900000000453e-05, 9.915299999999766e-05, 9.831999999999896e-05, 9.841699999999648e-05, 9.816599999999676e-05, 9.863899999999759e-05, 9.858300000000625e-05, 9.845799999999572e-05, 9.816700000000317e-05, 9.827800000000025e-05, 9.83609999999982e-05, 9.872199999999554e-05, 9.913899999999809e-05, 9.81809999999958e-05, 9.872200000000247e-05, 9.834700000000557e-05, 9.834699999999863e-05, 9.866599999999726e-05, 9.856899999999974e-05, 9.863899999999759e-05, 9.905600000000014e-05, 9.908399999999928e-05, 9.86809999999963e-05, 9.898699999999483e-05, 9.862500000000496e-05, 9.87359999999951e-05, 9.861099999999845e-05, 9.887499999999827e-05, 9.843000000000351e-05, 9.833299999999906e-05, 9.879200000000032e-05, 9.9028000000001e-05, 9.88479999999986e-05, 9.872299999999501e-05, 9.890199999999794e-05, 9.905600000000014e-05, 9.850000000000136e-05, 9.818000000000326e-05, 9.89860000000023e-05, 9.908299999999981e-05, 9.888900000000478e-05, 9.902799999999407e-05, 9.902799999999407e-05]</msg>
<status status="PASS" starttime="20201112 12:43:33.167" endtime="20201112 12:43:33.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.156" endtime="20201112 12:43:33.173"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.180" endtime="20201112 12:43:33.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:33.188" endtime="20201112 12:43:33.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.184" endtime="20201112 12:43:33.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.175" endtime="20201112 12:43:33.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.666" endtime="20201112 12:43:33.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.665" endtime="20201112 12:43:33.214"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.236" endtime="20201112 12:43:33.261"></status>
</kw>
<msg timestamp="20201112 12:43:33.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:33.233" endtime="20201112 12:43:33.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:33.265" endtime="20201112 12:43:33.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.271" endtime="20201112 12:43:33.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.226" endtime="20201112 12:43:33.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.220" endtime="20201112 12:43:33.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.296" endtime="20201112 12:43:33.650"></status>
</kw>
<msg timestamp="20201112 12:43:33.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041648292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041747764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:33.293" endtime="20201112 12:43:33.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041648292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041747764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:33.660" endtime="20201112 12:43:33.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.679" endtime="20201112 12:43:33.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.285" endtime="20201112 12:43:33.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.280" endtime="20201112 12:43:33.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:33.696" level="INFO">${RESULT} = [{'time': 0.041747764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.947199999999629e-05, 'source_diff': 9.947199999999629e-05}, {'time': 0.04185875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:43:33.687" endtime="20201112 12:43:33.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:33.729" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:33.698" endtime="20201112 12:43:33.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.740" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 12:43:33.738" endtime="20201112 12:43:33.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.746" level="INFO">VALUE: [9.947199999999629e-05, 9.983300000000056e-05, 0.00010011099999999995, 9.99860000000033e-05, 9.976399999999525e-05, 9.979199999999439e-05, 9.987499999999927e-05, 9.980500000000142e-05, 9.917999999999733e-05, 9.965299999999816e-05, 0.00010011099999999995, 9.977800000000175e-05, 9.933300000000006e-05, 9.96939999999974e-05, 9.961099999999945e-05, 0.00010007000000000071, 9.990199999999894e-05, 0.00010009700000000038, 9.994400000000458e-05, 9.991699999999798e-05, 9.994400000000458e-05, 0.00010015299999999866, 0.00010009700000000038, 9.995800000000415e-05, 9.934699999999963e-05, 9.997299999999626e-05, 9.954199999999414e-05, 9.926300000000221e-05, 9.930499999999398e-05, 9.98609999999997e-05, 9.967999999999783e-05, 9.941699999999748e-05, 9.976400000000218e-05, 9.912499999999852e-05, 0.00010013899999999909, 0.0001001530000000056, 9.91809999999968e-05, 0.00010013799999999962, 9.918000000000426e-05, 9.966599999999826e-05, 9.923600000000254e-05, 9.976400000000218e-05, 9.993099999999755e-05, 9.988900000000578e-05, 0.00010000000000000286, 9.995899999999669e-05, 0.0001000139999999955, 9.929200000000082e-05, 9.942999999999758e-05, 9.984700000000013e-05]</msg>
<status status="PASS" starttime="20201112 12:43:33.743" endtime="20201112 12:43:33.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.731" endtime="20201112 12:43:33.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.755" endtime="20201112 12:43:33.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:33.764" endtime="20201112 12:43:33.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.759" endtime="20201112 12:43:33.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.751" endtime="20201112 12:43:33.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.216" endtime="20201112 12:43:33.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.214" endtime="20201112 12:43:33.790"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.813" endtime="20201112 12:43:33.836"></status>
</kw>
<msg timestamp="20201112 12:43:33.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:33.810" endtime="20201112 12:43:33.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:33.839" endtime="20201112 12:43:33.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.846" endtime="20201112 12:43:33.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.802" endtime="20201112 12:43:33.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.796" endtime="20201112 12:43:33.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.870" endtime="20201112 12:43:34.205"></status>
</kw>
<msg timestamp="20201112 12:43:34.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042450194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042551181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:33.866" endtime="20201112 12:43:34.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042450194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042551181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:34.214" endtime="20201112 12:43:34.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.233" endtime="20201112 12:43:34.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.859" endtime="20201112 12:43:34.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.855" endtime="20201112 12:43:34.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:34.250" level="INFO">${RESULT} = [{'time': 0.042551181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010098700000000377, 'source_diff': 0.00010098700000000377}, {'time': 0.042667194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:34.241" endtime="20201112 12:43:34.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:34.280" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:34.252" endtime="20201112 12:43:34.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.293" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 12:43:34.289" endtime="20201112 12:43:34.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.298" level="INFO">VALUE: [0.00010098700000000377, 0.00010062500000000002, 0.0001004860000000038, 0.00010109699999999444, 0.0001008610000000007, 0.0001002080000000044, 0.00010059700000000088, 0.00010077800000000275, 0.00010070900000000438, 0.00010044399999999815, 0.00010087500000000027, 0.00010026300000000321, 0.00010038899999999934, 0.00010040299999999891, 0.00010056900000000174, 0.00010066699999999873, 0.00010027799999999532, 0.00010082000000000146, 0.00010041699999999848, 0.00010065299999999916, 0.00010027700000000278, 0.00010070799999999797, 0.000101028000000003, 0.00010056900000000174, 0.00010018000000000526, 0.00010077799999999582, 0.00010086200000000017, 0.00010043100000000499, 0.00010107000000000171, 0.00010094499999999812, 0.00010024999999999618, 0.0001002359999999966, 0.00010016599999999876, 0.00010019400000000483, 0.00010022200000000397, 0.0001006530000000061, 0.00010066699999999873, 0.00010027700000000278, 0.00010026400000000268, 0.00010068100000000524, 0.00010111100000000095, 0.00010022199999999704, 0.00010059700000000088, 0.00010088899999999984, 0.00010044399999999815, 0.00010119499999999837, 0.00010083299999999462, 0.00010115299999999966, 0.00010062500000000002, 0.000100513999999996]</msg>
<status status="PASS" starttime="20201112 12:43:34.295" endtime="20201112 12:43:34.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.282" endtime="20201112 12:43:34.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.307" endtime="20201112 12:43:34.310"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:34.316" endtime="20201112 12:43:34.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.311" endtime="20201112 12:43:34.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.303" endtime="20201112 12:43:34.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.792" endtime="20201112 12:43:34.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.791" endtime="20201112 12:43:34.341"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.364" endtime="20201112 12:43:34.387"></status>
</kw>
<msg timestamp="20201112 12:43:34.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:34.361" endtime="20201112 12:43:34.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:34.390" endtime="20201112 12:43:34.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.397" endtime="20201112 12:43:34.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.354" endtime="20201112 12:43:34.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.348" endtime="20201112 12:43:34.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.420" endtime="20201112 12:43:34.754"></status>
</kw>
<msg timestamp="20201112 12:43:34.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041785819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041887667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:34.416" endtime="20201112 12:43:34.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041785819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041887667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:34.764" endtime="20201112 12:43:34.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.782" endtime="20201112 12:43:34.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.409" endtime="20201112 12:43:34.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.405" endtime="20201112 12:43:34.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:34.799" level="INFO">${RESULT} = [{'time': 0.041887667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001018480000000016, 'source_diff': 0.0001018480000000016}, {'time': 0.041995667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:34.791" endtime="20201112 12:43:34.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:34.830" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:34.801" endtime="20201112 12:43:34.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.841" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 12:43:34.838" endtime="20201112 12:43:34.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.846" level="INFO">VALUE: [0.0001018480000000016, 0.00010207000000000271, 0.00010129200000000282, 0.00010122299999999751, 0.0001018060000000029, 0.00010117999999999933, 0.00010202799999999707, 0.00010190300000000041, 0.00010156900000000274, 0.00010197199999999879, 0.00010188900000000084, 0.000101416, 0.00010149999999999743, 0.00010142999999999958, 0.00010197200000000572, 0.00010205499999999673, 0.00010180500000000342, 0.00010204200000000357, 0.00010204200000000357, 0.00010208400000000228, 0.00010165300000000016, 0.00010179199999999639, 0.0001015559999999957, 0.00010116699999999923, 0.00010137500000000077, 0.00010174999999999768, 0.00010168000000000676, 0.00010174999999999768, 0.00010154200000000307, 0.00010145799999999872, 0.00010212500000000152, 0.00010215300000000066, 0.00010177800000000375, 0.00010159799999999441, 0.00010172200000000547, 0.00010187499999999433, 0.00010208300000000281, 0.00010183300000000256, 0.00010188900000000084, 0.00010176400000000418, 0.00010129200000000282, 0.0001018480000000016, 0.00010205600000000314, 0.0001013060000000024, 0.00010163800000000112, 0.00010179100000000385, 0.00010145799999999872, 0.00010166600000000026, 0.00010129200000000282, 0.00010123600000000454]</msg>
<status status="PASS" starttime="20201112 12:43:34.843" endtime="20201112 12:43:34.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.832" endtime="20201112 12:43:34.850"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.857" endtime="20201112 12:43:34.859"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:34.865" endtime="20201112 12:43:34.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.861" endtime="20201112 12:43:34.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.852" endtime="20201112 12:43:34.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.344" endtime="20201112 12:43:34.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.342" endtime="20201112 12:43:34.891"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.913" endtime="20201112 12:43:34.936"></status>
</kw>
<msg timestamp="20201112 12:43:34.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:34.910" endtime="20201112 12:43:34.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:34.939" endtime="20201112 12:43:34.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.946" endtime="20201112 12:43:34.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.903" endtime="20201112 12:43:34.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.897" endtime="20201112 12:43:34.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.969" endtime="20201112 12:43:35.303"></status>
</kw>
<msg timestamp="20201112 12:43:35.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041765486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041868569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:34.966" endtime="20201112 12:43:35.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041765486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041868569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:35.312" endtime="20201112 12:43:35.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.330" endtime="20201112 12:43:35.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.958" endtime="20201112 12:43:35.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.954" endtime="20201112 12:43:35.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:35.345" level="INFO">${RESULT} = [{'time': 0.041868569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010308300000000381, 'source_diff': 0.00010308300000000381}, {'time': 0.041987556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:35.339" endtime="20201112 12:43:35.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:35.359" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:35.346" endtime="20201112 12:43:35.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.364" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 12:43:35.363" endtime="20201112 12:43:35.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.366" level="INFO">VALUE: [0.00010308300000000381, 0.00010307000000000371, 0.00010245899999999919, 0.00010299999999999893, 0.000102513999999998, 0.00010268000000000083, 0.00010255500000000417, 0.00010229199999999689, 0.00010229200000000382, 0.00010237500000000177, 0.00010248599999999886, 0.0001028889999999949, 0.00010290300000000141, 0.00010229100000000435, 0.00010279100000000485, 0.00010291700000000098, 0.0001030689999999973, 0.0001023060000000034, 0.00010290300000000141, 0.00010270899999999944, 0.00010312500000000252, 0.00010223699999999808, 0.00010243100000000005, 0.00010233299999999612, 0.00010265300000000116, 0.00010270799999999997, 0.0001025689999999968, 0.00010272199999999954, 0.00010262499999999508, 0.00010266699999999379, 0.00010248599999999886, 0.00010284799999999567, 0.00010281900000000399, 0.0001030139999999985, 0.0001030139999999985, 0.00010222199999999904, 0.000102513999999998, 0.00010216700000000023, 0.00010230599999999646, 0.00010216700000000023, 0.00010266599999999432, 0.0001030559999999972, 0.00010222299999999851, 0.00010262500000000202, 0.00010311099999999601, 0.00010261099999999551, 0.00010291700000000098, 0.0001021809999999998, 0.00010238900000000134, 0.00010270799999999997]</msg>
<status status="PASS" starttime="20201112 12:43:35.365" endtime="20201112 12:43:35.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.360" endtime="20201112 12:43:35.368"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.371" endtime="20201112 12:43:35.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:35.376" endtime="20201112 12:43:35.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.374" endtime="20201112 12:43:35.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.369" endtime="20201112 12:43:35.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.893" endtime="20201112 12:43:35.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.892" endtime="20201112 12:43:35.397"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.408" endtime="20201112 12:43:35.427"></status>
</kw>
<msg timestamp="20201112 12:43:35.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:35.406" endtime="20201112 12:43:35.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:35.429" endtime="20201112 12:43:35.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.432" endtime="20201112 12:43:35.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.403" endtime="20201112 12:43:35.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.400" endtime="20201112 12:43:35.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.443" endtime="20201112 12:43:35.744"></status>
</kw>
<msg timestamp="20201112 12:43:35.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024884333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024988333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:35.441" endtime="20201112 12:43:35.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024884333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024988333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:35.754" endtime="20201112 12:43:35.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.772" endtime="20201112 12:43:35.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.438" endtime="20201112 12:43:35.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.435" endtime="20201112 12:43:35.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:35.789" level="INFO">${RESULT} = [{'time': 0.024988333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010399999999999993, 'source_diff': 0.00010399999999999993}, {'time': 0.025109347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:35.780" endtime="20201112 12:43:35.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:35.821" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:35.791" endtime="20201112 12:43:35.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.832" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 12:43:35.830" endtime="20201112 12:43:35.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.837" level="INFO">VALUE: [0.00010399999999999993, 0.00010352800000000204, 0.00010334700000000016, 0.00010380600000000142, 0.00010347200000000029, 0.00010359799999999988, 0.00010408400000000081, 0.00010341699999999801, 0.00010343099999999758, 0.00010333300000000059, 0.00010380500000000195, 0.0001031940000000009, 0.00010397200000000079, 0.00010379199999999839, 0.0001031810000000008, 0.00010319500000000037, 0.00010334799999999963, 0.00010398600000000036, 0.00010415199999999972, 0.00010361099999999998, 0.00010354199999999814, 0.00010384699999999719, 0.00010338900000000234, 0.00010381900000000152, 0.00010384700000000066, 0.00010354199999999814, 0.0001031810000000008, 0.0001038619999999997, 0.0001032359999999996, 0.00010347200000000029, 0.00010370800000000097, 0.00010409700000000091, 0.00010380500000000195, 0.00010399999999999993, 0.00010357000000000074, 0.00010338899999999887, 0.00010390299999999894, 0.00010337500000000277, 0.0001040550000000022, 0.00010341599999999854, 0.00010401400000000297, 0.00010379200000000185, 0.0001040139999999995, 0.00010329200000000135, 0.0001040139999999995, 0.00010358400000000031, 0.00010376399999999925, 0.00010359799999999988, 0.00010377699999999934, 0.00010362499999999955]</msg>
<status status="PASS" starttime="20201112 12:43:35.834" endtime="20201112 12:43:35.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.823" endtime="20201112 12:43:35.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.847" endtime="20201112 12:43:35.849"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:35.855" endtime="20201112 12:43:35.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.851" endtime="20201112 12:43:35.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.842" endtime="20201112 12:43:35.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.398" endtime="20201112 12:43:35.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.397" endtime="20201112 12:43:35.882"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.905" endtime="20201112 12:43:35.927"></status>
</kw>
<msg timestamp="20201112 12:43:35.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:35.901" endtime="20201112 12:43:35.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:35.931" endtime="20201112 12:43:35.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.937" endtime="20201112 12:43:35.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.894" endtime="20201112 12:43:35.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.888" endtime="20201112 12:43:35.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.961" endtime="20201112 12:43:36.296"></status>
</kw>
<msg timestamp="20201112 12:43:36.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042970611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043075361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:35.957" endtime="20201112 12:43:36.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042970611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043075361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:36.305" endtime="20201112 12:43:36.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.324" endtime="20201112 12:43:36.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.950" endtime="20201112 12:43:36.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.945" endtime="20201112 12:43:36.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:36.341" level="INFO">${RESULT} = [{'time': 0.043075361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010475000000000068, 'source_diff': 0.00010475000000000068}, {'time': 0.043196375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:36.332" endtime="20201112 12:43:36.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:36.371" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:36.343" endtime="20201112 12:43:36.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.382" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 12:43:36.379" endtime="20201112 12:43:36.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.387" level="INFO">VALUE: [0.00010475000000000068, 0.00010481899999999905, 0.0001050140000000005, 0.00010443100000000205, 0.00010481999999999853, 0.00010470800000000197, 0.00010438800000000387, 0.00010498600000000136, 0.00010477700000000034, 0.00010455499999999923, 0.00010497199999999485, 0.00010490299999999647, 0.0001045559999999987, 0.00010502800000000007, 0.00010493100000000255, 0.00010466599999999632, 0.00010481900000000599, 0.00010488900000000384, 0.00010463899999999665, 0.00010483299999999862, 0.0001042360000000006, 0.00010445900000000119, 0.00010427799999999932, 0.00010452799999999957, 0.000104514, 0.00010463899999999665, 0.0001045689999999988, 0.00010420800000000147, 0.00010445800000000172, 0.00010491599999999657, 0.00010418099999999486, 0.0001050559999999992, 0.000104901999999997, 0.00010444499999999468, 0.00010509699999999844, 0.0001041940000000019, 0.00010497200000000179, 0.00010488900000000384, 0.0001043610000000042, 0.00010502800000000007, 0.00010462499999999708, 0.00010477799999999982, 0.00010481999999999853, 0.00010479199999999939, 0.00010513900000000409, 0.00010469500000000187, 0.00010459699999999794, 0.00010486099999999776, 0.00010447200000000129, 0.00010419399999999496]</msg>
<status status="PASS" starttime="20201112 12:43:36.384" endtime="20201112 12:43:36.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.373" endtime="20201112 12:43:36.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.396" endtime="20201112 12:43:36.399"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:36.405" endtime="20201112 12:43:36.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.400" endtime="20201112 12:43:36.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.392" endtime="20201112 12:43:36.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.884" endtime="20201112 12:43:36.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.883" endtime="20201112 12:43:36.430"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.455" endtime="20201112 12:43:36.478"></status>
</kw>
<msg timestamp="20201112 12:43:36.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:36.451" endtime="20201112 12:43:36.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:36.481" endtime="20201112 12:43:36.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.487" endtime="20201112 12:43:36.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.444" endtime="20201112 12:43:36.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.437" endtime="20201112 12:43:36.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.511" endtime="20201112 12:43:36.845"></status>
</kw>
<msg timestamp="20201112 12:43:36.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043367542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043473125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:36.507" endtime="20201112 12:43:36.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043367542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043473125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:36.854" endtime="20201112 12:43:36.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.873" endtime="20201112 12:43:36.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.500" endtime="20201112 12:43:36.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.495" endtime="20201112 12:43:36.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:36.890" level="INFO">${RESULT} = [{'time': 0.043473125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010558299999999937, 'source_diff': 0.00010558299999999937}, {'time': 0.043597097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:36.881" endtime="20201112 12:43:36.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:36.920" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:36.892" endtime="20201112 12:43:36.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.931" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 12:43:36.928" endtime="20201112 12:43:36.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.936" level="INFO">VALUE: [0.00010558299999999937, 0.00010516600000000376, 0.00010520800000000247, 0.00010597199999999585, 0.00010580599999999996, 0.00010586099999999876, 0.00010579200000000039, 0.00010543100000000305, 0.000105901999999998, 0.00010587499999999833, 0.00010536099999999826, 0.00010600000000000193, 0.00010555500000000023, 0.00010579200000000039, 0.0001058889999999979, 0.00010540299999999697, 0.00010584700000000613, 0.00010563899999999765, 0.00010559699999999894, 0.00010565299999999722, 0.00010525000000000118, 0.00010540299999999697, 0.0001058889999999979, 0.00010606999999999978, 0.00010573700000000158, 0.00010537499999999783, 0.00010525000000000118, 0.00010584699999999919, 0.00010522200000000204, 0.00010580500000000048, 0.00010586099999999876, 0.00010554200000000014, 0.0001058889999999979, 0.00010568099999999636, 0.0001053060000000064, 0.00010559699999999894, 0.00010548700000000133, 0.000105514000000001, 0.00010566699999999679, 0.0001060690000000003, 0.00010583299999999962, 0.00010608299999999987, 0.00010548600000000186, 0.00010588900000000484, 0.0001052360000000016, 0.00010611099999999901, 0.00010590300000000441, 0.00010619399999999696, 0.00010602700000000159, 0.00010604100000000116]</msg>
<status status="PASS" starttime="20201112 12:43:36.933" endtime="20201112 12:43:36.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.922" endtime="20201112 12:43:36.939"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.945" endtime="20201112 12:43:36.948"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:36.954" endtime="20201112 12:43:36.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.949" endtime="20201112 12:43:36.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.941" endtime="20201112 12:43:36.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.433" endtime="20201112 12:43:36.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.431" endtime="20201112 12:43:36.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.135" endtime="20201112 12:43:36.980"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:36.990" endtime="20201112 12:43:37.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.986" endtime="20201112 12:43:37.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.983" endtime="20201112 12:43:37.014"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:42.996" endtime="20201112 12:43:37.015" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:37.033" endtime="20201112 12:43:37.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.029" endtime="20201112 12:43:37.056"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.091" endtime="20201112 12:43:37.110"></status>
</kw>
<msg timestamp="20201112 12:43:37.111" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:37.088" endtime="20201112 12:43:37.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.117" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:37.113" endtime="20201112 12:43:37.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.124" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:43:37.120" endtime="20201112 12:43:37.124"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:37.081" endtime="20201112 12:43:37.126"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:37.074" endtime="20201112 12:43:37.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.072" endtime="20201112 12:43:37.129"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:43:37.136" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:43:37.135" endtime="20201112 12:43:37.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.130" endtime="20201112 12:43:37.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.070" endtime="20201112 12:43:37.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.068" endtime="20201112 12:43:37.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.140" endtime="20201112 12:43:37.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.062" endtime="20201112 12:43:37.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.058" endtime="20201112 12:43:37.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.027" endtime="20201112 12:43:37.148"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.174" endtime="20201112 12:43:37.191"></status>
</kw>
<msg timestamp="20201112 12:43:37.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:37.169" endtime="20201112 12:43:37.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:37.195" endtime="20201112 12:43:37.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.201" endtime="20201112 12:43:37.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.162" endtime="20201112 12:43:37.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.156" endtime="20201112 12:43:37.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.226" endtime="20201112 12:43:37.574"></status>
</kw>
<msg timestamp="20201112 12:43:37.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.1341745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134179444, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:37.221" endtime="20201112 12:43:37.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.1341745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134179444, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:37.583" endtime="20201112 12:43:37.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.602" endtime="20201112 12:43:37.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.214" endtime="20201112 12:43:37.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.209" endtime="20201112 12:43:37.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:37.620" level="INFO">${RESULT} = [{'time': 0.134179444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.944000000006721e-06, 'source_diff': 4.944000000006721e-06}, {'time': 0.134194333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:37.611" endtime="20201112 12:43:37.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:37.650" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:37.622" endtime="20201112 12:43:37.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.662" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 12:43:37.659" endtime="20201112 12:43:37.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.668" level="INFO">VALUE: [4.944000000006721e-06, 4.944000000006721e-06, 4.957999999999352e-06, 4.9450000000061944e-06, 4.971999999991983e-06, 4.930999999985808e-06, 5.431000000000186e-06, 4.972000000019738e-06, 5.416000000008081e-06, 4.916999999993177e-06, 4.943999999978965e-06, 5.485999999998992e-06, 5.444999999992817e-06, 5.430000000000712e-06, 5.485999999998992e-06, 5.375000000001906e-06, 5.431000000000186e-06, 4.944000000006721e-06, 5.443999999993343e-06, 5.444999999992817e-06, 5.431000000000186e-06, 5.486999999998465e-06, 4.930999999985808e-06, 5.513999999984254e-06, 5.402999999987168e-06, 5.443999999993343e-06, 4.930999999985808e-06, 4.860999999994897e-06, 4.9450000000061944e-06, 5.444999999992817e-06, 5.443999999993343e-06, 5.4159999999803254e-06, 4.944999999978439e-06, 4.944000000006721e-06, 5.943999999979965e-06, 4.9450000000061944e-06, 4.917000000020932e-06, 4.9450000000061944e-06, 4.943999999978965e-06, 5.457999999985974e-06, 5.459000000013203e-06, 4.9589999999988255e-06, 4.930999999985808e-06, 4.9589999999988255e-06, 4.9450000000061944e-06, 5.444999999992817e-06, 5.485999999998992e-06, 5.416999999979799e-06, 5.431000000000186e-06, 5.500000000019378e-06]</msg>
<status status="PASS" starttime="20201112 12:43:37.664" endtime="20201112 12:43:37.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.652" endtime="20201112 12:43:37.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.677" endtime="20201112 12:43:37.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:37.686" endtime="20201112 12:43:37.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.681" endtime="20201112 12:43:37.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.672" endtime="20201112 12:43:37.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.152" endtime="20201112 12:43:37.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.151" endtime="20201112 12:43:37.712"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.740" endtime="20201112 12:43:37.758"></status>
</kw>
<msg timestamp="20201112 12:43:37.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:37.737" endtime="20201112 12:43:37.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:37.761" endtime="20201112 12:43:37.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.768" endtime="20201112 12:43:37.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.729" endtime="20201112 12:43:37.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.724" endtime="20201112 12:43:37.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.791" endtime="20201112 12:43:38.127"></status>
</kw>
<msg timestamp="20201112 12:43:38.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047910889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047917319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:37.788" endtime="20201112 12:43:38.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047910889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047917319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:38.136" endtime="20201112 12:43:38.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.155" endtime="20201112 12:43:38.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.781" endtime="20201112 12:43:38.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.776" endtime="20201112 12:43:38.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:38.172" level="INFO">${RESULT} = [{'time': 0.047917319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.430000000001712e-06, 'source_diff': 6.430000000001712e-06}, {'time': 0.047932181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:38.164" endtime="20201112 12:43:38.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:38.205" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:38.175" endtime="20201112 12:43:38.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.216" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 12:43:38.214" endtime="20201112 12:43:38.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.221" level="INFO">VALUE: [6.430000000001712e-06, 5.945000000000256e-06, 6.944000000001782e-06, 5.944000000000782e-06, 5.9729999999993955e-06, 6.444000000001282e-06, 6.431000000001186e-06, 6.374999999995967e-06, 6.945000000001256e-06, 5.930000000001212e-06, 6.445000000000756e-06, 5.931000000000686e-06, 6.444000000001282e-06, 6.445000000000756e-06, 6.444000000001282e-06, 5.931000000000686e-06, 6.444000000001282e-06, 6.431000000001186e-06, 5.945000000000256e-06, 6.445000000000756e-06, 5.945000000000256e-06, 5.945000000000256e-06, 6.430999999994247e-06, 5.944000000000782e-06, 5.944000000000782e-06, 5.944000000000782e-06, 5.958000000000352e-06, 5.930000000001212e-06, 6.429999999994773e-06, 5.930000000001212e-06, 6.472000000000422e-06, 6.945000000001256e-06, 6.430000000001712e-06, 5.945000000000256e-06, 6.957999999994413e-06, 5.944000000000782e-06, 5.958000000000352e-06, 6.459000000000326e-06, 6.444000000001282e-06, 6.943999999994843e-06, 6.0279999999982015e-06, 6.444000000001282e-06, 6.430000000001712e-06, 6.445000000000756e-06, 6.445000000000756e-06, 6.445000000000756e-06, 6.416000000002142e-06, 5.889000000001976e-06, 6.445000000000756e-06, 6.361000000003336e-06]</msg>
<status status="PASS" starttime="20201112 12:43:38.218" endtime="20201112 12:43:38.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.207" endtime="20201112 12:43:38.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.230" endtime="20201112 12:43:38.234"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:38.239" endtime="20201112 12:43:38.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.235" endtime="20201112 12:43:38.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.226" endtime="20201112 12:43:38.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.719" endtime="20201112 12:43:38.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.718" endtime="20201112 12:43:38.265"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.288" endtime="20201112 12:43:38.305"></status>
</kw>
<msg timestamp="20201112 12:43:38.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:38.285" endtime="20201112 12:43:38.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:38.309" endtime="20201112 12:43:38.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.315" endtime="20201112 12:43:38.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.278" endtime="20201112 12:43:38.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.272" endtime="20201112 12:43:38.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.338" endtime="20201112 12:43:38.673"></status>
</kw>
<msg timestamp="20201112 12:43:38.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041922722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041930167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:38.335" endtime="20201112 12:43:38.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041922722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041930167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:38.683" endtime="20201112 12:43:38.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.702" endtime="20201112 12:43:38.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.328" endtime="20201112 12:43:38.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.323" endtime="20201112 12:43:38.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:38.720" level="INFO">${RESULT} = [{'time': 0.041930167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.444999999994817e-06, 'source_diff': 7.444999999994817e-06}, {'time': 0.041944236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:38.711" endtime="20201112 12:43:38.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:38.752" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:38.722" endtime="20201112 12:43:38.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.763" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 12:43:38.761" endtime="20201112 12:43:38.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.768" level="INFO">VALUE: [7.444999999994817e-06, 7.389000000003476e-06, 7.374999999996967e-06, 7.444000000002282e-06, 6.944000000001782e-06, 7.444000000002282e-06, 7.430000000002712e-06, 6.943999999994843e-06, 7.430000000002712e-06, 6.945000000001256e-06, 7.903000000003546e-06, 7.417000000002616e-06, 6.889000000002976e-06, 6.930000000002212e-06, 6.944000000001782e-06, 7.430999999995247e-06, 7.389000000003476e-06, 7.444999999994817e-06, 7.431000000002186e-06, 7.3880000000040025e-06, 7.945000000002256e-06, 6.986000000000492e-06, 6.944000000001782e-06, 7.430000000002712e-06, 6.931000000001686e-06, 6.930000000002212e-06, 6.944000000001782e-06, 6.944999999994317e-06, 7.916000000003642e-06, 6.930000000002212e-06, 6.944000000001782e-06, 6.931000000001686e-06, 7.443999999995343e-06, 7.388999999996537e-06, 7.444000000002282e-06, 6.889000000002976e-06, 6.903000000002546e-06, 7.431000000002186e-06, 6.931000000001686e-06, 6.945000000001256e-06, 6.931000000001686e-06, 7.415999999996203e-06, 6.945000000001256e-06, 6.944000000001782e-06, 7.943999999995843e-06, 7.444000000002282e-06, 7.429999999995773e-06, 7.431000000002186e-06, 6.945000000001256e-06, 6.945000000001256e-06]</msg>
<status status="PASS" starttime="20201112 12:43:38.765" endtime="20201112 12:43:38.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.754" endtime="20201112 12:43:38.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.778" endtime="20201112 12:43:38.781"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:38.786" endtime="20201112 12:43:38.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.782" endtime="20201112 12:43:38.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.773" endtime="20201112 12:43:38.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.267" endtime="20201112 12:43:38.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.266" endtime="20201112 12:43:38.812"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.835" endtime="20201112 12:43:38.852"></status>
</kw>
<msg timestamp="20201112 12:43:38.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:38.831" endtime="20201112 12:43:38.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:38.855" endtime="20201112 12:43:38.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.861" endtime="20201112 12:43:38.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.824" endtime="20201112 12:43:38.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.818" endtime="20201112 12:43:38.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.885" endtime="20201112 12:43:39.186"></status>
</kw>
<msg timestamp="20201112 12:43:39.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041700111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041708486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:38.882" endtime="20201112 12:43:39.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041700111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041708486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:39.196" endtime="20201112 12:43:39.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.215" endtime="20201112 12:43:39.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.874" endtime="20201112 12:43:39.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.869" endtime="20201112 12:43:39.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:39.233" level="INFO">${RESULT} = [{'time': 0.041708486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.375000000004906e-06, 'source_diff': 8.375000000004906e-06}, {'time': 0.041721458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:39.224" endtime="20201112 12:43:39.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:39.265" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:39.235" endtime="20201112 12:43:39.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.276" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 12:43:39.273" endtime="20201112 12:43:39.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.281" level="INFO">VALUE: [8.375000000004906e-06, 8.430000000003712e-06, 7.916000000003642e-06, 8.430999999996247e-06, 8.430999999996247e-06, 7.972000000001922e-06, 8.403000000004046e-06, 8.416999999996677e-06, 8.471999999995483e-06, 7.874999999997467e-06, 8.416999999996677e-06, 7.917000000003116e-06, 8.430999999996247e-06, 7.958000000002352e-06, 7.943999999995843e-06, 7.972000000001922e-06, 7.959000000001826e-06, 8.472000000002422e-06, 8.430000000003712e-06, 8.458000000002852e-06, 8.445000000002756e-06, 8.444999999995817e-06, 8.957999999996413e-06, 7.929999999996273e-06, 7.930999999995747e-06, 7.875000000004406e-06, 8.444000000003282e-06, 8.416999999996677e-06, 8.458000000002852e-06, 8.430000000003712e-06, 8.429999999996773e-06, 7.903000000003546e-06, 8.430000000003712e-06, 7.888999999997037e-06, 7.931000000002686e-06, 7.945000000002256e-06, 7.931000000002686e-06, 7.972000000001922e-06, 8.430999999996247e-06, 8.430999999996247e-06, 8.473000000001896e-06, 8.959000000002826e-06, 8.445000000002756e-06, 8.486000000001992e-06, 8.444000000003282e-06, 8.444000000003282e-06, 7.986000000001492e-06, 8.430000000003712e-06, 7.958999999994887e-06, 8.429999999996773e-06]</msg>
<status status="PASS" starttime="20201112 12:43:39.278" endtime="20201112 12:43:39.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.266" endtime="20201112 12:43:39.284"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.290" endtime="20201112 12:43:39.293"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:39.299" endtime="20201112 12:43:39.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.294" endtime="20201112 12:43:39.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.286" endtime="20201112 12:43:39.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.814" endtime="20201112 12:43:39.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.813" endtime="20201112 12:43:39.324"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.347" endtime="20201112 12:43:39.365"></status>
</kw>
<msg timestamp="20201112 12:43:39.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:39.344" endtime="20201112 12:43:39.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:39.368" endtime="20201112 12:43:39.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.374" endtime="20201112 12:43:39.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.337" endtime="20201112 12:43:39.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.331" endtime="20201112 12:43:39.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.398" endtime="20201112 12:43:39.732"></status>
</kw>
<msg timestamp="20201112 12:43:39.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041762319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041771708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:39.394" endtime="20201112 12:43:39.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041762319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041771708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:39.741" endtime="20201112 12:43:39.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.761" endtime="20201112 12:43:39.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.387" endtime="20201112 12:43:39.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.382" endtime="20201112 12:43:39.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:39.778" level="INFO">${RESULT} = [{'time': 0.041771708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.041785903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:39.769" endtime="20201112 12:43:39.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:39.810" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:39.780" endtime="20201112 12:43:39.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.821" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 12:43:39.819" endtime="20201112 12:43:39.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.827" level="INFO">VALUE: [9.388999999998537e-06, 9.444999999996817e-06, 9.915999999998704e-06, 9.430999999997247e-06, 9.430000000004712e-06, 9.445000000003756e-06, 8.917000000004116e-06, 8.930999999996747e-06, 8.945000000003256e-06, 9.429999999997773e-06, 9.429999999997773e-06, 8.986000000002492e-06, 9.360999999999398e-06, 8.916999999997177e-06, 9.457999999996913e-06, 9.985999999996553e-06, 9.443999999997343e-06, 9.430999999997247e-06, 9.416999999997677e-06, 9.443999999997343e-06, 8.929999999997273e-06, 9.416999999997677e-06, 9.457999999996913e-06, 9.458999999996387e-06, 9.930999999997747e-06, 9.944000000004782e-06, 8.944000000003782e-06, 9.458999999996387e-06, 8.944000000003782e-06, 9.528000000001702e-06, 9.430999999997247e-06, 9.430999999997247e-06, 9.430999999997247e-06, 9.444000000004282e-06, 9.402999999998107e-06, 9.430999999997247e-06, 8.930000000004212e-06, 9.930999999997747e-06, 9.445000000003756e-06, 8.916999999997177e-06, 8.931000000003686e-06, 8.929999999997273e-06, 9.417000000004616e-06, 8.957999999996413e-06, 8.917000000004116e-06, 9.416999999997677e-06, 8.945000000003256e-06, 9.944000000004782e-06, 8.916999999997177e-06, 8.917000000004116e-06]</msg>
<status status="PASS" starttime="20201112 12:43:39.823" endtime="20201112 12:43:39.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.812" endtime="20201112 12:43:39.830"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.836" endtime="20201112 12:43:39.839"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:39.844" endtime="20201112 12:43:39.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.840" endtime="20201112 12:43:39.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.832" endtime="20201112 12:43:39.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.327" endtime="20201112 12:43:39.870"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.325" endtime="20201112 12:43:39.870"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.893" endtime="20201112 12:43:39.910"></status>
</kw>
<msg timestamp="20201112 12:43:39.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:39.889" endtime="20201112 12:43:39.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:39.914" endtime="20201112 12:43:39.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.920" endtime="20201112 12:43:39.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.882" endtime="20201112 12:43:39.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.876" endtime="20201112 12:43:39.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.944" endtime="20201112 12:43:40.279"></status>
</kw>
<msg timestamp="20201112 12:43:40.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041958639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041968611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:39.940" endtime="20201112 12:43:40.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:40.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041958639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041968611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:40.288" endtime="20201112 12:43:40.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:40.307" endtime="20201112 12:43:40.311"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.933" endtime="20201112 12:43:40.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.928" endtime="20201112 12:43:40.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:40.325" level="INFO">${RESULT} = [{'time': 0.041968611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.972000000003922e-06, 'source_diff': 9.972000000003922e-06}, {'time': 0.041984542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:40.316" endtime="20201112 12:43:40.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:40.357" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:40.327" endtime="20201112 12:43:40.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:40.369" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 12:43:40.366" endtime="20201112 12:43:40.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:40.375" level="INFO">VALUE: [9.972000000003922e-06, 9.958999999996887e-06, 1.0443999999998343e-05, 1.0443999999998343e-05, 1.0430000000005712e-05, 9.929999999998274e-06, 9.930000000005212e-06, 9.971999999996983e-06, 9.944000000004782e-06, 1.0929999999999274e-05, 1.0443999999998343e-05, 1.0444999999997817e-05, 1.0429999999998774e-05, 9.874999999999468e-06, 1.0457999999997913e-05, 9.929999999998274e-06, 1.0430000000005712e-05, 1.0930999999998747e-05, 1.0443999999998343e-05, 1.0430999999998247e-05, 9.930000000005212e-06, 1.0472999999996957e-05, 1.0429999999998774e-05, 1.0430999999998247e-05, 9.929999999998274e-06, 1.0457999999997913e-05, 1.0429999999998774e-05, 1.0444999999997817e-05, 9.916000000005643e-06, 1.0499999999996623e-05, 1.0430999999998247e-05, 9.916000000005643e-06, 1.0930999999998747e-05, 9.943999999997843e-06, 1.0986999999997027e-05, 1.0416999999998677e-05, 9.929999999998274e-06, 1.0929999999999274e-05, 1.0458000000004852e-05, 1.0429999999998774e-05, 9.929999999998274e-06, 9.943999999997843e-06, 9.930999999997747e-06, 9.930999999997747e-06, 9.944999999997317e-06, 1.0929999999999274e-05, 1.0472000000004422e-05, 1.0431000000005186e-05, 1.0457999999997913e-05, 1.0444999999997817e-05]</msg>
<status status="PASS" starttime="20201112 12:43:40.372" endtime="20201112 12:43:40.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.359" endtime="20201112 12:43:40.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:40.385" endtime="20201112 12:43:40.387"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:40.393" endtime="20201112 12:43:40.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.388" endtime="20201112 12:43:40.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.380" endtime="20201112 12:43:40.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.872" endtime="20201112 12:43:40.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.871" endtime="20201112 12:43:40.419"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:40.441" endtime="20201112 12:43:40.459"></status>
</kw>
<msg timestamp="20201112 12:43:40.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:40.438" endtime="20201112 12:43:40.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:40.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:40.463" endtime="20201112 12:43:40.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:40.469" endtime="20201112 12:43:40.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.431" endtime="20201112 12:43:40.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.425" endtime="20201112 12:43:40.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:40.492" endtime="20201112 12:43:40.829"></status>
</kw>
<msg timestamp="20201112 12:43:40.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041783278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041794722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:40.489" endtime="20201112 12:43:40.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:40.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041783278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041794722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:40.839" endtime="20201112 12:43:40.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:40.858" endtime="20201112 12:43:40.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.482" endtime="20201112 12:43:40.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.477" endtime="20201112 12:43:40.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:40.875" level="INFO">${RESULT} = [{'time': 0.041794722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1443999999999344e-05, 'source_diff': 1.1443999999999344e-05}, {'time': 0.041816514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:40.866" endtime="20201112 12:43:40.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:40.906" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:40.878" endtime="20201112 12:43:40.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:40.917" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 12:43:40.915" endtime="20201112 12:43:40.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:40.923" level="INFO">VALUE: [1.1443999999999344e-05, 1.1430999999999247e-05, 1.1443999999999344e-05, 1.1430999999999247e-05, 1.0929999999999274e-05, 1.0930999999998747e-05, 1.0945000000005256e-05, 1.0929999999999274e-05, 1.1513999999997193e-05, 1.1444999999998817e-05, 1.0929999999999274e-05, 1.0929999999999274e-05, 1.1444999999998817e-05, 1.0930999999998747e-05, 1.1471999999998483e-05, 1.1458999999998387e-05, 1.0875000000000468e-05, 1.1429999999999774e-05, 1.1429999999999774e-05, 1.0943999999998844e-05, 1.1458000000005852e-05, 1.0929999999999274e-05, 1.1457999999998913e-05, 1.1443999999999344e-05, 1.1443999999999344e-05, 1.0957999999998413e-05, 1.1444000000006282e-05, 1.1471999999998483e-05, 1.1888000000001564e-05, 1.0957999999998413e-05, 1.1458999999998387e-05, 1.0943999999998844e-05, 1.1430999999999247e-05, 1.1457999999998913e-05, 1.1429999999999774e-05, 1.0902999999999607e-05, 1.1499999999997623e-05, 1.0943999999998844e-05, 1.0943999999998844e-05, 1.0945000000005256e-05, 1.1403000000000107e-05, 1.0971999999997983e-05, 1.1917000000000177e-05, 1.1431000000006186e-05, 1.1930999999999747e-05, 1.0944000000005782e-05, 1.1917000000000177e-05, 1.1930999999999747e-05, 1.1443999999999344e-05, 1.0944999999998317e-05]</msg>
<status status="PASS" starttime="20201112 12:43:40.920" endtime="20201112 12:43:40.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.908" endtime="20201112 12:43:40.926"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:40.932" endtime="20201112 12:43:40.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:40.942" endtime="20201112 12:43:40.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.938" endtime="20201112 12:43:40.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.928" endtime="20201112 12:43:40.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.421" endtime="20201112 12:43:40.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.419" endtime="20201112 12:43:40.968"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:40.991" endtime="20201112 12:43:41.010"></status>
</kw>
<msg timestamp="20201112 12:43:41.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:40.987" endtime="20201112 12:43:41.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:41.013" endtime="20201112 12:43:41.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.019" endtime="20201112 12:43:41.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.980" endtime="20201112 12:43:41.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.974" endtime="20201112 12:43:41.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.042" endtime="20201112 12:43:41.391"></status>
</kw>
<msg timestamp="20201112 12:43:41.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042165083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042177014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:41.039" endtime="20201112 12:43:41.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042165083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042177014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:41.401" endtime="20201112 12:43:41.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.421" endtime="20201112 12:43:41.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.032" endtime="20201112 12:43:41.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.027" endtime="20201112 12:43:41.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:41.440" level="INFO">${RESULT} = [{'time': 0.042177014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1930999999999747e-05, 'source_diff': 1.1930999999999747e-05}, {'time': 0.042201083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:41.431" endtime="20201112 12:43:41.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:41.473" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:41.442" endtime="20201112 12:43:41.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.485" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 12:43:41.483" endtime="20201112 12:43:41.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.491" level="INFO">VALUE: [1.1930999999999747e-05, 1.2444000000000344e-05, 1.1944999999999317e-05, 1.2457999999999914e-05, 1.1930999999999747e-05, 1.2444999999999817e-05, 1.1944999999999317e-05, 1.2444000000000344e-05, 1.1958000000006352e-05, 1.1944999999999317e-05, 1.1944999999999317e-05, 1.1929999999993335e-05, 1.1930000000000274e-05, 1.2444999999999817e-05, 1.1971999999998983e-05, 1.2444000000000344e-05, 1.2444000000000344e-05, 1.2944000000000844e-05, 1.2431000000000247e-05, 1.1943999999999844e-05, 1.1862000000001371e-05, 1.2014000000004632e-05, 1.1971999999998983e-05, 1.2444999999999817e-05, 1.2403000000001108e-05, 1.1943999999999844e-05, 1.2430000000000774e-05, 1.2417000000000677e-05, 1.2444999999999817e-05, 1.2917000000001178e-05, 1.1917000000000177e-05, 1.2431000000000247e-05, 1.2430999999993309e-05, 1.1943999999999844e-05, 1.2417000000000677e-05, 1.1943999999999844e-05, 1.2361000000002398e-05, 1.2430000000000774e-05, 1.2361000000002398e-05, 1.2430000000000774e-05, 1.2431000000000247e-05, 1.1930999999999747e-05, 1.1971999999998983e-05, 1.2499999999998623e-05, 1.2431000000000247e-05, 1.2931000000000747e-05, 1.2931000000000747e-05, 1.2471999999999483e-05, 1.1943999999999844e-05, 1.2444999999999817e-05]</msg>
<status status="PASS" starttime="20201112 12:43:41.487" endtime="20201112 12:43:41.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.475" endtime="20201112 12:43:41.494"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.501" endtime="20201112 12:43:41.504"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:41.510" endtime="20201112 12:43:41.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.505" endtime="20201112 12:43:41.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.496" endtime="20201112 12:43:41.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.970" endtime="20201112 12:43:41.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.969" endtime="20201112 12:43:41.537"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.563" endtime="20201112 12:43:41.581"></status>
</kw>
<msg timestamp="20201112 12:43:41.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:41.559" endtime="20201112 12:43:41.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:41.585" endtime="20201112 12:43:41.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.592" endtime="20201112 12:43:41.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.551" endtime="20201112 12:43:41.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.544" endtime="20201112 12:43:41.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.616" endtime="20201112 12:43:41.977"></status>
</kw>
<msg timestamp="20201112 12:43:41.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046126806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04613975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:41.613" endtime="20201112 12:43:41.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046126806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04613975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:41.987" endtime="20201112 12:43:42.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.008" endtime="20201112 12:43:42.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.605" endtime="20201112 12:43:42.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.600" endtime="20201112 12:43:42.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:42.026" level="INFO">${RESULT} = [{'time': 0.04613975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2944000000000844e-05, 'source_diff': 1.2944000000000844e-05}, {'time': 0.046156986, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:43:42.017" endtime="20201112 12:43:42.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:42.059" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:42.029" endtime="20201112 12:43:42.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.071" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 12:43:42.069" endtime="20201112 12:43:42.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.077" level="INFO">VALUE: [1.2944000000000844e-05, 1.3943999999994905e-05, 1.2930000000001274e-05, 1.3416999999994739e-05, 1.2931000000000747e-05, 1.3417000000001678e-05, 1.2931000000000747e-05, 1.3459000000000387e-05, 1.3431000000001247e-05, 1.2945000000000317e-05, 1.2930000000001274e-05, 1.3958000000001414e-05, 1.3445000000000817e-05, 1.3444000000001344e-05, 1.3458000000000914e-05, 1.2931000000000747e-05, 1.3458000000000914e-05, 1.3459000000000387e-05, 1.3472999999999957e-05, 1.2971999999999984e-05, 1.3389000000002538e-05, 1.3430000000001774e-05, 1.2958999999999887e-05, 1.3444000000001344e-05, 1.3416000000002204e-05, 1.2917000000001178e-05, 1.3444000000001344e-05, 1.3945000000001317e-05, 1.3389000000002538e-05, 1.3444000000001344e-05, 1.3431000000001247e-05, 1.3416000000002204e-05, 1.2930000000001274e-05, 1.2930000000001274e-05, 1.3458000000000914e-05, 1.2930000000001274e-05, 1.3486999999999527e-05, 1.3459000000000387e-05, 1.2944000000000844e-05, 1.3457999999993975e-05, 1.3472000000000484e-05, 1.2944000000000844e-05, 1.2931000000000747e-05, 1.3375000000002968e-05, 1.2945000000000317e-05, 1.3458000000000914e-05, 1.3459000000000387e-05, 1.3444000000001344e-05, 1.3444000000001344e-05, 1.3430999999994309e-05]</msg>
<status status="PASS" starttime="20201112 12:43:42.074" endtime="20201112 12:43:42.079"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.061" endtime="20201112 12:43:42.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.087" endtime="20201112 12:43:42.090"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:42.096" endtime="20201112 12:43:42.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.092" endtime="20201112 12:43:42.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.082" endtime="20201112 12:43:42.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.539" endtime="20201112 12:43:42.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.538" endtime="20201112 12:43:42.123"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.147" endtime="20201112 12:43:42.167"></status>
</kw>
<msg timestamp="20201112 12:43:42.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:42.144" endtime="20201112 12:43:42.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:42.171" endtime="20201112 12:43:42.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.178" endtime="20201112 12:43:42.182"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.136" endtime="20201112 12:43:42.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.130" endtime="20201112 12:43:42.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.203" endtime="20201112 12:43:42.512"></status>
</kw>
<msg timestamp="20201112 12:43:42.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046264528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046278444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:42.200" endtime="20201112 12:43:42.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046264528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046278444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:42.516" endtime="20201112 12:43:42.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.525" endtime="20201112 12:43:42.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.192" endtime="20201112 12:43:42.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.187" endtime="20201112 12:43:42.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:42.534" level="INFO">${RESULT} = [{'time': 0.046278444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3916000000002704e-05, 'source_diff': 1.3916000000002704e-05}, {'time': 0.046302222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:42.529" endtime="20201112 12:43:42.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:42.549" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:42.535" endtime="20201112 12:43:42.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.555" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 12:43:42.553" endtime="20201112 12:43:42.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.557" level="INFO">VALUE: [1.3916000000002704e-05, 1.4443999999995405e-05, 1.3958000000001414e-05, 1.3971999999994045e-05, 1.3943999999994905e-05, 1.4902999999996669e-05, 1.3916000000002704e-05, 1.3958000000001414e-05, 1.3916000000002704e-05, 1.4459000000001387e-05, 1.4445000000001817e-05, 1.4972000000001984e-05, 1.3931000000001748e-05, 1.4487000000000527e-05, 1.3958000000001414e-05, 1.3958000000001414e-05, 1.4514000000000193e-05, 1.4375000000003968e-05, 1.4459000000001387e-05, 1.3915999999995765e-05, 1.4445000000001817e-05, 1.3945000000001317e-05, 1.3929999999995335e-05, 1.3931000000001748e-05, 1.4445000000001817e-05, 1.4959000000001887e-05, 1.4944000000002844e-05, 1.4429999999995835e-05, 1.3888999999996099e-05, 1.4429999999995835e-05, 1.4944000000002844e-05, 1.4486000000001054e-05, 1.3958999999993948e-05, 1.3889000000003038e-05, 1.3930000000002274e-05, 1.3902000000003134e-05, 1.4459000000001387e-05, 1.4430999999995309e-05, 1.3945000000001317e-05, 1.4417000000002678e-05, 1.4473000000000957e-05, 1.4445000000001817e-05, 1.3944000000001844e-05, 1.3972000000000984e-05, 1.3916000000002704e-05, 1.3931000000001748e-05, 1.3915999999995765e-05, 1.3945000000001317e-05, 1.3972000000000984e-05, 1.4443999999995405e-05]</msg>
<status status="PASS" starttime="20201112 12:43:42.556" endtime="20201112 12:43:42.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.550" endtime="20201112 12:43:42.559"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.562" endtime="20201112 12:43:42.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:42.566" endtime="20201112 12:43:42.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.564" endtime="20201112 12:43:42.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.560" endtime="20201112 12:43:42.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.125" endtime="20201112 12:43:42.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.124" endtime="20201112 12:43:42.588"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.599" endtime="20201112 12:43:42.614"></status>
</kw>
<msg timestamp="20201112 12:43:42.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:42.597" endtime="20201112 12:43:42.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:42.616" endtime="20201112 12:43:42.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.619" endtime="20201112 12:43:42.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.594" endtime="20201112 12:43:42.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.591" endtime="20201112 12:43:42.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.632" endtime="20201112 12:43:42.943"></status>
</kw>
<msg timestamp="20201112 12:43:42.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025487278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025502722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:42.630" endtime="20201112 12:43:42.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025487278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025502722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:42.953" endtime="20201112 12:43:42.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.974" endtime="20201112 12:43:42.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.626" endtime="20201112 12:43:42.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.623" endtime="20201112 12:43:42.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:42.992" level="INFO">${RESULT} = [{'time': 0.025502722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5443999999999874e-05, 'source_diff': 1.5443999999999874e-05}, {'time': 0.025521361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:42.983" endtime="20201112 12:43:42.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:43.025" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:42.995" endtime="20201112 12:43:43.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.037" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 12:43:43.034" endtime="20201112 12:43:43.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.043" level="INFO">VALUE: [1.5443999999999874e-05, 1.4929999999999805e-05, 1.4929999999999805e-05, 1.5402000000001165e-05, 1.5444999999999348e-05, 1.540300000000064e-05, 1.4916999999999708e-05, 1.551300000000172e-05, 1.5443999999999874e-05, 1.4944999999998848e-05, 1.4986000000001554e-05, 1.5499999999998154e-05, 1.4930999999999278e-05, 1.4944999999998848e-05, 1.5443999999999874e-05, 1.5473000000001957e-05, 1.4929999999999805e-05, 1.4916999999999708e-05, 1.4929999999999805e-05, 1.4986000000001554e-05, 1.5499999999998154e-05, 1.4943999999999374e-05, 1.5445000000002818e-05, 1.4929999999999805e-05, 1.4917000000003178e-05, 1.540300000000064e-05, 1.53750000000015e-05, 1.5971999999999514e-05, 1.4931000000002748e-05, 1.5443999999999874e-05, 1.5430000000000305e-05, 1.5443999999999874e-05, 1.5430999999999778e-05, 1.4929999999999805e-05, 1.5458999999998918e-05, 1.5443999999999874e-05, 1.4999999999997654e-05, 1.4930999999999278e-05, 1.4930999999999278e-05, 1.4944999999998848e-05, 1.5443999999999874e-05, 1.4929999999999805e-05, 1.5443999999999874e-05, 1.593099999999681e-05, 1.5500000000001624e-05, 1.5514000000001194e-05, 1.540300000000064e-05, 1.5930000000000805e-05, 1.5430000000000305e-05, 1.5430999999999778e-05]</msg>
<status status="PASS" starttime="20201112 12:43:43.039" endtime="20201112 12:43:43.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.027" endtime="20201112 12:43:43.051"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.057" endtime="20201112 12:43:43.061"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:43.067" endtime="20201112 12:43:43.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.062" endtime="20201112 12:43:43.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.053" endtime="20201112 12:43:43.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.589" endtime="20201112 12:43:43.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.588" endtime="20201112 12:43:43.094"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.118" endtime="20201112 12:43:43.138"></status>
</kw>
<msg timestamp="20201112 12:43:43.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:43.115" endtime="20201112 12:43:43.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:43.142" endtime="20201112 12:43:43.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.149" endtime="20201112 12:43:43.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.107" endtime="20201112 12:43:43.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.101" endtime="20201112 12:43:43.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.174" endtime="20201112 12:43:43.540"></status>
</kw>
<msg timestamp="20201112 12:43:43.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045531319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045547181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:43.170" endtime="20201112 12:43:43.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045531319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045547181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:43.550" endtime="20201112 12:43:43.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.571" endtime="20201112 12:43:43.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.162" endtime="20201112 12:43:43.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.157" endtime="20201112 12:43:43.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:43.589" level="INFO">${RESULT} = [{'time': 0.045547181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5861999999998433e-05, 'source_diff': 1.5861999999998433e-05}, {'time': 0.045573153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:43.579" endtime="20201112 12:43:43.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:43.622" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:43.591" endtime="20201112 12:43:43.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.633" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 12:43:43.631" endtime="20201112 12:43:43.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.639" level="INFO">VALUE: [1.5861999999998433e-05, 1.641699999999774e-05, 1.5957999999996475e-05, 1.6443999999997405e-05, 1.644499999999688e-05, 1.643099999999731e-05, 1.6459000000003388e-05, 1.6430000000004774e-05, 1.6458000000003914e-05, 1.594499999999638e-05, 1.643099999999731e-05, 1.6444000000004344e-05, 1.587499999999853e-05, 1.5959000000002888e-05, 1.6431000000004248e-05, 1.6445000000003818e-05, 1.5944000000003844e-05, 1.6473000000002957e-05, 1.640299999999817e-05, 1.6429999999997835e-05, 1.643099999999731e-05, 1.6445000000003818e-05, 1.590299999999767e-05, 1.637499999999903e-05, 1.5972000000002984e-05, 1.593099999999681e-05, 1.645899999999645e-05, 1.6457999999996975e-05, 1.6500000000002624e-05, 1.63889999999986e-05, 1.591699999999724e-05, 1.6472000000003484e-05, 1.5901999999998195e-05, 1.6457999999996975e-05, 1.5930000000004274e-05, 1.5943999999996905e-05, 1.643099999999731e-05, 1.6458000000003914e-05, 1.6444000000004344e-05, 1.6361000000006398e-05, 1.5915999999997765e-05, 1.6014000000001694e-05, 1.6486000000003054e-05, 1.637499999999903e-05, 1.5959000000002888e-05, 1.6443999999997405e-05, 1.6445000000003818e-05, 1.6431000000004248e-05, 1.5957999999996475e-05, 1.5943999999996905e-05]</msg>
<status status="PASS" starttime="20201112 12:43:43.636" endtime="20201112 12:43:43.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.624" endtime="20201112 12:43:43.643"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.649" endtime="20201112 12:43:43.652"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:43.658" endtime="20201112 12:43:43.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.654" endtime="20201112 12:43:43.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.644" endtime="20201112 12:43:43.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.096" endtime="20201112 12:43:43.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.095" endtime="20201112 12:43:43.685"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.709" endtime="20201112 12:43:43.729"></status>
</kw>
<msg timestamp="20201112 12:43:43.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:43.706" endtime="20201112 12:43:43.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:43.733" endtime="20201112 12:43:43.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.739" endtime="20201112 12:43:43.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.698" endtime="20201112 12:43:43.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.692" endtime="20201112 12:43:43.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.764" endtime="20201112 12:43:44.124"></status>
</kw>
<msg timestamp="20201112 12:43:44.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044575403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044592333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:43.761" endtime="20201112 12:43:44.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044575403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044592333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:44.135" endtime="20201112 12:43:44.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.155" endtime="20201112 12:43:44.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.753" endtime="20201112 12:43:44.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.748" endtime="20201112 12:43:44.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:44.174" level="INFO">${RESULT} = [{'time': 0.044592333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6929999999998335e-05, 'source_diff': 1.6929999999998335e-05}, {'time': 0.044624444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:44.164" endtime="20201112 12:43:44.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:44.206" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:44.176" endtime="20201112 12:43:44.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.218" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 12:43:44.216" endtime="20201112 12:43:44.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.224" level="INFO">VALUE: [1.6929999999998335e-05, 1.6957999999997475e-05, 1.7985999999997615e-05, 1.6929999999998335e-05, 1.7417000000005678e-05, 1.7429999999998835e-05, 1.791699999999924e-05, 1.690299999999867e-05, 1.6929999999998335e-05, 1.6943999999997905e-05, 1.693099999999781e-05, 1.6944000000004844e-05, 1.6901999999999195e-05, 1.740299999999917e-05, 1.7429999999998835e-05, 1.743099999999831e-05, 1.694499999999738e-05, 1.6957999999997475e-05, 1.6945000000004318e-05, 1.7429999999998835e-05, 1.7416000000006204e-05, 1.7429999999998835e-05, 1.7943999999998905e-05, 1.6945000000004318e-05, 1.6986000000003554e-05, 1.7429999999998835e-05, 1.693099999999781e-05, 1.7445000000004818e-05, 1.744499999999788e-05, 1.694499999999738e-05, 1.7943999999998905e-05, 1.743099999999831e-05, 1.7458000000004914e-05, 1.7000000000003124e-05, 1.6915999999998765e-05, 1.7499999999996685e-05, 1.6944000000004844e-05, 1.743099999999831e-05, 1.7443999999998405e-05, 1.6958000000004414e-05, 1.691699999999824e-05, 1.693099999999781e-05, 1.7986000000004554e-05, 1.743099999999831e-05, 1.7444000000005344e-05, 1.7444000000005344e-05, 1.7945000000005318e-05, 1.6929999999998335e-05, 1.7443999999998405e-05, 1.743099999999831e-05]</msg>
<status status="PASS" starttime="20201112 12:43:44.220" endtime="20201112 12:43:44.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.208" endtime="20201112 12:43:44.227"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.234" endtime="20201112 12:43:44.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:44.243" endtime="20201112 12:43:44.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.238" endtime="20201112 12:43:44.267"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.229" endtime="20201112 12:43:44.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.687" endtime="20201112 12:43:44.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.686" endtime="20201112 12:43:44.270"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.294" endtime="20201112 12:43:44.313"></status>
</kw>
<msg timestamp="20201112 12:43:44.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:44.291" endtime="20201112 12:43:44.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:44.317" endtime="20201112 12:43:44.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.324" endtime="20201112 12:43:44.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.283" endtime="20201112 12:43:44.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.277" endtime="20201112 12:43:44.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.349" endtime="20201112 12:43:44.709"></status>
</kw>
<msg timestamp="20201112 12:43:44.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04483825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044856667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:44.345" endtime="20201112 12:43:44.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04483825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044856667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:44.719" endtime="20201112 12:43:44.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.739" endtime="20201112 12:43:44.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.337" endtime="20201112 12:43:44.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.332" endtime="20201112 12:43:44.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:44.760" level="INFO">${RESULT} = [{'time': 0.044856667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.841699999999974e-05, 'source_diff': 1.841699999999974e-05}, {'time': 0.044883722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:44.750" endtime="20201112 12:43:44.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:44.795" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:44.762" endtime="20201112 12:43:44.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.807" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 12:43:44.804" endtime="20201112 12:43:44.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.813" level="INFO">VALUE: [1.841699999999974e-05, 1.7929999999999335e-05, 1.795899999999795e-05, 1.8429999999999835e-05, 1.7929999999999335e-05, 1.844499999999888e-05, 1.845899999999845e-05, 1.793099999999881e-05, 1.7971999999998045e-05, 1.8500000000004624e-05, 1.844499999999888e-05, 1.7943999999998905e-05, 1.7957999999998475e-05, 1.841699999999974e-05, 1.841699999999974e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.7943999999998905e-05, 1.7999999999997185e-05, 1.7985999999997615e-05, 1.836100000000146e-05, 1.8429999999999835e-05, 1.845899999999845e-05, 1.843099999999931e-05, 1.844499999999888e-05, 1.793099999999881e-05, 1.8971999999999045e-05, 1.7930000000006274e-05, 1.7957999999998475e-05, 1.8000000000004124e-05, 1.7929999999999335e-05, 1.8930000000000335e-05, 1.7929999999999335e-05, 1.843099999999931e-05, 1.7999999999997185e-05, 1.8485999999998115e-05, 1.8457999999998975e-05, 1.787500000000053e-05, 1.840300000000017e-05, 1.7930000000006274e-05, 1.7957999999998475e-05, 1.840300000000017e-05, 1.7945000000005318e-05, 1.7943999999998905e-05, 1.793099999999881e-05, 1.894499999999938e-05, 1.8444000000006344e-05, 1.7943999999998905e-05, 1.8471999999998545e-05, 1.7944000000005844e-05]</msg>
<status status="PASS" starttime="20201112 12:43:44.809" endtime="20201112 12:43:44.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.797" endtime="20201112 12:43:44.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.823" endtime="20201112 12:43:44.826"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:44.832" endtime="20201112 12:43:44.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.827" endtime="20201112 12:43:44.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.818" endtime="20201112 12:43:44.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.272" endtime="20201112 12:43:44.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.271" endtime="20201112 12:43:44.858"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.884" endtime="20201112 12:43:44.904"></status>
</kw>
<msg timestamp="20201112 12:43:44.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:44.881" endtime="20201112 12:43:44.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:44.907" endtime="20201112 12:43:44.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.914" endtime="20201112 12:43:44.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.872" endtime="20201112 12:43:44.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.866" endtime="20201112 12:43:44.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.939" endtime="20201112 12:43:45.297"></status>
</kw>
<msg timestamp="20201112 12:43:45.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046476292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046495236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:44.936" endtime="20201112 12:43:45.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046476292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046495236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:45.307" endtime="20201112 12:43:45.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.327" endtime="20201112 12:43:45.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.928" endtime="20201112 12:43:45.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.923" endtime="20201112 12:43:45.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:45.346" level="INFO">${RESULT} = [{'time': 0.046495236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8943999999999905e-05, 'source_diff': 1.8943999999999905e-05}, {'time': 0.046517972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:45.336" endtime="20201112 12:43:45.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:45.380" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:45.348" endtime="20201112 12:43:45.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.392" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 12:43:45.389" endtime="20201112 12:43:45.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.398" level="INFO">VALUE: [1.8943999999999905e-05, 1.9430000000000835e-05, 1.9430000000000835e-05, 1.944499999999988e-05, 1.893099999999981e-05, 1.943100000000031e-05, 1.943100000000031e-05, 1.893099999999981e-05, 1.9444000000000405e-05, 1.9430000000000835e-05, 1.9430000000000835e-05, 1.945899999999945e-05, 1.943100000000031e-05, 1.9444000000000405e-05, 1.944499999999988e-05, 1.891700000000024e-05, 1.943100000000031e-05, 1.887500000000153e-05, 1.9402000000001696e-05, 1.94169999999938e-05, 1.895899999999895e-05, 1.8943999999999905e-05, 1.9944000000000905e-05, 1.941700000000074e-05, 1.8943999999999905e-05, 1.9444000000000405e-05, 1.945899999999945e-05, 1.8930000000000335e-05, 1.9430000000000835e-05, 1.8943999999999905e-05, 1.9485999999999115e-05, 1.9444000000000405e-05, 1.937499999999509e-05, 1.9471999999999545e-05, 1.945899999999945e-05, 1.943100000000031e-05, 1.9486000000006054e-05, 1.9444000000000405e-05, 1.9430000000000835e-05, 1.9429999999993897e-05, 1.940299999999423e-05, 1.891700000000024e-05, 1.8957999999999475e-05, 1.943100000000031e-05, 1.9361999999994994e-05, 1.944499999999988e-05, 1.8957999999999475e-05, 1.9457999999999975e-05, 1.9972000000000045e-05, 1.894499999999938e-05]</msg>
<status status="PASS" starttime="20201112 12:43:45.394" endtime="20201112 12:43:45.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.382" endtime="20201112 12:43:45.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.408" endtime="20201112 12:43:45.411"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:45.417" endtime="20201112 12:43:45.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.412" endtime="20201112 12:43:45.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.403" endtime="20201112 12:43:45.442"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.861" endtime="20201112 12:43:45.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.859" endtime="20201112 12:43:45.443"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.468" endtime="20201112 12:43:45.487"></status>
</kw>
<msg timestamp="20201112 12:43:45.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:45.464" endtime="20201112 12:43:45.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:45.490" endtime="20201112 12:43:45.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.497" endtime="20201112 12:43:45.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.456" endtime="20201112 12:43:45.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.450" endtime="20201112 12:43:45.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.522" endtime="20201112 12:43:45.882"></status>
</kw>
<msg timestamp="20201112 12:43:45.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04464725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044667653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:45.519" endtime="20201112 12:43:45.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04464725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044667653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:45.892" endtime="20201112 12:43:45.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.912" endtime="20201112 12:43:45.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.511" endtime="20201112 12:43:45.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.506" endtime="20201112 12:43:45.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:45.932" level="INFO">${RESULT} = [{'time': 0.044667653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.040300000000217e-05, 'source_diff': 2.040300000000217e-05}, {'time': 0.044700764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:45.922" endtime="20201112 12:43:45.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:45.966" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:45.934" endtime="20201112 12:43:45.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.978" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 12:43:45.976" endtime="20201112 12:43:45.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.984" level="INFO">VALUE: [2.040300000000217e-05, 2.043099999999437e-05, 2.0944000000001906e-05, 1.9944000000000905e-05, 1.9930000000001336e-05, 1.990299999999473e-05, 2.041700000000174e-05, 2.0972000000001045e-05, 1.993100000000081e-05, 2.043100000000131e-05, 2.0443999999994467e-05, 2.0014000000005694e-05, 2.0444000000001405e-05, 1.993100000000081e-05, 2.043100000000131e-05, 1.987499999999559e-05, 2.0458000000000975e-05, 2.0444000000001405e-05, 2.044500000000088e-05, 1.9972000000000045e-05, 2.045900000000045e-05, 1.991700000000124e-05, 2.0444000000001405e-05, 2.0444000000001405e-05, 1.9929999999994397e-05, 2.043100000000131e-05, 2.0444000000001405e-05, 2.0943999999994967e-05, 1.9985999999999615e-05, 2.045900000000045e-05, 2.0458000000000975e-05, 1.993100000000081e-05, 1.9972000000000045e-05, 2.093100000000181e-05, 2.0486000000000115e-05, 2.03890000000026e-05, 2.044500000000088e-05, 1.991700000000124e-05, 2.044500000000088e-05, 1.9944000000000905e-05, 1.9930000000001336e-05, 2.0458000000000975e-05, 1.994500000000038e-05, 2.0444000000001405e-05, 2.044500000000088e-05, 1.9944000000000905e-05, 1.9930000000001336e-05, 2.0527999999998825e-05, 2.0444000000001405e-05, 1.993100000000081e-05]</msg>
<status status="PASS" starttime="20201112 12:43:45.981" endtime="20201112 12:43:45.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.968" endtime="20201112 12:43:45.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.994" endtime="20201112 12:43:45.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:46.003" endtime="20201112 12:43:46.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.998" endtime="20201112 12:43:46.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.989" endtime="20201112 12:43:46.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.446" endtime="20201112 12:43:46.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.444" endtime="20201112 12:43:46.030"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.054" endtime="20201112 12:43:46.072"></status>
</kw>
<msg timestamp="20201112 12:43:46.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:46.051" endtime="20201112 12:43:46.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:46.075" endtime="20201112 12:43:46.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.077" endtime="20201112 12:43:46.079"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.043" endtime="20201112 12:43:46.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.037" endtime="20201112 12:43:46.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.089" endtime="20201112 12:43:46.375"></status>
</kw>
<msg timestamp="20201112 12:43:46.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045141153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045162597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:46.087" endtime="20201112 12:43:46.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045141153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045162597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:46.380" endtime="20201112 12:43:46.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.388" endtime="20201112 12:43:46.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.084" endtime="20201112 12:43:46.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.081" endtime="20201112 12:43:46.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:46.397" level="INFO">${RESULT} = [{'time': 0.045162597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1443999999995467e-05, 'source_diff': 2.1443999999995467e-05}, {'time': 0.045191667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:46.393" endtime="20201112 12:43:46.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:46.412" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:46.398" endtime="20201112 12:43:46.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.417" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 12:43:46.416" endtime="20201112 12:43:46.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.420" level="INFO">VALUE: [2.1443999999995467e-05, 2.1000000000000185e-05, 2.093100000000181e-05, 2.143100000000231e-05, 2.193100000000281e-05, 2.1958000000002476e-05, 2.1443999999995467e-05, 2.0986000000000615e-05, 2.13890000000036e-05, 2.1430000000002836e-05, 2.193100000000281e-05, 2.0986000000000615e-05, 2.0930000000002336e-05, 2.0944000000001906e-05, 2.094500000000138e-05, 2.145900000000145e-05, 2.0930000000002336e-05, 2.1458000000001975e-05, 2.144499999999494e-05, 2.141700000000274e-05, 2.1444000000002406e-05, 2.091700000000224e-05, 2.148700000000059e-05, 2.1444000000002406e-05, 2.0958000000001475e-05, 2.1430000000002836e-05, 2.0944000000001906e-05, 2.0887999999996687e-05, 2.095900000000095e-05, 2.193100000000281e-05, 2.1430000000002836e-05, 2.1429999999995897e-05, 2.1429999999995897e-05, 2.091700000000224e-05, 2.1430000000002836e-05, 2.138899999999666e-05, 2.187500000000453e-05, 2.1444000000002406e-05, 2.0958000000001475e-05, 2.086099999999702e-05, 2.0930000000002336e-05, 2.093100000000181e-05, 2.1443999999995467e-05, 2.144500000000188e-05, 2.0986000000000615e-05, 2.143100000000231e-05, 2.1458000000001975e-05, 2.08890000000031e-05, 2.1387999999997187e-05, 2.0944000000001906e-05]</msg>
<status status="PASS" starttime="20201112 12:43:46.418" endtime="20201112 12:43:46.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.413" endtime="20201112 12:43:46.422"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.425" endtime="20201112 12:43:46.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:46.429" endtime="20201112 12:43:46.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.427" endtime="20201112 12:43:46.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.423" endtime="20201112 12:43:46.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.032" endtime="20201112 12:43:46.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.031" endtime="20201112 12:43:46.450"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.462" endtime="20201112 12:43:46.478"></status>
</kw>
<msg timestamp="20201112 12:43:46.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:46.460" endtime="20201112 12:43:46.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:46.482" endtime="20201112 12:43:46.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.489" endtime="20201112 12:43:46.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.456" endtime="20201112 12:43:46.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.454" endtime="20201112 12:43:46.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.514" endtime="20201112 12:43:46.884"></status>
</kw>
<msg timestamp="20201112 12:43:46.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025705639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025727569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:46.510" endtime="20201112 12:43:46.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025705639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025727569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:46.894" endtime="20201112 12:43:46.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.915" endtime="20201112 12:43:46.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.503" endtime="20201112 12:43:46.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.498" endtime="20201112 12:43:46.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:46.933" level="INFO">${RESULT} = [{'time': 0.025727569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1929999999999866e-05, 'source_diff': 2.1929999999999866e-05}, {'time': 0.025757375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:46.924" endtime="20201112 12:43:46.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:46.970" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:46.936" endtime="20201112 12:43:46.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.982" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 12:43:46.979" endtime="20201112 12:43:46.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.988" level="INFO">VALUE: [2.1929999999999866e-05, 2.193099999999934e-05, 2.187500000000106e-05, 2.2944000000000436e-05, 2.193099999999934e-05, 2.2944000000000436e-05, 2.243099999999984e-05, 2.244499999999941e-05, 2.193099999999934e-05, 2.2958000000000006e-05, 2.245899999999898e-05, 2.2944000000000436e-05, 2.2929999999997397e-05, 2.243100000000331e-05, 2.243099999999984e-05, 2.195900000000195e-05, 2.1929999999999866e-05, 2.243099999999984e-05, 2.191699999999977e-05, 2.2471999999999076e-05, 2.2430000000000366e-05, 2.1943999999999436e-05, 2.2014000000000755e-05, 2.238900000000113e-05, 2.2499999999998216e-05, 2.1929999999999866e-05, 2.290299999999773e-05, 2.2472000000002545e-05, 2.244499999999941e-05, 2.2443999999999936e-05, 2.1916000000000296e-05, 2.188900000000063e-05, 2.244499999999941e-05, 2.2971999999999576e-05, 2.1929999999999866e-05, 2.193099999999934e-05, 2.2471999999999076e-05, 2.2443999999999936e-05, 2.244500000000288e-05, 2.243100000000331e-05, 2.1944000000002906e-05, 2.244499999999941e-05, 2.245899999999898e-05, 2.245899999999898e-05, 2.2471999999999076e-05, 2.241700000000027e-05, 2.244500000000288e-05, 2.237500000000156e-05, 2.2457999999999506e-05, 2.2430000000000366e-05]</msg>
<status status="PASS" starttime="20201112 12:43:46.984" endtime="20201112 12:43:46.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.972" endtime="20201112 12:43:46.991"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.998" endtime="20201112 12:43:47.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:47.007" endtime="20201112 12:43:47.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.002" endtime="20201112 12:43:47.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.993" endtime="20201112 12:43:47.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.452" endtime="20201112 12:43:47.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.451" endtime="20201112 12:43:47.034"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.058" endtime="20201112 12:43:47.078"></status>
</kw>
<msg timestamp="20201112 12:43:47.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:47.055" endtime="20201112 12:43:47.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:47.082" endtime="20201112 12:43:47.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.088" endtime="20201112 12:43:47.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.047" endtime="20201112 12:43:47.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.041" endtime="20201112 12:43:47.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.114" endtime="20201112 12:43:47.485"></status>
</kw>
<msg timestamp="20201112 12:43:47.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044807458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044840556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:47.110" endtime="20201112 12:43:47.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044807458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044840556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:47.495" endtime="20201112 12:43:47.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.515" endtime="20201112 12:43:47.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.102" endtime="20201112 12:43:47.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.097" endtime="20201112 12:43:47.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:47.534" level="INFO">${RESULT} = [{'time': 0.044840556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.30979999999953e-05, 'source_diff': 3.30979999999953e-05}, {'time': 0.044887625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:47.524" endtime="20201112 12:43:47.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:47.567" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:47.536" endtime="20201112 12:43:47.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.580" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 12:43:47.576" endtime="20201112 12:43:47.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.585" level="INFO">VALUE: [3.30979999999953e-05, 3.29579999999996e-05, 3.3124999999994964e-05, 3.276400000000457e-05, 3.29449999999995e-05, 3.318000000000071e-05, 3.344400000000053e-05, 3.322199999999942e-05, 3.311100000000233e-05, 3.351399999999838e-05, 3.359700000000326e-05, 3.31250000000019e-05, 3.34580000000001e-05, 3.2846999999995574e-05, 3.29579999999996e-05, 3.363900000000197e-05, 3.313900000000147e-05, 3.29579999999996e-05, 3.355600000000403e-05, 3.322199999999942e-05, 3.334700000000301e-05, 3.302799999999745e-05, 3.29579999999996e-05, 3.297199999999917e-05, 3.348599999999924e-05, 3.283400000000242e-05, 3.299999999999831e-05, 3.293099999999993e-05, 3.308400000000267e-05, 3.345899999999957e-05, 3.331999999999641e-05, 3.315199999999463e-05, 3.349999999999881e-05, 3.369500000000025e-05, 3.369400000000078e-05, 3.274999999999806e-05, 3.373599999999949e-05, 3.29579999999996e-05, 3.284700000000251e-05, 3.288900000000122e-05, 3.3582999999996754e-05, 3.332000000000335e-05, 3.3138999999994534e-05, 3.35700000000036e-05, 3.284700000000251e-05, 3.330599999999684e-05, 3.348599999999924e-05, 3.302799999999745e-05, 3.351399999999838e-05, 3.3374999999995214e-05]</msg>
<status status="PASS" starttime="20201112 12:43:47.582" endtime="20201112 12:43:47.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.569" endtime="20201112 12:43:47.589"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.596" endtime="20201112 12:43:47.598"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:47.604" endtime="20201112 12:43:47.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.600" endtime="20201112 12:43:47.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.591" endtime="20201112 12:43:47.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.036" endtime="20201112 12:43:47.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.035" endtime="20201112 12:43:47.631"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.656" endtime="20201112 12:43:47.676"></status>
</kw>
<msg timestamp="20201112 12:43:47.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:47.652" endtime="20201112 12:43:47.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:47.680" endtime="20201112 12:43:47.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.686" endtime="20201112 12:43:47.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.644" endtime="20201112 12:43:47.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.638" endtime="20201112 12:43:47.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.712" endtime="20201112 12:43:48.081"></status>
</kw>
<msg timestamp="20201112 12:43:48.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044689069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044723264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:47.708" endtime="20201112 12:43:48.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044689069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044723264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:48.092" endtime="20201112 12:43:48.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.112" endtime="20201112 12:43:48.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.700" endtime="20201112 12:43:48.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.695" endtime="20201112 12:43:48.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:48.131" level="INFO">${RESULT} = [{'time': 0.044723264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.419500000000075e-05, 'source_diff': 3.419500000000075e-05}, {'time': 0.044760333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:48.121" endtime="20201112 12:43:48.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:48.163" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:48.133" endtime="20201112 12:43:48.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.175" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 12:43:48.173" endtime="20201112 12:43:48.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.181" level="INFO">VALUE: [3.419500000000075e-05, 3.438900000000272e-05, 3.3888999999995284e-05, 3.458400000000417e-05, 3.379200000000471e-05, 3.387500000000265e-05, 3.41250000000029e-05, 3.370899999999982e-05, 3.4708999999993884e-05, 3.373699999999896e-05, 3.379200000000471e-05, 3.433400000000392e-05, 3.399999999999931e-05, 3.374999999999906e-05, 3.4332999999997504e-05, 3.420799999999391e-05, 3.3790999999998295e-05, 3.398599999999974e-05, 3.463900000000297e-05, 3.441599999999545e-05, 3.388900000000222e-05, 3.400000000000625e-05, 3.454199999999852e-05, 3.434700000000401e-05, 3.4624999999996464e-05, 3.419399999999434e-05, 3.450000000000675e-05, 3.455599999999809e-05, 3.404199999999802e-05, 3.4416999999994924e-05, 3.420800000000085e-05, 3.4445000000001e-05, 3.432000000000435e-05, 3.376400000000557e-05, 3.40700000000041e-05, 3.441700000000186e-05, 3.4374999999996214e-05, 3.400000000000625e-05, 3.415300000000204e-05, 3.4374999999996214e-05, 3.44580000000011e-05, 3.374999999999906e-05, 3.468000000000221e-05, 3.4568999999998185e-05, 3.4540999999999045e-05, 3.391599999999495e-05, 3.420800000000085e-05, 3.376399999999863e-05, 3.470800000000135e-05, 3.4388999999995784e-05]</msg>
<status status="PASS" starttime="20201112 12:43:48.178" endtime="20201112 12:43:48.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.165" endtime="20201112 12:43:48.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.197" endtime="20201112 12:43:48.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:48.206" endtime="20201112 12:43:48.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.201" endtime="20201112 12:43:48.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.192" endtime="20201112 12:43:48.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.634" endtime="20201112 12:43:48.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.632" endtime="20201112 12:43:48.233"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.258" endtime="20201112 12:43:48.279"></status>
</kw>
<msg timestamp="20201112 12:43:48.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:48.253" endtime="20201112 12:43:48.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:48.282" endtime="20201112 12:43:48.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.289" endtime="20201112 12:43:48.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.246" endtime="20201112 12:43:48.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.239" endtime="20201112 12:43:48.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.314" endtime="20201112 12:43:48.685"></status>
</kw>
<msg timestamp="20201112 12:43:48.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046283403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046318125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:48.311" endtime="20201112 12:43:48.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046283403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046318125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:48.695" endtime="20201112 12:43:48.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.715" endtime="20201112 12:43:48.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.303" endtime="20201112 12:43:48.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.298" endtime="20201112 12:43:48.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:48.733" level="INFO">${RESULT} = [{'time': 0.046318125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.472200000000092e-05, 'source_diff': 3.472200000000092e-05}, {'time': 0.046365125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:48.724" endtime="20201112 12:43:48.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:48.766" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:48.736" endtime="20201112 12:43:48.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.778" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 12:43:48.776" endtime="20201112 12:43:48.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.784" level="INFO">VALUE: [3.472200000000092e-05, 3.5374999999997214e-05, 3.4888999999996284e-05, 3.4832999999998004e-05, 3.572200000000192e-05, 3.5332999999998504e-05, 3.5166999999995674e-05, 3.51250000000039e-05, 3.531999999999841e-05, 3.525000000000056e-05, 3.5124999999996964e-05, 3.486199999999662e-05, 3.556999999999866e-05, 3.475000000000006e-05, 3.534799999999755e-05, 3.550000000000081e-05, 3.573599999999455e-05, 3.4776999999999725e-05, 3.513900000000347e-05, 3.4860999999997144e-05, 3.51659999999962e-05, 3.5166999999995674e-05, 3.4846999999997574e-05, 3.5096999999997824e-05, 3.5082999999998254e-05, 3.5304999999999365e-05, 3.487500000000365e-05, 3.56250000000044e-05, 3.550000000000081e-05, 3.5416999999995924e-05, 3.5374999999997214e-05, 3.568100000000268e-05, 3.572199999999498e-05, 3.480599999999834e-05, 3.491700000000236e-05, 3.4916999999995424e-05, 3.5541000000000045e-05, 3.5638999999997034e-05, 3.558400000000517e-05, 3.551400000000038e-05, 3.554199999999952e-05, 3.473699999999996e-05, 3.5445000000002e-05, 3.493100000000193e-05, 3.5445000000002e-05, 3.525000000000056e-05, 3.491600000000289e-05, 3.5624999999997464e-05, 3.5290999999999795e-05, 3.4804999999998865e-05]</msg>
<status status="PASS" starttime="20201112 12:43:48.780" endtime="20201112 12:43:48.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.768" endtime="20201112 12:43:48.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.794" endtime="20201112 12:43:48.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:48.805" endtime="20201112 12:43:48.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.800" endtime="20201112 12:43:48.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.789" endtime="20201112 12:43:48.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.235" endtime="20201112 12:43:48.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.234" endtime="20201112 12:43:48.831"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.856" endtime="20201112 12:43:48.876"></status>
</kw>
<msg timestamp="20201112 12:43:48.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:48.852" endtime="20201112 12:43:48.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:48.880" endtime="20201112 12:43:48.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.886" endtime="20201112 12:43:48.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.844" endtime="20201112 12:43:48.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.838" endtime="20201112 12:43:48.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.912" endtime="20201112 12:43:49.284"></status>
</kw>
<msg timestamp="20201112 12:43:49.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0450505, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045087, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201112 12:43:48.908" endtime="20201112 12:43:49.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0450505, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045087, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201112 12:43:49.294" endtime="20201112 12:43:49.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.314" endtime="20201112 12:43:49.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.900" endtime="20201112 12:43:49.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.895" endtime="20201112 12:43:49.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:49.333" level="INFO">${RESULT} = [{'time': 0.045087, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.650000000000181e-05, 'source_diff': 3.650000000000181e-05}, {'time': 0.045129014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:43:49.323" endtime="20201112 12:43:49.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:49.365" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:49.335" endtime="20201112 12:43:49.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.377" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 12:43:49.375" endtime="20201112 12:43:49.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.383" level="INFO">VALUE: [3.650000000000181e-05, 3.601400000000088e-05, 3.5916999999996424e-05, 3.65979999999988e-05, 3.597200000000217e-05, 3.6666999999997174e-05, 3.586100000000508e-05, 3.605599999999959e-05, 3.5874999999997714e-05, 3.66659999999977e-05, 3.6430999999996494e-05, 3.601400000000088e-05, 3.656999999999966e-05, 3.629200000000027e-05, 3.633399999999898e-05, 3.575000000000106e-05, 3.5846999999998574e-05, 3.570800000000235e-05, 3.651399999999444e-05, 3.6596999999999325e-05, 3.6027000000000975e-05, 3.5846999999998574e-05, 3.6041000000000545e-05, 3.641599999999745e-05, 3.651400000000138e-05, 3.6374999999998214e-05, 3.6166999999996674e-05, 3.647200000000267e-05, 3.595799999999566e-05, 3.6332999999999505e-05, 3.6096999999998824e-05, 3.606999999999916e-05, 3.6638999999998034e-05, 3.5860999999998144e-05, 3.590300000000379e-05, 3.6208999999995384e-05, 3.61250000000049e-05, 3.5874999999997714e-05, 3.605599999999959e-05, 3.613799999999806e-05, 3.641700000000386e-05, 3.626400000000113e-05, 3.616700000000361e-05, 3.6541000000001045e-05, 3.644399999999659e-05, 3.640199999999788e-05, 3.6541000000001045e-05, 3.6388999999997784e-05, 3.6541000000001045e-05, 3.638900000000472e-05]</msg>
<status status="PASS" starttime="20201112 12:43:49.379" endtime="20201112 12:43:49.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.367" endtime="20201112 12:43:49.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.393" endtime="20201112 12:43:49.396"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:49.402" endtime="20201112 12:43:49.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.397" endtime="20201112 12:43:49.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.388" endtime="20201112 12:43:49.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.833" endtime="20201112 12:43:49.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.832" endtime="20201112 12:43:49.433"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.457" endtime="20201112 12:43:49.478"></status>
</kw>
<msg timestamp="20201112 12:43:49.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:49.453" endtime="20201112 12:43:49.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:49.481" endtime="20201112 12:43:49.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.488" endtime="20201112 12:43:49.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.445" endtime="20201112 12:43:49.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.439" endtime="20201112 12:43:49.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.513" endtime="20201112 12:43:49.841"></status>
</kw>
<msg timestamp="20201112 12:43:49.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045023486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045060833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:49.509" endtime="20201112 12:43:49.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045023486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045060833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:49.845" endtime="20201112 12:43:49.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.854" endtime="20201112 12:43:49.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.502" endtime="20201112 12:43:49.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.497" endtime="20201112 12:43:49.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:49.863" level="INFO">${RESULT} = [{'time': 0.045060833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7347000000000075e-05, 'source_diff': 3.7347000000000075e-05}, {'time': 0.045101861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:49.858" endtime="20201112 12:43:49.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:49.877" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:49.864" endtime="20201112 12:43:49.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.882" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 12:43:49.881" endtime="20201112 12:43:49.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.885" level="INFO">VALUE: [3.7347000000000075e-05, 3.7319000000000935e-05, 3.766700000000511e-05, 3.745799999999716e-05, 3.72780000000017e-05, 3.752799999999501e-05, 3.726399999999519e-05, 3.7402999999998354e-05, 3.6902999999997854e-05, 3.752800000000195e-05, 3.747200000000367e-05, 3.715300000000504e-05, 3.7277000000002225e-05, 3.723599999999605e-05, 3.7486999999995774e-05, 3.707000000000016e-05, 3.7666999999998174e-05, 3.751400000000238e-05, 3.708399999999973e-05, 3.69580000000036e-05, 3.7069000000000685e-05, 3.691700000000436e-05, 3.6888999999998284e-05, 3.7610999999999895e-05, 3.7096999999999825e-05, 3.700000000000231e-05, 3.691599999999795e-05, 3.693100000000393e-05, 3.6874999999998714e-05, 3.7374999999999214e-05, 3.738900000000572e-05, 3.752800000000195e-05, 3.7138999999998534e-05, 3.7652999999998604e-05, 3.751399999999544e-05, 3.7138999999998534e-05, 3.755600000000109e-05, 3.722300000000289e-05, 3.7124999999998964e-05, 3.679199999999383e-05, 3.750000000000281e-05, 3.733399999999998e-05, 3.7194999999996814e-05, 3.6874999999998714e-05, 3.7347000000000075e-05, 3.6776999999994786e-05, 3.674999999999512e-05, 3.751400000000238e-05, 3.772199999999698e-05, 3.724999999999562e-05]</msg>
<status status="PASS" starttime="20201112 12:43:49.883" endtime="20201112 12:43:49.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.878" endtime="20201112 12:43:49.887"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.890" endtime="20201112 12:43:49.891"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:49.894" endtime="20201112 12:43:49.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.892" endtime="20201112 12:43:49.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.887" endtime="20201112 12:43:49.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.435" endtime="20201112 12:43:49.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.433" endtime="20201112 12:43:49.915"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.927" endtime="20201112 12:43:49.943"></status>
</kw>
<msg timestamp="20201112 12:43:49.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:49.926" endtime="20201112 12:43:49.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:49.945" endtime="20201112 12:43:49.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.948" endtime="20201112 12:43:49.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.922" endtime="20201112 12:43:49.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.919" endtime="20201112 12:43:49.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.960" endtime="20201112 12:43:50.285"></status>
</kw>
<msg timestamp="20201112 12:43:50.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026284194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026322611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:49.958" endtime="20201112 12:43:50.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:50.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026284194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026322611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:50.295" endtime="20201112 12:43:50.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.315" endtime="20201112 12:43:50.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.955" endtime="20201112 12:43:50.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.952" endtime="20201112 12:43:50.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:50.334" level="INFO">${RESULT} = [{'time': 0.026322611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8416999999998924e-05, 'source_diff': 3.8416999999998924e-05}, {'time': 0.026364625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:50.324" endtime="20201112 12:43:50.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:50.366" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:50.336" endtime="20201112 12:43:50.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:50.378" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 12:43:50.376" endtime="20201112 12:43:50.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:50.384" level="INFO">VALUE: [3.8416999999998924e-05, 3.82919999999988e-05, 3.8430999999998494e-05, 3.845799999999816e-05, 3.831999999999794e-05, 3.830600000000184e-05, 3.8416999999998924e-05, 3.80980000000003e-05, 3.779200000000177e-05, 3.8431000000001964e-05, 3.7818999999997965e-05, 3.833400000000098e-05, 3.8263000000000186e-05, 3.827799999999923e-05, 3.84720000000012e-05, 3.844399999999859e-05, 3.8554999999999146e-05, 3.8611000000000895e-05, 3.8138999999999534e-05, 3.799999999999984e-05, 3.872200000000145e-05, 3.795799999999766e-05, 3.84720000000012e-05, 3.8083000000001255e-05, 3.795799999999766e-05, 3.8361000000000645e-05, 3.780600000000134e-05, 3.850000000000034e-05, 3.776399999999916e-05, 3.8347000000001075e-05, 3.805600000000159e-05, 3.79720000000007e-05, 3.85980000000008e-05, 3.848700000000024e-05, 3.855599999999862e-05, 3.8445000000001534e-05, 3.8666999999999174e-05, 3.79720000000007e-05, 3.7847000000000575e-05, 3.8026999999999506e-05, 3.8541000000003045e-05, 3.7903000000002324e-05, 3.8403000000002824e-05, 3.841599999999945e-05, 3.792999999999852e-05, 3.798600000000027e-05, 3.845799999999816e-05, 3.7805000000001865e-05, 3.8639000000000034e-05, 3.8445000000001534e-05]</msg>
<status status="PASS" starttime="20201112 12:43:50.381" endtime="20201112 12:43:50.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.368" endtime="20201112 12:43:50.387"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.394" endtime="20201112 12:43:50.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:50.403" endtime="20201112 12:43:50.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.398" endtime="20201112 12:43:50.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.389" endtime="20201112 12:43:50.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.916" endtime="20201112 12:43:50.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.916" endtime="20201112 12:43:50.430"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.454" endtime="20201112 12:43:50.475"></status>
</kw>
<msg timestamp="20201112 12:43:50.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:50.451" endtime="20201112 12:43:50.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:50.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:50.479" endtime="20201112 12:43:50.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.485" endtime="20201112 12:43:50.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.443" endtime="20201112 12:43:50.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.437" endtime="20201112 12:43:50.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.513" endtime="20201112 12:43:50.881"></status>
</kw>
<msg timestamp="20201112 12:43:50.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0454125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045451514, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:50.509" endtime="20201112 12:43:50.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:50.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0454125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045451514, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:50.891" endtime="20201112 12:43:50.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.912" endtime="20201112 12:43:50.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.501" endtime="20201112 12:43:50.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.496" endtime="20201112 12:43:50.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:50.930" level="INFO">${RESULT} = [{'time': 0.045451514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.901399999999694e-05, 'source_diff': 3.901399999999694e-05}, {'time': 0.0455055, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:50.920" endtime="20201112 12:43:50.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:50.963" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:50.932" endtime="20201112 12:43:50.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:50.974" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 12:43:50.972" endtime="20201112 12:43:50.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:50.980" level="INFO">VALUE: [3.901399999999694e-05, 3.8818999999995496e-05, 3.9611000000001895e-05, 3.926399999999719e-05, 3.951400000000438e-05, 3.8916999999999424e-05, 3.922200000000542e-05, 3.8958999999998134e-05, 3.9458999999998634e-05, 3.955599999999615e-05, 3.8958999999998134e-05, 3.936200000000112e-05, 3.904199999999608e-05, 3.961200000000137e-05, 3.9277000000004225e-05, 3.9111000000001395e-05, 3.919399999999934e-05, 3.9639000000001035e-05, 3.875000000000406e-05, 3.8832999999995066e-05, 3.9416999999999924e-05, 3.8902999999999854e-05, 3.972200000000592e-05, 3.904199999999608e-05, 3.920799999999891e-05, 3.8889000000000284e-05, 3.9347000000002075e-05, 3.9430999999999494e-05, 3.929199999999633e-05, 3.9375000000001215e-05, 3.932000000000241e-05, 3.905600000000259e-05, 3.8916999999999424e-05, 3.951399999999744e-05, 3.9166999999999674e-05, 3.922300000000489e-05, 3.8847000000001575e-05, 3.950000000000481e-05, 3.940200000000088e-05, 3.894399999999909e-05, 3.972199999999898e-05, 3.874999999999712e-05, 3.897199999999823e-05, 3.970799999999941e-05, 3.951399999999744e-05, 3.8889000000000284e-05, 3.941600000000045e-05, 3.926399999999719e-05, 3.9305000000003365e-05, 3.954200000000352e-05]</msg>
<status status="PASS" starttime="20201112 12:43:50.977" endtime="20201112 12:43:50.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.965" endtime="20201112 12:43:50.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.990" endtime="20201112 12:43:50.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:50.999" endtime="20201112 12:43:51.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.995" endtime="20201112 12:43:51.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.985" endtime="20201112 12:43:51.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.432" endtime="20201112 12:43:51.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.431" endtime="20201112 12:43:51.026"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.051" endtime="20201112 12:43:51.071"></status>
</kw>
<msg timestamp="20201112 12:43:51.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:51.047" endtime="20201112 12:43:51.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:51.075" endtime="20201112 12:43:51.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.082" endtime="20201112 12:43:51.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.039" endtime="20201112 12:43:51.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.033" endtime="20201112 12:43:51.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.109" endtime="20201112 12:43:51.478"></status>
</kw>
<msg timestamp="20201112 12:43:51.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045133306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045173583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:51.106" endtime="20201112 12:43:51.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045133306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045173583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:51.488" endtime="20201112 12:43:51.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.508" endtime="20201112 12:43:51.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.096" endtime="20201112 12:43:51.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.091" endtime="20201112 12:43:51.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:51.527" level="INFO">${RESULT} = [{'time': 0.045173583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0277000000005225e-05, 'source_diff': 4.0277000000005225e-05}, {'time': 0.045228597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:51.517" endtime="20201112 12:43:51.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:51.560" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:51.529" endtime="20201112 12:43:51.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.572" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 12:43:51.569" endtime="20201112 12:43:51.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.577" level="INFO">VALUE: [4.0277000000005225e-05, 4.0653000000001605e-05, 4.0597000000003325e-05, 3.9875000000001715e-05, 4.031999999999647e-05, 3.973599999999855e-05, 3.979200000000377e-05, 4.0332999999996566e-05, 4.0332999999996566e-05, 3.997199999999923e-05, 4.045800000000016e-05, 4.022199999999948e-05, 4.044400000000059e-05, 3.984799999999511e-05, 3.9944999999999564e-05, 3.9861000000002145e-05, 3.9917000000000424e-05, 4.0722999999999454e-05, 4.058399999999629e-05, 4.04859999999993e-05, 4.066599999999476e-05, 4.0096999999995886e-05, 4.0068999999996746e-05, 3.999999999999837e-05, 4.0582999999996816e-05, 4.041600000000145e-05, 4.0055000000004115e-05, 4.0624999999995526e-05, 4.024999999999862e-05, 4.033400000000298e-05, 4.0625000000002465e-05, 4.047199999999973e-05, 4.0667000000001174e-05, 4.073599999999955e-05, 4.055599999999715e-05, 4.001399999999794e-05, 3.982000000000291e-05, 3.981999999999597e-05, 4.0417000000000924e-05, 4.047300000000614e-05, 4.0458999999999634e-05, 3.9875000000001715e-05, 4.0153000000001104e-05, 4.0568999999997246e-05, 4.0138999999994596e-05, 4.0276999999998286e-05, 4.0291000000004795e-05, 4.0402999999994416e-05, 3.9846999999995636e-05, 4.0625000000002465e-05]</msg>
<status status="PASS" starttime="20201112 12:43:51.574" endtime="20201112 12:43:51.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.562" endtime="20201112 12:43:51.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.587" endtime="20201112 12:43:51.591"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:51.597" endtime="20201112 12:43:51.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.592" endtime="20201112 12:43:51.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.583" endtime="20201112 12:43:51.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.029" endtime="20201112 12:43:51.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.027" endtime="20201112 12:43:51.623"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.647" endtime="20201112 12:43:51.667"></status>
</kw>
<msg timestamp="20201112 12:43:51.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:51.644" endtime="20201112 12:43:51.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:51.671" endtime="20201112 12:43:51.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.678" endtime="20201112 12:43:51.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.636" endtime="20201112 12:43:51.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.630" endtime="20201112 12:43:51.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.703" endtime="20201112 12:43:52.067"></status>
</kw>
<msg timestamp="20201112 12:43:52.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044564806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044606417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:51.699" endtime="20201112 12:43:52.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044564806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044606417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:52.077" endtime="20201112 12:43:52.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.098" endtime="20201112 12:43:52.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.692" endtime="20201112 12:43:52.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.687" endtime="20201112 12:43:52.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:52.118" level="INFO">${RESULT} = [{'time': 0.044606417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1611000000003895e-05, 'source_diff': 4.1611000000003895e-05}, {'time': 0.044658417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:52.107" endtime="20201112 12:43:52.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:52.151" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:52.120" endtime="20201112 12:43:52.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.162" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 12:43:52.160" endtime="20201112 12:43:52.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.168" level="INFO">VALUE: [4.1611000000003895e-05, 4.0917000000001424e-05, 4.0972999999999704e-05, 4.099999999999937e-05, 4.0875000000002715e-05, 4.1026999999999036e-05, 4.14860000000003e-05, 4.1389000000002785e-05, 4.1638999999996096e-05, 4.124999999999962e-05, 4.170800000000141e-05, 4.1375000000003215e-05, 4.1097000000003825e-05, 4.1111000000003395e-05, 4.0931000000000994e-05, 4.154199999999858e-05, 4.105599999999765e-05, 4.126400000000613e-05, 4.102800000000545e-05, 4.0889000000002285e-05, 4.1624999999996526e-05, 4.1681000000001744e-05, 4.077799999999826e-05, 4.1403000000002355e-05, 4.126399999999919e-05, 4.0917000000001424e-05, 4.079199999999783e-05, 4.1625000000003465e-05, 4.0861000000003145e-05, 4.12780000000057e-05, 4.1611000000003895e-05, 4.130600000000484e-05, 4.1583000000004755e-05, 4.166599999999576e-05, 4.173600000000055e-05, 4.104199999999808e-05, 4.1180999999994305e-05, 4.122200000000048e-05, 4.0917000000001424e-05, 4.155599999999815e-05, 4.0889000000002285e-05, 4.129199999999833e-05, 4.1124999999996026e-05, 4.104200000000502e-05, 4.133400000000398e-05, 4.123600000000005e-05, 4.154199999999858e-05, 4.0917000000001424e-05, 4.152799999999901e-05, 4.14860000000003e-05]</msg>
<status status="PASS" starttime="20201112 12:43:52.165" endtime="20201112 12:43:52.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.153" endtime="20201112 12:43:52.172"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.179" endtime="20201112 12:43:52.181"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:52.187" endtime="20201112 12:43:52.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.183" endtime="20201112 12:43:52.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.174" endtime="20201112 12:43:52.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.625" endtime="20201112 12:43:52.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.624" endtime="20201112 12:43:52.214"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.238" endtime="20201112 12:43:52.259"></status>
</kw>
<msg timestamp="20201112 12:43:52.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:52.235" endtime="20201112 12:43:52.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:52.262" endtime="20201112 12:43:52.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.269" endtime="20201112 12:43:52.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.227" endtime="20201112 12:43:52.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.221" endtime="20201112 12:43:52.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.294" endtime="20201112 12:43:52.653"></status>
</kw>
<msg timestamp="20201112 12:43:52.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044631375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044673236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:52.290" endtime="20201112 12:43:52.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044631375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044673236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:52.664" endtime="20201112 12:43:52.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.684" endtime="20201112 12:43:52.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.283" endtime="20201112 12:43:52.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.278" endtime="20201112 12:43:52.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:52.702" level="INFO">${RESULT} = [{'time': 0.044673236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1860999999997206e-05, 'source_diff': 4.1860999999997206e-05}, {'time': 0.044725167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:52.693" endtime="20201112 12:43:52.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:52.735" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:52.705" endtime="20201112 12:43:52.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.747" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 12:43:52.744" endtime="20201112 12:43:52.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.753" level="INFO">VALUE: [4.1860999999997206e-05, 4.2445000000002064e-05, 4.225000000000062e-05, 4.24860000000013e-05, 4.231999999999847e-05, 4.229199999999933e-05, 4.272199999999504e-05, 4.2332999999998566e-05, 4.225000000000062e-05, 4.175000000000012e-05, 4.2097000000004825e-05, 4.2152999999996166e-05, 4.226400000000019e-05, 4.2431000000002494e-05, 4.2431000000002494e-05, 4.2346999999998136e-05, 4.2583000000005755e-05, 4.2638999999997096e-05, 4.256999999999872e-05, 4.1833000000005005e-05, 4.2181000000002244e-05, 4.1874999999996776e-05, 4.2639000000004035e-05, 4.2445000000002064e-05, 4.1875000000003715e-05, 4.19860000000008e-05, 4.204199999999908e-05, 4.254199999999958e-05, 4.2332999999998566e-05, 4.2181000000002244e-05, 4.2597000000005325e-05, 4.222200000000148e-05, 4.226400000000019e-05, 4.2583000000005755e-05, 4.241599999999651e-05, 4.2082999999998316e-05, 4.2096999999997886e-05, 4.1875000000003715e-05, 4.2360999999997706e-05, 4.1874999999996776e-05, 4.197200000000123e-05, 4.182000000000491e-05, 4.232000000000541e-05, 4.1959000000001134e-05, 4.2416999999995986e-05, 4.252800000000001e-05, 4.2375000000004215e-05, 4.1917000000002425e-05, 4.20980000000043e-05, 4.272200000000198e-05]</msg>
<status status="PASS" starttime="20201112 12:43:52.749" endtime="20201112 12:43:52.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.737" endtime="20201112 12:43:52.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.763" endtime="20201112 12:43:52.766"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:52.772" endtime="20201112 12:43:52.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.767" endtime="20201112 12:43:52.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.758" endtime="20201112 12:43:52.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.216" endtime="20201112 12:43:52.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.215" endtime="20201112 12:43:52.798"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.823" endtime="20201112 12:43:52.844"></status>
</kw>
<msg timestamp="20201112 12:43:52.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:52.819" endtime="20201112 12:43:52.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:52.847" endtime="20201112 12:43:52.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.854" endtime="20201112 12:43:52.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.811" endtime="20201112 12:43:52.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.805" endtime="20201112 12:43:52.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.879" endtime="20201112 12:43:53.241"></status>
</kw>
<msg timestamp="20201112 12:43:53.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044976889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045020556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:52.876" endtime="20201112 12:43:53.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044976889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045020556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:53.251" endtime="20201112 12:43:53.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.271" endtime="20201112 12:43:53.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.868" endtime="20201112 12:43:53.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.863" endtime="20201112 12:43:53.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:53.292" level="INFO">${RESULT} = [{'time': 0.045020556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3667000000004175e-05, 'source_diff': 4.3667000000004175e-05}, {'time': 0.045068556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:53.282" endtime="20201112 12:43:53.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:53.324" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:53.294" endtime="20201112 12:43:53.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.336" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 12:43:53.334" endtime="20201112 12:43:53.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.342" level="INFO">VALUE: [4.3667000000004175e-05, 4.3653000000004605e-05, 4.326300000000172e-05, 4.3596999999999386e-05, 4.3291000000000857e-05, 4.3596999999999386e-05, 4.327700000000129e-05, 4.317999999999683e-05, 4.3652999999997666e-05, 4.343000000000402e-05, 4.3111000000005395e-05, 4.345799999999622e-05, 4.3332999999999566e-05, 4.36939999999969e-05, 4.304200000000008e-05, 4.331999999999947e-05, 4.29860000000018e-05, 4.3153000000004105e-05, 4.333399999999904e-05, 4.275000000000112e-05, 4.2916999999996486e-05, 4.279199999999983e-05, 4.294399999999615e-05, 4.309799999999836e-05, 4.3459000000002634e-05, 4.363799999999862e-05, 4.3569000000000246e-05, 4.3346999999999136e-05, 4.3582999999999816e-05, 4.3124999999998026e-05, 4.347199999999579e-05, 4.3318999999999996e-05, 4.3610999999998956e-05, 4.372200000000298e-05, 4.3638999999998096e-05, 4.275000000000112e-05, 4.350000000000187e-05, 4.2902999999996916e-05, 4.347200000000273e-05, 4.3346999999999136e-05, 4.2916999999996486e-05, 4.358399999999929e-05, 4.3555000000000677e-05, 4.331999999999947e-05, 4.283399999999854e-05, 4.373600000000255e-05, 4.304200000000008e-05, 4.3695000000003315e-05, 4.3055000000000176e-05, 4.345799999999622e-05]</msg>
<status status="PASS" starttime="20201112 12:43:53.338" endtime="20201112 12:43:53.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.326" endtime="20201112 12:43:53.351"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.357" endtime="20201112 12:43:53.358"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:53.361" endtime="20201112 12:43:53.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.359" endtime="20201112 12:43:53.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.353" endtime="20201112 12:43:53.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.801" endtime="20201112 12:43:53.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.799" endtime="20201112 12:43:53.383"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.394" endtime="20201112 12:43:53.411"></status>
</kw>
<msg timestamp="20201112 12:43:53.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:53.392" endtime="20201112 12:43:53.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:53.413" endtime="20201112 12:43:53.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.415" endtime="20201112 12:43:53.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.388" endtime="20201112 12:43:53.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.386" endtime="20201112 12:43:53.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.427" endtime="20201112 12:43:53.766"></status>
</kw>
<msg timestamp="20201112 12:43:53.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025845306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025889458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:53.425" endtime="20201112 12:43:53.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025845306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025889458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:53.776" endtime="20201112 12:43:53.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.795" endtime="20201112 12:43:53.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.422" endtime="20201112 12:43:53.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.419" endtime="20201112 12:43:53.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:53.814" level="INFO">${RESULT} = [{'time': 0.025889458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.415200000000216e-05, 'source_diff': 4.415200000000216e-05}, {'time': 0.025945458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:53.805" endtime="20201112 12:43:53.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:53.846" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:53.817" endtime="20201112 12:43:53.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.857" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 12:43:53.855" endtime="20201112 12:43:53.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.863" level="INFO">VALUE: [4.415200000000216e-05, 4.4583000000000816e-05, 4.4319000000000996e-05, 4.4333000000000566e-05, 4.429100000000186e-05, 4.455499999999821e-05, 4.432000000000047e-05, 4.375000000000212e-05, 4.454200000000158e-05, 4.398599999999933e-05, 4.422200000000001e-05, 4.4583000000000816e-05, 4.4347000000000136e-05, 4.4666999999998236e-05, 4.4388999999998846e-05, 4.4445000000000595e-05, 4.3889000000001815e-05, 4.4110999999999456e-05, 4.411199999999893e-05, 4.3917000000000955e-05, 4.377699999999832e-05, 4.426399999999872e-05, 4.4083000000000316e-05, 4.4124999999999026e-05, 4.4333000000000566e-05, 4.445800000000069e-05, 4.4152999999998166e-05, 4.447199999999679e-05, 4.3917000000000955e-05, 4.39999999999989e-05, 4.4402999999998416e-05, 4.38060000000004e-05, 4.4333000000000566e-05, 4.445799999999722e-05, 4.3889000000001815e-05, 4.4167000000001205e-05, 4.433400000000004e-05, 4.4110999999999456e-05, 4.3860999999999206e-05, 4.384800000000258e-05, 4.433400000000004e-05, 4.379200000000083e-05, 4.4124999999999026e-05, 4.445800000000069e-05, 4.429100000000186e-05, 4.4639000000002566e-05, 4.472200000000051e-05, 4.374999999999865e-05, 4.445800000000069e-05, 4.405600000000065e-05]</msg>
<status status="PASS" starttime="20201112 12:43:53.860" endtime="20201112 12:43:53.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.848" endtime="20201112 12:43:53.866"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.873" endtime="20201112 12:43:53.876"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:53.881" endtime="20201112 12:43:53.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.877" endtime="20201112 12:43:53.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.868" endtime="20201112 12:43:53.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.384" endtime="20201112 12:43:53.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.383" endtime="20201112 12:43:53.908"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.933" endtime="20201112 12:43:53.953"></status>
</kw>
<msg timestamp="20201112 12:43:53.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:53.929" endtime="20201112 12:43:53.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:53.957" endtime="20201112 12:43:53.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.963" endtime="20201112 12:43:53.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.922" endtime="20201112 12:43:53.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.915" endtime="20201112 12:43:53.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.988" endtime="20201112 12:43:54.342"></status>
</kw>
<msg timestamp="20201112 12:43:54.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045238028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045283111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:53.984" endtime="20201112 12:43:54.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045238028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045283111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:54.352" endtime="20201112 12:43:54.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.372" endtime="20201112 12:43:54.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.977" endtime="20201112 12:43:54.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.972" endtime="20201112 12:43:54.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:54.395" level="INFO">${RESULT} = [{'time': 0.045283111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5083000000001316e-05, 'source_diff': 4.5083000000001316e-05}, {'time': 0.045339125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:54.385" endtime="20201112 12:43:54.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:54.427" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:54.397" endtime="20201112 12:43:54.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.439" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 12:43:54.437" endtime="20201112 12:43:54.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.445" level="INFO">VALUE: [4.5083000000001316e-05, 4.522199999999754e-05, 4.495799999999772e-05, 4.5194999999997876e-05, 4.529200000000233e-05, 4.476399999999575e-05, 4.53060000000019e-05, 4.554199999999564e-05, 4.4861000000000206e-05, 4.4916999999998486e-05, 4.515199999999969e-05, 4.5430999999998556e-05, 4.4847000000000636e-05, 4.4874999999999776e-05, 4.5069000000001747e-05, 4.550000000000387e-05, 4.5319000000001997e-05, 4.4819000000001497e-05, 4.4847000000000636e-05, 4.547200000000473e-05, 4.5361000000000706e-05, 4.524999999999668e-05, 4.5361000000000706e-05, 4.4847000000000636e-05, 4.572199999999804e-05, 4.526399999999625e-05, 4.525000000000362e-05, 4.5125000000000026e-05, 4.5736999999997086e-05, 4.559800000000086e-05, 4.5736999999997086e-05, 4.5430999999998556e-05, 4.54860000000043e-05, 4.479199999999489e-05, 4.547199999999779e-05, 4.5388999999999846e-05, 4.494400000000509e-05, 4.573599999999761e-05, 4.5111000000000456e-05, 4.533299999999463e-05, 4.541599999999951e-05, 4.479199999999489e-05, 4.4888999999999346e-05, 4.501400000000294e-05, 4.474999999999618e-05, 4.479200000000183e-05, 4.505600000000165e-05, 4.495799999999772e-05, 4.5138999999999596e-05, 4.4875000000006715e-05]</msg>
<status status="PASS" starttime="20201112 12:43:54.442" endtime="20201112 12:43:54.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.429" endtime="20201112 12:43:54.448"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.455" endtime="20201112 12:43:54.458"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:54.464" endtime="20201112 12:43:54.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.460" endtime="20201112 12:43:54.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.450" endtime="20201112 12:43:54.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.911" endtime="20201112 12:43:54.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.909" endtime="20201112 12:43:54.492"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.516" endtime="20201112 12:43:54.537"></status>
</kw>
<msg timestamp="20201112 12:43:54.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:54.513" endtime="20201112 12:43:54.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:54.541" endtime="20201112 12:43:54.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.547" endtime="20201112 12:43:54.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.505" endtime="20201112 12:43:54.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.499" endtime="20201112 12:43:54.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.572" endtime="20201112 12:43:54.932"></status>
</kw>
<msg timestamp="20201112 12:43:54.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045491694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045538194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:54.569" endtime="20201112 12:43:54.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045491694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045538194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:54.943" endtime="20201112 12:43:54.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.962" endtime="20201112 12:43:54.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.561" endtime="20201112 12:43:54.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.556" endtime="20201112 12:43:54.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:54.983" level="INFO">${RESULT} = [{'time': 0.045538194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.649999999999793e-05, 'source_diff': 4.649999999999793e-05}, {'time': 0.045591153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:54.973" endtime="20201112 12:43:54.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:55.015" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:54.985" endtime="20201112 12:43:55.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.027" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 12:43:55.024" endtime="20201112 12:43:55.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.033" level="INFO">VALUE: [4.649999999999793e-05, 4.6597000000002387e-05, 4.649999999999793e-05, 4.575000000000412e-05, 4.6375000000001276e-05, 4.604199999999614e-05, 4.584800000000111e-05, 4.613800000000112e-05, 4.615200000000069e-05, 4.5833000000002067e-05, 4.6153000000000166e-05, 4.6125000000001026e-05, 4.645799999999922e-05, 4.601400000000394e-05, 4.6403000000000416e-05, 4.5889000000000346e-05, 4.6111000000001456e-05, 4.6013999999997e-05, 4.657000000000272e-05, 4.605600000000265e-05, 4.5916999999999486e-05, 4.6667000000000236e-05, 4.673600000000555e-05, 4.5889000000000346e-05, 4.6708999999998946e-05, 4.605600000000265e-05, 4.591600000000001e-05, 4.6445000000006065e-05, 4.5986999999997336e-05, 4.648599999999836e-05, 4.6125000000001026e-05, 4.630499999999649e-05, 4.6639000000001096e-05, 4.648599999999836e-05, 4.6139000000000596e-05, 4.668000000000033e-05, 4.652799999999707e-05, 4.6333000000002567e-05, 4.602799999999657e-05, 4.6667000000000236e-05, 4.673599999999861e-05, 4.6639000000001096e-05, 4.6194999999998876e-05, 4.65139999999975e-05, 4.573599999999761e-05, 4.609799999999442e-05, 4.629200000000333e-05, 4.6667000000000236e-05, 4.624999999999768e-05, 4.6236999999997586e-05]</msg>
<status status="PASS" starttime="20201112 12:43:55.029" endtime="20201112 12:43:55.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.017" endtime="20201112 12:43:55.036"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.043" endtime="20201112 12:43:55.046"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:55.052" endtime="20201112 12:43:55.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.047" endtime="20201112 12:43:55.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.038" endtime="20201112 12:43:55.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.494" endtime="20201112 12:43:55.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.493" endtime="20201112 12:43:55.078"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.103" endtime="20201112 12:43:55.123"></status>
</kw>
<msg timestamp="20201112 12:43:55.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:55.099" endtime="20201112 12:43:55.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:55.126" endtime="20201112 12:43:55.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.133" endtime="20201112 12:43:55.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.091" endtime="20201112 12:43:55.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.085" endtime="20201112 12:43:55.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.158" endtime="20201112 12:43:55.517"></status>
</kw>
<msg timestamp="20201112 12:43:55.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044438528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044485264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:55.154" endtime="20201112 12:43:55.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044438528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044485264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:55.528" endtime="20201112 12:43:55.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.548" endtime="20201112 12:43:55.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.147" endtime="20201112 12:43:55.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.142" endtime="20201112 12:43:55.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:55.568" level="INFO">${RESULT} = [{'time': 0.044485264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.673599999999861e-05, 'source_diff': 4.673599999999861e-05}, {'time': 0.044534264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:55.559" endtime="20201112 12:43:55.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:55.601" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:55.571" endtime="20201112 12:43:55.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.612" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 12:43:55.610" endtime="20201112 12:43:55.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.618" level="INFO">VALUE: [4.673599999999861e-05, 4.674999999999818e-05, 4.7472999999999266e-05, 4.761099999999602e-05, 4.676400000000469e-05, 4.697199999999929e-05, 4.7139000000001596e-05, 4.763899999999516e-05, 4.738899999999491e-05, 4.754199999999764e-05, 4.726399999999825e-05, 4.766600000000176e-05, 4.754099999999817e-05, 4.724999999999868e-05, 4.679200000000383e-05, 4.697199999999929e-05, 4.755499999999774e-05, 4.670799999999947e-05, 4.759800000000286e-05, 4.7667000000001236e-05, 4.7375000000002276e-05, 4.6847000000002637e-05, 4.758399999999635e-05, 4.700000000000537e-05, 4.7458999999999696e-05, 4.6861000000002206e-05, 4.738899999999491e-05, 4.699999999999843e-05, 4.7111000000002456e-05, 4.7431000000000556e-05, 4.701299999999853e-05, 4.697199999999929e-05, 4.706900000000375e-05, 4.755500000000468e-05, 4.7223000000005955e-05, 4.6861000000002206e-05, 4.698599999999886e-05, 4.697199999999929e-05, 4.7681000000000806e-05, 4.729199999999739e-05, 4.748599999999936e-05, 4.688800000000187e-05, 4.7347000000003137e-05, 4.698599999999886e-05, 4.7153000000001166e-05, 4.679199999999689e-05, 4.726399999999825e-05, 4.7181000000000306e-05, 4.701300000000547e-05, 4.674999999999818e-05]</msg>
<status status="PASS" starttime="20201112 12:43:55.615" endtime="20201112 12:43:55.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.603" endtime="20201112 12:43:55.622"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.628" endtime="20201112 12:43:55.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:55.637" endtime="20201112 12:43:55.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.633" endtime="20201112 12:43:55.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.624" endtime="20201112 12:43:55.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.081" endtime="20201112 12:43:55.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.079" endtime="20201112 12:43:55.664"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.689" endtime="20201112 12:43:55.710"></status>
</kw>
<msg timestamp="20201112 12:43:55.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:55.685" endtime="20201112 12:43:55.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:55.714" endtime="20201112 12:43:55.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.720" endtime="20201112 12:43:55.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.677" endtime="20201112 12:43:55.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.671" endtime="20201112 12:43:55.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.745" endtime="20201112 12:43:56.107"></status>
</kw>
<msg timestamp="20201112 12:43:56.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045188583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045236889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:55.742" endtime="20201112 12:43:56.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045188583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045236889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:56.117" endtime="20201112 12:43:56.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.137" endtime="20201112 12:43:56.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.734" endtime="20201112 12:43:56.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.729" endtime="20201112 12:43:56.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:56.158" level="INFO">${RESULT} = [{'time': 0.045236889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.83060000000049e-05, 'source_diff': 4.83060000000049e-05}, {'time': 0.045289861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:56.148" endtime="20201112 12:43:56.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:56.190" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:56.160" endtime="20201112 12:43:56.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.202" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 12:43:56.199" endtime="20201112 12:43:56.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.208" level="INFO">VALUE: [4.83060000000049e-05, 4.781899999999756e-05, 4.795800000000072e-05, 4.8111000000003457e-05, 4.847200000000079e-05, 4.809700000000389e-05, 4.831899999999806e-05, 4.85139999999995e-05, 4.804199999999814e-05, 4.8681000000001806e-05, 4.7917000000001486e-05, 4.854199999999864e-05, 4.8013999999999e-05, 4.7959000000000196e-05, 4.8723000000000516e-05, 4.872200000000104e-05, 4.794400000000115e-05, 4.820800000000097e-05, 4.845800000000122e-05, 4.85269999999996e-05, 4.820800000000097e-05, 4.82219999999936e-05, 4.7875000000002776e-05, 4.798599999999986e-05, 4.7903000000001916e-05, 4.85139999999995e-05, 4.804200000000508e-05, 4.8013999999999e-05, 4.872200000000104e-05, 4.790200000000244e-05, 4.805600000000465e-05, 4.856899999999831e-05, 4.836200000000318e-05, 4.862499999999659e-05, 4.783299999999713e-05, 4.855599999999821e-05, 4.7917000000001486e-05, 4.840200000000294e-05, 4.818000000000183e-05, 4.823600000000011e-05, 4.781899999999756e-05, 4.783300000000407e-05, 4.8665999999995824e-05, 4.808299999999738e-05, 4.822200000000054e-05, 4.822200000000054e-05, 4.7903000000001916e-05, 4.811099999999652e-05, 4.8681000000001806e-05, 4.804200000000508e-05]</msg>
<status status="PASS" starttime="20201112 12:43:56.204" endtime="20201112 12:43:56.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.192" endtime="20201112 12:43:56.211"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.218" endtime="20201112 12:43:56.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:56.227" endtime="20201112 12:43:56.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.222" endtime="20201112 12:43:56.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.213" endtime="20201112 12:43:56.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.666" endtime="20201112 12:43:56.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.665" endtime="20201112 12:43:56.255"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.280" endtime="20201112 12:43:56.301"></status>
</kw>
<msg timestamp="20201112 12:43:56.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:56.276" endtime="20201112 12:43:56.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:56.304" endtime="20201112 12:43:56.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.311" endtime="20201112 12:43:56.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.268" endtime="20201112 12:43:56.317"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.262" endtime="20201112 12:43:56.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.336" endtime="20201112 12:43:56.696"></status>
</kw>
<msg timestamp="20201112 12:43:56.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046347097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046396139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:56.333" endtime="20201112 12:43:56.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046347097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046396139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:56.701" endtime="20201112 12:43:56.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.710" endtime="20201112 12:43:56.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.325" endtime="20201112 12:43:56.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.319" endtime="20201112 12:43:56.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:56.720" level="INFO">${RESULT} = [{'time': 0.046396139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.904200000000608e-05, 'source_diff': 4.904200000000608e-05}, {'time': 0.046449139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:56.716" endtime="20201112 12:43:56.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:56.734" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:56.721" endtime="20201112 12:43:56.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.740" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 12:43:56.738" endtime="20201112 12:43:56.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.742" level="INFO">VALUE: [4.904200000000608e-05, 4.8889000000003346e-05, 4.950000000000093e-05, 4.963899999999716e-05, 4.954100000000017e-05, 4.909799999999742e-05, 4.962499999999759e-05, 4.937499999999734e-05, 4.9403000000003416e-05, 4.91940000000024e-05, 4.958299999999888e-05, 4.881999999999803e-05, 4.898600000000086e-05, 4.945800000000222e-05, 4.934700000000514e-05, 4.96940000000029e-05, 4.944400000000265e-05, 4.883299999999813e-05, 4.898600000000086e-05, 4.929199999999939e-05, 4.91940000000024e-05, 4.955599999999921e-05, 4.8875000000003777e-05, 4.9445000000002126e-05, 4.952800000000007e-05, 4.945899999999476e-05, 4.8737000000000086e-05, 4.973600000000161e-05, 4.8903000000002916e-05, 4.887499999999684e-05, 4.933300000000557e-05, 4.961099999999802e-05, 4.966600000000376e-05, 4.894400000000215e-05, 4.943099999999562e-05, 4.909699999999795e-05, 4.894400000000215e-05, 4.9014e-05, 4.95140000000005e-05, 4.911099999999752e-05, 4.976399999999381e-05, 4.883300000000507e-05, 4.931999999999853e-05, 4.9709000000001946e-05, 4.962499999999759e-05, 4.927799999999982e-05, 4.950000000000093e-05, 4.897299999999383e-05, 4.937499999999734e-05, 4.96940000000029e-05]</msg>
<status status="PASS" starttime="20201112 12:43:56.741" endtime="20201112 12:43:56.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.735" endtime="20201112 12:43:56.744"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.747" endtime="20201112 12:43:56.749"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:56.751" endtime="20201112 12:43:56.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.749" endtime="20201112 12:43:56.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.745" endtime="20201112 12:43:56.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.257" endtime="20201112 12:43:56.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.256" endtime="20201112 12:43:56.773"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.784" endtime="20201112 12:43:56.801"></status>
</kw>
<msg timestamp="20201112 12:43:56.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:56.782" endtime="20201112 12:43:56.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:56.803" endtime="20201112 12:43:56.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.806" endtime="20201112 12:43:56.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.779" endtime="20201112 12:43:56.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.776" endtime="20201112 12:43:56.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.818" endtime="20201112 12:43:57.103"></status>
</kw>
<msg timestamp="20201112 12:43:57.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025481181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025531542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:56.816" endtime="20201112 12:43:57.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025481181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025531542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:57.108" endtime="20201112 12:43:57.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.117" endtime="20201112 12:43:57.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.813" endtime="20201112 12:43:57.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.810" endtime="20201112 12:43:57.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:57.126" level="INFO">${RESULT} = [{'time': 0.025531542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.036100000000224e-05, 'source_diff': 5.036100000000224e-05}, {'time': 0.025595556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:57.122" endtime="20201112 12:43:57.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:57.140" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:57.127" endtime="20201112 12:43:57.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.146" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 12:43:57.145" endtime="20201112 12:43:57.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.148" level="INFO">VALUE: [5.036100000000224e-05, 5.006999999999928e-05, 4.995799999999925e-05, 4.976299999999781e-05, 5.037499999999834e-05, 5.059699999999945e-05, 5.006899999999981e-05, 4.991600000000054e-05, 5.056900000000031e-05, 4.981899999999956e-05, 5.023599999999864e-05, 5.0708e-05, 5.038899999999791e-05, 5.033299999999963e-05, 4.981999999999903e-05, 5.05140000000015e-05, 5.074999999999871e-05, 4.979199999999989e-05, 5.026400000000125e-05, 4.98330000000026e-05, 4.994399999999968e-05, 4.980499999999999e-05, 5.015200000000122e-05, 5.069400000000043e-05, 5.020800000000297e-05, 5.031900000000006e-05, 5.005500000000024e-05, 5.066700000000077e-05, 5.041600000000104e-05, 5.027800000000082e-05, 4.994399999999968e-05, 5.055600000000021e-05, 5.018099999999984e-05, 5.018099999999984e-05, 5.045799999999975e-05, 5.008400000000232e-05, 5.048599999999889e-05, 5.0472999999998797e-05, 5.001399999999753e-05, 5.050000000000193e-05, 5.033400000000257e-05, 4.988900000000088e-05, 5.0665999999997824e-05, 5.006899999999981e-05, 5.055500000000074e-05, 5.059699999999945e-05, 5.013899999999766e-05, 5.030500000000049e-05, 5.075000000000218e-05, 5.045899999999923e-05]</msg>
<status status="PASS" starttime="20201112 12:43:57.147" endtime="20201112 12:43:57.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.141" endtime="20201112 12:43:57.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.153" endtime="20201112 12:43:57.155"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:57.157" endtime="20201112 12:43:57.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.155" endtime="20201112 12:43:57.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.151" endtime="20201112 12:43:57.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.774" endtime="20201112 12:43:57.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.773" endtime="20201112 12:43:57.179"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.190" endtime="20201112 12:43:57.207"></status>
</kw>
<msg timestamp="20201112 12:43:57.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:57.188" endtime="20201112 12:43:57.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:57.209" endtime="20201112 12:43:57.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.212" endtime="20201112 12:43:57.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.185" endtime="20201112 12:43:57.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.182" endtime="20201112 12:43:57.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.224" endtime="20201112 12:43:57.564"></status>
</kw>
<msg timestamp="20201112 12:43:57.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025660917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025711958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:57.222" endtime="20201112 12:43:57.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025660917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025711958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:57.574" endtime="20201112 12:43:57.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.594" endtime="20201112 12:43:57.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.219" endtime="20201112 12:43:57.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.216" endtime="20201112 12:43:57.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:57.614" level="INFO">${RESULT} = [{'time': 0.025711958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.104100000000167e-05, 'source_diff': 5.104100000000167e-05}, {'time': 0.025768958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:57.605" endtime="20201112 12:43:57.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:57.647" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:57.617" endtime="20201112 12:43:57.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.658" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 12:43:57.656" endtime="20201112 12:43:57.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.664" level="INFO">VALUE: [5.104100000000167e-05, 5.1416000000002043e-05, 5.162499999999959e-05, 5.104100000000167e-05, 5.08469999999997e-05, 5.145800000000075e-05, 5.161100000000002e-05, 5.166700000000177e-05, 5.138899999999891e-05, 5.148599999999989e-05, 5.11669999999978e-05, 5.113900000000213e-05, 5.122200000000007e-05, 5.15279999999986e-05, 5.141700000000152e-05, 5.149999999999946e-05, 5.130600000000096e-05, 5.087500000000231e-05, 5.145900000000023e-05, 5.172200000000057e-05, 5.136099999999977e-05, 5.138899999999891e-05, 5.097199999999982e-05, 5.137499999999934e-05, 5.087499999999884e-05, 5.080500000000099e-05, 5.084700000000317e-05, 5.088900000000188e-05, 5.168000000000186e-05, 5.112499999999909e-05, 5.122200000000007e-05, 5.113900000000213e-05, 5.126400000000225e-05, 5.130600000000096e-05, 5.13470000000002e-05, 5.080600000000046e-05, 5.115299999999823e-05, 5.091699999999755e-05, 5.087499999999884e-05, 5.154199999999817e-05, 5.080500000000099e-05, 5.137500000000281e-05, 5.102800000000157e-05, 5.076399999999828e-05, 5.15279999999986e-05, 5.107000000000028e-05, 5.106900000000081e-05, 5.154200000000164e-05, 5.154199999999817e-05, 5.145900000000023e-05]</msg>
<status status="PASS" starttime="20201112 12:43:57.661" endtime="20201112 12:43:57.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.649" endtime="20201112 12:43:57.667"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.674" endtime="20201112 12:43:57.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:57.683" endtime="20201112 12:43:57.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.679" endtime="20201112 12:43:57.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.669" endtime="20201112 12:43:57.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.180" endtime="20201112 12:43:57.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.179" endtime="20201112 12:43:57.710"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.734" endtime="20201112 12:43:57.755"></status>
</kw>
<msg timestamp="20201112 12:43:57.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:57.731" endtime="20201112 12:43:57.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:57.759" endtime="20201112 12:43:57.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.766" endtime="20201112 12:43:57.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.723" endtime="20201112 12:43:57.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.717" endtime="20201112 12:43:57.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.791" endtime="20201112 12:43:58.150"></status>
</kw>
<msg timestamp="20201112 12:43:58.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044562625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044614611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:57.787" endtime="20201112 12:43:58.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044562625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044614611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:58.161" endtime="20201112 12:43:58.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.181" endtime="20201112 12:43:58.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.779" endtime="20201112 12:43:58.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.774" endtime="20201112 12:43:58.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:58.201" level="INFO">${RESULT} = [{'time': 0.044614611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1985999999996924e-05, 'source_diff': 5.1985999999996924e-05}, {'time': 0.044668639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:58.191" endtime="20201112 12:43:58.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:58.233" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:58.203" endtime="20201112 12:43:58.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.245" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 12:43:58.243" endtime="20201112 12:43:58.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.251" level="INFO">VALUE: [5.1985999999996924e-05, 5.176400000000275e-05, 5.1929999999998644e-05, 5.251299999999709e-05, 5.1959000000004196e-05, 5.1999999999996493e-05, 5.2165999999999324e-05, 5.226400000000325e-05, 5.1973000000003766e-05, 5.262500000000059e-05, 5.2693999999998964e-05, 5.227799999999588e-05, 5.2263999999996313e-05, 5.204099999999573e-05, 5.205500000000224e-05, 5.179100000000242e-05, 5.229099999999598e-05, 5.272200000000504e-05, 5.2457999999998284e-05, 5.187499999999984e-05, 5.2485999999997424e-05, 5.2693999999998964e-05, 5.193099999999812e-05, 5.198600000000386e-05, 5.18340000000006e-05, 5.229199999999545e-05, 5.195800000000472e-05, 5.175000000000318e-05, 5.244499999999819e-05, 5.208400000000085e-05, 5.232000000000153e-05, 5.1957999999997784e-05, 5.2249999999996743e-05, 5.176400000000275e-05, 5.212500000000009e-05, 5.233300000000163e-05, 5.2707999999998534e-05, 5.21669999999988e-05, 5.211100000000052e-05, 5.229200000000239e-05, 5.2249999999996743e-05, 5.259700000000145e-05, 5.269499999999844e-05, 5.243099999999862e-05, 5.197299999999683e-05, 5.265299999999973e-05, 5.230600000000196e-05, 5.175000000000318e-05, 5.2473000000004266e-05, 5.261200000000049e-05]</msg>
<status status="PASS" starttime="20201112 12:43:58.248" endtime="20201112 12:43:58.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.235" endtime="20201112 12:43:58.254"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.261" endtime="20201112 12:43:58.264"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:58.270" endtime="20201112 12:43:58.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.266" endtime="20201112 12:43:58.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.256" endtime="20201112 12:43:58.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.712" endtime="20201112 12:43:58.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.711" endtime="20201112 12:43:58.298"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.323" endtime="20201112 12:43:58.345"></status>
</kw>
<msg timestamp="20201112 12:43:58.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:58.319" endtime="20201112 12:43:58.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:58.348" endtime="20201112 12:43:58.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.355" endtime="20201112 12:43:58.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.312" endtime="20201112 12:43:58.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.305" endtime="20201112 12:43:58.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.380" endtime="20201112 12:43:58.741"></status>
</kw>
<msg timestamp="20201112 12:43:58.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046504111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046557444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:58.376" endtime="20201112 12:43:58.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046504111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046557444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:58.751" endtime="20201112 12:43:58.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.771" endtime="20201112 12:43:58.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.369" endtime="20201112 12:43:58.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.364" endtime="20201112 12:43:58.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:58.794" level="INFO">${RESULT} = [{'time': 0.046557444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.333300000000263e-05, 'source_diff': 5.333300000000263e-05}, {'time': 0.046624389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:58.784" endtime="20201112 12:43:58.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:58.826" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:58.796" endtime="20201112 12:43:58.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.838" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 12:43:58.835" endtime="20201112 12:43:58.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.844" level="INFO">VALUE: [5.333300000000263e-05, 5.350000000000493e-05, 5.36670000000003e-05, 5.3473000000005266e-05, 5.362499999999465e-05, 5.35419999999967e-05, 5.359700000000245e-05, 5.273699999999715e-05, 5.3263999999997313e-05, 5.3166000000000324e-05, 5.318099999999937e-05, 5.3513999999997564e-05, 5.288900000000041e-05, 5.290299999999998e-05, 5.362500000000159e-05, 5.3221999999998604e-05, 5.357000000000278e-05, 5.363899999999422e-05, 5.291700000000649e-05, 5.2957999999998784e-05, 5.290299999999998e-05, 5.3223000000005016e-05, 5.288900000000041e-05, 5.3485999999998424e-05, 5.2749999999997244e-05, 5.283399999999466e-05, 5.358400000000235e-05, 5.361099999999508e-05, 5.2749999999997244e-05, 5.288900000000041e-05, 5.297200000000529e-05, 5.3443999999999714e-05, 5.304099999999673e-05, 5.3471999999998854e-05, 5.311100000000152e-05, 5.3513999999997564e-05, 5.327800000000382e-05, 5.3485999999998424e-05, 5.332000000000253e-05, 5.338900000000091e-05, 5.2999999999997494e-05, 5.288900000000041e-05, 5.309800000000142e-05, 5.3388000000001434e-05, 5.306999999999534e-05, 5.354099999999723e-05, 5.283300000000213e-05, 5.3221999999998604e-05, 5.287500000000084e-05, 5.288900000000041e-05]</msg>
<status status="PASS" starttime="20201112 12:43:58.840" endtime="20201112 12:43:58.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.828" endtime="20201112 12:43:58.853"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.859" endtime="20201112 12:43:58.862"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:58.868" endtime="20201112 12:43:58.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.864" endtime="20201112 12:43:58.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.854" endtime="20201112 12:43:58.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.300" endtime="20201112 12:43:58.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.299" endtime="20201112 12:43:58.895"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.920" endtime="20201112 12:43:58.940"></status>
</kw>
<msg timestamp="20201112 12:43:58.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:58.916" endtime="20201112 12:43:58.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:58.944" endtime="20201112 12:43:58.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.951" endtime="20201112 12:43:58.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.908" endtime="20201112 12:43:58.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.902" endtime="20201112 12:43:58.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.975" endtime="20201112 12:43:59.336"></status>
</kw>
<msg timestamp="20201112 12:43:59.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044808111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044862111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:58.972" endtime="20201112 12:43:59.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044808111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044862111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:59.346" endtime="20201112 12:43:59.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.366" endtime="20201112 12:43:59.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.964" endtime="20201112 12:43:59.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.959" endtime="20201112 12:43:59.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:59.387" level="INFO">${RESULT} = [{'time': 0.044862111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.400000000000543e-05, 'source_diff': 5.400000000000543e-05}, {'time': 0.044930111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:59.377" endtime="20201112 12:43:59.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:59.419" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:59.389" endtime="20201112 12:43:59.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.431" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 12:43:59.428" endtime="20201112 12:43:59.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.437" level="INFO">VALUE: [5.400000000000543e-05, 5.387500000000184e-05, 5.409699999999601e-05, 5.4013999999998064e-05, 5.405600000000371e-05, 5.409699999999601e-05, 5.413899999999472e-05, 5.411099999999558e-05, 5.4249999999998744e-05, 5.4527999999998134e-05, 5.469500000000044e-05, 5.462500000000259e-05, 5.465300000000173e-05, 5.4708000000000534e-05, 5.425000000000568e-05, 5.459699999999651e-05, 5.4458000000000284e-05, 5.430499999999755e-05, 5.4249999999998744e-05, 5.415300000000123e-05, 5.4749999999999244e-05, 5.405600000000371e-05, 5.441700000000105e-05, 5.408299999999644e-05, 5.433300000000363e-05, 5.45140000000055e-05, 5.413900000000166e-05, 5.462499999999565e-05, 5.432000000000353e-05, 5.409800000000242e-05, 5.3999999999998494e-05, 5.380499999999705e-05, 5.4416000000001574e-05, 5.413900000000166e-05, 5.412499999999515e-05, 5.4013999999998064e-05, 5.4458000000000284e-05, 5.4763999999998814e-05, 5.4235999999999174e-05, 5.43749999999954e-05, 5.43470000000032e-05, 5.4235999999999174e-05, 5.437500000000234e-05, 5.413900000000166e-05, 5.382000000000303e-05, 5.387500000000184e-05, 5.431999999999659e-05, 5.4485999999999424e-05, 5.3749999999998244e-05, 5.391700000000055e-05]</msg>
<status status="PASS" starttime="20201112 12:43:59.433" endtime="20201112 12:43:59.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.421" endtime="20201112 12:43:59.440"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.447" endtime="20201112 12:43:59.450"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:59.456" endtime="20201112 12:43:59.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.451" endtime="20201112 12:43:59.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.442" endtime="20201112 12:43:59.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.898" endtime="20201112 12:43:59.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.896" endtime="20201112 12:43:59.483"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.507" endtime="20201112 12:43:59.528"></status>
</kw>
<msg timestamp="20201112 12:43:59.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:59.504" endtime="20201112 12:43:59.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:59.532" endtime="20201112 12:43:59.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.539" endtime="20201112 12:43:59.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.496" endtime="20201112 12:43:59.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.490" endtime="20201112 12:43:59.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.564" endtime="20201112 12:43:59.935"></status>
</kw>
<msg timestamp="20201112 12:43:59.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045090431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045145931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:59.560" endtime="20201112 12:43:59.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045090431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045145931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:59.945" endtime="20201112 12:43:59.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.965" endtime="20201112 12:43:59.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.553" endtime="20201112 12:43:59.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.548" endtime="20201112 12:43:59.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:59.986" level="INFO">${RESULT} = [{'time': 0.045145931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5499999999999994e-05, 'source_diff': 5.5499999999999994e-05}, {'time': 0.045215, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:43:59.976" endtime="20201112 12:43:59.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:00.018" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:59.988" endtime="20201112 12:44:00.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.030" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 12:44:00.028" endtime="20201112 12:44:00.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.036" level="INFO">VALUE: [5.5499999999999994e-05, 5.515299999999529e-05, 5.5637999999996746e-05, 5.5722000000001104e-05, 5.563900000000316e-05, 5.563899999999622e-05, 5.50549999999983e-05, 5.5722000000001104e-05, 5.5513999999999564e-05, 5.4972000000000354e-05, 5.4735999999999674e-05, 5.509700000000395e-05, 5.530600000000496e-05, 5.5499999999999994e-05, 5.491700000000155e-05, 5.497299999999983e-05, 5.537500000000334e-05, 5.530600000000496e-05, 5.5027999999998634e-05, 5.568100000000187e-05, 5.5416000000002574e-05, 5.551300000000009e-05, 5.5236000000000174e-05, 5.5666000000002824e-05, 5.5194000000001464e-05, 5.547300000000033e-05, 5.518100000000137e-05, 5.512500000000309e-05, 5.5180000000001894e-05, 5.569500000000144e-05, 5.491700000000155e-05, 5.507000000000428e-05, 5.5513999999999564e-05, 5.545900000000076e-05, 5.4749999999999244e-05, 5.520900000000051e-05, 5.529099999999898e-05, 5.5416000000002574e-05, 5.5499999999999994e-05, 5.5249999999999744e-05, 5.5416000000002574e-05, 5.483300000000413e-05, 5.5013999999999064e-05, 5.554100000000617e-05, 5.5458000000001284e-05, 5.558299999999794e-05, 5.4958000000000784e-05, 5.508300000000438e-05, 5.5236000000000174e-05, 5.555600000000521e-05]</msg>
<status status="PASS" starttime="20201112 12:44:00.033" endtime="20201112 12:44:00.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.020" endtime="20201112 12:44:00.039"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.046" endtime="20201112 12:44:00.049"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:00.055" endtime="20201112 12:44:00.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.050" endtime="20201112 12:44:00.079"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.041" endtime="20201112 12:44:00.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.485" endtime="20201112 12:44:00.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.484" endtime="20201112 12:44:00.082"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.107" endtime="20201112 12:44:00.127"></status>
</kw>
<msg timestamp="20201112 12:44:00.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:00.103" endtime="20201112 12:44:00.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:00.131" endtime="20201112 12:44:00.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.138" endtime="20201112 12:44:00.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.095" endtime="20201112 12:44:00.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.089" endtime="20201112 12:44:00.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.163" endtime="20201112 12:44:00.535"></status>
</kw>
<msg timestamp="20201112 12:44:00.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044940625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044996778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:00.159" endtime="20201112 12:44:00.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044940625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044996778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:00.543" endtime="20201112 12:44:00.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.552" endtime="20201112 12:44:00.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.151" endtime="20201112 12:44:00.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.146" endtime="20201112 12:44:00.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:00.561" level="INFO">${RESULT} = [{'time': 0.044996778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.615300000000323e-05, 'source_diff': 5.615300000000323e-05}, {'time': 0.045058764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:00.557" endtime="20201112 12:44:00.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:00.575" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:00.562" endtime="20201112 12:44:00.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.581" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 12:44:00.579" endtime="20201112 12:44:00.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.583" level="INFO">VALUE: [5.615300000000323e-05, 5.641700000000305e-05, 5.6027999999999634e-05, 5.6041999999999204e-05, 5.6541999999999704e-05, 5.61670000000028e-05, 5.663899999999722e-05, 5.6513999999993625e-05, 5.618099999999543e-05, 5.5986000000000924e-05, 5.6637999999997746e-05, 5.6471999999994915e-05, 5.5750000000000244e-05, 5.6694000000002964e-05, 5.577699999999991e-05, 5.580499999999905e-05, 5.6499999999994055e-05, 5.6291999999999454e-05, 5.579200000000589e-05, 5.5986000000000924e-05, 5.641699999999611e-05, 5.6569999999998843e-05, 5.641699999999611e-05, 5.633399999999816e-05, 5.6000000000000494e-05, 5.613899999999672e-05, 5.606999999999834e-05, 5.6305999999999023e-05, 5.572300000000058e-05, 5.5901999999996566e-05, 5.611099999999758e-05, 5.5930000000002644e-05, 5.63749999999974e-05, 5.636100000000477e-05, 5.658299999999894e-05, 5.5929999999995705e-05, 5.6208000000002034e-05, 5.5944000000002214e-05, 5.608299999999844e-05, 5.606999999999834e-05, 5.6027999999999634e-05, 5.5763999999999814e-05, 5.608399999999791e-05, 5.6000000000000494e-05, 5.630499999999955e-05, 5.6680000000003394e-05, 5.630499999999955e-05, 5.609699999999801e-05, 5.631900000000606e-05, 5.6458000000002284e-05]</msg>
<status status="PASS" starttime="20201112 12:44:00.582" endtime="20201112 12:44:00.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.576" endtime="20201112 12:44:00.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.588" endtime="20201112 12:44:00.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:00.592" endtime="20201112 12:44:00.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.590" endtime="20201112 12:44:00.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.586" endtime="20201112 12:44:00.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.084" endtime="20201112 12:44:00.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.083" endtime="20201112 12:44:00.614"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.625" endtime="20201112 12:44:00.642"></status>
</kw>
<msg timestamp="20201112 12:44:00.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:00.623" endtime="20201112 12:44:00.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:00.644" endtime="20201112 12:44:00.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.647" endtime="20201112 12:44:00.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.620" endtime="20201112 12:44:00.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.617" endtime="20201112 12:44:00.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.658" endtime="20201112 12:44:00.946"></status>
</kw>
<msg timestamp="20201112 12:44:00.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025568931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025626056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:00.657" endtime="20201112 12:44:00.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025568931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025626056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:00.950" endtime="20201112 12:44:00.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.959" endtime="20201112 12:44:00.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.653" endtime="20201112 12:44:00.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.651" endtime="20201112 12:44:00.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:00.969" level="INFO">${RESULT} = [{'time': 0.025626056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.712500000000162e-05, 'source_diff': 5.712500000000162e-05}, {'time': 0.025685083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:00.965" endtime="20201112 12:44:00.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:00.983" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:00.970" endtime="20201112 12:44:00.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.989" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 12:44:00.988" endtime="20201112 12:44:00.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.992" level="INFO">VALUE: [5.712500000000162e-05, 5.6764000000000814e-05, 5.684699999999876e-05, 5.730500000000055e-05, 5.7735999999999205e-05, 5.7306000000000024e-05, 5.688900000000094e-05, 5.7485999999998955e-05, 5.693099999999965e-05, 5.7542000000000704e-05, 5.690300000000051e-05, 5.6791999999999954e-05, 5.68610000000018e-05, 5.7292000000000454e-05, 5.7264000000001314e-05, 5.7263999999997844e-05, 5.770899999999954e-05, 5.7193999999999995e-05, 5.701299999999812e-05, 5.7680000000000925e-05, 5.708299999999944e-05, 5.7457999999999815e-05, 5.730500000000055e-05, 5.7721999999999635e-05, 5.6999999999998024e-05, 5.73619999999983e-05, 5.7513999999998094e-05, 5.7235999999998705e-05, 5.7250000000001744e-05, 5.770899999999954e-05, 5.734699999999926e-05, 5.7306000000000024e-05, 5.7292000000000454e-05, 5.7042000000000204e-05, 5.758400000000288e-05, 5.756900000000037e-05, 5.7528000000001134e-05, 5.68749999999979e-05, 5.6916000000000605e-05, 5.683300000000266e-05, 5.6749999999997774e-05, 5.762500000000212e-05, 5.6750000000001244e-05, 5.681899999999962e-05, 5.7292000000000454e-05, 5.684700000000223e-05, 5.683299999999919e-05, 5.7207999999999565e-05, 5.7236000000002174e-05, 5.7499999999998525e-05]</msg>
<status status="PASS" starttime="20201112 12:44:00.990" endtime="20201112 12:44:00.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.984" endtime="20201112 12:44:00.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.996" endtime="20201112 12:44:00.998"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:01.001" endtime="20201112 12:44:01.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.998" endtime="20201112 12:44:01.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.994" endtime="20201112 12:44:01.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.615" endtime="20201112 12:44:01.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.614" endtime="20201112 12:44:01.022"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.033" endtime="20201112 12:44:01.051"></status>
</kw>
<msg timestamp="20201112 12:44:01.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:01.032" endtime="20201112 12:44:01.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:01.053" endtime="20201112 12:44:01.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.056" endtime="20201112 12:44:01.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.028" endtime="20201112 12:44:01.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.025" endtime="20201112 12:44:01.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.068" endtime="20201112 12:44:01.354"></status>
</kw>
<msg timestamp="20201112 12:44:01.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025818069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025876056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:01.066" endtime="20201112 12:44:01.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025818069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025876056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:01.358" endtime="20201112 12:44:01.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.367" endtime="20201112 12:44:01.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.062" endtime="20201112 12:44:01.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.060" endtime="20201112 12:44:01.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:01.377" level="INFO">${RESULT} = [{'time': 0.025876056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.79870000000024e-05, 'source_diff': 5.79870000000024e-05}, {'time': 0.025940069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:44:01.372" endtime="20201112 12:44:01.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:01.391" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:01.378" endtime="20201112 12:44:01.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.397" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 12:44:01.396" endtime="20201112 12:44:01.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.400" level="INFO">VALUE: [5.79870000000024e-05, 5.779099999999801e-05, 5.8499999999999525e-05, 5.8415999999998636e-05, 5.829099999999851e-05, 5.812499999999915e-05, 5.779100000000148e-05, 5.8222000000000135e-05, 5.8541999999998234e-05, 5.866700000000183e-05, 5.812499999999915e-05, 5.7958000000000315e-05, 5.834700000000026e-05, 5.794500000000022e-05, 5.8165999999998386e-05, 5.8042000000001204e-05, 5.8013999999998594e-05, 5.7820000000000094e-05, 5.781899999999715e-05, 5.829099999999851e-05, 5.8179999999997956e-05, 5.843100000000115e-05, 5.865300000000226e-05, 5.8514000000002564e-05, 5.8513999999999095e-05, 5.791700000000108e-05, 5.836099999999983e-05, 5.781899999999715e-05, 5.834700000000026e-05, 5.7971999999999885e-05, 5.836099999999983e-05, 5.787500000000237e-05, 5.865299999999879e-05, 5.8500000000002994e-05, 5.866699999999836e-05, 5.8679999999998456e-05, 5.8666000000002355e-05, 5.830500000000155e-05, 5.862499999999965e-05, 5.813900000000219e-05, 5.791700000000108e-05, 5.830500000000155e-05, 5.7792000000000954e-05, 5.8722000000000635e-05, 5.8570000000000844e-05, 5.8527999999998664e-05, 5.8528000000002134e-05, 5.783400000000313e-05, 5.8306000000001024e-05, 5.865299999999879e-05]</msg>
<status status="PASS" starttime="20201112 12:44:01.398" endtime="20201112 12:44:01.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.392" endtime="20201112 12:44:01.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.405" endtime="20201112 12:44:01.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:01.409" endtime="20201112 12:44:01.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.407" endtime="20201112 12:44:01.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.402" endtime="20201112 12:44:01.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.023" endtime="20201112 12:44:01.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.023" endtime="20201112 12:44:01.430"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.442" endtime="20201112 12:44:01.462"></status>
</kw>
<msg timestamp="20201112 12:44:01.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:01.440" endtime="20201112 12:44:01.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:01.465" endtime="20201112 12:44:01.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.472" endtime="20201112 12:44:01.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.436" endtime="20201112 12:44:01.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.434" endtime="20201112 12:44:01.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.497" endtime="20201112 12:44:01.872"></status>
</kw>
<msg timestamp="20201112 12:44:01.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025762653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025821931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:01.494" endtime="20201112 12:44:01.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025762653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025821931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:01.882" endtime="20201112 12:44:01.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.902" endtime="20201112 12:44:01.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.486" endtime="20201112 12:44:01.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.481" endtime="20201112 12:44:01.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:01.922" level="INFO">${RESULT} = [{'time': 0.025821931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9277999999999414e-05, 'source_diff': 5.9277999999999414e-05}, {'time': 0.025893931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:01.913" endtime="20201112 12:44:01.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:01.955" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:01.925" endtime="20201112 12:44:01.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.967" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 12:44:01.964" endtime="20201112 12:44:01.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.973" level="INFO">VALUE: [5.9277999999999414e-05, 5.9333999999997694e-05, 5.959699999999804e-05, 5.908300000000144e-05, 5.9207999999998095e-05, 5.9514000000000095e-05, 5.904100000000273e-05, 5.931899999999865e-05, 5.9208000000001565e-05, 5.963900000000022e-05, 5.909700000000101e-05, 5.8764000000002814e-05, 5.919500000000147e-05, 5.909699999999754e-05, 5.920900000000104e-05, 5.9070000000001344e-05, 5.9305999999998554e-05, 5.941700000000258e-05, 5.9112000000000053e-05, 5.9736000000001205e-05, 5.934700000000126e-05, 5.8985999999996985e-05, 5.9541999999999234e-05, 5.904099999999926e-05, 5.9514000000000095e-05, 5.9305999999998554e-05, 5.96810000000024e-05, 5.9541999999999234e-05, 5.968099999999893e-05, 5.9555999999998804e-05, 5.947299999999739e-05, 5.9334000000001164e-05, 5.9028000000002634e-05, 5.96810000000024e-05, 5.9263999999999845e-05, 5.9583999999997944e-05, 5.9472000000001385e-05, 5.929099999999951e-05, 5.9250000000000275e-05, 5.9707999999998596e-05, 5.9429999999999206e-05, 5.8819999999997624e-05, 5.915299999999929e-05, 5.8777999999998914e-05, 5.8722000000000635e-05, 5.884699999999729e-05, 5.9457999999998346e-05, 5.9027999999999164e-05, 5.9236000000000705e-05, 5.9306000000002024e-05]</msg>
<status status="PASS" starttime="20201112 12:44:01.969" endtime="20201112 12:44:01.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.957" endtime="20201112 12:44:01.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.983" endtime="20201112 12:44:01.986"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:01.992" endtime="20201112 12:44:02.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.987" endtime="20201112 12:44:02.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.978" endtime="20201112 12:44:02.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.431" endtime="20201112 12:44:02.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.431" endtime="20201112 12:44:02.019"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.043" endtime="20201112 12:44:02.066"></status>
</kw>
<msg timestamp="20201112 12:44:02.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:02.040" endtime="20201112 12:44:02.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:02.069" endtime="20201112 12:44:02.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.076" endtime="20201112 12:44:02.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.032" endtime="20201112 12:44:02.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.026" endtime="20201112 12:44:02.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.101" endtime="20201112 12:44:02.461"></status>
</kw>
<msg timestamp="20201112 12:44:02.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044744111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044804361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:02.098" endtime="20201112 12:44:02.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044744111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044804361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:02.471" endtime="20201112 12:44:02.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.491" endtime="20201112 12:44:02.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.090" endtime="20201112 12:44:02.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.085" endtime="20201112 12:44:02.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:02.512" level="INFO">${RESULT} = [{'time': 0.044804361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0249999999997805e-05, 'source_diff': 6.0249999999997805e-05}, {'time': 0.044875431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:02.502" endtime="20201112 12:44:02.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:02.544" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:02.514" endtime="20201112 12:44:02.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.556" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 12:44:02.553" endtime="20201112 12:44:02.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.562" level="INFO">VALUE: [6.0249999999997805e-05, 6.0263999999997375e-05, 6.056899999999643e-05, 6.036100000000183e-05, 5.9749999999997305e-05, 6.0166000000000386e-05, 5.9763999999996875e-05, 5.9777999999996445e-05, 6.062500000000165e-05, 6.0236000000005174e-05, 6.066699999999342e-05, 6.0221999999998665e-05, 6.0582999999996e-05, 5.98750000000009e-05, 6.008300000000244e-05, 6.059700000000251e-05, 6.0263999999997375e-05, 5.980500000000305e-05, 6.065300000000079e-05, 5.9791999999996015e-05, 5.9749999999997305e-05, 6.062500000000165e-05, 6.0056000000002774e-05, 5.995899999999832e-05, 6.0485999999998485e-05, 6.063900000000122e-05, 6.0443999999999776e-05, 5.990300000000004e-05, 6.029100000000398e-05, 6.0416000000000636e-05, 6.029099999999704e-05, 6.009700000000201e-05, 6.030499999999661e-05, 5.9971999999998415e-05, 6.0569999999995905e-05, 6.0513999999997625e-05, 6.0000000000004494e-05, 6.0208000000006034e-05, 5.991699999999961e-05, 6.0056000000002774e-05, 6.011100000000158e-05, 6.045899999999882e-05, 5.990300000000004e-05, 5.9972000000005354e-05, 5.980500000000305e-05, 6.0443999999999776e-05, 6.0292000000003454e-05, 6.0485999999998485e-05, 5.9721999999998165e-05, 6.0680000000000456e-05]</msg>
<status status="PASS" starttime="20201112 12:44:02.558" endtime="20201112 12:44:02.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.546" endtime="20201112 12:44:02.565"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.572" endtime="20201112 12:44:02.575"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:02.581" endtime="20201112 12:44:02.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.576" endtime="20201112 12:44:02.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.567" endtime="20201112 12:44:02.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.021" endtime="20201112 12:44:02.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.020" endtime="20201112 12:44:02.607"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.632" endtime="20201112 12:44:02.653"></status>
</kw>
<msg timestamp="20201112 12:44:02.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:02.628" endtime="20201112 12:44:02.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:02.657" endtime="20201112 12:44:02.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.664" endtime="20201112 12:44:02.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.621" endtime="20201112 12:44:02.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.614" endtime="20201112 12:44:02.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.689" endtime="20201112 12:44:03.049"></status>
</kw>
<msg timestamp="20201112 12:44:03.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044784319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044845806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:02.685" endtime="20201112 12:44:03.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:03.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044784319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044845806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:03.059" endtime="20201112 12:44:03.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:03.079" endtime="20201112 12:44:03.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.677" endtime="20201112 12:44:03.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.672" endtime="20201112 12:44:03.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:03.102" level="INFO">${RESULT} = [{'time': 0.044845806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.148699999999896e-05, 'source_diff': 6.148699999999896e-05}, {'time': 0.044921819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:03.092" endtime="20201112 12:44:03.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:03.134" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:03.104" endtime="20201112 12:44:03.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:03.146" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 12:44:03.143" endtime="20201112 12:44:03.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:03.152" level="INFO">VALUE: [6.148699999999896e-05, 6.0985999999998985e-05, 6.145800000000035e-05, 6.166600000000189e-05, 6.138900000000197e-05, 6.147199999999992e-05, 6.119400000000053e-05, 6.162500000000265e-05, 6.1014000000005064e-05, 6.155600000000427e-05, 6.140300000000154e-05, 6.108300000000344e-05, 6.155600000000427e-05, 6.140300000000154e-05, 6.170900000000007e-05, 6.127699999999847e-05, 6.108400000000291e-05, 6.112500000000215e-05, 6.155499999999786e-05, 6.136100000000283e-05, 6.14029999999946e-05, 6.138900000000197e-05, 6.122199999999967e-05, 6.109699999999607e-05, 6.122199999999967e-05, 6.1582999999997e-05, 6.12080000000001e-05, 6.112499999999521e-05, 6.141699999999417e-05, 6.112499999999521e-05, 6.109800000000248e-05, 6.113900000000172e-05, 6.148599999999949e-05, 6.133399999999622e-05, 6.077699999999797e-05, 6.173599999999974e-05, 6.168000000000146e-05, 6.157000000000384e-05, 6.134700000000326e-05, 6.172200000000017e-05, 6.1000000000005494e-05, 6.172200000000017e-05, 6.141700000000111e-05, 6.12080000000001e-05, 6.133400000000316e-05, 6.0763999999997875e-05, 6.147299999999939e-05, 6.13200000000036e-05, 6.145899999999982e-05, 6.0861999999994865e-05]</msg>
<status status="PASS" starttime="20201112 12:44:03.148" endtime="20201112 12:44:03.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.136" endtime="20201112 12:44:03.155"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:03.162" endtime="20201112 12:44:03.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:03.171" endtime="20201112 12:44:03.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.166" endtime="20201112 12:44:03.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.157" endtime="20201112 12:44:03.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.610" endtime="20201112 12:44:03.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.608" endtime="20201112 12:44:03.198"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:03.222" endtime="20201112 12:44:03.243"></status>
</kw>
<msg timestamp="20201112 12:44:03.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:03.218" endtime="20201112 12:44:03.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:03.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:03.247" endtime="20201112 12:44:03.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:03.254" endtime="20201112 12:44:03.258"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.211" endtime="20201112 12:44:03.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.204" endtime="20201112 12:44:03.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:03.279" endtime="20201112 12:44:03.641"></status>
</kw>
<msg timestamp="20201112 12:44:03.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044678222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044740667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:03.275" endtime="20201112 12:44:03.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:03.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044678222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044740667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:03.651" endtime="20201112 12:44:03.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:03.671" endtime="20201112 12:44:03.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.268" endtime="20201112 12:44:03.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.263" endtime="20201112 12:44:03.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:03.691" level="INFO">${RESULT} = [{'time': 0.044740667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.244500000000125e-05, 'source_diff': 6.244500000000125e-05}, {'time': 0.044817722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:03.682" endtime="20201112 12:44:03.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:03.723" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:03.693" endtime="20201112 12:44:03.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:03.735" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 12:44:03.733" endtime="20201112 12:44:03.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:03.741" level="INFO">VALUE: [6.244500000000125e-05, 6.230499999999861e-05, 6.199999999999956e-05, 6.254099999999929e-05, 6.2582999999998e-05, 6.19300000000017e-05, 6.25279999999992e-05, 6.261099999999714e-05, 6.266699999999542e-05, 6.175000000000624e-05, 6.201399999999913e-05, 6.179200000000495e-05, 6.190300000000204e-05, 6.24029999999956e-05, 6.263900000000322e-05, 6.248600000000049e-05, 6.229199999999852e-05, 6.209699999999707e-05, 6.216700000000186e-05, 6.177699999999897e-05, 6.215299999999535e-05, 6.222200000000067e-05, 6.194400000000128e-05, 6.205499999999836e-05, 6.263900000000322e-05, 6.250000000000006e-05, 6.268100000000193e-05, 6.195799999999391e-05, 6.2195000000001e-05, 6.17080000000006e-05, 6.198599999999999e-05, 6.243099999999474e-05, 6.183399999999672e-05, 6.211099999999664e-05, 6.23750000000034e-05, 6.197199999999348e-05, 6.191600000000214e-05, 6.218000000000196e-05, 6.269400000000203e-05, 6.213900000000272e-05, 6.190300000000204e-05, 6.263899999999628e-05, 6.251399999999963e-05, 6.191700000000161e-05, 6.238900000000297e-05, 6.209699999999707e-05, 6.188900000000247e-05, 6.18750000000029e-05, 6.213900000000272e-05, 6.22499999999998e-05]</msg>
<status status="PASS" starttime="20201112 12:44:03.738" endtime="20201112 12:44:03.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.725" endtime="20201112 12:44:03.744"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:03.751" endtime="20201112 12:44:03.754"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:03.760" endtime="20201112 12:44:03.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.756" endtime="20201112 12:44:03.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.746" endtime="20201112 12:44:03.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.200" endtime="20201112 12:44:03.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.199" endtime="20201112 12:44:03.787"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:03.811" endtime="20201112 12:44:03.833"></status>
</kw>
<msg timestamp="20201112 12:44:03.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:03.808" endtime="20201112 12:44:03.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:03.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:03.836" endtime="20201112 12:44:03.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:03.843" endtime="20201112 12:44:03.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.800" endtime="20201112 12:44:03.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.794" endtime="20201112 12:44:03.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:03.868" endtime="20201112 12:44:04.230"></status>
</kw>
<msg timestamp="20201112 12:44:04.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044631889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044695278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:03.865" endtime="20201112 12:44:04.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044631889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044695278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:04.240" endtime="20201112 12:44:04.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.260" endtime="20201112 12:44:04.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.857" endtime="20201112 12:44:04.267"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.852" endtime="20201112 12:44:04.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:04.281" level="INFO">${RESULT} = [{'time': 0.044695278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.338899999999703e-05, 'source_diff': 6.338899999999703e-05}, {'time': 0.044769319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:04.271" endtime="20201112 12:44:04.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:04.313" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:04.283" endtime="20201112 12:44:04.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.325" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 12:44:04.322" endtime="20201112 12:44:04.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.331" level="INFO">VALUE: [6.338899999999703e-05, 6.302700000000022e-05, 6.293099999999524e-05, 6.32080000000021e-05, 6.315300000000329e-05, 6.345800000000235e-05, 6.377800000000045e-05, 6.330499999999961e-05, 6.300000000000056e-05, 6.37229999999947e-05, 6.276399999999988e-05, 6.333300000000569e-05, 6.322200000000167e-05, 6.343099999999574e-05, 6.295800000000185e-05, 6.294500000000175e-05, 6.37630000000014e-05, 6.283399999999773e-05, 6.309800000000448e-05, 6.309800000000448e-05, 6.284700000000476e-05, 6.311099999999764e-05, 6.327700000000047e-05, 6.336099999999789e-05, 6.32080000000021e-05, 6.351400000000063e-05, 6.286099999999739e-05, 6.316699999999592e-05, 6.30279999999997e-05, 6.356899999999943e-05, 6.372200000000217e-05, 6.295800000000185e-05, 6.363899999999728e-05, 6.280499999999911e-05, 6.3195000000002e-05, 6.349999999999412e-05, 6.362500000000465e-05, 6.363800000000475e-05, 6.279199999999902e-05, 6.331899999999918e-05, 6.298599999999405e-05, 6.326400000000038e-05, 6.280499999999911e-05, 6.301400000000013e-05, 6.312499999999721e-05, 6.286100000000433e-05, 6.35280000000002e-05, 6.351400000000063e-05, 6.355599999999934e-05, 6.291699999999567e-05]</msg>
<status status="PASS" starttime="20201112 12:44:04.327" endtime="20201112 12:44:04.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.315" endtime="20201112 12:44:04.334"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.341" endtime="20201112 12:44:04.344"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:04.350" endtime="20201112 12:44:04.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.345" endtime="20201112 12:44:04.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.336" endtime="20201112 12:44:04.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.789" endtime="20201112 12:44:04.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.788" endtime="20201112 12:44:04.377"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.401" endtime="20201112 12:44:04.423"></status>
</kw>
<msg timestamp="20201112 12:44:04.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:04.398" endtime="20201112 12:44:04.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:04.427" endtime="20201112 12:44:04.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.433" endtime="20201112 12:44:04.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.390" endtime="20201112 12:44:04.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.384" endtime="20201112 12:44:04.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.458" endtime="20201112 12:44:04.785"></status>
</kw>
<msg timestamp="20201112 12:44:04.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044728444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044792583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:04.455" endtime="20201112 12:44:04.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044728444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044792583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:04.789" endtime="20201112 12:44:04.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.798" endtime="20201112 12:44:04.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.447" endtime="20201112 12:44:04.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.442" endtime="20201112 12:44:04.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:04.807" level="INFO">${RESULT} = [{'time': 0.044792583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.413899999999778e-05, 'source_diff': 6.413899999999778e-05}, {'time': 0.044868583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:04.803" endtime="20201112 12:44:04.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:04.821" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:04.808" endtime="20201112 12:44:04.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.827" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 12:44:04.826" endtime="20201112 12:44:04.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.829" level="INFO">VALUE: [6.413899999999778e-05, 6.376399999999394e-05, 6.37500000000013e-05, 6.391600000000414e-05, 6.416699999999692e-05, 6.383299999999925e-05, 6.394400000000328e-05, 6.472200000000317e-05, 6.430600000000009e-05, 6.436099999999889e-05, 6.459699999999957e-05, 6.429200000000052e-05, 6.468099999999699e-05, 6.391700000000361e-05, 6.409799999999855e-05, 6.434699999999932e-05, 6.459699999999957e-05, 6.44159999999977e-05, 6.381899999999968e-05, 6.418000000000396e-05, 6.454200000000077e-05, 6.377800000000045e-05, 6.430600000000009e-05, 6.376400000000088e-05, 6.412499999999821e-05, 6.473600000000274e-05, 6.416699999999692e-05, 6.454200000000077e-05, 6.401399999999419e-05, 6.398599999999505e-05, 6.413899999999778e-05, 6.445799999999641e-05, 6.395800000000285e-05, 6.398600000000199e-05, 6.420799999999616e-05, 6.436099999999889e-05, 6.395800000000285e-05, 6.430600000000009e-05, 6.436099999999889e-05, 6.386099999999839e-05, 6.47080000000036e-05, 6.37500000000013e-05, 6.416699999999692e-05, 6.443100000000368e-05, 6.413899999999778e-05, 6.418100000000343e-05, 6.422200000000267e-05, 6.398600000000199e-05, 6.37500000000013e-05, 6.459699999999957e-05]</msg>
<status status="PASS" starttime="20201112 12:44:04.828" endtime="20201112 12:44:04.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.822" endtime="20201112 12:44:04.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.834" endtime="20201112 12:44:04.836"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:04.838" endtime="20201112 12:44:04.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.836" endtime="20201112 12:44:04.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.832" endtime="20201112 12:44:04.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.379" endtime="20201112 12:44:04.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.378" endtime="20201112 12:44:04.860"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.871" endtime="20201112 12:44:04.889"></status>
</kw>
<msg timestamp="20201112 12:44:04.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:04.869" endtime="20201112 12:44:04.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:04.891" endtime="20201112 12:44:04.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.894" endtime="20201112 12:44:04.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.866" endtime="20201112 12:44:04.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.863" endtime="20201112 12:44:04.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.905" endtime="20201112 12:44:05.192"></status>
</kw>
<msg timestamp="20201112 12:44:05.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025709694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025775042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:04.904" endtime="20201112 12:44:05.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025709694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025775042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:05.196" endtime="20201112 12:44:05.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.205" endtime="20201112 12:44:05.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.900" endtime="20201112 12:44:05.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.898" endtime="20201112 12:44:05.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:05.216" level="INFO">${RESULT} = [{'time': 0.025775042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.53479999999998e-05, 'source_diff': 6.53479999999998e-05}, {'time': 0.025848056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:44:05.211" endtime="20201112 12:44:05.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:05.229" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:05.217" endtime="20201112 12:44:05.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.235" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 12:44:05.234" endtime="20201112 12:44:05.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.238" level="INFO">VALUE: [6.53479999999998e-05, 6.513900000000225e-05, 6.516699999999792e-05, 6.52639999999989e-05, 6.488899999999853e-05, 6.562500000000318e-05, 6.543000000000174e-05, 6.54029999999986e-05, 6.549999999999959e-05, 6.52220000000002e-05, 6.476400000000188e-05, 6.57220000000007e-05, 6.50830000000005e-05, 6.52639999999989e-05, 6.52090000000001e-05, 6.524999999999934e-05, 6.473600000000274e-05, 6.499999999999909e-05, 6.556899999999796e-05, 6.479099999999807e-05, 6.512499999999921e-05, 6.50830000000005e-05, 6.480500000000111e-05, 6.547200000000045e-05, 6.565299999999885e-05, 6.476400000000188e-05, 6.4889000000002e-05, 6.527800000000195e-05, 6.477799999999798e-05, 6.520899999999663e-05, 6.558400000000048e-05, 6.480600000000059e-05, 6.511099999999964e-05, 6.570800000000113e-05, 6.518000000000149e-05, 6.50280000000017e-05, 6.511099999999964e-05, 6.497199999999995e-05, 6.520799999999716e-05, 6.55419999999983e-05, 6.5583000000001e-05, 6.512499999999921e-05, 6.551399999999916e-05, 6.57090000000006e-05, 6.512499999999921e-05, 6.512499999999921e-05, 6.563900000000275e-05, 6.530600000000109e-05, 6.505600000000084e-05, 6.534700000000032e-05]</msg>
<status status="PASS" starttime="20201112 12:44:05.236" endtime="20201112 12:44:05.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.230" endtime="20201112 12:44:05.239"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.242" endtime="20201112 12:44:05.244"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:05.247" endtime="20201112 12:44:05.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.244" endtime="20201112 12:44:05.267"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.240" endtime="20201112 12:44:05.268"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.861" endtime="20201112 12:44:05.268"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.860" endtime="20201112 12:44:05.268"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.279" endtime="20201112 12:44:05.297"></status>
</kw>
<msg timestamp="20201112 12:44:05.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:05.278" endtime="20201112 12:44:05.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:05.299" endtime="20201112 12:44:05.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.302" endtime="20201112 12:44:05.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.274" endtime="20201112 12:44:05.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.271" endtime="20201112 12:44:05.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.314" endtime="20201112 12:44:05.604"></status>
</kw>
<msg timestamp="20201112 12:44:05.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025735514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025801708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:05.312" endtime="20201112 12:44:05.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025735514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025801708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:05.614" endtime="20201112 12:44:05.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.634" endtime="20201112 12:44:05.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.308" endtime="20201112 12:44:05.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.306" endtime="20201112 12:44:05.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:05.654" level="INFO">${RESULT} = [{'time': 0.025801708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.619399999999859e-05, 'source_diff': 6.619399999999859e-05}, {'time': 0.025877722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:05.645" endtime="20201112 12:44:05.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:05.687" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:05.657" endtime="20201112 12:44:05.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.699" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 12:44:05.696" endtime="20201112 12:44:05.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.704" level="INFO">VALUE: [6.619399999999859e-05, 6.577799999999898e-05, 6.611100000000064e-05, 6.634700000000132e-05, 6.606899999999846e-05, 6.634700000000132e-05, 6.598600000000052e-05, 6.651400000000016e-05, 6.629199999999905e-05, 6.655600000000234e-05, 6.608400000000098e-05, 6.62639999999999e-05, 6.595900000000085e-05, 6.65419999999993e-05, 6.636100000000089e-05, 6.611100000000064e-05, 6.60969999999976e-05, 6.598600000000052e-05, 6.59029999999991e-05, 6.659700000000157e-05, 6.648600000000102e-05, 6.629199999999905e-05, 6.637499999999699e-05, 6.594499999999781e-05, 6.65419999999993e-05, 6.666699999999942e-05, 6.643099999999874e-05, 6.597300000000042e-05, 6.583300000000125e-05, 6.652799999999973e-05, 6.6277e-05, 6.611100000000064e-05, 6.67220000000017e-05, 6.654099999999982e-05, 6.633299999999828e-05, 6.5889000000003e-05, 6.59029999999991e-05, 6.622199999999773e-05, 6.62639999999999e-05, 6.576400000000288e-05, 6.65700000000019e-05, 6.645899999999788e-05, 6.615299999999935e-05, 6.609700000000107e-05, 6.661199999999715e-05, 6.655499999999939e-05, 6.581899999999821e-05, 6.587499999999996e-05, 6.670799999999866e-05, 6.629099999999957e-05]</msg>
<status status="PASS" starttime="20201112 12:44:05.701" endtime="20201112 12:44:05.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.689" endtime="20201112 12:44:05.708"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.715" endtime="20201112 12:44:05.717"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:05.724" endtime="20201112 12:44:05.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.719" endtime="20201112 12:44:05.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.710" endtime="20201112 12:44:05.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.269" endtime="20201112 12:44:05.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.268" endtime="20201112 12:44:05.750"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.775" endtime="20201112 12:44:05.796"></status>
</kw>
<msg timestamp="20201112 12:44:05.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:05.771" endtime="20201112 12:44:05.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:05.800" endtime="20201112 12:44:05.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.807" endtime="20201112 12:44:05.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.763" endtime="20201112 12:44:05.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.757" endtime="20201112 12:44:05.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.832" endtime="20201112 12:44:06.190"></status>
</kw>
<msg timestamp="20201112 12:44:06.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044589333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044656986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:05.828" endtime="20201112 12:44:06.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044589333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044656986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:06.200" endtime="20201112 12:44:06.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.220" endtime="20201112 12:44:06.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.820" endtime="20201112 12:44:06.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.815" endtime="20201112 12:44:06.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:06.241" level="INFO">${RESULT} = [{'time': 0.044656986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.765300000000085e-05, 'source_diff': 6.765300000000085e-05}, {'time': 0.044730042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:06.231" endtime="20201112 12:44:06.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:06.273" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:06.243" endtime="20201112 12:44:06.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.285" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 12:44:06.283" endtime="20201112 12:44:06.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.291" level="INFO">VALUE: [6.765300000000085e-05, 6.684799999999436e-05, 6.674999999999737e-05, 6.7583000000003e-05, 6.726400000000438e-05, 6.751399999999769e-05, 6.769400000000009e-05, 6.681999999999522e-05, 6.722199999999873e-05, 6.756999999999597e-05, 6.772199999999923e-05, 6.699999999999762e-05, 6.686100000000139e-05, 6.726399999999744e-05, 6.709700000000207e-05, 6.772199999999923e-05, 6.731900000000318e-05, 6.75700000000029e-05, 6.720799999999916e-05, 6.698600000000499e-05, 6.69030000000001e-05, 6.701399999999719e-05, 6.683400000000173e-05, 6.726400000000438e-05, 6.724999999999787e-05, 6.722199999999873e-05, 6.744400000000678e-05, 6.72359999999983e-05, 6.683300000000225e-05, 6.730499999999667e-05, 6.687500000000096e-05, 6.711100000000164e-05, 6.683300000000225e-05, 6.677800000000345e-05, 6.758299999999606e-05, 6.674999999999737e-05, 6.694499999999881e-05, 6.733400000000223e-05, 6.668099999999899e-05, 6.716599999999351e-05, 6.687500000000096e-05, 6.70830000000025e-05, 6.705499999999642e-05, 6.748599999999855e-05, 6.765299999999391e-05, 6.683299999999531e-05, 6.705499999999642e-05, 6.711200000000112e-05, 6.691699999999967e-05, 6.708299999999556e-05]</msg>
<status status="PASS" starttime="20201112 12:44:06.287" endtime="20201112 12:44:06.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.275" endtime="20201112 12:44:06.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.301" endtime="20201112 12:44:06.304"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:06.310" endtime="20201112 12:44:06.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.305" endtime="20201112 12:44:06.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.296" endtime="20201112 12:44:06.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.752" endtime="20201112 12:44:06.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.751" endtime="20201112 12:44:06.337"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.361" endtime="20201112 12:44:06.384"></status>
</kw>
<msg timestamp="20201112 12:44:06.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:06.358" endtime="20201112 12:44:06.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:06.388" endtime="20201112 12:44:06.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.395" endtime="20201112 12:44:06.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.350" endtime="20201112 12:44:06.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.344" endtime="20201112 12:44:06.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.420" endtime="20201112 12:44:06.780"></status>
</kw>
<msg timestamp="20201112 12:44:06.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045108278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045176222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:06.416" endtime="20201112 12:44:06.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045108278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045176222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:06.790" endtime="20201112 12:44:06.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.810" endtime="20201112 12:44:06.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.409" endtime="20201112 12:44:06.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.404" endtime="20201112 12:44:06.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:06.831" level="INFO">${RESULT} = [{'time': 0.045176222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.794400000000034e-05, 'source_diff': 6.794400000000034e-05}, {'time': 0.04525625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:44:06.821" endtime="20201112 12:44:06.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:06.863" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:06.833" endtime="20201112 12:44:06.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.875" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 12:44:06.873" endtime="20201112 12:44:06.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.881" level="INFO">VALUE: [6.794400000000034e-05, 6.86109999999962e-05, 6.858400000000348e-05, 6.818100000000049e-05, 6.854200000000477e-05, 6.863899999999534e-05, 6.815300000000135e-05, 6.82500000000058e-05, 6.866599999999501e-05, 6.788799999999512e-05, 6.852700000000572e-05, 6.783299999999631e-05, 6.80830000000035e-05, 6.834699999999638e-05, 6.795799999999991e-05, 6.87359999999998e-05, 6.79030000000011e-05, 6.808299999999656e-05, 6.829199999999758e-05, 6.795899999999938e-05, 6.809700000000307e-05, 6.787500000000196e-05, 6.870900000000013e-05, 6.866700000000142e-05, 6.791700000000067e-05, 6.766700000000042e-05, 6.819399999999365e-05, 6.812499999999527e-05, 6.863900000000228e-05, 6.847199999999998e-05, 6.795799999999991e-05, 6.848600000000649e-05, 6.783299999999631e-05, 6.797199999999948e-05, 6.834700000000332e-05, 6.77359999999988e-05, 6.872200000000023e-05, 6.862499999999577e-05, 6.855600000000434e-05, 6.837500000000246e-05, 6.820899999999963e-05, 6.858299999999706e-05, 6.830499999999767e-05, 6.827799999999801e-05, 6.804100000000479e-05, 6.870800000000066e-05, 6.855500000000486e-05, 6.827800000000495e-05, 6.859699999999663e-05, 6.804199999999733e-05]</msg>
<status status="PASS" starttime="20201112 12:44:06.878" endtime="20201112 12:44:06.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.865" endtime="20201112 12:44:06.884"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.891" endtime="20201112 12:44:06.894"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:06.900" endtime="20201112 12:44:06.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.896" endtime="20201112 12:44:06.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.886" endtime="20201112 12:44:06.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.339" endtime="20201112 12:44:06.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.338" endtime="20201112 12:44:06.927"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.951" endtime="20201112 12:44:06.973"></status>
</kw>
<msg timestamp="20201112 12:44:06.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:06.948" endtime="20201112 12:44:06.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:06.977" endtime="20201112 12:44:06.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.984" endtime="20201112 12:44:06.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.940" endtime="20201112 12:44:06.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.934" endtime="20201112 12:44:06.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.009" endtime="20201112 12:44:07.370"></status>
</kw>
<msg timestamp="20201112 12:44:07.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044721361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044790333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:07.005" endtime="20201112 12:44:07.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044721361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044790333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:07.380" endtime="20201112 12:44:07.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.400" endtime="20201112 12:44:07.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.997" endtime="20201112 12:44:07.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.992" endtime="20201112 12:44:07.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:07.422" level="INFO">${RESULT} = [{'time': 0.044790333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.897200000000048e-05, 'source_diff': 6.897200000000048e-05}, {'time': 0.044874361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:07.413" endtime="20201112 12:44:07.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:07.454" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:07.424" endtime="20201112 12:44:07.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.466" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 12:44:07.464" endtime="20201112 12:44:07.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.472" level="INFO">VALUE: [6.897200000000048e-05, 6.968000000000252e-05, 6.933299999999781e-05, 6.895800000000091e-05, 6.915300000000235e-05, 6.894500000000081e-05, 6.919500000000106e-05, 6.897200000000048e-05, 6.90559999999979e-05, 6.95979999999971e-05, 6.88480000000033e-05, 6.874999999999937e-05, 6.954099999999935e-05, 6.927699999999953e-05, 6.952799999999926e-05, 6.922200000000073e-05, 6.92909999999991e-05, 6.876399999999894e-05, 6.887500000000296e-05, 6.912500000000321e-05, 6.880599999999765e-05, 6.874999999999937e-05, 6.962500000000371e-05, 6.920900000000063e-05, 6.880600000000459e-05, 6.899999999999962e-05, 6.908399999999704e-05, 6.899999999999962e-05, 6.926399999999944e-05, 6.945800000000141e-05, 6.909699999999713e-05, 6.89160000000022e-05, 6.899999999999962e-05, 6.930599999999815e-05, 6.90830000000045e-05, 6.926399999999944e-05, 6.962500000000371e-05, 6.880599999999765e-05, 6.944500000000131e-05, 6.90979999999966e-05, 6.883399999999679e-05, 6.904199999999833e-05, 6.927699999999953e-05, 6.930499999999867e-05, 6.92909999999991e-05, 6.955499999999892e-05, 6.909700000000407e-05, 6.950000000000012e-05, 6.965200000000338e-05, 6.876400000000588e-05]</msg>
<status status="PASS" starttime="20201112 12:44:07.468" endtime="20201112 12:44:07.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.456" endtime="20201112 12:44:07.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.482" endtime="20201112 12:44:07.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:07.491" endtime="20201112 12:44:07.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.486" endtime="20201112 12:44:07.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.477" endtime="20201112 12:44:07.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.929" endtime="20201112 12:44:07.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.928" endtime="20201112 12:44:07.518"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.542" endtime="20201112 12:44:07.565"></status>
</kw>
<msg timestamp="20201112 12:44:07.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:07.538" endtime="20201112 12:44:07.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:07.569" endtime="20201112 12:44:07.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.576" endtime="20201112 12:44:07.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.531" endtime="20201112 12:44:07.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.525" endtime="20201112 12:44:07.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.601" endtime="20201112 12:44:07.967"></status>
</kw>
<msg timestamp="20201112 12:44:07.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044724389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044794139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:07.598" endtime="20201112 12:44:07.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044724389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044794139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:07.977" endtime="20201112 12:44:07.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.997" endtime="20201112 12:44:08.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.590" endtime="20201112 12:44:08.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.585" endtime="20201112 12:44:08.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:08.017" level="INFO">${RESULT} = [{'time': 0.044794139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.974999999999343e-05, 'source_diff': 6.974999999999343e-05}, {'time': 0.044879153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:08.008" endtime="20201112 12:44:08.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:08.049" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:08.019" endtime="20201112 12:44:08.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.061" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 12:44:08.059" endtime="20201112 12:44:08.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.067" level="INFO">VALUE: [6.974999999999343e-05, 6.983399999999779e-05, 6.997199999999454e-05, 7.016700000000292e-05, 6.983399999999779e-05, 7.048600000000155e-05, 7.05559999999994e-05, 6.97360000000008e-05, 7.069399999999615e-05, 7.062500000000471e-05, 6.97360000000008e-05, 7.022200000000173e-05, 7.00559999999989e-05, 7.034699999999838e-05, 7.070800000000266e-05, 7.01109999999977e-05, 7.01109999999977e-05, 6.991700000000267e-05, 7.070800000000266e-05, 7.0763999999994e-05, 7.00559999999989e-05, 6.992999999999583e-05, 7.02360000000013e-05, 7.01109999999977e-05, 7.043000000000327e-05, 6.992999999999583e-05, 7.026400000000044e-05, 6.990299999999616e-05, 7.025000000000087e-05, 7.00559999999989e-05, 6.997200000000148e-05, 7.048600000000155e-05, 7.066700000000342e-05, 7.054100000000035e-05, 7.061100000000514e-05, 7.065299999999691e-05, 7.001300000000071e-05, 7.033299999999881e-05, 7.050000000000112e-05, 7.013899999999684e-05, 7.008299999999856e-05, 6.983299999999831e-05, 7.033299999999881e-05, 7.068100000000299e-05, 7.026400000000044e-05, 7.029199999999958e-05, 7.068100000000299e-05, 7.005600000000584e-05, 6.995900000000138e-05, 6.986099999999745e-05]</msg>
<status status="PASS" starttime="20201112 12:44:08.064" endtime="20201112 12:44:08.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.051" endtime="20201112 12:44:08.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.077" endtime="20201112 12:44:08.080"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:08.086" endtime="20201112 12:44:08.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.082" endtime="20201112 12:44:08.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.072" endtime="20201112 12:44:08.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.520" endtime="20201112 12:44:08.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.519" endtime="20201112 12:44:08.113"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.137" endtime="20201112 12:44:08.159"></status>
</kw>
<msg timestamp="20201112 12:44:08.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:08.134" endtime="20201112 12:44:08.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:08.163" endtime="20201112 12:44:08.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.170" endtime="20201112 12:44:08.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.126" endtime="20201112 12:44:08.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.120" endtime="20201112 12:44:08.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.195" endtime="20201112 12:44:08.553"></status>
</kw>
<msg timestamp="20201112 12:44:08.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044939403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045010569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:08.191" endtime="20201112 12:44:08.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044939403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045010569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:08.562" endtime="20201112 12:44:08.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.592" endtime="20201112 12:44:08.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.183" endtime="20201112 12:44:08.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.178" endtime="20201112 12:44:08.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:08.612" level="INFO">${RESULT} = [{'time': 0.045010569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.116599999999751e-05, 'source_diff': 7.116599999999751e-05}, {'time': 0.045093569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:08.602" endtime="20201112 12:44:08.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:08.643" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:08.614" endtime="20201112 12:44:08.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.654" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 12:44:08.652" endtime="20201112 12:44:08.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.660" level="INFO">VALUE: [7.116599999999751e-05, 7.158300000000006e-05, 7.133299999999981e-05, 7.12910000000011e-05, 7.154099999999441e-05, 7.166599999999801e-05, 7.088900000000453e-05, 7.150000000000212e-05, 7.16109999999992e-05, 7.162499999999877e-05, 7.125000000000187e-05, 7.122199999999579e-05, 7.161199999999868e-05, 7.104200000000033e-05, 7.113799999999837e-05, 7.091699999999673e-05, 7.140199999999819e-05, 7.137499999999852e-05, 7.154100000000135e-05, 7.151400000000169e-05, 7.074999999999443e-05, 7.125000000000187e-05, 7.100000000000162e-05, 7.125000000000187e-05, 7.154199999999389e-05, 7.140299999999766e-05, 7.104200000000033e-05, 7.100000000000162e-05, 7.169500000000356e-05, 7.131999999999972e-05, 7.152800000000126e-05, 7.086099999999845e-05, 7.151400000000169e-05, 7.119499999999612e-05, 7.150000000000212e-05, 7.163899999999834e-05, 7.167999999999758e-05, 7.080599999999965e-05, 7.088899999999759e-05, 7.162499999999877e-05, 7.172200000000323e-05, 7.118099999999655e-05, 7.124999999999493e-05, 7.109800000000555e-05, 7.095900000000238e-05, 7.108299999999956e-05, 7.098599999999511e-05, 7.083299999999931e-05, 7.138899999999809e-05, 7.113899999999784e-05]</msg>
<status status="PASS" starttime="20201112 12:44:08.657" endtime="20201112 12:44:08.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.645" endtime="20201112 12:44:08.663"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.670" endtime="20201112 12:44:08.673"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:08.678" endtime="20201112 12:44:08.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.674" endtime="20201112 12:44:08.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.665" endtime="20201112 12:44:08.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.115" endtime="20201112 12:44:08.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.114" endtime="20201112 12:44:08.704"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.728" endtime="20201112 12:44:08.749"></status>
</kw>
<msg timestamp="20201112 12:44:08.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:08.724" endtime="20201112 12:44:08.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:08.753" endtime="20201112 12:44:08.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.759" endtime="20201112 12:44:08.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.717" endtime="20201112 12:44:08.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.711" endtime="20201112 12:44:08.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.783" endtime="20201112 12:44:09.075"></status>
</kw>
<msg timestamp="20201112 12:44:09.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043162847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043235431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:08.779" endtime="20201112 12:44:09.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043162847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043235431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:09.079" endtime="20201112 12:44:09.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.088" endtime="20201112 12:44:09.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.772" endtime="20201112 12:44:09.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.767" endtime="20201112 12:44:09.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:09.097" level="INFO">${RESULT} = [{'time': 0.043235431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.258400000000054e-05, 'source_diff': 7.258400000000054e-05}, {'time': 0.043310444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:09.093" endtime="20201112 12:44:09.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:09.110" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:09.098" endtime="20201112 12:44:09.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.116" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 12:44:09.115" endtime="20201112 12:44:09.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.118" level="INFO">VALUE: [7.258400000000054e-05, 7.215199999999894e-05, 7.268000000000552e-05, 7.219400000000459e-05, 7.197200000000348e-05, 7.208300000000056e-05, 7.188899999999859e-05, 7.193000000000477e-05, 7.240299999999866e-05, 7.226400000000244e-05, 7.236199999999943e-05, 7.202800000000176e-05, 7.20560000000009e-05, 7.193100000000424e-05, 7.18480000000063e-05, 7.195899999999644e-05, 7.234700000000038e-05, 7.215199999999894e-05, 7.195799999999697e-05, 7.222199999999679e-05, 7.209700000000013e-05, 7.19439999999974e-05, 7.197200000000348e-05, 7.204200000000133e-05, 7.236099999999995e-05, 7.176400000000194e-05, 7.229200000000158e-05, 7.176400000000194e-05, 7.257000000000097e-05, 7.22230000000032e-05, 7.250000000000312e-05, 7.266699999999848e-05, 7.262499999999977e-05, 7.198600000000305e-05, 7.224999999999593e-05, 7.233300000000081e-05, 7.209700000000013e-05, 7.204200000000133e-05, 7.22639999999955e-05, 7.233300000000081e-05, 7.216700000000492e-05, 7.229200000000158e-05, 7.230599999999421e-05, 7.22639999999955e-05, 7.190200000000563e-05, 7.233400000000029e-05, 7.238799999999962e-05, 7.24439999999979e-05, 7.212499999999927e-05, 7.230500000000167e-05]</msg>
<status status="PASS" starttime="20201112 12:44:09.117" endtime="20201112 12:44:09.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.111" endtime="20201112 12:44:09.120"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.123" endtime="20201112 12:44:09.124"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:09.127" endtime="20201112 12:44:09.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.125" endtime="20201112 12:44:09.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.121" endtime="20201112 12:44:09.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.707" endtime="20201112 12:44:09.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.705" endtime="20201112 12:44:09.148"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.159" endtime="20201112 12:44:09.177"></status>
</kw>
<msg timestamp="20201112 12:44:09.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:09.158" endtime="20201112 12:44:09.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:09.179" endtime="20201112 12:44:09.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.182" endtime="20201112 12:44:09.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.154" endtime="20201112 12:44:09.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.152" endtime="20201112 12:44:09.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.193" endtime="20201112 12:44:09.479"></status>
</kw>
<msg timestamp="20201112 12:44:09.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025155819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025229028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:09.191" endtime="20201112 12:44:09.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025155819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025229028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:09.484" endtime="20201112 12:44:09.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.492" endtime="20201112 12:44:09.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.188" endtime="20201112 12:44:09.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.186" endtime="20201112 12:44:09.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:09.502" level="INFO">${RESULT} = [{'time': 0.025229028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.320900000000116e-05, 'source_diff': 7.320900000000116e-05}, {'time': 0.025308042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:09.498" endtime="20201112 12:44:09.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:09.516" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:09.503" endtime="20201112 12:44:09.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.521" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 12:44:09.520" endtime="20201112 12:44:09.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.524" level="INFO">VALUE: [7.320900000000116e-05, 7.318099999999855e-05, 7.334699999999791e-05, 7.333400000000129e-05, 7.370900000000166e-05, 7.291699999999873e-05, 7.279099999999913e-05, 7.34439999999989e-05, 7.276400000000294e-05, 7.304099999999938e-05, 7.305500000000242e-05, 7.359699999999816e-05, 7.319400000000212e-05, 7.338900000000009e-05, 7.338900000000009e-05, 7.332000000000172e-05, 7.284699999999741e-05, 7.304199999999886e-05, 7.319399999999865e-05, 7.351400000000022e-05, 7.340299999999966e-05, 7.312500000000027e-05, 7.27499999999999e-05, 7.27499999999999e-05, 7.301399999999972e-05, 7.376400000000047e-05, 7.313899999999984e-05, 7.337500000000052e-05, 7.326399999999997e-05, 7.293100000000177e-05, 7.363900000000034e-05, 7.291599999999926e-05, 7.336200000000043e-05, 7.312500000000027e-05, 7.369500000000209e-05, 7.37500000000009e-05, 7.276399999999947e-05, 7.32500000000004e-05, 7.30829999999981e-05, 7.276400000000294e-05, 7.31110000000007e-05, 7.293100000000177e-05, 7.304200000000233e-05, 7.315299999999941e-05, 7.304199999999886e-05, 7.298700000000005e-05, 7.309800000000061e-05, 7.326399999999997e-05, 7.352799999999979e-05, 7.316599999999951e-05]</msg>
<status status="PASS" starttime="20201112 12:44:09.522" endtime="20201112 12:44:09.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.517" endtime="20201112 12:44:09.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.532" endtime="20201112 12:44:09.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:09.536" endtime="20201112 12:44:09.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.534" endtime="20201112 12:44:09.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.530" endtime="20201112 12:44:09.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.149" endtime="20201112 12:44:09.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.149" endtime="20201112 12:44:09.558"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.568" endtime="20201112 12:44:09.586"></status>
</kw>
<msg timestamp="20201112 12:44:09.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:09.567" endtime="20201112 12:44:09.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:09.588" endtime="20201112 12:44:09.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.591" endtime="20201112 12:44:09.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.563" endtime="20201112 12:44:09.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.561" endtime="20201112 12:44:09.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.602" endtime="20201112 12:44:09.946"></status>
</kw>
<msg timestamp="20201112 12:44:09.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025103222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025177472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:09.600" endtime="20201112 12:44:09.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025103222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025177472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:09.955" endtime="20201112 12:44:09.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.974" endtime="20201112 12:44:09.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.597" endtime="20201112 12:44:09.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.595" endtime="20201112 12:44:09.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:09.994" level="INFO">${RESULT} = [{'time': 0.025177472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.424999999999793e-05, 'source_diff': 7.424999999999793e-05}, {'time': 0.025263486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:09.985" endtime="20201112 12:44:09.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:10.025" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:09.996" endtime="20201112 12:44:10.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.036" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 12:44:10.034" endtime="20201112 12:44:10.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.041" level="INFO">VALUE: [7.424999999999793e-05, 7.458300000000306e-05, 7.43050000000002e-05, 7.424999999999793e-05, 7.404199999999986e-05, 7.383299999999884e-05, 7.454200000000036e-05, 7.422199999999879e-05, 7.44309999999998e-05, 7.388899999999712e-05, 7.465300000000091e-05, 7.472200000000276e-05, 7.44439999999999e-05, 7.443000000000033e-05, 7.450000000000165e-05, 7.386100000000145e-05, 7.408399999999857e-05, 7.40829999999991e-05, 7.434699999999891e-05, 7.448599999999861e-05, 7.376400000000047e-05, 7.374999999999743e-05, 7.429200000000011e-05, 7.461099999999873e-05, 7.431899999999977e-05, 7.445799999999947e-05, 7.384700000000188e-05, 7.470799999999972e-05, 7.37500000000009e-05, 7.43050000000002e-05, 7.454200000000036e-05, 7.466700000000048e-05, 7.37500000000009e-05, 7.413900000000084e-05, 7.4069999999999e-05, 7.422199999999879e-05, 7.441700000000023e-05, 7.43050000000002e-05, 7.469400000000015e-05, 7.420799999999922e-05, 7.395799999999897e-05, 7.412500000000127e-05, 7.377700000000056e-05, 7.388900000000059e-05, 7.423599999999836e-05, 7.400000000000115e-05, 7.472199999999929e-05, 7.4069999999999e-05, 7.401400000000072e-05, 7.416699999999998e-05]</msg>
<status status="PASS" starttime="20201112 12:44:10.038" endtime="20201112 12:44:10.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.027" endtime="20201112 12:44:10.045"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.051" endtime="20201112 12:44:10.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:10.059" endtime="20201112 12:44:10.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.055" endtime="20201112 12:44:10.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.046" endtime="20201112 12:44:10.085"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.559" endtime="20201112 12:44:10.085"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.558" endtime="20201112 12:44:10.086"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.109" endtime="20201112 12:44:10.131"></status>
</kw>
<msg timestamp="20201112 12:44:10.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:10.105" endtime="20201112 12:44:10.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:10.134" endtime="20201112 12:44:10.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.141" endtime="20201112 12:44:10.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.098" endtime="20201112 12:44:10.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.092" endtime="20201112 12:44:10.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.164" endtime="20201112 12:44:10.505"></status>
</kw>
<msg timestamp="20201112 12:44:10.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042920375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042995944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:10.161" endtime="20201112 12:44:10.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042920375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042995944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:10.514" endtime="20201112 12:44:10.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.533" endtime="20201112 12:44:10.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.154" endtime="20201112 12:44:10.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.149" endtime="20201112 12:44:10.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:10.553" level="INFO">${RESULT} = [{'time': 0.042995944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.55690000000045e-05, 'source_diff': 7.55690000000045e-05}, {'time': 0.043075917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:44:10.544" endtime="20201112 12:44:10.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:10.584" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:10.555" endtime="20201112 12:44:10.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.595" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 12:44:10.593" endtime="20201112 12:44:10.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.600" level="INFO">VALUE: [7.55690000000045e-05, 7.504199999999739e-05, 7.488900000000159e-05, 7.565300000000191e-05, 7.551299999999928e-05, 7.484699999999594e-05, 7.474999999999843e-05, 7.54310000000008e-05, 7.484699999999594e-05, 7.53189999999973e-05, 7.552799999999832e-05, 7.548599999999961e-05, 7.532000000000372e-05, 7.515299999999447e-05, 7.52639999999985e-05, 7.487499999999508e-05, 7.490200000000169e-05, 7.537500000000252e-05, 7.556899999999755e-05, 7.543000000000133e-05, 7.561099999999626e-05, 7.533299999999687e-05, 7.497199999999954e-05, 7.525000000000587e-05, 7.51110000000027e-05, 7.52639999999985e-05, 7.569500000000062e-05, 7.491700000000073e-05, 7.530599999999721e-05, 7.529199999999764e-05, 7.488900000000159e-05, 7.537500000000252e-05, 7.526299999999903e-05, 7.518000000000108e-05, 7.567999999999464e-05, 7.541700000000123e-05, 7.53189999999973e-05, 7.52639999999985e-05, 7.515300000000141e-05, 7.504199999999739e-05, 7.562500000000277e-05, 7.50560000000039e-05, 7.568000000000158e-05, 7.49310000000003e-05, 7.504100000000485e-05, 7.520800000000022e-05, 7.481900000000374e-05, 7.476400000000494e-05, 7.519400000000065e-05, 7.505499999999748e-05]</msg>
<status status="PASS" starttime="20201112 12:44:10.597" endtime="20201112 12:44:10.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.586" endtime="20201112 12:44:10.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.610" endtime="20201112 12:44:10.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:10.619" endtime="20201112 12:44:10.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.614" endtime="20201112 12:44:10.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.605" endtime="20201112 12:44:10.644"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.088" endtime="20201112 12:44:10.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.087" endtime="20201112 12:44:10.645"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.669" endtime="20201112 12:44:10.692"></status>
</kw>
<msg timestamp="20201112 12:44:10.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:10.666" endtime="20201112 12:44:10.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:10.695" endtime="20201112 12:44:10.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.701" endtime="20201112 12:44:10.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.658" endtime="20201112 12:44:10.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.652" endtime="20201112 12:44:10.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.725" endtime="20201112 12:44:11.063"></status>
</kw>
<msg timestamp="20201112 12:44:11.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044592278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044668042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:10.722" endtime="20201112 12:44:11.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:11.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044592278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044668042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:11.073" endtime="20201112 12:44:11.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:11.092" endtime="20201112 12:44:11.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.714" endtime="20201112 12:44:11.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.710" endtime="20201112 12:44:11.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:11.111" level="INFO">${RESULT} = [{'time': 0.044668042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.5763999999999e-05, 'source_diff': 7.5763999999999e-05}, {'time': 0.044747056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7...</msg>
<status status="PASS" starttime="20201112 12:44:11.102" endtime="20201112 12:44:11.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:11.142" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:11.113" endtime="20201112 12:44:11.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:11.153" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 12:44:11.151" endtime="20201112 12:44:11.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:11.159" level="INFO">VALUE: [7.5763999999999e-05, 7.630599999999821e-05, 7.597300000000001e-05, 7.604199999999839e-05, 7.622200000000079e-05, 7.650000000000018e-05, 7.637500000000352e-05, 7.62639999999995e-05, 7.615300000000241e-05, 7.645800000000147e-05, 7.597200000000054e-05, 7.670800000000172e-05, 7.583399999999685e-05, 7.637499999999658e-05, 7.651399999999975e-05, 7.586100000000345e-05, 7.590200000000269e-05, 7.648700000000008e-05, 7.619400000000165e-05, 7.599999999999968e-05, 7.574999999999943e-05, 7.605499999999848e-05, 7.574999999999943e-05, 7.655599999999846e-05, 7.670800000000172e-05, 7.65969999999977e-05, 7.661099999999726e-05, 7.587500000000302e-05, 7.651399999999975e-05, 7.595900000000044e-05, 7.587500000000302e-05, 7.613799999999643e-05, 7.590199999999575e-05, 7.5763999999999e-05, 7.601399999999925e-05, 7.630499999999873e-05, 7.609700000000413e-05, 7.604199999999839e-05, 7.611099999999676e-05, 7.666700000000248e-05, 7.641700000000223e-05, 7.644499999999443e-05, 7.63189999999983e-05, 7.586099999999651e-05, 7.672300000000076e-05, 7.620900000000069e-05, 7.673600000000086e-05, 7.592999999999489e-05, 7.593000000000183e-05, 7.601400000000619e-05]</msg>
<status status="PASS" starttime="20201112 12:44:11.156" endtime="20201112 12:44:11.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.144" endtime="20201112 12:44:11.162"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:11.169" endtime="20201112 12:44:11.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:11.177" endtime="20201112 12:44:11.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.173" endtime="20201112 12:44:11.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.164" endtime="20201112 12:44:11.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.647" endtime="20201112 12:44:11.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.646" endtime="20201112 12:44:11.203"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:11.226" endtime="20201112 12:44:11.248"></status>
</kw>
<msg timestamp="20201112 12:44:11.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:11.223" endtime="20201112 12:44:11.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:11.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:11.251" endtime="20201112 12:44:11.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:11.258" endtime="20201112 12:44:11.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.216" endtime="20201112 12:44:11.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.210" endtime="20201112 12:44:11.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:11.282" endtime="20201112 12:44:11.621"></status>
</kw>
<msg timestamp="20201112 12:44:11.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042976139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043053819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:11.278" endtime="20201112 12:44:11.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:11.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042976139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043053819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:11.631" endtime="20201112 12:44:11.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:11.650" endtime="20201112 12:44:11.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.271" endtime="20201112 12:44:11.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.266" endtime="20201112 12:44:11.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:11.671" level="INFO">${RESULT} = [{'time': 0.043053819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.768000000000358e-05, 'source_diff': 7.768000000000358e-05}, {'time': 0.043134806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:11.662" endtime="20201112 12:44:11.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:11.702" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:11.673" endtime="20201112 12:44:11.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:11.714" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 12:44:11.712" endtime="20201112 12:44:11.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:11.719" level="INFO">VALUE: [7.768000000000358e-05, 7.686199999999699e-05, 7.687500000000402e-05, 7.762500000000477e-05, 7.687499999999708e-05, 7.772199999999535e-05, 7.691600000000326e-05, 7.762499999999783e-05, 7.738899999999715e-05, 7.756999999999903e-05, 7.763900000000434e-05, 7.704099999999992e-05, 7.691700000000273e-05, 7.715299999999647e-05, 7.701400000000025e-05, 7.679199999999914e-05, 7.712499999999733e-05, 7.76389999999974e-05, 7.725000000000093e-05, 7.719499999999518e-05, 7.697200000000154e-05, 7.745800000000247e-05, 7.74169999999963e-05, 7.702799999999982e-05, 7.704199999999939e-05, 7.747200000000204e-05, 7.709799999999767e-05, 7.681999999999828e-05, 7.71110000000047e-05, 7.752700000000085e-05, 7.691600000000326e-05, 7.763900000000434e-05, 7.777800000000057e-05, 7.691599999999632e-05, 7.72640000000005e-05, 7.74310000000028e-05, 7.72640000000005e-05, 7.717999999999614e-05, 7.684699999999794e-05, 7.770900000000219e-05, 7.772300000000176e-05, 7.672300000000076e-05, 7.705499999999949e-05, 7.690200000000369e-05, 7.738899999999715e-05, 7.705500000000642e-05, 7.733299999999887e-05, 7.737499999999758e-05, 7.708299999999862e-05, 7.683300000000531e-05]</msg>
<status status="PASS" starttime="20201112 12:44:11.716" endtime="20201112 12:44:11.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.704" endtime="20201112 12:44:11.723"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:11.729" endtime="20201112 12:44:11.732"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:11.738" endtime="20201112 12:44:11.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.733" endtime="20201112 12:44:11.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.725" endtime="20201112 12:44:11.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.205" endtime="20201112 12:44:11.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.204" endtime="20201112 12:44:11.764"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:11.787" endtime="20201112 12:44:11.809"></status>
</kw>
<msg timestamp="20201112 12:44:11.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:11.783" endtime="20201112 12:44:11.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:11.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:11.812" endtime="20201112 12:44:11.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:11.818" endtime="20201112 12:44:11.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.776" endtime="20201112 12:44:11.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.770" endtime="20201112 12:44:11.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:11.842" endtime="20201112 12:44:12.182"></status>
</kw>
<msg timestamp="20201112 12:44:12.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042768972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042846708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:11.839" endtime="20201112 12:44:12.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042768972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042846708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:12.191" endtime="20201112 12:44:12.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.210" endtime="20201112 12:44:12.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.832" endtime="20201112 12:44:12.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.827" endtime="20201112 12:44:12.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:12.230" level="INFO">${RESULT} = [{'time': 0.042846708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.773599999999492e-05, 'source_diff': 7.773599999999492e-05}, {'time': 0.042931722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:12.221" endtime="20201112 12:44:12.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:12.261" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:12.232" endtime="20201112 12:44:12.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.272" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 12:44:12.270" endtime="20201112 12:44:12.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.278" level="INFO">VALUE: [7.773599999999492e-05, 7.79719999999956e-05, 7.777800000000057e-05, 7.834699999999944e-05, 7.856900000000056e-05, 7.79169999999968e-05, 7.851400000000175e-05, 7.830600000000021e-05, 7.851400000000175e-05, 7.847299999999557e-05, 7.848600000000261e-05, 7.840300000000466e-05, 7.837499999999858e-05, 7.795800000000297e-05, 7.812499999999833e-05, 7.873600000000286e-05, 7.844399999999696e-05, 7.848599999999567e-05, 7.787499999999808e-05, 7.813900000000484e-05, 7.865299999999797e-05, 7.836099999999901e-05, 7.779200000000014e-05, 7.820900000000269e-05, 7.856900000000056e-05, 7.795800000000297e-05, 7.850000000000218e-05, 7.795800000000297e-05, 7.805599999999996e-05, 7.834699999999944e-05, 7.81389999999979e-05, 7.830600000000021e-05, 7.775000000000143e-05, 7.794499999999593e-05, 7.783299999999937e-05, 7.806999999999953e-05, 7.780599999999971e-05, 7.855600000000046e-05, 7.795900000000244e-05, 7.813800000000537e-05, 7.81389999999979e-05, 7.816599999999757e-05, 7.840299999999772e-05, 7.852800000000132e-05, 7.869400000000415e-05, 7.833299999999987e-05, 7.80969999999992e-05, 7.813900000000484e-05, 7.840300000000466e-05, 7.793099999999636e-05]</msg>
<status status="PASS" starttime="20201112 12:44:12.274" endtime="20201112 12:44:12.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.263" endtime="20201112 12:44:12.281"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.287" endtime="20201112 12:44:12.290"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:12.296" endtime="20201112 12:44:12.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.292" endtime="20201112 12:44:12.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.283" endtime="20201112 12:44:12.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.766" endtime="20201112 12:44:12.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.765" endtime="20201112 12:44:12.322"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.345" endtime="20201112 12:44:12.368"></status>
</kw>
<msg timestamp="20201112 12:44:12.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:12.342" endtime="20201112 12:44:12.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:12.371" endtime="20201112 12:44:12.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.378" endtime="20201112 12:44:12.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.334" endtime="20201112 12:44:12.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.328" endtime="20201112 12:44:12.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.401" endtime="20201112 12:44:12.740"></status>
</kw>
<msg timestamp="20201112 12:44:12.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042592125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042670931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:12.398" endtime="20201112 12:44:12.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042592125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042670931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:12.749" endtime="20201112 12:44:12.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.768" endtime="20201112 12:44:12.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.391" endtime="20201112 12:44:12.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.386" endtime="20201112 12:44:12.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:12.788" level="INFO">${RESULT} = [{'time': 0.042670931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.880600000000071e-05, 'source_diff': 7.880600000000071e-05}, {'time': 0.042757958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:12.779" endtime="20201112 12:44:12.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:12.819" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:12.790" endtime="20201112 12:44:12.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.830" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 12:44:12.828" endtime="20201112 12:44:12.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.836" level="INFO">VALUE: [7.880600000000071e-05, 7.9151999999999e-05, 7.875000000000243e-05, 7.966599999999907e-05, 7.918099999999761e-05, 7.92640000000025e-05, 7.911099999999976e-05, 7.927800000000207e-05, 7.929200000000164e-05, 7.907000000000053e-05, 7.930600000000121e-05, 7.890299999999822e-05, 7.883399999999985e-05, 7.972200000000429e-05, 7.888799999999918e-05, 7.906900000000106e-05, 7.908300000000063e-05, 7.901400000000225e-05, 7.955600000000146e-05, 7.920800000000422e-05, 7.927799999999513e-05, 7.95970000000007e-05, 7.916700000000498e-05, 7.968099999999811e-05, 7.897300000000301e-05, 7.944499999999743e-05, 7.933400000000035e-05, 7.888899999999865e-05, 7.94440000000049e-05, 7.933300000000088e-05, 7.934700000000044e-05, 7.92640000000025e-05, 7.875000000000243e-05, 7.955600000000146e-05, 7.965300000000591e-05, 7.880600000000071e-05, 7.909799999999967e-05, 7.968099999999811e-05, 7.940299999999872e-05, 7.904200000000139e-05, 7.890200000000569e-05, 7.88190000000008e-05, 7.911099999999976e-05, 7.884699999999994e-05, 7.901400000000225e-05, 7.962499999999983e-05, 7.90970000000002e-05, 7.900000000000268e-05, 7.957000000000103e-05, 7.925000000000293e-05]</msg>
<status status="PASS" starttime="20201112 12:44:12.832" endtime="20201112 12:44:12.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.821" endtime="20201112 12:44:12.839"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.845" endtime="20201112 12:44:12.848"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:12.854" endtime="20201112 12:44:12.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.849" endtime="20201112 12:44:12.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.841" endtime="20201112 12:44:12.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.324" endtime="20201112 12:44:12.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.323" endtime="20201112 12:44:12.880"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.891" endtime="20201112 12:44:12.910"></status>
</kw>
<msg timestamp="20201112 12:44:12.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:12.889" endtime="20201112 12:44:12.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:12.912" endtime="20201112 12:44:12.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.915" endtime="20201112 12:44:12.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.886" endtime="20201112 12:44:12.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.883" endtime="20201112 12:44:12.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.926" endtime="20201112 12:44:13.212"></status>
</kw>
<msg timestamp="20201112 12:44:13.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029287, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029367403, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:44:12.924" endtime="20201112 12:44:13.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:13.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029287, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029367403, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:44:13.216" endtime="20201112 12:44:13.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:13.224" endtime="20201112 12:44:13.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.921" endtime="20201112 12:44:13.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.919" endtime="20201112 12:44:13.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:13.234" level="INFO">${RESULT} = [{'time': 0.029367403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.040299999999972e-05, 'source_diff': 8.040299999999972e-05}, {'time': 0.029462431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:13.229" endtime="20201112 12:44:13.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:13.247" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:13.235" endtime="20201112 12:44:13.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:13.253" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 12:44:13.251" endtime="20201112 12:44:13.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:13.255" level="INFO">VALUE: [8.040299999999972e-05, 8.045900000000147e-05, 7.987500000000008e-05, 7.991599999999932e-05, 7.983300000000138e-05, 8.058299999999866e-05, 8.051400000000028e-05, 8.056900000000256e-05, 8.030499999999927e-05, 7.981999999999781e-05, 8.061100000000126e-05, 7.984699999999748e-05, 7.980599999999824e-05, 8.009800000000067e-05, 7.995799999999803e-05, 7.97779999999991e-05, 8.06659999999966e-05, 8.006899999999859e-05, 8.026400000000003e-05, 7.97779999999991e-05, 8.016699999999904e-05, 8.059699999999823e-05, 7.998599999999717e-05, 8.033299999999494e-05, 8.024999999999699e-05, 8.002800000000282e-05, 8.054200000000289e-05, 8.036199999999355e-05, 8.051399999999681e-05, 8.019399999999871e-05, 8.054100000000342e-05, 7.999999999999674e-05, 8.051399999999681e-05, 8.045799999999853e-05, 8.051400000000375e-05, 7.99719999999976e-05, 7.994399999999846e-05, 8.023599999999742e-05, 8.037500000000058e-05, 7.995900000000444e-05, 8.048599999999767e-05, 8.005599999999502e-05, 8.045799999999853e-05, 8.002700000000335e-05, 8.073600000000486e-05, 8.073600000000486e-05, 7.991599999999932e-05, 7.99719999999976e-05, 8.023599999999742e-05, 7.972299999999682e-05]</msg>
<status status="PASS" starttime="20201112 12:44:13.254" endtime="20201112 12:44:13.256"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.248" endtime="20201112 12:44:13.257"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:13.260" endtime="20201112 12:44:13.261"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:13.264" endtime="20201112 12:44:13.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.262" endtime="20201112 12:44:13.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.258" endtime="20201112 12:44:13.285"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.881" endtime="20201112 12:44:13.285"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.881" endtime="20201112 12:44:13.285"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:13.296" endtime="20201112 12:44:13.315"></status>
</kw>
<msg timestamp="20201112 12:44:13.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:13.294" endtime="20201112 12:44:13.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:13.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:13.317" endtime="20201112 12:44:13.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:13.320" endtime="20201112 12:44:13.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.291" endtime="20201112 12:44:13.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.288" endtime="20201112 12:44:13.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:13.331" endtime="20201112 12:44:13.642"></status>
</kw>
<msg timestamp="20201112 12:44:13.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025026861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025108056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:13.329" endtime="20201112 12:44:13.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:13.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025026861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025108056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:13.652" endtime="20201112 12:44:13.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:13.671" endtime="20201112 12:44:13.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.326" endtime="20201112 12:44:13.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.324" endtime="20201112 12:44:13.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:13.693" level="INFO">${RESULT} = [{'time': 0.025108056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.119499999999918e-05, 'source_diff': 8.119499999999918e-05}, {'time': 0.025200083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:13.683" endtime="20201112 12:44:13.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:13.723" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:13.695" endtime="20201112 12:44:13.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:13.734" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 12:44:13.732" endtime="20201112 12:44:13.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:13.740" level="INFO">VALUE: [8.119499999999918e-05, 8.118000000000014e-05, 8.102700000000088e-05, 8.102799999999688e-05, 8.08329999999989e-05, 8.101400000000078e-05, 8.119399999999971e-05, 8.162499999999837e-05, 8.088900000000065e-05, 8.131999999999931e-05, 8.133399999999888e-05, 8.116600000000057e-05, 8.079199999999967e-05, 8.170799999999978e-05, 8.138800000000168e-05, 8.12910000000007e-05, 8.138900000000115e-05, 8.126400000000103e-05, 8.16529999999975e-05, 8.161100000000227e-05, 8.083300000000238e-05, 8.12780000000006e-05, 8.083300000000238e-05, 8.087500000000108e-05, 8.102800000000035e-05, 8.14170000000003e-05, 8.147299999999857e-05, 8.10130000000013e-05, 8.145799999999953e-05, 8.091600000000032e-05, 8.16390000000014e-05, 8.097200000000207e-05, 8.116700000000004e-05, 8.155599999999999e-05, 8.105599999999949e-05, 8.105599999999949e-05, 8.129200000000017e-05, 8.07780000000001e-05, 8.113899999999744e-05, 8.083399999999838e-05, 8.127700000000113e-05, 8.137499999999812e-05, 8.086100000000151e-05, 8.15970000000027e-05, 8.136100000000202e-05, 8.112500000000133e-05, 8.123599999999842e-05, 8.168100000000011e-05, 8.09169999999998e-05, 8.126400000000103e-05]</msg>
<status status="PASS" starttime="20201112 12:44:13.737" endtime="20201112 12:44:13.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.725" endtime="20201112 12:44:13.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:13.750" endtime="20201112 12:44:13.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:13.760" endtime="20201112 12:44:13.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.755" endtime="20201112 12:44:13.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.745" endtime="20201112 12:44:13.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.286" endtime="20201112 12:44:13.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.286" endtime="20201112 12:44:13.787"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:13.811" endtime="20201112 12:44:13.833"></status>
</kw>
<msg timestamp="20201112 12:44:13.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:13.807" endtime="20201112 12:44:13.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:13.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:13.836" endtime="20201112 12:44:13.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:13.842" endtime="20201112 12:44:13.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.800" endtime="20201112 12:44:13.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.794" endtime="20201112 12:44:13.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:13.866" endtime="20201112 12:44:14.208"></status>
</kw>
<msg timestamp="20201112 12:44:14.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043143319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043225903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:13.863" endtime="20201112 12:44:14.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043143319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043225903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:14.217" endtime="20201112 12:44:14.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.236" endtime="20201112 12:44:14.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.856" endtime="20201112 12:44:14.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.851" endtime="20201112 12:44:14.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:14.256" level="INFO">${RESULT} = [{'time': 0.043225903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.25840000000036e-05, 'source_diff': 8.25840000000036e-05}, {'time': 0.043319931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:44:14.246" endtime="20201112 12:44:14.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:14.288" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:14.258" endtime="20201112 12:44:14.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.299" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 12:44:14.297" endtime="20201112 12:44:14.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.305" level="INFO">VALUE: [8.25840000000036e-05, 8.219500000000018e-05, 8.213899999999497e-05, 8.255599999999752e-05, 8.190199999999481e-05, 8.183300000000338e-05, 8.193000000000089e-05, 8.205499999999755e-05, 8.263899999999547e-05, 8.181899999999687e-05, 8.19170000000008e-05, 8.190300000000122e-05, 8.204199999999745e-05, 8.174999999999849e-05, 8.213899999999497e-05, 8.255600000000446e-05, 8.211099999999583e-05, 8.265199999999556e-05, 8.234700000000345e-05, 8.187499999999515e-05, 8.273599999999992e-05, 8.209699999999626e-05, 8.26390000000024e-05, 8.245800000000053e-05, 8.223599999999942e-05, 8.1764000000005e-05, 8.174999999999849e-05, 8.184800000000242e-05, 8.193100000000036e-05, 8.190300000000122e-05, 8.266600000000207e-05, 8.205499999999755e-05, 8.268000000000164e-05, 8.236100000000302e-05, 8.187500000000208e-05, 8.261099999999633e-05, 8.202799999999788e-05, 8.201400000000525e-05, 8.268100000000111e-05, 8.174999999999849e-05, 8.195800000000003e-05, 8.219400000000071e-05, 8.219500000000018e-05, 8.24170000000013e-05, 8.219400000000071e-05, 8.183300000000338e-05, 8.199999999999874e-05, 8.269500000000068e-05, 8.224999999999899e-05, 8.255599999999752e-05]</msg>
<status status="PASS" starttime="20201112 12:44:14.301" endtime="20201112 12:44:14.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.290" endtime="20201112 12:44:14.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.314" endtime="20201112 12:44:14.317"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:14.323" endtime="20201112 12:44:14.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.318" endtime="20201112 12:44:14.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.310" endtime="20201112 12:44:14.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.790" endtime="20201112 12:44:14.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.788" endtime="20201112 12:44:14.349"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.373" endtime="20201112 12:44:14.395"></status>
</kw>
<msg timestamp="20201112 12:44:14.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:14.369" endtime="20201112 12:44:14.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:14.398" endtime="20201112 12:44:14.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.405" endtime="20201112 12:44:14.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.361" endtime="20201112 12:44:14.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.355" endtime="20201112 12:44:14.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.429" endtime="20201112 12:44:14.768"></status>
</kw>
<msg timestamp="20201112 12:44:14.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043627097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043710611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:14.425" endtime="20201112 12:44:14.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043627097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043710611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:14.777" endtime="20201112 12:44:14.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.797" endtime="20201112 12:44:14.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.418" endtime="20201112 12:44:14.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.413" endtime="20201112 12:44:14.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:14.817" level="INFO">${RESULT} = [{'time': 0.043710611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.351400000000675e-05, 'source_diff': 8.351400000000675e-05}, {'time': 0.043807625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:14.808" endtime="20201112 12:44:14.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:14.848" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:14.819" endtime="20201112 12:44:14.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.860" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 12:44:14.857" endtime="20201112 12:44:14.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.865" level="INFO">VALUE: [8.351400000000675e-05, 8.308300000000463e-05, 8.322200000000085e-05, 8.36390000000034e-05, 8.29590000000005e-05, 8.288899999999572e-05, 8.36390000000034e-05, 8.32919999999987e-05, 8.327699999999966e-05, 8.338899999999622e-05, 8.36669999999956e-05, 8.362500000000384e-05, 8.31390000000029e-05, 8.320800000000128e-05, 8.316700000000204e-05, 8.351399999999981e-05, 8.348600000000067e-05, 8.31249999999964e-05, 8.365300000000297e-05, 8.305500000000549e-05, 8.330500000000574e-05, 8.2846999999997e-05, 8.277799999999863e-05, 8.304199999999845e-05, 8.352799999999938e-05, 8.366700000000254e-05, 8.318100000000161e-05, 8.356999999999809e-05, 8.324999999999999e-05, 8.29170000000018e-05, 8.290299999999529e-05, 8.343000000000239e-05, 8.375000000000049e-05, 8.329099999999923e-05, 8.280599999999777e-05, 8.359699999999776e-05, 8.2846999999997e-05, 8.313899999999597e-05, 8.344500000000143e-05, 8.309699999999726e-05, 8.36249999999969e-05, 8.274999999999949e-05, 8.304199999999845e-05, 8.2764000000006e-05, 8.276399999999906e-05, 8.30970000000042e-05, 8.369399999999527e-05, 8.355599999999852e-05, 8.298600000000017e-05, 8.305499999999855e-05]</msg>
<status status="PASS" starttime="20201112 12:44:14.862" endtime="20201112 12:44:14.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.850" endtime="20201112 12:44:14.873"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.879" endtime="20201112 12:44:14.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:14.888" endtime="20201112 12:44:14.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.884" endtime="20201112 12:44:14.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.875" endtime="20201112 12:44:14.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.351" endtime="20201112 12:44:14.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.350" endtime="20201112 12:44:14.914"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.937" endtime="20201112 12:44:14.959"></status>
</kw>
<msg timestamp="20201112 12:44:14.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:14.934" endtime="20201112 12:44:14.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:14.963" endtime="20201112 12:44:14.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.969" endtime="20201112 12:44:14.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.927" endtime="20201112 12:44:14.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.921" endtime="20201112 12:44:14.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.993" endtime="20201112 12:44:15.333"></status>
</kw>
<msg timestamp="20201112 12:44:15.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042950681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043034458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:14.990" endtime="20201112 12:44:15.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042950681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043034458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:15.343" endtime="20201112 12:44:15.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.362" endtime="20201112 12:44:15.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.982" endtime="20201112 12:44:15.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.977" endtime="20201112 12:44:15.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:15.381" level="INFO">${RESULT} = [{'time': 0.043034458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.377700000000016e-05, 'source_diff': 8.377700000000016e-05}, {'time': 0.043133472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:15.372" endtime="20201112 12:44:15.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:15.412" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:15.383" endtime="20201112 12:44:15.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.423" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 12:44:15.421" endtime="20201112 12:44:15.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.429" level="INFO">VALUE: [8.377700000000016e-05, 8.386099999999758e-05, 8.455500000000005e-05, 8.463899999999747e-05, 8.43469999999985e-05, 8.3846999999998e-05, 8.400000000000074e-05, 8.390199999999681e-05, 8.426400000000056e-05, 8.39170000000028e-05, 8.422300000000132e-05, 8.443100000000286e-05, 8.405499999999955e-05, 8.469399999999627e-05, 8.387499999999715e-05, 8.455500000000005e-05, 8.394500000000193e-05, 8.377799999999963e-05, 8.436099999999808e-05, 8.45970000000057e-05, 8.387499999999715e-05, 8.44720000000021e-05, 8.375000000000049e-05, 8.459799999999823e-05, 8.415199999999706e-05, 8.419399999999577e-05, 8.466600000000407e-05, 8.455500000000005e-05, 8.451400000000081e-05, 8.380500000000624e-05, 8.430599999999927e-05, 8.437499999999765e-05, 8.413899999999697e-05, 8.413899999999697e-05, 8.376400000000006e-05, 8.411099999999783e-05, 8.433399999999841e-05, 8.40970000000052e-05, 8.386099999999758e-05, 8.416599999999663e-05, 8.370800000000178e-05, 8.392999999999595e-05, 8.42919999999997e-05, 8.457000000000603e-05, 8.429100000000023e-05, 8.423600000000142e-05, 8.373600000000092e-05, 8.438899999999722e-05, 8.402799999999988e-05, 8.384700000000495e-05]</msg>
<status status="PASS" starttime="20201112 12:44:15.426" endtime="20201112 12:44:15.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.414" endtime="20201112 12:44:15.432"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.439" endtime="20201112 12:44:15.441"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:15.447" endtime="20201112 12:44:15.469"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.443" endtime="20201112 12:44:15.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.434" endtime="20201112 12:44:15.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.916" endtime="20201112 12:44:15.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.915" endtime="20201112 12:44:15.473"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.497" endtime="20201112 12:44:15.518"></status>
</kw>
<msg timestamp="20201112 12:44:15.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:15.493" endtime="20201112 12:44:15.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:15.522" endtime="20201112 12:44:15.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.528" endtime="20201112 12:44:15.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.486" endtime="20201112 12:44:15.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.480" endtime="20201112 12:44:15.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.552" endtime="20201112 12:44:15.890"></status>
</kw>
<msg timestamp="20201112 12:44:15.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043001361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043086639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:15.549" endtime="20201112 12:44:15.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043001361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043086639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:15.899" endtime="20201112 12:44:15.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.918" endtime="20201112 12:44:15.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.542" endtime="20201112 12:44:15.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.537" endtime="20201112 12:44:15.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:15.940" level="INFO">${RESULT} = [{'time': 0.043086639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.527800000000113e-05, 'source_diff': 8.527800000000113e-05}, {'time': 0.043178611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:15.931" endtime="20201112 12:44:15.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:15.970" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:15.942" endtime="20201112 12:44:15.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.982" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 12:44:15.979" endtime="20201112 12:44:15.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.987" level="INFO">VALUE: [8.527800000000113e-05, 8.495799999999609e-05, 8.473600000000192e-05, 8.518099999999668e-05, 8.555600000000052e-05, 8.481999999999934e-05, 8.476399999999412e-05, 8.51669999999971e-05, 8.520800000000328e-05, 8.540299999999779e-05, 8.545800000000353e-05, 8.483299999999944e-05, 8.498600000000217e-05, 8.502800000000088e-05, 8.487499999999815e-05, 8.551400000000181e-05, 8.559699999999976e-05, 8.51249999999984e-05, 8.494400000000346e-05, 8.506900000000012e-05, 8.56799999999977e-05, 8.527800000000113e-05, 8.51249999999984e-05, 8.491699999999686e-05, 8.48050000000003e-05, 8.522199999999591e-05, 8.51390000000049e-05, 8.540299999999779e-05, 8.543099999999693e-05, 8.558399999999966e-05, 8.568099999999718e-05, 8.52920000000007e-05, 8.554200000000095e-05, 8.48050000000003e-05, 8.525000000000199e-05, 8.524999999999505e-05, 8.566600000000507e-05, 8.559699999999976e-05, 8.502800000000088e-05, 8.548600000000267e-05, 8.572200000000335e-05, 8.490299999999729e-05, 8.525000000000199e-05, 8.470900000000225e-05, 8.554200000000095e-05, 8.533299999999994e-05, 8.53469999999995e-05, 8.527700000000166e-05, 8.476400000000106e-05, 8.504200000000045e-05]</msg>
<status status="PASS" starttime="20201112 12:44:15.984" endtime="20201112 12:44:15.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.972" endtime="20201112 12:44:15.990"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.997" endtime="20201112 12:44:16.000"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:16.006" endtime="20201112 12:44:16.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.001" endtime="20201112 12:44:16.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.992" endtime="20201112 12:44:16.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.476" endtime="20201112 12:44:16.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.474" endtime="20201112 12:44:16.032"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:16.055" endtime="20201112 12:44:16.077"></status>
</kw>
<msg timestamp="20201112 12:44:16.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:16.052" endtime="20201112 12:44:16.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:16.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:16.081" endtime="20201112 12:44:16.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:16.087" endtime="20201112 12:44:16.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.044" endtime="20201112 12:44:16.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.038" endtime="20201112 12:44:16.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:16.111" endtime="20201112 12:44:16.448"></status>
</kw>
<msg timestamp="20201112 12:44:16.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042885681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042972361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:16.107" endtime="20201112 12:44:16.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:16.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042885681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042972361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:16.458" endtime="20201112 12:44:16.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:16.477" endtime="20201112 12:44:16.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.100" endtime="20201112 12:44:16.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.095" endtime="20201112 12:44:16.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:16.496" level="INFO">${RESULT} = [{'time': 0.042972361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.66799999999987e-05, 'source_diff': 8.66799999999987e-05}, {'time': 0.043073417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:44:16.487" endtime="20201112 12:44:16.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:16.527" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:16.498" endtime="20201112 12:44:16.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:16.538" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 12:44:16.536" endtime="20201112 12:44:16.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:16.544" level="INFO">VALUE: [8.66799999999987e-05, 8.588900000000566e-05, 8.668099999999818e-05, 8.622299999999639e-05, 8.602799999999494e-05, 8.586199999999905e-05, 8.609799999999973e-05, 8.642999999999845e-05, 8.616700000000505e-05, 8.661100000000033e-05, 8.622199999999691e-05, 8.619399999999777e-05, 8.620800000000428e-05, 8.5847e-05, 8.64999999999963e-05, 8.632000000000084e-05, 8.623600000000342e-05, 8.576400000000206e-05, 8.63050000000018e-05, 8.631900000000137e-05, 8.591600000000532e-05, 8.638899999999922e-05, 8.577799999999469e-05, 8.584799999999948e-05, 8.652800000000238e-05, 8.640300000000573e-05, 8.651399999999587e-05, 8.583399999999991e-05, 8.661100000000033e-05, 8.643099999999793e-05, 8.629100000000223e-05, 8.650000000000324e-05, 8.5847e-05, 8.659700000000076e-05, 8.645799999999759e-05, 8.574999999999555e-05, 8.622199999999691e-05, 8.633300000000094e-05, 8.600000000000274e-05, 8.622199999999691e-05, 8.665299999999904e-05, 8.627700000000266e-05, 8.59999999999958e-05, 8.66669999999986e-05, 8.618000000000514e-05, 8.673599999999698e-05, 8.66799999999987e-05, 8.638899999999922e-05, 8.590299999999829e-05, 8.661100000000033e-05]</msg>
<status status="PASS" starttime="20201112 12:44:16.541" endtime="20201112 12:44:16.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.529" endtime="20201112 12:44:16.547"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:16.554" endtime="20201112 12:44:16.556"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:16.562" endtime="20201112 12:44:16.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.557" endtime="20201112 12:44:16.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.549" endtime="20201112 12:44:16.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.034" endtime="20201112 12:44:16.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.033" endtime="20201112 12:44:16.588"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:16.611" endtime="20201112 12:44:16.633"></status>
</kw>
<msg timestamp="20201112 12:44:16.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:16.608" endtime="20201112 12:44:16.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:16.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:16.637" endtime="20201112 12:44:16.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:16.643" endtime="20201112 12:44:16.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.600" endtime="20201112 12:44:16.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.595" endtime="20201112 12:44:16.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:16.667" endtime="20201112 12:44:17.006"></status>
</kw>
<msg timestamp="20201112 12:44:17.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042644972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042732639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:16.664" endtime="20201112 12:44:17.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042644972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042732639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:17.015" endtime="20201112 12:44:17.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.034" endtime="20201112 12:44:17.040"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.656" endtime="20201112 12:44:17.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.651" endtime="20201112 12:44:17.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:17.054" level="INFO">${RESULT} = [{'time': 0.042732639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.76669999999996e-05, 'source_diff': 8.76669999999996e-05}, {'time': 0.042828736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:44:17.044" endtime="20201112 12:44:17.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:17.085" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:17.056" endtime="20201112 12:44:17.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.096" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 12:44:17.094" endtime="20201112 12:44:17.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.101" level="INFO">VALUE: [8.76669999999996e-05, 8.71669999999991e-05, 8.715299999999954e-05, 8.752799999999644e-05, 8.676399999999612e-05, 8.694399999999852e-05, 8.769399999999927e-05, 8.716599999999963e-05, 8.705499999999561e-05, 8.751399999999687e-05, 8.683300000000144e-05, 8.748599999999773e-05, 8.704200000000245e-05, 8.682000000000134e-05, 8.741699999999936e-05, 8.709800000000073e-05, 8.723599999999748e-05, 8.697199999999766e-05, 8.686100000000058e-05, 8.747199999999816e-05, 8.691599999999938e-05, 8.694399999999852e-05, 8.730599999999533e-05, 8.727800000000313e-05, 8.679199999999526e-05, 8.743099999999893e-05, 8.71250000000004e-05, 8.770899999999832e-05, 8.761100000000133e-05, 8.769399999999927e-05, 8.758400000000166e-05, 8.680499999999536e-05, 8.705499999999561e-05, 8.676400000000306e-05, 8.748599999999773e-05, 8.687500000000015e-05, 8.752800000000338e-05, 8.707000000000159e-05, 8.751399999999687e-05, 8.751399999999687e-05, 8.67920000000022e-05, 8.754100000000348e-05, 8.709700000000126e-05, 8.729099999999629e-05, 8.73470000000015e-05, 8.676399999999612e-05, 8.747199999999816e-05, 8.706900000000212e-05, 8.726399999999662e-05, 8.722199999999791e-05]</msg>
<status status="PASS" starttime="20201112 12:44:17.098" endtime="20201112 12:44:17.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.087" endtime="20201112 12:44:17.105"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.111" endtime="20201112 12:44:17.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:17.120" endtime="20201112 12:44:17.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.115" endtime="20201112 12:44:17.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.106" endtime="20201112 12:44:17.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.590" endtime="20201112 12:44:17.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.589" endtime="20201112 12:44:17.146"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.169" endtime="20201112 12:44:17.191"></status>
</kw>
<msg timestamp="20201112 12:44:17.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:17.166" endtime="20201112 12:44:17.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:17.195" endtime="20201112 12:44:17.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.201" endtime="20201112 12:44:17.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.158" endtime="20201112 12:44:17.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.152" endtime="20201112 12:44:17.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.225" endtime="20201112 12:44:17.555"></status>
</kw>
<msg timestamp="20201112 12:44:17.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042752778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042840972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:17.221" endtime="20201112 12:44:17.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042752778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042840972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:17.560" endtime="20201112 12:44:17.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.568" endtime="20201112 12:44:17.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.214" endtime="20201112 12:44:17.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.209" endtime="20201112 12:44:17.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:17.577" level="INFO">${RESULT} = [{'time': 0.042840972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.819399999999977e-05, 'source_diff': 8.819399999999977e-05}, {'time': 0.042937972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:17.573" endtime="20201112 12:44:17.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:17.591" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:17.578" endtime="20201112 12:44:17.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.596" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 12:44:17.595" endtime="20201112 12:44:17.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.599" level="INFO">VALUE: [8.819399999999977e-05, 8.827799999999719e-05, 8.773599999999798e-05, 8.822199999999891e-05, 8.795799999999909e-05, 8.826400000000456e-05, 8.822199999999891e-05, 8.840300000000079e-05, 8.870799999999984e-05, 8.77920000000032e-05, 8.83050000000038e-05, 8.843099999999993e-05, 8.804099999999704e-05, 8.834700000000251e-05, 8.834699999999557e-05, 8.84449999999995e-05, 8.813900000000097e-05, 8.802799999999694e-05, 8.782000000000234e-05, 8.844400000000002e-05, 8.783400000000191e-05, 8.81529999999936e-05, 8.804100000000398e-05, 8.870799999999984e-05, 8.79999999999978e-05, 8.847199999999916e-05, 8.808299999999575e-05, 8.813900000000097e-05, 8.784700000000201e-05, 8.865300000000104e-05, 8.838900000000122e-05, 8.794500000000594e-05, 8.836200000000155e-05, 8.792999999999995e-05, 8.797199999999866e-05, 8.829100000000423e-05, 8.786100000000158e-05, 8.827800000000413e-05, 8.805499999999661e-05, 8.797199999999866e-05, 8.786100000000158e-05, 8.79720000000056e-05, 8.81250000000014e-05, 8.859700000000276e-05, 8.815200000000106e-05, 8.787500000000115e-05, 8.826400000000456e-05, 8.809700000000226e-05, 8.777799999999669e-05, 8.86250000000019e-05]</msg>
<status status="PASS" starttime="20201112 12:44:17.597" endtime="20201112 12:44:17.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.592" endtime="20201112 12:44:17.600"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.603" endtime="20201112 12:44:17.605"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:17.607" endtime="20201112 12:44:17.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.605" endtime="20201112 12:44:17.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.601" endtime="20201112 12:44:17.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.148" endtime="20201112 12:44:17.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.147" endtime="20201112 12:44:17.629"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.640" endtime="20201112 12:44:17.659"></status>
</kw>
<msg timestamp="20201112 12:44:17.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:17.638" endtime="20201112 12:44:17.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:17.660" endtime="20201112 12:44:17.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.663" endtime="20201112 12:44:17.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.635" endtime="20201112 12:44:17.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.632" endtime="20201112 12:44:17.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.674" endtime="20201112 12:44:17.966"></status>
</kw>
<msg timestamp="20201112 12:44:17.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025402194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025491819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:17.673" endtime="20201112 12:44:17.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025402194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025491819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:17.976" endtime="20201112 12:44:17.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.995" endtime="20201112 12:44:18.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.669" endtime="20201112 12:44:18.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.667" endtime="20201112 12:44:18.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:18.016" level="INFO">${RESULT} = [{'time': 0.025491819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.962499999999943e-05, 'source_diff': 8.962499999999943e-05}, {'time': 0.025584833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:18.007" endtime="20201112 12:44:18.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:18.047" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:18.018" endtime="20201112 12:44:18.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:18.058" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 12:44:18.056" endtime="20201112 12:44:18.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:18.063" level="INFO">VALUE: [8.962499999999943e-05, 8.909699999999979e-05, 8.936099999999961e-05, 8.922199999999991e-05, 8.925000000000252e-05, 8.938900000000222e-05, 8.893099999999696e-05, 8.922200000000338e-05, 8.905600000000055e-05, 8.923699999999896e-05, 8.973599999999998e-05, 8.893000000000095e-05, 8.898599999999923e-05, 8.892999999999748e-05, 8.948599999999973e-05, 8.920800000000034e-05, 8.966699999999814e-05, 8.933300000000047e-05, 8.884699999999954e-05, 8.947200000000016e-05, 8.968100000000118e-05, 8.969500000000075e-05, 8.901399999999837e-05, 8.956900000000115e-05, 8.890199999999834e-05, 8.892999999999748e-05, 8.940300000000179e-05, 8.9332999999997e-05, 8.897199999999966e-05, 8.929200000000123e-05, 8.891600000000138e-05, 8.91389999999985e-05, 8.954199999999801e-05, 8.874999999999855e-05, 8.948599999999973e-05, 8.929100000000176e-05, 8.970799999999737e-05, 8.969400000000127e-05, 8.909699999999979e-05, 8.876399999999812e-05, 8.911099999999936e-05, 8.934700000000004e-05, 8.891700000000086e-05, 8.898599999999923e-05, 8.920899999999982e-05, 8.932000000000037e-05, 8.969400000000127e-05, 8.930500000000133e-05, 8.908300000000022e-05, 8.933300000000047e-05]</msg>
<status status="PASS" starttime="20201112 12:44:18.060" endtime="20201112 12:44:18.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.049" endtime="20201112 12:44:18.067"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:18.073" endtime="20201112 12:44:18.076"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:18.082" endtime="20201112 12:44:18.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.077" endtime="20201112 12:44:18.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.068" endtime="20201112 12:44:18.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.630" endtime="20201112 12:44:18.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.629" endtime="20201112 12:44:18.108"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:18.131" endtime="20201112 12:44:18.153"></status>
</kw>
<msg timestamp="20201112 12:44:18.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:18.128" endtime="20201112 12:44:18.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:18.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:18.157" endtime="20201112 12:44:18.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:18.163" endtime="20201112 12:44:18.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.120" endtime="20201112 12:44:18.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.114" endtime="20201112 12:44:18.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:18.187" endtime="20201112 12:44:18.526"></status>
</kw>
<msg timestamp="20201112 12:44:18.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043075556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043165556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:18.184" endtime="20201112 12:44:18.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:18.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043075556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043165556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:18.536" endtime="20201112 12:44:18.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:18.555" endtime="20201112 12:44:18.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.176" endtime="20201112 12:44:18.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.172" endtime="20201112 12:44:18.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:18.574" level="INFO">${RESULT} = [{'time': 0.043165556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.99999999999998e-05, 'source_diff': 8.99999999999998e-05}, {'time': 0.043261583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:44:18.565" endtime="20201112 12:44:18.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:18.605" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:18.576" endtime="20201112 12:44:18.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:18.616" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 12:44:18.614" endtime="20201112 12:44:18.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:18.621" level="INFO">VALUE: [8.99999999999998e-05, 9.06659999999962e-05, 8.993000000000195e-05, 9.013799999999655e-05, 9.034700000000451e-05, 9.055499999999911e-05, 9.06670000000026e-05, 9.055499999999911e-05, 9.063900000000347e-05, 9.030599999999833e-05, 8.986099999999664e-05, 9.033399999999747e-05, 9.058400000000466e-05, 9.033400000000441e-05, 9.013799999999655e-05, 9.006899999999818e-05, 9.052799999999944e-05, 9.05000000000003e-05, 8.986100000000358e-05, 8.99869999999997e-05, 9.072200000000141e-05, 9.025000000000005e-05, 9.013900000000297e-05, 9.01670000000021e-05, 9.041699999999542e-05, 9.022300000000039e-05, 9.067999999999576e-05, 8.98329999999975e-05, 8.995800000000109e-05, 8.981899999999793e-05, 8.972200000000041e-05, 9.054199999999901e-05, 8.976399999999912e-05, 9.070800000000184e-05, 9.013900000000297e-05, 9.051399999999987e-05, 9.001399999999937e-05, 9.004200000000545e-05, 9.027699999999972e-05, 9.013900000000297e-05, 9.005499999999861e-05, 8.983300000000444e-05, 9.032000000000484e-05, 9.048600000000073e-05, 8.98329999999975e-05, 9.063900000000347e-05, 9.057000000000509e-05, 9.045800000000159e-05, 9.036100000000408e-05, 8.99999999999998e-05]</msg>
<status status="PASS" starttime="20201112 12:44:18.618" endtime="20201112 12:44:18.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.607" endtime="20201112 12:44:18.624"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:18.631" endtime="20201112 12:44:18.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:18.639" endtime="20201112 12:44:18.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.635" endtime="20201112 12:44:18.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.626" endtime="20201112 12:44:18.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.110" endtime="20201112 12:44:18.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.109" endtime="20201112 12:44:18.665"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:18.689" endtime="20201112 12:44:18.711"></status>
</kw>
<msg timestamp="20201112 12:44:18.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:18.685" endtime="20201112 12:44:18.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:18.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:18.715" endtime="20201112 12:44:18.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:18.721" endtime="20201112 12:44:18.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.678" endtime="20201112 12:44:18.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.672" endtime="20201112 12:44:18.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:18.745" endtime="20201112 12:44:19.085"></status>
</kw>
<msg timestamp="20201112 12:44:19.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042806833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042897889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:18.741" endtime="20201112 12:44:19.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042806833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042897889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:19.094" endtime="20201112 12:44:19.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.113" endtime="20201112 12:44:19.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.734" endtime="20201112 12:44:19.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.729" endtime="20201112 12:44:19.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:19.132" level="INFO">${RESULT} = [{'time': 0.042897889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.105599999999908e-05, 'source_diff': 9.105599999999908e-05}, {'time': 0.042997903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:19.123" endtime="20201112 12:44:19.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:19.163" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:19.134" endtime="20201112 12:44:19.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.174" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 12:44:19.172" endtime="20201112 12:44:19.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.180" level="INFO">VALUE: [9.105599999999908e-05, 9.090299999999635e-05, 9.158400000000566e-05, 9.07920000000062e-05, 9.115300000000354e-05, 9.16800000000037e-05, 9.08329999999985e-05, 9.149999999999436e-05, 9.072199999999447e-05, 9.091600000000338e-05, 9.163899999999753e-05, 9.156999999999915e-05, 9.104199999999951e-05, 9.091700000000286e-05, 9.105599999999908e-05, 9.088900000000372e-05, 9.147200000000216e-05, 9.076400000000012e-05, 9.105499999999961e-05, 9.087499999999721e-05, 9.108299999999875e-05, 9.140300000000379e-05, 9.129199999999976e-05, 9.130599999999933e-05, 9.130599999999933e-05, 9.141699999999642e-05, 9.109799999999779e-05, 9.086199999999711e-05, 9.130599999999933e-05, 9.095799999999515e-05, 9.087500000000415e-05, 9.087499999999721e-05, 9.088900000000372e-05, 9.105599999999908e-05, 9.134700000000551e-05, 9.095800000000209e-05, 9.091700000000286e-05, 9.111100000000483e-05, 9.115300000000354e-05, 9.11670000000031e-05, 9.127800000000019e-05, 9.145800000000259e-05, 9.117999999999626e-05, 9.072200000000141e-05, 9.073600000000098e-05, 9.169399999999633e-05, 9.094499999999506e-05, 9.077799999999969e-05, 9.072200000000141e-05, 9.091599999999644e-05]</msg>
<status status="PASS" starttime="20201112 12:44:19.177" endtime="20201112 12:44:19.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.165" endtime="20201112 12:44:19.183"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.190" endtime="20201112 12:44:19.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:19.198" endtime="20201112 12:44:19.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.194" endtime="20201112 12:44:19.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.185" endtime="20201112 12:44:19.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.668" endtime="20201112 12:44:19.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.666" endtime="20201112 12:44:19.224"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.247" endtime="20201112 12:44:19.270"></status>
</kw>
<msg timestamp="20201112 12:44:19.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:19.244" endtime="20201112 12:44:19.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:19.273" endtime="20201112 12:44:19.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.280" endtime="20201112 12:44:19.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.237" endtime="20201112 12:44:19.285"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.231" endtime="20201112 12:44:19.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.304" endtime="20201112 12:44:19.643"></status>
</kw>
<msg timestamp="20201112 12:44:19.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042853764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042946389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:19.300" endtime="20201112 12:44:19.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042853764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042946389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:19.653" endtime="20201112 12:44:19.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.672" endtime="20201112 12:44:19.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.293" endtime="20201112 12:44:19.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.288" endtime="20201112 12:44:19.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:19.691" level="INFO">${RESULT} = [{'time': 0.042946389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.262499999999896e-05, 'source_diff': 9.262499999999896e-05}, {'time': 0.043043403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:19.682" endtime="20201112 12:44:19.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:19.722" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:19.693" endtime="20201112 12:44:19.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.733" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 12:44:19.731" endtime="20201112 12:44:19.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.739" level="INFO">VALUE: [9.262499999999896e-05, 9.226400000000162e-05, 9.261099999999939e-05, 9.1945000000003e-05, 9.187499999999821e-05, 9.241699999999742e-05, 9.25130000000024e-05, 9.191700000000386e-05, 9.238899999999828e-05, 9.21659999999977e-05, 9.179200000000026e-05, 9.21670000000041e-05, 9.188899999999778e-05, 9.248600000000273e-05, 9.269500000000375e-05, 9.236199999999861e-05, 9.243099999999699e-05, 9.206900000000018e-05, 9.177800000000069e-05, 9.252700000000197e-05, 9.179100000000079e-05, 9.267999999999776e-05, 9.238899999999828e-05, 9.204200000000051e-05, 9.234699999999957e-05, 9.186099999999864e-05, 9.266699999999767e-05, 9.255600000000058e-05, 9.254199999999407e-05, 9.184699999999907e-05, 9.254100000000154e-05, 9.193000000000395e-05, 9.241599999999794e-05, 9.208299999999975e-05, 9.251400000000187e-05, 9.25000000000023e-05, 9.213900000000497e-05, 9.186099999999864e-05, 9.269500000000375e-05, 9.248600000000273e-05, 9.265199999999862e-05, 9.230500000000086e-05, 9.247199999999622e-05, 9.231900000000043e-05, 9.205600000000008e-05, 9.23199999999999e-05, 9.213899999999803e-05, 9.26529999999981e-05, 9.234699999999957e-05, 9.213899999999803e-05]</msg>
<status status="PASS" starttime="20201112 12:44:19.736" endtime="20201112 12:44:19.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.724" endtime="20201112 12:44:19.742"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.749" endtime="20201112 12:44:19.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:19.757" endtime="20201112 12:44:19.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.753" endtime="20201112 12:44:19.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.744" endtime="20201112 12:44:19.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.226" endtime="20201112 12:44:19.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.225" endtime="20201112 12:44:19.783"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.806" endtime="20201112 12:44:19.829"></status>
</kw>
<msg timestamp="20201112 12:44:19.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:19.803" endtime="20201112 12:44:19.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:19.832" endtime="20201112 12:44:19.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.838" endtime="20201112 12:44:19.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.796" endtime="20201112 12:44:19.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.790" endtime="20201112 12:44:19.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.862" endtime="20201112 12:44:20.200"></status>
</kw>
<msg timestamp="20201112 12:44:20.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042647056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042740472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:19.859" endtime="20201112 12:44:20.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042647056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042740472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:20.209" endtime="20201112 12:44:20.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.228" endtime="20201112 12:44:20.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.852" endtime="20201112 12:44:20.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.847" endtime="20201112 12:44:20.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:20.249" level="INFO">${RESULT} = [{'time': 0.042740472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.341599999999894e-05, 'source_diff': 9.341599999999894e-05}, {'time': 0.0428485, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:44:20.241" endtime="20201112 12:44:20.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:20.280" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:20.252" endtime="20201112 12:44:20.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.291" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 12:44:20.289" endtime="20201112 12:44:20.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.297" level="INFO">VALUE: [9.341599999999894e-05, 9.326399999999568e-05, 9.374999999999661e-05, 9.337499999999971e-05, 9.293099999999749e-05, 9.325000000000305e-05, 9.294499999999706e-05, 9.348600000000373e-05, 9.363899999999953e-05, 9.286099999999964e-05, 9.37079999999979e-05, 9.338899999999928e-05, 9.376399999999618e-05, 9.373599999999704e-05, 9.279199999999432e-05, 9.338899999999928e-05, 9.293099999999749e-05, 9.368099999999824e-05, 9.368100000000518e-05, 9.340199999999937e-05, 9.344399999999808e-05, 9.301400000000237e-05, 9.274999999999561e-05, 9.325000000000305e-05, 9.336100000000014e-05, 9.373599999999704e-05, 9.309700000000032e-05, 9.304200000000151e-05, 9.316699999999817e-05, 9.342999999999851e-05, 9.306900000000118e-05, 9.317999999999826e-05, 9.317999999999826e-05, 9.35279999999955e-05, 9.292999999999801e-05, 9.372199999999747e-05, 9.308300000000075e-05, 9.322199999999697e-05, 9.347200000000416e-05, 9.323599999999654e-05, 9.361199999999986e-05, 9.326400000000262e-05, 9.295900000000357e-05, 9.284700000000007e-05, 9.313899999999903e-05, 9.297200000000366e-05, 9.305500000000161e-05, 9.336100000000014e-05, 9.293099999999749e-05, 9.307000000000065e-05]</msg>
<status status="PASS" starttime="20201112 12:44:20.294" endtime="20201112 12:44:20.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.282" endtime="20201112 12:44:20.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.311" endtime="20201112 12:44:20.313"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:20.319" endtime="20201112 12:44:20.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.315" endtime="20201112 12:44:20.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.306" endtime="20201112 12:44:20.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.785" endtime="20201112 12:44:20.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.784" endtime="20201112 12:44:20.345"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.368" endtime="20201112 12:44:20.391"></status>
</kw>
<msg timestamp="20201112 12:44:20.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:20.365" endtime="20201112 12:44:20.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:20.394" endtime="20201112 12:44:20.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.400" endtime="20201112 12:44:20.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.357" endtime="20201112 12:44:20.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.352" endtime="20201112 12:44:20.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.424" endtime="20201112 12:44:20.763"></status>
</kw>
<msg timestamp="20201112 12:44:20.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042763375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042857903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:20.421" endtime="20201112 12:44:20.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042763375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042857903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:20.773" endtime="20201112 12:44:20.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.792" endtime="20201112 12:44:20.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.413" endtime="20201112 12:44:20.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.409" endtime="20201112 12:44:20.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:20.811" level="INFO">${RESULT} = [{'time': 0.042857903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.452800000000344e-05, 'source_diff': 9.452800000000344e-05}, {'time': 0.042966917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:20.802" endtime="20201112 12:44:20.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:20.842" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:20.813" endtime="20201112 12:44:20.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.853" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 12:44:20.851" endtime="20201112 12:44:20.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.858" level="INFO">VALUE: [9.452800000000344e-05, 9.405600000000208e-05, 9.45000000000043e-05, 9.461099999999445e-05, 9.44859999999978e-05, 9.472199999999847e-05, 9.408300000000175e-05, 9.392999999999901e-05, 9.426399999999668e-05, 9.47079999999989e-05, 9.381999999999446e-05, 9.409700000000132e-05, 9.397300000000414e-05, 9.39729999999972e-05, 9.441599999999994e-05, 9.397199999999772e-05, 9.424999999999711e-05, 9.458300000000225e-05, 9.376399999999618e-05, 9.427800000000319e-05, 9.416700000000611e-05, 9.461100000000139e-05, 9.386100000000064e-05, 9.466699999999967e-05, 9.411100000000089e-05, 9.454200000000301e-05, 9.454100000000354e-05, 9.397200000000466e-05, 9.451400000000387e-05, 9.42079999999984e-05, 9.449999999999736e-05, 9.380600000000183e-05, 9.416699999999917e-05, 9.462500000000096e-05, 9.447300000000464e-05, 9.455599999999564e-05, 9.463900000000053e-05, 9.413800000000055e-05, 9.388899999999978e-05, 9.42079999999984e-05, 9.401399999999643e-05, 9.449999999999736e-05, 9.387500000000021e-05, 9.47079999999989e-05, 9.379199999999532e-05, 9.449999999999736e-05, 9.447300000000464e-05, 9.43200000000019e-05, 9.402700000000347e-05, 9.459699999999488e-05]</msg>
<status status="PASS" starttime="20201112 12:44:20.855" endtime="20201112 12:44:20.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.844" endtime="20201112 12:44:20.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.868" endtime="20201112 12:44:20.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:20.877" endtime="20201112 12:44:20.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.872" endtime="20201112 12:44:20.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.863" endtime="20201112 12:44:20.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.347" endtime="20201112 12:44:20.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.346" endtime="20201112 12:44:20.903"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.926" endtime="20201112 12:44:20.948"></status>
</kw>
<msg timestamp="20201112 12:44:20.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:20.922" endtime="20201112 12:44:20.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:20.952" endtime="20201112 12:44:20.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.958" endtime="20201112 12:44:20.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.915" endtime="20201112 12:44:20.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.909" endtime="20201112 12:44:20.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.983" endtime="20201112 12:44:21.296"></status>
</kw>
<msg timestamp="20201112 12:44:21.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042687528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042782444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:20.979" endtime="20201112 12:44:21.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:21.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042687528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042782444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:21.300" endtime="20201112 12:44:21.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:21.308" endtime="20201112 12:44:21.311"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.972" endtime="20201112 12:44:21.312"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.967" endtime="20201112 12:44:21.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:21.317" level="INFO">${RESULT} = [{'time': 0.042782444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.491600000000044e-05, 'source_diff': 9.491600000000044e-05}, {'time': 0.042885458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:21.313" endtime="20201112 12:44:21.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:21.331" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:21.318" endtime="20201112 12:44:21.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:21.336" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 12:44:21.335" endtime="20201112 12:44:21.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:21.339" level="INFO">VALUE: [9.491600000000044e-05, 9.555500000000411e-05, 9.497199999999872e-05, 9.513899999999409e-05, 9.509700000000232e-05, 9.554199999999707e-05, 9.534700000000257e-05, 9.477800000000369e-05, 9.513900000000103e-05, 9.474999999999761e-05, 9.495899999999863e-05, 9.574999999999861e-05, 9.486100000000164e-05, 9.51530000000006e-05, 9.522199999999897e-05, 9.566700000000067e-05, 9.52079999999994e-05, 9.473599999999804e-05, 9.524999999999811e-05, 9.491699999999992e-05, 9.491699999999992e-05, 9.486100000000164e-05, 9.504100000000404e-05, 9.547199999999922e-05, 9.473599999999804e-05, 9.519399999999983e-05, 9.495799999999915e-05, 9.566700000000067e-05, 9.509699999999538e-05, 9.554199999999707e-05, 9.49729999999982e-05, 9.50000000000048e-05, 9.513900000000103e-05, 9.526300000000515e-05, 9.487500000000121e-05, 9.561099999999545e-05, 9.506900000000318e-05, 9.568000000000076e-05, 9.49870000000047e-05, 9.57079999999999e-05, 9.545799999999965e-05, 9.523599999999854e-05, 9.544499999999956e-05, 9.484800000000154e-05, 9.48880000000013e-05, 9.473600000000498e-05, 9.50409999999971e-05, 9.494399999999958e-05, 9.558299999999631e-05, 9.526399999999768e-05]</msg>
<status status="PASS" starttime="20201112 12:44:21.337" endtime="20201112 12:44:21.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.332" endtime="20201112 12:44:21.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:21.344" endtime="20201112 12:44:21.345"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:21.348" endtime="20201112 12:44:21.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.346" endtime="20201112 12:44:21.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.342" endtime="20201112 12:44:21.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.905" endtime="20201112 12:44:21.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.904" endtime="20201112 12:44:21.369"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:21.380" endtime="20201112 12:44:21.399"></status>
</kw>
<msg timestamp="20201112 12:44:21.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:21.378" endtime="20201112 12:44:21.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:21.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:21.401" endtime="20201112 12:44:21.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:21.404" endtime="20201112 12:44:21.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.375" endtime="20201112 12:44:21.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.372" endtime="20201112 12:44:21.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:21.415" endtime="20201112 12:44:21.700"></status>
</kw>
<msg timestamp="20201112 12:44:21.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025031528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025127819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:21.413" endtime="20201112 12:44:21.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:21.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025031528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025127819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:21.705" endtime="20201112 12:44:21.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:21.713" endtime="20201112 12:44:21.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.410" endtime="20201112 12:44:21.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.408" endtime="20201112 12:44:21.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:21.722" level="INFO">${RESULT} = [{'time': 0.025127819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.629099999999835e-05, 'source_diff': 9.629099999999835e-05}, {'time': 0.025233833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:21.718" endtime="20201112 12:44:21.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:21.736" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:21.723" endtime="20201112 12:44:21.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:21.741" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 12:44:21.740" endtime="20201112 12:44:21.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:21.744" level="INFO">VALUE: [9.629099999999835e-05, 9.583300000000003e-05, 9.613899999999856e-05, 9.597199999999972e-05, 9.631900000000096e-05, 9.618100000000074e-05, 9.605600000000061e-05, 9.574999999999861e-05, 9.61530000000016e-05, 9.584800000000254e-05, 9.652699999999903e-05, 9.594399999999711e-05, 9.60409999999981e-05, 9.66530000000021e-05, 9.638899999999881e-05, 9.593100000000049e-05, 9.640300000000185e-05, 9.633300000000053e-05, 9.669500000000081e-05, 9.605600000000061e-05, 9.602800000000147e-05, 9.648600000000326e-05, 9.609699999999985e-05, 9.613899999999856e-05, 9.61799999999978e-05, 9.642999999999805e-05, 9.580500000000089e-05, 9.657000000000068e-05, 9.676299999999971e-05, 9.644499999999709e-05, 9.66669999999982e-05, 9.632000000000043e-05, 9.630500000000139e-05, 9.661099999999992e-05, 9.588900000000178e-05, 9.626399999999868e-05, 9.591600000000144e-05, 9.622199999999997e-05, 9.656999999999721e-05, 9.61530000000016e-05, 9.618100000000074e-05, 9.670900000000038e-05, 9.627800000000172e-05, 9.586200000000211e-05, 9.61660000000017e-05, 9.652800000000197e-05, 9.605499999999767e-05, 9.622199999999997e-05, 9.587500000000221e-05, 9.594399999999711e-05]</msg>
<status status="PASS" starttime="20201112 12:44:21.742" endtime="20201112 12:44:21.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.737" endtime="20201112 12:44:21.745"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:21.748" endtime="20201112 12:44:21.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:21.752" endtime="20201112 12:44:21.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.750" endtime="20201112 12:44:21.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.746" endtime="20201112 12:44:21.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.370" endtime="20201112 12:44:21.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.369" endtime="20201112 12:44:21.774"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:21.785" endtime="20201112 12:44:21.805"></status>
</kw>
<msg timestamp="20201112 12:44:21.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:21.783" endtime="20201112 12:44:21.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:21.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:21.806" endtime="20201112 12:44:21.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:21.809" endtime="20201112 12:44:21.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.779" endtime="20201112 12:44:21.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.777" endtime="20201112 12:44:21.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:21.820" endtime="20201112 12:44:22.111"></status>
</kw>
<msg timestamp="20201112 12:44:22.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025305389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025402958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:21.819" endtime="20201112 12:44:22.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025305389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025402958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:22.121" endtime="20201112 12:44:22.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.140" endtime="20201112 12:44:22.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.815" endtime="20201112 12:44:22.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.813" endtime="20201112 12:44:22.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:22.161" level="INFO">${RESULT} = [{'time': 0.025402958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.756899999999874e-05, 'source_diff': 9.756899999999874e-05}, {'time': 0.025504889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:22.152" endtime="20201112 12:44:22.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:22.192" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:22.163" endtime="20201112 12:44:22.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.203" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 12:44:22.200" endtime="20201112 12:44:22.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.208" level="INFO">VALUE: [9.756899999999874e-05, 9.683300000000103e-05, 9.691700000000192e-05, 9.730600000000186e-05, 9.750000000000036e-05, 9.723700000000002e-05, 9.738899999999981e-05, 9.766599999999973e-05, 9.745799999999818e-05, 9.74860000000008e-05, 9.751399999999993e-05, 9.713899999999956e-05, 9.73479999999971e-05, 9.686100000000017e-05, 9.697200000000072e-05, 9.732000000000143e-05, 9.755500000000264e-05, 9.681899999999799e-05, 9.698599999999682e-05, 9.716599999999923e-05, 9.759700000000135e-05, 9.688899999999931e-05, 9.738899999999981e-05, 9.699999999999986e-05, 9.761099999999745e-05, 9.674999999999961e-05, 9.726399999999968e-05, 9.695900000000063e-05, 9.681900000000146e-05, 9.751399999999993e-05, 9.673600000000004e-05, 9.690299999999888e-05, 9.722200000000097e-05, 9.731899999999849e-05, 9.693099999999802e-05, 9.695800000000115e-05, 9.690299999999888e-05, 9.737500000000024e-05, 9.680600000000136e-05, 9.706900000000171e-05, 9.75279999999995e-05, 9.76799999999993e-05, 9.687499999999974e-05, 9.751399999999993e-05, 9.738899999999981e-05, 9.69860000000003e-05, 9.750000000000036e-05, 9.69730000000002e-05, 9.772300000000095e-05, 9.738899999999981e-05]</msg>
<status status="PASS" starttime="20201112 12:44:22.205" endtime="20201112 12:44:22.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.194" endtime="20201112 12:44:22.211"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.218" endtime="20201112 12:44:22.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:22.226" endtime="20201112 12:44:22.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.222" endtime="20201112 12:44:22.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.213" endtime="20201112 12:44:22.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.775" endtime="20201112 12:44:22.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.774" endtime="20201112 12:44:22.252"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.276" endtime="20201112 12:44:22.299"></status>
</kw>
<msg timestamp="20201112 12:44:22.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:22.272" endtime="20201112 12:44:22.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:22.302" endtime="20201112 12:44:22.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.308" endtime="20201112 12:44:22.312"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.265" endtime="20201112 12:44:22.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.259" endtime="20201112 12:44:22.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.332" endtime="20201112 12:44:22.670"></status>
</kw>
<msg timestamp="20201112 12:44:22.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042836889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042934667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:22.329" endtime="20201112 12:44:22.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042836889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042934667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:22.680" endtime="20201112 12:44:22.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.699" endtime="20201112 12:44:22.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.322" endtime="20201112 12:44:22.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.317" endtime="20201112 12:44:22.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:22.718" level="INFO">${RESULT} = [{'time': 0.042934667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.777799999999975e-05, 'source_diff': 9.777799999999975e-05}, {'time': 0.043041681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:22.709" endtime="20201112 12:44:22.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:22.749" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:22.720" endtime="20201112 12:44:22.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.760" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 12:44:22.758" endtime="20201112 12:44:22.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.765" level="INFO">VALUE: [9.777799999999975e-05, 9.872299999999501e-05, 9.833400000000547e-05, 9.80410000000001e-05, 9.85410000000006e-05, 9.8028e-05, 9.811099999999795e-05, 9.781999999999846e-05, 9.813899999999709e-05, 9.812499999999752e-05, 9.809699999999838e-05, 9.787499999999727e-05, 9.845900000000213e-05, 9.826300000000121e-05, 9.80410000000001e-05, 9.850000000000136e-05, 9.801400000000043e-05, 9.811099999999795e-05, 9.818100000000274e-05, 9.824999999999418e-05, 9.834699999999863e-05, 9.813899999999709e-05, 9.854200000000007e-05, 9.783400000000497e-05, 9.829100000000035e-05, 9.801400000000043e-05, 9.79860000000013e-05, 9.87080000000029e-05, 9.87080000000029e-05, 9.793100000000249e-05, 9.870899999999544e-05, 9.85280000000005e-05, 9.783399999999803e-05, 9.798599999999436e-05, 9.872200000000247e-05, 9.784699999999813e-05, 9.8028e-05, 9.795800000000215e-05, 9.841700000000342e-05, 9.83200000000059e-05, 9.83609999999982e-05, 9.843099999999605e-05, 9.841699999999648e-05, 9.854200000000007e-05, 9.870900000000238e-05, 9.858399999999878e-05, 9.831899999999949e-05, 9.787499999999727e-05, 9.805499999999967e-05, 9.872200000000247e-05]</msg>
<status status="PASS" starttime="20201112 12:44:22.762" endtime="20201112 12:44:22.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.751" endtime="20201112 12:44:22.769"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.775" endtime="20201112 12:44:22.778"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:22.784" endtime="20201112 12:44:22.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.779" endtime="20201112 12:44:22.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.771" endtime="20201112 12:44:22.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.254" endtime="20201112 12:44:22.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.253" endtime="20201112 12:44:22.810"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.833" endtime="20201112 12:44:22.855"></status>
</kw>
<msg timestamp="20201112 12:44:22.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:22.830" endtime="20201112 12:44:22.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:22.859" endtime="20201112 12:44:22.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.865" endtime="20201112 12:44:22.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.822" endtime="20201112 12:44:22.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.816" endtime="20201112 12:44:22.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.889" endtime="20201112 12:44:23.228"></status>
</kw>
<msg timestamp="20201112 12:44:23.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042595986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042695528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:22.885" endtime="20201112 12:44:23.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042595986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042695528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:23.238" endtime="20201112 12:44:23.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.257" endtime="20201112 12:44:23.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.878" endtime="20201112 12:44:23.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.873" endtime="20201112 12:44:23.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:23.276" level="INFO">${RESULT} = [{'time': 0.042695528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.954200000000107e-05, 'source_diff': 9.954200000000107e-05}, {'time': 0.042801542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:23.267" endtime="20201112 12:44:23.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:23.307" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:23.278" endtime="20201112 12:44:23.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.318" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 12:44:23.316" endtime="20201112 12:44:23.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.324" level="INFO">VALUE: [9.954200000000107e-05, 9.874999999999468e-05, 9.970900000000338e-05, 9.918100000000374e-05, 9.900000000000186e-05, 9.906900000000024e-05, 9.972199999999654e-05, 9.881899999999999e-05, 9.908299999999981e-05, 9.894499999999612e-05, 9.888899999999784e-05, 9.909699999999938e-05, 9.922199999999604e-05, 9.966700000000467e-05, 9.965299999999816e-05, 9.951400000000193e-05, 9.90410000000011e-05, 9.927800000000125e-05, 9.905500000000067e-05, 9.9513999999995e-05, 9.933300000000006e-05, 9.88609999999987e-05, 9.90139999999945e-05, 9.927799999999432e-05, 9.897299999999526e-05, 9.944400000000408e-05, 9.913899999999809e-05, 9.95410000000016e-05, 9.913899999999809e-05, 9.895799999999622e-05, 9.927800000000125e-05, 9.922199999999604e-05, 9.934699999999963e-05, 9.918100000000374e-05, 9.870900000000238e-05, 9.954200000000107e-05, 9.888899999999784e-05, 9.923600000000254e-05, 9.955500000000117e-05, 9.968000000000476e-05, 9.890299999999741e-05, 9.934699999999963e-05, 9.918100000000374e-05, 9.88059999999999e-05, 9.913900000000503e-05, 9.962500000000596e-05, 9.89730000000022e-05, 9.876400000000118e-05, 9.944399999999715e-05, 9.917999999999733e-05]</msg>
<status status="PASS" starttime="20201112 12:44:23.321" endtime="20201112 12:44:23.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.309" endtime="20201112 12:44:23.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.334" endtime="20201112 12:44:23.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:23.342" endtime="20201112 12:44:23.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.338" endtime="20201112 12:44:23.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.329" endtime="20201112 12:44:23.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.812" endtime="20201112 12:44:23.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.811" endtime="20201112 12:44:23.368"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.391" endtime="20201112 12:44:23.414"></status>
</kw>
<msg timestamp="20201112 12:44:23.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:23.388" endtime="20201112 12:44:23.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:23.417" endtime="20201112 12:44:23.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.424" endtime="20201112 12:44:23.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.381" endtime="20201112 12:44:23.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.375" endtime="20201112 12:44:23.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.447" endtime="20201112 12:44:23.786"></status>
</kw>
<msg timestamp="20201112 12:44:23.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042946792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043046958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:23.444" endtime="20201112 12:44:23.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042946792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043046958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:23.796" endtime="20201112 12:44:23.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.814" endtime="20201112 12:44:23.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.437" endtime="20201112 12:44:23.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.432" endtime="20201112 12:44:23.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:23.833" level="INFO">${RESULT} = [{'time': 0.043046958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001001660000000057, 'source_diff': 0.0001001660000000057}, {'time': 0.043159958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:23.825" endtime="20201112 12:44:23.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:23.864" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:23.836" endtime="20201112 12:44:23.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.875" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 12:44:23.873" endtime="20201112 12:44:23.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.881" level="INFO">VALUE: [0.0001001660000000057, 0.00010031900000000149, 0.00010023600000000354, 0.00010031900000000149, 9.976399999999525e-05, 0.0001004860000000038, 0.0001007359999999971, 9.99730000000032e-05, 9.991699999999798e-05, 0.00010020799999999747, 9.995799999999722e-05, 0.00010044399999999815, 9.997199999999679e-05, 0.00010044499999999762, 0.00010047199999999729, 0.00010009700000000038, 0.00010000000000000286, 9.993100000000449e-05, 0.00010001400000000243, 9.997299999999626e-05, 0.00010042999999999858, 0.00010034700000000063, 0.00010062500000000002, 9.981900000000099e-05, 9.97359999999961e-05, 9.980599999999396e-05, 0.00010066699999999873, 0.0001003060000000014, 9.995900000000363e-05, 0.00010012499999999952, 9.991699999999798e-05, 0.00010026300000000321, 0.00010005499999999473, 9.979099999999491e-05, 0.00010059700000000088, 0.00010026399999999575, 0.00010041699999999848, 0.00010022199999999704, 0.00010043099999999805, 0.00010057000000000121, 0.00010015199999999919, 0.00010055500000000217, 0.00010062500000000002, 9.997200000000372e-05, 0.0001007359999999971, 9.984700000000013e-05, 0.00010009700000000038, 0.0001002359999999966, 0.00010054200000000207, 0.00010058400000000078]</msg>
<status status="PASS" starttime="20201112 12:44:23.878" endtime="20201112 12:44:23.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.866" endtime="20201112 12:44:23.884"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.890" endtime="20201112 12:44:23.893"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:23.899" endtime="20201112 12:44:23.921"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.894" endtime="20201112 12:44:23.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.886" endtime="20201112 12:44:23.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.370" endtime="20201112 12:44:23.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.369" endtime="20201112 12:44:23.925"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.948" endtime="20201112 12:44:23.971"></status>
</kw>
<msg timestamp="20201112 12:44:23.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:23.945" endtime="20201112 12:44:23.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:23.974" endtime="20201112 12:44:23.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.980" endtime="20201112 12:44:23.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.937" endtime="20201112 12:44:23.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.932" endtime="20201112 12:44:23.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:24.004" endtime="20201112 12:44:24.343"></status>
</kw>
<msg timestamp="20201112 12:44:24.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042783861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042884778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:24.001" endtime="20201112 12:44:24.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042783861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042884778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:24.353" endtime="20201112 12:44:24.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:24.371" endtime="20201112 12:44:24.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.993" endtime="20201112 12:44:24.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.989" endtime="20201112 12:44:24.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:24.392" level="INFO">${RESULT} = [{'time': 0.042884778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010091699999999898, 'source_diff': 0.00010091699999999898}, {'time': 0.042993778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:24.384" endtime="20201112 12:44:24.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:24.422" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:24.394" endtime="20201112 12:44:24.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.433" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 12:44:24.431" endtime="20201112 12:44:24.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.439" level="INFO">VALUE: [0.00010091699999999898, 0.00010112500000000052, 0.00010076400000000318, 0.00010072299999999701, 0.00010082000000000146, 0.00010145799999999872, 0.00010137499999999383, 0.00010093000000000601, 0.0001016939999999994, 0.00010120799999999847, 0.00010099999999999693, 0.00010075000000000361, 0.00010141699999999948, 0.00010076400000000318, 0.00010112500000000052, 0.0001010689999999953, 0.00010155499999999623, 0.0001015410000000036, 0.00010115299999999966, 0.00010161100000000145, 0.00010093099999999855, 0.00010105600000000214, 0.00010174999999999768, 0.0001013339999999946, 0.00010124999999999718, 0.00010152700000000403, 0.00010134700000000163, 0.0001016939999999994, 0.00010117999999999933, 0.0001016939999999994, 0.00010109700000000138, 0.00010081899999999505, 0.0001012359999999976, 0.00010086099999999376, 0.00010162500000000102, 0.00010159800000000135, 0.00010133300000000206, 0.00010134700000000163, 0.00010148599999999786, 0.00010162499999999408, 0.00010130500000000292, 0.00010172199999999854, 0.00010072199999999754, 0.00010163900000000059, 0.0001015559999999957, 0.00010109800000000085, 0.00010138900000000034, 0.00010167999999999983, 0.00010127799999999632, 0.00010163900000000059]</msg>
<status status="PASS" starttime="20201112 12:44:24.436" endtime="20201112 12:44:24.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.424" endtime="20201112 12:44:24.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:24.448" endtime="20201112 12:44:24.451"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:24.457" endtime="20201112 12:44:24.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.453" endtime="20201112 12:44:24.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.444" endtime="20201112 12:44:24.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.927" endtime="20201112 12:44:24.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.926" endtime="20201112 12:44:24.483"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:24.506" endtime="20201112 12:44:24.529"></status>
</kw>
<msg timestamp="20201112 12:44:24.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:24.503" endtime="20201112 12:44:24.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:24.532" endtime="20201112 12:44:24.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:24.539" endtime="20201112 12:44:24.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.496" endtime="20201112 12:44:24.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.490" endtime="20201112 12:44:24.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:24.563" endtime="20201112 12:44:24.902"></status>
</kw>
<msg timestamp="20201112 12:44:24.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042745917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042848306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:24.559" endtime="20201112 12:44:24.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042745917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042848306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:24.912" endtime="20201112 12:44:24.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:24.930" endtime="20201112 12:44:24.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.552" endtime="20201112 12:44:24.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.547" endtime="20201112 12:44:24.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:24.949" level="INFO">${RESULT} = [{'time': 0.042848306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010238900000000134, 'source_diff': 0.00010238900000000134}, {'time': 0.042954361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:24.940" endtime="20201112 12:44:24.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:24.979" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:24.951" endtime="20201112 12:44:24.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.990" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 12:44:24.988" endtime="20201112 12:44:24.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.996" level="INFO">VALUE: [0.00010238900000000134, 0.00010254200000000407, 0.00010226399999999775, 0.00010248599999999886, 0.00010258299999999637, 0.00010259700000000288, 0.00010195799999999922, 0.00010254200000000407, 0.00010230599999999646, 0.00010226399999999775, 0.00010233300000000306, 0.00010216600000000076, 0.00010174999999999768, 0.00010233300000000306, 0.00010272199999999954, 0.00010241700000000048, 0.00010255600000000364, 0.00010266700000000073, 0.00010257000000000321, 0.00010208399999999535, 0.00010270899999999944, 0.000102513999999998, 0.00010268000000000083, 0.00010249999999999843, 0.00010230499999999698, 0.00010204199999999664, 0.00010193099999999955, 0.00010175000000000461, 0.0001018060000000029, 0.00010213900000000109, 0.00010241700000000048, 0.00010211200000000142, 0.00010269399999999346, 0.00010176399999999725, 0.00010183299999999562, 0.00010250000000000536, 0.00010225000000000511, 0.00010249999999999843, 0.00010270899999999944, 0.00010204199999999664, 0.00010275000000000561, 0.00010190200000000094, 0.00010188900000000084, 0.00010229100000000435, 0.00010198599999999836, 0.00010212500000000152, 0.00010255600000000364, 0.00010190300000000041, 0.00010188900000000084, 0.00010266700000000073]</msg>
<status status="PASS" starttime="20201112 12:44:24.993" endtime="20201112 12:44:24.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.981" endtime="20201112 12:44:24.999"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.006" endtime="20201112 12:44:25.008"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:25.014" endtime="20201112 12:44:25.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.010" endtime="20201112 12:44:25.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.001" endtime="20201112 12:44:25.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.485" endtime="20201112 12:44:25.040"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.484" endtime="20201112 12:44:25.040"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.063" endtime="20201112 12:44:25.086"></status>
</kw>
<msg timestamp="20201112 12:44:25.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:25.060" endtime="20201112 12:44:25.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:25.089" endtime="20201112 12:44:25.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.096" endtime="20201112 12:44:25.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.052" endtime="20201112 12:44:25.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.046" endtime="20201112 12:44:25.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.121" endtime="20201112 12:44:25.433"></status>
</kw>
<msg timestamp="20201112 12:44:25.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042618569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042721375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:25.118" endtime="20201112 12:44:25.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042618569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042721375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:25.438" endtime="20201112 12:44:25.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.446" endtime="20201112 12:44:25.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.110" endtime="20201112 12:44:25.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.105" endtime="20201112 12:44:25.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:25.455" level="INFO">${RESULT} = [{'time': 0.042721375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010280599999999696, 'source_diff': 0.00010280599999999696}, {'time': 0.042834375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:25.451" endtime="20201112 12:44:25.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:25.468" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:25.456" endtime="20201112 12:44:25.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.474" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 12:44:25.473" endtime="20201112 12:44:25.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.476" level="INFO">VALUE: [0.00010280599999999696, 0.00010365300000000216, 0.00010368099999999436, 0.00010297199999999979, 0.00010293100000000055, 0.00010366700000000173, 0.00010308299999999687, 0.00010337499999999583, 0.00010318000000000133, 0.00010352799999999857, 0.00010363899999999565, 0.00010359799999999642, 0.00010304199999999764, 0.00010370900000000044, 0.00010361100000000345, 0.00010293000000000108, 0.00010311099999999601, 0.00010347200000000029, 0.00010324999999999918, 0.00010302799999999807, 0.00010365300000000216, 0.00010276399999999825, 0.0001033610000000032, 0.00010329200000000482, 0.00010324999999999918, 0.00010279199999999739, 0.00010281899999999705, 0.00010347200000000029, 0.00010370800000000097, 0.0001029860000000063, 0.00010344400000000115, 0.00010274999999999868, 0.000103513999999999, 0.0001037360000000001, 0.00010288900000000184, 0.0001028339999999961, 0.00010345900000000019, 0.00010365200000000269, 0.00010355499999999823, 0.00010337499999999583, 0.00010326399999999875, 0.00010284699999999619, 0.00010284699999999619, 0.00010294500000000012, 0.00010274999999999868, 0.0001033610000000032, 0.00010295800000000022, 0.00010291700000000098, 0.00010318000000000133, 0.0001030139999999985]</msg>
<status status="PASS" starttime="20201112 12:44:25.475" endtime="20201112 12:44:25.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.469" endtime="20201112 12:44:25.482"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.485" endtime="20201112 12:44:25.486"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:25.489" endtime="20201112 12:44:25.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.487" endtime="20201112 12:44:25.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.483" endtime="20201112 12:44:25.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.042" endtime="20201112 12:44:25.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.041" endtime="20201112 12:44:25.510"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.521" endtime="20201112 12:44:25.541"></status>
</kw>
<msg timestamp="20201112 12:44:25.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:25.519" endtime="20201112 12:44:25.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:25.542" endtime="20201112 12:44:25.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.545" endtime="20201112 12:44:25.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.516" endtime="20201112 12:44:25.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.513" endtime="20201112 12:44:25.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.556" endtime="20201112 12:44:25.841"></status>
</kw>
<msg timestamp="20201112 12:44:25.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025083792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025188375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:25.555" endtime="20201112 12:44:25.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025083792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025188375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:25.845" endtime="20201112 12:44:25.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.854" endtime="20201112 12:44:25.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.551" endtime="20201112 12:44:25.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.549" endtime="20201112 12:44:25.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:25.863" level="INFO">${RESULT} = [{'time': 0.025188375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010458299999999837, 'source_diff': 0.00010458299999999837}, {'time': 0.025299403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:25.859" endtime="20201112 12:44:25.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:25.876" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:25.864" endtime="20201112 12:44:25.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.882" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 12:44:25.880" endtime="20201112 12:44:25.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.884" level="INFO">VALUE: [0.00010458299999999837, 0.00010440300000000291, 0.00010406999999999778, 0.00010402799999999907, 0.00010441700000000248, 0.00010455600000000217, 0.00010413800000000015, 0.0001040139999999995, 0.00010465299999999969, 0.0001047360000000011, 0.00010386100000000023, 0.00010434699999999769, 0.0001046949999999984, 0.00010413800000000015, 0.0001043339999999976, 0.00010430599999999846, 0.00010467999999999936, 0.00010447199999999782, 0.0001038749999999998, 0.00010431900000000202, 0.00010405600000000167, 0.0001043200000000015, 0.00010438899999999987, 0.00010413900000000309, 0.00010448600000000086, 0.00010472300000000101, 0.00010448600000000086, 0.00010436099999999726, 0.00010434700000000116, 0.00010436100000000073, 0.0001040550000000022, 0.00010395799999999775, 0.00010441700000000248, 0.00010427800000000279, 0.0001040559999999982, 0.00010426399999999975, 0.00010463800000000065, 0.00010458300000000184, 0.00010422199999999757, 0.00010473599999999764, 0.00010422200000000104, 0.00010408299999999787, 0.00010459700000000141, 0.000104514, 0.00010450000000000043, 0.00010454199999999914, 0.00010413899999999962, 0.0001038749999999998, 0.00010430500000000245, 0.00010405499999999873]</msg>
<status status="PASS" starttime="20201112 12:44:25.883" endtime="20201112 12:44:25.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.877" endtime="20201112 12:44:25.886"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.889" endtime="20201112 12:44:25.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:25.893" endtime="20201112 12:44:25.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.891" endtime="20201112 12:44:25.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.887" endtime="20201112 12:44:25.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.511" endtime="20201112 12:44:25.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.511" endtime="20201112 12:44:25.914"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.925" endtime="20201112 12:44:25.947"></status>
</kw>
<msg timestamp="20201112 12:44:25.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:25.923" endtime="20201112 12:44:25.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:25.950" endtime="20201112 12:44:25.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.957" endtime="20201112 12:44:25.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.920" endtime="20201112 12:44:25.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.917" endtime="20201112 12:44:25.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.981" endtime="20201112 12:44:26.319"></status>
</kw>
<msg timestamp="20201112 12:44:26.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024832472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024938069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:25.977" endtime="20201112 12:44:26.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:26.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024832472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024938069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:26.328" endtime="20201112 12:44:26.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:26.347" endtime="20201112 12:44:26.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.970" endtime="20201112 12:44:26.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.965" endtime="20201112 12:44:26.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:26.368" level="INFO">${RESULT} = [{'time': 0.024938069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010559699999999894, 'source_diff': 0.00010559699999999894}, {'time': 0.025047139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:26.359" endtime="20201112 12:44:26.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:26.398" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:26.370" endtime="20201112 12:44:26.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:26.409" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 12:44:26.407" endtime="20201112 12:44:26.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:26.415" level="INFO">VALUE: [0.00010559699999999894, 0.0001055559999999997, 0.00010487499999999733, 0.00010538900000000087, 0.00010523599999999814, 0.00010540200000000097, 0.00010497200000000179, 0.0001053200000000025, 0.00010511099999999801, 0.00010543000000000011, 0.00010492999999999961, 0.0001048750000000008, 0.00010566600000000079, 0.00010548600000000186, 0.0001056810000000033, 0.000104820000000002, 0.00010493100000000255, 0.00010550000000000143, 0.00010568000000000036, 0.00010568000000000036, 0.00010519399999999943, 0.0001050140000000005, 0.00010529199999999989, 0.00010547300000000176, 0.00010563900000000112, 0.000104820000000002, 0.00010566700000000026, 0.0001055559999999997, 0.00010476300000000077, 0.0001055559999999997, 0.000105514000000001, 0.00010550000000000143, 0.00010563899999999765, 0.00010572199999999907, 0.0001056949999999994, 0.00010484700000000166, 0.00010554200000000014, 0.00010552800000000057, 0.00010475000000000068, 0.00010555600000000318, 0.00010559700000000241, 0.00010494399999999918, 0.00010568000000000036, 0.00010563900000000112, 0.00010572199999999907, 0.00010570800000000297, 0.00010556999999999928, 0.00010509799999999792, 0.00010537499999999783, 0.00010534799999999817]</msg>
<status status="PASS" starttime="20201112 12:44:26.412" endtime="20201112 12:44:26.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.400" endtime="20201112 12:44:26.418"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:26.424" endtime="20201112 12:44:26.427"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:26.433" endtime="20201112 12:44:26.454"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.428" endtime="20201112 12:44:26.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.419" endtime="20201112 12:44:26.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.915" endtime="20201112 12:44:26.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.915" endtime="20201112 12:44:26.459"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:26.482" endtime="20201112 12:44:26.505"></status>
</kw>
<msg timestamp="20201112 12:44:26.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:26.478" endtime="20201112 12:44:26.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:26.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:26.509" endtime="20201112 12:44:26.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:26.515" endtime="20201112 12:44:26.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.471" endtime="20201112 12:44:26.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.465" endtime="20201112 12:44:26.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:26.539" endtime="20201112 12:44:26.876"></status>
</kw>
<msg timestamp="20201112 12:44:26.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042685681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042792222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:26.535" endtime="20201112 12:44:26.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:26.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042685681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042792222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:26.885" endtime="20201112 12:44:26.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:26.904" endtime="20201112 12:44:26.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.528" endtime="20201112 12:44:26.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.523" endtime="20201112 12:44:26.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:26.923" level="INFO">${RESULT} = [{'time': 0.042792222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010654099999999472, 'source_diff': 0.00010654099999999472}, {'time': 0.04290425, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:44:26.914" endtime="20201112 12:44:26.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:26.954" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:26.925" endtime="20201112 12:44:26.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:26.965" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 12:44:26.962" endtime="20201112 12:44:26.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:26.970" level="INFO">VALUE: [0.00010654099999999472, 0.00010602800000000107, 0.00010618099999999686, 0.00010590299999999747, 0.00010672200000000354, 0.00010609800000000585, 0.00010625000000000218, 0.00010581999999999953, 0.00010609699999999944, 0.00010592999999999714, 0.00010575000000000168, 0.00010609699999999944, 0.00010604200000000064, 0.0001067360000000031, 0.0001065560000000007, 0.00010620900000000294, 0.00010632000000000003, 0.00010624999999999524, 0.00010625000000000218, 0.00010650000000000243, 0.00010608299999999987, 0.0001057360000000021, 0.00010629200000000089, 0.00010634699999999969, 0.00010651399999999506, 0.00010590200000000494, 0.00010615299999999772, 0.00010627700000000184, 0.00010648599999999592, 0.00010662499999999908, 0.00010608299999999987, 0.00010665299999999822, 0.00010591699999999704, 0.0001065560000000007, 0.00010654200000000114, 0.00010670900000000344, 0.0001065560000000007, 0.00010626400000000175, 0.00010666699999999779, 0.00010604099999999422, 0.00010629100000000141, 0.00010654100000000166, 0.00010592999999999714, 0.00010576400000000125, 0.00010672200000000354, 0.00010606999999999978, 0.00010643099999999711, 0.00010659799999999942, 0.00010606999999999978, 0.00010648599999999592]</msg>
<status status="PASS" starttime="20201112 12:44:26.967" endtime="20201112 12:44:26.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.955" endtime="20201112 12:44:26.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:26.980" endtime="20201112 12:44:26.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:26.988" endtime="20201112 12:44:27.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.984" endtime="20201112 12:44:27.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.975" endtime="20201112 12:44:27.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.461" endtime="20201112 12:44:27.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.459" endtime="20201112 12:44:27.015"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.038" endtime="20201112 12:44:27.062"></status>
</kw>
<msg timestamp="20201112 12:44:27.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:27.034" endtime="20201112 12:44:27.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:27.065" endtime="20201112 12:44:27.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.071" endtime="20201112 12:44:27.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.027" endtime="20201112 12:44:27.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.021" endtime="20201112 12:44:27.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.095" endtime="20201112 12:44:27.435"></status>
</kw>
<msg timestamp="20201112 12:44:27.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043227972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043335, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:44:27.092" endtime="20201112 12:44:27.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043227972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043335, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:44:27.444" endtime="20201112 12:44:27.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.463" endtime="20201112 12:44:27.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.085" endtime="20201112 12:44:27.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.080" endtime="20201112 12:44:27.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:27.482" level="INFO">${RESULT} = [{'time': 0.043335, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010702799999999513, 'source_diff': 0.00010702799999999513}, {'time': 0.043451014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:44:27.473" endtime="20201112 12:44:27.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:27.512" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:27.484" endtime="20201112 12:44:27.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.523" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 12:44:27.521" endtime="20201112 12:44:27.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.529" level="INFO">VALUE: [0.00010702799999999513, 0.00010772200000000454, 0.0001068889999999989, 0.00010768099999999836, 0.00010759799999999348, 0.0001074019999999995, 0.00010699999999999599, 0.0001075549999999953, 0.00010727800000000232, 0.0001072360000000036, 0.00010704200000000164, 0.00010708299999999393, 0.00010713899999999915, 0.00010690299999999847, 0.0001074019999999995, 0.00010688799999999943, 0.00010680500000000148, 0.00010677799999999488, 0.00010780600000000196, 0.0001075419999999952, 0.00010688900000000584, 0.00010749999999999649, 0.00010677800000000182, 0.000107514000000003, 0.00010730600000000146, 0.00010740200000000644, 0.00010777799999999588, 0.00010691700000000498, 0.00010690300000000541, 0.00010676400000000225, 0.00010726400000000275, 0.00010744500000000462, 0.00010687499999999933, 0.00010694499999999718, 0.0001070140000000025, 0.00010730499999999504, 0.00010766599999999932, 0.00010716599999999882, 0.00010690300000000541, 0.00010680600000000096, 0.00010777800000000282, 0.00010740299999999897, 0.00010732000000000103, 0.00010715299999999872, 0.00010747200000000429, 0.00010683300000000062, 0.00010734700000000069, 0.00010748600000000386, 0.0001072360000000036, 0.00010704200000000164]</msg>
<status status="PASS" starttime="20201112 12:44:27.526" endtime="20201112 12:44:27.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.514" endtime="20201112 12:44:27.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.538" endtime="20201112 12:44:27.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:27.547" endtime="20201112 12:44:27.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.542" endtime="20201112 12:44:27.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.534" endtime="20201112 12:44:27.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.017" endtime="20201112 12:44:27.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.016" endtime="20201112 12:44:27.573"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.596" endtime="20201112 12:44:27.619"></status>
</kw>
<msg timestamp="20201112 12:44:27.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:27.592" endtime="20201112 12:44:27.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:27.622" endtime="20201112 12:44:27.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.629" endtime="20201112 12:44:27.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.585" endtime="20201112 12:44:27.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.579" endtime="20201112 12:44:27.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.653" endtime="20201112 12:44:27.991"></status>
</kw>
<msg timestamp="20201112 12:44:27.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042523861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042631903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:27.649" endtime="20201112 12:44:27.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042523861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042631903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:28.001" endtime="20201112 12:44:28.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.019" endtime="20201112 12:44:28.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.642" endtime="20201112 12:44:28.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.637" endtime="20201112 12:44:28.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:28.038" level="INFO">${RESULT} = [{'time': 0.042631903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001080419999999957, 'source_diff': 0.0001080419999999957}, {'time': 0.042748917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:28.030" endtime="20201112 12:44:28.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:28.069" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:28.041" endtime="20201112 12:44:28.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.080" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 12:44:28.078" endtime="20201112 12:44:28.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.085" level="INFO">VALUE: [0.0001080419999999957, 0.0001078889999999999, 0.00010826399999999681, 0.00010811100000000101, 0.00010847199999999835, 0.00010801399999999656, 0.00010830500000000298, 0.00010783300000000162, 0.00010780599999999502, 0.00010847299999999782, 0.0001083890000000004, 0.00010859799999999448, 0.00010867999999999989, 0.00010861100000000151, 0.00010816599999999982, 0.00010848600000000486, 0.00010794399999999871, 0.00010784699999999425, 0.00010784700000000119, 0.00010858400000000185, 0.000108208999999998, 0.0001080560000000022, 0.00010836099999999432, 0.00010834699999999475, 0.00010866600000000032, 0.00010812500000000058, 0.00010866699999999979, 0.00010807000000000178, 0.0001087360000000051, 0.00010773599999999717, 0.00010831900000000255, 0.000108208999999998, 0.00010867999999999989, 0.00010851399999999706, 0.00010870799999999903, 0.00010802799999999613, 0.00010791699999999904, 0.00010790299999999947, 0.00010851399999999706, 0.00010787500000000033, 0.00010816599999999982, 0.00010847299999999782, 0.00010855500000000323, 0.00010865200000000075, 0.00010786100000000076, 0.0001083890000000004, 0.00010806899999999536, 0.00010834700000000169, 0.000108514000000004, 0.00010798600000000436]</msg>
<status status="PASS" starttime="20201112 12:44:28.082" endtime="20201112 12:44:28.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.071" endtime="20201112 12:44:28.089"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.095" endtime="20201112 12:44:28.098"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:28.104" endtime="20201112 12:44:28.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.099" endtime="20201112 12:44:28.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.091" endtime="20201112 12:44:28.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.575" endtime="20201112 12:44:28.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.574" endtime="20201112 12:44:28.130"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.153" endtime="20201112 12:44:28.177"></status>
</kw>
<msg timestamp="20201112 12:44:28.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:28.149" endtime="20201112 12:44:28.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:28.181" endtime="20201112 12:44:28.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.188" endtime="20201112 12:44:28.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.142" endtime="20201112 12:44:28.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.136" endtime="20201112 12:44:28.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.213" endtime="20201112 12:44:28.552"></status>
</kw>
<msg timestamp="20201112 12:44:28.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042644931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042754097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:28.209" endtime="20201112 12:44:28.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042644931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042754097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:28.561" endtime="20201112 12:44:28.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.580" endtime="20201112 12:44:28.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.202" endtime="20201112 12:44:28.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.197" endtime="20201112 12:44:28.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:28.601" level="INFO">${RESULT} = [{'time': 0.042754097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010916600000000082, 'source_diff': 0.00010916600000000082}, {'time': 0.042868139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:28.592" endtime="20201112 12:44:28.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:28.631" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:28.603" endtime="20201112 12:44:28.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.642" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 12:44:28.640" endtime="20201112 12:44:28.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.647" level="INFO">VALUE: [0.00010916600000000082, 0.00010908300000000287, 0.00010930599999999652, 0.00010951399999999806, 0.00010938899999999446, 0.00010897299999999832, 0.00010875000000000468, 0.00010899999999999799, 0.00010875000000000468, 0.00010901399999999756, 0.00010901399999999756, 0.00010967999999999395, 0.00010884699999999525, 0.00010879200000000339, 0.00010965300000000122, 0.00010947299999999882, 0.00010897199999999885, 0.00010912500000000158, 0.00010900000000000493, 0.00010945799999999978, 0.00010930499999999704, 0.00010913899999999421, 0.00010958300000000337, 0.00010936099999999532, 0.00010949999999999849, 0.000109208999999999, 0.000109596999999996, 0.00010963800000000218, 0.00010933299999999618, 0.00010881900000000305, 0.0001088890000000009, 0.00010968100000000036, 0.0001090969999999955, 0.00010927800000000432, 0.00010901399999999756, 0.00010879199999999645, 0.00010972299999999907, 0.00010929099999999747, 0.00010918000000000039, 0.00010879200000000339, 0.00010912500000000158, 0.00010930599999999652, 0.00010876400000000425, 0.00010895899999999875, 0.00010873599999999817, 0.00010895899999999875, 0.00010898599999999842, 0.00010938799999999499, 0.00010875000000000468, 0.00010918000000000039]</msg>
<status status="PASS" starttime="20201112 12:44:28.644" endtime="20201112 12:44:28.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.633" endtime="20201112 12:44:28.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.657" endtime="20201112 12:44:28.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:28.666" endtime="20201112 12:44:28.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.661" endtime="20201112 12:44:28.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.653" endtime="20201112 12:44:28.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.132" endtime="20201112 12:44:28.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.131" endtime="20201112 12:44:28.692"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.715" endtime="20201112 12:44:28.738"></status>
</kw>
<msg timestamp="20201112 12:44:28.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:28.712" endtime="20201112 12:44:28.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:28.742" endtime="20201112 12:44:28.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.748" endtime="20201112 12:44:28.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.704" endtime="20201112 12:44:28.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.698" endtime="20201112 12:44:28.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.772" endtime="20201112 12:44:29.112"></status>
</kw>
<msg timestamp="20201112 12:44:29.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042648861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042759333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:28.769" endtime="20201112 12:44:29.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:29.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042648861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042759333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:29.121" endtime="20201112 12:44:29.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:29.139" endtime="20201112 12:44:29.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.761" endtime="20201112 12:44:29.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.756" endtime="20201112 12:44:29.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:29.159" level="INFO">${RESULT} = [{'time': 0.042759333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011047199999999341, 'source_diff': 0.00011047199999999341}, {'time': 0.042872306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:29.150" endtime="20201112 12:44:29.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:29.189" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:29.161" endtime="20201112 12:44:29.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:29.200" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 12:44:29.198" endtime="20201112 12:44:29.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:29.205" level="INFO">VALUE: [0.00011047199999999341, 0.00011013900000000215, 0.0001100560000000042, 0.00011016700000000129, 0.00011061099999999657, 0.00010981899999999711, 0.00011011099999999607, 0.00011001399999999856, 0.00010981999999999659, 0.00010990300000000147, 0.00011002799999999813, 0.00011030599999999752, 0.00011044400000000121, 0.00011065300000000222, 0.00011013899999999521, 0.00011001399999999856, 0.00011049999999999949, 0.00011029199999999795, 0.00011012500000000258, 0.00011058299999999743, 0.00010999999999999899, 0.0001098890000000019, 0.0001105549999999983, 0.00011009700000000344, 0.00011047200000000035, 0.00011070800000000103, 0.00011019400000000096, 0.00011026399999999881, 0.0001102220000000001, 0.00010979199999999745, 0.00011065300000000222, 0.00011023599999999967, 0.00011023599999999967, 0.00011011100000000301, 0.00010997199999999985, 0.00010997199999999985, 0.00011051399999999906, 0.0001107220000000006, 0.0001103890000000024, 0.00011051399999999906, 0.00010984800000000267, 0.00011026400000000575, 0.00011026299999999933, 0.00010984700000000319, 0.00011024999999999924, 0.00011048599999999992, 0.00010986099999999582, 0.00010990300000000147, 0.00011070800000000103, 0.0001102220000000001]</msg>
<status status="PASS" starttime="20201112 12:44:29.202" endtime="20201112 12:44:29.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.191" endtime="20201112 12:44:29.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:29.215" endtime="20201112 12:44:29.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:29.225" endtime="20201112 12:44:29.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.220" endtime="20201112 12:44:29.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.211" endtime="20201112 12:44:29.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.694" endtime="20201112 12:44:29.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.693" endtime="20201112 12:44:29.251"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:29.272" endtime="20201112 12:44:29.292"></status>
</kw>
<msg timestamp="20201112 12:44:29.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:29.271" endtime="20201112 12:44:29.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:29.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:29.294" endtime="20201112 12:44:29.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:29.297" endtime="20201112 12:44:29.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.264" endtime="20201112 12:44:29.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.258" endtime="20201112 12:44:29.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:29.308" endtime="20201112 12:44:29.636"></status>
</kw>
<msg timestamp="20201112 12:44:29.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039534069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039645472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:29.307" endtime="20201112 12:44:29.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:29.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039534069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039645472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:29.645" endtime="20201112 12:44:29.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:29.664" endtime="20201112 12:44:29.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.303" endtime="20201112 12:44:29.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.301" endtime="20201112 12:44:29.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:29.683" level="INFO">${RESULT} = [{'time': 0.039645472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011140300000000297, 'source_diff': 0.00011140300000000297}, {'time': 0.039761486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:29.674" endtime="20201112 12:44:29.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:29.713" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:29.685" endtime="20201112 12:44:29.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:29.725" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 12:44:29.722" endtime="20201112 12:44:29.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:29.730" level="INFO">VALUE: [0.00011140300000000297, 0.00011126399999999981, 0.00011087500000000333, 0.00011076399999999931, 0.00011152799999999963, 0.00011101399999999956, 0.00011074999999999974, 0.00011098600000000042, 0.00011084700000000419, 0.00011091600000000257, 0.00011099999999999999, 0.00011145800000000178, 0.00011088899999999596, 0.00011136099999999732, 0.00011118099999999492, 0.00011094500000000118, 0.00011162499999999714, 0.00011130499999999904, 0.00011165200000000375, 0.00011147199999999441, 0.00011134799999999723, 0.00011156999999999834, 0.00011076399999999931, 0.00011113899999999621, 0.00011137500000000383, 0.00011118100000000186, 0.00011074999999999974, 0.00011141599999999613, 0.0001110690000000053, 0.00011145799999999484, 0.00011125000000000024, 0.0001110419999999987, 0.00011076399999999931, 0.00011162500000000408, 0.00011074999999999974, 0.00011159799999999748, 0.00011122299999999363, 0.00011116600000000282, 0.00011084700000000419, 0.00011101399999999956, 0.00011077799999999888, 0.0001113890000000034, 0.00011133399999999766, 0.00011080599999999802, 0.000111209000000001, 0.00011159799999999748, 0.00011111199999999655, 0.00011095800000000128, 0.00011104099999999922, 0.00011151400000000006]</msg>
<status status="PASS" starttime="20201112 12:44:29.727" endtime="20201112 12:44:29.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.715" endtime="20201112 12:44:29.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:29.740" endtime="20201112 12:44:29.742"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:29.748" endtime="20201112 12:44:29.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.744" endtime="20201112 12:44:29.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.735" endtime="20201112 12:44:29.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.253" endtime="20201112 12:44:29.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.252" endtime="20201112 12:44:29.774"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:29.797" endtime="20201112 12:44:29.821"></status>
</kw>
<msg timestamp="20201112 12:44:29.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:29.794" endtime="20201112 12:44:29.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:29.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:29.824" endtime="20201112 12:44:29.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:29.830" endtime="20201112 12:44:29.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.786" endtime="20201112 12:44:29.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.781" endtime="20201112 12:44:29.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:29.854" endtime="20201112 12:44:30.193"></status>
</kw>
<msg timestamp="20201112 12:44:30.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042577236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042688986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:29.851" endtime="20201112 12:44:30.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042577236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042688986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:30.203" endtime="20201112 12:44:30.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.221" endtime="20201112 12:44:30.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.843" endtime="20201112 12:44:30.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.838" endtime="20201112 12:44:30.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:30.241" level="INFO">${RESULT} = [{'time': 0.042688986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011175000000000074, 'source_diff': 0.00011175000000000074}, {'time': 0.042807, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:44:30.232" endtime="20201112 12:44:30.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:30.271" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:30.243" endtime="20201112 12:44:30.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.283" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 12:44:30.281" endtime="20201112 12:44:30.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.289" level="INFO">VALUE: [0.00011175000000000074, 0.00011220799999999559, 0.00011184699999999825, 0.00011207000000000578, 0.00011241700000000354, 0.00011230599999999952, 0.0001125550000000003, 0.00011188899999999696, 0.00011198599999999448, 0.00011238899999999746, 0.00011245799999999584, 0.00011191700000000304, 0.00011245800000000278, 0.00011258399999999891, 0.00011226399999999387, 0.0001125420000000002, 0.00011191600000000357, 0.00011180499999999954, 0.00011188899999999696, 0.00011193000000000314, 0.0001118890000000039, 0.00011237500000000483, 0.0001127369999999947, 0.00011212499999999764, 0.00011268100000000336, 0.0001125550000000003, 0.0001120969999999985, 0.00011252800000000063, 0.0001117499999999938, 0.00011190300000000347, 0.00011183299999999868, 0.00011233399999999866, 0.00011195900000000175, 0.00011212500000000458, 0.00011255599999999977, 0.00011218000000000339, 0.0001118890000000039, 0.00011216699999999635, 0.00011251400000000106, 0.00011251400000000106, 0.00011194500000000218, 0.0001120969999999985, 0.00011188899999999696, 0.00011248599999999498, 0.00011206999999999884, 0.00011252699999999421, 0.00011251400000000106, 0.00011201400000000056, 0.00011227800000000038, 0.00011184699999999825]</msg>
<status status="PASS" starttime="20201112 12:44:30.286" endtime="20201112 12:44:30.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.273" endtime="20201112 12:44:30.292"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.298" endtime="20201112 12:44:30.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:30.307" endtime="20201112 12:44:30.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.303" endtime="20201112 12:44:30.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.294" endtime="20201112 12:44:30.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.776" endtime="20201112 12:44:30.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.775" endtime="20201112 12:44:30.333"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.356" endtime="20201112 12:44:30.379"></status>
</kw>
<msg timestamp="20201112 12:44:30.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:30.353" endtime="20201112 12:44:30.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:30.383" endtime="20201112 12:44:30.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.389" endtime="20201112 12:44:30.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.346" endtime="20201112 12:44:30.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.340" endtime="20201112 12:44:30.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.413" endtime="20201112 12:44:30.751"></status>
</kw>
<msg timestamp="20201112 12:44:30.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042894792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043007972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:30.410" endtime="20201112 12:44:30.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042894792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043007972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:30.761" endtime="20201112 12:44:30.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.779" endtime="20201112 12:44:30.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.402" endtime="20201112 12:44:30.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.397" endtime="20201112 12:44:30.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:30.800" level="INFO">${RESULT} = [{'time': 0.043007972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011317999999999745, 'source_diff': 0.00011317999999999745}, {'time': 0.043135972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:30.791" endtime="20201112 12:44:30.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:30.830" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:30.802" endtime="20201112 12:44:30.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.841" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 12:44:30.839" endtime="20201112 12:44:30.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.847" level="INFO">VALUE: [0.00011317999999999745, 0.00011284699999999925, 0.00011336099999999932, 0.00011343100000000411, 0.00011372199999999666, 0.00011332000000000009, 0.00011318100000000386, 0.00011288899999999796, 0.00011325000000000224, 0.00011317999999999745, 0.00011312499999999864, 0.0001133890000000054, 0.00011270800000000303, 0.00011323600000000267, 0.00011290299999999753, 0.000113597, 0.00011276399999999437, 0.00011284699999999925, 0.00011280500000000054, 0.00011351400000000206, 0.00011363899999999871, 0.00011280500000000054, 0.00011334699999999975, 0.00011358399999999991, 0.00011348599999999598, 0.00011373700000000264, 0.00011347299999999588, 0.00011284699999999925, 0.0001137220000000036, 0.00011288899999999796, 0.0001135550000000013, 0.00011361100000000651, 0.0001130420000000007, 0.00011316699999999735, 0.00011301400000000156, 0.00011366699999999785, 0.0001129299999999972, 0.0001137220000000036, 0.00011362499999999914, 0.0001135550000000013, 0.00011316700000000429, 0.00011322199999999616, 0.00011315299999999778, 0.00011312499999999864, 0.00011363899999999871, 0.00011372300000000307, 0.00011313799999999874, 0.00011313899999999821, 0.00011352800000000163, 0.0001135550000000013]</msg>
<status status="PASS" starttime="20201112 12:44:30.844" endtime="20201112 12:44:30.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.832" endtime="20201112 12:44:30.854"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.861" endtime="20201112 12:44:30.864"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:30.869" endtime="20201112 12:44:30.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.865" endtime="20201112 12:44:30.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.856" endtime="20201112 12:44:30.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.335" endtime="20201112 12:44:30.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.334" endtime="20201112 12:44:30.896"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.919" endtime="20201112 12:44:30.943"></status>
</kw>
<msg timestamp="20201112 12:44:30.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:30.915" endtime="20201112 12:44:30.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:30.946" endtime="20201112 12:44:30.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.953" endtime="20201112 12:44:30.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.908" endtime="20201112 12:44:30.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.902" endtime="20201112 12:44:30.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.976" endtime="20201112 12:44:31.315"></status>
</kw>
<msg timestamp="20201112 12:44:31.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042887681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043002194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:30.973" endtime="20201112 12:44:31.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:31.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042887681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043002194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:31.325" endtime="20201112 12:44:31.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:31.343" endtime="20201112 12:44:31.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.966" endtime="20201112 12:44:31.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.961" endtime="20201112 12:44:31.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:31.363" level="INFO">${RESULT} = [{'time': 0.043002194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011451300000000358, 'source_diff': 0.00011451300000000358}, {'time': 0.043126208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:31.354" endtime="20201112 12:44:31.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:31.393" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:31.365" endtime="20201112 12:44:31.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:31.404" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 12:44:31.402" endtime="20201112 12:44:31.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:31.409" level="INFO">VALUE: [0.00011451300000000358, 0.00011384700000000025, 0.00011438899999999946, 0.00011434700000000075, 0.0001139169999999981, 0.00011465299999999928, 0.00011466699999999885, 0.0001142499999999963, 0.00011440299999999903, 0.00011380600000000102, 0.00011406900000000136, 0.00011430500000000204, 0.00011427799999999544, 0.00011433300000000118, 0.00011419499999999749, 0.00011445799999999784, 0.0001143749999999999, 0.00011405600000000127, 0.00011473600000000417, 0.00011397200000000385, 0.00011452800000000263, 0.00011449999999999655, 0.00011426400000000281, 0.00011408300000000093, 0.00011473599999999723, 0.00011393100000000461, 0.00011411199999999955, 0.00011434800000000023, 0.00011451300000000358, 0.00011413899999999921, 0.00011473600000000417, 0.00011426400000000281, 0.0001144299999999987, 0.00011415299999999878, 0.00011398599999999648, 0.00011448600000000392, 0.00011379099999999504, 0.00011383400000000016, 0.00011390199999999906, 0.0001142220000000041, 0.00011463899999999971, 0.00011373599999999623, 0.0001143749999999999, 0.00011415199999999931, 0.00011405599999999433, 0.0001139169999999981, 0.00011479200000000245, 0.00011419399999999802, 0.0001140970000000005, 0.00011384700000000025]</msg>
<status status="PASS" starttime="20201112 12:44:31.406" endtime="20201112 12:44:31.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.395" endtime="20201112 12:44:31.413"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:31.419" endtime="20201112 12:44:31.422"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:31.428" endtime="20201112 12:44:31.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.423" endtime="20201112 12:44:31.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.415" endtime="20201112 12:44:31.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.898" endtime="20201112 12:44:31.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.896" endtime="20201112 12:44:31.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.149" endtime="20201112 12:44:31.454"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:31.464" endtime="20201112 12:44:31.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.460" endtime="20201112 12:44:31.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.457" endtime="20201112 12:44:31.488"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 12:43:37.020" endtime="20201112 12:44:31.489" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:42:40.447" endtime="20201112 12:44:31.499"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:44:31.641" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:44:31.656" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:44:33.465" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:44:31.637" endtime="20201112 12:44:33.466"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.472" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:44:33.469" endtime="20201112 12:44:33.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.634" endtime="20201112 12:44:33.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:33.479" endtime="20201112 12:44:33.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.476" endtime="20201112 12:44:33.894"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:33.923" endtime="20201112 12:44:33.945"></status>
</kw>
<msg timestamp="20201112 12:44:33.946" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:33.920" endtime="20201112 12:44:33.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.953" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:33.948" endtime="20201112 12:44:33.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.959" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:44:33.955" endtime="20201112 12:44:33.960"></status>
</kw>
<status status="FAIL" starttime="20201112 12:44:33.914" endtime="20201112 12:44:33.962"></status>
</kw>
<status status="FAIL" starttime="20201112 12:44:33.908" endtime="20201112 12:44:33.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.905" endtime="20201112 12:44:33.965"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:44:33.973" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:44:33.971" endtime="20201112 12:44:33.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.967" endtime="20201112 12:44:33.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.904" endtime="20201112 12:44:33.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.902" endtime="20201112 12:44:33.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:33.977" endtime="20201112 12:44:33.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.899" endtime="20201112 12:44:33.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:33.984" endtime="20201112 12:44:33.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.895" endtime="20201112 12:44:33.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.631" endtime="20201112 12:44:33.990"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:34.005" endtime="20201112 12:44:34.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.001" endtime="20201112 12:44:34.030"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:34.066" endtime="20201112 12:44:34.084"></status>
</kw>
<msg timestamp="20201112 12:44:34.086" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:34.062" endtime="20201112 12:44:34.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:34.092" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:34.088" endtime="20201112 12:44:34.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:44:34.099" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:44:34.094" endtime="20201112 12:44:34.099"></status>
</kw>
<status status="FAIL" starttime="20201112 12:44:34.055" endtime="20201112 12:44:34.101"></status>
</kw>
<status status="FAIL" starttime="20201112 12:44:34.048" endtime="20201112 12:44:34.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.045" endtime="20201112 12:44:34.104"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:44:34.111" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:44:34.110" endtime="20201112 12:44:34.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.105" endtime="20201112 12:44:34.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.043" endtime="20201112 12:44:34.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.041" endtime="20201112 12:44:34.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:34.115" endtime="20201112 12:44:34.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.037" endtime="20201112 12:44:34.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.032" endtime="20201112 12:44:34.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.998" endtime="20201112 12:44:34.122"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:34.130" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:34.153" endtime="20201112 12:44:36.262"></status>
</kw>
<msg timestamp="20201112 12:44:36.263" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 770399, 'wakeups': [780407, 790408, 800408, 810408, 820408, 830408, 84...</msg>
<status status="PASS" starttime="20201112 12:44:34.149" endtime="20201112 12:44:36.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.270" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 770399, 'wakeups': [780407, 790408, 800408, 810408, 820408, 830408, 84...</msg>
<status status="PASS" starttime="20201112 12:44:36.265" endtime="20201112 12:44:36.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:36.279" endtime="20201112 12:44:36.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.142" endtime="20201112 12:44:36.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.136" endtime="20201112 12:44:36.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:36.285" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [780407, 790408, 800408, 810408, 820408, 830408, 840408, 850408, 860408, 870408, 880408, 890408, 900408, 910408, 920408, 930408, 940408, 950408, 960408, 970408, 98...</msg>
<status status="PASS" starttime="20201112 12:44:36.283" endtime="20201112 12:44:36.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.290" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:36.289" endtime="20201112 12:44:36.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.292" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:36.291" endtime="20201112 12:44:36.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.286" endtime="20201112 12:44:36.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.298" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:44:36.297" endtime="20201112 12:44:36.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.301" level="INFO">VALUE: 770399</msg>
<status status="PASS" starttime="20201112 12:44:36.299" endtime="20201112 12:44:36.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.294" endtime="20201112 12:44:36.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.306" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:36.305" endtime="20201112 12:44:36.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.309" level="INFO">VALUE: [780407, 790408, 800408, 810408, 820408, 830408, 840408, 850408, 860408, 870408, 880408, 890408, 900408, 910408, 920408, 930408, 940408, 950408, 960408, 970408, 980408, 990408, 1000408, 1010408, 1020408, 1030408, 1040408, 1050408, 1060408, 1070408, 1080408, 1090408, 1100408, 1110408, 1120408, 1130408, 1140408, 1150408, 1160408, 1170408, 1180408, 1190408, 1200408, 1210408, 1220408, 1230408, 1240408, 1250408, 1260408, 1270408, 1280408, 1290408, 1300408, 1310408, 1320408, 1330408, 1340408, 1350408, 1360408, 1370408, 1380408, 1390408, 1400408, 1410408, 1420408, 1430408, 1440408, 1450408, 1460408, 1470408, 1480408, 1490408, 1500408, 1510408, 1520408, 1530408, 1540408, 1550408, 1560408, 1570408, 1580408, 1590408, 1600408, 1610408, 1620408, 1630408, 1640408, 1650408, 1660408, 1670408, 1680408, 1690408, 1700408, 1710408, 1720408, 1730408, 1740408, 1750408, 1760408, 1770408]</msg>
<status status="PASS" starttime="20201112 12:44:36.307" endtime="20201112 12:44:36.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.302" endtime="20201112 12:44:36.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:36.318" endtime="20201112 12:44:36.627"></status>
</kw>
<msg timestamp="20201112 12:44:36.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138934194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.148944056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:36.316" endtime="20201112 12:44:36.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138934194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.148944056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:36.636" endtime="20201112 12:44:36.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:36.653" endtime="20201112 12:44:36.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.313" endtime="20201112 12:44:36.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.310" endtime="20201112 12:44:36.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:36.718" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:36.662" endtime="20201112 12:44:36.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.729" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:44:36.726" endtime="20201112 12:44:36.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.734" level="INFO">VALUE: 0.138934194</msg>
<status status="PASS" starttime="20201112 12:44:36.732" endtime="20201112 12:44:36.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.720" endtime="20201112 12:44:36.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.747" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:36.745" endtime="20201112 12:44:36.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.752" level="INFO">VALUE: [0.148944056, 0.158946208, 0.168947194, 0.178948361, 0.188949375, 0.198950528, 0.208951542, 0.218952708, 0.228953694, 0.238954875, 0.248955861, 0.258957014, 0.268958069, 0.278959181, 0.288960181, 0.298961347, 0.308962347, 0.318963514, 0.3289645, 0.338965667, 0.348966667, 0.358967847, 0.368968847, 0.37897, 0.388971, 0.398972208, 0.408973167, 0.418974333, 0.428975319, 0.438976486, 0.4489775, 0.458978667, 0.468979681, 0.478980833, 0.488981819, 0.498983, 0.508983986, 0.518985153, 0.528986153, 0.538987319, 0.548988333, 0.558989486, 0.568990472, 0.578991653, 0.588992708, 0.598993806, 0.608994819, 0.618995972, 0.628996972, 0.638998139, 0.648999208, 0.659000319, 0.669001306, 0.679002486, 0.689003472, 0.699004639, 0.709005639, 0.719006806, 0.729007806, 0.739008986, 0.749009958, 0.759011139, 0.769012125, 0.779013292, 0.789014292, 0.799015458, 0.809016472, 0.819017625, 0.829018625, 0.839019792, 0.849020792, 0.859021958, 0.869022958, 0.879024125, 0.889025125, 0.899026306, 0.909027306, 0.919028458, 0.929029458, 0.939030625, 0.949031611, 0.959032792, 0.969033778, 0.979034944, 0.989036, 0.999037111, 1.009038139, 1.019039278, 1.029040278, 1.039041458, 1.049042444, 1.059043625, 1.069044611, 1.079045792, 1.089046792, 1.099047972, 1.109048944, 1.119050125, 1.129051097, 1.139052333] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:36.750" endtime="20201112 12:44:36.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.738" endtime="20201112 12:44:36.755"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:36.761" endtime="20201112 12:44:36.764"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:36.770" endtime="20201112 12:44:36.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.765" endtime="20201112 12:44:36.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.756" endtime="20201112 12:44:36.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.132" endtime="20201112 12:44:36.795"></status>
</kw>
<msg timestamp="20201112 12:44:36.796" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:36.817" endtime="20201112 12:44:38.926"></status>
</kw>
<msg timestamp="20201112 12:44:38.928" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3433094, 'wakeups': [3443102, 3453103, 3463103, 3473103, 3483103, 3493...</msg>
<status status="PASS" starttime="20201112 12:44:36.814" endtime="20201112 12:44:38.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.935" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3433094, 'wakeups': [3443102, 3453103, 3463103, 3473103, 3483103, 3493...</msg>
<status status="PASS" starttime="20201112 12:44:38.930" endtime="20201112 12:44:38.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:38.937" endtime="20201112 12:44:38.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.806" endtime="20201112 12:44:38.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.801" endtime="20201112 12:44:38.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:38.950" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [3443102, 3453103, 3463103, 3473103, 3483103, 3493103, 3503103, 3513103, 3523103, 3533103, 3543103, 3553103, 3563103, 3573103, 3583103, 3593103, 3603103, 3613103, ...</msg>
<status status="PASS" starttime="20201112 12:44:38.946" endtime="20201112 12:44:38.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.961" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:38.958" endtime="20201112 12:44:38.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.965" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:38.963" endtime="20201112 12:44:38.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.952" endtime="20201112 12:44:38.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.977" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:44:38.975" endtime="20201112 12:44:38.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.983" level="INFO">VALUE: 3433094</msg>
<status status="PASS" starttime="20201112 12:44:38.981" endtime="20201112 12:44:38.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.969" endtime="20201112 12:44:38.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.995" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:38.993" endtime="20201112 12:44:38.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:39.000" level="INFO">VALUE: [3443102, 3453103, 3463103, 3473103, 3483103, 3493103, 3503103, 3513103, 3523103, 3533103, 3543103, 3553103, 3563103, 3573103, 3583103, 3593103, 3603103, 3613103, 3623103, 3633103, 3643103, 3653103, 3663103, 3673103, 3683103, 3693103, 3703103, 3713103, 3723103, 3733103, 3743103, 3753103, 3763103, 3773103, 3783103, 3793103, 3803103, 3813103, 3823103, 3833103, 3843103, 3853103, 3863103, 3873103, 3883103, 3893103, 3903103, 3913103, 3923103, 3933103, 3943103, 3953103, 3963103, 3973103, 3983103, 3993103, 4003103, 4013103, 4023103, 4033103, 4043103, 4053103, 4063103, 4073103, 4083103, 4093103, 4103103, 4113103, 4123103, 4133103, 4143103, 4153103, 4163103, 4173103, 4183103, 4193103, 4203103, 4213103, 4223103, 4233103, 4243103, 4253103, 4263103, 4273103, 4283103, 4293103, 4303103, 4313103, 4323103, 4333103, 4343103, 4353103, 4363103, 4373103, 4383103, 4393103, 4403103, 4413103, 4423103, 4433103]</msg>
<status status="PASS" starttime="20201112 12:44:38.998" endtime="20201112 12:44:39.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.987" endtime="20201112 12:44:39.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:39.022" endtime="20201112 12:44:39.367"></status>
</kw>
<msg timestamp="20201112 12:44:39.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038554722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048564917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:39.018" endtime="20201112 12:44:39.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:39.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038554722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048564917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:39.376" endtime="20201112 12:44:39.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:39.393" endtime="20201112 12:44:39.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.011" endtime="20201112 12:44:39.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.004" endtime="20201112 12:44:39.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:39.455" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:39.402" endtime="20201112 12:44:39.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:39.466" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:44:39.463" endtime="20201112 12:44:39.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:39.470" level="INFO">VALUE: 0.038554722</msg>
<status status="PASS" starttime="20201112 12:44:39.468" endtime="20201112 12:44:39.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.457" endtime="20201112 12:44:39.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:39.484" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:39.482" endtime="20201112 12:44:39.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:39.489" level="INFO">VALUE: [0.048564917, 0.058567083, 0.068568069, 0.078569236, 0.088570236, 0.098571389, 0.108572403, 0.118573556, 0.128574542, 0.138575708, 0.148576722, 0.158577917, 0.168578889, 0.178580042, 0.188581028, 0.198582208, 0.208583194, 0.218584417, 0.228585417, 0.238586528, 0.248587514, 0.258588694, 0.268589681, 0.278590847, 0.288591861, 0.298593014, 0.308594, 0.318595167, 0.328596181, 0.338597333, 0.348598375, 0.358599514, 0.368600486, 0.378601667, 0.388602667, 0.398603819, 0.408604819, 0.418605986, 0.428607, 0.438608153, 0.448609153, 0.458610306, 0.468611306, 0.478612486, 0.488613486, 0.498614639, 0.508615639, 0.518616861, 0.528617792, 0.538618972, 0.548619972, 0.558621125, 0.568622153, 0.578623292, 0.588624319, 0.598625458, 0.608626472, 0.618627625, 0.628628611, 0.638629778, 0.648630792, 0.658631944, 0.668632986, 0.678634111, 0.688635111, 0.698636278, 0.708637278, 0.718638431, 0.728639431, 0.738640597, 0.748641597, 0.758642778, 0.768643764, 0.778644931, 0.788645931, 0.798647097, 0.808648139, 0.81864925, 0.828650292, 0.838651417, 0.848652417, 0.858653597, 0.868654653, 0.87865575, 0.88865675, 0.898657931, 0.908658931, 0.918660083, 0.928661069, 0.938662264, 0.948663236, 0.958664403, 0.968665403, 0.978666569, 0.988667583, 0.998668792, 1.008669736, 1.018670931, 1.028671889, 1.038673056] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:39.486" endtime="20201112 12:44:39.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.474" endtime="20201112 12:44:39.492"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:39.498" endtime="20201112 12:44:39.501"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:39.507" endtime="20201112 12:44:39.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.502" endtime="20201112 12:44:39.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.494" endtime="20201112 12:44:39.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.797" endtime="20201112 12:44:39.532"></status>
</kw>
<msg timestamp="20201112 12:44:39.533" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:39.556" endtime="20201112 12:44:41.666"></status>
</kw>
<msg timestamp="20201112 12:44:41.667" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6172540, 'wakeups': [6182549, 6192549, 6202549, 6212549, 6222549, 6232...</msg>
<status status="PASS" starttime="20201112 12:44:39.553" endtime="20201112 12:44:41.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.674" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6172540, 'wakeups': [6182549, 6192549, 6202549, 6212549, 6222549, 6232...</msg>
<status status="PASS" starttime="20201112 12:44:41.669" endtime="20201112 12:44:41.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:41.676" endtime="20201112 12:44:41.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.545" endtime="20201112 12:44:41.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.538" endtime="20201112 12:44:41.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:41.690" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [6182549, 6192549, 6202549, 6212549, 6222549, 6232549, 6242549, 6252549, 6262549, 6272549, 6282549, 6292549, 6302549, 6312549, 6322549, 6332549, 6342549, 6352549, ...</msg>
<status status="PASS" starttime="20201112 12:44:41.685" endtime="20201112 12:44:41.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.695" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:41.694" endtime="20201112 12:44:41.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.697" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:41.696" endtime="20201112 12:44:41.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.691" endtime="20201112 12:44:41.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.703" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:44:41.702" endtime="20201112 12:44:41.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.705" level="INFO">VALUE: 6172540</msg>
<status status="PASS" starttime="20201112 12:44:41.704" endtime="20201112 12:44:41.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.699" endtime="20201112 12:44:41.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.711" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:41.710" endtime="20201112 12:44:41.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.713" level="INFO">VALUE: [6182549, 6192549, 6202549, 6212549, 6222549, 6232549, 6242549, 6252549, 6262549, 6272549, 6282549, 6292549, 6302549, 6312549, 6322549, 6332549, 6342549, 6352549, 6362549, 6372549, 6382549, 6392549, 6402549, 6412549, 6422549, 6432549, 6442549, 6452549, 6462549, 6472549, 6482549, 6492549, 6502549, 6512549, 6522549, 6532549, 6542549, 6552549, 6562549, 6572549, 6582549, 6592549, 6602549, 6612549, 6622549, 6632549, 6642549, 6652549, 6662549, 6672549, 6682549, 6692549, 6702549, 6712549, 6722549, 6732549, 6742549, 6752549, 6762549, 6772549, 6782549, 6792549, 6802549, 6812549, 6822549, 6832549, 6842549, 6852549, 6862549, 6872549, 6882549, 6892549, 6902549, 6912549, 6922549, 6932549, 6942549, 6952549, 6962549, 6972549, 6982549, 6992549, 7002549, 7012549, 7022549, 7032549, 7042549, 7052549, 7062549, 7072549, 7082549, 7092549, 7102549, 7112549, 7122549, 7132549, 7142549, 7152549, 7162549, 7172549]</msg>
<status status="PASS" starttime="20201112 12:44:41.712" endtime="20201112 12:44:41.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.707" endtime="20201112 12:44:41.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:41.727" endtime="20201112 12:44:42.057"></status>
</kw>
<msg timestamp="20201112 12:44:42.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041090833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051101375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:41.725" endtime="20201112 12:44:42.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041090833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051101375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:42.066" endtime="20201112 12:44:42.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:42.083" endtime="20201112 12:44:42.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.722" endtime="20201112 12:44:42.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.715" endtime="20201112 12:44:42.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:42.148" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:42.092" endtime="20201112 12:44:42.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.159" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:44:42.156" endtime="20201112 12:44:42.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.163" level="INFO">VALUE: 0.041090833</msg>
<status status="PASS" starttime="20201112 12:44:42.161" endtime="20201112 12:44:42.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.150" endtime="20201112 12:44:42.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.177" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:42.174" endtime="20201112 12:44:42.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.181" level="INFO">VALUE: [0.051101375, 0.061102514, 0.071103514, 0.081104653, 0.091105653, 0.101106819, 0.111107833, 0.121108986, 0.131109972, 0.141111139, 0.151112139, 0.161113319, 0.171114319, 0.181115458, 0.191116472, 0.201117611, 0.211118625, 0.221119792, 0.231120778, 0.241121944, 0.251122931, 0.261124181, 0.271125111, 0.281126278, 0.291127264, 0.301128417, 0.311129431, 0.321130583, 0.331131583, 0.341132736, 0.351133736, 0.361134958, 0.371135958, 0.381137069, 0.391138097, 0.401139292, 0.411140222, 0.421141389, 0.431142389, 0.441143556, 0.451144569, 0.461145722, 0.471146722, 0.481147889, 0.491148875, 0.501150069, 0.511151042, 0.521152194, 0.531153194, 0.541154361, 0.551155389, 0.561156542, 0.571157514, 0.581158681, 0.591159736, 0.601160847, 0.611161847, 0.621163042, 0.631164, 0.641165167, 0.651166167, 0.661167333, 0.671168389, 0.6811695, 0.691170528, 0.701171667, 0.711172653, 0.721173833, 0.731174819, 0.741176014, 0.751176986, 0.761178153, 0.771179153, 0.781180306, 0.791181306, 0.801182486, 0.811183472, 0.821184653, 0.831185639, 0.841186806, 0.851187792, 0.861188972, 0.871189972, 0.881191139, 0.891192139, 0.901193306, 0.911194319, 0.921195472, 0.931196444, 0.941197611, 0.951198611, 0.961199778, 0.971200778, 0.981201944, 0.991202931, 1.001204097, 1.011205111, 1.021206264, 1.031207264, 1.041208431] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:42.179" endtime="20201112 12:44:42.182"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.167" endtime="20201112 12:44:42.184"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:42.190" endtime="20201112 12:44:42.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:42.199" endtime="20201112 12:44:42.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.194" endtime="20201112 12:44:42.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.186" endtime="20201112 12:44:42.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.534" endtime="20201112 12:44:42.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.127" endtime="20201112 12:44:42.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.125" endtime="20201112 12:44:42.225"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:42.231" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:42.253" endtime="20201112 12:44:44.362"></status>
</kw>
<msg timestamp="20201112 12:44:44.364" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8869104, 'wakeups': [8879121, 8889120, 8899120, 8909120, 8919120, 8929...</msg>
<status status="PASS" starttime="20201112 12:44:42.249" endtime="20201112 12:44:44.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.371" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8869104, 'wakeups': [8879121, 8889120, 8899120, 8909120, 8919120, 8929...</msg>
<status status="PASS" starttime="20201112 12:44:44.366" endtime="20201112 12:44:44.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:44.373" endtime="20201112 12:44:44.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.241" endtime="20201112 12:44:44.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.236" endtime="20201112 12:44:44.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:44.386" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [8879121, 8889120, 8899120, 8909120, 8919120, 8929120, 8939120, 8949120, 8959120, 8969120, 8979120, 8989120, 8999120, 9009120, 9019120, 9029120, 9039120, 9049120, ...</msg>
<status status="PASS" starttime="20201112 12:44:44.381" endtime="20201112 12:44:44.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.396" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:44.394" endtime="20201112 12:44:44.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.401" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:44.399" endtime="20201112 12:44:44.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.388" endtime="20201112 12:44:44.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.413" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:44:44.411" endtime="20201112 12:44:44.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.418" level="INFO">VALUE: 8869104</msg>
<status status="PASS" starttime="20201112 12:44:44.416" endtime="20201112 12:44:44.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.405" endtime="20201112 12:44:44.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.432" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:44.430" endtime="20201112 12:44:44.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.437" level="INFO">VALUE: [8879121, 8889120, 8899120, 8909120, 8919120, 8929120, 8939120, 8949120, 8959120, 8969120, 8979120, 8989120, 8999120, 9009120, 9019120, 9029120, 9039120, 9049120, 9059120, 9069120, 9079120, 9089120, 9099120, 9109120, 9119120, 9129120, 9139120, 9149120, 9159120, 9169120, 9179120, 9189120, 9199120, 9209120, 9219120, 9229120, 9239120, 9249120, 9259120, 9269120, 9279120, 9289120, 9299120, 9309120, 9319120, 9329120, 9339120, 9349120, 9359120, 9369120, 9379120, 9389120, 9399120, 9409120, 9419120, 9429120, 9439120, 9449120, 9459120, 9469120, 9479120, 9489120, 9499120, 9509120, 9519120, 9529120, 9539120, 9549120, 9559120, 9569120, 9579120, 9589120, 9599120, 9609120, 9619120, 9629120, 9639120, 9649120, 9659120, 9669120, 9679120, 9689120, 9699120, 9709120, 9719120, 9729120, 9739120, 9749120, 9759120, 9769120, 9779120, 9789120, 9799120, 9809120, 9819120, 9829120, 9839120, 9849120, 9859120, 9869120]</msg>
<status status="PASS" starttime="20201112 12:44:44.435" endtime="20201112 12:44:44.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.422" endtime="20201112 12:44:44.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:44.457" endtime="20201112 12:44:44.804"></status>
</kw>
<msg timestamp="20201112 12:44:44.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045512306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055530319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:44.453" endtime="20201112 12:44:44.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045512306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055530319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:44.813" endtime="20201112 12:44:44.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:44.831" endtime="20201112 12:44:44.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.446" endtime="20201112 12:44:44.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.441" endtime="20201112 12:44:44.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:44.868" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:44.840" endtime="20201112 12:44:44.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.873" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:44:44.872" endtime="20201112 12:44:44.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.876" level="INFO">VALUE: 0.045512306</msg>
<status status="PASS" starttime="20201112 12:44:44.874" endtime="20201112 12:44:44.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.869" endtime="20201112 12:44:44.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.882" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:44.881" endtime="20201112 12:44:44.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.884" level="INFO">VALUE: [0.055530319, 0.065530486, 0.075531486, 0.085532653, 0.095533667, 0.105534806, 0.115535847, 0.125537042, 0.135537958, 0.145539125, 0.155540153, 0.165541278, 0.175542278, 0.185543444, 0.195544444, 0.205545597, 0.215546639, 0.225547764, 0.235548764, 0.245549917, 0.255550958, 0.265552083, 0.275553083, 0.285554264, 0.29555525, 0.305556403, 0.315557417, 0.325558569, 0.335559556, 0.345560722, 0.355561736, 0.365562903, 0.375563889, 0.385565056, 0.395566069, 0.405567208, 0.415568222, 0.425569375, 0.435570375, 0.445571528, 0.455572528, 0.465573694, 0.475574708, 0.485575847, 0.495576861, 0.505578014, 0.515579014, 0.525580181, 0.535581167, 0.545582347, 0.555583347, 0.565584514, 0.5755855, 0.585586667, 0.595587653, 0.605588833, 0.615589833, 0.625590986, 0.635591986, 0.645593167, 0.655594139, 0.665595306, 0.675596306, 0.685597472, 0.695598472, 0.705599639, 0.715600639, 0.725601792, 0.735602792, 0.745603958, 0.755604958, 0.765606125, 0.775607111, 0.785608278, 0.795609292, 0.805610444, 0.815611444, 0.825612625, 0.835613597, 0.845614764, 0.855615778, 0.865616931, 0.875617944, 0.885619111, 0.895620097, 0.905621264, 0.915622264, 0.925623417, 0.935624431, 0.945625597, 0.955626597, 0.96562775, 0.975628736, 0.985629903, 0.995630903, 1.005632125, 1.015633097, 1.025634222, 1.035635222, 1.045636403] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:44.883" endtime="20201112 12:44:44.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.877" endtime="20201112 12:44:44.885"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:44.888" endtime="20201112 12:44:44.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:44.892" endtime="20201112 12:44:44.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.890" endtime="20201112 12:44:44.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.886" endtime="20201112 12:44:44.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.232" endtime="20201112 12:44:44.914"></status>
</kw>
<msg timestamp="20201112 12:44:44.914" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:44.924" endtime="20201112 12:44:47.024"></status>
</kw>
<msg timestamp="20201112 12:44:47.024" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11538169, 'wakeups': [11548185, 11558185, 11568185, 11578185, 11588185...</msg>
<status status="PASS" starttime="20201112 12:44:44.922" endtime="20201112 12:44:47.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.028" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11538169, 'wakeups': [11548185, 11558185, 11568185, 11578185, 11588185...</msg>
<status status="PASS" starttime="20201112 12:44:47.026" endtime="20201112 12:44:47.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:47.029" endtime="20201112 12:44:47.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.919" endtime="20201112 12:44:47.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.916" endtime="20201112 12:44:47.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:47.035" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [11548185, 11558185, 11568185, 11578185, 11588185, 11598185, 11608185, 11618185, 11628185, 11638185, 11648185, 11658185, 11668185, 11678185, 11688185, 11698185, 11...</msg>
<status status="PASS" starttime="20201112 12:44:47.033" endtime="20201112 12:44:47.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.041" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:47.039" endtime="20201112 12:44:47.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.043" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:47.042" endtime="20201112 12:44:47.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.036" endtime="20201112 12:44:47.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.049" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:44:47.047" endtime="20201112 12:44:47.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.051" level="INFO">VALUE: 11538169</msg>
<status status="PASS" starttime="20201112 12:44:47.050" endtime="20201112 12:44:47.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.044" endtime="20201112 12:44:47.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.057" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:47.056" endtime="20201112 12:44:47.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.059" level="INFO">VALUE: [11548185, 11558185, 11568185, 11578185, 11588185, 11598185, 11608185, 11618185, 11628185, 11638185, 11648185, 11658185, 11668185, 11678185, 11688185, 11698185, 11708185, 11718185, 11728185, 11738185, 11748185, 11758185, 11768185, 11778185, 11788185, 11798185, 11808185, 11818185, 11828185, 11838185, 11848185, 11858185, 11868185, 11878185, 11888185, 11898185, 11908185, 11918185, 11928185, 11938185, 11948185, 11958185, 11968185, 11978185, 11988185, 11998185, 12008185, 12018185, 12028185, 12038185, 12048185, 12058185, 12068185, 12078185, 12088185, 12098185, 12108185, 12118185, 12128185, 12138185, 12148185, 12158185, 12168185, 12178185, 12188185, 12198185, 12208185, 12218185, 12228185, 12238185, 12248185, 12258185, 12268185, 12278185, 12288185, 12298185, 12308185, 12318185, 12328185, 12338185, 12348185, 12358185, 12368185, 12378185, 12388185, 12398185, 12408185, 12418185, 12428185, 12438185, 12448185, 12458185, 12468185, 12478185, 12488185, 12498185, 12508185, 12518185, 12528185, 12538185]</msg>
<status status="PASS" starttime="20201112 12:44:47.058" endtime="20201112 12:44:47.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.053" endtime="20201112 12:44:47.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:47.068" endtime="20201112 12:44:47.396"></status>
</kw>
<msg timestamp="20201112 12:44:47.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031868542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:47.066" endtime="20201112 12:44:47.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031868542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:47.405" endtime="20201112 12:44:47.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:47.422" endtime="20201112 12:44:47.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.063" endtime="20201112 12:44:47.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.061" endtime="20201112 12:44:47.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:47.487" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:47.432" endtime="20201112 12:44:47.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.498" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:44:47.496" endtime="20201112 12:44:47.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.503" level="INFO">VALUE: 0.021851208</msg>
<status status="PASS" starttime="20201112 12:44:47.501" endtime="20201112 12:44:47.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.489" endtime="20201112 12:44:47.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.516" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:47.514" endtime="20201112 12:44:47.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.522" level="INFO">VALUE: [0.031868542, 0.041869722, 0.051870764, 0.061871861, 0.071872861, 0.081874028, 0.091875014, 0.101876181, 0.11187725, 0.121878347, 0.131879333, 0.1418805, 0.1518815, 0.161882667, 0.171883653, 0.181884806, 0.191885806, 0.201886972, 0.211887986, 0.221889125, 0.231890181, 0.241891278, 0.251892278, 0.261893444, 0.271894431, 0.281895611, 0.291896597, 0.301897778, 0.311898764, 0.321899931, 0.331900931, 0.341902083, 0.351903125, 0.361904236, 0.371905222, 0.381906389, 0.391907389, 0.401908542, 0.411909569, 0.421910764, 0.431911722, 0.441912875, 0.451913861, 0.461915042, 0.471916083, 0.481917181, 0.491918194, 0.501919361, 0.511920333, 0.521921583, 0.531922514, 0.541923736, 0.551924653, 0.561925819, 0.571926847, 0.581927986, 0.591928986, 0.601930167, 0.611931181, 0.621932319, 0.631933292, 0.641934458, 0.651935458, 0.661936625, 0.671937625, 0.681938778, 0.691939792, 0.701940944, 0.711941931, 0.721943097, 0.731944097, 0.741945264, 0.751946264, 0.761947417, 0.771948417, 0.781949625, 0.791950569, 0.80195175, 0.811952736, 0.821953917, 0.831954889, 0.841956056, 0.851957069, 0.861958236, 0.871959208, 0.881960375, 0.891961389, 0.901962569, 0.911963569, 0.921964778, 0.931965722, 0.941966861, 0.951967861, 0.961969014, 0.971970042, 0.981971181, 0.991972194, 1.001973333, 1.011974333, 1.0219755] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:47.519" endtime="20201112 12:44:47.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.506" endtime="20201112 12:44:47.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:47.531" endtime="20201112 12:44:47.534"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:47.539" endtime="20201112 12:44:47.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.535" endtime="20201112 12:44:47.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.526" endtime="20201112 12:44:47.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.914" endtime="20201112 12:44:47.565"></status>
</kw>
<msg timestamp="20201112 12:44:47.565" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:47.586" endtime="20201112 12:44:49.706"></status>
</kw>
<msg timestamp="20201112 12:44:49.707" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14202363, 'wakeups': [14212379, 14222379, 14232379, 14242379, 14252379...</msg>
<status status="PASS" starttime="20201112 12:44:47.583" endtime="20201112 12:44:49.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:49.714" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14202363, 'wakeups': [14212379, 14222379, 14232379, 14242379, 14252379...</msg>
<status status="PASS" starttime="20201112 12:44:49.710" endtime="20201112 12:44:49.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:49.717" endtime="20201112 12:44:49.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.576" endtime="20201112 12:44:49.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.570" endtime="20201112 12:44:49.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:49.732" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [14212379, 14222379, 14232379, 14242379, 14252379, 14262379, 14272379, 14282379, 14292379, 14302379, 14312379, 14322379, 14332379, 14342379, 14352379, 14362379, 14...</msg>
<status status="PASS" starttime="20201112 12:44:49.725" endtime="20201112 12:44:49.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:49.742" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:49.740" endtime="20201112 12:44:49.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:49.746" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:49.744" endtime="20201112 12:44:49.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:49.734" endtime="20201112 12:44:49.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:49.759" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:44:49.757" endtime="20201112 12:44:49.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:49.764" level="INFO">VALUE: 14202363</msg>
<status status="PASS" starttime="20201112 12:44:49.761" endtime="20201112 12:44:49.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:49.750" endtime="20201112 12:44:49.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:49.776" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:49.774" endtime="20201112 12:44:49.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:49.782" level="INFO">VALUE: [14212379, 14222379, 14232379, 14242379, 14252379, 14262379, 14272379, 14282379, 14292379, 14302379, 14312379, 14322379, 14332379, 14342379, 14352379, 14362379, 14372379, 14382379, 14392379, 14402379, 14412379, 14422379, 14432379, 14442379, 14452379, 14462379, 14472379, 14482379, 14492379, 14502379, 14512379, 14522379, 14532379, 14542379, 14552379, 14562379, 14572379, 14582379, 14592379, 14602379, 14612379, 14622379, 14632379, 14642379, 14652379, 14662379, 14672379, 14682379, 14692379, 14702379, 14712379, 14722379, 14732379, 14742379, 14752379, 14762379, 14772379, 14782379, 14792379, 14802379, 14812379, 14822379, 14832379, 14842379, 14852379, 14862379, 14872379, 14882379, 14892379, 14902379, 14912379, 14922379, 14932379, 14942379, 14952379, 14962379, 14972379, 14982379, 14992379, 15002379, 15012379, 15022379, 15032379, 15042379, 15052379, 15062379, 15072379, 15082379, 15092379, 15102379, 15112379, 15122379, 15132379, 15142379, 15152379, 15162379, 15172379, 15182379, 15192379, 15202379]</msg>
<status status="PASS" starttime="20201112 12:44:49.778" endtime="20201112 12:44:49.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:49.767" endtime="20201112 12:44:49.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:49.801" endtime="20201112 12:44:50.147"></status>
</kw>
<msg timestamp="20201112 12:44:50.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038305653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048323028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:49.797" endtime="20201112 12:44:50.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:50.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038305653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048323028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:50.156" endtime="20201112 12:44:50.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:50.173" endtime="20201112 12:44:50.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:49.790" endtime="20201112 12:44:50.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:49.785" endtime="20201112 12:44:50.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:50.219" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:50.182" endtime="20201112 12:44:50.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:50.225" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:44:50.224" endtime="20201112 12:44:50.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:50.227" level="INFO">VALUE: 0.038305653</msg>
<status status="PASS" starttime="20201112 12:44:50.226" endtime="20201112 12:44:50.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:50.220" endtime="20201112 12:44:50.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:50.233" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:50.232" endtime="20201112 12:44:50.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:50.235" level="INFO">VALUE: [0.048323028, 0.058324181, 0.068325181, 0.078326361, 0.088327347, 0.098328569, 0.108329514, 0.118330694, 0.128331681, 0.138332861, 0.148333903, 0.158335, 0.168336, 0.178337167, 0.188338167, 0.198339347, 0.208340347, 0.2183415, 0.2283425, 0.238343667, 0.248344653, 0.258345833, 0.268346833, 0.278348, 0.288348986, 0.298350167, 0.308351153, 0.318352375, 0.328353319, 0.338354486, 0.348355486, 0.358356639, 0.368357639, 0.378358806, 0.388359806, 0.398360972, 0.408361986, 0.418363153, 0.428364139, 0.438365306, 0.448366306, 0.458367472, 0.468368472, 0.478369653, 0.488370653, 0.498371806, 0.508372847, 0.518373986, 0.528374986, 0.538376139, 0.548377125, 0.558378292, 0.568379292, 0.578380472, 0.588381458, 0.598382625, 0.608383625, 0.618384792, 0.628385792, 0.638386958, 0.648387972, 0.658389125, 0.668390125, 0.678391292, 0.688392292, 0.698393514, 0.708394472, 0.718395639, 0.728396625, 0.738397792, 0.748398847, 0.758399958, 0.768400958, 0.778402153, 0.788403139, 0.798404292, 0.808405292, 0.818406514, 0.828407458, 0.838408639, 0.848409625, 0.858410792, 0.868411806, 0.878412958, 0.888413958, 0.898415125, 0.908416125, 0.918417292, 0.928418319, 0.938419514, 0.948420458, 0.958421625, 0.968422653, 0.978423778, 0.988424806, 0.998425958, 1.008426944, 1.018428111, 1.028429111, 1.038430292] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:50.234" endtime="20201112 12:44:50.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:50.229" endtime="20201112 12:44:50.237"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:50.240" endtime="20201112 12:44:50.241"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:50.244" endtime="20201112 12:44:50.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:50.242" endtime="20201112 12:44:50.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:50.237" endtime="20201112 12:44:50.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.567" endtime="20201112 12:44:50.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.228" endtime="20201112 12:44:50.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.226" endtime="20201112 12:44:50.266"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:50.268" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:50.278" endtime="20201112 12:44:52.397"></status>
</kw>
<msg timestamp="20201112 12:44:52.398" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 16892800, 'wakeups': [16902824, 16912824, 16922824, 16932824, 16942824...</msg>
<status status="PASS" starttime="20201112 12:44:50.277" endtime="20201112 12:44:52.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:52.405" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 16892800, 'wakeups': [16902824, 16912824, 16922824, 16932824, 16942824...</msg>
<status status="PASS" starttime="20201112 12:44:52.401" endtime="20201112 12:44:52.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:52.407" endtime="20201112 12:44:52.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:50.274" endtime="20201112 12:44:52.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:50.271" endtime="20201112 12:44:52.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:52.416" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [16902824, 16912824, 16922824, 16932824, 16942824, 16952824, 16962824, 16972824, 16982824, 16992824, 17002824, 17012824, 17022824, 17032824, 17042824, 17052824, 17...</msg>
<status status="PASS" starttime="20201112 12:44:52.414" endtime="20201112 12:44:52.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:52.421" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:52.420" endtime="20201112 12:44:52.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:52.423" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:52.422" endtime="20201112 12:44:52.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:52.417" endtime="20201112 12:44:52.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:52.429" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:44:52.428" endtime="20201112 12:44:52.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:52.431" level="INFO">VALUE: 16892800</msg>
<status status="PASS" starttime="20201112 12:44:52.430" endtime="20201112 12:44:52.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:52.425" endtime="20201112 12:44:52.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:52.437" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:52.436" endtime="20201112 12:44:52.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:52.440" level="INFO">VALUE: [16902824, 16912824, 16922824, 16932824, 16942824, 16952824, 16962824, 16972824, 16982824, 16992824, 17002824, 17012824, 17022824, 17032824, 17042824, 17052824, 17062824, 17072824, 17082824, 17092824, 17102824, 17112824, 17122824, 17132824, 17142824, 17152824, 17162824, 17172824, 17182824, 17192824, 17202824, 17212824, 17222824, 17232824, 17242824, 17252824, 17262824, 17272824, 17282824, 17292824, 17302824, 17312824, 17322824, 17332824, 17342824, 17352824, 17362824, 17372824, 17382824, 17392824, 17402824, 17412824, 17422824, 17432824, 17442824, 17452824, 17462824, 17472824, 17482824, 17492824, 17502824, 17512824, 17522824, 17532824, 17542824, 17552824, 17562824, 17572824, 17582824, 17592824, 17602824, 17612824, 17622824, 17632824, 17642824, 17652824, 17662824, 17672824, 17682824, 17692824, 17702824, 17712824, 17722824, 17732824, 17742824, 17752824, 17762824, 17772824, 17782824, 17792824, 17802824, 17812824, 17822824, 17832824, 17842824, 17852824, 17862824, 17872824, 17882824, 17892824]</msg>
<status status="PASS" starttime="20201112 12:44:52.438" endtime="20201112 12:44:52.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:52.433" endtime="20201112 12:44:52.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:52.450" endtime="20201112 12:44:52.742"></status>
</kw>
<msg timestamp="20201112 12:44:52.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025185, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035211681, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:44:52.448" endtime="20201112 12:44:52.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:52.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025185, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035211681, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:44:52.746" endtime="20201112 12:44:52.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:52.754" endtime="20201112 12:44:52.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:52.444" endtime="20201112 12:44:52.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:52.441" endtime="20201112 12:44:52.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:52.781" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:52.758" endtime="20201112 12:44:52.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:52.787" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:44:52.785" endtime="20201112 12:44:52.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:52.789" level="INFO">VALUE: 0.025185</msg>
<status status="PASS" starttime="20201112 12:44:52.788" endtime="20201112 12:44:52.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:52.782" endtime="20201112 12:44:52.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:52.795" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:52.794" endtime="20201112 12:44:52.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:52.797" level="INFO">VALUE: [0.035211681, 0.045212556, 0.055213556, 0.065214722, 0.075215708, 0.085216889, 0.095217875, 0.105219056, 0.115220056, 0.125221208, 0.135222194, 0.145223361, 0.155224375, 0.165225528, 0.175226528, 0.185227681, 0.195228736, 0.205229847, 0.215230847, 0.225232028, 0.235233028, 0.245234181, 0.255235167, 0.265236333, 0.275237333, 0.2852385, 0.295239528, 0.305240667, 0.315241653, 0.325242833, 0.335243833, 0.345244986, 0.355246, 0.365247153, 0.375248153, 0.385249375, 0.395250333, 0.405251486, 0.415252472, 0.425253639, 0.435254653, 0.445255806, 0.455256847, 0.465258028, 0.475258972, 0.485260153, 0.495261139, 0.505262292, 0.515263292, 0.525264472, 0.535265472, 0.545266625, 0.555267625, 0.565268792, 0.575269792, 0.585270958, 0.595271958, 0.605273153, 0.615274139, 0.625275306, 0.635276306, 0.645277444, 0.655278444, 0.665279611, 0.675280611, 0.685281778, 0.695282778, 0.705283958, 0.715284958, 0.725286167, 0.735287125, 0.745288278, 0.755289278, 0.765290444, 0.775291458, 0.785292625, 0.795293611, 0.805294792, 0.815295778, 0.825296931, 0.835297944, 0.845299097, 0.855300097, 0.865301278, 0.875302333, 0.885303444, 0.895304444, 0.905305611, 0.915306611, 0.925307764, 0.935308764, 0.945309931, 0.955310917, 0.965312083, 0.975313097, 0.98531425, 0.99531525, 1.005316417, 1.015317417, 1.025318597] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:52.796" endtime="20201112 12:44:52.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:52.790" endtime="20201112 12:44:52.798"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:52.801" endtime="20201112 12:44:52.803"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:52.805" endtime="20201112 12:44:52.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:52.803" endtime="20201112 12:44:52.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:52.799" endtime="20201112 12:44:52.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:50.269" endtime="20201112 12:44:52.827"></status>
</kw>
<msg timestamp="20201112 12:44:52.827" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:52.838" endtime="20201112 12:44:54.956"></status>
</kw>
<msg timestamp="20201112 12:44:54.958" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 19452872, 'wakeups': [19462897, 19472896, 19482896, 19492896, 19502896...</msg>
<status status="PASS" starttime="20201112 12:44:52.837" endtime="20201112 12:44:54.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:54.966" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 19452872, 'wakeups': [19462897, 19472896, 19482896, 19492896, 19502896...</msg>
<status status="PASS" starttime="20201112 12:44:54.960" endtime="20201112 12:44:54.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:54.968" endtime="20201112 12:44:54.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:52.832" endtime="20201112 12:44:54.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:52.829" endtime="20201112 12:44:54.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:54.974" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [19462897, 19472896, 19482896, 19492896, 19502896, 19512896, 19522896, 19532896, 19542896, 19552896, 19562896, 19572896, 19582896, 19592896, 19602896, 19612896, 19...</msg>
<status status="PASS" starttime="20201112 12:44:54.972" endtime="20201112 12:44:54.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:54.979" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:54.978" endtime="20201112 12:44:54.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:54.981" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:54.980" endtime="20201112 12:44:54.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.975" endtime="20201112 12:44:54.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:54.987" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:44:54.986" endtime="20201112 12:44:54.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:54.989" level="INFO">VALUE: 19452872</msg>
<status status="PASS" starttime="20201112 12:44:54.988" endtime="20201112 12:44:54.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.983" endtime="20201112 12:44:54.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:54.996" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:54.994" endtime="20201112 12:44:54.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:54.998" level="INFO">VALUE: [19462897, 19472896, 19482896, 19492896, 19502896, 19512896, 19522896, 19532896, 19542896, 19552896, 19562896, 19572896, 19582896, 19592896, 19602896, 19612896, 19622896, 19632896, 19642896, 19652896, 19662896, 19672896, 19682896, 19692896, 19702896, 19712896, 19722896, 19732896, 19742896, 19752896, 19762896, 19772896, 19782896, 19792896, 19802896, 19812896, 19822896, 19832896, 19842896, 19852896, 19862896, 19872896, 19882896, 19892896, 19902896, 19912896, 19922896, 19932896, 19942896, 19952896, 19962896, 19972896, 19982896, 19992896, 20002896, 20012896, 20022896, 20032896, 20042896, 20052896, 20062896, 20072896, 20082896, 20092896, 20102896, 20112896, 20122896, 20132896, 20142896, 20152896, 20162896, 20172896, 20182896, 20192896, 20202896, 20212896, 20222896, 20232896, 20242896, 20252896, 20262896, 20272896, 20282896, 20292896, 20302896, 20312896, 20322896, 20332896, 20342896, 20352896, 20362896, 20372896, 20382896, 20392896, 20402896, 20412896, 20422896, 20432896, 20442896, 20452896]</msg>
<status status="PASS" starttime="20201112 12:44:54.997" endtime="20201112 12:44:54.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.991" endtime="20201112 12:44:54.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:55.008" endtime="20201112 12:44:55.347"></status>
</kw>
<msg timestamp="20201112 12:44:55.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023451014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033478042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:55.006" endtime="20201112 12:44:55.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:55.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023451014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033478042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:55.356" endtime="20201112 12:44:55.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:55.373" endtime="20201112 12:44:55.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:55.003" endtime="20201112 12:44:55.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:55.000" endtime="20201112 12:44:55.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:55.437" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:55.382" endtime="20201112 12:44:55.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:55.448" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:44:55.446" endtime="20201112 12:44:55.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:55.453" level="INFO">VALUE: 0.023451014</msg>
<status status="PASS" starttime="20201112 12:44:55.451" endtime="20201112 12:44:55.454"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:55.439" endtime="20201112 12:44:55.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:55.466" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:55.464" endtime="20201112 12:44:55.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:55.471" level="INFO">VALUE: [0.033478042, 0.043477917, 0.053478986, 0.063480083, 0.073481125, 0.083482236, 0.093483236, 0.103484389, 0.113485389, 0.123486542, 0.133487542, 0.143488764, 0.153489708, 0.163490875, 0.173491861, 0.183493042, 0.193494042, 0.203495194, 0.213496236, 0.223497347, 0.233498347, 0.243499542, 0.253500514, 0.263501667, 0.273502667, 0.283503847, 0.293504847, 0.303506, 0.313507, 0.323508153, 0.333509208, 0.343510319, 0.353511333, 0.363512486, 0.373513486, 0.383514722, 0.393515694, 0.403516806, 0.413517806, 0.423518972, 0.433519986, 0.443521153, 0.453522125, 0.463523292, 0.473524292, 0.483525486, 0.493526458, 0.503527625, 0.513528667, 0.523529778, 0.533530792, 0.543531944, 0.553532944, 0.563534153, 0.573535111, 0.583536264, 0.593537264, 0.603538444, 0.613539444, 0.623540597, 0.633541667, 0.643542778, 0.653543792, 0.663544917, 0.673545931, 0.683547111, 0.693548139, 0.703549264, 0.71355025, 0.723551417, 0.733552417, 0.743553583, 0.753554569, 0.763555736, 0.77355675, 0.783557903, 0.793558903, 0.803560069, 0.813561069, 0.82356225, 0.833563222, 0.843564389, 0.853565403, 0.863566569, 0.873567556, 0.883568736, 0.893569722, 0.903570903, 0.913571875, 0.923573042, 0.933574042, 0.943575222, 0.953576208, 0.963577403, 0.973578403, 0.983579583, 0.993580542, 1.003581722, 1.013582694, 1.023583861] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:55.469" endtime="20201112 12:44:55.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:55.457" endtime="20201112 12:44:55.474"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:55.480" endtime="20201112 12:44:55.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:55.489" endtime="20201112 12:44:55.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:55.484" endtime="20201112 12:44:55.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:55.476" endtime="20201112 12:44:55.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:52.828" endtime="20201112 12:44:55.514"></status>
</kw>
<msg timestamp="20201112 12:44:55.515" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:55.536" endtime="20201112 12:44:57.656"></status>
</kw>
<msg timestamp="20201112 12:44:57.657" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 22151820, 'wakeups': [22161844, 22171844, 22181844, 22191844, 22201844...</msg>
<status status="PASS" starttime="20201112 12:44:55.533" endtime="20201112 12:44:57.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:57.664" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 22151820, 'wakeups': [22161844, 22171844, 22181844, 22191844, 22201844...</msg>
<status status="PASS" starttime="20201112 12:44:57.660" endtime="20201112 12:44:57.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:57.667" endtime="20201112 12:44:57.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:55.525" endtime="20201112 12:44:57.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:55.520" endtime="20201112 12:44:57.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:57.680" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [22161844, 22171844, 22181844, 22191844, 22201844, 22211844, 22221844, 22231844, 22241844, 22251844, 22261844, 22271844, 22281844, 22291844, 22301844, 22311844, 22...</msg>
<status status="PASS" starttime="20201112 12:44:57.675" endtime="20201112 12:44:57.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:57.690" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:57.688" endtime="20201112 12:44:57.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:57.695" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:57.693" endtime="20201112 12:44:57.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:57.682" endtime="20201112 12:44:57.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:57.713" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:44:57.710" endtime="20201112 12:44:57.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:57.717" level="INFO">VALUE: 22151820</msg>
<status status="PASS" starttime="20201112 12:44:57.715" endtime="20201112 12:44:57.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:57.703" endtime="20201112 12:44:57.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:57.730" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:57.727" endtime="20201112 12:44:57.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:57.734" level="INFO">VALUE: [22161844, 22171844, 22181844, 22191844, 22201844, 22211844, 22221844, 22231844, 22241844, 22251844, 22261844, 22271844, 22281844, 22291844, 22301844, 22311844, 22321844, 22331844, 22341844, 22351844, 22361844, 22371844, 22381844, 22391844, 22401844, 22411844, 22421844, 22431844, 22441844, 22451844, 22461844, 22471844, 22481844, 22491844, 22501844, 22511844, 22521844, 22531844, 22541844, 22551844, 22561844, 22571844, 22581844, 22591844, 22601844, 22611844, 22621844, 22631844, 22641844, 22651844, 22661844, 22671844, 22681844, 22691844, 22701844, 22711844, 22721844, 22731844, 22741844, 22751844, 22761844, 22771844, 22781844, 22791844, 22801844, 22811844, 22821844, 22831844, 22841844, 22851844, 22861844, 22871844, 22881844, 22891844, 22901844, 22911844, 22921844, 22931844, 22941844, 22951844, 22961844, 22971844, 22981844, 22991844, 23001844, 23011844, 23021844, 23031844, 23041844, 23051844, 23061844, 23071844, 23081844, 23091844, 23101844, 23111844, 23121844, 23131844, 23141844, 23151844]</msg>
<status status="PASS" starttime="20201112 12:44:57.732" endtime="20201112 12:44:57.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:57.721" endtime="20201112 12:44:57.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:57.756" endtime="20201112 12:44:58.097"></status>
</kw>
<msg timestamp="20201112 12:44:58.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038557431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048584111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:57.752" endtime="20201112 12:44:58.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:58.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038557431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048584111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:58.102" endtime="20201112 12:44:58.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:58.109" endtime="20201112 12:44:58.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:57.745" endtime="20201112 12:44:58.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:57.738" endtime="20201112 12:44:58.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:58.137" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:58.113" endtime="20201112 12:44:58.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:58.142" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:44:58.141" endtime="20201112 12:44:58.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:58.144" level="INFO">VALUE: 0.038557431</msg>
<status status="PASS" starttime="20201112 12:44:58.143" endtime="20201112 12:44:58.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.138" endtime="20201112 12:44:58.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:58.150" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:58.149" endtime="20201112 12:44:58.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:58.153" level="INFO">VALUE: [0.048584111, 0.058584986, 0.068585972, 0.078587139, 0.088588153, 0.098589292, 0.108590306, 0.118591472, 0.128592458, 0.138593611, 0.148594625, 0.158595778, 0.168596778, 0.178597931, 0.188598931, 0.198600097, 0.208601083, 0.21860225, 0.228603264, 0.238604458, 0.248605403, 0.258606569, 0.268607583, 0.278608736, 0.288609736, 0.298610889, 0.308611903, 0.318613069, 0.328614097, 0.338615222, 0.348616222, 0.358617375, 0.368618375, 0.378619528, 0.388620528, 0.398621708, 0.408622694, 0.418623861, 0.428624847, 0.438626028, 0.448627056, 0.458628208, 0.468629181, 0.478630389, 0.488631403, 0.4986325, 0.508633514, 0.518634681, 0.528635667, 0.538636819, 0.548637819, 0.558639, 0.568639986, 0.578641139, 0.588642139, 0.598643319, 0.608644319, 0.618645472, 0.628646472, 0.638647639, 0.648648625, 0.658649806, 0.668650792, 0.678651972, 0.688652958, 0.698654181, 0.708655167, 0.718656292, 0.728657278, 0.738658444, 0.748659444, 0.758660625, 0.768661597, 0.778662764, 0.788663764, 0.798664931, 0.808665931, 0.818667083, 0.828668083, 0.838669264, 0.848670264, 0.858671431, 0.868672403, 0.878673569, 0.888674569, 0.898675736, 0.90867675, 0.918677944, 0.928678903, 0.938680056, 0.948681056, 0.958682236, 0.968683222, 0.978684417, 0.988685375, 0.998686542, 1.008687556, 1.018688708, 1.028689708, 1.038690875] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:58.152" endtime="20201112 12:44:58.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.146" endtime="20201112 12:44:58.154"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:58.157" endtime="20201112 12:44:58.159"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:58.161" endtime="20201112 12:44:58.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.159" endtime="20201112 12:44:58.182"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.155" endtime="20201112 12:44:58.182"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:55.516" endtime="20201112 12:44:58.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:50.267" endtime="20201112 12:44:58.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:50.266" endtime="20201112 12:44:58.183"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:58.186" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:58.205" endtime="20201112 12:45:00.325"></status>
</kw>
<msg timestamp="20201112 12:45:00.327" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 24820763, 'wakeups': [24830797, 24840797, 24850796, 24860796, 24870796...</msg>
<status status="PASS" starttime="20201112 12:44:58.202" endtime="20201112 12:45:00.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:00.334" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 24820763, 'wakeups': [24830797, 24840797, 24850796, 24860796, 24870796...</msg>
<status status="PASS" starttime="20201112 12:45:00.329" endtime="20201112 12:45:00.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:00.336" endtime="20201112 12:45:00.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.194" endtime="20201112 12:45:00.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.188" endtime="20201112 12:45:00.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:00.349" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [24830797, 24840797, 24850796, 24860796, 24870796, 24880796, 24890796, 24900796, 24910796, 24920796, 24930796, 24940796, 24950796, 24960796, 24970796, 24980796, 24...</msg>
<status status="PASS" starttime="20201112 12:45:00.344" endtime="20201112 12:45:00.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:00.359" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:00.357" endtime="20201112 12:45:00.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:00.364" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:00.362" endtime="20201112 12:45:00.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:00.351" endtime="20201112 12:45:00.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:00.376" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:45:00.374" endtime="20201112 12:45:00.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:00.381" level="INFO">VALUE: 24820763</msg>
<status status="PASS" starttime="20201112 12:45:00.379" endtime="20201112 12:45:00.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:00.367" endtime="20201112 12:45:00.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:00.394" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:00.391" endtime="20201112 12:45:00.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:00.398" level="INFO">VALUE: [24830797, 24840797, 24850796, 24860796, 24870796, 24880796, 24890796, 24900796, 24910796, 24920796, 24930796, 24940796, 24950796, 24960796, 24970796, 24980796, 24990796, 25000796, 25010796, 25020796, 25030796, 25040796, 25050796, 25060796, 25070796, 25080796, 25090796, 25100796, 25110796, 25120796, 25130796, 25140796, 25150796, 25160796, 25170796, 25180796, 25190796, 25200796, 25210796, 25220796, 25230796, 25240796, 25250796, 25260796, 25270796, 25280796, 25290796, 25300796, 25310796, 25320796, 25330796, 25340796, 25350796, 25360796, 25370796, 25380796, 25390796, 25400796, 25410796, 25420796, 25430796, 25440796, 25450796, 25460796, 25470796, 25480796, 25490796, 25500796, 25510796, 25520796, 25530796, 25540796, 25550796, 25560796, 25570796, 25580796, 25590796, 25600796, 25610796, 25620796, 25630796, 25640796, 25650796, 25660796, 25670796, 25680796, 25690796, 25700796, 25710796, 25720796, 25730796, 25740796, 25750796, 25760796, 25770796, 25780796, 25790796, 25800796, 25810796, 25820796]</msg>
<status status="PASS" starttime="20201112 12:45:00.396" endtime="20201112 12:45:00.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:00.385" endtime="20201112 12:45:00.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:00.418" endtime="20201112 12:45:00.764"></status>
</kw>
<msg timestamp="20201112 12:45:00.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035559292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045595306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:00.415" endtime="20201112 12:45:00.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:00.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035559292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045595306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:00.773" endtime="20201112 12:45:00.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:00.790" endtime="20201112 12:45:00.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:00.408" endtime="20201112 12:45:00.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:00.403" endtime="20201112 12:45:00.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:00.855" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:00.799" endtime="20201112 12:45:00.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:00.865" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:45:00.863" endtime="20201112 12:45:00.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:00.870" level="INFO">VALUE: 0.035559292</msg>
<status status="PASS" starttime="20201112 12:45:00.868" endtime="20201112 12:45:00.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:00.856" endtime="20201112 12:45:00.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:00.884" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:00.881" endtime="20201112 12:45:00.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:00.888" level="INFO">VALUE: [0.045595306, 0.055595833, 0.065595833, 0.075597, 0.085597986, 0.095599222, 0.105600194, 0.115601319, 0.125602306, 0.135603472, 0.145604472, 0.155605639, 0.165606625, 0.175607792, 0.185608778, 0.195609958, 0.205610944, 0.215612125, 0.225613097, 0.235614264, 0.245615278, 0.255616444, 0.265617417, 0.275618583, 0.285619639, 0.295620764, 0.305621736, 0.315622903, 0.325623931, 0.335625083, 0.345626069, 0.355627222, 0.365628222, 0.375629458, 0.385630375, 0.395631542, 0.405632542, 0.415633764, 0.425634694, 0.435635875, 0.445636861, 0.455638028, 0.465639028, 0.475640181, 0.485641194, 0.495642361, 0.505643361, 0.515644583, 0.525645514, 0.535646667, 0.545647667, 0.555648847, 0.565649833, 0.575650986, 0.585651986, 0.595653153, 0.605654222, 0.615655319, 0.625656319, 0.635657472, 0.645658472, 0.655659708, 0.665660653, 0.675661792, 0.685662806, 0.695663972, 0.705664958, 0.715666139, 0.725667139, 0.735668278, 0.745669278, 0.755670444, 0.765671458, 0.775672611, 0.785673597, 0.795674778, 0.805675778, 0.815676944, 0.825677931, 0.835679083, 0.845680083, 0.855681264, 0.86568225, 0.875683417, 0.885684417, 0.895685569, 0.905686569, 0.915687736, 0.92568875, 0.935689917, 0.945690889, 0.955692083, 0.965693056, 0.975694222, 0.985695222, 0.995696375, 1.005697375, 1.015698556, 1.025699556, 1.035700778] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:00.886" endtime="20201112 12:45:00.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:00.874" endtime="20201112 12:45:00.891"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:00.897" endtime="20201112 12:45:00.900"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:00.906" endtime="20201112 12:45:00.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:00.901" endtime="20201112 12:45:00.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:00.893" endtime="20201112 12:45:00.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.186" endtime="20201112 12:45:00.931"></status>
</kw>
<msg timestamp="20201112 12:45:00.932" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:00.954" endtime="20201112 12:45:03.055"></status>
</kw>
<msg timestamp="20201112 12:45:03.056" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 27569457, 'wakeups': [27579491, 27589491, 27599490, 27609490, 27619490...</msg>
<status status="PASS" starttime="20201112 12:45:00.949" endtime="20201112 12:45:03.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:03.059" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 27569457, 'wakeups': [27579491, 27589491, 27599490, 27609490, 27619490...</msg>
<status status="PASS" starttime="20201112 12:45:03.057" endtime="20201112 12:45:03.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:03.060" endtime="20201112 12:45:03.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:00.942" endtime="20201112 12:45:03.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:00.937" endtime="20201112 12:45:03.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:03.067" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [27579491, 27589491, 27599490, 27609490, 27619490, 27629490, 27639490, 27649490, 27659490, 27669490, 27679490, 27689490, 27699490, 27709490, 27719490, 27729490, 27...</msg>
<status status="PASS" starttime="20201112 12:45:03.064" endtime="20201112 12:45:03.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:03.071" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:03.070" endtime="20201112 12:45:03.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:03.074" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:03.073" endtime="20201112 12:45:03.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.067" endtime="20201112 12:45:03.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:03.080" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:45:03.078" endtime="20201112 12:45:03.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:03.082" level="INFO">VALUE: 27569457</msg>
<status status="PASS" starttime="20201112 12:45:03.081" endtime="20201112 12:45:03.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.075" endtime="20201112 12:45:03.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:03.089" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:03.088" endtime="20201112 12:45:03.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:03.091" level="INFO">VALUE: [27579491, 27589491, 27599490, 27609490, 27619490, 27629490, 27639490, 27649490, 27659490, 27669490, 27679490, 27689490, 27699490, 27709490, 27719490, 27729490, 27739490, 27749490, 27759490, 27769490, 27779490, 27789490, 27799490, 27809490, 27819490, 27829490, 27839490, 27849490, 27859490, 27869490, 27879490, 27889490, 27899490, 27909490, 27919490, 27929490, 27939490, 27949490, 27959490, 27969490, 27979490, 27989490, 27999490, 28009490, 28019490, 28029490, 28039490, 28049490, 28059490, 28069490, 28079490, 28089490, 28099490, 28109490, 28119490, 28129490, 28139490, 28149490, 28159490, 28169490, 28179490, 28189490, 28199490, 28209490, 28219490, 28229490, 28239490, 28249490, 28259490, 28269490, 28279490, 28289490, 28299490, 28309490, 28319490, 28329490, 28339490, 28349490, 28359490, 28369490, 28379490, 28389490, 28399490, 28409490, 28419490, 28429490, 28439490, 28449490, 28459490, 28469490, 28479490, 28489490, 28499490, 28509490, 28519490, 28529490, 28539490, 28549490, 28559490, 28569490]</msg>
<status status="PASS" starttime="20201112 12:45:03.090" endtime="20201112 12:45:03.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.084" endtime="20201112 12:45:03.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:03.100" endtime="20201112 12:45:03.437"></status>
</kw>
<msg timestamp="20201112 12:45:03.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039316569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049352583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:03.099" endtime="20201112 12:45:03.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:03.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039316569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049352583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:03.446" endtime="20201112 12:45:03.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:03.464" endtime="20201112 12:45:03.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.095" endtime="20201112 12:45:03.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.093" endtime="20201112 12:45:03.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:03.527" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:03.473" endtime="20201112 12:45:03.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:03.538" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:45:03.536" endtime="20201112 12:45:03.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:03.542" level="INFO">VALUE: 0.039316569</msg>
<status status="PASS" starttime="20201112 12:45:03.540" endtime="20201112 12:45:03.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.529" endtime="20201112 12:45:03.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:03.556" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:03.554" endtime="20201112 12:45:03.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:03.561" level="INFO">VALUE: [0.049352583, 0.059353125, 0.069353111, 0.079354278, 0.089355278, 0.099356431, 0.109357431, 0.119358597, 0.129359583, 0.139360736, 0.14936175, 0.159362917, 0.169363889, 0.179365056, 0.189366069, 0.199367208, 0.209368208, 0.219369389, 0.229370361, 0.239371542, 0.249372528, 0.259373681, 0.269374694, 0.279375847, 0.289376833, 0.299378, 0.309379, 0.319380208, 0.329381181, 0.339382347, 0.349383361, 0.359384514, 0.369385514, 0.379386694, 0.389387694, 0.399388875, 0.409389861, 0.419391042, 0.429392042, 0.439393236, 0.44939425, 0.459395375, 0.469396375, 0.479397556, 0.489398542, 0.499399708, 0.509400708, 0.519401889, 0.529402875, 0.539404056, 0.549405056, 0.55940625, 0.569407222, 0.579408389, 0.589409389, 0.599410569, 0.609411569, 0.61941275, 0.629413736, 0.639414903, 0.649415903, 0.659417069, 0.669418069, 0.679419264, 0.68942025, 0.699421444, 0.709422458, 0.719423583, 0.729424583, 0.739425764, 0.749426778, 0.759427931, 0.769428931, 0.779430097, 0.789431153, 0.799432264, 0.809433264, 0.819434458, 0.829435458, 0.839436611, 0.849437625, 0.859438792, 0.869439778, 0.879440944, 0.889441958, 0.899443125, 0.909444125, 0.919445292, 0.929446306, 0.939447458, 0.949448458, 0.959449625, 0.969450639, 0.979451806, 0.989452833, 0.999453972, 1.009454972, 1.019456139, 1.029457153, 1.039458361] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:03.558" endtime="20201112 12:45:03.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.546" endtime="20201112 12:45:03.563"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:03.570" endtime="20201112 12:45:03.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:03.578" endtime="20201112 12:45:03.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.574" endtime="20201112 12:45:03.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.565" endtime="20201112 12:45:03.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:00.933" endtime="20201112 12:45:03.605"></status>
</kw>
<msg timestamp="20201112 12:45:03.606" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:03.627" endtime="20201112 12:45:05.748"></status>
</kw>
<msg timestamp="20201112 12:45:05.749" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 30242777, 'wakeups': [30252811, 30262811, 30272810, 30282810, 30292810...</msg>
<status status="PASS" starttime="20201112 12:45:03.623" endtime="20201112 12:45:05.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:05.756" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 30242777, 'wakeups': [30252811, 30262811, 30272810, 30282810, 30292810...</msg>
<status status="PASS" starttime="20201112 12:45:05.752" endtime="20201112 12:45:05.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:05.759" endtime="20201112 12:45:05.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.616" endtime="20201112 12:45:05.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.611" endtime="20201112 12:45:05.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:05.772" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [30252811, 30262811, 30272810, 30282810, 30292810, 30302810, 30312810, 30322810, 30332810, 30342810, 30352810, 30362810, 30372810, 30382810, 30392810, 30402810, 30...</msg>
<status status="PASS" starttime="20201112 12:45:05.767" endtime="20201112 12:45:05.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:05.783" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:05.780" endtime="20201112 12:45:05.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:05.787" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:05.785" endtime="20201112 12:45:05.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:05.774" endtime="20201112 12:45:05.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:05.800" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:45:05.798" endtime="20201112 12:45:05.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:05.804" level="INFO">VALUE: 30242777</msg>
<status status="PASS" starttime="20201112 12:45:05.802" endtime="20201112 12:45:05.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:05.791" endtime="20201112 12:45:05.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:05.817" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:05.815" endtime="20201112 12:45:05.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:05.822" level="INFO">VALUE: [30252811, 30262811, 30272810, 30282810, 30292810, 30302810, 30312810, 30322810, 30332810, 30342810, 30352810, 30362810, 30372810, 30382810, 30392810, 30402810, 30412810, 30422810, 30432810, 30442810, 30452810, 30462810, 30472810, 30482810, 30492810, 30502810, 30512810, 30522810, 30532810, 30542810, 30552810, 30562810, 30572810, 30582810, 30592810, 30602810, 30612810, 30622810, 30632810, 30642810, 30652810, 30662810, 30672810, 30682810, 30692810, 30702810, 30712810, 30722810, 30732810, 30742810, 30752810, 30762810, 30772810, 30782810, 30792810, 30802810, 30812810, 30822810, 30832810, 30842810, 30852810, 30862810, 30872810, 30882810, 30892810, 30902810, 30912810, 30922810, 30932810, 30942810, 30952810, 30962810, 30972810, 30982810, 30992810, 31002810, 31012810, 31022810, 31032810, 31042810, 31052810, 31062810, 31072810, 31082810, 31092810, 31102810, 31112810, 31122810, 31132810, 31142810, 31152810, 31162810, 31172810, 31182810, 31192810, 31202810, 31212810, 31222810, 31232810, 31242810]</msg>
<status status="PASS" starttime="20201112 12:45:05.819" endtime="20201112 12:45:05.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:05.808" endtime="20201112 12:45:05.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:05.841" endtime="20201112 12:45:06.183"></status>
</kw>
<msg timestamp="20201112 12:45:06.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038773375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048809389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:05.838" endtime="20201112 12:45:06.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:06.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038773375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048809389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:06.187" endtime="20201112 12:45:06.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:06.195" endtime="20201112 12:45:06.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:05.830" endtime="20201112 12:45:06.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:05.826" endtime="20201112 12:45:06.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:06.224" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:06.200" endtime="20201112 12:45:06.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:06.229" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:45:06.228" endtime="20201112 12:45:06.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:06.231" level="INFO">VALUE: 0.038773375</msg>
<status status="PASS" starttime="20201112 12:45:06.230" endtime="20201112 12:45:06.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:06.225" endtime="20201112 12:45:06.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:06.238" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:06.237" endtime="20201112 12:45:06.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:06.240" level="INFO">VALUE: [0.048809389, 0.058809931, 0.068809931, 0.078811111, 0.088812111, 0.098813264, 0.108814264, 0.118815514, 0.128816431, 0.138817639, 0.148818611, 0.15881975, 0.168820764, 0.178821917, 0.188822931, 0.198824083, 0.208825083, 0.21882625, 0.22882725, 0.238828417, 0.248829417, 0.258830625, 0.268831583, 0.278832764, 0.288833764, 0.298834903, 0.308835903, 0.318837069, 0.328838083, 0.338839236, 0.348840236, 0.358841403, 0.368842403, 0.378843569, 0.388844569, 0.39884575, 0.408846736, 0.418847903, 0.428848889, 0.438850069, 0.448851056, 0.458852236, 0.468853222, 0.478854389, 0.488855403, 0.498856611, 0.508857569, 0.518858722, 0.528859722, 0.538860903, 0.548861958, 0.558863056, 0.568864069, 0.578865222, 0.588866222, 0.598867389, 0.608868403, 0.618869569, 0.628870556, 0.638871736, 0.648872736, 0.658873903, 0.668874889, 0.678876056, 0.688877056, 0.698878236, 0.708879222, 0.718880403, 0.728881389, 0.738882556, 0.748883569, 0.758884736, 0.768885736, 0.778886889, 0.788887889, 0.798889097, 0.808890083, 0.818891222, 0.828892222, 0.838893403, 0.848894389, 0.858895556, 0.868896569, 0.878897736, 0.888898736, 0.898899903, 0.908900903, 0.918902056, 0.928903056, 0.938904222, 0.948905222, 0.958906403, 0.968907403, 0.978908583, 0.988909569, 0.99891075, 1.008911792, 1.018912903, 1.028913889, 1.038915056] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:06.239" endtime="20201112 12:45:06.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:06.233" endtime="20201112 12:45:06.242"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:06.245" endtime="20201112 12:45:06.246"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:06.248" endtime="20201112 12:45:06.268"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:06.246" endtime="20201112 12:45:06.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:06.242" endtime="20201112 12:45:06.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.607" endtime="20201112 12:45:06.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.184" endtime="20201112 12:45:06.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.183" endtime="20201112 12:45:06.270"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:45:06.273" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:06.283" endtime="20201112 12:45:08.383"></status>
</kw>
<msg timestamp="20201112 12:45:08.384" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 32897204, 'wakeups': [32907249, 32917249, 32927249, 32937249, 32947249...</msg>
<status status="PASS" starttime="20201112 12:45:06.281" endtime="20201112 12:45:08.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:08.387" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 32897204, 'wakeups': [32907249, 32917249, 32927249, 32937249, 32947249...</msg>
<status status="PASS" starttime="20201112 12:45:08.385" endtime="20201112 12:45:08.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:08.388" endtime="20201112 12:45:08.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:06.278" endtime="20201112 12:45:08.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:06.275" endtime="20201112 12:45:08.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:08.396" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [32907249, 32917249, 32927249, 32937249, 32947249, 32957249, 32967249, 32977249, 32987249, 32997249, 33007249, 33017249, 33027249, 33037249, 33047249, 33057249, 33...</msg>
<status status="PASS" starttime="20201112 12:45:08.394" endtime="20201112 12:45:08.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:08.403" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:08.401" endtime="20201112 12:45:08.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:08.408" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:08.406" endtime="20201112 12:45:08.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:08.397" endtime="20201112 12:45:08.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:08.421" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:45:08.418" endtime="20201112 12:45:08.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:08.425" level="INFO">VALUE: 32897204</msg>
<status status="PASS" starttime="20201112 12:45:08.423" endtime="20201112 12:45:08.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:08.412" endtime="20201112 12:45:08.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:08.438" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:08.436" endtime="20201112 12:45:08.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:08.443" level="INFO">VALUE: [32907249, 32917249, 32927249, 32937249, 32947249, 32957249, 32967249, 32977249, 32987249, 32997249, 33007249, 33017249, 33027249, 33037249, 33047249, 33057249, 33067249, 33077249, 33087249, 33097249, 33107249, 33117249, 33127249, 33137249, 33147249, 33157249, 33167249, 33177249, 33187249, 33197249, 33207249, 33217249, 33227249, 33237249, 33247249, 33257249, 33267249, 33277249, 33287249, 33297249, 33307249, 33317249, 33327249, 33337249, 33347249, 33357249, 33367249, 33377249, 33387249, 33397249, 33407249, 33417249, 33427249, 33437249, 33447249, 33457249, 33467249, 33477249, 33487249, 33497249, 33507249, 33517249, 33527249, 33537249, 33547249, 33557249, 33567249, 33577249, 33587249, 33597249, 33607249, 33617249, 33627249, 33637249, 33647249, 33657249, 33667249, 33677249, 33687249, 33697249, 33707249, 33717249, 33727249, 33737249, 33747249, 33757249, 33767249, 33777249, 33787249, 33797249, 33807249, 33817249, 33827249, 33837249, 33847249, 33857249, 33867249, 33877249, 33887249, 33897249]</msg>
<status status="PASS" starttime="20201112 12:45:08.441" endtime="20201112 12:45:08.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:08.429" endtime="20201112 12:45:08.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:08.463" endtime="20201112 12:45:08.808"></status>
</kw>
<msg timestamp="20201112 12:45:08.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025011653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035059194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:08.459" endtime="20201112 12:45:08.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:08.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025011653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035059194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:08.817" endtime="20201112 12:45:08.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:08.834" endtime="20201112 12:45:08.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:08.452" endtime="20201112 12:45:08.840"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:08.447" endtime="20201112 12:45:08.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:08.898" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:08.843" endtime="20201112 12:45:08.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:08.909" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:45:08.906" endtime="20201112 12:45:08.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:08.913" level="INFO">VALUE: 0.025011653</msg>
<status status="PASS" starttime="20201112 12:45:08.911" endtime="20201112 12:45:08.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:08.900" endtime="20201112 12:45:08.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:08.927" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:08.924" endtime="20201112 12:45:08.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:08.931" level="INFO">VALUE: [0.035059194, 0.04505975, 0.055060722, 0.065061889, 0.075062875, 0.085064042, 0.095065042, 0.105066208, 0.115067222, 0.125068389, 0.135069375, 0.145070542, 0.155071528, 0.165072708, 0.175073694, 0.185074917, 0.195075861, 0.205077042, 0.215078097, 0.225079194, 0.235080236, 0.245081347, 0.255082403, 0.265083556, 0.275084514, 0.285085681, 0.295086681, 0.305087861, 0.315088847, 0.325090028, 0.335091014, 0.345092181, 0.355093167, 0.365094333, 0.375095347, 0.385096514, 0.395097514, 0.405098667, 0.415099667, 0.425100847, 0.435101833, 0.445103, 0.455104, 0.465105208, 0.475106167, 0.485107333, 0.495108361, 0.505109486, 0.515110528, 0.525111667, 0.535112653, 0.545113833, 0.555114819, 0.565116014, 0.575117, 0.585118153, 0.595119153, 0.605120319, 0.615121319, 0.625122486, 0.6351235, 0.645124653, 0.655125708, 0.665126819, 0.675127819, 0.685128986, 0.695129986, 0.705131153, 0.715132153, 0.725133319, 0.735134319, 0.7451355, 0.7551365, 0.765137667, 0.775138639, 0.785139806, 0.795140806, 0.805141972, 0.815142986, 0.825144139, 0.835145139, 0.845146306, 0.855147306, 0.865148472, 0.875149486, 0.885150639, 0.895151639, 0.905152806, 0.915153806, 0.925154972, 0.935155972, 0.945157208, 0.955158139, 0.965159319, 0.975160319, 0.985161528, 0.995162486, 1.005163653, 1.015164653, 1.025165847] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:08.929" endtime="20201112 12:45:08.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:08.917" endtime="20201112 12:45:08.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:08.940" endtime="20201112 12:45:08.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:08.949" endtime="20201112 12:45:08.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:08.945" endtime="20201112 12:45:08.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:08.936" endtime="20201112 12:45:08.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:06.274" endtime="20201112 12:45:08.975"></status>
</kw>
<msg timestamp="20201112 12:45:08.976" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:08.997" endtime="20201112 12:45:11.117"></status>
</kw>
<msg timestamp="20201112 12:45:11.118" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 35612782, 'wakeups': [35622828, 35632827, 35642827, 35652827, 35662827...</msg>
<status status="PASS" starttime="20201112 12:45:08.993" endtime="20201112 12:45:11.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.125" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 35612782, 'wakeups': [35622828, 35632827, 35642827, 35652827, 35662827...</msg>
<status status="PASS" starttime="20201112 12:45:11.120" endtime="20201112 12:45:11.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:11.127" endtime="20201112 12:45:11.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:08.986" endtime="20201112 12:45:11.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:08.981" endtime="20201112 12:45:11.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:11.140" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [35622828, 35632827, 35642827, 35652827, 35662827, 35672827, 35682827, 35692827, 35702827, 35712827, 35722827, 35732827, 35742827, 35752827, 35762827, 35772827, 35...</msg>
<status status="PASS" starttime="20201112 12:45:11.136" endtime="20201112 12:45:11.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.151" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:11.148" endtime="20201112 12:45:11.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.155" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:11.153" endtime="20201112 12:45:11.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:11.142" endtime="20201112 12:45:11.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.168" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:45:11.165" endtime="20201112 12:45:11.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.172" level="INFO">VALUE: 35612782</msg>
<status status="PASS" starttime="20201112 12:45:11.170" endtime="20201112 12:45:11.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:11.159" endtime="20201112 12:45:11.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.185" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:11.182" endtime="20201112 12:45:11.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.190" level="INFO">VALUE: [35622828, 35632827, 35642827, 35652827, 35662827, 35672827, 35682827, 35692827, 35702827, 35712827, 35722827, 35732827, 35742827, 35752827, 35762827, 35772827, 35782827, 35792827, 35802827, 35812827, 35822827, 35832827, 35842827, 35852827, 35862827, 35872827, 35882827, 35892827, 35902827, 35912827, 35922827, 35932827, 35942827, 35952827, 35962827, 35972827, 35982827, 35992827, 36002827, 36012827, 36022827, 36032827, 36042827, 36052827, 36062827, 36072827, 36082827, 36092827, 36102827, 36112827, 36122827, 36132827, 36142827, 36152827, 36162827, 36172827, 36182827, 36192827, 36202827, 36212827, 36222827, 36232827, 36242827, 36252827, 36262827, 36272827, 36282827, 36292827, 36302827, 36312827, 36322827, 36332827, 36342827, 36352827, 36362827, 36372827, 36382827, 36392827, 36402827, 36412827, 36422827, 36432827, 36442827, 36452827, 36462827, 36472827, 36482827, 36492827, 36502827, 36512827, 36522827, 36532827, 36542827, 36552827, 36562827, 36572827, 36582827, 36592827, 36602827, 36612827]</msg>
<status status="PASS" starttime="20201112 12:45:11.187" endtime="20201112 12:45:11.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:11.176" endtime="20201112 12:45:11.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:11.212" endtime="20201112 12:45:11.555"></status>
</kw>
<msg timestamp="20201112 12:45:11.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038866694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048914583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:11.208" endtime="20201112 12:45:11.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038866694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048914583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:11.559" endtime="20201112 12:45:11.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:11.567" endtime="20201112 12:45:11.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:11.200" endtime="20201112 12:45:11.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:11.193" endtime="20201112 12:45:11.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:11.595" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:11.571" endtime="20201112 12:45:11.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.600" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:45:11.599" endtime="20201112 12:45:11.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.602" level="INFO">VALUE: 0.038866694</msg>
<status status="PASS" starttime="20201112 12:45:11.601" endtime="20201112 12:45:11.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:11.595" endtime="20201112 12:45:11.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.608" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:11.607" endtime="20201112 12:45:11.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.611" level="INFO">VALUE: [0.048914583, 0.058914111, 0.068915083, 0.07891625, 0.088917264, 0.098918417, 0.108919417, 0.118920569, 0.128921569, 0.138922736, 0.148923736, 0.158924917, 0.168925903, 0.178927083, 0.188928056, 0.198929222, 0.208930236, 0.218931375, 0.228932389, 0.238933569, 0.248934542, 0.258935722, 0.268936694, 0.278937861, 0.288938861, 0.298940042, 0.308941028, 0.318942208, 0.328943194, 0.338944361, 0.348945347, 0.358946514, 0.368947528, 0.378948681, 0.388949694, 0.398950847, 0.408951833, 0.418953, 0.428954, 0.438955181, 0.448956167, 0.458957333, 0.468958333, 0.4789595, 0.488960486, 0.498961708, 0.508962653, 0.518963819, 0.528964833, 0.538966, 0.548967, 0.558968167, 0.568969181, 0.578970306, 0.588971306, 0.598972472, 0.608973472, 0.618974639, 0.628975639, 0.638976806, 0.648977806, 0.658978958, 0.668979958, 0.678981139, 0.688982194, 0.698983333, 0.708984306, 0.718985458, 0.728986472, 0.738987639, 0.748988625, 0.758989792, 0.768990792, 0.778991944, 0.788992944, 0.798994125, 0.808995125, 0.818996278, 0.828997278, 0.838998514, 0.848999444, 0.859000611, 0.869001597, 0.879002764, 0.889003778, 0.899004944, 0.909005986, 0.919007097, 0.929008111, 0.939009264, 0.949010264, 0.959011431, 0.969012417, 0.979013625, 0.989014597, 0.99901575, 1.009016764, 1.019017917, 1.029018931, 1.039020083] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:11.610" endtime="20201112 12:45:11.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:11.604" endtime="20201112 12:45:11.612"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:11.615" endtime="20201112 12:45:11.616"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:11.619" endtime="20201112 12:45:11.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:11.617" endtime="20201112 12:45:11.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:11.613" endtime="20201112 12:45:11.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:08.977" endtime="20201112 12:45:11.640"></status>
</kw>
<msg timestamp="20201112 12:45:11.641" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:11.652" endtime="20201112 12:45:13.762"></status>
</kw>
<msg timestamp="20201112 12:45:13.763" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 38265597, 'wakeups': [38275642, 38285642, 38295642, 38305642, 38315642...</msg>
<status status="PASS" starttime="20201112 12:45:11.650" endtime="20201112 12:45:13.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:13.767" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 38265597, 'wakeups': [38275642, 38285642, 38295642, 38305642, 38315642...</msg>
<status status="PASS" starttime="20201112 12:45:13.764" endtime="20201112 12:45:13.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:13.769" endtime="20201112 12:45:13.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:11.646" endtime="20201112 12:45:13.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:11.643" endtime="20201112 12:45:13.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:13.776" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [38275642, 38285642, 38295642, 38305642, 38315642, 38325642, 38335642, 38345642, 38355642, 38365642, 38375642, 38385642, 38395642, 38405642, 38415642, 38425642, 38...</msg>
<status status="PASS" starttime="20201112 12:45:13.773" endtime="20201112 12:45:13.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:13.781" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:13.780" endtime="20201112 12:45:13.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:13.783" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:13.782" endtime="20201112 12:45:13.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:13.776" endtime="20201112 12:45:13.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:13.790" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:45:13.788" endtime="20201112 12:45:13.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:13.792" level="INFO">VALUE: 38265597</msg>
<status status="PASS" starttime="20201112 12:45:13.791" endtime="20201112 12:45:13.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:13.785" endtime="20201112 12:45:13.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:13.798" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:13.797" endtime="20201112 12:45:13.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:13.800" level="INFO">VALUE: [38275642, 38285642, 38295642, 38305642, 38315642, 38325642, 38335642, 38345642, 38355642, 38365642, 38375642, 38385642, 38395642, 38405642, 38415642, 38425642, 38435642, 38445642, 38455642, 38465642, 38475642, 38485642, 38495642, 38505642, 38515642, 38525642, 38535642, 38545642, 38555642, 38565642, 38575642, 38585642, 38595642, 38605642, 38615642, 38625642, 38635642, 38645642, 38655642, 38665642, 38675642, 38685642, 38695642, 38705642, 38715642, 38725642, 38735642, 38745642, 38755642, 38765642, 38775642, 38785642, 38795642, 38805642, 38815642, 38825642, 38835642, 38845642, 38855642, 38865642, 38875642, 38885642, 38895642, 38905642, 38915642, 38925642, 38935642, 38945642, 38955642, 38965642, 38975642, 38985642, 38995642, 39005642, 39015642, 39025642, 39035642, 39045642, 39055642, 39065642, 39075642, 39085642, 39095642, 39105642, 39115642, 39125642, 39135642, 39145642, 39155642, 39165642, 39175642, 39185642, 39195642, 39205642, 39215642, 39225642, 39235642, 39245642, 39255642, 39265642]</msg>
<status status="PASS" starttime="20201112 12:45:13.799" endtime="20201112 12:45:13.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:13.794" endtime="20201112 12:45:13.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:13.809" endtime="20201112 12:45:14.146"></status>
</kw>
<msg timestamp="20201112 12:45:14.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022759903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032807111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:13.808" endtime="20201112 12:45:14.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022759903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032807111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:14.155" endtime="20201112 12:45:14.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:14.173" endtime="20201112 12:45:14.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:13.804" endtime="20201112 12:45:14.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:13.802" endtime="20201112 12:45:14.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:14.238" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:14.182" endtime="20201112 12:45:14.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.254" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:45:14.252" endtime="20201112 12:45:14.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.259" level="INFO">VALUE: 0.022759903</msg>
<status status="PASS" starttime="20201112 12:45:14.256" endtime="20201112 12:45:14.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.245" endtime="20201112 12:45:14.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.272" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:14.270" endtime="20201112 12:45:14.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.277" level="INFO">VALUE: [0.032807111, 0.042807639, 0.052808681, 0.062809806, 0.072810792, 0.082811958, 0.092812944, 0.102814167, 0.112815111, 0.122816278, 0.132817292, 0.142818431, 0.152819431, 0.162820611, 0.172821611, 0.182822806, 0.19282375, 0.202824917, 0.212825931, 0.222827097, 0.232828069, 0.242829236, 0.252830236, 0.262831417, 0.272832486, 0.282833556, 0.292834569, 0.302835736, 0.312836736, 0.322837889, 0.332838875, 0.342840056, 0.352841056, 0.362842208, 0.372843208, 0.382844389, 0.392845361, 0.402846528, 0.412847528, 0.422848708, 0.432849722, 0.442850861, 0.452851847, 0.462853014, 0.472854014, 0.482855181, 0.492856181, 0.502857347, 0.512858347, 0.5228595, 0.5328605, 0.542861667, 0.552862694, 0.562863861, 0.572864847, 0.582866014, 0.592866986, 0.602868153, 0.612869153, 0.622870333, 0.632871319, 0.642872486, 0.652873514, 0.662874694, 0.672875639, 0.682876819, 0.692877806, 0.702878972, 0.712879972, 0.722881181, 0.732882139, 0.742883306, 0.752884292, 0.762885458, 0.772886458, 0.782887653, 0.792888625, 0.802889806, 0.812890792, 0.822891972, 0.832892944, 0.842894111, 0.852895181, 0.862896278, 0.872897278, 0.882898444, 0.892899458, 0.902900597, 0.912901597, 0.922902764, 0.932903778, 0.942904944, 0.952905986, 0.962907097, 0.972908125, 0.98290925, 0.992910319, 1.002911431, 1.012912417, 1.022913583] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:14.274" endtime="20201112 12:45:14.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.262" endtime="20201112 12:45:14.279"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:14.286" endtime="20201112 12:45:14.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:14.295" endtime="20201112 12:45:14.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.290" endtime="20201112 12:45:14.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.281" endtime="20201112 12:45:14.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:11.641" endtime="20201112 12:45:14.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:06.271" endtime="20201112 12:45:14.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:06.271" endtime="20201112 12:45:14.321"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:45:14.327" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:14.348" endtime="20201112 12:45:16.468"></status>
</kw>
<msg timestamp="20201112 12:45:16.469" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 40963790, 'wakeups': [40973848, 40983847, 40993847, 41003847, 41013847...</msg>
<status status="PASS" starttime="20201112 12:45:14.345" endtime="20201112 12:45:16.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:16.476" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 40963790, 'wakeups': [40973848, 40983847, 40993847, 41003847, 41013847...</msg>
<status status="PASS" starttime="20201112 12:45:16.471" endtime="20201112 12:45:16.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:16.479" endtime="20201112 12:45:16.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.337" endtime="20201112 12:45:16.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.332" endtime="20201112 12:45:16.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:16.492" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [40973848, 40983847, 40993847, 41003847, 41013847, 41023847, 41033847, 41043847, 41053847, 41063847, 41073847, 41083847, 41093847, 41103847, 41113847, 41123847, 41...</msg>
<status status="PASS" starttime="20201112 12:45:16.487" endtime="20201112 12:45:16.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:16.503" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:16.500" endtime="20201112 12:45:16.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:16.507" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:16.505" endtime="20201112 12:45:16.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:16.494" endtime="20201112 12:45:16.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:16.520" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:45:16.518" endtime="20201112 12:45:16.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:16.525" level="INFO">VALUE: 40963790</msg>
<status status="PASS" starttime="20201112 12:45:16.522" endtime="20201112 12:45:16.525"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:16.511" endtime="20201112 12:45:16.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:16.537" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:16.535" endtime="20201112 12:45:16.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:16.542" level="INFO">VALUE: [40973848, 40983847, 40993847, 41003847, 41013847, 41023847, 41033847, 41043847, 41053847, 41063847, 41073847, 41083847, 41093847, 41103847, 41113847, 41123847, 41133847, 41143847, 41153847, 41163847, 41173847, 41183847, 41193847, 41203847, 41213847, 41223847, 41233847, 41243847, 41253847, 41263847, 41273847, 41283847, 41293847, 41303847, 41313847, 41323847, 41333847, 41343847, 41353847, 41363847, 41373847, 41383847, 41393847, 41403847, 41413847, 41423847, 41433847, 41443847, 41453847, 41463847, 41473847, 41483847, 41493847, 41503847, 41513847, 41523847, 41533847, 41543847, 41553847, 41563847, 41573847, 41583847, 41593847, 41603847, 41613847, 41623847, 41633847, 41643847, 41653847, 41663847, 41673847, 41683847, 41693847, 41703847, 41713847, 41723847, 41733847, 41743847, 41753847, 41763847, 41773847, 41783847, 41793847, 41803847, 41813847, 41823847, 41833847, 41843847, 41853847, 41863847, 41873847, 41883847, 41893847, 41903847, 41913847, 41923847, 41933847, 41943847, 41953847, 41963847]</msg>
<status status="PASS" starttime="20201112 12:45:16.539" endtime="20201112 12:45:16.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:16.528" endtime="20201112 12:45:16.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:16.563" endtime="20201112 12:45:16.904"></status>
</kw>
<msg timestamp="20201112 12:45:16.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044711556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054771097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:16.560" endtime="20201112 12:45:16.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:16.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044711556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054771097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:16.908" endtime="20201112 12:45:16.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:16.916" endtime="20201112 12:45:16.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:16.553" endtime="20201112 12:45:16.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:16.548" endtime="20201112 12:45:16.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:16.944" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:16.920" endtime="20201112 12:45:16.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:16.949" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:45:16.948" endtime="20201112 12:45:16.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:16.951" level="INFO">VALUE: 0.044711556</msg>
<status status="PASS" starttime="20201112 12:45:16.950" endtime="20201112 12:45:16.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:16.945" endtime="20201112 12:45:16.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:16.958" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:16.957" endtime="20201112 12:45:16.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:16.960" level="INFO">VALUE: [0.054771097, 0.064771194, 0.074772194, 0.084773361, 0.094774347, 0.104775569, 0.114776528, 0.124777667, 0.134778667, 0.144779847, 0.154780861, 0.164781986, 0.174782986, 0.184784194, 0.194785139, 0.204786319, 0.214787319, 0.224788472, 0.2347895, 0.244790653, 0.254791625, 0.264792792, 0.274793806, 0.284794944, 0.294795958, 0.304797125, 0.314798097, 0.324799264, 0.334800278, 0.344801431, 0.354802417, 0.364803583, 0.374804583, 0.38480575, 0.394806736, 0.404807903, 0.414808903, 0.424810125, 0.434811056, 0.444812236, 0.454813222, 0.464814389, 0.474815389, 0.484816542, 0.494817556, 0.504818708, 0.514819708, 0.524820875, 0.534821875, 0.544823028, 0.554824042, 0.564825236, 0.574826194, 0.584827347, 0.594828347, 0.604829528, 0.614830583, 0.624831681, 0.634832667, 0.644833833, 0.654834833, 0.664836, 0.674837, 0.684838194, 0.694839181, 0.704840347, 0.714841319, 0.724842486, 0.734843486, 0.744844639, 0.754845639, 0.764846806, 0.774847806, 0.784848986, 0.794849958, 0.804851139, 0.814852139, 0.824853292, 0.834854319, 0.844855472, 0.854856444, 0.864857611, 0.874858611, 0.884859792, 0.894860764, 0.904861931, 0.914862944, 0.924864097, 0.934865097, 0.944866264, 0.95486725, 0.964868431, 0.974869417, 0.984870583, 0.994871597, 1.004872736, 1.01487375, 1.024874903, 1.034875917, 1.044877069] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:16.959" endtime="20201112 12:45:16.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:16.953" endtime="20201112 12:45:16.962"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:16.965" endtime="20201112 12:45:16.966"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:16.969" endtime="20201112 12:45:16.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:16.967" endtime="20201112 12:45:16.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:16.963" endtime="20201112 12:45:16.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.328" endtime="20201112 12:45:16.990"></status>
</kw>
<msg timestamp="20201112 12:45:16.990" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:17.001" endtime="20201112 12:45:19.102"></status>
</kw>
<msg timestamp="20201112 12:45:19.103" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43615106, 'wakeups': [43625163, 43635163, 43645163, 43655163, 43665163...</msg>
<status status="PASS" starttime="20201112 12:45:16.999" endtime="20201112 12:45:19.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.106" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43615106, 'wakeups': [43625163, 43635163, 43645163, 43655163, 43665163...</msg>
<status status="PASS" starttime="20201112 12:45:19.104" endtime="20201112 12:45:19.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:19.107" endtime="20201112 12:45:19.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:16.996" endtime="20201112 12:45:19.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:16.993" endtime="20201112 12:45:19.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:19.113" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [43625163, 43635163, 43645163, 43655163, 43665163, 43675163, 43685163, 43695163, 43705163, 43715163, 43725163, 43735163, 43745163, 43755163, 43765163, 43775163, 43...</msg>
<status status="PASS" starttime="20201112 12:45:19.111" endtime="20201112 12:45:19.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.121" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:19.118" endtime="20201112 12:45:19.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.125" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:19.123" endtime="20201112 12:45:19.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.114" endtime="20201112 12:45:19.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.138" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:45:19.135" endtime="20201112 12:45:19.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.142" level="INFO">VALUE: 43615106</msg>
<status status="PASS" starttime="20201112 12:45:19.140" endtime="20201112 12:45:19.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.129" endtime="20201112 12:45:19.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.155" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:19.152" endtime="20201112 12:45:19.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.159" level="INFO">VALUE: [43625163, 43635163, 43645163, 43655163, 43665163, 43675163, 43685163, 43695163, 43705163, 43715163, 43725163, 43735163, 43745163, 43755163, 43765163, 43775163, 43785163, 43795163, 43805163, 43815163, 43825163, 43835163, 43845163, 43855163, 43865163, 43875163, 43885163, 43895163, 43905163, 43915163, 43925163, 43935163, 43945163, 43955163, 43965163, 43975163, 43985163, 43995163, 44005163, 44015163, 44025163, 44035163, 44045163, 44055163, 44065163, 44075163, 44085163, 44095163, 44105163, 44115163, 44125163, 44135163, 44145163, 44155163, 44165163, 44175163, 44185163, 44195163, 44205163, 44215163, 44225163, 44235163, 44245163, 44255163, 44265163, 44275163, 44285163, 44295163, 44305163, 44315163, 44325163, 44335163, 44345163, 44355163, 44365163, 44375163, 44385163, 44395163, 44405163, 44415163, 44425163, 44435163, 44445163, 44455163, 44465163, 44475163, 44485163, 44495163, 44505163, 44515163, 44525163, 44535163, 44545163, 44555163, 44565163, 44575163, 44585163, 44595163, 44605163, 44615163]</msg>
<status status="PASS" starttime="20201112 12:45:19.157" endtime="20201112 12:45:19.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.146" endtime="20201112 12:45:19.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:19.180" endtime="20201112 12:45:19.525"></status>
</kw>
<msg timestamp="20201112 12:45:19.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022892972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032952111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:19.176" endtime="20201112 12:45:19.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022892972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032952111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:19.534" endtime="20201112 12:45:19.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:19.551" endtime="20201112 12:45:19.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.169" endtime="20201112 12:45:19.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.163" endtime="20201112 12:45:19.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:19.615" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:19.560" endtime="20201112 12:45:19.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.625" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:45:19.623" endtime="20201112 12:45:19.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.630" level="INFO">VALUE: 0.022892972</msg>
<status status="PASS" starttime="20201112 12:45:19.628" endtime="20201112 12:45:19.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.616" endtime="20201112 12:45:19.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.644" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:19.641" endtime="20201112 12:45:19.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.648" level="INFO">VALUE: [0.032952111, 0.042953278, 0.052954292, 0.062955458, 0.072956417, 0.082957611, 0.092958583, 0.10295975, 0.112960736, 0.122961917, 0.132962917, 0.142964056, 0.152965056, 0.162966236, 0.172967208, 0.182968375, 0.192969375, 0.202970542, 0.212971542, 0.222972764, 0.232973708, 0.242974875, 0.252975847, 0.262977028, 0.272978014, 0.282979181, 0.292980167, 0.302981333, 0.312982347, 0.322983514, 0.3329845, 0.342985653, 0.352986653, 0.362987833, 0.372988819, 0.382990028, 0.392990986, 0.402992139, 0.412993139, 0.422994292, 0.432995292, 0.442996458, 0.452997458, 0.462998625, 0.472999611, 0.483000778, 0.493001792, 0.503002958, 0.513003931, 0.523005097, 0.533006111, 0.543007264, 0.553008264, 0.563009417, 0.573010431, 0.583011583, 0.593012611, 0.603013764, 0.613014736, 0.623015903, 0.633016903, 0.643018069, 0.653019069, 0.663020278, 0.673021236, 0.683022403, 0.693023403, 0.703024556, 0.713025556, 0.723026722, 0.733027764, 0.743028875, 0.753029875, 0.763031042, 0.773032028, 0.783033194, 0.793034194, 0.803035361, 0.813036375, 0.823037528, 0.833038514, 0.843039681, 0.853040694, 0.863041861, 0.873042847, 0.883044014, 0.893045014, 0.903046194, 0.913047167, 0.923048333, 0.933049319, 0.943050486, 0.9530515, 0.963052653, 0.973053653, 0.983054819, 0.993055806, 1.003057014, 1.013057986, 1.023059153] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:19.646" endtime="20201112 12:45:19.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.634" endtime="20201112 12:45:19.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:19.657" endtime="20201112 12:45:19.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:19.666" endtime="20201112 12:45:19.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.661" endtime="20201112 12:45:19.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.653" endtime="20201112 12:45:19.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:16.991" endtime="20201112 12:45:19.691"></status>
</kw>
<msg timestamp="20201112 12:45:19.692" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:19.713" endtime="20201112 12:45:21.834"></status>
</kw>
<msg timestamp="20201112 12:45:21.835" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 46329176, 'wakeups': [46339234, 46349233, 46359233, 46369233, 46379233...</msg>
<status status="PASS" starttime="20201112 12:45:19.710" endtime="20201112 12:45:21.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:21.843" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 46329176, 'wakeups': [46339234, 46349233, 46359233, 46369233, 46379233...</msg>
<status status="PASS" starttime="20201112 12:45:21.838" endtime="20201112 12:45:21.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:21.845" endtime="20201112 12:45:21.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.702" endtime="20201112 12:45:21.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.697" endtime="20201112 12:45:21.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:21.858" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [46339234, 46349233, 46359233, 46369233, 46379233, 46389233, 46399233, 46409233, 46419233, 46429233, 46439233, 46449233, 46459233, 46469233, 46479233, 46489233, 46...</msg>
<status status="PASS" starttime="20201112 12:45:21.854" endtime="20201112 12:45:21.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:21.869" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:21.866" endtime="20201112 12:45:21.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:21.873" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:21.871" endtime="20201112 12:45:21.874"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:21.860" endtime="20201112 12:45:21.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:21.886" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:45:21.884" endtime="20201112 12:45:21.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:21.891" level="INFO">VALUE: 46329176</msg>
<status status="PASS" starttime="20201112 12:45:21.888" endtime="20201112 12:45:21.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:21.877" endtime="20201112 12:45:21.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:21.903" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:21.901" endtime="20201112 12:45:21.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:21.910" level="INFO">VALUE: [46339234, 46349233, 46359233, 46369233, 46379233, 46389233, 46399233, 46409233, 46419233, 46429233, 46439233, 46449233, 46459233, 46469233, 46479233, 46489233, 46499233, 46509233, 46519233, 46529233, 46539233, 46549233, 46559233, 46569233, 46579233, 46589233, 46599233, 46609233, 46619233, 46629233, 46639233, 46649233, 46659233, 46669233, 46679233, 46689233, 46699233, 46709233, 46719233, 46729233, 46739233, 46749233, 46759233, 46769233, 46779233, 46789233, 46799233, 46809233, 46819233, 46829233, 46839233, 46849233, 46859233, 46869233, 46879233, 46889233, 46899233, 46909233, 46919233, 46929233, 46939233, 46949233, 46959233, 46969233, 46979233, 46989233, 46999233, 47009233, 47019233, 47029233, 47039233, 47049233, 47059233, 47069233, 47079233, 47089233, 47099233, 47109233, 47119233, 47129233, 47139233, 47149233, 47159233, 47169233, 47179233, 47189233, 47199233, 47209233, 47219233, 47229233, 47239233, 47249233, 47259233, 47269233, 47279233, 47289233, 47299233, 47309233, 47319233, 47329233]</msg>
<status status="PASS" starttime="20201112 12:45:21.905" endtime="20201112 12:45:21.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:21.894" endtime="20201112 12:45:21.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:21.929" endtime="20201112 12:45:22.249"></status>
</kw>
<msg timestamp="20201112 12:45:22.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039329306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049388833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:21.926" endtime="20201112 12:45:22.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:22.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039329306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049388833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:22.254" endtime="20201112 12:45:22.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:22.261" endtime="20201112 12:45:22.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:21.919" endtime="20201112 12:45:22.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:21.914" endtime="20201112 12:45:22.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:22.289" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:22.265" endtime="20201112 12:45:22.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:22.295" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:45:22.294" endtime="20201112 12:45:22.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:22.297" level="INFO">VALUE: 0.039329306</msg>
<status status="PASS" starttime="20201112 12:45:22.296" endtime="20201112 12:45:22.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:22.291" endtime="20201112 12:45:22.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:22.303" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:22.302" endtime="20201112 12:45:22.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:22.306" level="INFO">VALUE: [0.049388833, 0.059388944, 0.069389958, 0.079391111, 0.089392111, 0.099393278, 0.109394292, 0.119395458, 0.129396458, 0.139397681, 0.149398611, 0.159399778, 0.169400792, 0.179401944, 0.189402944, 0.199404111, 0.209405139, 0.219406292, 0.229407278, 0.239408472, 0.249409472, 0.259410625, 0.269411625, 0.279412792, 0.289413806, 0.299414972, 0.309415958, 0.319417125, 0.329418139, 0.339419361, 0.349420306, 0.359421458, 0.369422458, 0.379423625, 0.389424639, 0.399425806, 0.409426819, 0.419428, 0.429428972, 0.439430139, 0.449431139, 0.459432306, 0.469433306, 0.479434472, 0.489435472, 0.499436653, 0.509437653, 0.519438819, 0.529439833, 0.539441056, 0.549441986, 0.559443153, 0.569444167, 0.579445319, 0.589446319, 0.599447486, 0.6094485, 0.619449667, 0.629450667, 0.639451833, 0.649452833, 0.659454, 0.669455056, 0.679456167, 0.689457181, 0.699458333, 0.709459333, 0.719460514, 0.729461514, 0.739462694, 0.749463681, 0.759464847, 0.769465861, 0.779467069, 0.789468014, 0.799469181, 0.809470181, 0.819471361, 0.829472375, 0.839473514, 0.849474528, 0.859475694, 0.869476736, 0.879477847, 0.889478931, 0.899480083, 0.909481028, 0.919482194, 0.929483194, 0.939484417, 0.949485389, 0.959486528, 0.969487542, 0.979488708, 0.989489694, 0.999490875, 1.009491875, 1.019493097, 1.029494042, 1.039495208] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:22.304" endtime="20201112 12:45:22.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:22.299" endtime="20201112 12:45:22.307"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:22.310" endtime="20201112 12:45:22.311"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:22.314" endtime="20201112 12:45:22.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:22.312" endtime="20201112 12:45:22.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:22.307" endtime="20201112 12:45:22.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.693" endtime="20201112 12:45:22.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.324" endtime="20201112 12:45:22.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.322" endtime="20201112 12:45:22.335"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:45:22.338" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:22.349" endtime="20201112 12:45:24.449"></status>
</kw>
<msg timestamp="20201112 12:45:24.450" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 48962864, 'wakeups': [48972933, 48982934, 48992934, 49002934, 49012934...</msg>
<status status="PASS" starttime="20201112 12:45:22.347" endtime="20201112 12:45:24.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:24.454" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 48962864, 'wakeups': [48972933, 48982934, 48992934, 49002934, 49012934...</msg>
<status status="PASS" starttime="20201112 12:45:24.451" endtime="20201112 12:45:24.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:24.455" endtime="20201112 12:45:24.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:22.344" endtime="20201112 12:45:24.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:22.341" endtime="20201112 12:45:24.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:24.461" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [48972933, 48982934, 48992934, 49002934, 49012934, 49022934, 49032934, 49042934, 49052934, 49062934, 49072934, 49082934, 49092934, 49102934, 49112934, 49122934, 49...</msg>
<status status="PASS" starttime="20201112 12:45:24.459" endtime="20201112 12:45:24.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:24.466" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:24.465" endtime="20201112 12:45:24.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:24.468" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:24.467" endtime="20201112 12:45:24.469"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:24.462" endtime="20201112 12:45:24.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:24.474" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:45:24.473" endtime="20201112 12:45:24.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:24.477" level="INFO">VALUE: 48962864</msg>
<status status="PASS" starttime="20201112 12:45:24.476" endtime="20201112 12:45:24.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:24.470" endtime="20201112 12:45:24.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:24.483" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:24.482" endtime="20201112 12:45:24.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:24.485" level="INFO">VALUE: [48972933, 48982934, 48992934, 49002934, 49012934, 49022934, 49032934, 49042934, 49052934, 49062934, 49072934, 49082934, 49092934, 49102934, 49112934, 49122934, 49132934, 49142934, 49152934, 49162934, 49172934, 49182934, 49192934, 49202934, 49212934, 49222934, 49232934, 49242934, 49252934, 49262934, 49272934, 49282934, 49292934, 49302934, 49312934, 49322934, 49332934, 49342934, 49352934, 49362934, 49372934, 49382934, 49392934, 49402934, 49412934, 49422934, 49432934, 49442934, 49452934, 49462934, 49472934, 49482934, 49492934, 49502934, 49512934, 49522934, 49532934, 49542934, 49552934, 49562934, 49572934, 49582934, 49592934, 49602934, 49612934, 49622934, 49632934, 49642934, 49652934, 49662934, 49672934, 49682934, 49692934, 49702934, 49712934, 49722934, 49732934, 49742934, 49752934, 49762934, 49772934, 49782934, 49792934, 49802934, 49812934, 49822934, 49832934, 49842934, 49852934, 49862934, 49872934, 49882934, 49892934, 49902934, 49912934, 49922934, 49932934, 49942934, 49952934, 49962934]</msg>
<status status="PASS" starttime="20201112 12:45:24.484" endtime="20201112 12:45:24.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:24.478" endtime="20201112 12:45:24.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:24.494" endtime="20201112 12:45:24.824"></status>
</kw>
<msg timestamp="20201112 12:45:24.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025640639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035712167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:24.492" endtime="20201112 12:45:24.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:24.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025640639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035712167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:24.833" endtime="20201112 12:45:24.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:24.850" endtime="20201112 12:45:24.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:24.489" endtime="20201112 12:45:24.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:24.487" endtime="20201112 12:45:24.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:24.915" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:24.859" endtime="20201112 12:45:24.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:24.925" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:45:24.923" endtime="20201112 12:45:24.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:24.930" level="INFO">VALUE: 0.025640639</msg>
<status status="PASS" starttime="20201112 12:45:24.928" endtime="20201112 12:45:24.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:24.917" endtime="20201112 12:45:24.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:24.944" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:24.941" endtime="20201112 12:45:24.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:24.949" level="INFO">VALUE: [0.035712167, 0.045713458, 0.055714472, 0.065715694, 0.075716625, 0.085717806, 0.095718792, 0.105719958, 0.115720958, 0.125722111, 0.135723111, 0.145724278, 0.155725278, 0.165726458, 0.175727444, 0.185728611, 0.195729611, 0.205730778, 0.215731819, 0.225732931, 0.235733986, 0.245735111, 0.255736125, 0.265737264, 0.275738278, 0.285739486, 0.295740431, 0.305741597, 0.315742611, 0.325743778, 0.335744764, 0.345745958, 0.355746931, 0.365748111, 0.375749097, 0.385750278, 0.395751292, 0.405752431, 0.415753444, 0.425754597, 0.435755597, 0.445756764, 0.455757764, 0.465758944, 0.475759931, 0.485761111, 0.495762097, 0.505763278, 0.515764278, 0.525765431, 0.535766417, 0.545767597, 0.555768597, 0.56576975, 0.575770764, 0.585771931, 0.595772958, 0.605774097, 0.615775097, 0.625776278, 0.635777278, 0.645778431, 0.655779431, 0.665780597, 0.675781611, 0.685782764, 0.695783764, 0.705784931, 0.715785931, 0.725787153, 0.735788097, 0.745789264, 0.755790264, 0.765791431, 0.775792444, 0.785793611, 0.795794597, 0.805795778, 0.815796778, 0.825797944, 0.835798972, 0.845800111, 0.855801097, 0.865802264, 0.875803264, 0.885804431, 0.895805431, 0.905806597, 0.915807611, 0.925808764, 0.935809778, 0.945810931, 0.955811931, 0.965813097, 0.975814125, 0.985815278, 0.995816264, 1.005817458, 1.015818431, 1.025819653] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:24.947" endtime="20201112 12:45:24.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:24.934" endtime="20201112 12:45:24.952"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:24.958" endtime="20201112 12:45:24.961"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:24.967" endtime="20201112 12:45:24.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:24.962" endtime="20201112 12:45:24.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:24.954" endtime="20201112 12:45:24.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:22.339" endtime="20201112 12:45:24.992"></status>
</kw>
<msg timestamp="20201112 12:45:24.993" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:25.014" endtime="20201112 12:45:27.135"></status>
</kw>
<msg timestamp="20201112 12:45:27.137" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51629684, 'wakeups': [51639753, 51649754, 51659754, 51669754, 51679754...</msg>
<status status="PASS" starttime="20201112 12:45:25.011" endtime="20201112 12:45:27.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:27.144" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51629684, 'wakeups': [51639753, 51649754, 51659754, 51669754, 51679754...</msg>
<status status="PASS" starttime="20201112 12:45:27.139" endtime="20201112 12:45:27.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:27.146" endtime="20201112 12:45:27.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:25.004" endtime="20201112 12:45:27.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:24.998" endtime="20201112 12:45:27.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:27.160" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [51639753, 51649754, 51659754, 51669754, 51679754, 51689754, 51699754, 51709754, 51719754, 51729754, 51739754, 51749754, 51759754, 51769754, 51779754, 51789754, 51...</msg>
<status status="PASS" starttime="20201112 12:45:27.155" endtime="20201112 12:45:27.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:27.170" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:27.168" endtime="20201112 12:45:27.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:27.174" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:27.172" endtime="20201112 12:45:27.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:27.161" endtime="20201112 12:45:27.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:27.187" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:45:27.185" endtime="20201112 12:45:27.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:27.192" level="INFO">VALUE: 51629684</msg>
<status status="PASS" starttime="20201112 12:45:27.189" endtime="20201112 12:45:27.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:27.178" endtime="20201112 12:45:27.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:27.204" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:27.202" endtime="20201112 12:45:27.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:27.212" level="INFO">VALUE: [51639753, 51649754, 51659754, 51669754, 51679754, 51689754, 51699754, 51709754, 51719754, 51729754, 51739754, 51749754, 51759754, 51769754, 51779754, 51789754, 51799754, 51809754, 51819754, 51829754, 51839754, 51849754, 51859754, 51869754, 51879754, 51889754, 51899754, 51909754, 51919754, 51929754, 51939754, 51949754, 51959754, 51969754, 51979754, 51989754, 51999754, 52009754, 52019754, 52029754, 52039754, 52049754, 52059754, 52069754, 52079754, 52089754, 52099754, 52109754, 52119754, 52129754, 52139754, 52149754, 52159754, 52169754, 52179754, 52189754, 52199754, 52209754, 52219754, 52229754, 52239754, 52249754, 52259754, 52269754, 52279754, 52289754, 52299754, 52309754, 52319754, 52329754, 52339754, 52349754, 52359754, 52369754, 52379754, 52389754, 52399754, 52409754, 52419754, 52429754, 52439754, 52449754, 52459754, 52469754, 52479754, 52489754, 52499754, 52509754, 52519754, 52529754, 52539754, 52549754, 52559754, 52569754, 52579754, 52589754, 52599754, 52609754, 52619754, 52629754]</msg>
<status status="PASS" starttime="20201112 12:45:27.207" endtime="20201112 12:45:27.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:27.195" endtime="20201112 12:45:27.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:27.232" endtime="20201112 12:45:27.588"></status>
</kw>
<msg timestamp="20201112 12:45:27.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038739958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048811458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:27.228" endtime="20201112 12:45:27.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:27.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038739958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048811458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:27.597" endtime="20201112 12:45:27.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:27.613" endtime="20201112 12:45:27.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:27.221" endtime="20201112 12:45:27.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:27.216" endtime="20201112 12:45:27.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:27.640" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:27.617" endtime="20201112 12:45:27.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:27.645" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:45:27.644" endtime="20201112 12:45:27.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:27.647" level="INFO">VALUE: 0.038739958</msg>
<status status="PASS" starttime="20201112 12:45:27.646" endtime="20201112 12:45:27.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:27.641" endtime="20201112 12:45:27.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:27.654" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:27.653" endtime="20201112 12:45:27.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:27.656" level="INFO">VALUE: [0.048811458, 0.058812778, 0.068813778, 0.078814931, 0.088815931, 0.098817097, 0.108818167, 0.118819278, 0.128820278, 0.138821417, 0.148822431, 0.158823597, 0.168824597, 0.178825764, 0.18882675, 0.198827917, 0.208828931, 0.218830097, 0.228831069, 0.238832292, 0.248833236, 0.258834403, 0.268835403, 0.278836569, 0.288837569, 0.298838736, 0.308839736, 0.318840903, 0.328841944, 0.338843111, 0.348844083, 0.358845236, 0.368846222, 0.378847403, 0.388848389, 0.398849569, 0.408850556, 0.418851722, 0.428852722, 0.438853889, 0.448854889, 0.458856069, 0.468857056, 0.478858236, 0.488859222, 0.498860431, 0.508861389, 0.518862556, 0.528863556, 0.538864736, 0.548865722, 0.558866889, 0.568867903, 0.578869083, 0.588870056, 0.598871236, 0.608872222, 0.618873389, 0.628874375, 0.638875542, 0.648876556, 0.65887775, 0.668878708, 0.678879889, 0.688880944, 0.698882042, 0.708883042, 0.718884222, 0.728885208, 0.738886375, 0.748887375, 0.758888556, 0.768889556, 0.778890722, 0.788891708, 0.798892889, 0.808893875, 0.818895042, 0.828896056, 0.838897208, 0.848898208, 0.858899375, 0.868900375, 0.878901542, 0.888902542, 0.898903708, 0.908904722, 0.918905903, 0.928906875, 0.938908042, 0.948909042, 0.958910208, 0.96891125, 0.978912375, 0.988913389, 0.998914542, 1.008915542, 1.018916708, 1.028917708, 1.038918875] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:27.655" endtime="20201112 12:45:27.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:27.649" endtime="20201112 12:45:27.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:27.660" endtime="20201112 12:45:27.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:27.664" endtime="20201112 12:45:27.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:27.662" endtime="20201112 12:45:27.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:27.658" endtime="20201112 12:45:27.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:24.994" endtime="20201112 12:45:27.687"></status>
</kw>
<msg timestamp="20201112 12:45:27.687" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:27.697" endtime="20201112 12:45:29.815"></status>
</kw>
<msg timestamp="20201112 12:45:29.816" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 54310994, 'wakeups': [54321064, 54331064, 54341064, 54351064, 54361064...</msg>
<status status="PASS" starttime="20201112 12:45:27.696" endtime="20201112 12:45:29.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:29.823" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 54310994, 'wakeups': [54321064, 54331064, 54341064, 54351064, 54361064...</msg>
<status status="PASS" starttime="20201112 12:45:29.819" endtime="20201112 12:45:29.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:29.826" endtime="20201112 12:45:29.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:27.692" endtime="20201112 12:45:29.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:27.690" endtime="20201112 12:45:29.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:29.839" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [54321064, 54331064, 54341064, 54351064, 54361064, 54371064, 54381064, 54391064, 54401064, 54411064, 54421064, 54431064, 54441064, 54451064, 54461064, 54471064, 54...</msg>
<status status="PASS" starttime="20201112 12:45:29.834" endtime="20201112 12:45:29.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:29.844" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:29.843" endtime="20201112 12:45:29.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:29.846" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:29.845" endtime="20201112 12:45:29.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:29.840" endtime="20201112 12:45:29.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:29.852" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:45:29.851" endtime="20201112 12:45:29.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:29.854" level="INFO">VALUE: 54310994</msg>
<status status="PASS" starttime="20201112 12:45:29.853" endtime="20201112 12:45:29.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:29.848" endtime="20201112 12:45:29.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:29.860" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:29.859" endtime="20201112 12:45:29.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:29.863" level="INFO">VALUE: [54321064, 54331064, 54341064, 54351064, 54361064, 54371064, 54381064, 54391064, 54401064, 54411064, 54421064, 54431064, 54441064, 54451064, 54461064, 54471064, 54481064, 54491064, 54501064, 54511064, 54521064, 54531064, 54541064, 54551064, 54561064, 54571064, 54581064, 54591064, 54601064, 54611064, 54621064, 54631064, 54641064, 54651064, 54661064, 54671064, 54681064, 54691064, 54701064, 54711064, 54721064, 54731064, 54741064, 54751064, 54761064, 54771064, 54781064, 54791064, 54801064, 54811064, 54821064, 54831064, 54841064, 54851064, 54861064, 54871064, 54881064, 54891064, 54901064, 54911064, 54921064, 54931064, 54941064, 54951064, 54961064, 54971064, 54981064, 54991064, 55001064, 55011064, 55021064, 55031064, 55041064, 55051064, 55061064, 55071064, 55081064, 55091064, 55101064, 55111064, 55121064, 55131064, 55141064, 55151064, 55161064, 55171064, 55181064, 55191064, 55201064, 55211064, 55221064, 55231064, 55241064, 55251064, 55261064, 55271064, 55281064, 55291064, 55301064, 55311064]</msg>
<status status="PASS" starttime="20201112 12:45:29.862" endtime="20201112 12:45:29.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:29.856" endtime="20201112 12:45:29.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:29.872" endtime="20201112 12:45:30.207"></status>
</kw>
<msg timestamp="20201112 12:45:30.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022291306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032363042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:29.870" endtime="20201112 12:45:30.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:30.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022291306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032363042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:30.216" endtime="20201112 12:45:30.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:30.234" endtime="20201112 12:45:30.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:29.867" endtime="20201112 12:45:30.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:29.864" endtime="20201112 12:45:30.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:30.298" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:30.244" endtime="20201112 12:45:30.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:30.308" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:45:30.306" endtime="20201112 12:45:30.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:30.313" level="INFO">VALUE: 0.022291306</msg>
<status status="PASS" starttime="20201112 12:45:30.311" endtime="20201112 12:45:30.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:30.299" endtime="20201112 12:45:30.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:30.327" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:30.324" endtime="20201112 12:45:30.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:30.332" level="INFO">VALUE: [0.032363042, 0.042363417, 0.052364375, 0.062365528, 0.072366528, 0.082367694, 0.092368694, 0.102369847, 0.112370847, 0.122372014, 0.132373042, 0.142374181, 0.152375181, 0.162376347, 0.172377333, 0.182378569, 0.1923795, 0.202380667, 0.212381653, 0.222382819, 0.232383833, 0.242384986, 0.252386028, 0.262387153, 0.272388222, 0.282389306, 0.292390306, 0.302391472, 0.312392486, 0.322393625, 0.332394625, 0.342395806, 0.352396792, 0.362397958, 0.372398958, 0.382400125, 0.392401111, 0.402402292, 0.412403278, 0.422404444, 0.432405458, 0.442406625, 0.452407611, 0.462408764, 0.472409819, 0.482411014, 0.492411931, 0.502413111, 0.512414097, 0.522415264, 0.532416264, 0.542417472, 0.552418417, 0.562419583, 0.572420667, 0.58242175, 0.59242275, 0.602423972, 0.612424917, 0.622426139, 0.632427083, 0.642428306, 0.652429236, 0.662430472, 0.672431403, 0.682432569, 0.692433569, 0.70243475, 0.712435736, 0.722436903, 0.732437903, 0.742439056, 0.752440083, 0.762441222, 0.77244225, 0.782443389, 0.792444389, 0.802445556, 0.812446556, 0.822447736, 0.832448708, 0.842449889, 0.852450875, 0.862452056, 0.872453042, 0.882454236, 0.892455208, 0.902456375, 0.912457375, 0.922458542, 0.932459528, 0.942460694, 0.952461694, 0.962462875, 0.972463875, 0.982465042, 0.992466056, 1.002467194, 1.012468222, 1.022469361] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:30.329" endtime="20201112 12:45:30.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:30.317" endtime="20201112 12:45:30.334"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:30.341" endtime="20201112 12:45:30.344"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:30.349" endtime="20201112 12:45:30.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:30.345" endtime="20201112 12:45:30.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:30.336" endtime="20201112 12:45:30.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:27.688" endtime="20201112 12:45:30.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:22.337" endtime="20201112 12:45:30.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:22.336" endtime="20201112 12:45:30.376"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:45:30.382" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:30.403" endtime="20201112 12:45:32.523"></status>
</kw>
<msg timestamp="20201112 12:45:32.525" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 57018331, 'wakeups': [57028416, 57038417, 57048417, 57058417, 57068417...</msg>
<status status="PASS" starttime="20201112 12:45:30.399" endtime="20201112 12:45:32.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:32.532" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 57018331, 'wakeups': [57028416, 57038417, 57048417, 57058417, 57068417...</msg>
<status status="PASS" starttime="20201112 12:45:32.527" endtime="20201112 12:45:32.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:32.535" endtime="20201112 12:45:32.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:30.392" endtime="20201112 12:45:32.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:30.387" endtime="20201112 12:45:32.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:32.550" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [57028416, 57038417, 57048417, 57058417, 57068417, 57078417, 57088417, 57098417, 57108417, 57118417, 57128417, 57138417, 57148417, 57158417, 57168417, 57178417, 57...</msg>
<status status="PASS" starttime="20201112 12:45:32.545" endtime="20201112 12:45:32.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:32.560" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:32.558" endtime="20201112 12:45:32.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:32.564" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:32.562" endtime="20201112 12:45:32.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:32.551" endtime="20201112 12:45:32.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:32.577" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:45:32.575" endtime="20201112 12:45:32.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:32.582" level="INFO">VALUE: 57018331</msg>
<status status="PASS" starttime="20201112 12:45:32.579" endtime="20201112 12:45:32.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:32.568" endtime="20201112 12:45:32.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:32.594" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:32.592" endtime="20201112 12:45:32.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:32.599" level="INFO">VALUE: [57028416, 57038417, 57048417, 57058417, 57068417, 57078417, 57088417, 57098417, 57108417, 57118417, 57128417, 57138417, 57148417, 57158417, 57168417, 57178417, 57188417, 57198417, 57208417, 57218417, 57228417, 57238417, 57248417, 57258417, 57268417, 57278417, 57288417, 57298417, 57308417, 57318417, 57328417, 57338417, 57348417, 57358417, 57368417, 57378417, 57388417, 57398417, 57408417, 57418417, 57428417, 57438417, 57448417, 57458417, 57468417, 57478417, 57488417, 57498417, 57508417, 57518417, 57528417, 57538417, 57548417, 57558417, 57568417, 57578417, 57588417, 57598417, 57608417, 57618417, 57628417, 57638417, 57648417, 57658417, 57668417, 57678417, 57688417, 57698417, 57708417, 57718417, 57728417, 57738417, 57748417, 57758417, 57768417, 57778417, 57788417, 57798417, 57808417, 57818417, 57828417, 57838417, 57848417, 57858417, 57868417, 57878417, 57888417, 57898417, 57908417, 57918417, 57928417, 57938417, 57948417, 57958417, 57968417, 57978417, 57988417, 57998417, 58008417, 58018417]</msg>
<status status="PASS" starttime="20201112 12:45:32.596" endtime="20201112 12:45:32.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:32.585" endtime="20201112 12:45:32.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:32.618" endtime="20201112 12:45:32.964"></status>
</kw>
<msg timestamp="20201112 12:45:32.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044841958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05492875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:45:32.615" endtime="20201112 12:45:32.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:32.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044841958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05492875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:45:32.971" endtime="20201112 12:45:32.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:32.979" endtime="20201112 12:45:32.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:32.608" endtime="20201112 12:45:32.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:32.603" endtime="20201112 12:45:32.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:33.006" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:32.983" endtime="20201112 12:45:33.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:33.012" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:45:33.011" endtime="20201112 12:45:33.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:33.014" level="INFO">VALUE: 0.044841958</msg>
<status status="PASS" starttime="20201112 12:45:33.013" endtime="20201112 12:45:33.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:33.008" endtime="20201112 12:45:33.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:33.021" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:33.019" endtime="20201112 12:45:33.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:33.023" level="INFO">VALUE: [0.05492875, 0.064930722, 0.074931722, 0.084932889, 0.094933931, 0.104935042, 0.114936069, 0.124937208, 0.134938208, 0.144939361, 0.154940361, 0.164941542, 0.174942514, 0.184943694, 0.194944681, 0.204945847, 0.214946833, 0.224948014, 0.234949069, 0.244950167, 0.254951167, 0.264952319, 0.274953333, 0.284954486, 0.2949555, 0.304956653, 0.314957653, 0.324958819, 0.334959806, 0.344960972, 0.354962, 0.364963139, 0.374964125, 0.384965292, 0.394966306, 0.404967458, 0.414968444, 0.424969611, 0.434970611, 0.444971792, 0.454972778, 0.464973986, 0.474974931, 0.484976111, 0.494977097, 0.504978264, 0.514979306, 0.524980431, 0.534981417, 0.544982583, 0.554983639, 0.56498475, 0.57498575, 0.584986903, 0.594987903, 0.604989069, 0.614990069, 0.624991236, 0.634992236, 0.644993403, 0.654994389, 0.664995556, 0.674996556, 0.684997736, 0.694998722, 0.704999889, 0.715000875, 0.725002097, 0.735003042, 0.745004208, 0.755005208, 0.765006375, 0.775007375, 0.785008528, 0.795009528, 0.805010694, 0.815011694, 0.825012861, 0.835013861, 0.845015042, 0.855016056, 0.865017181, 0.875018181, 0.885019347, 0.895020361, 0.905021514, 0.915022556, 0.925023681, 0.935024681, 0.945025847, 0.955026847, 0.965028, 0.975029069, 0.985030181, 0.995031153, 1.005032389, 1.015033333, 1.025034514, 1.035035486, 1.045036653] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:33.022" endtime="20201112 12:45:33.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:33.016" endtime="20201112 12:45:33.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:33.027" endtime="20201112 12:45:33.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:33.031" endtime="20201112 12:45:33.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:33.029" endtime="20201112 12:45:33.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:33.025" endtime="20201112 12:45:33.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:30.383" endtime="20201112 12:45:33.052"></status>
</kw>
<msg timestamp="20201112 12:45:33.052" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:33.063" endtime="20201112 12:45:35.181"></status>
</kw>
<msg timestamp="20201112 12:45:35.182" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59676259, 'wakeups': [59686344, 59696345, 59706345, 59716345, 59726345...</msg>
<status status="PASS" starttime="20201112 12:45:33.061" endtime="20201112 12:45:35.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:35.189" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59676259, 'wakeups': [59686344, 59696345, 59706345, 59716345, 59726345...</msg>
<status status="PASS" starttime="20201112 12:45:35.185" endtime="20201112 12:45:35.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:35.192" endtime="20201112 12:45:35.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:33.057" endtime="20201112 12:45:35.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:33.055" endtime="20201112 12:45:35.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:35.206" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [59686344, 59696345, 59706345, 59716345, 59726345, 59736345, 59746345, 59756345, 59766345, 59776345, 59786345, 59796345, 59806345, 59816345, 59826345, 59836345, 59...</msg>
<status status="PASS" starttime="20201112 12:45:35.201" endtime="20201112 12:45:35.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:35.217" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:35.215" endtime="20201112 12:45:35.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:35.222" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:35.219" endtime="20201112 12:45:35.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:35.208" endtime="20201112 12:45:35.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:35.235" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:45:35.233" endtime="20201112 12:45:35.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:35.239" level="INFO">VALUE: 59676259</msg>
<status status="PASS" starttime="20201112 12:45:35.237" endtime="20201112 12:45:35.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:35.226" endtime="20201112 12:45:35.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:35.252" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:35.250" endtime="20201112 12:45:35.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:35.257" level="INFO">VALUE: [59686344, 59696345, 59706345, 59716345, 59726345, 59736345, 59746345, 59756345, 59766345, 59776345, 59786345, 59796345, 59806345, 59816345, 59826345, 59836345, 59846345, 59856345, 59866345, 59876345, 59886345, 59896345, 59906345, 59916345, 59926345, 59936345, 59946345, 59956345, 59966345, 59976345, 59986345, 59996345, 60006345, 60016345, 60026345, 60036345, 60046345, 60056345, 60066345, 60076345, 60086345, 60096345, 60106345, 60116345, 60126345, 60136345, 60146345, 60156345, 60166345, 60176345, 60186345, 60196345, 60206345, 60216345, 60226345, 60236345, 60246345, 60256345, 60266345, 60276345, 60286345, 60296345, 60306345, 60316345, 60326345, 60336345, 60346345, 60356345, 60366345, 60376345, 60386345, 60396345, 60406345, 60416345, 60426345, 60436345, 60446345, 60456345, 60466345, 60476345, 60486345, 60496345, 60506345, 60516345, 60526345, 60536345, 60546345, 60556345, 60566345, 60576345, 60586345, 60596345, 60606345, 60616345, 60626345, 60636345, 60646345, 60656345, 60666345, 60676345]</msg>
<status status="PASS" starttime="20201112 12:45:35.254" endtime="20201112 12:45:35.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:35.243" endtime="20201112 12:45:35.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:35.280" endtime="20201112 12:45:35.625"></status>
</kw>
<msg timestamp="20201112 12:45:35.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021915361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032002167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:35.276" endtime="20201112 12:45:35.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:35.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021915361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032002167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:35.634" endtime="20201112 12:45:35.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:35.651" endtime="20201112 12:45:35.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:35.269" endtime="20201112 12:45:35.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:35.264" endtime="20201112 12:45:35.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:35.714" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:35.660" endtime="20201112 12:45:35.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:35.725" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:45:35.723" endtime="20201112 12:45:35.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:35.730" level="INFO">VALUE: 0.021915361</msg>
<status status="PASS" starttime="20201112 12:45:35.727" endtime="20201112 12:45:35.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:35.716" endtime="20201112 12:45:35.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:35.743" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:35.741" endtime="20201112 12:45:35.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:35.748" level="INFO">VALUE: [0.032002167, 0.042004125, 0.052005139, 0.062006292, 0.072007319, 0.082008444, 0.092009444, 0.102010611, 0.112011611, 0.122012764, 0.132013764, 0.142014931, 0.152015917, 0.162017097, 0.172018083, 0.182019264, 0.192020236, 0.202021403, 0.212022403, 0.222023569, 0.232024583, 0.242025778, 0.252026736, 0.262027889, 0.272028889, 0.282030056, 0.292031056, 0.302032208, 0.312033194, 0.322034361, 0.332035361, 0.342036583, 0.352037542, 0.362038681, 0.372039694, 0.382040861, 0.392041847, 0.402043014, 0.412044056, 0.422045181, 0.432046194, 0.442047347, 0.452048333, 0.462049486, 0.472050486, 0.482051667, 0.492052653, 0.502053819, 0.512054806, 0.522055972, 0.532056986, 0.542058139, 0.552059139, 0.562060306, 0.572061292, 0.582062458, 0.592063472, 0.602064694, 0.612065625, 0.622066778, 0.632067792, 0.642068958, 0.652069944, 0.662071111, 0.672072111, 0.682073264, 0.692074319, 0.702075431, 0.712076444, 0.722077597, 0.732078583, 0.742079778, 0.752080806, 0.762081917, 0.772082944, 0.782084153, 0.792085083, 0.802086292, 0.812087236, 0.822088417, 0.832089403, 0.842090625, 0.852091556, 0.86209275, 0.872093722, 0.882094889, 0.892095903, 0.902097056, 0.912098056, 0.922099208, 0.932100208, 0.942101389, 0.952102375, 0.962103542, 0.972104556, 0.982105708, 0.992106736, 1.002107889, 1.012108861, 1.022110056] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:35.746" endtime="20201112 12:45:35.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:35.733" endtime="20201112 12:45:35.751"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:35.758" endtime="20201112 12:45:35.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:35.766" endtime="20201112 12:45:35.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:35.762" endtime="20201112 12:45:35.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:35.753" endtime="20201112 12:45:35.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:33.053" endtime="20201112 12:45:35.793"></status>
</kw>
<msg timestamp="20201112 12:45:35.794" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:35.815" endtime="20201112 12:45:37.919"></status>
</kw>
<msg timestamp="20201112 12:45:37.919" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 62430214, 'wakeups': [62440299, 62450300, 62460300, 62470300, 62480300...</msg>
<status status="PASS" starttime="20201112 12:45:35.811" endtime="20201112 12:45:37.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:37.923" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 62430214, 'wakeups': [62440299, 62450300, 62460300, 62470300, 62480300...</msg>
<status status="PASS" starttime="20201112 12:45:37.921" endtime="20201112 12:45:37.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:37.924" endtime="20201112 12:45:37.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:35.804" endtime="20201112 12:45:37.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:35.799" endtime="20201112 12:45:37.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:37.930" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [62440299, 62450300, 62460300, 62470300, 62480300, 62490300, 62500300, 62510300, 62520300, 62530300, 62540300, 62550300, 62560300, 62570300, 62580300, 62590300, 62...</msg>
<status status="PASS" starttime="20201112 12:45:37.928" endtime="20201112 12:45:37.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:37.935" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:37.934" endtime="20201112 12:45:37.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:37.937" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:37.936" endtime="20201112 12:45:37.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:37.931" endtime="20201112 12:45:37.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:37.943" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:45:37.942" endtime="20201112 12:45:37.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:37.945" level="INFO">VALUE: 62430214</msg>
<status status="PASS" starttime="20201112 12:45:37.944" endtime="20201112 12:45:37.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:37.939" endtime="20201112 12:45:37.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:37.951" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:37.950" endtime="20201112 12:45:37.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:37.954" level="INFO">VALUE: [62440299, 62450300, 62460300, 62470300, 62480300, 62490300, 62500300, 62510300, 62520300, 62530300, 62540300, 62550300, 62560300, 62570300, 62580300, 62590300, 62600300, 62610300, 62620300, 62630300, 62640300, 62650300, 62660300, 62670300, 62680300, 62690300, 62700300, 62710300, 62720300, 62730300, 62740300, 62750300, 62760300, 62770300, 62780300, 62790300, 62800300, 62810300, 62820300, 62830300, 62840300, 62850300, 62860300, 62870300, 62880300, 62890300, 62900300, 62910300, 62920300, 62930300, 62940300, 62950300, 62960300, 62970300, 62980300, 62990300, 63000300, 63010300, 63020300, 63030300, 63040300, 63050300, 63060300, 63070300, 63080300, 63090300, 63100300, 63110300, 63120300, 63130300, 63140300, 63150300, 63160300, 63170300, 63180300, 63190300, 63200300, 63210300, 63220300, 63230300, 63240300, 63250300, 63260300, 63270300, 63280300, 63290300, 63300300, 63310300, 63320300, 63330300, 63340300, 63350300, 63360300, 63370300, 63380300, 63390300, 63400300, 63410300, 63420300, 63430300]</msg>
<status status="PASS" starttime="20201112 12:45:37.952" endtime="20201112 12:45:37.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:37.947" endtime="20201112 12:45:37.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:37.967" endtime="20201112 12:45:38.260"></status>
</kw>
<msg timestamp="20201112 12:45:38.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038808167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048895292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:37.965" endtime="20201112 12:45:38.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:38.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038808167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048895292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:38.264" endtime="20201112 12:45:38.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:38.272" endtime="20201112 12:45:38.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:37.962" endtime="20201112 12:45:38.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:37.955" endtime="20201112 12:45:38.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:38.300" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:38.277" endtime="20201112 12:45:38.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:38.306" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:45:38.305" endtime="20201112 12:45:38.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:38.308" level="INFO">VALUE: 0.038808167</msg>
<status status="PASS" starttime="20201112 12:45:38.307" endtime="20201112 12:45:38.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:38.301" endtime="20201112 12:45:38.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:38.314" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:38.313" endtime="20201112 12:45:38.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:38.317" level="INFO">VALUE: [0.048895292, 0.058897278, 0.068898333, 0.078899431, 0.088900417, 0.098901611, 0.108902569, 0.11890375, 0.128904736, 0.138905889, 0.148906931, 0.158908056, 0.168909056, 0.178910208, 0.188911208, 0.198912403, 0.208913361, 0.218914556, 0.228915542, 0.238916681, 0.248917694, 0.258918847, 0.268919833, 0.278921, 0.288922042, 0.298923167, 0.308924153, 0.318925333, 0.328926306, 0.338927472, 0.348928458, 0.358929625, 0.368930625, 0.378931792, 0.388932778, 0.398933944, 0.408934986, 0.418936097, 0.428937097, 0.438938264, 0.448939264, 0.458940417, 0.468941444, 0.478942611, 0.488943569, 0.498944736, 0.508945736, 0.518946903, 0.528947889, 0.538949056, 0.548950056, 0.558951222, 0.568952222, 0.578953375, 0.588954375, 0.598955542, 0.608956528, 0.618957708, 0.628958694, 0.638959875, 0.648960847, 0.658962028, 0.668963014, 0.678964167, 0.688965181, 0.698966361, 0.708967347, 0.7189685, 0.728969542, 0.738970653, 0.748971667, 0.758972847, 0.768973806, 0.778974972, 0.788976028, 0.798977153, 0.808978194, 0.818979306, 0.828980292, 0.838981444, 0.848982458, 0.858983611, 0.868984639, 0.878985833, 0.888986764, 0.898987944, 0.908988931, 0.918990083, 0.928991083, 0.93899225, 0.94899325, 0.958994417, 0.968995417, 0.978996625, 0.988997569, 0.998998722, 1.00899975, 1.019000889, 1.029001889, 1.039003042] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:38.316" endtime="20201112 12:45:38.317"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:38.310" endtime="20201112 12:45:38.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:38.321" endtime="20201112 12:45:38.322"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:38.325" endtime="20201112 12:45:38.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:38.323" endtime="20201112 12:45:38.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:38.319" endtime="20201112 12:45:38.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:35.795" endtime="20201112 12:45:38.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:30.379" endtime="20201112 12:45:38.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:30.377" endtime="20201112 12:45:38.351"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:45:38.356" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:38.378" endtime="20201112 12:45:40.499"></status>
</kw>
<msg timestamp="20201112 12:45:40.500" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64993900, 'wakeups': [65004001, 65014001, 65024001, 65034001, 65044001...</msg>
<status status="PASS" starttime="20201112 12:45:38.374" endtime="20201112 12:45:40.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:40.507" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64993900, 'wakeups': [65004001, 65014001, 65024001, 65034001, 65044001...</msg>
<status status="PASS" starttime="20201112 12:45:40.503" endtime="20201112 12:45:40.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:40.510" endtime="20201112 12:45:40.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:38.367" endtime="20201112 12:45:40.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:38.362" endtime="20201112 12:45:40.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:40.525" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [65004001, 65014001, 65024001, 65034001, 65044001, 65054001, 65064001, 65074001, 65084001, 65094001, 65104001, 65114001, 65124001, 65134001, 65144001, 65154001, 65...</msg>
<status status="PASS" starttime="20201112 12:45:40.520" endtime="20201112 12:45:40.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:40.535" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:40.533" endtime="20201112 12:45:40.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:40.539" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:40.537" endtime="20201112 12:45:40.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:40.526" endtime="20201112 12:45:40.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:40.552" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:45:40.550" endtime="20201112 12:45:40.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:40.556" level="INFO">VALUE: 64993900</msg>
<status status="PASS" starttime="20201112 12:45:40.554" endtime="20201112 12:45:40.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:40.543" endtime="20201112 12:45:40.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:40.569" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:40.567" endtime="20201112 12:45:40.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:40.574" level="INFO">VALUE: [65004001, 65014001, 65024001, 65034001, 65044001, 65054001, 65064001, 65074001, 65084001, 65094001, 65104001, 65114001, 65124001, 65134001, 65144001, 65154001, 65164001, 65174001, 65184001, 65194001, 65204001, 65214001, 65224001, 65234001, 65244001, 65254001, 65264001, 65274001, 65284001, 65294001, 65304001, 65314001, 65324001, 65334001, 65344001, 65354001, 65364001, 65374001, 65384001, 65394001, 65404001, 65414001, 65424001, 65434001, 65444001, 65454001, 65464001, 65474001, 65484001, 65494001, 65504001, 65514001, 65524001, 65534001, 65544001, 65554001, 65564001, 65574001, 65584001, 65594001, 65604001, 65614001, 65624001, 65634001, 65644001, 65654001, 65664001, 65674001, 65684001, 65694001, 65704001, 65714001, 65724001, 65734001, 65744001, 65754001, 65764001, 65774001, 65784001, 65794001, 65804001, 65814001, 65824001, 65834001, 65844001, 65854001, 65864001, 65874001, 65884001, 65894001, 65904001, 65914001, 65924001, 65934001, 65944001, 65954001, 65964001, 65974001, 65984001, 65994001]</msg>
<status status="PASS" starttime="20201112 12:45:40.571" endtime="20201112 12:45:40.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:40.560" endtime="20201112 12:45:40.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:40.593" endtime="20201112 12:45:40.939"></status>
</kw>
<msg timestamp="20201112 12:45:40.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045846194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055949125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:40.590" endtime="20201112 12:45:40.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:40.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045846194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055949125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:40.948" endtime="20201112 12:45:40.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:40.965" endtime="20201112 12:45:40.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:40.583" endtime="20201112 12:45:40.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:40.578" endtime="20201112 12:45:40.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:41.031" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:40.974" endtime="20201112 12:45:41.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:41.042" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:45:41.039" endtime="20201112 12:45:41.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:41.046" level="INFO">VALUE: 0.045846194</msg>
<status status="PASS" starttime="20201112 12:45:41.044" endtime="20201112 12:45:41.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:41.033" endtime="20201112 12:45:41.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:41.060" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:41.057" endtime="20201112 12:45:41.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:41.065" level="INFO">VALUE: [0.055949125, 0.065950125, 0.075951125, 0.085952306, 0.095953292, 0.105954528, 0.115955458, 0.125956653, 0.135957625, 0.145958792, 0.155959792, 0.165960958, 0.175961958, 0.185963125, 0.195964125, 0.205965292, 0.215966292, 0.225967458, 0.235968542, 0.245969625, 0.255970625, 0.265971792, 0.275972792, 0.285973972, 0.295974972, 0.305976139, 0.315977125, 0.325978347, 0.335979292, 0.345980458, 0.355981472, 0.365982625, 0.375983625, 0.385984792, 0.395985806, 0.405986958, 0.415987958, 0.425989125, 0.435990125, 0.445991333, 0.455992292, 0.465993528, 0.475994472, 0.485995639, 0.495996625, 0.505997792, 0.515998792, 0.525999972, 0.536000972, 0.546002125, 0.556003208, 0.566004292, 0.576005292, 0.586006472, 0.596007486, 0.606008639, 0.616009653, 0.626010819, 0.636011806, 0.646012986, 0.656013972, 0.666015153, 0.676016181, 0.686017306, 0.696018319, 0.706019472, 0.716020486, 0.726021639, 0.736022639, 0.746023819, 0.756024847, 0.766025972, 0.776026972, 0.786028153, 0.796029139, 0.806030306, 0.816031306, 0.826032472, 0.836033472, 0.846034639, 0.856035639, 0.866036806, 0.876037806, 0.886039, 0.896039972, 0.906041208, 0.916042153, 0.926043319, 0.936044319, 0.946045486, 0.956046486, 0.966047653, 0.976048653, 0.986049819, 0.996050847, 1.006052, 1.016053042, 1.026054194, 1.036055208, 1.046056333] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:41.062" endtime="20201112 12:45:41.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:41.050" endtime="20201112 12:45:41.067"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:41.074" endtime="20201112 12:45:41.076"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:41.082" endtime="20201112 12:45:41.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:41.078" endtime="20201112 12:45:41.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:41.069" endtime="20201112 12:45:41.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:38.358" endtime="20201112 12:45:41.108"></status>
</kw>
<msg timestamp="20201112 12:45:41.108" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:41.129" endtime="20201112 12:45:43.250"></status>
</kw>
<msg timestamp="20201112 12:45:43.252" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67744718, 'wakeups': [67754818, 67764819, 67774819, 67784819, 67794819...</msg>
<status status="PASS" starttime="20201112 12:45:41.126" endtime="20201112 12:45:43.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:43.258" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67744718, 'wakeups': [67754818, 67764819, 67774819, 67784819, 67794819...</msg>
<status status="PASS" starttime="20201112 12:45:43.254" endtime="20201112 12:45:43.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:43.261" endtime="20201112 12:45:43.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:41.119" endtime="20201112 12:45:43.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:41.113" endtime="20201112 12:45:43.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:43.271" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [67754818, 67764819, 67774819, 67784819, 67794819, 67804819, 67814819, 67824819, 67834819, 67844819, 67854819, 67864819, 67874819, 67884819, 67894819, 67904819, 67...</msg>
<status status="PASS" starttime="20201112 12:45:43.269" endtime="20201112 12:45:43.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:43.282" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:43.281" endtime="20201112 12:45:43.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:43.284" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:43.283" endtime="20201112 12:45:43.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:43.277" endtime="20201112 12:45:43.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:43.290" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:45:43.289" endtime="20201112 12:45:43.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:43.292" level="INFO">VALUE: 67744718</msg>
<status status="PASS" starttime="20201112 12:45:43.291" endtime="20201112 12:45:43.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:43.285" endtime="20201112 12:45:43.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:43.298" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:43.297" endtime="20201112 12:45:43.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:43.300" level="INFO">VALUE: [67754818, 67764819, 67774819, 67784819, 67794819, 67804819, 67814819, 67824819, 67834819, 67844819, 67854819, 67864819, 67874819, 67884819, 67894819, 67904819, 67914819, 67924819, 67934819, 67944819, 67954819, 67964819, 67974819, 67984819, 67994819, 68004819, 68014819, 68024819, 68034819, 68044819, 68054819, 68064819, 68074819, 68084819, 68094819, 68104819, 68114819, 68124819, 68134819, 68144819, 68154819, 68164819, 68174819, 68184819, 68194819, 68204819, 68214819, 68224819, 68234819, 68244819, 68254819, 68264819, 68274819, 68284819, 68294819, 68304819, 68314819, 68324819, 68334819, 68344819, 68354819, 68364819, 68374819, 68384819, 68394819, 68404819, 68414819, 68424819, 68434819, 68444819, 68454819, 68464819, 68474819, 68484819, 68494819, 68504819, 68514819, 68524819, 68534819, 68544819, 68554819, 68564819, 68574819, 68584819, 68594819, 68604819, 68614819, 68624819, 68634819, 68644819, 68654819, 68664819, 68674819, 68684819, 68694819, 68704819, 68714819, 68724819, 68734819, 68744819]</msg>
<status status="PASS" starttime="20201112 12:45:43.299" endtime="20201112 12:45:43.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:43.294" endtime="20201112 12:45:43.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:43.310" endtime="20201112 12:45:43.626"></status>
</kw>
<msg timestamp="20201112 12:45:43.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038726361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048828431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:43.309" endtime="20201112 12:45:43.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:43.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038726361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048828431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:43.635" endtime="20201112 12:45:43.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:43.653" endtime="20201112 12:45:43.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:43.305" endtime="20201112 12:45:43.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:43.302" endtime="20201112 12:45:43.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:43.715" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:43.661" endtime="20201112 12:45:43.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:43.726" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:45:43.724" endtime="20201112 12:45:43.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:43.731" level="INFO">VALUE: 0.038726361</msg>
<status status="PASS" starttime="20201112 12:45:43.728" endtime="20201112 12:45:43.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:43.717" endtime="20201112 12:45:43.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:43.744" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:43.742" endtime="20201112 12:45:43.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:43.750" level="INFO">VALUE: [0.048828431, 0.058831014, 0.068831986, 0.078833125, 0.088834125, 0.098835292, 0.108836292, 0.118837458, 0.128838458, 0.138839625, 0.148840611, 0.158841778, 0.168842792, 0.178843958, 0.188844958, 0.198846111, 0.208847167, 0.218848292, 0.228849319, 0.238850431, 0.248851431, 0.258852611, 0.268853597, 0.278854764, 0.288855778, 0.298856944, 0.308857944, 0.318859097, 0.328860083, 0.338861278, 0.348862264, 0.358863417, 0.368864417, 0.378865597, 0.388866583, 0.39886775, 0.40886875, 0.418869944, 0.428870917, 0.438872097, 0.448873069, 0.458874236, 0.46887525, 0.478876403, 0.488877403, 0.498878569, 0.508879569, 0.518880736, 0.528881736, 0.538882917, 0.548883917, 0.558885069, 0.568886069, 0.57888725, 0.58888825, 0.598889417, 0.608890403, 0.618891569, 0.628892569, 0.638893736, 0.648894736, 0.658895903, 0.668896889, 0.678898069, 0.688899069, 0.698900222, 0.708901222, 0.718902389, 0.728903389, 0.738904556, 0.748905569, 0.758906736, 0.768907722, 0.778908903, 0.788909903, 0.798911125, 0.808912056, 0.818913222, 0.82891425, 0.838915389, 0.848916403, 0.858917569, 0.868918556, 0.878919722, 0.888920764, 0.898921889, 0.908922917, 0.918924056, 0.928925056, 0.938926222, 0.948927208, 0.958928375, 0.968929389, 0.978930556, 0.988931542, 0.998932708, 1.008933708, 1.018934875, 1.028935875, 1.038937056] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:43.747" endtime="20201112 12:45:43.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:43.734" endtime="20201112 12:45:43.752"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:43.759" endtime="20201112 12:45:43.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:43.767" endtime="20201112 12:45:43.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:43.763" endtime="20201112 12:45:43.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:43.754" endtime="20201112 12:45:43.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:41.109" endtime="20201112 12:45:43.793"></status>
</kw>
<msg timestamp="20201112 12:45:43.793" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:43.816" endtime="20201112 12:45:45.936"></status>
</kw>
<msg timestamp="20201112 12:45:45.937" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 70431159, 'wakeups': [70441259, 70451260, 70461260, 70471260, 70481260...</msg>
<status status="PASS" starttime="20201112 12:45:43.813" endtime="20201112 12:45:45.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:45.944" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 70431159, 'wakeups': [70441259, 70451260, 70461260, 70471260, 70481260...</msg>
<status status="PASS" starttime="20201112 12:45:45.939" endtime="20201112 12:45:45.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:45.946" endtime="20201112 12:45:45.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:43.804" endtime="20201112 12:45:45.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:43.798" endtime="20201112 12:45:45.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:45.960" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [70441259, 70451260, 70461260, 70471260, 70481260, 70491260, 70501260, 70511260, 70521260, 70531260, 70541260, 70551260, 70561260, 70571260, 70581260, 70591260, 70...</msg>
<status status="PASS" starttime="20201112 12:45:45.955" endtime="20201112 12:45:45.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:45.970" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:45.968" endtime="20201112 12:45:45.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:45.975" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:45.972" endtime="20201112 12:45:45.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:45.962" endtime="20201112 12:45:45.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:45.987" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:45:45.985" endtime="20201112 12:45:45.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:45.992" level="INFO">VALUE: 70431159</msg>
<status status="PASS" starttime="20201112 12:45:45.989" endtime="20201112 12:45:45.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:45.978" endtime="20201112 12:45:45.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:46.004" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:46.002" endtime="20201112 12:45:46.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:46.010" level="INFO">VALUE: [70441259, 70451260, 70461260, 70471260, 70481260, 70491260, 70501260, 70511260, 70521260, 70531260, 70541260, 70551260, 70561260, 70571260, 70581260, 70591260, 70601260, 70611260, 70621260, 70631260, 70641260, 70651260, 70661260, 70671260, 70681260, 70691260, 70701260, 70711260, 70721260, 70731260, 70741260, 70751260, 70761260, 70771260, 70781260, 70791260, 70801260, 70811260, 70821260, 70831260, 70841260, 70851260, 70861260, 70871260, 70881260, 70891260, 70901260, 70911260, 70921260, 70931260, 70941260, 70951260, 70961260, 70971260, 70981260, 70991260, 71001260, 71011260, 71021260, 71031260, 71041260, 71051260, 71061260, 71071260, 71081260, 71091260, 71101260, 71111260, 71121260, 71131260, 71141260, 71151260, 71161260, 71171260, 71181260, 71191260, 71201260, 71211260, 71221260, 71231260, 71241260, 71251260, 71261260, 71271260, 71281260, 71291260, 71301260, 71311260, 71321260, 71331260, 71341260, 71351260, 71361260, 71371260, 71381260, 71391260, 71401260, 71411260, 71421260, 71431260]</msg>
<status status="PASS" starttime="20201112 12:45:46.007" endtime="20201112 12:45:46.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:45.995" endtime="20201112 12:45:46.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:46.029" endtime="20201112 12:45:46.373"></status>
</kw>
<msg timestamp="20201112 12:45:46.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040196472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050298181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:46.026" endtime="20201112 12:45:46.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:46.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040196472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050298181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:46.382" endtime="20201112 12:45:46.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:46.399" endtime="20201112 12:45:46.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:46.019" endtime="20201112 12:45:46.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:46.014" endtime="20201112 12:45:46.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:46.464" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:46.408" endtime="20201112 12:45:46.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:46.475" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:45:46.473" endtime="20201112 12:45:46.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:46.480" level="INFO">VALUE: 0.040196472</msg>
<status status="PASS" starttime="20201112 12:45:46.477" endtime="20201112 12:45:46.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:46.466" endtime="20201112 12:45:46.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:46.494" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:46.491" endtime="20201112 12:45:46.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:46.499" level="INFO">VALUE: [0.050298181, 0.060300722, 0.070301722, 0.080302889, 0.090303903, 0.100305056, 0.110306083, 0.120307222, 0.130308222, 0.140309389, 0.150310375, 0.160311542, 0.170312542, 0.180313708, 0.19031475, 0.200315861, 0.210316861, 0.220318042, 0.230319028, 0.240320208, 0.250321208, 0.260322361, 0.270323347, 0.280324514, 0.290325514, 0.300326681, 0.310327681, 0.320328931, 0.330329889, 0.340331028, 0.350332014, 0.360333181, 0.370334181, 0.380335347, 0.390336333, 0.400337514, 0.410338569, 0.420339667, 0.430340667, 0.440341833, 0.450342833, 0.460344014, 0.470345, 0.480346194, 0.490347153, 0.500348319, 0.510349319, 0.5203505, 0.530351486, 0.540352653, 0.550353667, 0.560354819, 0.570355833, 0.580356986, 0.590357986, 0.600359153, 0.610360153, 0.620361333, 0.630362361, 0.6403635, 0.650364556, 0.660365681, 0.670366653, 0.680367819, 0.690368806, 0.700370028, 0.710371, 0.720372139, 0.730373139, 0.740374319, 0.750375306, 0.760376472, 0.770377486, 0.780378639, 0.790379639, 0.800380847, 0.810381806, 0.820382986, 0.830383972, 0.840385139, 0.850386139, 0.860387306, 0.870388347, 0.880389472, 0.890390486, 0.900391653, 0.910392653, 0.920393806, 0.930394806, 0.940395972, 0.950397042, 0.960398139, 0.970399139, 0.980400306, 0.990401306, 1.000402472, 1.010403486, 1.020404708, 1.030405625, 1.040406806] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:46.496" endtime="20201112 12:45:46.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:46.483" endtime="20201112 12:45:46.501"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:46.508" endtime="20201112 12:45:46.511"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:46.517" endtime="20201112 12:45:46.537"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:46.513" endtime="20201112 12:45:46.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:46.503" endtime="20201112 12:45:46.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:43.795" endtime="20201112 12:45:46.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:38.353" endtime="20201112 12:45:46.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:38.352" endtime="20201112 12:45:46.540"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:45:46.543" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:46.553" endtime="20201112 12:45:48.671"></status>
</kw>
<msg timestamp="20201112 12:45:48.673" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 73166439, 'wakeups': [73176555, 73186555, 73196555, 73206555, 732165...</msg>
<status status="PASS" starttime="20201112 12:45:46.551" endtime="20201112 12:45:48.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:48.680" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 73166439, 'wakeups': [73176555, 73186555, 73196555, 73206555, 732165...</msg>
<status status="PASS" starttime="20201112 12:45:48.675" endtime="20201112 12:45:48.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:48.682" endtime="20201112 12:45:48.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:46.548" endtime="20201112 12:45:48.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:46.545" endtime="20201112 12:45:48.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:48.688" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [73176555, 73186555, 73196555, 73206555, 73216555, 73226555, 73236555, 73246555, 73256555, 73266555, 73276555, 73286555, 73296555, 73306555, 73316555, 73326555, 73...</msg>
<status status="PASS" starttime="20201112 12:45:48.686" endtime="20201112 12:45:48.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:48.693" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:48.692" endtime="20201112 12:45:48.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:48.696" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:48.694" endtime="20201112 12:45:48.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:48.689" endtime="20201112 12:45:48.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:48.702" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:45:48.700" endtime="20201112 12:45:48.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:48.704" level="INFO">VALUE: 73166439</msg>
<status status="PASS" starttime="20201112 12:45:48.703" endtime="20201112 12:45:48.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:48.697" endtime="20201112 12:45:48.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:48.711" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:48.710" endtime="20201112 12:45:48.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:48.713" level="INFO">VALUE: [73176555, 73186555, 73196555, 73206555, 73216555, 73226555, 73236555, 73246555, 73256555, 73266555, 73276555, 73286555, 73296555, 73306555, 73316555, 73326555, 73336555, 73346555, 73356555, 73366555, 73376555, 73386555, 73396555, 73406555, 73416555, 73426555, 73436555, 73446555, 73456555, 73466555, 73476555, 73486555, 73496555, 73506555, 73516555, 73526555, 73536555, 73546555, 73556555, 73566555, 73576555, 73586555, 73596555, 73606555, 73616555, 73626555, 73636555, 73646555, 73656555, 73666555, 73676555, 73686555, 73696555, 73706555, 73716555, 73726555, 73736555, 73746555, 73756555, 73766555, 73776555, 73786555, 73796555, 73806555, 73816555, 73826555, 73836555, 73846555, 73856555, 73866555, 73876555, 73886555, 73896555, 73906555, 73916555, 73926555, 73936555, 73946555, 73956555, 73966555, 73976555, 73986555, 73996555, 74006555, 74016555, 74026555, 74036555, 74046555, 74056555, 74066555, 74076555, 74086555, 74096555, 74106555, 74116555, 74126555, 74136555, 74146555, 74156555, 74166555]</msg>
<status status="PASS" starttime="20201112 12:45:48.712" endtime="20201112 12:45:48.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:48.705" endtime="20201112 12:45:48.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:48.726" endtime="20201112 12:45:49.019"></status>
</kw>
<msg timestamp="20201112 12:45:49.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025228639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035346611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:48.720" endtime="20201112 12:45:49.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:49.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025228639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035346611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:49.023" endtime="20201112 12:45:49.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:49.031" endtime="20201112 12:45:49.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:48.717" endtime="20201112 12:45:49.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:48.715" endtime="20201112 12:45:49.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:49.058" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:49.035" endtime="20201112 12:45:49.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:49.063" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:45:49.062" endtime="20201112 12:45:49.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:49.066" level="INFO">VALUE: 0.025228639</msg>
<status status="PASS" starttime="20201112 12:45:49.065" endtime="20201112 12:45:49.066"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:49.059" endtime="20201112 12:45:49.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:49.072" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:49.071" endtime="20201112 12:45:49.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:49.074" level="INFO">VALUE: [0.035346611, 0.045347764, 0.055348764, 0.065349917, 0.075350917, 0.085352097, 0.095353083, 0.105354236, 0.115355236, 0.125356403, 0.135357444, 0.145358569, 0.155359583, 0.165360722, 0.175361722, 0.185362889, 0.195363875, 0.205365042, 0.215366042, 0.225367222, 0.235368236, 0.245369361, 0.255370361, 0.265371542, 0.275372528, 0.285373694, 0.295374681, 0.305375847, 0.315376847, 0.325378014, 0.335379014, 0.345380181, 0.355381208, 0.365382403, 0.375383347, 0.385384514, 0.3953855, 0.405386681, 0.415387653, 0.425388819, 0.435389819, 0.445391, 0.455392, 0.465393153, 0.475394167, 0.485395333, 0.495396319, 0.505397472, 0.515398472, 0.525399639, 0.535400681, 0.545401833, 0.555402792, 0.565403972, 0.575404958, 0.585406139, 0.595407167, 0.605408347, 0.615409292, 0.625410458, 0.635411458, 0.645412625, 0.655413611, 0.665414778, 0.675415778, 0.685416944, 0.695417958, 0.705419111, 0.715420111, 0.725421278, 0.735422264, 0.7454235, 0.755424431, 0.765425653, 0.775426597, 0.785427819, 0.795428764, 0.805429944, 0.815430931, 0.825432097, 0.835433097, 0.84543425, 0.85543525, 0.865436417, 0.875437417, 0.885438597, 0.895439639, 0.905440819, 0.915441736, 0.925442903, 0.935443903, 0.945445069, 0.955446069, 0.96544725, 0.975448236, 0.985449403, 0.995450389, 1.005451556, 1.015452556, 1.025453722] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:49.073" endtime="20201112 12:45:49.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:49.067" endtime="20201112 12:45:49.076"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:49.078" endtime="20201112 12:45:49.080"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:49.083" endtime="20201112 12:45:49.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:49.081" endtime="20201112 12:45:49.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:49.076" endtime="20201112 12:45:49.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:46.544" endtime="20201112 12:45:49.105"></status>
</kw>
<msg timestamp="20201112 12:45:49.105" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:49.115" endtime="20201112 12:45:51.233"></status>
</kw>
<msg timestamp="20201112 12:45:51.235" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75728263, 'wakeups': [75738377, 75748379, 75758379, 75768379, 757783...</msg>
<status status="PASS" starttime="20201112 12:45:49.113" endtime="20201112 12:45:51.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:51.239" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75728263, 'wakeups': [75738377, 75748379, 75758379, 75768379, 757783...</msg>
<status status="PASS" starttime="20201112 12:45:51.236" endtime="20201112 12:45:51.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:51.240" endtime="20201112 12:45:51.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:49.110" endtime="20201112 12:45:51.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:49.107" endtime="20201112 12:45:51.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:51.246" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [75738377, 75748379, 75758379, 75768379, 75778379, 75788379, 75798379, 75808379, 75818379, 75828379, 75838379, 75848379, 75858379, 75868379, 75878379, 75888379, 75...</msg>
<status status="PASS" starttime="20201112 12:45:51.244" endtime="20201112 12:45:51.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:51.251" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:51.250" endtime="20201112 12:45:51.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:51.253" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:51.252" endtime="20201112 12:45:51.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:51.247" endtime="20201112 12:45:51.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:51.259" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:45:51.258" endtime="20201112 12:45:51.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:51.262" level="INFO">VALUE: 75728263</msg>
<status status="PASS" starttime="20201112 12:45:51.261" endtime="20201112 12:45:51.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:51.255" endtime="20201112 12:45:51.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:51.267" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:51.266" endtime="20201112 12:45:51.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:51.270" level="INFO">VALUE: [75738377, 75748379, 75758379, 75768379, 75778379, 75788379, 75798379, 75808379, 75818379, 75828379, 75838379, 75848379, 75858379, 75868379, 75878379, 75888379, 75898379, 75908379, 75918379, 75928379, 75938379, 75948379, 75958379, 75968379, 75978379, 75988379, 75998379, 76008379, 76018379, 76028379, 76038379, 76048379, 76058379, 76068379, 76078379, 76088379, 76098379, 76108379, 76118379, 76128379, 76138379, 76148379, 76158379, 76168379, 76178379, 76188379, 76198379, 76208379, 76218379, 76228379, 76238379, 76248379, 76258379, 76268379, 76278379, 76288379, 76298379, 76308379, 76318379, 76328379, 76338379, 76348379, 76358379, 76368379, 76378379, 76388379, 76398379, 76408379, 76418379, 76428379, 76438379, 76448379, 76458379, 76468379, 76478379, 76488379, 76498379, 76508379, 76518379, 76528379, 76538379, 76548379, 76558379, 76568379, 76578379, 76588379, 76598379, 76608379, 76618379, 76628379, 76638379, 76648379, 76658379, 76668379, 76678379, 76688379, 76698379, 76708379, 76718379, 76728379]</msg>
<status status="PASS" starttime="20201112 12:45:51.269" endtime="20201112 12:45:51.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:51.263" endtime="20201112 12:45:51.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:51.279" endtime="20201112 12:45:51.570"></status>
</kw>
<msg timestamp="20201112 12:45:51.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021857319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031973847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:51.277" endtime="20201112 12:45:51.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:51.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021857319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031973847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:51.574" endtime="20201112 12:45:51.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:51.581" endtime="20201112 12:45:51.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:51.274" endtime="20201112 12:45:51.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:51.272" endtime="20201112 12:45:51.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:51.610" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:51.586" endtime="20201112 12:45:51.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:51.616" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:45:51.615" endtime="20201112 12:45:51.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:51.618" level="INFO">VALUE: 0.021857319</msg>
<status status="PASS" starttime="20201112 12:45:51.617" endtime="20201112 12:45:51.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:51.611" endtime="20201112 12:45:51.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:51.624" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:51.623" endtime="20201112 12:45:51.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:51.627" level="INFO">VALUE: [0.031973847, 0.041977222, 0.051978181, 0.061979333, 0.071980361, 0.081981514, 0.0919825, 0.101983653, 0.111984653, 0.121985819, 0.131986819, 0.141988, 0.151988972, 0.161990139, 0.171991153, 0.181992347, 0.191993292, 0.201994458, 0.211995528, 0.221996639, 0.231997611, 0.241998792, 0.251999778, 0.262000958, 0.272001931, 0.282003111, 0.292004111, 0.302005264, 0.312006264, 0.322007417, 0.332008417, 0.342009597, 0.352010597, 0.36201175, 0.372012736, 0.382013917, 0.392014917, 0.402016083, 0.412017111, 0.422018278, 0.432019236, 0.442020389, 0.452021403, 0.462022556, 0.472023542, 0.482024708, 0.492025722, 0.502026931, 0.512027875, 0.522029028, 0.532030028, 0.542031222, 0.552032194, 0.562033361, 0.572034347, 0.582035528, 0.592036514, 0.602037694, 0.612038694, 0.622039917, 0.632040847, 0.642042, 0.652043014, 0.662044167, 0.672045167, 0.682046375, 0.692047361, 0.7020485, 0.712049556, 0.722050667, 0.732051653, 0.742052833, 0.752053819, 0.762055028, 0.772055972, 0.782057139, 0.792058194, 0.802059319, 0.812060306, 0.822061472, 0.832062458, 0.842063625, 0.852064653, 0.862065792, 0.872066806, 0.882067958, 0.892068944, 0.902070167, 0.912071125, 0.922072278, 0.932073292, 0.942074444, 0.952075458, 0.962076597, 0.972077611, 0.982078792, 0.992079764, 1.002080931, 1.012081944, 1.022083097] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:51.625" endtime="20201112 12:45:51.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:51.619" endtime="20201112 12:45:51.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:51.631" endtime="20201112 12:45:51.632"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:51.635" endtime="20201112 12:45:51.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:51.633" endtime="20201112 12:45:51.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:51.628" endtime="20201112 12:45:51.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:49.105" endtime="20201112 12:45:51.656"></status>
</kw>
<msg timestamp="20201112 12:45:51.656" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:51.667" endtime="20201112 12:45:53.791"></status>
</kw>
<msg timestamp="20201112 12:45:53.793" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 78282589, 'wakeups': [78292705, 78302705, 78312705, 78322705, 783327...</msg>
<status status="PASS" starttime="20201112 12:45:51.666" endtime="20201112 12:45:53.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:53.800" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 78282589, 'wakeups': [78292705, 78302705, 78312705, 78322705, 783327...</msg>
<status status="PASS" starttime="20201112 12:45:53.795" endtime="20201112 12:45:53.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:53.802" endtime="20201112 12:45:53.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:51.662" endtime="20201112 12:45:53.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:51.659" endtime="20201112 12:45:53.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:53.817" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [78292705, 78302705, 78312705, 78322705, 78332705, 78342705, 78352705, 78362705, 78372705, 78382705, 78392705, 78402705, 78412705, 78422705, 78432705, 78442705, 78...</msg>
<status status="PASS" starttime="20201112 12:45:53.811" endtime="20201112 12:45:53.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:53.828" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:53.826" endtime="20201112 12:45:53.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:53.833" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:53.830" endtime="20201112 12:45:53.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:53.819" endtime="20201112 12:45:53.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:53.846" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:45:53.844" endtime="20201112 12:45:53.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:53.850" level="INFO">VALUE: 78282589</msg>
<status status="PASS" starttime="20201112 12:45:53.848" endtime="20201112 12:45:53.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:53.837" endtime="20201112 12:45:53.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:53.863" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:53.861" endtime="20201112 12:45:53.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:53.868" level="INFO">VALUE: [78292705, 78302705, 78312705, 78322705, 78332705, 78342705, 78352705, 78362705, 78372705, 78382705, 78392705, 78402705, 78412705, 78422705, 78432705, 78442705, 78452705, 78462705, 78472705, 78482705, 78492705, 78502705, 78512705, 78522705, 78532705, 78542705, 78552705, 78562705, 78572705, 78582705, 78592705, 78602705, 78612705, 78622705, 78632705, 78642705, 78652705, 78662705, 78672705, 78682705, 78692705, 78702705, 78712705, 78722705, 78732705, 78742705, 78752705, 78762705, 78772705, 78782705, 78792705, 78802705, 78812705, 78822705, 78832705, 78842705, 78852705, 78862705, 78872705, 78882705, 78892705, 78902705, 78912705, 78922705, 78932705, 78942705, 78952705, 78962705, 78972705, 78982705, 78992705, 79002705, 79012705, 79022705, 79032705, 79042705, 79052705, 79062705, 79072705, 79082705, 79092705, 79102705, 79112705, 79122705, 79132705, 79142705, 79152705, 79162705, 79172705, 79182705, 79192705, 79202705, 79212705, 79222705, 79232705, 79242705, 79252705, 79262705, 79272705, 79282705]</msg>
<status status="PASS" starttime="20201112 12:45:53.865" endtime="20201112 12:45:53.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:53.854" endtime="20201112 12:45:53.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:53.887" endtime="20201112 12:45:54.249"></status>
</kw>
<msg timestamp="20201112 12:45:54.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024844694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034962708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:53.884" endtime="20201112 12:45:54.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:54.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024844694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034962708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:54.258" endtime="20201112 12:45:54.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:54.276" endtime="20201112 12:45:54.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:53.876" endtime="20201112 12:45:54.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:53.872" endtime="20201112 12:45:54.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:54.339" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:54.284" endtime="20201112 12:45:54.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:54.351" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:45:54.348" endtime="20201112 12:45:54.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:54.355" level="INFO">VALUE: 0.024844694</msg>
<status status="PASS" starttime="20201112 12:45:54.353" endtime="20201112 12:45:54.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:54.342" endtime="20201112 12:45:54.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:54.369" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:54.366" endtime="20201112 12:45:54.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:54.373" level="INFO">VALUE: [0.034962708, 0.044963875, 0.054964889, 0.064966028, 0.074967028, 0.084968264, 0.094969222, 0.104970347, 0.114971403, 0.124972528, 0.134973514, 0.144974694, 0.154975667, 0.164976819, 0.174977819, 0.184979056, 0.194979986, 0.204981153, 0.214982139, 0.224983306, 0.234984333, 0.244985486, 0.254986458, 0.264987625, 0.274988611, 0.284989792, 0.294990806, 0.304991931, 0.314992944, 0.324994153, 0.334995097, 0.34499625, 0.35499725, 0.364998431, 0.374999417, 0.385000569, 0.395001583, 0.405002736, 0.415003736, 0.425004889, 0.435005889, 0.445007056, 0.455008056, 0.465009222, 0.475010208, 0.485011389, 0.495012375, 0.505013556, 0.515014542, 0.525015708, 0.535016694, 0.545017875, 0.555018861, 0.565020028, 0.575021028, 0.585022181, 0.595023181, 0.605024347, 0.615025347, 0.6250265, 0.635027514, 0.645028667, 0.655029667, 0.665030833, 0.675031833, 0.685032986, 0.695033986, 0.705035153, 0.715036153, 0.725037306, 0.735038306, 0.745039472, 0.755040472, 0.765041653, 0.775042653, 0.785043792, 0.795044792, 0.805045986, 0.815046958, 0.825048125, 0.835049125, 0.845050278, 0.855051292, 0.865052458, 0.875053528, 0.885054611, 0.895055597, 0.905056764, 0.915057764, 0.925058931, 0.935059917, 0.945061083, 0.955062083, 0.965063264, 0.975064264, 0.985065403, 0.995066417, 1.005067569, 1.015068569, 1.025069736] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:54.371" endtime="20201112 12:45:54.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:54.359" endtime="20201112 12:45:54.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:54.384" endtime="20201112 12:45:54.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:54.392" endtime="20201112 12:45:54.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:54.388" endtime="20201112 12:45:54.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:54.378" endtime="20201112 12:45:54.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:51.657" endtime="20201112 12:45:54.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:46.541" endtime="20201112 12:45:54.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:46.541" endtime="20201112 12:45:54.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.124" endtime="20201112 12:45:54.419"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 12:44:33.991" endtime="20201112 12:45:54.422" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:44:31.523" endtime="20201112 12:45:54.431"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201112 12:42:07.015" endtime="20201112 12:45:54.471"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
