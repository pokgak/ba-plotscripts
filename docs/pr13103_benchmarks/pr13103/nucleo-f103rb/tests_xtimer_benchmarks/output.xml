<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201112 09:42:38.345" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:42:39.458" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:42:39.474" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:42:41.410" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:42:39.454" endtime="20201112 09:42:41.411"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.417" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:42:41.413" endtime="20201112 09:42:41.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.450" endtime="20201112 09:42:41.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:41.423" endtime="20201112 09:42:41.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.421" endtime="20201112 09:42:41.720"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.752" endtime="20201112 09:42:41.785"></status>
</kw>
<msg timestamp="20201112 09:42:41.786" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['his is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', ...</msg>
<status status="PASS" starttime="20201112 09:42:41.748" endtime="20201112 09:42:41.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.792" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['his is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', ...</msg>
<status status="PASS" starttime="20201112 09:42:41.788" endtime="20201112 09:42:41.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.799" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:41.795" endtime="20201112 09:42:41.800"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:41.742" endtime="20201112 09:42:41.802"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:41.735" endtime="20201112 09:42:41.804"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.732" endtime="20201112 09:42:41.804"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:41.812" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:41.811" endtime="20201112 09:42:41.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.806" endtime="20201112 09:42:41.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.731" endtime="20201112 09:42:41.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.729" endtime="20201112 09:42:41.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.816" endtime="20201112 09:42:41.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.725" endtime="20201112 09:42:41.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.823" endtime="20201112 09:42:41.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.722" endtime="20201112 09:42:41.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.446" endtime="20201112 09:42:41.829"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:41.844" endtime="20201112 09:42:41.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.840" endtime="20201112 09:42:41.867"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.903" endtime="20201112 09:42:41.927"></status>
</kw>
<msg timestamp="20201112 09:42:41.928" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:41.899" endtime="20201112 09:42:41.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.934" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:41.930" endtime="20201112 09:42:41.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.941" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:41.936" endtime="20201112 09:42:41.941"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:41.892" endtime="20201112 09:42:41.943"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:41.886" endtime="20201112 09:42:41.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.882" endtime="20201112 09:42:41.946"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:41.954" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:41.952" endtime="20201112 09:42:41.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.947" endtime="20201112 09:42:41.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.880" endtime="20201112 09:42:41.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.877" endtime="20201112 09:42:41.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.958" endtime="20201112 09:42:41.961"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.873" endtime="20201112 09:42:41.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.869" endtime="20201112 09:42:41.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.837" endtime="20201112 09:42:41.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.985" endtime="20201112 09:42:41.998"></status>
</kw>
<msg timestamp="20201112 09:42:41.999" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:41.981" endtime="20201112 09:42:42.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.005" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.002" endtime="20201112 09:42:42.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.008" endtime="20201112 09:42:42.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.973" endtime="20201112 09:42:42.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.968" endtime="20201112 09:42:42.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.026" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 09:42:42.023" endtime="20201112 09:42:42.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.030" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 09:42:42.028" endtime="20201112 09:42:42.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.017" endtime="20201112 09:42:42.033"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:41.830" endtime="20201112 09:42:42.035" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:42:38.525" endtime="20201112 09:42:42.045"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.189" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:42:42.204" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:42:44.124" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:42:42.185" endtime="20201112 09:42:44.125"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.131" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:42:44.128" endtime="20201112 09:42:44.132"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.182" endtime="20201112 09:42:44.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:44.138" endtime="20201112 09:42:44.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.135" endtime="20201112 09:42:44.469"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.498" endtime="20201112 09:42:44.532"></status>
</kw>
<msg timestamp="20201112 09:42:44.533" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb'...</msg>
<status status="PASS" starttime="20201112 09:42:44.495" endtime="20201112 09:42:44.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.539" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb'...</msg>
<status status="PASS" starttime="20201112 09:42:44.535" endtime="20201112 09:42:44.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.546" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:44.542" endtime="20201112 09:42:44.547"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:44.489" endtime="20201112 09:42:44.549"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:44.483" endtime="20201112 09:42:44.550"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.481" endtime="20201112 09:42:44.551"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:44.559" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:44.557" endtime="20201112 09:42:44.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.553" endtime="20201112 09:42:44.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.479" endtime="20201112 09:42:44.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.477" endtime="20201112 09:42:44.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.563" endtime="20201112 09:42:44.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.474" endtime="20201112 09:42:44.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.569" endtime="20201112 09:42:44.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.471" endtime="20201112 09:42:44.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.179" endtime="20201112 09:42:44.575"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:44.590" endtime="20201112 09:42:44.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.586" endtime="20201112 09:42:44.613"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.710" endtime="20201112 09:42:44.732"></status>
</kw>
<msg timestamp="20201112 09:42:44.733" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.706" endtime="20201112 09:42:44.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.736" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.734" endtime="20201112 09:42:44.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.739" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:44.737" endtime="20201112 09:42:44.740"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:44.698" endtime="20201112 09:42:44.741"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:44.692" endtime="20201112 09:42:44.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.627" endtime="20201112 09:42:44.742"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:44.745" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:44.745" endtime="20201112 09:42:44.746"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.742" endtime="20201112 09:42:44.746"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.625" endtime="20201112 09:42:44.746"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.623" endtime="20201112 09:42:44.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.747" endtime="20201112 09:42:44.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.619" endtime="20201112 09:42:44.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.614" endtime="20201112 09:42:44.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.583" endtime="20201112 09:42:44.750"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 09:42:44.753" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.762" endtime="20201112 09:42:44.773"></status>
</kw>
<msg timestamp="20201112 09:42:44.774" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.761" endtime="20201112 09:42:44.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.777" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.775" endtime="20201112 09:42:44.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.778" endtime="20201112 09:42:44.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.757" endtime="20201112 09:42:44.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.755" endtime="20201112 09:42:44.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.790" endtime="20201112 09:42:45.105"></status>
</kw>
<msg timestamp="20201112 09:42:45.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.161754292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161766819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:44.788" endtime="20201112 09:42:45.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.161754292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161766819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:45.112" endtime="20201112 09:42:45.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.125" endtime="20201112 09:42:45.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.785" endtime="20201112 09:42:45.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.783" endtime="20201112 09:42:45.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.142" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:45.139" endtime="20201112 09:42:45.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.150" level="INFO">VALUE: [{'time': 0.161754292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161766819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2527000000012167e-05, 'source_diff': 1.2527000000012167e-05}, {'time': 0.161774528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.708999999994637e-06, 'source_diff': 7.708999999994637e-06}, {'time': 0.161782444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.915999999996703e-06, 'source_diff': 7.915999999996703e-06}, {'time': 0.161788681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2369999999922765e-06, 'source_diff': 6.2369999999922765e-06}, {'time': 0.161793681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0000000000050004e-06, 'source_diff': 5.0000000000050004e-06}, {'time': 0.161808056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4375000000010907e-05, 'source_diff': 1.4375000000010907e-05}, {'time': 0.161819944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1887999999987686e-05, 'source_diff': 1.1887999999987686e-05}, {'time': 0.161822431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.486999999995465e-06, 'source_diff': 2.486999999995465e-06}, {'time': 0.161837639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5208000000016542e-05, 'source_diff': 1.5208000000016542e-05}, {'time': 0.161847861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0222000000004172e-05, 'source_diff': 1.0222000000004172e-05}, {'time': 0.161859167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1305999999988714e-05, 'source_diff': 1.1305999999988714e-05}, {'time': 0.161873264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.40969999999907e-05, 'source_diff': 1.40969999999907e-05}, {'time': 0.161878264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0000000000050004e-06, 'source_diff': 5.0000000000050004e-06}, {'time': 0.161885611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347000000018644e-06, 'source_diff': 7.347000000018644e-06}, {'time': 0.161900139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4527999999985886e-05, 'source_diff': 1.4527999999985886e-05}, {'time': 0.1619135, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.336099999998952e-05, 'source_diff': 1.336099999998952e-05}, {'time': 0.161916611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.161922042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.161936417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4375000000010907e-05, 'source_diff': 1.4375000000010907e-05}, {'time': 0.16194475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.332999999999258e-06, 'source_diff': 8.332999999999258e-06}, {'time': 0.161955153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0402999999992169e-05, 'source_diff': 1.0402999999992169e-05}, {'time': 0.161957653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.500000000016378e-06, 'source_diff': 2.500000000016378e-06}, {'time': 0.161968917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1263999999983065e-05, 'source_diff': 1.1263999999983065e-05}, {'time': 0.161979111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.019400000001891e-05, 'source_diff': 1.019400000001891e-05}, {'time': 0.161982861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7499999999968114e-06, 'source_diff': 3.7499999999968114e-06}, {'time': 0.161985361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4999999999886224e-06, 'source_diff': 2.4999999999886224e-06}, {'time': 0.161993292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.931000000016564e-06, 'source_diff': 7.931000000016564e-06}, {'time': 0.162001819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.526999999980411e-06, 'source_diff': 8.526999999980411e-06}, {'time': 0.162017236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5417000000017556e-05, 'source_diff': 1.5417000000017556e-05}, {'time': 0.162029139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1902999999979791e-05, 'source_diff': 1.1902999999979791e-05}, {'time': 0.162033083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.944000000005721e-06, 'source_diff': 3.944000000005721e-06}, {'time': 0.162047056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3973000000000457e-05, 'source_diff': 1.3973000000000457e-05}, {'time': 0.162049778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7220000000105493e-06, 'source_diff': 2.7220000000105493e-06}, {'time': 0.162063708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3929999999995335e-05, 'source_diff': 1.3929999999995335e-05}, {'time': 0.162076014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2305999999989714e-05, 'source_diff': 1.2305999999989714e-05}, {'time': 0.162090583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4569000000019816e-05, 'source_diff': 1.4569000000019816e-05}, {'time': 0.162096833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999985434e-06, 'source_diff': 6.249999999985434e-06}, {'time': 0.162110597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.162115194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.596999999995077e-06, 'source_diff': 4.596999999995077e-06}, {'time': 0.162127458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2264000000011821e-05, 'source_diff': 1.2264000000011821e-05}, {'time': 0.162134986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.5280000000066405e-06, 'source_diff': 7.5280000000066405e-06}, {'time': 0.162141, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.162151833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.083299999998788e-05, 'source_diff': 1.083299999998788e-05}, {'time': 0.162166639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4806000000006092e-05, 'source_diff': 1.4806000000006092e-05}, {'time': 0.162180181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3542000000005272e-05, 'source_diff': 1.3542000000005272e-05}, {'time': 0.162190389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0207999999983786e-05, 'source_diff': 1.0207999999983786e-05}, {'time': 0.162197681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.292000000019838e-06, 'source_diff': 7.292000000019838e-06}, {'time': 0.162205597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.915999999996703e-06, 'source_diff': 7.915999999996703e-06}, {'time': 0.162214347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:45.144" endtime="20201112 09:42:45.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.133" endtime="20201112 09:42:45.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:45.184" level="INFO">${debug-compressed} = {'time': [0.161754292, 0.161766819, 0.161774528, 0.161782444, 0.161788681, 0.161793681, 0.161808056, 0.161819944, 0.161822431, 0.161837639, 0.161847861, 0.161859167, 0.161873264, 0.161878264, 0.161885...</msg>
<status status="PASS" starttime="20201112 09:42:45.155" endtime="20201112 09:42:45.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.194" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:45.191" endtime="20201112 09:42:45.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.201" level="INFO">VALUE: {'time': [0.161754292, 0.161766819, 0.161774528, 0.161782444, 0.161788681, 0.161793681, 0.161808056, 0.161819944, 0.161822431, 0.161837639, 0.161847861, 0.161859167, 0.161873264, 0.161878264, 0.161885611, 0.161900139, 0.1619135, 0.161916611, 0.161922042, 0.161936417, 0.16194475, 0.161955153, 0.161957653, 0.161968917, 0.161979111, 0.161982861, 0.161985361, 0.161993292, 0.162001819, 0.162017236, 0.162029139, 0.162033083, 0.162047056, 0.162049778, 0.162063708, 0.162076014, 0.162090583, 0.162096833, 0.162110597, 0.162115194, 0.162127458, 0.162134986, 0.162141, 0.162151833, 0.162166639, 0.162180181, 0.162190389, 0.162197681, 0.162205597, 0.162214347], 'sourcesource_diff': [0, 1.2527000000012167e-05, 7.708999999994637e-06, 7.915999999996703e-06, 6.2369999999922765e-06, 5.0000000000050004e-06, 1.4375000000010907e-05, 1.1887999999987686e-05, 2.486999999995465e-06, 1.5208000000016542e-05, 1.0222000000004172e-05, 1.1305999999988714e-05, 1.40969999999907e-05, 5.0000000000050004e-06, 7.347000000018644e-06, 1.4527999999985886e-05, 1.336099999998952e-05, 3.111000000000086e-06, 5.431000000000186e-06, 1.4375000000010907e-05, 8.332999999999258e-06, 1.0402999999992169e-05, 2.500000000016378e-06, 1.1263999999983065e-05, 1.019400000001891e-05, 3.7499999999968114e-06, 2.4999999999886224e-06, 7.931000000016564e-06, 8.526999999980411e-06, 1.5417000000017556e-05, 1.1902999999979791e-05, 3.944000000005721e-06, 1.3973000000000457e-05, 2.7220000000105493e-06, 1.3929999999995335e-05, 1.2305999999989714e-05, 1.4569000000019816e-05, 6.249999999985434e-06, 1.3763999999999443e-05, 4.596999999995077e-06, 1.2264000000011821e-05, 7.5280000000066405e-06, 6.0139999999986316e-06, 1.083299999998788e-05, 1.4806000000006092e-05, 1.3542000000005272e-05, 1.0207999999983786e-05, 7.292000000019838e-06, 7.915999999996703e-06, 8.750000000001812e-06], 'diff': [0, 1.2527000000012167e-05, 7.708999999994637e-06, 7.915999999996703e-06, 6.2369999999922765e-06, 5.0000000000050004e-06, 1.4375000000010907e-05, 1.1887999999987686e-05, 2.486999999995465e-06, 1.5208000000016542e-05, 1.0222000000004172e-05, 1.1305999999988714e-05, 1.40969999999907e-05, 5.0000000000050004e-06, 7.347000000018644e-06, 1.4527999999985886e-05, 1.336099999998952e-05, 3.111000000000086e-06, 5.431000000000186e-06, 1.4375000000010907e-05, 8.332999999999258e-06, 1.0402999999992169e-05, 2.500000000016378e-06, 1.1263999999983065e-05, 1.019400000001891e-05, 3.7499999999968114e-06, 2.4999999999886224e-06, 7.931000000016564e-06, 8.526999999980411e-06, 1.5417000000017556e-05, 1.1902999999979791e-05, 3.944000000005721e-06, 1.3973000000000457e-05, 2.7220000000105493e-06, 1.3929999999995335e-05, 1.2305999999989714e-05, 1.4569000000019816e-05, 6.249999999985434e-06, 1.3763999999999443e-05, 4.596999999995077e-06, 1.2264000000011821e-05, 7.5280000000066405e-06, 6.0139999999986316e-06, 1.083299999998788e-05, 1.4806000000006092e-05, 1.3542000000005272e-05, 1.0207999999983786e-05, 7.292000000019838e-06, 7.915999999996703e-06, 8.750000000001812e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:45.196" endtime="20201112 09:42:45.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.186" endtime="20201112 09:42:45.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:45.212" level="INFO">${RESULT} = [{'time': 0.161766819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2527000000012167e-05, 'source_diff': 1.2527000000012167e-05}, {'time': 0.161782444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:45.205" endtime="20201112 09:42:45.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:45.230" level="INFO">${GPIO_OVERHEAD} = {'time': [0.161766819, 0.161782444, 0.161793681, 0.161819944, 0.161837639, 0.161859167, 0.161878264, 0.161900139, 0.161916611, 0.161936417, 0.161955153, 0.161968917, 0.161982861, 0.161993292, 0.162017...</msg>
<status status="PASS" starttime="20201112 09:42:45.214" endtime="20201112 09:42:45.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.242" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:45.238" endtime="20201112 09:42:45.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.247" level="INFO">VALUE: [1.2527000000012167e-05, 7.915999999996703e-06, 5.0000000000050004e-06, 1.1887999999987686e-05, 1.5208000000016542e-05, 1.1305999999988714e-05, 5.0000000000050004e-06, 1.4527999999985886e-05, 3.111000000000086e-06, 1.4375000000010907e-05, 1.0402999999992169e-05, 1.1263999999983065e-05, 3.7499999999968114e-06, 7.931000000016564e-06, 1.5417000000017556e-05, 3.944000000005721e-06, 2.7220000000105493e-06, 1.2305999999989714e-05, 6.249999999985434e-06, 4.596999999995077e-06, 7.5280000000066405e-06, 1.083299999998788e-05, 1.3542000000005272e-05, 7.292000000019838e-06, 8.750000000001812e-06]</msg>
<status status="PASS" starttime="20201112 09:42:45.244" endtime="20201112 09:42:45.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.232" endtime="20201112 09:42:45.249"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.256" endtime="20201112 09:42:45.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:45.264" endtime="20201112 09:42:45.286"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.260" endtime="20201112 09:42:45.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.251" endtime="20201112 09:42:45.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.753" endtime="20201112 09:42:45.290"></status>
</kw>
<msg timestamp="20201112 09:42:45.291" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.311" endtime="20201112 09:42:45.323"></status>
</kw>
<msg timestamp="20201112 09:42:45.325" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:45.307" endtime="20201112 09:42:45.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.331" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:45.327" endtime="20201112 09:42:45.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.333" endtime="20201112 09:42:45.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.300" endtime="20201112 09:42:45.338"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.295" endtime="20201112 09:42:45.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.356" endtime="20201112 09:42:45.676"></status>
</kw>
<msg timestamp="20201112 09:42:45.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037104153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037116028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:45.353" endtime="20201112 09:42:45.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037104153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037116028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:45.682" endtime="20201112 09:42:45.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.695" endtime="20201112 09:42:45.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.346" endtime="20201112 09:42:45.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.341" endtime="20201112 09:42:45.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.711" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:45.709" endtime="20201112 09:42:45.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.719" level="INFO">VALUE: [{'time': 0.037104153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037116028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1875000000001468e-05, 'source_diff': 1.1875000000001468e-05}, {'time': 0.037129792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.037132486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6939999999975317e-06, 'source_diff': 2.6939999999975317e-06}, {'time': 0.037145194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2708000000000164e-05, 'source_diff': 1.2708000000000164e-05}, {'time': 0.037150208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0139999999976315e-06, 'source_diff': 5.0139999999976315e-06}, {'time': 0.037152694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4860000000029303e-06, 'source_diff': 2.4860000000029303e-06}, {'time': 0.037160611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.917000000003116e-06, 'source_diff': 7.917000000003116e-06}, {'time': 0.037163944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3329999999942572e-06, 'source_diff': 3.3329999999942572e-06}, {'time': 0.037170611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.667000000001866e-06, 'source_diff': 6.667000000001866e-06}, {'time': 0.037185625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5014000000000693e-05, 'source_diff': 1.5014000000000693e-05}, {'time': 0.037190222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.037200014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.792000000001522e-06, 'source_diff': 9.792000000001522e-06}, {'time': 0.037212083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.20689999999965e-05, 'source_diff': 1.20689999999965e-05}, {'time': 0.037226042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3959000000000887e-05, 'source_diff': 1.3959000000000887e-05}, {'time': 0.037238764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2721999999999734e-05, 'source_diff': 1.2721999999999734e-05}, {'time': 0.037243542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.777999999996951e-06, 'source_diff': 4.777999999996951e-06}, {'time': 0.037255444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1902000000001134e-05, 'source_diff': 1.1902000000001134e-05}, {'time': 0.037262292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.84800000000374e-06, 'source_diff': 6.84800000000374e-06}, {'time': 0.037267514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.037277292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.777999999995013e-06, 'source_diff': 9.777999999995013e-06}, {'time': 0.037289792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2500000000005562e-05, 'source_diff': 1.2500000000005562e-05}, {'time': 0.037293194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.401999999999572e-06, 'source_diff': 3.401999999999572e-06}, {'time': 0.037306694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3499999999999623e-05, 'source_diff': 1.3499999999999623e-05}, {'time': 0.037309389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6949999999970053e-06, 'source_diff': 2.6949999999970053e-06}, {'time': 0.037324819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5430000000003774e-05, 'source_diff': 1.5430000000003774e-05}, {'time': 0.037336903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2083999999995543e-05, 'source_diff': 1.2083999999995543e-05}, {'time': 0.037339597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6940000000044706e-06, 'source_diff': 2.6940000000044706e-06}, {'time': 0.037343139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.541999999995271e-06, 'source_diff': 3.541999999995271e-06}, {'time': 0.037358347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5208000000002664e-05, 'source_diff': 1.5208000000002664e-05}, {'time': 0.0373615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.037367736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.037381056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3320000000004162e-05, 'source_diff': 1.3320000000004162e-05}, {'time': 0.037390639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.037392944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3049999999941173e-06, 'source_diff': 2.3049999999941173e-06}, {'time': 0.037405639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2695000000000067e-05, 'source_diff': 1.2695000000000067e-05}, {'time': 0.037409597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.958000000005291e-06, 'source_diff': 3.958000000005291e-06}, {'time': 0.037421069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.037436278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5209000000002137e-05, 'source_diff': 1.5209000000002137e-05}, {'time': 0.037450847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4568999999999e-05, 'source_diff': 1.4568999999999e-05}, {'time': 0.037461694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0846999999994389e-05, 'source_diff': 1.0846999999994389e-05}, {'time': 0.037469208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.037472528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3200000000011e-06, 'source_diff': 3.3200000000011e-06}, {'time': 0.037483806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1278000000003452e-05, 'source_diff': 1.1278000000003452e-05}, {'time': 0.037494403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0597000000001078e-05, 'source_diff': 1.0597000000001078e-05}, {'time': 0.037506486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2082999999996069e-05, 'source_diff': 1.2082999999996069e-05}, {'time': 0.037510042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.55600000000178e-06, 'source_diff': 3.55600000000178e-06}, {'time': 0.037524611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4568999999999e-05, 'source_diff': 1.4568999999999e-05}, {'time': 0.037528361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7500000000037503e-06, 'source_diff': 3.7500000000037503e-06}, {'time': 0.037542736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}]</msg>
<status status="PASS" starttime="20201112 09:42:45.713" endtime="20201112 09:42:45.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.703" endtime="20201112 09:42:45.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:45.754" level="INFO">${debug-compressed} = {'time': [0.037104153, 0.037116028, 0.037129792, 0.037132486, 0.037145194, 0.037150208, 0.037152694, 0.037160611, 0.037163944, 0.037170611, 0.037185625, 0.037190222, 0.037200014, 0.037212083, 0.037226...</msg>
<status status="PASS" starttime="20201112 09:42:45.725" endtime="20201112 09:42:45.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.763" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:45.761" endtime="20201112 09:42:45.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.771" level="INFO">VALUE: {'time': [0.037104153, 0.037116028, 0.037129792, 0.037132486, 0.037145194, 0.037150208, 0.037152694, 0.037160611, 0.037163944, 0.037170611, 0.037185625, 0.037190222, 0.037200014, 0.037212083, 0.037226042, 0.037238764, 0.037243542, 0.037255444, 0.037262292, 0.037267514, 0.037277292, 0.037289792, 0.037293194, 0.037306694, 0.037309389, 0.037324819, 0.037336903, 0.037339597, 0.037343139, 0.037358347, 0.0373615, 0.037367736, 0.037381056, 0.037390639, 0.037392944, 0.037405639, 0.037409597, 0.037421069, 0.037436278, 0.037450847, 0.037461694, 0.037469208, 0.037472528, 0.037483806, 0.037494403, 0.037506486, 0.037510042, 0.037524611, 0.037528361, 0.037542736], 'sourcesource_diff': [0, 1.1875000000001468e-05, 1.3763999999999443e-05, 2.6939999999975317e-06, 1.2708000000000164e-05, 5.0139999999976315e-06, 2.4860000000029303e-06, 7.917000000003116e-06, 3.3329999999942572e-06, 6.667000000001866e-06, 1.5014000000000693e-05, 4.597000000002016e-06, 9.792000000001522e-06, 1.20689999999965e-05, 1.3959000000000887e-05, 1.2721999999999734e-05, 4.777999999996951e-06, 1.1902000000001134e-05, 6.84800000000374e-06, 5.221999999999172e-06, 9.777999999995013e-06, 1.2500000000005562e-05, 3.401999999999572e-06, 1.3499999999999623e-05, 2.6949999999970053e-06, 1.5430000000003774e-05, 1.2083999999995543e-05, 2.6940000000044706e-06, 3.541999999995271e-06, 1.5208000000002664e-05, 3.1529999999987957e-06, 6.235999999999742e-06, 1.3320000000004162e-05, 9.583000000000508e-06, 2.3049999999941173e-06, 1.2695000000000067e-05, 3.958000000005291e-06, 1.1471999999998483e-05, 1.5209000000002137e-05, 1.4568999999999e-05, 1.0846999999994389e-05, 7.514000000000132e-06, 3.3200000000011e-06, 1.1278000000003452e-05, 1.0597000000001078e-05, 1.2082999999996069e-05, 3.55600000000178e-06, 1.4568999999999e-05, 3.7500000000037503e-06, 1.4374999999997029e-05], 'diff': [0, 1.1875000000001468e-05, 1.3763999999999443e-05, 2.6939999999975317e-06, 1.2708000000000164e-05, 5.0139999999976315e-06, 2.4860000000029303e-06, 7.917000000003116e-06, 3.3329999999942572e-06, 6.667000000001866e-06, 1.5014000000000693e-05, 4.597000000002016e-06, 9.792000000001522e-06, 1.20689999999965e-05, 1.3959000000000887e-05, 1.2721999999999734e-05, 4.777999999996951e-06, 1.1902000000001134e-05, 6.84800000000374e-06, 5.221999999999172e-06, 9.777999999995013e-06, 1.2500000000005562e-05, 3.401999999999572e-06, 1.3499999999999623e-05, 2.6949999999970053e-06, 1.5430000000003774e-05, 1.2083999999995543e-05, 2.6940000000044706e-06, 3.541999999995271e-06, 1.5208000000002664e-05, 3.1529999999987957e-06, 6.235999999999742e-06, 1.3320000000004162e-05, 9.583000000000508e-06, 2.3049999999941173e-06, 1.2695000000000067e-05, 3.958000000005291e-06, 1.1471999999998483e-05, 1.5209000000002137e-05, 1.4568999999999e-05, 1.0846999999994389e-05, 7.514000000000132e-06, 3.3200000000011e-06, 1.1278000000003452e-05, 1.0597000000001078e-05, 1.2082999999996069e-05, 3.55600000000178e-06, 1.4568999999999e-05, 3.7500000000037503e-06, 1.4374999999997029e-05], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:45.765" endtime="20201112 09:42:45.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.756" endtime="20201112 09:42:45.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:45.783" level="INFO">${RESULT} = [{'time': 0.037116028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1875000000001468e-05, 'source_diff': 1.1875000000001468e-05}, {'time': 0.037132486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:45.776" endtime="20201112 09:42:45.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:45.801" level="INFO">${GPIO_OVERHEAD} = {'time': [0.037116028, 0.037132486, 0.037150208, 0.037160611, 0.037170611, 0.037190222, 0.037212083, 0.037238764, 0.037255444, 0.037267514, 0.037289792, 0.037306694, 0.037324819, 0.037339597, 0.037358...</msg>
<status status="PASS" starttime="20201112 09:42:45.785" endtime="20201112 09:42:45.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.811" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:45.809" endtime="20201112 09:42:45.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.816" level="INFO">VALUE: [1.1875000000001468e-05, 2.6939999999975317e-06, 5.0139999999976315e-06, 7.917000000003116e-06, 6.667000000001866e-06, 4.597000000002016e-06, 1.20689999999965e-05, 1.2721999999999734e-05, 1.1902000000001134e-05, 5.221999999999172e-06, 1.2500000000005562e-05, 1.3499999999999623e-05, 1.5430000000003774e-05, 2.6940000000044706e-06, 1.5208000000002664e-05, 6.235999999999742e-06, 9.583000000000508e-06, 1.2695000000000067e-05, 1.1471999999998483e-05, 1.4568999999999e-05, 7.514000000000132e-06, 1.1278000000003452e-05, 1.2082999999996069e-05, 1.4568999999999e-05, 1.4374999999997029e-05]</msg>
<status status="PASS" starttime="20201112 09:42:45.813" endtime="20201112 09:42:45.817"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.803" endtime="20201112 09:42:45.819"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.825" endtime="20201112 09:42:45.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:45.834" endtime="20201112 09:42:45.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.829" endtime="20201112 09:42:45.857"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.821" endtime="20201112 09:42:45.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.292" endtime="20201112 09:42:45.859"></status>
</kw>
<msg timestamp="20201112 09:42:45.860" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.880" endtime="20201112 09:42:45.893"></status>
</kw>
<msg timestamp="20201112 09:42:45.894" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:45.876" endtime="20201112 09:42:45.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.900" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:45.896" endtime="20201112 09:42:45.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.902" endtime="20201112 09:42:45.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.869" endtime="20201112 09:42:45.908"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.865" endtime="20201112 09:42:45.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.926" endtime="20201112 09:42:46.248"></status>
</kw>
<msg timestamp="20201112 09:42:46.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036612806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036624056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:45.922" endtime="20201112 09:42:46.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036612806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036624056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:46.254" endtime="20201112 09:42:46.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.267" endtime="20201112 09:42:46.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.915" endtime="20201112 09:42:46.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.911" endtime="20201112 09:42:46.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.284" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:46.281" endtime="20201112 09:42:46.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.292" level="INFO">VALUE: [{'time': 0.036612806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036624056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1250000000004312e-05, 'source_diff': 1.1250000000004312e-05}, {'time': 0.036632028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.971999999994983e-06, 'source_diff': 7.971999999994983e-06}, {'time': 0.036640722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.694000000003532e-06, 'source_diff': 8.694000000003532e-06}, {'time': 0.036650931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0208999999997137e-05, 'source_diff': 1.0208999999997137e-05}, {'time': 0.036663653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2721999999999734e-05, 'source_diff': 1.2721999999999734e-05}, {'time': 0.036669694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.041000000005237e-06, 'source_diff': 6.041000000005237e-06}, {'time': 0.036682208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.036684486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.27800000000139e-06, 'source_diff': 2.27800000000139e-06}, {'time': 0.036699708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5221999999995295e-05, 'source_diff': 1.5221999999995295e-05}, {'time': 0.036704486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.77800000000389e-06, 'source_diff': 4.77800000000389e-06}, {'time': 0.036712403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916999999996177e-06, 'source_diff': 7.916999999996177e-06}, {'time': 0.036726153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.0367345, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.347000000005766e-06, 'source_diff': 8.347000000005766e-06}, {'time': 0.036739708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.036752194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2485999999999053e-05, 'source_diff': 1.2485999999999053e-05}, {'time': 0.036757194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.036768444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999997373e-05, 'source_diff': 1.1249999999997373e-05}, {'time': 0.036772208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7640000000033202e-06, 'source_diff': 3.7640000000033202e-06}, {'time': 0.036783653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1444999999998817e-05, 'source_diff': 1.1444999999998817e-05}, {'time': 0.036795583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1930000000000274e-05, 'source_diff': 1.1930000000000274e-05}, {'time': 0.036806375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0792000000002522e-05, 'source_diff': 1.0792000000002522e-05}, {'time': 0.036815333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.957999999996413e-06, 'source_diff': 8.957999999996413e-06}, {'time': 0.036827222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1889000000001038e-05, 'source_diff': 1.1889000000001038e-05}, {'time': 0.036840542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3319999999997223e-05, 'source_diff': 1.3319999999997223e-05}, {'time': 0.036855125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4583000000005508e-05, 'source_diff': 1.4583000000005508e-05}, {'time': 0.0368645, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.036878875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}, {'time': 0.036886014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.139000000003226e-06, 'source_diff': 7.139000000003226e-06}, {'time': 0.036896167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0152999999998857e-05, 'source_diff': 1.0152999999998857e-05}, {'time': 0.036903042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999996467e-06, 'source_diff': 6.874999999996467e-06}, {'time': 0.036917208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4166000000002954e-05, 'source_diff': 1.4166000000002954e-05}, {'time': 0.036927014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.036929931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.036932444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5130000000025965e-06, 'source_diff': 2.5130000000025965e-06}, {'time': 0.036938472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.036948472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0000000000003062e-05, 'source_diff': 1.0000000000003062e-05}, {'time': 0.036963694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5221999999995295e-05, 'source_diff': 1.5221999999995295e-05}, {'time': 0.036975986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2292000000004022e-05, 'source_diff': 1.2292000000004022e-05}, {'time': 0.036984125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.138999999997287e-06, 'source_diff': 8.138999999997287e-06}, {'time': 0.036994097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.971999999996983e-06, 'source_diff': 9.971999999996983e-06}, {'time': 0.037004528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0431000000005186e-05, 'source_diff': 1.0431000000005186e-05}, {'time': 0.037012889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.037026806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3917000000002178e-05, 'source_diff': 1.3917000000002178e-05}, {'time': 0.037035583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.77699999999454e-06, 'source_diff': 8.77699999999454e-06}, {'time': 0.037040569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9860000000054305e-06, 'source_diff': 4.9860000000054305e-06}, {'time': 0.037046597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.037049958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.037064944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4986000000001554e-05, 'source_diff': 1.4986000000001554e-05}, {'time': 0.037072875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.930999999995747e-06, 'source_diff': 7.930999999995747e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:46.286" endtime="20201112 09:42:46.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.275" endtime="20201112 09:42:46.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:46.329" level="INFO">${debug-compressed} = {'time': [0.036612806, 0.036624056, 0.036632028, 0.036640722, 0.036650931, 0.036663653, 0.036669694, 0.036682208, 0.036684486, 0.036699708, 0.036704486, 0.036712403, 0.036726153, 0.0367345, 0.03673970...</msg>
<status status="PASS" starttime="20201112 09:42:46.297" endtime="20201112 09:42:46.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.338" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:46.336" endtime="20201112 09:42:46.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.345" level="INFO">VALUE: {'time': [0.036612806, 0.036624056, 0.036632028, 0.036640722, 0.036650931, 0.036663653, 0.036669694, 0.036682208, 0.036684486, 0.036699708, 0.036704486, 0.036712403, 0.036726153, 0.0367345, 0.036739708, 0.036752194, 0.036757194, 0.036768444, 0.036772208, 0.036783653, 0.036795583, 0.036806375, 0.036815333, 0.036827222, 0.036840542, 0.036855125, 0.0368645, 0.036878875, 0.036886014, 0.036896167, 0.036903042, 0.036917208, 0.036927014, 0.036929931, 0.036932444, 0.036938472, 0.036948472, 0.036963694, 0.036975986, 0.036984125, 0.036994097, 0.037004528, 0.037012889, 0.037026806, 0.037035583, 0.037040569, 0.037046597, 0.037049958, 0.037064944, 0.037072875], 'sourcesource_diff': [0, 1.1250000000004312e-05, 7.971999999994983e-06, 8.694000000003532e-06, 1.0208999999997137e-05, 1.2721999999999734e-05, 6.041000000005237e-06, 1.2513999999998193e-05, 2.27800000000139e-06, 1.5221999999995295e-05, 4.77800000000389e-06, 7.916999999996177e-06, 1.3749999999999873e-05, 8.347000000005766e-06, 5.207999999999602e-06, 1.2485999999999053e-05, 4.9999999999980616e-06, 1.1249999999997373e-05, 3.7640000000033202e-06, 1.1444999999998817e-05, 1.1930000000000274e-05, 1.0792000000002522e-05, 8.957999999996413e-06, 1.1889000000001038e-05, 1.3319999999997223e-05, 1.4583000000005508e-05, 9.374999999998967e-06, 1.4374999999997029e-05, 7.139000000003226e-06, 1.0152999999998857e-05, 6.874999999996467e-06, 1.4166000000002954e-05, 9.806000000001092e-06, 2.9169999999981155e-06, 2.5130000000025965e-06, 6.0279999999982015e-06, 1.0000000000003062e-05, 1.5221999999995295e-05, 1.2292000000004022e-05, 8.138999999997287e-06, 9.971999999996983e-06, 1.0431000000005186e-05, 8.360999999998397e-06, 1.3917000000002178e-05, 8.77699999999454e-06, 4.9860000000054305e-06, 6.0279999999982015e-06, 3.361000000000336e-06, 1.4986000000001554e-05, 7.930999999995747e-06], 'diff': [0, 1.1250000000004312e-05, 7.971999999994983e-06, 8.694000000003532e-06, 1.0208999999997137e-05, 1.2721999999999734e-05, 6.041000000005237e-06, 1.2513999999998193e-05, 2.27800000000139e-06, 1.5221999999995295e-05, 4.77800000000389e-06, 7.916999999996177e-06, 1.3749999999999873e-05, 8.347000000005766e-06, 5.207999999999602e-06, 1.2485999999999053e-05, 4.9999999999980616e-06, 1.1249999999997373e-05, 3.7640000000033202e-06, 1.1444999999998817e-05, 1.1930000000000274e-05, 1.0792000000002522e-05, 8.957999999996413e-06, 1.1889000000001038e-05, 1.3319999999997223e-05, 1.4583000000005508e-05, 9.374999999998967e-06, 1.4374999999997029e-05, 7.139000000003226e-06, 1.0152999999998857e-05, 6.874999999996467e-06, 1.4166000000002954e-05, 9.806000000001092e-06, 2.9169999999981155e-06, 2.5130000000025965e-06, 6.0279999999982015e-06, 1.0000000000003062e-05, 1.5221999999995295e-05, 1.2292000000004022e-05, 8.138999999997287e-06, 9.971999999996983e-06, 1.0431000000005186e-05, 8.360999999998397e-06, 1.3917000000002178e-05, 8.77699999999454e-06, 4.9860000000054305e-06, 6.0279999999982015e-06, 3.361000000000336e-06, 1.4986000000001554e-05, 7.930999999995747e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:46.340" endtime="20201112 09:42:46.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.331" endtime="20201112 09:42:46.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:46.356" level="INFO">${RESULT} = [{'time': 0.036624056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1250000000004312e-05, 'source_diff': 1.1250000000004312e-05}, {'time': 0.036640722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:46.349" endtime="20201112 09:42:46.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:46.375" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036624056, 0.036640722, 0.036663653, 0.036682208, 0.036699708, 0.036712403, 0.0367345, 0.036752194, 0.036768444, 0.036783653, 0.036806375, 0.036827222, 0.036855125, 0.036878875, 0.03689616...</msg>
<status status="PASS" starttime="20201112 09:42:46.359" endtime="20201112 09:42:46.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.385" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:46.382" endtime="20201112 09:42:46.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.390" level="INFO">VALUE: [1.1250000000004312e-05, 8.694000000003532e-06, 1.2721999999999734e-05, 1.2513999999998193e-05, 1.5221999999995295e-05, 7.916999999996177e-06, 8.347000000005766e-06, 1.2485999999999053e-05, 1.1249999999997373e-05, 1.1444999999998817e-05, 1.0792000000002522e-05, 1.1889000000001038e-05, 1.4583000000005508e-05, 1.4374999999997029e-05, 1.0152999999998857e-05, 1.4166000000002954e-05, 2.9169999999981155e-06, 6.0279999999982015e-06, 1.5221999999995295e-05, 8.138999999997287e-06, 1.0431000000005186e-05, 1.3917000000002178e-05, 4.9860000000054305e-06, 3.361000000000336e-06, 7.930999999995747e-06]</msg>
<status status="PASS" starttime="20201112 09:42:46.387" endtime="20201112 09:42:46.391"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.376" endtime="20201112 09:42:46.393"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.399" endtime="20201112 09:42:46.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:46.407" endtime="20201112 09:42:46.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.403" endtime="20201112 09:42:46.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.394" endtime="20201112 09:42:46.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.861" endtime="20201112 09:42:46.433"></status>
</kw>
<msg timestamp="20201112 09:42:46.433" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.453" endtime="20201112 09:42:46.466"></status>
</kw>
<msg timestamp="20201112 09:42:46.467" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:46.450" endtime="20201112 09:42:46.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.473" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:46.469" endtime="20201112 09:42:46.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.476" endtime="20201112 09:42:46.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.443" endtime="20201112 09:42:46.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.438" endtime="20201112 09:42:46.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.499" endtime="20201112 09:42:46.817"></status>
</kw>
<msg timestamp="20201112 09:42:46.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036606264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036615222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:46.496" endtime="20201112 09:42:46.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036606264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036615222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:46.824" endtime="20201112 09:42:46.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.836" endtime="20201112 09:42:46.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.488" endtime="20201112 09:42:46.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.484" endtime="20201112 09:42:46.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.854" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:46.852" endtime="20201112 09:42:46.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.862" level="INFO">VALUE: [{'time': 0.036606264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036615222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.958000000003352e-06, 'source_diff': 8.958000000003352e-06}, {'time': 0.036620458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.036635458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000001124e-05, 'source_diff': 1.5000000000001124e-05}, {'time': 0.036641486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.036654403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2917000000001178e-05, 'source_diff': 1.2917000000001178e-05}, {'time': 0.036668792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4388999999996599e-05, 'source_diff': 1.4388999999996599e-05}, {'time': 0.036677528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.03669275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5222000000002234e-05, 'source_diff': 1.5222000000002234e-05}, {'time': 0.036697958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.036707125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.166999999997427e-06, 'source_diff': 9.166999999997427e-06}, {'time': 0.036710861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7359999999972415e-06, 'source_diff': 3.7359999999972415e-06}, {'time': 0.036726292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5431000000003248e-05, 'source_diff': 1.5431000000003248e-05}, {'time': 0.036736528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0235999999996803e-05, 'source_diff': 1.0235999999996803e-05}, {'time': 0.036740444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.915999999999642e-06, 'source_diff': 3.915999999999642e-06}, {'time': 0.036751708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1264000000003882e-05, 'source_diff': 1.1264000000003882e-05}, {'time': 0.036755889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.036768222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2333000000003258e-05, 'source_diff': 1.2333000000003258e-05}, {'time': 0.036783375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5152999999996919e-05, 'source_diff': 1.5152999999996919e-05}, {'time': 0.036794, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.036798583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.583000000002446e-06, 'source_diff': 4.583000000002446e-06}, {'time': 0.036812972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4388999999996599e-05, 'source_diff': 1.4388999999996599e-05}, {'time': 0.036824056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1084000000001482e-05, 'source_diff': 1.1084000000001482e-05}, {'time': 0.036838167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4110999999997209e-05, 'source_diff': 1.4110999999997209e-05}, {'time': 0.0368505, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2333000000003258e-05, 'source_diff': 1.2333000000003258e-05}, {'time': 0.036858792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.036862347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5549999999953674e-06, 'source_diff': 3.5549999999953674e-06}, {'time': 0.036865056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.709000000003514e-06, 'source_diff': 2.709000000003514e-06}, {'time': 0.036872764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.708000000002102e-06, 'source_diff': 7.708000000002102e-06}, {'time': 0.036879417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.652999999995357e-06, 'source_diff': 6.652999999995357e-06}, {'time': 0.036885681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.036900472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.479100000000011e-05, 'source_diff': 1.479100000000011e-05}, {'time': 0.036911319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.036913806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.487000000002404e-06, 'source_diff': 2.487000000002404e-06}, {'time': 0.036918389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.583000000002446e-06, 'source_diff': 4.583000000002446e-06}, {'time': 0.036923181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.791999999996521e-06, 'source_diff': 4.791999999996521e-06}, {'time': 0.036936514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.333299999999732e-05, 'source_diff': 1.333299999999732e-05}, {'time': 0.036950681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4167000000002428e-05, 'source_diff': 1.4167000000002428e-05}, {'time': 0.036959444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.763000000001908e-06, 'source_diff': 8.763000000001908e-06}, {'time': 0.036963403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.958999999997825e-06, 'source_diff': 3.958999999997825e-06}, {'time': 0.036974861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.036984861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0000000000003062e-05, 'source_diff': 1.0000000000003062e-05}, {'time': 0.036997764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2903000000001608e-05, 'source_diff': 1.2903000000001608e-05}, {'time': 0.037002139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.037010278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.138999999997287e-06, 'source_diff': 8.138999999997287e-06}, {'time': 0.037023403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3125000000002718e-05, 'source_diff': 1.3125000000002718e-05}, {'time': 0.037027597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.037040278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2681000000000497e-05, 'source_diff': 1.2681000000000497e-05}, {'time': 0.037050069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.79099999999511e-06, 'source_diff': 9.79099999999511e-06}, {'time': 0.037052986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9170000000050544e-06, 'source_diff': 2.9170000000050544e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:46.857" endtime="20201112 09:42:46.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.846" endtime="20201112 09:42:46.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:46.897" level="INFO">${debug-compressed} = {'time': [0.036606264, 0.036615222, 0.036620458, 0.036635458, 0.036641486, 0.036654403, 0.036668792, 0.036677528, 0.03669275, 0.036697958, 0.036707125, 0.036710861, 0.036726292, 0.036736528, 0.0367404...</msg>
<status status="PASS" starttime="20201112 09:42:46.868" endtime="20201112 09:42:46.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.906" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:46.904" endtime="20201112 09:42:46.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.913" level="INFO">VALUE: {'time': [0.036606264, 0.036615222, 0.036620458, 0.036635458, 0.036641486, 0.036654403, 0.036668792, 0.036677528, 0.03669275, 0.036697958, 0.036707125, 0.036710861, 0.036726292, 0.036736528, 0.036740444, 0.036751708, 0.036755889, 0.036768222, 0.036783375, 0.036794, 0.036798583, 0.036812972, 0.036824056, 0.036838167, 0.0368505, 0.036858792, 0.036862347, 0.036865056, 0.036872764, 0.036879417, 0.036885681, 0.036900472, 0.036911319, 0.036913806, 0.036918389, 0.036923181, 0.036936514, 0.036950681, 0.036959444, 0.036963403, 0.036974861, 0.036984861, 0.036997764, 0.037002139, 0.037010278, 0.037023403, 0.037027597, 0.037040278, 0.037050069, 0.037052986], 'sourcesource_diff': [0, 8.958000000003352e-06, 5.235999999998742e-06, 1.5000000000001124e-05, 6.0279999999982015e-06, 1.2917000000001178e-05, 1.4388999999996599e-05, 8.736000000002242e-06, 1.5222000000002234e-05, 5.207999999999602e-06, 9.166999999997427e-06, 3.7359999999972415e-06, 1.5431000000003248e-05, 1.0235999999996803e-05, 3.915999999999642e-06, 1.1264000000003882e-05, 4.1809999999989356e-06, 1.2333000000003258e-05, 1.5152999999996919e-05, 1.0625000000000218e-05, 4.583000000002446e-06, 1.4388999999996599e-05, 1.1084000000001482e-05, 1.4110999999997209e-05, 1.2333000000003258e-05, 8.292000000000022e-06, 3.5549999999953674e-06, 2.709000000003514e-06, 7.708000000002102e-06, 6.652999999995357e-06, 6.2639999999988816e-06, 1.479100000000011e-05, 1.0847000000001328e-05, 2.487000000002404e-06, 4.583000000002446e-06, 4.791999999996521e-06, 1.333299999999732e-05, 1.4167000000002428e-05, 8.763000000001908e-06, 3.958999999997825e-06, 1.1457999999998913e-05, 1.0000000000003062e-05, 1.2903000000001608e-05, 4.375000000000906e-06, 8.138999999997287e-06, 1.3125000000002718e-05, 4.193999999999032e-06, 1.2681000000000497e-05, 9.79099999999511e-06, 2.9170000000050544e-06], 'diff': [0, 8.958000000003352e-06, 5.235999999998742e-06, 1.5000000000001124e-05, 6.0279999999982015e-06, 1.2917000000001178e-05, 1.4388999999996599e-05, 8.736000000002242e-06, 1.5222000000002234e-05, 5.207999999999602e-06, 9.166999999997427e-06, 3.7359999999972415e-06, 1.5431000000003248e-05, 1.0235999999996803e-05, 3.915999999999642e-06, 1.1264000000003882e-05, 4.1809999999989356e-06, 1.2333000000003258e-05, 1.5152999999996919e-05, 1.0625000000000218e-05, 4.583000000002446e-06, 1.4388999999996599e-05, 1.1084000000001482e-05, 1.4110999999997209e-05, 1.2333000000003258e-05, 8.292000000000022e-06, 3.5549999999953674e-06, 2.709000000003514e-06, 7.708000000002102e-06, 6.652999999995357e-06, 6.2639999999988816e-06, 1.479100000000011e-05, 1.0847000000001328e-05, 2.487000000002404e-06, 4.583000000002446e-06, 4.791999999996521e-06, 1.333299999999732e-05, 1.4167000000002428e-05, 8.763000000001908e-06, 3.958999999997825e-06, 1.1457999999998913e-05, 1.0000000000003062e-05, 1.2903000000001608e-05, 4.375000000000906e-06, 8.138999999997287e-06, 1.3125000000002718e-05, 4.193999999999032e-06, 1.2681000000000497e-05, 9.79099999999511e-06, 2.9170000000050544e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:46.908" endtime="20201112 09:42:46.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.899" endtime="20201112 09:42:46.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:46.925" level="INFO">${RESULT} = [{'time': 0.036615222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.958000000003352e-06, 'source_diff': 8.958000000003352e-06}, {'time': 0.036635458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:46.917" endtime="20201112 09:42:46.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:46.943" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036615222, 0.036635458, 0.036654403, 0.036677528, 0.036697958, 0.036710861, 0.036736528, 0.036751708, 0.036768222, 0.036794, 0.036812972, 0.036838167, 0.036858792, 0.036865056, 0.036879417...</msg>
<status status="PASS" starttime="20201112 09:42:46.927" endtime="20201112 09:42:46.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.953" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:46.951" endtime="20201112 09:42:46.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.958" level="INFO">VALUE: [8.958000000003352e-06, 1.5000000000001124e-05, 1.2917000000001178e-05, 8.736000000002242e-06, 5.207999999999602e-06, 3.7359999999972415e-06, 1.0235999999996803e-05, 1.1264000000003882e-05, 1.2333000000003258e-05, 1.0625000000000218e-05, 1.4388999999996599e-05, 1.4110999999997209e-05, 8.292000000000022e-06, 2.709000000003514e-06, 6.652999999995357e-06, 1.479100000000011e-05, 2.487000000002404e-06, 4.791999999996521e-06, 1.4167000000002428e-05, 3.958999999997825e-06, 1.0000000000003062e-05, 4.375000000000906e-06, 1.3125000000002718e-05, 1.2681000000000497e-05, 2.9170000000050544e-06]</msg>
<status status="PASS" starttime="20201112 09:42:46.955" endtime="20201112 09:42:46.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.945" endtime="20201112 09:42:46.966"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.973" endtime="20201112 09:42:46.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:46.981" endtime="20201112 09:42:47.003"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.977" endtime="20201112 09:42:47.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.968" endtime="20201112 09:42:47.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.435" endtime="20201112 09:42:47.007"></status>
</kw>
<msg timestamp="20201112 09:42:47.008" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.027" endtime="20201112 09:42:47.040"></status>
</kw>
<msg timestamp="20201112 09:42:47.041" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.024" endtime="20201112 09:42:47.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.047" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.043" endtime="20201112 09:42:47.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.050" endtime="20201112 09:42:47.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.017" endtime="20201112 09:42:47.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.012" endtime="20201112 09:42:47.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.075" endtime="20201112 09:42:47.385"></status>
</kw>
<msg timestamp="20201112 09:42:47.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036554486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036560111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:47.070" endtime="20201112 09:42:47.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036554486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036560111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:47.392" endtime="20201112 09:42:47.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.405" endtime="20201112 09:42:47.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.063" endtime="20201112 09:42:47.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.058" endtime="20201112 09:42:47.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.421" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:47.419" endtime="20201112 09:42:47.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.429" level="INFO">VALUE: [{'time': 0.036554486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036560111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.036568028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.917000000003116e-06, 'source_diff': 7.917000000003116e-06}, {'time': 0.036579069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.104099999999636e-05, 'source_diff': 1.104099999999636e-05}, {'time': 0.036587222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000003796e-06, 'source_diff': 8.153000000003796e-06}, {'time': 0.036601583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4360999999997459e-05, 'source_diff': 1.4360999999997459e-05}, {'time': 0.036612208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.036616792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.58400000000192e-06, 'source_diff': 4.58400000000192e-06}, {'time': 0.036619292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4999999999955613e-06, 'source_diff': 2.4999999999955613e-06}, {'time': 0.036632, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2708000000000164e-05, 'source_diff': 1.2708000000000164e-05}, {'time': 0.036635542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.036648056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.036659292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1236000000004742e-05, 'source_diff': 1.1236000000004742e-05}, {'time': 0.036671583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.229099999999761e-05, 'source_diff': 1.229099999999761e-05}, {'time': 0.036678667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.083999999997481e-06, 'source_diff': 7.083999999997481e-06}, {'time': 0.036685542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.875000000003406e-06, 'source_diff': 6.875000000003406e-06}, {'time': 0.036691792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.036702, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0207999999997663e-05, 'source_diff': 1.0207999999997663e-05}, {'time': 0.036711389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.036724722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3333000000004258e-05, 'source_diff': 1.3333000000004258e-05}, {'time': 0.036729306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.58400000000192e-06, 'source_diff': 4.58400000000192e-06}, {'time': 0.036740778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.036746014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.036752861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.036758681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8200000000036e-06, 'source_diff': 5.8200000000036e-06}, {'time': 0.036762014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.333000000001196e-06, 'source_diff': 3.333000000001196e-06}, {'time': 0.036774722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2708000000000164e-05, 'source_diff': 1.2708000000000164e-05}, {'time': 0.036783472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.749999999994873e-06, 'source_diff': 8.749999999994873e-06}, {'time': 0.036791806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.33400000000567e-06, 'source_diff': 8.33400000000567e-06}, {'time': 0.036804528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2721999999999734e-05, 'source_diff': 1.2721999999999734e-05}, {'time': 0.036809722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.036823278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3555999999997903e-05, 'source_diff': 1.3555999999997903e-05}, {'time': 0.036832431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.152999999997857e-06, 'source_diff': 9.152999999997857e-06}, {'time': 0.036838069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.638000000002252e-06, 'source_diff': 5.638000000002252e-06}, {'time': 0.0368485, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0430999999998247e-05, 'source_diff': 1.0430999999998247e-05}, {'time': 0.036862028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3527999999998763e-05, 'source_diff': 1.3527999999998763e-05}, {'time': 0.036877236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5208000000002664e-05, 'source_diff': 1.5208000000002664e-05}, {'time': 0.0368835, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.036893917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0416999999998677e-05, 'source_diff': 1.0416999999998677e-05}, {'time': 0.03689725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.333000000001196e-06, 'source_diff': 3.333000000001196e-06}, {'time': 0.036901611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.036906472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.036914333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.860999999997897e-06, 'source_diff': 7.860999999997897e-06}, {'time': 0.036927861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3527999999998763e-05, 'source_diff': 1.3527999999998763e-05}, {'time': 0.036934542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.681000000001436e-06, 'source_diff': 6.681000000001436e-06}, {'time': 0.036948278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3736000000000304e-05, 'source_diff': 1.3736000000000304e-05}, {'time': 0.036959111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0833000000001758e-05, 'source_diff': 1.0833000000001758e-05}, {'time': 0.036962444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3329999999942572e-06, 'source_diff': 3.3329999999942572e-06}, {'time': 0.036971625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000003936e-06, 'source_diff': 9.181000000003936e-06}, {'time': 0.036981639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0013999999995693e-05, 'source_diff': 1.0013999999995693e-05}]</msg>
<status status="PASS" starttime="20201112 09:42:47.423" endtime="20201112 09:42:47.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.413" endtime="20201112 09:42:47.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:47.464" level="INFO">${debug-compressed} = {'time': [0.036554486, 0.036560111, 0.036568028, 0.036579069, 0.036587222, 0.036601583, 0.036612208, 0.036616792, 0.036619292, 0.036632, 0.036635542, 0.036648056, 0.036659292, 0.036671583, 0.036678667...</msg>
<status status="PASS" starttime="20201112 09:42:47.434" endtime="20201112 09:42:47.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.473" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:47.471" endtime="20201112 09:42:47.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.480" level="INFO">VALUE: {'time': [0.036554486, 0.036560111, 0.036568028, 0.036579069, 0.036587222, 0.036601583, 0.036612208, 0.036616792, 0.036619292, 0.036632, 0.036635542, 0.036648056, 0.036659292, 0.036671583, 0.036678667, 0.036685542, 0.036691792, 0.036702, 0.036711389, 0.036724722, 0.036729306, 0.036740778, 0.036746014, 0.036752861, 0.036758681, 0.036762014, 0.036774722, 0.036783472, 0.036791806, 0.036804528, 0.036809722, 0.036823278, 0.036832431, 0.036838069, 0.0368485, 0.036862028, 0.036877236, 0.0368835, 0.036893917, 0.03689725, 0.036901611, 0.036906472, 0.036914333, 0.036927861, 0.036934542, 0.036948278, 0.036959111, 0.036962444, 0.036971625, 0.036981639], 'sourcesource_diff': [0, 5.625000000002156e-06, 7.917000000003116e-06, 1.104099999999636e-05, 8.153000000003796e-06, 1.4360999999997459e-05, 1.0625000000000218e-05, 4.58400000000192e-06, 2.4999999999955613e-06, 1.2708000000000164e-05, 3.54200000000221e-06, 1.2513999999998193e-05, 1.1236000000004742e-05, 1.229099999999761e-05, 7.083999999997481e-06, 6.875000000003406e-06, 6.249999999999312e-06, 1.0207999999997663e-05, 9.388999999998537e-06, 1.3333000000004258e-05, 4.58400000000192e-06, 1.1471999999998483e-05, 5.235999999998742e-06, 6.8469999999973274e-06, 5.8200000000036e-06, 3.333000000001196e-06, 1.2708000000000164e-05, 8.749999999994873e-06, 8.33400000000567e-06, 1.2721999999999734e-05, 5.194000000000032e-06, 1.3555999999997903e-05, 9.152999999997857e-06, 5.638000000002252e-06, 1.0430999999998247e-05, 1.3527999999998763e-05, 1.5208000000002664e-05, 6.2639999999988816e-06, 1.0416999999998677e-05, 3.333000000001196e-06, 4.361000000001336e-06, 4.861000000001836e-06, 7.860999999997897e-06, 1.3527999999998763e-05, 6.681000000001436e-06, 1.3736000000000304e-05, 1.0833000000001758e-05, 3.3329999999942572e-06, 9.181000000003936e-06, 1.0013999999995693e-05], 'diff': [0, 5.625000000002156e-06, 7.917000000003116e-06, 1.104099999999636e-05, 8.153000000003796e-06, 1.4360999999997459e-05, 1.0625000000000218e-05, 4.58400000000192e-06, 2.4999999999955613e-06, 1.2708000000000164e-05, 3.54200000000221e-06, 1.2513999999998193e-05, 1.1236000000004742e-05, 1.229099999999761e-05, 7.083999999997481e-06, 6.875000000003406e-06, 6.249999999999312e-06, 1.0207999999997663e-05, 9.388999999998537e-06, 1.3333000000004258e-05, 4.58400000000192e-06, 1.1471999999998483e-05, 5.235999999998742e-06, 6.8469999999973274e-06, 5.8200000000036e-06, 3.333000000001196e-06, 1.2708000000000164e-05, 8.749999999994873e-06, 8.33400000000567e-06, 1.2721999999999734e-05, 5.194000000000032e-06, 1.3555999999997903e-05, 9.152999999997857e-06, 5.638000000002252e-06, 1.0430999999998247e-05, 1.3527999999998763e-05, 1.5208000000002664e-05, 6.2639999999988816e-06, 1.0416999999998677e-05, 3.333000000001196e-06, 4.361000000001336e-06, 4.861000000001836e-06, 7.860999999997897e-06, 1.3527999999998763e-05, 6.681000000001436e-06, 1.3736000000000304e-05, 1.0833000000001758e-05, 3.3329999999942572e-06, 9.181000000003936e-06, 1.0013999999995693e-05], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:47.475" endtime="20201112 09:42:47.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.465" endtime="20201112 09:42:47.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:47.492" level="INFO">${RESULT} = [{'time': 0.036560111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.036579069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:47.484" endtime="20201112 09:42:47.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:47.510" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036560111, 0.036579069, 0.036601583, 0.036616792, 0.036632, 0.036648056, 0.036671583, 0.036685542, 0.036702, 0.036724722, 0.036740778, 0.036752861, 0.036762014, 0.036783472, 0.036804528, 0...</msg>
<status status="PASS" starttime="20201112 09:42:47.494" endtime="20201112 09:42:47.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.520" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:47.518" endtime="20201112 09:42:47.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.525" level="INFO">VALUE: [5.625000000002156e-06, 1.104099999999636e-05, 1.4360999999997459e-05, 4.58400000000192e-06, 1.2708000000000164e-05, 1.2513999999998193e-05, 1.229099999999761e-05, 6.875000000003406e-06, 1.0207999999997663e-05, 1.3333000000004258e-05, 1.1471999999998483e-05, 6.8469999999973274e-06, 3.333000000001196e-06, 8.749999999994873e-06, 1.2721999999999734e-05, 1.3555999999997903e-05, 5.638000000002252e-06, 1.3527999999998763e-05, 6.2639999999988816e-06, 3.333000000001196e-06, 4.861000000001836e-06, 1.3527999999998763e-05, 1.3736000000000304e-05, 3.3329999999942572e-06, 1.0013999999995693e-05]</msg>
<status status="PASS" starttime="20201112 09:42:47.523" endtime="20201112 09:42:47.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.512" endtime="20201112 09:42:47.528"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.535" endtime="20201112 09:42:47.537"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:47.543" endtime="20201112 09:42:47.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.539" endtime="20201112 09:42:47.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.530" endtime="20201112 09:42:47.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.009" endtime="20201112 09:42:47.569"></status>
</kw>
<msg timestamp="20201112 09:42:47.569" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.589" endtime="20201112 09:42:47.602"></status>
</kw>
<msg timestamp="20201112 09:42:47.603" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.585" endtime="20201112 09:42:47.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.609" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.605" endtime="20201112 09:42:47.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.612" endtime="20201112 09:42:47.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.578" endtime="20201112 09:42:47.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.574" endtime="20201112 09:42:47.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.636" endtime="20201112 09:42:47.951"></status>
</kw>
<msg timestamp="20201112 09:42:47.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036435, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036438917, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:42:47.633" endtime="20201112 09:42:47.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036435, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036438917, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:42:47.958" endtime="20201112 09:42:47.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.971" endtime="20201112 09:42:47.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.624" endtime="20201112 09:42:47.977"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.620" endtime="20201112 09:42:47.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.988" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:47.986" endtime="20201112 09:42:47.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.996" level="INFO">VALUE: [{'time': 0.036435, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036438917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.036444958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.040999999998298e-06, 'source_diff': 6.040999999998298e-06}, {'time': 0.036455, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0042000000001772e-05, 'source_diff': 1.0042000000001772e-05}, {'time': 0.036458764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7639999999963814e-06, 'source_diff': 3.7639999999963814e-06}, {'time': 0.036469125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.0364735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.036476417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.036480597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.036489333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.036500167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0834000000001232e-05, 'source_diff': 1.0834000000001232e-05}, {'time': 0.036503292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.036511625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.332999999999258e-06, 'source_diff': 8.332999999999258e-06}, {'time': 0.036523111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1485999999998053e-05, 'source_diff': 1.1485999999998053e-05}, {'time': 0.036534569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1458000000005852e-05, 'source_diff': 1.1458000000005852e-05}, {'time': 0.036544556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.986999999996027e-06, 'source_diff': 9.986999999996027e-06}, {'time': 0.036552264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.708000000002102e-06, 'source_diff': 7.708000000002102e-06}, {'time': 0.036564764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2499999999998623e-05, 'source_diff': 1.2499999999998623e-05}, {'time': 0.036578722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3958000000001414e-05, 'source_diff': 1.3958000000001414e-05}, {'time': 0.036584764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.041999999997771e-06, 'source_diff': 6.041999999997771e-06}, {'time': 0.036590819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.054999999997868e-06, 'source_diff': 6.054999999997868e-06}, {'time': 0.036604361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3542000000005272e-05, 'source_diff': 1.3542000000005272e-05}, {'time': 0.036618722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4360999999997459e-05, 'source_diff': 1.4360999999997459e-05}, {'time': 0.036633153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4431000000002248e-05, 'source_diff': 1.4431000000002248e-05}, {'time': 0.036648306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5152999999996919e-05, 'source_diff': 1.5152999999996919e-05}, {'time': 0.036656236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.930000000003212e-06, 'source_diff': 7.930000000003212e-06}, {'time': 0.036660208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.03666875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.036681028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2277999999997513e-05, 'source_diff': 1.2277999999997513e-05}, {'time': 0.03668375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7220000000036104e-06, 'source_diff': 2.7220000000036104e-06}, {'time': 0.036695833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2082999999996069e-05, 'source_diff': 1.2082999999996069e-05}, {'time': 0.036703958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.125000000004656e-06, 'source_diff': 8.125000000004656e-06}, {'time': 0.036716028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2069999999995973e-05, 'source_diff': 1.2069999999995973e-05}, {'time': 0.036730819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.479100000000011e-05, 'source_diff': 1.479100000000011e-05}, {'time': 0.036736444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.036741653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2089999999990755e-06, 'source_diff': 5.2089999999990755e-06}, {'time': 0.036749153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.036763583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4430000000002774e-05, 'source_diff': 1.4430000000002774e-05}, {'time': 0.036773111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.527999999994763e-06, 'source_diff': 9.527999999994763e-06}, {'time': 0.036779153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.04200000000471e-06, 'source_diff': 6.04200000000471e-06}, {'time': 0.036793139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3986000000000554e-05, 'source_diff': 1.3986000000000554e-05}, {'time': 0.036795847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7079999999971016e-06, 'source_diff': 2.7079999999971016e-06}, {'time': 0.036802292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.445000000000756e-06, 'source_diff': 6.445000000000756e-06}, {'time': 0.036811056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.036813958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.901999999999072e-06, 'source_diff': 2.901999999999072e-06}, {'time': 0.036817708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7499999999968114e-06, 'source_diff': 3.7499999999968114e-06}, {'time': 0.036827139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.431000000004186e-06, 'source_diff': 9.431000000004186e-06}, {'time': 0.036837319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0179999999998524e-05, 'source_diff': 1.0179999999998524e-05}, {'time': 0.036840833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5140000000030702e-06, 'source_diff': 3.5140000000030702e-06}, {'time': 0.036846306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.472999999998895e-06, 'source_diff': 5.472999999998895e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:47.990" endtime="20201112 09:42:47.998"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.980" endtime="20201112 09:42:48.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:48.034" level="INFO">${debug-compressed} = {'time': [0.036435, 0.036438917, 0.036444958, 0.036455, 0.036458764, 0.036469125, 0.0364735, 0.036476417, 0.036480597, 0.036489333, 0.036500167, 0.036503292, 0.036511625, 0.036523111, 0.036534569, 0.0...</msg>
<status status="PASS" starttime="20201112 09:42:48.002" endtime="20201112 09:42:48.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.044" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:48.042" endtime="20201112 09:42:48.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.052" level="INFO">VALUE: {'time': [0.036435, 0.036438917, 0.036444958, 0.036455, 0.036458764, 0.036469125, 0.0364735, 0.036476417, 0.036480597, 0.036489333, 0.036500167, 0.036503292, 0.036511625, 0.036523111, 0.036534569, 0.036544556, 0.036552264, 0.036564764, 0.036578722, 0.036584764, 0.036590819, 0.036604361, 0.036618722, 0.036633153, 0.036648306, 0.036656236, 0.036660208, 0.03666875, 0.036681028, 0.03668375, 0.036695833, 0.036703958, 0.036716028, 0.036730819, 0.036736444, 0.036741653, 0.036749153, 0.036763583, 0.036773111, 0.036779153, 0.036793139, 0.036795847, 0.036802292, 0.036811056, 0.036813958, 0.036817708, 0.036827139, 0.036837319, 0.036840833, 0.036846306], 'sourcesource_diff': [0, 3.916999999999116e-06, 6.040999999998298e-06, 1.0042000000001772e-05, 3.7639999999963814e-06, 1.0361000000000398e-05, 4.375000000000906e-06, 2.9169999999981155e-06, 4.179999999999462e-06, 8.736000000002242e-06, 1.0834000000001232e-05, 3.124999999999656e-06, 8.332999999999258e-06, 1.1485999999998053e-05, 1.1458000000005852e-05, 9.986999999996027e-06, 7.708000000002102e-06, 1.2499999999998623e-05, 1.3958000000001414e-05, 6.041999999997771e-06, 6.054999999997868e-06, 1.3542000000005272e-05, 1.4360999999997459e-05, 1.4431000000002248e-05, 1.5152999999996919e-05, 7.930000000003212e-06, 3.971999999997922e-06, 8.542000000000272e-06, 1.2277999999997513e-05, 2.7220000000036104e-06, 1.2082999999996069e-05, 8.125000000004656e-06, 1.2069999999995973e-05, 1.479100000000011e-05, 5.625000000002156e-06, 5.2089999999990755e-06, 7.500000000000562e-06, 1.4430000000002774e-05, 9.527999999994763e-06, 6.04200000000471e-06, 1.3986000000000554e-05, 2.7079999999971016e-06, 6.445000000000756e-06, 8.764000000001382e-06, 2.901999999999072e-06, 3.7499999999968114e-06, 9.431000000004186e-06, 1.0179999999998524e-05, 3.5140000000030702e-06, 5.472999999998895e-06], 'diff': [0, 3.916999999999116e-06, 6.040999999998298e-06, 1.0042000000001772e-05, 3.7639999999963814e-06, 1.0361000000000398e-05, 4.375000000000906e-06, 2.9169999999981155e-06, 4.179999999999462e-06, 8.736000000002242e-06, 1.0834000000001232e-05, 3.124999999999656e-06, 8.332999999999258e-06, 1.1485999999998053e-05, 1.1458000000005852e-05, 9.986999999996027e-06, 7.708000000002102e-06, 1.2499999999998623e-05, 1.3958000000001414e-05, 6.041999999997771e-06, 6.054999999997868e-06, 1.3542000000005272e-05, 1.4360999999997459e-05, 1.4431000000002248e-05, 1.5152999999996919e-05, 7.930000000003212e-06, 3.971999999997922e-06, 8.542000000000272e-06, 1.2277999999997513e-05, 2.7220000000036104e-06, 1.2082999999996069e-05, 8.125000000004656e-06, 1.2069999999995973e-05, 1.479100000000011e-05, 5.625000000002156e-06, 5.2089999999990755e-06, 7.500000000000562e-06, 1.4430000000002774e-05, 9.527999999994763e-06, 6.04200000000471e-06, 1.3986000000000554e-05, 2.7079999999971016e-06, 6.445000000000756e-06, 8.764000000001382e-06, 2.901999999999072e-06, 3.7499999999968114e-06, 9.431000000004186e-06, 1.0179999999998524e-05, 3.5140000000030702e-06, 5.472999999998895e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:48.047" endtime="20201112 09:42:48.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.036" endtime="20201112 09:42:48.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:48.064" level="INFO">${RESULT} = [{'time': 0.036438917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.036455, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:42:48.057" endtime="20201112 09:42:48.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:48.076" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036438917, 0.036455, 0.036469125, 0.036476417, 0.036489333, 0.036503292, 0.036523111, 0.036544556, 0.036564764, 0.036584764, 0.036604361, 0.036633153, 0.036656236, 0.03666875, 0.03668375, ...</msg>
<status status="PASS" starttime="20201112 09:42:48.066" endtime="20201112 09:42:48.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.082" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:48.080" endtime="20201112 09:42:48.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.084" level="INFO">VALUE: [3.916999999999116e-06, 1.0042000000001772e-05, 1.0361000000000398e-05, 2.9169999999981155e-06, 8.736000000002242e-06, 3.124999999999656e-06, 1.1485999999998053e-05, 9.986999999996027e-06, 1.2499999999998623e-05, 6.041999999997771e-06, 1.3542000000005272e-05, 1.4431000000002248e-05, 7.930000000003212e-06, 8.542000000000272e-06, 2.7220000000036104e-06, 8.125000000004656e-06, 1.479100000000011e-05, 5.2089999999990755e-06, 1.4430000000002774e-05, 6.04200000000471e-06, 2.7079999999971016e-06, 8.764000000001382e-06, 3.7499999999968114e-06, 1.0179999999998524e-05, 5.472999999998895e-06]</msg>
<status status="PASS" starttime="20201112 09:42:48.083" endtime="20201112 09:42:48.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.077" endtime="20201112 09:42:48.085"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.088" endtime="20201112 09:42:48.090"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:48.093" endtime="20201112 09:42:48.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.090" endtime="20201112 09:42:48.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.086" endtime="20201112 09:42:48.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.570" endtime="20201112 09:42:48.117"></status>
</kw>
<msg timestamp="20201112 09:42:48.118" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.138" endtime="20201112 09:42:48.152"></status>
</kw>
<msg timestamp="20201112 09:42:48.153" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:48.135" endtime="20201112 09:42:48.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.159" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:48.155" endtime="20201112 09:42:48.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.162" endtime="20201112 09:42:48.165"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.127" endtime="20201112 09:42:48.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.122" endtime="20201112 09:42:48.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.189" endtime="20201112 09:42:48.492"></status>
</kw>
<msg timestamp="20201112 09:42:48.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037309319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037324722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:48.185" endtime="20201112 09:42:48.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037309319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037324722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:48.499" endtime="20201112 09:42:48.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.512" endtime="20201112 09:42:48.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.175" endtime="20201112 09:42:48.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.170" endtime="20201112 09:42:48.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.529" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:48.526" endtime="20201112 09:42:48.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.537" level="INFO">VALUE: [{'time': 0.037309319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037324722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.540299999999717e-05, 'source_diff': 1.540299999999717e-05}, {'time': 0.037332625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.903000000003546e-06, 'source_diff': 7.903000000003546e-06}, {'time': 0.037338875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.037350542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1666999999999927e-05, 'source_diff': 1.1666999999999927e-05}, {'time': 0.037353278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7359999999962414e-06, 'source_diff': 2.7359999999962414e-06}, {'time': 0.037365139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1861000000001898e-05, 'source_diff': 1.1861000000001898e-05}, {'time': 0.037374722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.037386181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1458999999998387e-05, 'source_diff': 1.1458999999998387e-05}, {'time': 0.037395972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.791000000002048e-06, 'source_diff': 9.791000000002048e-06}, {'time': 0.037402222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.037405014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.79200000000146e-06, 'source_diff': 2.79200000000146e-06}, {'time': 0.037409931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.037417028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0969999999975775e-06, 'source_diff': 7.0969999999975775e-06}, {'time': 0.037425764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.037435569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.805000000001618e-06, 'source_diff': 9.805000000001618e-06}, {'time': 0.037439097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5279999999957012e-06, 'source_diff': 3.5279999999957012e-06}, {'time': 0.037451181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2084000000002482e-05, 'source_diff': 1.2084000000002482e-05}, {'time': 0.037463486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.230499999999718e-05, 'source_diff': 1.230499999999718e-05}, {'time': 0.037468917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.037484111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5194000000003094e-05, 'source_diff': 1.5194000000003094e-05}, {'time': 0.037498319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4208000000001664e-05, 'source_diff': 1.4208000000001664e-05}, {'time': 0.037508486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0166999999998427e-05, 'source_diff': 1.0166999999998427e-05}, {'time': 0.037521819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.333299999999732e-05, 'source_diff': 1.333299999999732e-05}, {'time': 0.037531611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.792000000001522e-06, 'source_diff': 9.792000000001522e-06}, {'time': 0.037542444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0833000000001758e-05, 'source_diff': 1.0833000000001758e-05}, {'time': 0.037556819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}, {'time': 0.037565375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.037574972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.037579111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.037587667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.037596819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.151999999998384e-06, 'source_diff': 9.151999999998384e-06}, {'time': 0.037609111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2292000000004022e-05, 'source_diff': 1.2292000000004022e-05}, {'time': 0.037611819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7079999999971016e-06, 'source_diff': 2.7079999999971016e-06}, {'time': 0.037614125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.30600000000053e-06, 'source_diff': 2.30600000000053e-06}, {'time': 0.037623778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.037630792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0140000000065705e-06, 'source_diff': 7.0140000000065705e-06}, {'time': 0.037638306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.037646, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.693999999995593e-06, 'source_diff': 7.693999999995593e-06}, {'time': 0.037657681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1680999999999497e-05, 'source_diff': 1.1680999999999497e-05}, {'time': 0.037666417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.037677875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.037686625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.037695583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.957999999996413e-06, 'source_diff': 8.957999999996413e-06}, {'time': 0.037705375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.792000000001522e-06, 'source_diff': 9.792000000001522e-06}, {'time': 0.037708083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7080000000040405e-06, 'source_diff': 2.7080000000040405e-06}, {'time': 0.037717042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.958999999995887e-06, 'source_diff': 8.958999999995887e-06}, {'time': 0.037731833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.479100000000011e-05, 'source_diff': 1.479100000000011e-05}, {'time': 0.037741236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.03775375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2514000000005132e-05, 'source_diff': 1.2514000000005132e-05}]</msg>
<status status="PASS" starttime="20201112 09:42:48.531" endtime="20201112 09:42:48.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.520" endtime="20201112 09:42:48.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:48.572" level="INFO">${debug-compressed} = {'time': [0.037309319, 0.037324722, 0.037332625, 0.037338875, 0.037350542, 0.037353278, 0.037365139, 0.037374722, 0.037386181, 0.037395972, 0.037402222, 0.037405014, 0.037409931, 0.037417028, 0.037425...</msg>
<status status="PASS" starttime="20201112 09:42:48.542" endtime="20201112 09:42:48.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.582" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:48.579" endtime="20201112 09:42:48.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.589" level="INFO">VALUE: {'time': [0.037309319, 0.037324722, 0.037332625, 0.037338875, 0.037350542, 0.037353278, 0.037365139, 0.037374722, 0.037386181, 0.037395972, 0.037402222, 0.037405014, 0.037409931, 0.037417028, 0.037425764, 0.037435569, 0.037439097, 0.037451181, 0.037463486, 0.037468917, 0.037484111, 0.037498319, 0.037508486, 0.037521819, 0.037531611, 0.037542444, 0.037556819, 0.037565375, 0.037574972, 0.037579111, 0.037587667, 0.037596819, 0.037609111, 0.037611819, 0.037614125, 0.037623778, 0.037630792, 0.037638306, 0.037646, 0.037657681, 0.037666417, 0.037677875, 0.037686625, 0.037695583, 0.037705375, 0.037708083, 0.037717042, 0.037731833, 0.037741236, 0.03775375], 'sourcesource_diff': [0, 1.540299999999717e-05, 7.903000000003546e-06, 6.249999999999312e-06, 1.1666999999999927e-05, 2.7359999999962414e-06, 1.1861000000001898e-05, 9.583000000000508e-06, 1.1458999999998387e-05, 9.791000000002048e-06, 6.249999999999312e-06, 2.79200000000146e-06, 4.917000000000116e-06, 7.0969999999975775e-06, 8.736000000002242e-06, 9.805000000001618e-06, 3.5279999999957012e-06, 1.2084000000002482e-05, 1.230499999999718e-05, 5.431000000000186e-06, 1.5194000000003094e-05, 1.4208000000001664e-05, 1.0166999999998427e-05, 1.333299999999732e-05, 9.792000000001522e-06, 1.0833000000001758e-05, 1.4374999999997029e-05, 8.555999999999842e-06, 9.597000000000078e-06, 4.139000000000226e-06, 8.555999999999842e-06, 9.151999999998384e-06, 1.2292000000004022e-05, 2.7079999999971016e-06, 2.30600000000053e-06, 9.652999999998357e-06, 7.0140000000065705e-06, 7.514000000000132e-06, 7.693999999995593e-06, 1.1680999999999497e-05, 8.736000000002242e-06, 1.1457999999998913e-05, 8.750000000001812e-06, 8.957999999996413e-06, 9.792000000001522e-06, 2.7080000000040405e-06, 8.958999999995887e-06, 1.479100000000011e-05, 9.402999999998107e-06, 1.2514000000005132e-05], 'diff': [0, 1.540299999999717e-05, 7.903000000003546e-06, 6.249999999999312e-06, 1.1666999999999927e-05, 2.7359999999962414e-06, 1.1861000000001898e-05, 9.583000000000508e-06, 1.1458999999998387e-05, 9.791000000002048e-06, 6.249999999999312e-06, 2.79200000000146e-06, 4.917000000000116e-06, 7.0969999999975775e-06, 8.736000000002242e-06, 9.805000000001618e-06, 3.5279999999957012e-06, 1.2084000000002482e-05, 1.230499999999718e-05, 5.431000000000186e-06, 1.5194000000003094e-05, 1.4208000000001664e-05, 1.0166999999998427e-05, 1.333299999999732e-05, 9.792000000001522e-06, 1.0833000000001758e-05, 1.4374999999997029e-05, 8.555999999999842e-06, 9.597000000000078e-06, 4.139000000000226e-06, 8.555999999999842e-06, 9.151999999998384e-06, 1.2292000000004022e-05, 2.7079999999971016e-06, 2.30600000000053e-06, 9.652999999998357e-06, 7.0140000000065705e-06, 7.514000000000132e-06, 7.693999999995593e-06, 1.1680999999999497e-05, 8.736000000002242e-06, 1.1457999999998913e-05, 8.750000000001812e-06, 8.957999999996413e-06, 9.792000000001522e-06, 2.7080000000040405e-06, 8.958999999995887e-06, 1.479100000000011e-05, 9.402999999998107e-06, 1.2514000000005132e-05], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:48.584" endtime="20201112 09:42:48.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.574" endtime="20201112 09:42:48.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:48.601" level="INFO">${RESULT} = [{'time': 0.037324722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.540299999999717e-05, 'source_diff': 1.540299999999717e-05}, {'time': 0.037338875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:48.593" endtime="20201112 09:42:48.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:48.619" level="INFO">${GPIO_OVERHEAD} = {'time': [0.037324722, 0.037338875, 0.037353278, 0.037374722, 0.037395972, 0.037405014, 0.037417028, 0.037435569, 0.037451181, 0.037468917, 0.037498319, 0.037521819, 0.037542444, 0.037565375, 0.037579...</msg>
<status status="PASS" starttime="20201112 09:42:48.603" endtime="20201112 09:42:48.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.630" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:48.627" endtime="20201112 09:42:48.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.635" level="INFO">VALUE: [1.540299999999717e-05, 6.249999999999312e-06, 2.7359999999962414e-06, 9.583000000000508e-06, 9.791000000002048e-06, 2.79200000000146e-06, 7.0969999999975775e-06, 9.805000000001618e-06, 1.2084000000002482e-05, 5.431000000000186e-06, 1.4208000000001664e-05, 1.333299999999732e-05, 1.0833000000001758e-05, 8.555999999999842e-06, 4.139000000000226e-06, 9.151999999998384e-06, 2.7079999999971016e-06, 9.652999999998357e-06, 7.514000000000132e-06, 1.1680999999999497e-05, 1.1457999999998913e-05, 8.957999999996413e-06, 2.7080000000040405e-06, 1.479100000000011e-05, 1.2514000000005132e-05]</msg>
<status status="PASS" starttime="20201112 09:42:48.632" endtime="20201112 09:42:48.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.621" endtime="20201112 09:42:48.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.644" endtime="20201112 09:42:48.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:48.653" endtime="20201112 09:42:48.674"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.648" endtime="20201112 09:42:48.676"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.640" endtime="20201112 09:42:48.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.119" endtime="20201112 09:42:48.678"></status>
</kw>
<msg timestamp="20201112 09:42:48.679" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.699" endtime="20201112 09:42:48.712"></status>
</kw>
<msg timestamp="20201112 09:42:48.713" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:48.696" endtime="20201112 09:42:48.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.720" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:48.716" endtime="20201112 09:42:48.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.722" endtime="20201112 09:42:48.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.689" endtime="20201112 09:42:48.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.684" endtime="20201112 09:42:48.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.748" endtime="20201112 09:42:49.062"></status>
</kw>
<msg timestamp="20201112 09:42:49.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037150889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037158222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:48.745" endtime="20201112 09:42:49.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037150889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037158222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:49.069" endtime="20201112 09:42:49.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.082" endtime="20201112 09:42:49.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.736" endtime="20201112 09:42:49.087"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.731" endtime="20201112 09:42:49.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.099" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:49.096" endtime="20201112 09:42:49.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.107" level="INFO">VALUE: [{'time': 0.037150889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037158222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.332999999998258e-06, 'source_diff': 7.332999999998258e-06}, {'time': 0.037166736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.037182153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5417000000003678e-05, 'source_diff': 1.5417000000003678e-05}, {'time': 0.037189236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0829999999980076e-06, 'source_diff': 7.0829999999980076e-06}, {'time': 0.037196542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.037199444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.901999999999072e-06, 'source_diff': 2.901999999999072e-06}, {'time': 0.037209861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0416999999998677e-05, 'source_diff': 1.0416999999998677e-05}, {'time': 0.037224875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5014000000000693e-05, 'source_diff': 1.5014000000000693e-05}, {'time': 0.037236319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1443999999999344e-05, 'source_diff': 1.1443999999999344e-05}, {'time': 0.037244875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.037256792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1917000000000177e-05, 'source_diff': 1.1917000000000177e-05}, {'time': 0.037263194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.402000000002572e-06, 'source_diff': 6.402000000002572e-06}, {'time': 0.037278403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5209000000002137e-05, 'source_diff': 1.5209000000002137e-05}, {'time': 0.037283208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8049999999966175e-06, 'source_diff': 4.8049999999966175e-06}, {'time': 0.03728675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.037290708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.037295292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.58400000000192e-06, 'source_diff': 4.58400000000192e-06}, {'time': 0.037300708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.416000000001142e-06, 'source_diff': 5.416000000001142e-06}, {'time': 0.037306958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.037314875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.916999999996177e-06, 'source_diff': 7.916999999996177e-06}, {'time': 0.037329264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4389000000003538e-05, 'source_diff': 1.4389000000003538e-05}, {'time': 0.037332167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.037339875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.708000000002102e-06, 'source_diff': 7.708000000002102e-06}, {'time': 0.037353833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3958000000001414e-05, 'source_diff': 1.3958000000001414e-05}, {'time': 0.037365292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1458999999998387e-05, 'source_diff': 1.1458999999998387e-05}, {'time': 0.037377583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.229099999999761e-05, 'source_diff': 1.229099999999761e-05}, {'time': 0.037384056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.4729999999998955e-06, 'source_diff': 6.4729999999998955e-06}, {'time': 0.037386972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.915999999998642e-06, 'source_diff': 2.915999999998642e-06}, {'time': 0.037401764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4791999999999583e-05, 'source_diff': 1.4791999999999583e-05}, {'time': 0.037416139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4375000000003968e-05, 'source_diff': 1.4375000000003968e-05}, {'time': 0.037426139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.999999999996123e-06, 'source_diff': 9.999999999996123e-06}, {'time': 0.037431986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.847000000003266e-06, 'source_diff': 5.847000000003266e-06}, {'time': 0.037436347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.037440514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.037450514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.999999999996123e-06, 'source_diff': 9.999999999996123e-06}, {'time': 0.037464542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4028000000006202e-05, 'source_diff': 1.4028000000006202e-05}, {'time': 0.037468444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.901999999993133e-06, 'source_diff': 3.901999999993133e-06}, {'time': 0.037480931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2487000000005466e-05, 'source_diff': 1.2487000000005466e-05}, {'time': 0.037495306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}, {'time': 0.037508431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3125000000002718e-05, 'source_diff': 1.3125000000002718e-05}, {'time': 0.037518431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.999999999996123e-06, 'source_diff': 9.999999999996123e-06}, {'time': 0.037530097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1666000000000454e-05, 'source_diff': 1.1666000000000454e-05}, {'time': 0.037535306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2089999999990755e-06, 'source_diff': 5.2089999999990755e-06}, {'time': 0.037544333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.027000000001728e-06, 'source_diff': 9.027000000001728e-06}, {'time': 0.037559069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4736000000001304e-05, 'source_diff': 1.4736000000001304e-05}, {'time': 0.037566569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.037577403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0834000000001232e-05, 'source_diff': 1.0834000000001232e-05}, {'time': 0.037580528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.037595139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.461099999999771e-05, 'source_diff': 1.461099999999771e-05}]</msg>
<status status="PASS" starttime="20201112 09:42:49.101" endtime="20201112 09:42:49.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.090" endtime="20201112 09:42:49.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:49.143" level="INFO">${debug-compressed} = {'time': [0.037150889, 0.037158222, 0.037166736, 0.037182153, 0.037189236, 0.037196542, 0.037199444, 0.037209861, 0.037224875, 0.037236319, 0.037244875, 0.037256792, 0.037263194, 0.037278403, 0.037283...</msg>
<status status="PASS" starttime="20201112 09:42:49.113" endtime="20201112 09:42:49.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.152" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:49.150" endtime="20201112 09:42:49.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.159" level="INFO">VALUE: {'time': [0.037150889, 0.037158222, 0.037166736, 0.037182153, 0.037189236, 0.037196542, 0.037199444, 0.037209861, 0.037224875, 0.037236319, 0.037244875, 0.037256792, 0.037263194, 0.037278403, 0.037283208, 0.03728675, 0.037290708, 0.037295292, 0.037300708, 0.037306958, 0.037314875, 0.037329264, 0.037332167, 0.037339875, 0.037353833, 0.037365292, 0.037377583, 0.037384056, 0.037386972, 0.037401764, 0.037416139, 0.037426139, 0.037431986, 0.037436347, 0.037440514, 0.037450514, 0.037464542, 0.037468444, 0.037480931, 0.037495306, 0.037508431, 0.037518431, 0.037530097, 0.037535306, 0.037544333, 0.037559069, 0.037566569, 0.037577403, 0.037580528, 0.037595139], 'sourcesource_diff': [0, 7.332999999998258e-06, 8.514000000001132e-06, 1.5417000000003678e-05, 7.0829999999980076e-06, 7.305999999998591e-06, 2.901999999999072e-06, 1.0416999999998677e-05, 1.5014000000000693e-05, 1.1443999999999344e-05, 8.555999999999842e-06, 1.1917000000000177e-05, 6.402000000002572e-06, 1.5209000000002137e-05, 4.8049999999966175e-06, 3.54200000000221e-06, 3.957999999998352e-06, 4.58400000000192e-06, 5.416000000001142e-06, 6.249999999999312e-06, 7.916999999996177e-06, 1.4389000000003538e-05, 2.9029999999985456e-06, 7.708000000002102e-06, 1.3958000000001414e-05, 1.1458999999998387e-05, 1.229099999999761e-05, 6.4729999999998955e-06, 2.915999999998642e-06, 1.4791999999999583e-05, 1.4375000000003968e-05, 9.999999999996123e-06, 5.847000000003266e-06, 4.361000000001336e-06, 4.166999999999366e-06, 9.999999999996123e-06, 1.4028000000006202e-05, 3.901999999993133e-06, 1.2487000000005466e-05, 1.4374999999997029e-05, 1.3125000000002718e-05, 9.999999999996123e-06, 1.1666000000000454e-05, 5.2089999999990755e-06, 9.027000000001728e-06, 1.4736000000001304e-05, 7.500000000000562e-06, 1.0834000000001232e-05, 3.124999999999656e-06, 1.461099999999771e-05], 'diff': [0, 7.332999999998258e-06, 8.514000000001132e-06, 1.5417000000003678e-05, 7.0829999999980076e-06, 7.305999999998591e-06, 2.901999999999072e-06, 1.0416999999998677e-05, 1.5014000000000693e-05, 1.1443999999999344e-05, 8.555999999999842e-06, 1.1917000000000177e-05, 6.402000000002572e-06, 1.5209000000002137e-05, 4.8049999999966175e-06, 3.54200000000221e-06, 3.957999999998352e-06, 4.58400000000192e-06, 5.416000000001142e-06, 6.249999999999312e-06, 7.916999999996177e-06, 1.4389000000003538e-05, 2.9029999999985456e-06, 7.708000000002102e-06, 1.3958000000001414e-05, 1.1458999999998387e-05, 1.229099999999761e-05, 6.4729999999998955e-06, 2.915999999998642e-06, 1.4791999999999583e-05, 1.4375000000003968e-05, 9.999999999996123e-06, 5.847000000003266e-06, 4.361000000001336e-06, 4.166999999999366e-06, 9.999999999996123e-06, 1.4028000000006202e-05, 3.901999999993133e-06, 1.2487000000005466e-05, 1.4374999999997029e-05, 1.3125000000002718e-05, 9.999999999996123e-06, 1.1666000000000454e-05, 5.2089999999990755e-06, 9.027000000001728e-06, 1.4736000000001304e-05, 7.500000000000562e-06, 1.0834000000001232e-05, 3.124999999999656e-06, 1.461099999999771e-05], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:49.154" endtime="20201112 09:42:49.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.144" endtime="20201112 09:42:49.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:49.171" level="INFO">${RESULT} = [{'time': 0.037158222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.332999999998258e-06, 'source_diff': 7.332999999998258e-06}, {'time': 0.037182153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:49.164" endtime="20201112 09:42:49.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:49.190" level="INFO">${GPIO_OVERHEAD} = {'time': [0.037158222, 0.037182153, 0.037196542, 0.037209861, 0.037236319, 0.037256792, 0.037278403, 0.03728675, 0.037295292, 0.037306958, 0.037329264, 0.037339875, 0.037365292, 0.037384056, 0.0374017...</msg>
<status status="PASS" starttime="20201112 09:42:49.173" endtime="20201112 09:42:49.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.200" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:49.198" endtime="20201112 09:42:49.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.205" level="INFO">VALUE: [7.332999999998258e-06, 1.5417000000003678e-05, 7.305999999998591e-06, 1.0416999999998677e-05, 1.1443999999999344e-05, 1.1917000000000177e-05, 1.5209000000002137e-05, 3.54200000000221e-06, 4.58400000000192e-06, 6.249999999999312e-06, 1.4389000000003538e-05, 7.708000000002102e-06, 1.1458999999998387e-05, 6.4729999999998955e-06, 1.4791999999999583e-05, 9.999999999996123e-06, 4.361000000001336e-06, 9.999999999996123e-06, 3.901999999993133e-06, 1.4374999999997029e-05, 9.999999999996123e-06, 5.2089999999990755e-06, 1.4736000000001304e-05, 1.0834000000001232e-05, 1.461099999999771e-05]</msg>
<status status="PASS" starttime="20201112 09:42:49.202" endtime="20201112 09:42:49.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.192" endtime="20201112 09:42:49.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.215" endtime="20201112 09:42:49.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:49.225" endtime="20201112 09:42:49.246"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.220" endtime="20201112 09:42:49.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.211" endtime="20201112 09:42:49.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.680" endtime="20201112 09:42:49.251"></status>
</kw>
<msg timestamp="20201112 09:42:49.251" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.271" endtime="20201112 09:42:49.286"></status>
</kw>
<msg timestamp="20201112 09:42:49.287" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.268" endtime="20201112 09:42:49.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.294" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.290" endtime="20201112 09:42:49.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.296" endtime="20201112 09:42:49.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.261" endtime="20201112 09:42:49.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.256" endtime="20201112 09:42:49.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.321" endtime="20201112 09:42:49.638"></status>
</kw>
<msg timestamp="20201112 09:42:49.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037627069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037629347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:49.318" endtime="20201112 09:42:49.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037627069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037629347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:49.645" endtime="20201112 09:42:49.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.658" endtime="20201112 09:42:49.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.311" endtime="20201112 09:42:49.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.306" endtime="20201112 09:42:49.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.675" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:49.672" endtime="20201112 09:42:49.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.683" level="INFO">VALUE: [{'time': 0.037627069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037629347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.27800000000139e-06, 'source_diff': 2.27800000000139e-06}, {'time': 0.037644778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.543099999999631e-05, 'source_diff': 1.543099999999631e-05}, {'time': 0.037650389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.037662319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1930000000000274e-05, 'source_diff': 1.1930000000000274e-05}, {'time': 0.037671917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597999999999551e-06, 'source_diff': 9.597999999999551e-06}, {'time': 0.037679792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.874999999997467e-06, 'source_diff': 7.874999999997467e-06}, {'time': 0.037693319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3527000000006228e-05, 'source_diff': 1.3527000000006228e-05}, {'time': 0.037707903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4583999999998043e-05, 'source_diff': 1.4583999999998043e-05}, {'time': 0.037721458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.355499999999843e-05, 'source_diff': 1.355499999999843e-05}, {'time': 0.037725403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9449999999982555e-06, 'source_diff': 3.9449999999982555e-06}, {'time': 0.037730208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8050000000035564e-06, 'source_diff': 4.8050000000035564e-06}, {'time': 0.037739153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.944999999996317e-06, 'source_diff': 8.944999999996317e-06}, {'time': 0.037743528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.037755625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2097000000002578e-05, 'source_diff': 1.2097000000002578e-05}, {'time': 0.037761861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.037774153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2291999999997083e-05, 'source_diff': 1.2291999999997083e-05}, {'time': 0.037786444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2291000000004548e-05, 'source_diff': 1.2291000000004548e-05}, {'time': 0.037788958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5139999999951312e-06, 'source_diff': 2.5139999999951312e-06}, {'time': 0.037799792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0834000000001232e-05, 'source_diff': 1.0834000000001232e-05}, {'time': 0.03781125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.037815417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.037819375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.958000000005291e-06, 'source_diff': 3.958000000005291e-06}, {'time': 0.037823542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.037830625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0829999999980076e-06, 'source_diff': 7.0829999999980076e-06}, {'time': 0.037838125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.03784375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.037846042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.29200000000096e-06, 'source_diff': 2.29200000000096e-06}, {'time': 0.037858958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2915999999994765e-05, 'source_diff': 1.2915999999994765e-05}, {'time': 0.0378625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.037876875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}, {'time': 0.03789, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3125000000002718e-05, 'source_diff': 1.3125000000002718e-05}, {'time': 0.037905417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.541699999999674e-05, 'source_diff': 1.541699999999674e-05}, {'time': 0.03791875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3333000000004258e-05, 'source_diff': 1.3333000000004258e-05}, {'time': 0.037933569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.481899999999925e-05, 'source_diff': 1.481899999999925e-05}, {'time': 0.037937514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9449999999982555e-06, 'source_diff': 3.9449999999982555e-06}, {'time': 0.037941056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.037951056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.999999999996123e-06, 'source_diff': 9.999999999996123e-06}, {'time': 0.037954597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5410000000027364e-06, 'source_diff': 3.5410000000027364e-06}, {'time': 0.037957931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3340000000006698e-06, 'source_diff': 3.3340000000006698e-06}, {'time': 0.037962944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.012999999998158e-06, 'source_diff': 5.012999999998158e-06}, {'time': 0.037971681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.737000000001716e-06, 'source_diff': 8.737000000001716e-06}, {'time': 0.0379855, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.381899999999825e-05, 'source_diff': 1.381899999999825e-05}, {'time': 0.037992722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.222000000001172e-06, 'source_diff': 7.222000000001172e-06}, {'time': 0.037996694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.038005236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.038011472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.038022306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0834000000001232e-05, 'source_diff': 1.0834000000001232e-05}, {'time': 0.038031472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.165999999997954e-06, 'source_diff': 9.165999999997954e-06}, {'time': 0.038037722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2500000000062506e-06, 'source_diff': 6.2500000000062506e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:49.677" endtime="20201112 09:42:49.685"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.666" endtime="20201112 09:42:49.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:49.720" level="INFO">${debug-compressed} = {'time': [0.037627069, 0.037629347, 0.037644778, 0.037650389, 0.037662319, 0.037671917, 0.037679792, 0.037693319, 0.037707903, 0.037721458, 0.037725403, 0.037730208, 0.037739153, 0.037743528, 0.037755...</msg>
<status status="PASS" starttime="20201112 09:42:49.689" endtime="20201112 09:42:49.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.729" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:49.727" endtime="20201112 09:42:49.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.737" level="INFO">VALUE: {'time': [0.037627069, 0.037629347, 0.037644778, 0.037650389, 0.037662319, 0.037671917, 0.037679792, 0.037693319, 0.037707903, 0.037721458, 0.037725403, 0.037730208, 0.037739153, 0.037743528, 0.037755625, 0.037761861, 0.037774153, 0.037786444, 0.037788958, 0.037799792, 0.03781125, 0.037815417, 0.037819375, 0.037823542, 0.037830625, 0.037838125, 0.03784375, 0.037846042, 0.037858958, 0.0378625, 0.037876875, 0.03789, 0.037905417, 0.03791875, 0.037933569, 0.037937514, 0.037941056, 0.037951056, 0.037954597, 0.037957931, 0.037962944, 0.037971681, 0.0379855, 0.037992722, 0.037996694, 0.038005236, 0.038011472, 0.038022306, 0.038031472, 0.038037722], 'sourcesource_diff': [0, 2.27800000000139e-06, 1.543099999999631e-05, 5.611000000002586e-06, 1.1930000000000274e-05, 9.597999999999551e-06, 7.874999999997467e-06, 1.3527000000006228e-05, 1.4583999999998043e-05, 1.355499999999843e-05, 3.9449999999982555e-06, 4.8050000000035564e-06, 8.944999999996317e-06, 4.375000000000906e-06, 1.2097000000002578e-05, 6.235999999999742e-06, 1.2291999999997083e-05, 1.2291000000004548e-05, 2.5139999999951312e-06, 1.0834000000001232e-05, 1.1457999999998913e-05, 4.166999999999366e-06, 3.958000000005291e-06, 4.166999999999366e-06, 7.0829999999980076e-06, 7.500000000000562e-06, 5.625000000002156e-06, 2.29200000000096e-06, 1.2915999999994765e-05, 3.54200000000221e-06, 1.4374999999997029e-05, 1.3125000000002718e-05, 1.541699999999674e-05, 1.3333000000004258e-05, 1.481899999999925e-05, 3.9449999999982555e-06, 3.54200000000221e-06, 9.999999999996123e-06, 3.5410000000027364e-06, 3.3340000000006698e-06, 5.012999999998158e-06, 8.737000000001716e-06, 1.381899999999825e-05, 7.222000000001172e-06, 3.971999999997922e-06, 8.542000000000272e-06, 6.235999999999742e-06, 1.0834000000001232e-05, 9.165999999997954e-06, 6.2500000000062506e-06], 'diff': [0, 2.27800000000139e-06, 1.543099999999631e-05, 5.611000000002586e-06, 1.1930000000000274e-05, 9.597999999999551e-06, 7.874999999997467e-06, 1.3527000000006228e-05, 1.4583999999998043e-05, 1.355499999999843e-05, 3.9449999999982555e-06, 4.8050000000035564e-06, 8.944999999996317e-06, 4.375000000000906e-06, 1.2097000000002578e-05, 6.235999999999742e-06, 1.2291999999997083e-05, 1.2291000000004548e-05, 2.5139999999951312e-06, 1.0834000000001232e-05, 1.1457999999998913e-05, 4.166999999999366e-06, 3.958000000005291e-06, 4.166999999999366e-06, 7.0829999999980076e-06, 7.500000000000562e-06, 5.625000000002156e-06, 2.29200000000096e-06, 1.2915999999994765e-05, 3.54200000000221e-06, 1.4374999999997029e-05, 1.3125000000002718e-05, 1.541699999999674e-05, 1.3333000000004258e-05, 1.481899999999925e-05, 3.9449999999982555e-06, 3.54200000000221e-06, 9.999999999996123e-06, 3.5410000000027364e-06, 3.3340000000006698e-06, 5.012999999998158e-06, 8.737000000001716e-06, 1.381899999999825e-05, 7.222000000001172e-06, 3.971999999997922e-06, 8.542000000000272e-06, 6.235999999999742e-06, 1.0834000000001232e-05, 9.165999999997954e-06, 6.2500000000062506e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:49.732" endtime="20201112 09:42:49.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.722" endtime="20201112 09:42:49.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:49.749" level="INFO">${RESULT} = [{'time': 0.037629347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.27800000000139e-06, 'source_diff': 2.27800000000139e-06}, {'time': 0.037650389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:42:49.741" endtime="20201112 09:42:49.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:49.767" level="INFO">${GPIO_OVERHEAD} = {'time': [0.037629347, 0.037650389, 0.037671917, 0.037693319, 0.037721458, 0.037730208, 0.037743528, 0.037761861, 0.037786444, 0.037799792, 0.037815417, 0.037823542, 0.037838125, 0.037846042, 0.037862...</msg>
<status status="PASS" starttime="20201112 09:42:49.751" endtime="20201112 09:42:49.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.777" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:49.775" endtime="20201112 09:42:49.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.783" level="INFO">VALUE: [2.27800000000139e-06, 5.611000000002586e-06, 9.597999999999551e-06, 1.3527000000006228e-05, 1.355499999999843e-05, 4.8050000000035564e-06, 4.375000000000906e-06, 6.235999999999742e-06, 1.2291000000004548e-05, 1.0834000000001232e-05, 4.166999999999366e-06, 4.166999999999366e-06, 7.500000000000562e-06, 2.29200000000096e-06, 3.54200000000221e-06, 1.3125000000002718e-05, 1.3333000000004258e-05, 3.9449999999982555e-06, 9.999999999996123e-06, 3.3340000000006698e-06, 8.737000000001716e-06, 7.222000000001172e-06, 8.542000000000272e-06, 1.0834000000001232e-05, 6.2500000000062506e-06]</msg>
<status status="PASS" starttime="20201112 09:42:49.780" endtime="20201112 09:42:49.784"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.769" endtime="20201112 09:42:49.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.792" endtime="20201112 09:42:49.795"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:49.801" endtime="20201112 09:42:49.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.796" endtime="20201112 09:42:49.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.788" endtime="20201112 09:42:49.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.252" endtime="20201112 09:42:49.826"></status>
</kw>
<msg timestamp="20201112 09:42:49.827" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.849" endtime="20201112 09:42:49.862"></status>
</kw>
<msg timestamp="20201112 09:42:49.864" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.844" endtime="20201112 09:42:49.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.870" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.866" endtime="20201112 09:42:49.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.872" endtime="20201112 09:42:49.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.837" endtime="20201112 09:42:49.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.832" endtime="20201112 09:42:49.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.896" endtime="20201112 09:42:50.211"></status>
</kw>
<msg timestamp="20201112 09:42:50.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038900819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038904972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:49.893" endtime="20201112 09:42:50.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038900819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038904972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:50.217" endtime="20201112 09:42:50.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.230" endtime="20201112 09:42:50.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.886" endtime="20201112 09:42:50.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.881" endtime="20201112 09:42:50.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.247" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:50.245" endtime="20201112 09:42:50.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.256" level="INFO">VALUE: [{'time': 0.038900819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038904972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.038912681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.708999999994637e-06, 'source_diff': 7.708999999994637e-06}, {'time': 0.038919556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.875000000003406e-06, 'source_diff': 6.875000000003406e-06}, {'time': 0.038927694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.137999999997814e-06, 'source_diff': 8.137999999997814e-06}, {'time': 0.038931444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7500000000037503e-06, 'source_diff': 3.7500000000037503e-06}, {'time': 0.038942917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1472999999997957e-05, 'source_diff': 1.1472999999997957e-05}, {'time': 0.038949208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.290999999998548e-06, 'source_diff': 6.290999999998548e-06}, {'time': 0.038958319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.038967903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583999999999981e-06, 'source_diff': 9.583999999999981e-06}, {'time': 0.038983319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5416000000004204e-05, 'source_diff': 1.5416000000004204e-05}, {'time': 0.038986861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.541999999995271e-06, 'source_diff': 3.541999999995271e-06}, {'time': 0.038996653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.792000000001522e-06, 'source_diff': 9.792000000001522e-06}, {'time': 0.039000458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8050000000025563e-06, 'source_diff': 3.8050000000025563e-06}, {'time': 0.039009569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.039011861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.29200000000096e-06, 'source_diff': 2.29200000000096e-06}, {'time': 0.039018125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.039023319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.039030833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.039039569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.039051722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2152999999993919e-05, 'source_diff': 1.2152999999993919e-05}, {'time': 0.039065625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3903000000002608e-05, 'source_diff': 1.3903000000002608e-05}, {'time': 0.03906875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.039081875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3125000000002718e-05, 'source_diff': 1.3125000000002718e-05}, {'time': 0.039092292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0416999999998677e-05, 'source_diff': 1.0416999999998677e-05}, {'time': 0.039105014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2721999999999734e-05, 'source_diff': 1.2721999999999734e-05}, {'time': 0.039109167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.039114583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.416000000001142e-06, 'source_diff': 5.416000000001142e-06}, {'time': 0.039119375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791999999996521e-06, 'source_diff': 4.791999999996521e-06}, {'time': 0.039122292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9170000000050544e-06, 'source_diff': 2.9170000000050544e-06}, {'time': 0.03913, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.707999999995163e-06, 'source_diff': 7.707999999995163e-06}, {'time': 0.039144583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.458299999999857e-05, 'source_diff': 1.458299999999857e-05}, {'time': 0.039150431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.84800000000274e-06, 'source_diff': 5.84800000000274e-06}, {'time': 0.039155444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.012999999998158e-06, 'source_diff': 5.012999999998158e-06}, {'time': 0.039166889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1445000000005756e-05, 'source_diff': 1.1445000000005756e-05}, {'time': 0.039179375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2485999999999053e-05, 'source_diff': 1.2485999999999053e-05}, {'time': 0.039185431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.055999999997341e-06, 'source_diff': 6.055999999997341e-06}, {'time': 0.039192306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.875000000003406e-06, 'source_diff': 6.875000000003406e-06}, {'time': 0.039198556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.039213556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999994185e-05, 'source_diff': 1.4999999999994185e-05}, {'time': 0.03922675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3194000000001094e-05, 'source_diff': 1.3194000000001094e-05}, {'time': 0.039237722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0972000000004922e-05, 'source_diff': 1.0972000000004922e-05}, {'time': 0.039240014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.291999999994021e-06, 'source_diff': 2.291999999994021e-06}, {'time': 0.039242306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.29200000000096e-06, 'source_diff': 2.29200000000096e-06}, {'time': 0.039253556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1250000000004312e-05, 'source_diff': 1.1250000000004312e-05}, {'time': 0.039267306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.039280639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.333299999999732e-05, 'source_diff': 1.333299999999732e-05}, {'time': 0.039291264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.039296264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.039305847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:50.250" endtime="20201112 09:42:50.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.239" endtime="20201112 09:42:50.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:50.292" level="INFO">${debug-compressed} = {'time': [0.038900819, 0.038904972, 0.038912681, 0.038919556, 0.038927694, 0.038931444, 0.038942917, 0.038949208, 0.038958319, 0.038967903, 0.038983319, 0.038986861, 0.038996653, 0.039000458, 0.039009...</msg>
<status status="PASS" starttime="20201112 09:42:50.262" endtime="20201112 09:42:50.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.302" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:50.300" endtime="20201112 09:42:50.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.309" level="INFO">VALUE: {'time': [0.038900819, 0.038904972, 0.038912681, 0.038919556, 0.038927694, 0.038931444, 0.038942917, 0.038949208, 0.038958319, 0.038967903, 0.038983319, 0.038986861, 0.038996653, 0.039000458, 0.039009569, 0.039011861, 0.039018125, 0.039023319, 0.039030833, 0.039039569, 0.039051722, 0.039065625, 0.03906875, 0.039081875, 0.039092292, 0.039105014, 0.039109167, 0.039114583, 0.039119375, 0.039122292, 0.03913, 0.039144583, 0.039150431, 0.039155444, 0.039166889, 0.039179375, 0.039185431, 0.039192306, 0.039198556, 0.039213556, 0.03922675, 0.039237722, 0.039240014, 0.039242306, 0.039253556, 0.039267306, 0.039280639, 0.039291264, 0.039296264, 0.039305847], 'sourcesource_diff': [0, 4.152999999999796e-06, 7.708999999994637e-06, 6.875000000003406e-06, 8.137999999997814e-06, 3.7500000000037503e-06, 1.1472999999997957e-05, 6.290999999998548e-06, 9.110999999999148e-06, 9.583999999999981e-06, 1.5416000000004204e-05, 3.541999999995271e-06, 9.792000000001522e-06, 3.8050000000025563e-06, 9.110999999999148e-06, 2.29200000000096e-06, 6.2639999999988816e-06, 5.194000000000032e-06, 7.514000000000132e-06, 8.736000000002242e-06, 1.2152999999993919e-05, 1.3903000000002608e-05, 3.124999999999656e-06, 1.3125000000002718e-05, 1.0416999999998677e-05, 1.2721999999999734e-05, 4.152999999999796e-06, 5.416000000001142e-06, 4.791999999996521e-06, 2.9170000000050544e-06, 7.707999999995163e-06, 1.458299999999857e-05, 5.84800000000274e-06, 5.012999999998158e-06, 1.1445000000005756e-05, 1.2485999999999053e-05, 6.055999999997341e-06, 6.875000000003406e-06, 6.249999999999312e-06, 1.4999999999994185e-05, 1.3194000000001094e-05, 1.0972000000004922e-05, 2.291999999994021e-06, 2.29200000000096e-06, 1.1250000000004312e-05, 1.3749999999999873e-05, 1.333299999999732e-05, 1.0625000000000218e-05, 4.9999999999980616e-06, 9.583000000000508e-06], 'diff': [0, 4.152999999999796e-06, 7.708999999994637e-06, 6.875000000003406e-06, 8.137999999997814e-06, 3.7500000000037503e-06, 1.1472999999997957e-05, 6.290999999998548e-06, 9.110999999999148e-06, 9.583999999999981e-06, 1.5416000000004204e-05, 3.541999999995271e-06, 9.792000000001522e-06, 3.8050000000025563e-06, 9.110999999999148e-06, 2.29200000000096e-06, 6.2639999999988816e-06, 5.194000000000032e-06, 7.514000000000132e-06, 8.736000000002242e-06, 1.2152999999993919e-05, 1.3903000000002608e-05, 3.124999999999656e-06, 1.3125000000002718e-05, 1.0416999999998677e-05, 1.2721999999999734e-05, 4.152999999999796e-06, 5.416000000001142e-06, 4.791999999996521e-06, 2.9170000000050544e-06, 7.707999999995163e-06, 1.458299999999857e-05, 5.84800000000274e-06, 5.012999999998158e-06, 1.1445000000005756e-05, 1.2485999999999053e-05, 6.055999999997341e-06, 6.875000000003406e-06, 6.249999999999312e-06, 1.4999999999994185e-05, 1.3194000000001094e-05, 1.0972000000004922e-05, 2.291999999994021e-06, 2.29200000000096e-06, 1.1250000000004312e-05, 1.3749999999999873e-05, 1.333299999999732e-05, 1.0625000000000218e-05, 4.9999999999980616e-06, 9.583000000000508e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:50.304" endtime="20201112 09:42:50.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.294" endtime="20201112 09:42:50.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:50.321" level="INFO">${RESULT} = [{'time': 0.038904972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.038919556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:50.314" endtime="20201112 09:42:50.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:50.340" level="INFO">${GPIO_OVERHEAD} = {'time': [0.038904972, 0.038919556, 0.038931444, 0.038949208, 0.038967903, 0.038986861, 0.039000458, 0.039011861, 0.039023319, 0.039039569, 0.039065625, 0.039081875, 0.039105014, 0.039114583, 0.039122...</msg>
<status status="PASS" starttime="20201112 09:42:50.323" endtime="20201112 09:42:50.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.350" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:50.348" endtime="20201112 09:42:50.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.355" level="INFO">VALUE: [4.152999999999796e-06, 6.875000000003406e-06, 3.7500000000037503e-06, 6.290999999998548e-06, 9.583999999999981e-06, 3.541999999995271e-06, 3.8050000000025563e-06, 2.29200000000096e-06, 5.194000000000032e-06, 8.736000000002242e-06, 1.3903000000002608e-05, 1.3125000000002718e-05, 1.2721999999999734e-05, 5.416000000001142e-06, 2.9170000000050544e-06, 1.458299999999857e-05, 5.012999999998158e-06, 1.2485999999999053e-05, 6.875000000003406e-06, 1.4999999999994185e-05, 1.0972000000004922e-05, 2.29200000000096e-06, 1.3749999999999873e-05, 1.0625000000000218e-05, 9.583000000000508e-06]</msg>
<status status="PASS" starttime="20201112 09:42:50.353" endtime="20201112 09:42:50.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.342" endtime="20201112 09:42:50.358"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.365" endtime="20201112 09:42:50.367"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:50.373" endtime="20201112 09:42:50.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.369" endtime="20201112 09:42:50.397"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.360" endtime="20201112 09:42:50.398"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.828" endtime="20201112 09:42:50.399"></status>
</kw>
<msg timestamp="20201112 09:42:50.399" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.421" endtime="20201112 09:42:50.434"></status>
</kw>
<msg timestamp="20201112 09:42:50.435" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:50.416" endtime="20201112 09:42:50.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.442" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:50.438" endtime="20201112 09:42:50.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.444" endtime="20201112 09:42:50.448"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.409" endtime="20201112 09:42:50.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.404" endtime="20201112 09:42:50.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.468" endtime="20201112 09:42:50.784"></status>
</kw>
<msg timestamp="20201112 09:42:50.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038551736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038565264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:50.465" endtime="20201112 09:42:50.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038551736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038565264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:50.791" endtime="20201112 09:42:50.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.804" endtime="20201112 09:42:50.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.458" endtime="20201112 09:42:50.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.453" endtime="20201112 09:42:50.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.821" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:50.819" endtime="20201112 09:42:50.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.829" level="INFO">VALUE: [{'time': 0.038551736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038565264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3527999999998763e-05, 'source_diff': 1.3527999999998763e-05}, {'time': 0.038575889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.038580681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.791999999996521e-06, 'source_diff': 4.791999999996521e-06}, {'time': 0.038585056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.038592139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0829999999980076e-06, 'source_diff': 7.0829999999980076e-06}, {'time': 0.038598833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.038612569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3736000000000304e-05, 'source_diff': 1.3736000000000304e-05}, {'time': 0.038626528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3959000000000887e-05, 'source_diff': 1.3959000000000887e-05}, {'time': 0.038630486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.038636958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.038646542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583999999999981e-06, 'source_diff': 9.583999999999981e-06}, {'time': 0.038654708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166000000003892e-06, 'source_diff': 8.166000000003892e-06}, {'time': 0.038661111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.402999999995107e-06, 'source_diff': 6.402999999995107e-06}, {'time': 0.038664042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9310000000046244e-06, 'source_diff': 2.9310000000046244e-06}, {'time': 0.038668, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.038674236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.038686333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2097000000002578e-05, 'source_diff': 1.2097000000002578e-05}, {'time': 0.03869925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2916999999994239e-05, 'source_diff': 1.2916999999994239e-05}, {'time': 0.038712167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2917000000001178e-05, 'source_diff': 1.2917000000001178e-05}, {'time': 0.038716958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7910000000039865e-06, 'source_diff': 4.7910000000039865e-06}, {'time': 0.038723194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.038727792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.597999999994551e-06, 'source_diff': 4.597999999994551e-06}, {'time': 0.03873425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.458000000000852e-06, 'source_diff': 6.458000000000852e-06}, {'time': 0.038744694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0444000000005282e-05, 'source_diff': 1.0444000000005282e-05}, {'time': 0.038751958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.038765708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.038769486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7779999999959513e-06, 'source_diff': 3.7779999999959513e-06}, {'time': 0.038784875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5389000000004538e-05, 'source_diff': 1.5389000000004538e-05}, {'time': 0.038798625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.038805708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0829999999980076e-06, 'source_diff': 7.0829999999980076e-06}, {'time': 0.038813014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.038825722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2708000000000164e-05, 'source_diff': 1.2708000000000164e-05}, {'time': 0.038828236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.038834667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.431000000001186e-06, 'source_diff': 6.431000000001186e-06}, {'time': 0.038841958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.290999999999548e-06, 'source_diff': 7.290999999999548e-06}, {'time': 0.03884425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.291999999994021e-06, 'source_diff': 2.291999999994021e-06}, {'time': 0.038856972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2721999999999734e-05, 'source_diff': 1.2721999999999734e-05}, {'time': 0.038868431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1459000000005326e-05, 'source_diff': 1.1459000000005326e-05}, {'time': 0.038872403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.038884681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2277999999997513e-05, 'source_diff': 1.2277999999997513e-05}, {'time': 0.038897806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3125000000002718e-05, 'source_diff': 1.3125000000002718e-05}, {'time': 0.038908444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0638000000000314e-05, 'source_diff': 1.0638000000000314e-05}, {'time': 0.038911347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.038921972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.038933014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1042000000002772e-05, 'source_diff': 1.1042000000002772e-05}, {'time': 0.038947806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4791999999999583e-05, 'source_diff': 1.4791999999999583e-05}, {'time': 0.038955944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.137999999997814e-06, 'source_diff': 8.137999999997814e-06}, {'time': 0.038963014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.069999999997911e-06, 'source_diff': 7.069999999997911e-06}, {'time': 0.038971361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.347000000005766e-06, 'source_diff': 8.347000000005766e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:50.823" endtime="20201112 09:42:50.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.813" endtime="20201112 09:42:50.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:50.865" level="INFO">${debug-compressed} = {'time': [0.038551736, 0.038565264, 0.038575889, 0.038580681, 0.038585056, 0.038592139, 0.038598833, 0.038612569, 0.038626528, 0.038630486, 0.038636958, 0.038646542, 0.038654708, 0.038661111, 0.038664...</msg>
<status status="PASS" starttime="20201112 09:42:50.835" endtime="20201112 09:42:50.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.874" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:50.872" endtime="20201112 09:42:50.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.881" level="INFO">VALUE: {'time': [0.038551736, 0.038565264, 0.038575889, 0.038580681, 0.038585056, 0.038592139, 0.038598833, 0.038612569, 0.038626528, 0.038630486, 0.038636958, 0.038646542, 0.038654708, 0.038661111, 0.038664042, 0.038668, 0.038674236, 0.038686333, 0.03869925, 0.038712167, 0.038716958, 0.038723194, 0.038727792, 0.03873425, 0.038744694, 0.038751958, 0.038765708, 0.038769486, 0.038784875, 0.038798625, 0.038805708, 0.038813014, 0.038825722, 0.038828236, 0.038834667, 0.038841958, 0.03884425, 0.038856972, 0.038868431, 0.038872403, 0.038884681, 0.038897806, 0.038908444, 0.038911347, 0.038921972, 0.038933014, 0.038947806, 0.038955944, 0.038963014, 0.038971361], 'sourcesource_diff': [0, 1.3527999999998763e-05, 1.0625000000000218e-05, 4.791999999996521e-06, 4.375000000000906e-06, 7.0829999999980076e-06, 6.694000000001532e-06, 1.3736000000000304e-05, 1.3959000000000887e-05, 3.957999999998352e-06, 6.472000000000422e-06, 9.583999999999981e-06, 8.166000000003892e-06, 6.402999999995107e-06, 2.9310000000046244e-06, 3.957999999998352e-06, 6.235999999999742e-06, 1.2097000000002578e-05, 1.2916999999994239e-05, 1.2917000000001178e-05, 4.7910000000039865e-06, 6.235999999999742e-06, 4.597999999994551e-06, 6.458000000000852e-06, 1.0444000000005282e-05, 7.263999999999882e-06, 1.3749999999999873e-05, 3.7779999999959513e-06, 1.5389000000004538e-05, 1.3749999999999873e-05, 7.0829999999980076e-06, 7.305999999998591e-06, 1.2708000000000164e-05, 2.51400000000207e-06, 6.431000000001186e-06, 7.290999999999548e-06, 2.291999999994021e-06, 1.2721999999999734e-05, 1.1459000000005326e-05, 3.971999999997922e-06, 1.2277999999997513e-05, 1.3125000000002718e-05, 1.0638000000000314e-05, 2.9029999999985456e-06, 1.0625000000000218e-05, 1.1042000000002772e-05, 1.4791999999999583e-05, 8.137999999997814e-06, 7.069999999997911e-06, 8.347000000005766e-06], 'diff': [0, 1.3527999999998763e-05, 1.0625000000000218e-05, 4.791999999996521e-06, 4.375000000000906e-06, 7.0829999999980076e-06, 6.694000000001532e-06, 1.3736000000000304e-05, 1.3959000000000887e-05, 3.957999999998352e-06, 6.472000000000422e-06, 9.583999999999981e-06, 8.166000000003892e-06, 6.402999999995107e-06, 2.9310000000046244e-06, 3.957999999998352e-06, 6.235999999999742e-06, 1.2097000000002578e-05, 1.2916999999994239e-05, 1.2917000000001178e-05, 4.7910000000039865e-06, 6.235999999999742e-06, 4.597999999994551e-06, 6.458000000000852e-06, 1.0444000000005282e-05, 7.263999999999882e-06, 1.3749999999999873e-05, 3.7779999999959513e-06, 1.5389000000004538e-05, 1.3749999999999873e-05, 7.0829999999980076e-06, 7.305999999998591e-06, 1.2708000000000164e-05, 2.51400000000207e-06, 6.431000000001186e-06, 7.290999999999548e-06, 2.291999999994021e-06, 1.2721999999999734e-05, 1.1459000000005326e-05, 3.971999999997922e-06, 1.2277999999997513e-05, 1.3125000000002718e-05, 1.0638000000000314e-05, 2.9029999999985456e-06, 1.0625000000000218e-05, 1.1042000000002772e-05, 1.4791999999999583e-05, 8.137999999997814e-06, 7.069999999997911e-06, 8.347000000005766e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:50.877" endtime="20201112 09:42:50.883"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.867" endtime="20201112 09:42:50.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:50.894" level="INFO">${RESULT} = [{'time': 0.038565264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3527999999998763e-05, 'source_diff': 1.3527999999998763e-05}, {'time': 0.038580681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:50.886" endtime="20201112 09:42:50.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:50.912" level="INFO">${GPIO_OVERHEAD} = {'time': [0.038565264, 0.038580681, 0.038592139, 0.038612569, 0.038630486, 0.038646542, 0.038661111, 0.038668, 0.038686333, 0.038712167, 0.038723194, 0.03873425, 0.038751958, 0.038769486, 0.038798625,...</msg>
<status status="PASS" starttime="20201112 09:42:50.896" endtime="20201112 09:42:50.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.922" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:50.920" endtime="20201112 09:42:50.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.927" level="INFO">VALUE: [1.3527999999998763e-05, 4.791999999996521e-06, 7.0829999999980076e-06, 1.3736000000000304e-05, 3.957999999998352e-06, 9.583999999999981e-06, 6.402999999995107e-06, 3.957999999998352e-06, 1.2097000000002578e-05, 1.2917000000001178e-05, 6.235999999999742e-06, 6.458000000000852e-06, 7.263999999999882e-06, 3.7779999999959513e-06, 1.3749999999999873e-05, 7.305999999998591e-06, 2.51400000000207e-06, 7.290999999999548e-06, 1.2721999999999734e-05, 3.971999999997922e-06, 1.3125000000002718e-05, 2.9029999999985456e-06, 1.1042000000002772e-05, 8.137999999997814e-06, 8.347000000005766e-06]</msg>
<status status="PASS" starttime="20201112 09:42:50.925" endtime="20201112 09:42:50.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.914" endtime="20201112 09:42:50.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.937" endtime="20201112 09:42:50.940"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:50.946" endtime="20201112 09:42:50.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.941" endtime="20201112 09:42:50.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.932" endtime="20201112 09:42:50.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.401" endtime="20201112 09:42:50.971"></status>
</kw>
<msg timestamp="20201112 09:42:50.972" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.994" endtime="20201112 09:42:51.007"></status>
</kw>
<msg timestamp="20201112 09:42:51.008" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:50.989" endtime="20201112 09:42:51.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.014" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:51.010" endtime="20201112 09:42:51.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.017" endtime="20201112 09:42:51.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.981" endtime="20201112 09:42:51.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.976" endtime="20201112 09:42:51.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.041" endtime="20201112 09:42:51.354"></status>
</kw>
<msg timestamp="20201112 09:42:51.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039016083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039027125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:51.037" endtime="20201112 09:42:51.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039016083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039027125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:51.361" endtime="20201112 09:42:51.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.374" endtime="20201112 09:42:51.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.030" endtime="20201112 09:42:51.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.025" endtime="20201112 09:42:51.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.391" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:51.389" endtime="20201112 09:42:51.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.399" level="INFO">VALUE: [{'time': 0.039016083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039027125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1042000000002772e-05, 'source_diff': 1.1042000000002772e-05}, {'time': 0.039038403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1277999999996513e-05, 'source_diff': 1.1277999999996513e-05}, {'time': 0.0390505, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2097000000002578e-05, 'source_diff': 1.2097000000002578e-05}, {'time': 0.039062153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1653000000000358e-05, 'source_diff': 1.1653000000000358e-05}, {'time': 0.039068389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.039083833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5443999999996405e-05, 'source_diff': 1.5443999999996405e-05}, {'time': 0.039092361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.039098431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.07000000000385e-06, 'source_diff': 6.07000000000385e-06}, {'time': 0.039110681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2249999999998373e-05, 'source_diff': 1.2249999999998373e-05}, {'time': 0.039119458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.777000000001478e-06, 'source_diff': 8.777000000001478e-06}, {'time': 0.039129014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.555999999993903e-06, 'source_diff': 9.555999999993903e-06}, {'time': 0.039134847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000003696e-06, 'source_diff': 5.833000000003696e-06}, {'time': 0.039149847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000001124e-05, 'source_diff': 1.5000000000001124e-05}, {'time': 0.039164431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4583999999998043e-05, 'source_diff': 1.4583999999998043e-05}, {'time': 0.039177556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3125000000002718e-05, 'source_diff': 1.3125000000002718e-05}, {'time': 0.039183875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.318999999997688e-06, 'source_diff': 6.318999999997688e-06}, {'time': 0.039191944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.068999999999438e-06, 'source_diff': 8.068999999999438e-06}, {'time': 0.039195486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.03919925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7639999999963814e-06, 'source_diff': 3.7639999999963814e-06}, {'time': 0.039206736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.039221319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.458299999999857e-05, 'source_diff': 1.458299999999857e-05}, {'time': 0.039225694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.039236528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0834000000001232e-05, 'source_diff': 1.0834000000001232e-05}, {'time': 0.039242792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.039248625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.833000000003696e-06, 'source_diff': 5.833000000003696e-06}, {'time': 0.039258611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.985999999996553e-06, 'source_diff': 9.985999999996553e-06}, {'time': 0.039269458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.039274667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2089999999990755e-06, 'source_diff': 5.2089999999990755e-06}, {'time': 0.039283014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.039291528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.039298833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.304999999999118e-06, 'source_diff': 7.304999999999118e-06}, {'time': 0.039304653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8200000000036e-06, 'source_diff': 5.8200000000036e-06}, {'time': 0.039308611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.039314653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.041999999997771e-06, 'source_diff': 6.041999999997771e-06}, {'time': 0.039326139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1486000000004992e-05, 'source_diff': 1.1486000000004992e-05}, {'time': 0.039337375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1235999999997803e-05, 'source_diff': 1.1235999999997803e-05}, {'time': 0.03934675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.039353625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.875000000003406e-06, 'source_diff': 6.875000000003406e-06}, {'time': 0.039367792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4166999999995489e-05, 'source_diff': 1.4166999999995489e-05}, {'time': 0.039376403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.039383625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.222000000001172e-06, 'source_diff': 7.222000000001172e-06}, {'time': 0.039392389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.039398222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8329999999967574e-06, 'source_diff': 5.8329999999967574e-06}, {'time': 0.039413431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5209000000002137e-05, 'source_diff': 1.5209000000002137e-05}, {'time': 0.039428431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000001124e-05, 'source_diff': 1.5000000000001124e-05}, {'time': 0.039435083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.652000000002822e-06, 'source_diff': 6.652000000002822e-06}, {'time': 0.039446347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1263999999996943e-05, 'source_diff': 1.1263999999996943e-05}, {'time': 0.039448847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.039453014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:51.393" endtime="20201112 09:42:51.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.382" endtime="20201112 09:42:51.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:51.436" level="INFO">${debug-compressed} = {'time': [0.039016083, 0.039027125, 0.039038403, 0.0390505, 0.039062153, 0.039068389, 0.039083833, 0.039092361, 0.039098431, 0.039110681, 0.039119458, 0.039129014, 0.039134847, 0.039149847, 0.03916443...</msg>
<status status="PASS" starttime="20201112 09:42:51.405" endtime="20201112 09:42:51.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.446" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:51.444" endtime="20201112 09:42:51.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.453" level="INFO">VALUE: {'time': [0.039016083, 0.039027125, 0.039038403, 0.0390505, 0.039062153, 0.039068389, 0.039083833, 0.039092361, 0.039098431, 0.039110681, 0.039119458, 0.039129014, 0.039134847, 0.039149847, 0.039164431, 0.039177556, 0.039183875, 0.039191944, 0.039195486, 0.03919925, 0.039206736, 0.039221319, 0.039225694, 0.039236528, 0.039242792, 0.039248625, 0.039258611, 0.039269458, 0.039274667, 0.039283014, 0.039291528, 0.039298833, 0.039304653, 0.039308611, 0.039314653, 0.039326139, 0.039337375, 0.03934675, 0.039353625, 0.039367792, 0.039376403, 0.039383625, 0.039392389, 0.039398222, 0.039413431, 0.039428431, 0.039435083, 0.039446347, 0.039448847, 0.039453014], 'sourcesource_diff': [0, 1.1042000000002772e-05, 1.1277999999996513e-05, 1.2097000000002578e-05, 1.1653000000000358e-05, 6.235999999999742e-06, 1.5443999999996405e-05, 8.528000000000702e-06, 6.07000000000385e-06, 1.2249999999998373e-05, 8.777000000001478e-06, 9.555999999993903e-06, 5.833000000003696e-06, 1.5000000000001124e-05, 1.4583999999998043e-05, 1.3125000000002718e-05, 6.318999999997688e-06, 8.068999999999438e-06, 3.54200000000221e-06, 3.7639999999963814e-06, 7.486000000000992e-06, 1.458299999999857e-05, 4.375000000000906e-06, 1.0834000000001232e-05, 6.2639999999988816e-06, 5.833000000003696e-06, 9.985999999996553e-06, 1.0847000000001328e-05, 5.2089999999990755e-06, 8.346999999998828e-06, 8.514000000001132e-06, 7.304999999999118e-06, 5.8200000000036e-06, 3.957999999998352e-06, 6.041999999997771e-06, 1.1486000000004992e-05, 1.1235999999997803e-05, 9.374999999998967e-06, 6.875000000003406e-06, 1.4166999999995489e-05, 8.610999999998648e-06, 7.222000000001172e-06, 8.764000000001382e-06, 5.8329999999967574e-06, 1.5209000000002137e-05, 1.5000000000001124e-05, 6.652000000002822e-06, 1.1263999999996943e-05, 2.5000000000025002e-06, 4.166999999999366e-06], 'diff': [0, 1.1042000000002772e-05, 1.1277999999996513e-05, 1.2097000000002578e-05, 1.1653000000000358e-05, 6.235999999999742e-06, 1.5443999999996405e-05, 8.528000000000702e-06, 6.07000000000385e-06, 1.2249999999998373e-05, 8.777000000001478e-06, 9.555999999993903e-06, 5.833000000003696e-06, 1.5000000000001124e-05, 1.4583999999998043e-05, 1.3125000000002718e-05, 6.318999999997688e-06, 8.068999999999438e-06, 3.54200000000221e-06, 3.7639999999963814e-06, 7.486000000000992e-06, 1.458299999999857e-05, 4.375000000000906e-06, 1.0834000000001232e-05, 6.2639999999988816e-06, 5.833000000003696e-06, 9.985999999996553e-06, 1.0847000000001328e-05, 5.2089999999990755e-06, 8.346999999998828e-06, 8.514000000001132e-06, 7.304999999999118e-06, 5.8200000000036e-06, 3.957999999998352e-06, 6.041999999997771e-06, 1.1486000000004992e-05, 1.1235999999997803e-05, 9.374999999998967e-06, 6.875000000003406e-06, 1.4166999999995489e-05, 8.610999999998648e-06, 7.222000000001172e-06, 8.764000000001382e-06, 5.8329999999967574e-06, 1.5209000000002137e-05, 1.5000000000001124e-05, 6.652000000002822e-06, 1.1263999999996943e-05, 2.5000000000025002e-06, 4.166999999999366e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:51.448" endtime="20201112 09:42:51.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.438" endtime="20201112 09:42:51.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:51.465" level="INFO">${RESULT} = [{'time': 0.039027125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1042000000002772e-05, 'source_diff': 1.1042000000002772e-05}, {'time': 0.0390505, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:51.457" endtime="20201112 09:42:51.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:51.483" level="INFO">${GPIO_OVERHEAD} = {'time': [0.039027125, 0.0390505, 0.039068389, 0.039092361, 0.039110681, 0.039129014, 0.039149847, 0.039177556, 0.039191944, 0.03919925, 0.039221319, 0.039236528, 0.039248625, 0.039269458, 0.039283014...</msg>
<status status="PASS" starttime="20201112 09:42:51.467" endtime="20201112 09:42:51.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.494" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:51.492" endtime="20201112 09:42:51.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.499" level="INFO">VALUE: [1.1042000000002772e-05, 1.2097000000002578e-05, 6.235999999999742e-06, 8.528000000000702e-06, 1.2249999999998373e-05, 9.555999999993903e-06, 1.5000000000001124e-05, 1.3125000000002718e-05, 8.068999999999438e-06, 3.7639999999963814e-06, 1.458299999999857e-05, 1.0834000000001232e-05, 5.833000000003696e-06, 1.0847000000001328e-05, 8.346999999998828e-06, 7.304999999999118e-06, 3.957999999998352e-06, 1.1486000000004992e-05, 9.374999999998967e-06, 1.4166999999995489e-05, 7.222000000001172e-06, 5.8329999999967574e-06, 1.5000000000001124e-05, 1.1263999999996943e-05, 4.166999999999366e-06]</msg>
<status status="PASS" starttime="20201112 09:42:51.496" endtime="20201112 09:42:51.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.485" endtime="20201112 09:42:51.502"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.509" endtime="20201112 09:42:51.511"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:51.517" endtime="20201112 09:42:51.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.513" endtime="20201112 09:42:51.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.504" endtime="20201112 09:42:51.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.973" endtime="20201112 09:42:51.543"></status>
</kw>
<msg timestamp="20201112 09:42:51.543" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.565" endtime="20201112 09:42:51.577"></status>
</kw>
<msg timestamp="20201112 09:42:51.579" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:51.560" endtime="20201112 09:42:51.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.585" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:51.581" endtime="20201112 09:42:51.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.587" endtime="20201112 09:42:51.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.553" endtime="20201112 09:42:51.593"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.548" endtime="20201112 09:42:51.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.611" endtime="20201112 09:42:51.881"></status>
</kw>
<msg timestamp="20201112 09:42:51.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038770361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038774111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:51.608" endtime="20201112 09:42:51.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038770361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038774111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:51.884" endtime="20201112 09:42:51.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.890" endtime="20201112 09:42:51.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.601" endtime="20201112 09:42:51.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.596" endtime="20201112 09:42:51.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.898" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:51.897" endtime="20201112 09:42:51.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.902" level="INFO">VALUE: [{'time': 0.038770361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038774111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7499999999968114e-06, 'source_diff': 3.7499999999968114e-06}, {'time': 0.038783278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.166999999997427e-06, 'source_diff': 9.166999999997427e-06}, {'time': 0.038787444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.038796639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.195000000003506e-06, 'source_diff': 9.195000000003506e-06}, {'time': 0.038811194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.455499999999943e-05, 'source_diff': 1.455499999999943e-05}, {'time': 0.038818083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.889000000002976e-06, 'source_diff': 6.889000000002976e-06}, {'time': 0.038821625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.541999999995271e-06, 'source_diff': 3.541999999995271e-06}, {'time': 0.038825778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.038833292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.038843083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.791000000002048e-06, 'source_diff': 9.791000000002048e-06}, {'time': 0.038858292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5209000000002137e-05, 'source_diff': 1.5209000000002137e-05}, {'time': 0.038867653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.038871208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5549999999953674e-06, 'source_diff': 3.5549999999953674e-06}, {'time': 0.038882236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1028000000003202e-05, 'source_diff': 1.1028000000003202e-05}, {'time': 0.038894542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2305999999996653e-05, 'source_diff': 1.2305999999996653e-05}, {'time': 0.038903111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.038917472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4361000000004398e-05, 'source_diff': 1.4361000000004398e-05}, {'time': 0.038928917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1444999999998817e-05, 'source_diff': 1.1444999999998817e-05}, {'time': 0.038939153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0235999999996803e-05, 'source_diff': 1.0235999999996803e-05}, {'time': 0.038945181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.02800000000514e-06, 'source_diff': 6.02800000000514e-06}, {'time': 0.038953917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.735999999995303e-06, 'source_diff': 8.735999999995303e-06}, {'time': 0.038960583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.666000000002392e-06, 'source_diff': 6.666000000002392e-06}, {'time': 0.038970403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.038978708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.038981431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722999999996145e-06, 'source_diff': 2.722999999996145e-06}, {'time': 0.038991208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.777000000002478e-06, 'source_diff': 9.777000000002478e-06}, {'time': 0.038995583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.039000181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.59800000000149e-06, 'source_diff': 4.59800000000149e-06}, {'time': 0.039008292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.110999999998147e-06, 'source_diff': 8.110999999998147e-06}, {'time': 0.039012889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.0390235, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0611000000000648e-05, 'source_diff': 1.0611000000000648e-05}, {'time': 0.039031639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.138999999997287e-06, 'source_diff': 8.138999999997287e-06}, {'time': 0.039037264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.039051847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.458299999999857e-05, 'source_diff': 1.458299999999857e-05}, {'time': 0.039064556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2708999999999637e-05, 'source_diff': 1.2708999999999637e-05}, {'time': 0.039072889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.332999999999258e-06, 'source_diff': 8.332999999999258e-06}, {'time': 0.039087056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4167000000002428e-05, 'source_diff': 1.4167000000002428e-05}, {'time': 0.039096639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.039108722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2082999999996069e-05, 'source_diff': 1.2082999999996069e-05}, {'time': 0.039123097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4375000000003968e-05, 'source_diff': 1.4375000000003968e-05}, {'time': 0.039130194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0969999999975775e-06, 'source_diff': 7.0969999999975775e-06}, {'time': 0.039144347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4153000000002858e-05, 'source_diff': 1.4153000000002858e-05}, {'time': 0.039148597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2499999999973115e-06, 'source_diff': 4.2499999999973115e-06}, {'time': 0.039159986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1389000000000538e-05, 'source_diff': 1.1389000000000538e-05}, {'time': 0.039172486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2499999999998623e-05, 'source_diff': 1.2499999999998623e-05}, {'time': 0.039176444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.039188125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1680999999999497e-05, 'source_diff': 1.1680999999999497e-05}, {'time': 0.039202278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4153000000002858e-05, 'source_diff': 1.4153000000002858e-05}, {'time': 0.039209597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.318999999998688e-06, 'source_diff': 7.318999999998688e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:51.899" endtime="20201112 09:42:51.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.894" endtime="20201112 09:42:51.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:51.918" level="INFO">${debug-compressed} = {'time': [0.038770361, 0.038774111, 0.038783278, 0.038787444, 0.038796639, 0.038811194, 0.038818083, 0.038821625, 0.038825778, 0.038833292, 0.038843083, 0.038858292, 0.038867653, 0.038871208, 0.038882...</msg>
<status status="PASS" starttime="20201112 09:42:51.905" endtime="20201112 09:42:51.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.922" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:51.921" endtime="20201112 09:42:51.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.926" level="INFO">VALUE: {'time': [0.038770361, 0.038774111, 0.038783278, 0.038787444, 0.038796639, 0.038811194, 0.038818083, 0.038821625, 0.038825778, 0.038833292, 0.038843083, 0.038858292, 0.038867653, 0.038871208, 0.038882236, 0.038894542, 0.038903111, 0.038917472, 0.038928917, 0.038939153, 0.038945181, 0.038953917, 0.038960583, 0.038970403, 0.038978708, 0.038981431, 0.038991208, 0.038995583, 0.039000181, 0.039008292, 0.039012889, 0.0390235, 0.039031639, 0.039037264, 0.039051847, 0.039064556, 0.039072889, 0.039087056, 0.039096639, 0.039108722, 0.039123097, 0.039130194, 0.039144347, 0.039148597, 0.039159986, 0.039172486, 0.039176444, 0.039188125, 0.039202278, 0.039209597], 'sourcesource_diff': [0, 3.7499999999968114e-06, 9.166999999997427e-06, 4.165999999999892e-06, 9.195000000003506e-06, 1.455499999999943e-05, 6.889000000002976e-06, 3.541999999995271e-06, 4.152999999999796e-06, 7.514000000000132e-06, 9.791000000002048e-06, 1.5209000000002137e-05, 9.360999999999398e-06, 3.5549999999953674e-06, 1.1028000000003202e-05, 1.2305999999996653e-05, 8.568999999999938e-06, 1.4361000000004398e-05, 1.1444999999998817e-05, 1.0235999999996803e-05, 6.02800000000514e-06, 8.735999999995303e-06, 6.666000000002392e-06, 9.820000000000662e-06, 8.305000000000118e-06, 2.722999999996145e-06, 9.777000000002478e-06, 4.375000000000906e-06, 4.59800000000149e-06, 8.110999999998147e-06, 4.597000000002016e-06, 1.0611000000000648e-05, 8.138999999997287e-06, 5.625000000002156e-06, 1.458299999999857e-05, 1.2708999999999637e-05, 8.332999999999258e-06, 1.4167000000002428e-05, 9.583000000000508e-06, 1.2082999999996069e-05, 1.4375000000003968e-05, 7.0969999999975775e-06, 1.4153000000002858e-05, 4.2499999999973115e-06, 1.1389000000000538e-05, 1.2499999999998623e-05, 3.957999999998352e-06, 1.1680999999999497e-05, 1.4153000000002858e-05, 7.318999999998688e-06], 'diff': [0, 3.7499999999968114e-06, 9.166999999997427e-06, 4.165999999999892e-06, 9.195000000003506e-06, 1.455499999999943e-05, 6.889000000002976e-06, 3.541999999995271e-06, 4.152999999999796e-06, 7.514000000000132e-06, 9.791000000002048e-06, 1.5209000000002137e-05, 9.360999999999398e-06, 3.5549999999953674e-06, 1.1028000000003202e-05, 1.2305999999996653e-05, 8.568999999999938e-06, 1.4361000000004398e-05, 1.1444999999998817e-05, 1.0235999999996803e-05, 6.02800000000514e-06, 8.735999999995303e-06, 6.666000000002392e-06, 9.820000000000662e-06, 8.305000000000118e-06, 2.722999999996145e-06, 9.777000000002478e-06, 4.375000000000906e-06, 4.59800000000149e-06, 8.110999999998147e-06, 4.597000000002016e-06, 1.0611000000000648e-05, 8.138999999997287e-06, 5.625000000002156e-06, 1.458299999999857e-05, 1.2708999999999637e-05, 8.332999999999258e-06, 1.4167000000002428e-05, 9.583000000000508e-06, 1.2082999999996069e-05, 1.4375000000003968e-05, 7.0969999999975775e-06, 1.4153000000002858e-05, 4.2499999999973115e-06, 1.1389000000000538e-05, 1.2499999999998623e-05, 3.957999999998352e-06, 1.1680999999999497e-05, 1.4153000000002858e-05, 7.318999999998688e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:51.924" endtime="20201112 09:42:51.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.919" endtime="20201112 09:42:51.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:51.931" level="INFO">${RESULT} = [{'time': 0.038774111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7499999999968114e-06, 'source_diff': 3.7499999999968114e-06}, {'time': 0.038787444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:51.928" endtime="20201112 09:42:51.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:51.940" level="INFO">${GPIO_OVERHEAD} = {'time': [0.038774111, 0.038787444, 0.038811194, 0.038821625, 0.038833292, 0.038858292, 0.038871208, 0.038894542, 0.038917472, 0.038939153, 0.038953917, 0.038970403, 0.038981431, 0.038995583, 0.039008...</msg>
<status status="PASS" starttime="20201112 09:42:51.932" endtime="20201112 09:42:51.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.945" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:51.944" endtime="20201112 09:42:51.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.947" level="INFO">VALUE: [3.7499999999968114e-06, 4.165999999999892e-06, 1.455499999999943e-05, 3.541999999995271e-06, 7.514000000000132e-06, 1.5209000000002137e-05, 3.5549999999953674e-06, 1.2305999999996653e-05, 1.4361000000004398e-05, 1.0235999999996803e-05, 8.735999999995303e-06, 9.820000000000662e-06, 2.722999999996145e-06, 4.375000000000906e-06, 8.110999999998147e-06, 1.0611000000000648e-05, 5.625000000002156e-06, 1.2708999999999637e-05, 1.4167000000002428e-05, 1.2082999999996069e-05, 7.0969999999975775e-06, 4.2499999999973115e-06, 1.2499999999998623e-05, 1.1680999999999497e-05, 7.318999999998688e-06]</msg>
<status status="PASS" starttime="20201112 09:42:51.946" endtime="20201112 09:42:51.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.941" endtime="20201112 09:42:51.949"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.952" endtime="20201112 09:42:51.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:51.956" endtime="20201112 09:42:51.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.954" endtime="20201112 09:42:51.976"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.949" endtime="20201112 09:42:51.977"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.544" endtime="20201112 09:42:51.977"></status>
</kw>
<msg timestamp="20201112 09:42:51.977" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.987" endtime="20201112 09:42:51.998"></status>
</kw>
<msg timestamp="20201112 09:42:51.998" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:51.985" endtime="20201112 09:42:51.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.001" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:51.999" endtime="20201112 09:42:52.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.003" endtime="20201112 09:42:52.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.982" endtime="20201112 09:42:52.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.979" endtime="20201112 09:42:52.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.014" endtime="20201112 09:42:52.290"></status>
</kw>
<msg timestamp="20201112 09:42:52.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021965153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021977458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:52.012" endtime="20201112 09:42:52.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021965153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021977458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:52.297" endtime="20201112 09:42:52.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.310" endtime="20201112 09:42:52.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.009" endtime="20201112 09:42:52.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.006" endtime="20201112 09:42:52.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.327" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:52.325" endtime="20201112 09:42:52.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.336" level="INFO">VALUE: [{'time': 0.021965153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021977458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.230499999999718e-05, 'source_diff': 1.230499999999718e-05}, {'time': 0.021984986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.528000000003171e-06, 'source_diff': 7.528000000003171e-06}, {'time': 0.021994972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.986000000000023e-06, 'source_diff': 9.986000000000023e-06}, {'time': 0.022000597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.022015583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4985999999998084e-05, 'source_diff': 1.4985999999998084e-05}, {'time': 0.022026639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1056000000002342e-05, 'source_diff': 1.1056000000002342e-05}, {'time': 0.022038528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1889000000001038e-05, 'source_diff': 1.1889000000001038e-05}, {'time': 0.022042875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.022048708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.022061208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2499999999998623e-05, 'source_diff': 1.2499999999998623e-05}, {'time': 0.022067042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8339999999997005e-06, 'source_diff': 5.8339999999997005e-06}, {'time': 0.022069819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7770000000024164e-06, 'source_diff': 2.7770000000024164e-06}, {'time': 0.022084333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4514000000000193e-05, 'source_diff': 1.4514000000000193e-05}, {'time': 0.022089556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.222999999998645e-06, 'source_diff': 5.222999999998645e-06}, {'time': 0.022104986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5430000000000305e-05, 'source_diff': 1.5430000000000305e-05}, {'time': 0.022120375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.538900000000107e-05, 'source_diff': 1.538900000000107e-05}, {'time': 0.022131847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.022139972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.125000000001187e-06, 'source_diff': 8.125000000001187e-06}, {'time': 0.022155181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5208999999998668e-05, 'source_diff': 1.5208999999998668e-05}, {'time': 0.022168944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.376299999999997e-05, 'source_diff': 1.376299999999997e-05}, {'time': 0.022176028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.084000000000951e-06, 'source_diff': 7.084000000000951e-06}, {'time': 0.022180389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.022186236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.847000000003266e-06, 'source_diff': 5.847000000003266e-06}, {'time': 0.022188514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2779999999979206e-06, 'source_diff': 2.2779999999979206e-06}, {'time': 0.022195806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.022198306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.022208931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.022218944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0012999999999689e-05, 'source_diff': 1.0012999999999689e-05}, {'time': 0.022229986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1041999999999302e-05, 'source_diff': 1.1041999999999302e-05}, {'time': 0.022244139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4152999999999388e-05, 'source_diff': 1.4152999999999388e-05}, {'time': 0.022253097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.957999999999883e-06, 'source_diff': 8.957999999999883e-06}, {'time': 0.022259347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.022269583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.022283569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3986000000000554e-05, 'source_diff': 1.3986000000000554e-05}, {'time': 0.022290458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.022302278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1819999999999192e-05, 'source_diff': 1.1819999999999192e-05}, {'time': 0.022312486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0208000000001133e-05, 'source_diff': 1.0208000000001133e-05}, {'time': 0.022325194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2708000000000164e-05, 'source_diff': 1.2708000000000164e-05}, {'time': 0.022332903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.709000000001576e-06, 'source_diff': 7.709000000001576e-06}, {'time': 0.022343528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.022356722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3193999999997624e-05, 'source_diff': 1.3193999999997624e-05}, {'time': 0.022371875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5153000000000388e-05, 'source_diff': 1.5153000000000388e-05}, {'time': 0.022379361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.022386653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.022401889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5236000000001804e-05, 'source_diff': 1.5236000000001804e-05}, {'time': 0.022414806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2916999999997708e-05, 'source_diff': 1.2916999999997708e-05}, {'time': 0.022420417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.02242875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.332999999999258e-06, 'source_diff': 8.332999999999258e-06}, {'time': 0.0224425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}]</msg>
<status status="PASS" starttime="20201112 09:42:52.330" endtime="20201112 09:42:52.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.319" endtime="20201112 09:42:52.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:52.376" level="INFO">${debug-compressed} = {'time': [0.021965153, 0.021977458, 0.021984986, 0.021994972, 0.022000597, 0.022015583, 0.022026639, 0.022038528, 0.022042875, 0.022048708, 0.022061208, 0.022067042, 0.022069819, 0.022084333, 0.022089...</msg>
<status status="PASS" starttime="20201112 09:42:52.346" endtime="20201112 09:42:52.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.386" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:52.384" endtime="20201112 09:42:52.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.393" level="INFO">VALUE: {'time': [0.021965153, 0.021977458, 0.021984986, 0.021994972, 0.022000597, 0.022015583, 0.022026639, 0.022038528, 0.022042875, 0.022048708, 0.022061208, 0.022067042, 0.022069819, 0.022084333, 0.022089556, 0.022104986, 0.022120375, 0.022131847, 0.022139972, 0.022155181, 0.022168944, 0.022176028, 0.022180389, 0.022186236, 0.022188514, 0.022195806, 0.022198306, 0.022208931, 0.022218944, 0.022229986, 0.022244139, 0.022253097, 0.022259347, 0.022269583, 0.022283569, 0.022290458, 0.022302278, 0.022312486, 0.022325194, 0.022332903, 0.022343528, 0.022356722, 0.022371875, 0.022379361, 0.022386653, 0.022401889, 0.022414806, 0.022420417, 0.02242875, 0.0224425], 'sourcesource_diff': [0, 1.230499999999718e-05, 7.528000000003171e-06, 9.986000000000023e-06, 5.624999999998687e-06, 1.4985999999998084e-05, 1.1056000000002342e-05, 1.1889000000001038e-05, 4.346999999998297e-06, 5.833000000000227e-06, 1.2499999999998623e-05, 5.8339999999997005e-06, 2.7770000000024164e-06, 1.4514000000000193e-05, 5.222999999998645e-06, 1.5430000000000305e-05, 1.538900000000107e-05, 1.1471999999998483e-05, 8.125000000001187e-06, 1.5208999999998668e-05, 1.376299999999997e-05, 7.084000000000951e-06, 4.360999999997867e-06, 5.847000000003266e-06, 2.2779999999979206e-06, 7.2919999999990215e-06, 2.5000000000025002e-06, 1.0625000000000218e-05, 1.0012999999999689e-05, 1.1041999999999302e-05, 1.4152999999999388e-05, 8.957999999999883e-06, 6.249999999999312e-06, 1.0236000000000273e-05, 1.3986000000000554e-05, 6.888999999999507e-06, 1.1819999999999192e-05, 1.0208000000001133e-05, 1.2708000000000164e-05, 7.709000000001576e-06, 1.0625000000000218e-05, 1.3193999999997624e-05, 1.5153000000000388e-05, 7.486000000000992e-06, 7.2919999999990215e-06, 1.5236000000001804e-05, 1.2916999999997708e-05, 5.611000000002586e-06, 8.332999999999258e-06, 1.3749999999999873e-05], 'diff': [0, 1.230499999999718e-05, 7.528000000003171e-06, 9.986000000000023e-06, 5.624999999998687e-06, 1.4985999999998084e-05, 1.1056000000002342e-05, 1.1889000000001038e-05, 4.346999999998297e-06, 5.833000000000227e-06, 1.2499999999998623e-05, 5.8339999999997005e-06, 2.7770000000024164e-06, 1.4514000000000193e-05, 5.222999999998645e-06, 1.5430000000000305e-05, 1.538900000000107e-05, 1.1471999999998483e-05, 8.125000000001187e-06, 1.5208999999998668e-05, 1.376299999999997e-05, 7.084000000000951e-06, 4.360999999997867e-06, 5.847000000003266e-06, 2.2779999999979206e-06, 7.2919999999990215e-06, 2.5000000000025002e-06, 1.0625000000000218e-05, 1.0012999999999689e-05, 1.1041999999999302e-05, 1.4152999999999388e-05, 8.957999999999883e-06, 6.249999999999312e-06, 1.0236000000000273e-05, 1.3986000000000554e-05, 6.888999999999507e-06, 1.1819999999999192e-05, 1.0208000000001133e-05, 1.2708000000000164e-05, 7.709000000001576e-06, 1.0625000000000218e-05, 1.3193999999997624e-05, 1.5153000000000388e-05, 7.486000000000992e-06, 7.2919999999990215e-06, 1.5236000000001804e-05, 1.2916999999997708e-05, 5.611000000002586e-06, 8.332999999999258e-06, 1.3749999999999873e-05], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:52.388" endtime="20201112 09:42:52.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.378" endtime="20201112 09:42:52.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:52.405" level="INFO">${RESULT} = [{'time': 0.021977458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.230499999999718e-05, 'source_diff': 1.230499999999718e-05}, {'time': 0.021994972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:52.398" endtime="20201112 09:42:52.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:52.423" level="INFO">${GPIO_OVERHEAD} = {'time': [0.021977458, 0.021994972, 0.022015583, 0.022038528, 0.022048708, 0.022067042, 0.022084333, 0.022104986, 0.022131847, 0.022155181, 0.022176028, 0.022186236, 0.022195806, 0.022208931, 0.022229...</msg>
<status status="PASS" starttime="20201112 09:42:52.407" endtime="20201112 09:42:52.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.434" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:52.432" endtime="20201112 09:42:52.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.439" level="INFO">VALUE: [1.230499999999718e-05, 9.986000000000023e-06, 1.4985999999998084e-05, 1.1889000000001038e-05, 5.833000000000227e-06, 5.8339999999997005e-06, 1.4514000000000193e-05, 1.5430000000000305e-05, 1.1471999999998483e-05, 1.5208999999998668e-05, 7.084000000000951e-06, 5.847000000003266e-06, 7.2919999999990215e-06, 1.0625000000000218e-05, 1.1041999999999302e-05, 8.957999999999883e-06, 1.0236000000000273e-05, 6.888999999999507e-06, 1.0208000000001133e-05, 7.709000000001576e-06, 1.3193999999997624e-05, 7.486000000000992e-06, 1.5236000000001804e-05, 5.611000000002586e-06, 1.3749999999999873e-05]</msg>
<status status="PASS" starttime="20201112 09:42:52.436" endtime="20201112 09:42:52.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.425" endtime="20201112 09:42:52.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.449" endtime="20201112 09:42:52.451"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:52.457" endtime="20201112 09:42:52.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.453" endtime="20201112 09:42:52.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.444" endtime="20201112 09:42:52.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.978" endtime="20201112 09:42:52.483"></status>
</kw>
<msg timestamp="20201112 09:42:52.483" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.505" endtime="20201112 09:42:52.519"></status>
</kw>
<msg timestamp="20201112 09:42:52.520" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:52.500" endtime="20201112 09:42:52.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.526" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:52.522" endtime="20201112 09:42:52.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.528" endtime="20201112 09:42:52.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.493" endtime="20201112 09:42:52.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.488" endtime="20201112 09:42:52.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.553" endtime="20201112 09:42:52.869"></status>
</kw>
<msg timestamp="20201112 09:42:52.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038812542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038818361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:52.549" endtime="20201112 09:42:52.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038812542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038818361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:52.875" endtime="20201112 09:42:52.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.888" endtime="20201112 09:42:52.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.542" endtime="20201112 09:42:52.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.537" endtime="20201112 09:42:52.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.906" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:52.903" endtime="20201112 09:42:52.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.914" level="INFO">VALUE: [{'time': 0.038812542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038818361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8190000000041264e-06, 'source_diff': 5.8190000000041264e-06}, {'time': 0.038828792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0430999999998247e-05, 'source_diff': 1.0430999999998247e-05}, {'time': 0.038836278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.038840028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7499999999968114e-06, 'source_diff': 3.7499999999968114e-06}, {'time': 0.038844417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.038851278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.861000000003836e-06, 'source_diff': 6.861000000003836e-06}, {'time': 0.038860444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.165999999997954e-06, 'source_diff': 9.165999999997954e-06}, {'time': 0.038875653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5209000000002137e-05, 'source_diff': 1.5209000000002137e-05}, {'time': 0.038880444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.790999999997048e-06, 'source_diff': 4.790999999997048e-06}, {'time': 0.038895444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000001124e-05, 'source_diff': 1.5000000000001124e-05}, {'time': 0.038905653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0208999999997137e-05, 'source_diff': 1.0208999999997137e-05}, {'time': 0.038915667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0014000000002632e-05, 'source_diff': 1.0014000000002632e-05}, {'time': 0.038925028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.038935236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0207999999997663e-05, 'source_diff': 1.0207999999997663e-05}, {'time': 0.038943181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.945000000002256e-06, 'source_diff': 7.945000000002256e-06}, {'time': 0.038952333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.151999999998384e-06, 'source_diff': 9.151999999998384e-06}, {'time': 0.038966083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.03897775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1666999999999927e-05, 'source_diff': 1.1666999999999927e-05}, {'time': 0.038987958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0208000000004602e-05, 'source_diff': 1.0208000000004602e-05}, {'time': 0.039002333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}, {'time': 0.039010042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.709000000001576e-06, 'source_diff': 7.709000000001576e-06}, {'time': 0.039013583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5409999999957975e-06, 'source_diff': 3.5409999999957975e-06}, {'time': 0.039029014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5431000000003248e-05, 'source_diff': 1.5431000000003248e-05}, {'time': 0.039032556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.039046306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.039055042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.735999999995303e-06, 'source_diff': 8.735999999995303e-06}, {'time': 0.039058583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5410000000027364e-06, 'source_diff': 3.5410000000027364e-06}, {'time': 0.039062347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7639999999963814e-06, 'source_diff': 3.7639999999963814e-06}, {'time': 0.039075472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3125000000002718e-05, 'source_diff': 1.3125000000002718e-05}, {'time': 0.039082139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.667000000001866e-06, 'source_diff': 6.667000000001866e-06}, {'time': 0.039093403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1263999999996943e-05, 'source_diff': 1.1263999999996943e-05}, {'time': 0.039107347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3944000000001844e-05, 'source_diff': 1.3944000000001844e-05}, {'time': 0.039122139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4791999999999583e-05, 'source_diff': 1.4791999999999583e-05}, {'time': 0.039136111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3972000000000984e-05, 'source_diff': 1.3972000000000984e-05}, {'time': 0.039138597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4859999999959914e-06, 'source_diff': 2.4859999999959914e-06}, {'time': 0.039145264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.667000000001866e-06, 'source_diff': 6.667000000001866e-06}, {'time': 0.039155708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0443999999998343e-05, 'source_diff': 1.0443999999998343e-05}, {'time': 0.039162764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.05600000000528e-06, 'source_diff': 7.05600000000528e-06}, {'time': 0.039172569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.804999999994679e-06, 'source_diff': 9.804999999994679e-06}, {'time': 0.039185472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2903000000001608e-05, 'source_diff': 1.2903000000001608e-05}, {'time': 0.039199694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4222000000001234e-05, 'source_diff': 1.4222000000001234e-05}, {'time': 0.039214458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4764000000000443e-05, 'source_diff': 1.4764000000000443e-05}, {'time': 0.039219861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.039225083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.039235347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0263999999995943e-05, 'source_diff': 1.0263999999995943e-05}, {'time': 0.039245903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0556000000001842e-05, 'source_diff': 1.0556000000001842e-05}, {'time': 0.039248611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7080000000040405e-06, 'source_diff': 2.7080000000040405e-06}, {'time': 0.039257597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999995553e-06, 'source_diff': 8.985999999995553e-06}, {'time': 0.039269861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2264000000004882e-05, 'source_diff': 1.2264000000004882e-05}]</msg>
<status status="PASS" starttime="20201112 09:42:52.908" endtime="20201112 09:42:52.916"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.897" endtime="20201112 09:42:52.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:52.951" level="INFO">${debug-compressed} = {'time': [0.038812542, 0.038818361, 0.038828792, 0.038836278, 0.038840028, 0.038844417, 0.038851278, 0.038860444, 0.038875653, 0.038880444, 0.038895444, 0.038905653, 0.038915667, 0.038925028, 0.038935...</msg>
<status status="PASS" starttime="20201112 09:42:52.920" endtime="20201112 09:42:52.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.961" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:52.958" endtime="20201112 09:42:52.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.968" level="INFO">VALUE: {'time': [0.038812542, 0.038818361, 0.038828792, 0.038836278, 0.038840028, 0.038844417, 0.038851278, 0.038860444, 0.038875653, 0.038880444, 0.038895444, 0.038905653, 0.038915667, 0.038925028, 0.038935236, 0.038943181, 0.038952333, 0.038966083, 0.03897775, 0.038987958, 0.039002333, 0.039010042, 0.039013583, 0.039029014, 0.039032556, 0.039046306, 0.039055042, 0.039058583, 0.039062347, 0.039075472, 0.039082139, 0.039093403, 0.039107347, 0.039122139, 0.039136111, 0.039138597, 0.039145264, 0.039155708, 0.039162764, 0.039172569, 0.039185472, 0.039199694, 0.039214458, 0.039219861, 0.039225083, 0.039235347, 0.039245903, 0.039248611, 0.039257597, 0.039269861], 'sourcesource_diff': [0, 5.8190000000041264e-06, 1.0430999999998247e-05, 7.486000000000992e-06, 3.7499999999968114e-06, 4.389000000000476e-06, 6.861000000003836e-06, 9.165999999997954e-06, 1.5209000000002137e-05, 4.790999999997048e-06, 1.5000000000001124e-05, 1.0208999999997137e-05, 1.0014000000002632e-05, 9.360999999999398e-06, 1.0207999999997663e-05, 7.945000000002256e-06, 9.151999999998384e-06, 1.3749999999999873e-05, 1.1666999999999927e-05, 1.0208000000004602e-05, 1.4374999999997029e-05, 7.709000000001576e-06, 3.5409999999957975e-06, 1.5431000000003248e-05, 3.54200000000221e-06, 1.3749999999999873e-05, 8.735999999995303e-06, 3.5410000000027364e-06, 3.7639999999963814e-06, 1.3125000000002718e-05, 6.667000000001866e-06, 1.1263999999996943e-05, 1.3944000000001844e-05, 1.4791999999999583e-05, 1.3972000000000984e-05, 2.4859999999959914e-06, 6.667000000001866e-06, 1.0443999999998343e-05, 7.05600000000528e-06, 9.804999999994679e-06, 1.2903000000001608e-05, 1.4222000000001234e-05, 1.4764000000000443e-05, 5.403000000001046e-06, 5.221999999999172e-06, 1.0263999999995943e-05, 1.0556000000001842e-05, 2.7080000000040405e-06, 8.985999999995553e-06, 1.2264000000004882e-05], 'diff': [0, 5.8190000000041264e-06, 1.0430999999998247e-05, 7.486000000000992e-06, 3.7499999999968114e-06, 4.389000000000476e-06, 6.861000000003836e-06, 9.165999999997954e-06, 1.5209000000002137e-05, 4.790999999997048e-06, 1.5000000000001124e-05, 1.0208999999997137e-05, 1.0014000000002632e-05, 9.360999999999398e-06, 1.0207999999997663e-05, 7.945000000002256e-06, 9.151999999998384e-06, 1.3749999999999873e-05, 1.1666999999999927e-05, 1.0208000000004602e-05, 1.4374999999997029e-05, 7.709000000001576e-06, 3.5409999999957975e-06, 1.5431000000003248e-05, 3.54200000000221e-06, 1.3749999999999873e-05, 8.735999999995303e-06, 3.5410000000027364e-06, 3.7639999999963814e-06, 1.3125000000002718e-05, 6.667000000001866e-06, 1.1263999999996943e-05, 1.3944000000001844e-05, 1.4791999999999583e-05, 1.3972000000000984e-05, 2.4859999999959914e-06, 6.667000000001866e-06, 1.0443999999998343e-05, 7.05600000000528e-06, 9.804999999994679e-06, 1.2903000000001608e-05, 1.4222000000001234e-05, 1.4764000000000443e-05, 5.403000000001046e-06, 5.221999999999172e-06, 1.0263999999995943e-05, 1.0556000000001842e-05, 2.7080000000040405e-06, 8.985999999995553e-06, 1.2264000000004882e-05], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:52.963" endtime="20201112 09:42:52.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.953" endtime="20201112 09:42:52.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:52.980" level="INFO">${RESULT} = [{'time': 0.038818361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8190000000041264e-06, 'source_diff': 5.8190000000041264e-06}, {'time': 0.038836278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:52.972" endtime="20201112 09:42:52.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:52.998" level="INFO">${GPIO_OVERHEAD} = {'time': [0.038818361, 0.038836278, 0.038844417, 0.038860444, 0.038880444, 0.038905653, 0.038925028, 0.038943181, 0.038966083, 0.038987958, 0.039010042, 0.039029014, 0.039046306, 0.039058583, 0.039075...</msg>
<status status="PASS" starttime="20201112 09:42:52.982" endtime="20201112 09:42:52.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.009" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:53.007" endtime="20201112 09:42:53.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.014" level="INFO">VALUE: [5.8190000000041264e-06, 7.486000000000992e-06, 4.389000000000476e-06, 9.165999999997954e-06, 4.790999999997048e-06, 1.0208999999997137e-05, 9.360999999999398e-06, 7.945000000002256e-06, 1.3749999999999873e-05, 1.0208000000004602e-05, 7.709000000001576e-06, 1.5431000000003248e-05, 1.3749999999999873e-05, 3.5410000000027364e-06, 1.3125000000002718e-05, 1.1263999999996943e-05, 1.4791999999999583e-05, 2.4859999999959914e-06, 1.0443999999998343e-05, 9.804999999994679e-06, 1.4222000000001234e-05, 5.403000000001046e-06, 1.0263999999995943e-05, 2.7080000000040405e-06, 1.2264000000004882e-05]</msg>
<status status="PASS" starttime="20201112 09:42:53.011" endtime="20201112 09:42:53.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.000" endtime="20201112 09:42:53.017"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.024" endtime="20201112 09:42:53.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:53.032" endtime="20201112 09:42:53.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.028" endtime="20201112 09:42:53.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.019" endtime="20201112 09:42:53.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.485" endtime="20201112 09:42:53.058"></status>
</kw>
<msg timestamp="20201112 09:42:53.058" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.080" endtime="20201112 09:42:53.094"></status>
</kw>
<msg timestamp="20201112 09:42:53.095" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:53.075" endtime="20201112 09:42:53.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.101" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:53.097" endtime="20201112 09:42:53.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.104" endtime="20201112 09:42:53.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.068" endtime="20201112 09:42:53.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.063" endtime="20201112 09:42:53.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.127" endtime="20201112 09:42:53.445"></status>
</kw>
<msg timestamp="20201112 09:42:53.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038618722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038621847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:53.124" endtime="20201112 09:42:53.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038618722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038621847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:53.452" endtime="20201112 09:42:53.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.465" endtime="20201112 09:42:53.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.117" endtime="20201112 09:42:53.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.112" endtime="20201112 09:42:53.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.481" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:53.479" endtime="20201112 09:42:53.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.489" level="INFO">VALUE: [{'time': 0.038618722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038621847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.038631028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.180999999996997e-06, 'source_diff': 9.180999999996997e-06}, {'time': 0.038644139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3111000000003148e-05, 'source_diff': 1.3111000000003148e-05}, {'time': 0.038656653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.038664569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916000000003642e-06, 'source_diff': 7.916000000003642e-06}, {'time': 0.038675611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1041999999995833e-05, 'source_diff': 1.1041999999995833e-05}, {'time': 0.038684778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.167000000004366e-06, 'source_diff': 9.167000000004366e-06}, {'time': 0.038695403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.038710194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.479100000000011e-05, 'source_diff': 1.479100000000011e-05}, {'time': 0.038715819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.624999999995217e-06, 'source_diff': 5.624999999995217e-06}, {'time': 0.038725194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.038729167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.973000000004334e-06, 'source_diff': 3.973000000004334e-06}, {'time': 0.038734778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999995647e-06, 'source_diff': 5.610999999995647e-06}, {'time': 0.038743319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.541000000000798e-06, 'source_diff': 8.541000000000798e-06}, {'time': 0.038747486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.03875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.038755611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.038762069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.458000000000852e-06, 'source_diff': 6.458000000000852e-06}, {'time': 0.038768958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.888999999996037e-06, 'source_diff': 6.888999999996037e-06}, {'time': 0.038776236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.038784361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.125000000004656e-06, 'source_diff': 8.125000000004656e-06}, {'time': 0.038790222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999995897e-06, 'source_diff': 5.860999999995897e-06}, {'time': 0.038805417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5195000000002568e-05, 'source_diff': 1.5195000000002568e-05}, {'time': 0.038807708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2910000000014863e-06, 'source_diff': 2.2910000000014863e-06}, {'time': 0.038817306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597999999999551e-06, 'source_diff': 9.597999999999551e-06}, {'time': 0.038831681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}, {'time': 0.038842292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0611000000000648e-05, 'source_diff': 1.0611000000000648e-05}, {'time': 0.038854792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2499999999998623e-05, 'source_diff': 1.2499999999998623e-05}, {'time': 0.038862708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916000000003642e-06, 'source_diff': 7.916000000003642e-06}, {'time': 0.038868958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.038872514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.555999999994841e-06, 'source_diff': 3.555999999994841e-06}, {'time': 0.038886875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4361000000004398e-05, 'source_diff': 1.4361000000004398e-05}, {'time': 0.038892917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.041999999997771e-06, 'source_diff': 6.041999999997771e-06}, {'time': 0.038903542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.038913153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.038921958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.805000000000618e-06, 'source_diff': 8.805000000000618e-06}, {'time': 0.038929597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.639000000003726e-06, 'source_diff': 7.639000000003726e-06}, {'time': 0.038941264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1666999999999927e-05, 'source_diff': 1.1666999999999927e-05}, {'time': 0.038952542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1277999999996513e-05, 'source_diff': 1.1277999999996513e-05}, {'time': 0.038959597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.054999999998868e-06, 'source_diff': 7.054999999998868e-06}, {'time': 0.038966472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.875000000003406e-06, 'source_diff': 6.875000000003406e-06}, {'time': 0.038974403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.930999999995747e-06, 'source_diff': 7.930999999995747e-06}, {'time': 0.038979181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.77800000000389e-06, 'source_diff': 4.77800000000389e-06}, {'time': 0.038993778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.459699999999814e-05, 'source_diff': 1.459699999999814e-05}, {'time': 0.039004806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1028000000003202e-05, 'source_diff': 1.1028000000003202e-05}, {'time': 0.039018583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.377699999999954e-05, 'source_diff': 1.377699999999954e-05}, {'time': 0.039026278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.694999999995067e-06, 'source_diff': 7.694999999995067e-06}, {'time': 0.039033, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.039044389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389000000000538e-05, 'source_diff': 1.1389000000000538e-05}]</msg>
<status status="PASS" starttime="20201112 09:42:53.484" endtime="20201112 09:42:53.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.473" endtime="20201112 09:42:53.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:53.525" level="INFO">${debug-compressed} = {'time': [0.038618722, 0.038621847, 0.038631028, 0.038644139, 0.038656653, 0.038664569, 0.038675611, 0.038684778, 0.038695403, 0.038710194, 0.038715819, 0.038725194, 0.038729167, 0.038734778, 0.038743...</msg>
<status status="PASS" starttime="20201112 09:42:53.495" endtime="20201112 09:42:53.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.535" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:53.533" endtime="20201112 09:42:53.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.542" level="INFO">VALUE: {'time': [0.038618722, 0.038621847, 0.038631028, 0.038644139, 0.038656653, 0.038664569, 0.038675611, 0.038684778, 0.038695403, 0.038710194, 0.038715819, 0.038725194, 0.038729167, 0.038734778, 0.038743319, 0.038747486, 0.03875, 0.038755611, 0.038762069, 0.038768958, 0.038776236, 0.038784361, 0.038790222, 0.038805417, 0.038807708, 0.038817306, 0.038831681, 0.038842292, 0.038854792, 0.038862708, 0.038868958, 0.038872514, 0.038886875, 0.038892917, 0.038903542, 0.038913153, 0.038921958, 0.038929597, 0.038941264, 0.038952542, 0.038959597, 0.038966472, 0.038974403, 0.038979181, 0.038993778, 0.039004806, 0.039018583, 0.039026278, 0.039033, 0.039044389], 'sourcesource_diff': [0, 3.124999999999656e-06, 9.180999999996997e-06, 1.3111000000003148e-05, 1.2513999999998193e-05, 7.916000000003642e-06, 1.1041999999995833e-05, 9.167000000004366e-06, 1.0625000000000218e-05, 1.479100000000011e-05, 5.624999999995217e-06, 9.374999999998967e-06, 3.973000000004334e-06, 5.610999999995647e-06, 8.541000000000798e-06, 4.166999999999366e-06, 2.51400000000207e-06, 5.611000000002586e-06, 6.458000000000852e-06, 6.888999999996037e-06, 7.2779999999994516e-06, 8.125000000004656e-06, 5.860999999995897e-06, 1.5195000000002568e-05, 2.2910000000014863e-06, 9.597999999999551e-06, 1.4374999999997029e-05, 1.0611000000000648e-05, 1.2499999999998623e-05, 7.916000000003642e-06, 6.249999999999312e-06, 3.555999999994841e-06, 1.4361000000004398e-05, 6.041999999997771e-06, 1.0625000000000218e-05, 9.610999999999648e-06, 8.805000000000618e-06, 7.639000000003726e-06, 1.1666999999999927e-05, 1.1277999999996513e-05, 7.054999999998868e-06, 6.875000000003406e-06, 7.930999999995747e-06, 4.77800000000389e-06, 1.459699999999814e-05, 1.1028000000003202e-05, 1.377699999999954e-05, 7.694999999995067e-06, 6.722000000000672e-06, 1.1389000000000538e-05], 'diff': [0, 3.124999999999656e-06, 9.180999999996997e-06, 1.3111000000003148e-05, 1.2513999999998193e-05, 7.916000000003642e-06, 1.1041999999995833e-05, 9.167000000004366e-06, 1.0625000000000218e-05, 1.479100000000011e-05, 5.624999999995217e-06, 9.374999999998967e-06, 3.973000000004334e-06, 5.610999999995647e-06, 8.541000000000798e-06, 4.166999999999366e-06, 2.51400000000207e-06, 5.611000000002586e-06, 6.458000000000852e-06, 6.888999999996037e-06, 7.2779999999994516e-06, 8.125000000004656e-06, 5.860999999995897e-06, 1.5195000000002568e-05, 2.2910000000014863e-06, 9.597999999999551e-06, 1.4374999999997029e-05, 1.0611000000000648e-05, 1.2499999999998623e-05, 7.916000000003642e-06, 6.249999999999312e-06, 3.555999999994841e-06, 1.4361000000004398e-05, 6.041999999997771e-06, 1.0625000000000218e-05, 9.610999999999648e-06, 8.805000000000618e-06, 7.639000000003726e-06, 1.1666999999999927e-05, 1.1277999999996513e-05, 7.054999999998868e-06, 6.875000000003406e-06, 7.930999999995747e-06, 4.77800000000389e-06, 1.459699999999814e-05, 1.1028000000003202e-05, 1.377699999999954e-05, 7.694999999995067e-06, 6.722000000000672e-06, 1.1389000000000538e-05], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:53.537" endtime="20201112 09:42:53.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.527" endtime="20201112 09:42:53.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:53.554" level="INFO">${RESULT} = [{'time': 0.038621847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.038644139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:53.547" endtime="20201112 09:42:53.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:53.573" level="INFO">${GPIO_OVERHEAD} = {'time': [0.038621847, 0.038644139, 0.038664569, 0.038684778, 0.038710194, 0.038725194, 0.038734778, 0.038747486, 0.038755611, 0.038768958, 0.038784361, 0.038805417, 0.038817306, 0.038842292, 0.038862...</msg>
<status status="PASS" starttime="20201112 09:42:53.557" endtime="20201112 09:42:53.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.583" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:53.581" endtime="20201112 09:42:53.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.588" level="INFO">VALUE: [3.124999999999656e-06, 1.3111000000003148e-05, 7.916000000003642e-06, 9.167000000004366e-06, 1.479100000000011e-05, 9.374999999998967e-06, 5.610999999995647e-06, 4.166999999999366e-06, 5.611000000002586e-06, 6.888999999996037e-06, 8.125000000004656e-06, 1.5195000000002568e-05, 9.597999999999551e-06, 1.0611000000000648e-05, 7.916000000003642e-06, 3.555999999994841e-06, 6.041999999997771e-06, 9.610999999999648e-06, 7.639000000003726e-06, 1.1277999999996513e-05, 6.875000000003406e-06, 4.77800000000389e-06, 1.1028000000003202e-05, 7.694999999995067e-06, 1.1389000000000538e-05]</msg>
<status status="PASS" starttime="20201112 09:42:53.586" endtime="20201112 09:42:53.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.575" endtime="20201112 09:42:53.591"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.598" endtime="20201112 09:42:53.601"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:53.607" endtime="20201112 09:42:53.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.602" endtime="20201112 09:42:53.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.593" endtime="20201112 09:42:53.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.059" endtime="20201112 09:42:53.632"></status>
</kw>
<msg timestamp="20201112 09:42:53.633" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.655" endtime="20201112 09:42:53.668"></status>
</kw>
<msg timestamp="20201112 09:42:53.670" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:53.650" endtime="20201112 09:42:53.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.676" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:53.672" endtime="20201112 09:42:53.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.678" endtime="20201112 09:42:53.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.642" endtime="20201112 09:42:53.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.637" endtime="20201112 09:42:53.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.702" endtime="20201112 09:42:54.016"></status>
</kw>
<msg timestamp="20201112 09:42:54.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03910475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039112875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:42:53.699" endtime="20201112 09:42:54.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03910475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039112875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:42:54.023" endtime="20201112 09:42:54.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.036" endtime="20201112 09:42:54.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.691" endtime="20201112 09:42:54.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.687" endtime="20201112 09:42:54.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.053" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:54.050" endtime="20201112 09:42:54.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.061" level="INFO">VALUE: [{'time': 0.03910475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039112875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.124999999997717e-06, 'source_diff': 8.124999999997717e-06}, {'time': 0.039127889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5014000000000693e-05, 'source_diff': 1.5014000000000693e-05}, {'time': 0.039136625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.039145014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.388999999997537e-06, 'source_diff': 8.388999999997537e-06}, {'time': 0.03915725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2235999999998803e-05, 'source_diff': 1.2235999999998803e-05}, {'time': 0.039161847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.039173083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1235999999997803e-05, 'source_diff': 1.1235999999997803e-05}, {'time': 0.039179986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.903000000002546e-06, 'source_diff': 6.903000000002546e-06}, {'time': 0.039183514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.039191208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.693999999995593e-06, 'source_diff': 7.693999999995593e-06}, {'time': 0.039204542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3334000000003732e-05, 'source_diff': 1.3334000000003732e-05}, {'time': 0.039215194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0651999999999884e-05, 'source_diff': 1.0651999999999884e-05}, {'time': 0.039222889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.694999999995067e-06, 'source_diff': 7.694999999995067e-06}, {'time': 0.039230181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.29200000000596e-06, 'source_diff': 7.29200000000596e-06}, {'time': 0.039237736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.554999999999368e-06, 'source_diff': 7.554999999999368e-06}, {'time': 0.039252056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4319999999998223e-05, 'source_diff': 1.4319999999998223e-05}, {'time': 0.039260181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.124999999997717e-06, 'source_diff': 8.124999999997717e-06}, {'time': 0.039275181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000001124e-05, 'source_diff': 1.5000000000001124e-05}, {'time': 0.039284778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.039295806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1028000000003202e-05, 'source_diff': 1.1028000000003202e-05}, {'time': 0.039309556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.039313736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.039320389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.652999999995357e-06, 'source_diff': 6.652999999995357e-06}, {'time': 0.039334556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4167000000002428e-05, 'source_diff': 1.4167000000002428e-05}, {'time': 0.039340431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.875000000002406e-06, 'source_diff': 5.875000000002406e-06}, {'time': 0.039343111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.679999999997962e-06, 'source_diff': 2.679999999997962e-06}, {'time': 0.039354, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0889000000000038e-05, 'source_diff': 1.0889000000000038e-05}, {'time': 0.039364778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0778000000002952e-05, 'source_diff': 1.0778000000002952e-05}, {'time': 0.039373597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.03938375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0152999999998857e-05, 'source_diff': 1.0152999999998857e-05}, {'time': 0.039390194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.444000000001282e-06, 'source_diff': 6.444000000001282e-06}, {'time': 0.039402083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1888999999994099e-05, 'source_diff': 1.1888999999994099e-05}, {'time': 0.039408319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.039411236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9170000000050544e-06, 'source_diff': 2.9170000000050544e-06}, {'time': 0.039422278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1041999999995833e-05, 'source_diff': 1.1041999999995833e-05}, {'time': 0.039434167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1889000000001038e-05, 'source_diff': 1.1889000000001038e-05}, {'time': 0.039445194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1027000000003728e-05, 'source_diff': 1.1027000000003728e-05}, {'time': 0.039455042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847999999999801e-06, 'source_diff': 9.847999999999801e-06}, {'time': 0.039462486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.443999999995343e-06, 'source_diff': 7.443999999995343e-06}, {'time': 0.039467083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.039470014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9309999999976855e-06, 'source_diff': 2.9309999999976855e-06}, {'time': 0.039482542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2528000000004702e-05, 'source_diff': 1.2528000000004702e-05}, {'time': 0.039492528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.985999999996553e-06, 'source_diff': 9.985999999996553e-06}, {'time': 0.039498125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.597000000003016e-06, 'source_diff': 5.597000000003016e-06}, {'time': 0.039504597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.039508764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.039523542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4778000000000013e-05, 'source_diff': 1.4778000000000013e-05}, {'time': 0.039535208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1666000000000454e-05, 'source_diff': 1.1666000000000454e-05}, {'time': 0.039539583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:54.055" endtime="20201112 09:42:54.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.044" endtime="20201112 09:42:54.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:54.096" level="INFO">${debug-compressed} = {'time': [0.03910475, 0.039112875, 0.039127889, 0.039136625, 0.039145014, 0.03915725, 0.039161847, 0.039173083, 0.039179986, 0.039183514, 0.039191208, 0.039204542, 0.039215194, 0.039222889, 0.03923018...</msg>
<status status="PASS" starttime="20201112 09:42:54.066" endtime="20201112 09:42:54.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.106" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:54.104" endtime="20201112 09:42:54.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.113" level="INFO">VALUE: {'time': [0.03910475, 0.039112875, 0.039127889, 0.039136625, 0.039145014, 0.03915725, 0.039161847, 0.039173083, 0.039179986, 0.039183514, 0.039191208, 0.039204542, 0.039215194, 0.039222889, 0.039230181, 0.039237736, 0.039252056, 0.039260181, 0.039275181, 0.039284778, 0.039295806, 0.039309556, 0.039313736, 0.039320389, 0.039334556, 0.039340431, 0.039343111, 0.039354, 0.039364778, 0.039373597, 0.03938375, 0.039390194, 0.039402083, 0.039408319, 0.039411236, 0.039422278, 0.039434167, 0.039445194, 0.039455042, 0.039462486, 0.039467083, 0.039470014, 0.039482542, 0.039492528, 0.039498125, 0.039504597, 0.039508764, 0.039523542, 0.039535208, 0.039539583], 'sourcesource_diff': [0, 8.124999999997717e-06, 1.5014000000000693e-05, 8.736000000002242e-06, 8.388999999997537e-06, 1.2235999999998803e-05, 4.597000000002016e-06, 1.1235999999997803e-05, 6.903000000002546e-06, 3.52800000000264e-06, 7.693999999995593e-06, 1.3334000000003732e-05, 1.0651999999999884e-05, 7.694999999995067e-06, 7.29200000000596e-06, 7.554999999999368e-06, 1.4319999999998223e-05, 8.124999999997717e-06, 1.5000000000001124e-05, 9.597000000000078e-06, 1.1028000000003202e-05, 1.3749999999999873e-05, 4.179999999999462e-06, 6.652999999995357e-06, 1.4167000000002428e-05, 5.875000000002406e-06, 2.679999999997962e-06, 1.0889000000000038e-05, 1.0778000000002952e-05, 8.819000000000188e-06, 1.0152999999998857e-05, 6.444000000001282e-06, 1.1888999999994099e-05, 6.235999999999742e-06, 2.9170000000050544e-06, 1.1041999999995833e-05, 1.1889000000001038e-05, 1.1027000000003728e-05, 9.847999999999801e-06, 7.443999999995343e-06, 4.597000000002016e-06, 2.9309999999976855e-06, 1.2528000000004702e-05, 9.985999999996553e-06, 5.597000000003016e-06, 6.472000000000422e-06, 4.166999999999366e-06, 1.4778000000000013e-05, 1.1666000000000454e-05, 4.375000000000906e-06], 'diff': [0, 8.124999999997717e-06, 1.5014000000000693e-05, 8.736000000002242e-06, 8.388999999997537e-06, 1.2235999999998803e-05, 4.597000000002016e-06, 1.1235999999997803e-05, 6.903000000002546e-06, 3.52800000000264e-06, 7.693999999995593e-06, 1.3334000000003732e-05, 1.0651999999999884e-05, 7.694999999995067e-06, 7.29200000000596e-06, 7.554999999999368e-06, 1.4319999999998223e-05, 8.124999999997717e-06, 1.5000000000001124e-05, 9.597000000000078e-06, 1.1028000000003202e-05, 1.3749999999999873e-05, 4.179999999999462e-06, 6.652999999995357e-06, 1.4167000000002428e-05, 5.875000000002406e-06, 2.679999999997962e-06, 1.0889000000000038e-05, 1.0778000000002952e-05, 8.819000000000188e-06, 1.0152999999998857e-05, 6.444000000001282e-06, 1.1888999999994099e-05, 6.235999999999742e-06, 2.9170000000050544e-06, 1.1041999999995833e-05, 1.1889000000001038e-05, 1.1027000000003728e-05, 9.847999999999801e-06, 7.443999999995343e-06, 4.597000000002016e-06, 2.9309999999976855e-06, 1.2528000000004702e-05, 9.985999999996553e-06, 5.597000000003016e-06, 6.472000000000422e-06, 4.166999999999366e-06, 1.4778000000000013e-05, 1.1666000000000454e-05, 4.375000000000906e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:54.108" endtime="20201112 09:42:54.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.098" endtime="20201112 09:42:54.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:54.125" level="INFO">${RESULT} = [{'time': 0.039112875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.124999999997717e-06, 'source_diff': 8.124999999997717e-06}, {'time': 0.039136625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:54.117" endtime="20201112 09:42:54.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:54.143" level="INFO">${GPIO_OVERHEAD} = {'time': [0.039112875, 0.039136625, 0.03915725, 0.039173083, 0.039183514, 0.039204542, 0.039222889, 0.039237736, 0.039260181, 0.039284778, 0.039309556, 0.039320389, 0.039340431, 0.039354, 0.039373597,...</msg>
<status status="PASS" starttime="20201112 09:42:54.127" endtime="20201112 09:42:54.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.154" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:54.151" endtime="20201112 09:42:54.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.159" level="INFO">VALUE: [8.124999999997717e-06, 8.736000000002242e-06, 1.2235999999998803e-05, 1.1235999999997803e-05, 3.52800000000264e-06, 1.3334000000003732e-05, 7.694999999995067e-06, 7.554999999999368e-06, 8.124999999997717e-06, 9.597000000000078e-06, 1.3749999999999873e-05, 6.652999999995357e-06, 5.875000000002406e-06, 1.0889000000000038e-05, 8.819000000000188e-06, 6.444000000001282e-06, 6.235999999999742e-06, 1.1041999999995833e-05, 1.1027000000003728e-05, 7.443999999995343e-06, 2.9309999999976855e-06, 9.985999999996553e-06, 6.472000000000422e-06, 1.4778000000000013e-05, 4.375000000000906e-06]</msg>
<status status="PASS" starttime="20201112 09:42:54.156" endtime="20201112 09:42:54.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.145" endtime="20201112 09:42:54.162"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.168" endtime="20201112 09:42:54.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:54.177" endtime="20201112 09:42:54.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.172" endtime="20201112 09:42:54.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.164" endtime="20201112 09:42:54.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.634" endtime="20201112 09:42:54.203"></status>
</kw>
<msg timestamp="20201112 09:42:54.203" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.225" endtime="20201112 09:42:54.238"></status>
</kw>
<msg timestamp="20201112 09:42:54.239" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:54.220" endtime="20201112 09:42:54.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.246" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:54.241" endtime="20201112 09:42:54.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.248" endtime="20201112 09:42:54.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.213" endtime="20201112 09:42:54.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.208" endtime="20201112 09:42:54.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.272" endtime="20201112 09:42:54.591"></status>
</kw>
<msg timestamp="20201112 09:42:54.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038672861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038679972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:54.269" endtime="20201112 09:42:54.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038672861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038679972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:54.597" endtime="20201112 09:42:54.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.610" endtime="20201112 09:42:54.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.261" endtime="20201112 09:42:54.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.256" endtime="20201112 09:42:54.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.627" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:54.625" endtime="20201112 09:42:54.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.635" level="INFO">VALUE: [{'time': 0.038672861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038679972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.110999999997147e-06, 'source_diff': 7.110999999997147e-06}, {'time': 0.038689319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.038702667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3348000000003302e-05, 'source_diff': 1.3348000000003302e-05}, {'time': 0.038710792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.124999999997717e-06, 'source_diff': 8.124999999997717e-06}, {'time': 0.038725167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}, {'time': 0.038733931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.038742875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.944000000003782e-06, 'source_diff': 8.944000000003782e-06}, {'time': 0.038747458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.582999999995507e-06, 'source_diff': 4.582999999995507e-06}, {'time': 0.038755597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.139000000004226e-06, 'source_diff': 8.139000000004226e-06}, {'time': 0.038766222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.038771417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.038780167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.749999999994873e-06, 'source_diff': 8.749999999994873e-06}, {'time': 0.038789347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.180000000004462e-06, 'source_diff': 9.180000000004462e-06}, {'time': 0.038794806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.4589999999993255e-06, 'source_diff': 5.4589999999993255e-06}, {'time': 0.038804958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0151999999999384e-05, 'source_diff': 1.0151999999999384e-05}, {'time': 0.038808139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1809999999979355e-06, 'source_diff': 3.1809999999979355e-06}, {'time': 0.038816625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.03882975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3125000000002718e-05, 'source_diff': 1.3125000000002718e-05}, {'time': 0.038842278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2527999999997763e-05, 'source_diff': 1.2527999999997763e-05}, {'time': 0.038853722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1443999999999344e-05, 'source_diff': 1.1443999999999344e-05}, {'time': 0.038862472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.038876014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3541999999998333e-05, 'source_diff': 1.3541999999998333e-05}, {'time': 0.038884556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.038890194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.638000000002252e-06, 'source_diff': 5.638000000002252e-06}, {'time': 0.038897056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.861999999996371e-06, 'source_diff': 6.861999999996371e-06}, {'time': 0.038902264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.038913986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1721999999998733e-05, 'source_diff': 1.1721999999998733e-05}, {'time': 0.038921222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.236000000000742e-06, 'source_diff': 7.236000000000742e-06}, {'time': 0.038925819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.038928306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.487000000002404e-06, 'source_diff': 2.487000000002404e-06}, {'time': 0.038940181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1874999999994529e-05, 'source_diff': 1.1874999999994529e-05}, {'time': 0.038949139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.958000000003352e-06, 'source_diff': 8.958000000003352e-06}, {'time': 0.038962264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3125000000002718e-05, 'source_diff': 1.3125000000002718e-05}, {'time': 0.038974153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1888999999994099e-05, 'source_diff': 1.1888999999994099e-05}, {'time': 0.038982903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.038985847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9439999999977817e-06, 'source_diff': 2.9439999999977817e-06}, {'time': 0.038993528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.681000000002436e-06, 'source_diff': 7.681000000002436e-06}, {'time': 0.039008944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5415999999997265e-05, 'source_diff': 1.5415999999997265e-05}, {'time': 0.039014597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.039017486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8889999999989757e-06, 'source_diff': 2.8889999999989757e-06}, {'time': 0.039019792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.30600000000053e-06, 'source_diff': 2.30600000000053e-06}, {'time': 0.039027486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.694000000002532e-06, 'source_diff': 7.694000000002532e-06}, {'time': 0.039039194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1707999999999164e-05, 'source_diff': 1.1707999999999164e-05}, {'time': 0.039048736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.039051236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.039054153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.039067278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3124999999995779e-05, 'source_diff': 1.3124999999995779e-05}, {'time': 0.039071444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.039083944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2500000000005562e-05, 'source_diff': 1.2500000000005562e-05}]</msg>
<status status="PASS" starttime="20201112 09:42:54.629" endtime="20201112 09:42:54.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.619" endtime="20201112 09:42:54.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:54.672" level="INFO">${debug-compressed} = {'time': [0.038672861, 0.038679972, 0.038689319, 0.038702667, 0.038710792, 0.038725167, 0.038733931, 0.038742875, 0.038747458, 0.038755597, 0.038766222, 0.038771417, 0.038780167, 0.038789347, 0.038794...</msg>
<status status="PASS" starttime="20201112 09:42:54.641" endtime="20201112 09:42:54.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.682" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:54.680" endtime="20201112 09:42:54.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.689" level="INFO">VALUE: {'time': [0.038672861, 0.038679972, 0.038689319, 0.038702667, 0.038710792, 0.038725167, 0.038733931, 0.038742875, 0.038747458, 0.038755597, 0.038766222, 0.038771417, 0.038780167, 0.038789347, 0.038794806, 0.038804958, 0.038808139, 0.038816625, 0.03882975, 0.038842278, 0.038853722, 0.038862472, 0.038876014, 0.038884556, 0.038890194, 0.038897056, 0.038902264, 0.038913986, 0.038921222, 0.038925819, 0.038928306, 0.038940181, 0.038949139, 0.038962264, 0.038974153, 0.038982903, 0.038985847, 0.038993528, 0.039008944, 0.039014597, 0.039017486, 0.039019792, 0.039027486, 0.039039194, 0.039048736, 0.039051236, 0.039054153, 0.039067278, 0.039071444, 0.039083944], 'sourcesource_diff': [0, 7.110999999997147e-06, 9.346999999999828e-06, 1.3348000000003302e-05, 8.124999999997717e-06, 1.4374999999997029e-05, 8.764000000001382e-06, 8.944000000003782e-06, 4.582999999995507e-06, 8.139000000004226e-06, 1.0625000000000218e-05, 5.1949999999995056e-06, 8.749999999994873e-06, 9.180000000004462e-06, 5.4589999999993255e-06, 1.0151999999999384e-05, 3.1809999999979355e-06, 8.486000000001992e-06, 1.3125000000002718e-05, 1.2527999999997763e-05, 1.1443999999999344e-05, 8.750000000001812e-06, 1.3541999999998333e-05, 8.542000000000272e-06, 5.638000000002252e-06, 6.861999999996371e-06, 5.207999999999602e-06, 1.1721999999998733e-05, 7.236000000000742e-06, 4.597000000002016e-06, 2.487000000002404e-06, 1.1874999999994529e-05, 8.958000000003352e-06, 1.3125000000002718e-05, 1.1888999999994099e-05, 8.750000000001812e-06, 2.9439999999977817e-06, 7.681000000002436e-06, 1.5415999999997265e-05, 5.653000000001296e-06, 2.8889999999989757e-06, 2.30600000000053e-06, 7.694000000002532e-06, 1.1707999999999164e-05, 9.542000000001272e-06, 2.5000000000025002e-06, 2.9169999999981155e-06, 1.3124999999995779e-05, 4.165999999999892e-06, 1.2500000000005562e-05], 'diff': [0, 7.110999999997147e-06, 9.346999999999828e-06, 1.3348000000003302e-05, 8.124999999997717e-06, 1.4374999999997029e-05, 8.764000000001382e-06, 8.944000000003782e-06, 4.582999999995507e-06, 8.139000000004226e-06, 1.0625000000000218e-05, 5.1949999999995056e-06, 8.749999999994873e-06, 9.180000000004462e-06, 5.4589999999993255e-06, 1.0151999999999384e-05, 3.1809999999979355e-06, 8.486000000001992e-06, 1.3125000000002718e-05, 1.2527999999997763e-05, 1.1443999999999344e-05, 8.750000000001812e-06, 1.3541999999998333e-05, 8.542000000000272e-06, 5.638000000002252e-06, 6.861999999996371e-06, 5.207999999999602e-06, 1.1721999999998733e-05, 7.236000000000742e-06, 4.597000000002016e-06, 2.487000000002404e-06, 1.1874999999994529e-05, 8.958000000003352e-06, 1.3125000000002718e-05, 1.1888999999994099e-05, 8.750000000001812e-06, 2.9439999999977817e-06, 7.681000000002436e-06, 1.5415999999997265e-05, 5.653000000001296e-06, 2.8889999999989757e-06, 2.30600000000053e-06, 7.694000000002532e-06, 1.1707999999999164e-05, 9.542000000001272e-06, 2.5000000000025002e-06, 2.9169999999981155e-06, 1.3124999999995779e-05, 4.165999999999892e-06, 1.2500000000005562e-05], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:54.684" endtime="20201112 09:42:54.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.674" endtime="20201112 09:42:54.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:54.701" level="INFO">${RESULT} = [{'time': 0.038679972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.110999999997147e-06, 'source_diff': 7.110999999997147e-06}, {'time': 0.038702667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:54.694" endtime="20201112 09:42:54.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:54.720" level="INFO">${GPIO_OVERHEAD} = {'time': [0.038679972, 0.038702667, 0.038725167, 0.038742875, 0.038755597, 0.038771417, 0.038789347, 0.038804958, 0.038816625, 0.038842278, 0.038862472, 0.038884556, 0.038897056, 0.038913986, 0.038925...</msg>
<status status="PASS" starttime="20201112 09:42:54.703" endtime="20201112 09:42:54.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.730" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:54.728" endtime="20201112 09:42:54.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.735" level="INFO">VALUE: [7.110999999997147e-06, 1.3348000000003302e-05, 1.4374999999997029e-05, 8.944000000003782e-06, 8.139000000004226e-06, 5.1949999999995056e-06, 9.180000000004462e-06, 1.0151999999999384e-05, 8.486000000001992e-06, 1.2527999999997763e-05, 8.750000000001812e-06, 8.542000000000272e-06, 6.861999999996371e-06, 1.1721999999998733e-05, 4.597000000002016e-06, 1.1874999999994529e-05, 1.3125000000002718e-05, 8.750000000001812e-06, 7.681000000002436e-06, 5.653000000001296e-06, 2.30600000000053e-06, 1.1707999999999164e-05, 2.5000000000025002e-06, 1.3124999999995779e-05, 1.2500000000005562e-05]</msg>
<status status="PASS" starttime="20201112 09:42:54.732" endtime="20201112 09:42:54.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.722" endtime="20201112 09:42:54.738"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.745" endtime="20201112 09:42:54.748"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:54.753" endtime="20201112 09:42:54.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.749" endtime="20201112 09:42:54.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.740" endtime="20201112 09:42:54.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.204" endtime="20201112 09:42:54.779"></status>
</kw>
<msg timestamp="20201112 09:42:54.779" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.801" endtime="20201112 09:42:54.815"></status>
</kw>
<msg timestamp="20201112 09:42:54.816" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:54.796" endtime="20201112 09:42:54.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.822" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:54.818" endtime="20201112 09:42:54.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.825" endtime="20201112 09:42:54.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.789" endtime="20201112 09:42:54.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.784" endtime="20201112 09:42:54.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.848" endtime="20201112 09:42:55.164"></status>
</kw>
<msg timestamp="20201112 09:42:55.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038727153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038742153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:54.845" endtime="20201112 09:42:55.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038727153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038742153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.170" endtime="20201112 09:42:55.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.183" endtime="20201112 09:42:55.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.838" endtime="20201112 09:42:55.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.833" endtime="20201112 09:42:55.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.200" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:55.198" endtime="20201112 09:42:55.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.208" level="INFO">VALUE: [{'time': 0.038727153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038742153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000001124e-05, 'source_diff': 1.5000000000001124e-05}, {'time': 0.038753625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.038769042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.541699999999674e-05, 'source_diff': 1.541699999999674e-05}, {'time': 0.038778486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.444000000004282e-06, 'source_diff': 9.444000000004282e-06}, {'time': 0.038786958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.472000000002422e-06, 'source_diff': 8.472000000002422e-06}, {'time': 0.038802167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5208999999995199e-05, 'source_diff': 1.5208999999995199e-05}, {'time': 0.038811792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.038817167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.038819875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7079999999971016e-06, 'source_diff': 2.7079999999971016e-06}, {'time': 0.038828417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.038837375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.958000000003352e-06, 'source_diff': 8.958000000003352e-06}, {'time': 0.038841986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.038852806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0819999999994723e-05, 'source_diff': 1.0819999999994723e-05}, {'time': 0.038865917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3111000000003148e-05, 'source_diff': 1.3111000000003148e-05}, {'time': 0.038869458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5410000000027364e-06, 'source_diff': 3.5410000000027364e-06}, {'time': 0.038880306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0848000000000801e-05, 'source_diff': 1.0848000000000801e-05}, {'time': 0.038887819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.512999999993719e-06, 'source_diff': 7.512999999993719e-06}, {'time': 0.038901806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3987000000000027e-05, 'source_diff': 1.3987000000000027e-05}, {'time': 0.038916972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5166000000003954e-05, 'source_diff': 1.5166000000003954e-05}, {'time': 0.038932389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.541699999999674e-05, 'source_diff': 1.541699999999674e-05}, {'time': 0.038947597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5208000000002664e-05, 'source_diff': 1.5208000000002664e-05}, {'time': 0.038960792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3195000000000567e-05, 'source_diff': 1.3195000000000567e-05}, {'time': 0.038968847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.054999999999868e-06, 'source_diff': 8.054999999999868e-06}, {'time': 0.038976972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.124999999997717e-06, 'source_diff': 8.124999999997717e-06}, {'time': 0.038990514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3541999999998333e-05, 'source_diff': 1.3541999999998333e-05}, {'time': 0.039003028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2514000000005132e-05, 'source_diff': 1.2514000000005132e-05}, {'time': 0.039014486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.039028042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3555999999997903e-05, 'source_diff': 1.3555999999997903e-05}, {'time': 0.039037194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.151999999998384e-06, 'source_diff': 9.151999999998384e-06}, {'time': 0.039044069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.875000000003406e-06, 'source_diff': 6.875000000003406e-06}, {'time': 0.039050333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.039061597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1264000000003882e-05, 'source_diff': 1.1264000000003882e-05}, {'time': 0.039070319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.721999999995733e-06, 'source_diff': 8.721999999995733e-06}, {'time': 0.0390795, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000003936e-06, 'source_diff': 9.181000000003936e-06}, {'time': 0.039081778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.277999999994451e-06, 'source_diff': 2.277999999994451e-06}, {'time': 0.039084486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7080000000040405e-06, 'source_diff': 2.7080000000040405e-06}, {'time': 0.039087611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.039092208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.039106569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4360999999997459e-05, 'source_diff': 1.4360999999997459e-05}, {'time': 0.039113458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888999999996037e-06, 'source_diff': 6.888999999996037e-06}, {'time': 0.039115944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4860000000029303e-06, 'source_diff': 2.4860000000029303e-06}, {'time': 0.039129486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3541999999998333e-05, 'source_diff': 1.3541999999998333e-05}, {'time': 0.039139361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.039141792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4310000000041243e-06, 'source_diff': 2.4310000000041243e-06}, {'time': 0.039144083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2910000000014863e-06, 'source_diff': 2.2910000000014863e-06}, {'time': 0.03915825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4166999999995489e-05, 'source_diff': 1.4166999999995489e-05}, {'time': 0.039171583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3333000000004258e-05, 'source_diff': 1.3333000000004258e-05}, {'time': 0.039180333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.749999999994873e-06, 'source_diff': 8.749999999994873e-06}, {'time': 0.039187639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.30600000000553e-06, 'source_diff': 7.30600000000553e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:55.203" endtime="20201112 09:42:55.211"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.192" endtime="20201112 09:42:55.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:55.244" level="INFO">${debug-compressed} = {'time': [0.038727153, 0.038742153, 0.038753625, 0.038769042, 0.038778486, 0.038786958, 0.038802167, 0.038811792, 0.038817167, 0.038819875, 0.038828417, 0.038837375, 0.038841986, 0.038852806, 0.038865...</msg>
<status status="PASS" starttime="20201112 09:42:55.214" endtime="20201112 09:42:55.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.253" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:55.251" endtime="20201112 09:42:55.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.261" level="INFO">VALUE: {'time': [0.038727153, 0.038742153, 0.038753625, 0.038769042, 0.038778486, 0.038786958, 0.038802167, 0.038811792, 0.038817167, 0.038819875, 0.038828417, 0.038837375, 0.038841986, 0.038852806, 0.038865917, 0.038869458, 0.038880306, 0.038887819, 0.038901806, 0.038916972, 0.038932389, 0.038947597, 0.038960792, 0.038968847, 0.038976972, 0.038990514, 0.039003028, 0.039014486, 0.039028042, 0.039037194, 0.039044069, 0.039050333, 0.039061597, 0.039070319, 0.0390795, 0.039081778, 0.039084486, 0.039087611, 0.039092208, 0.039106569, 0.039113458, 0.039115944, 0.039129486, 0.039139361, 0.039141792, 0.039144083, 0.03915825, 0.039171583, 0.039180333, 0.039187639], 'sourcesource_diff': [0, 1.5000000000001124e-05, 1.1471999999998483e-05, 1.541699999999674e-05, 9.444000000004282e-06, 8.472000000002422e-06, 1.5208999999995199e-05, 9.624999999999218e-06, 5.375000000001906e-06, 2.7079999999971016e-06, 8.542000000000272e-06, 8.958000000003352e-06, 4.611000000001586e-06, 1.0819999999994723e-05, 1.3111000000003148e-05, 3.5410000000027364e-06, 1.0848000000000801e-05, 7.512999999993719e-06, 1.3987000000000027e-05, 1.5166000000003954e-05, 1.541699999999674e-05, 1.5208000000002664e-05, 1.3195000000000567e-05, 8.054999999999868e-06, 8.124999999997717e-06, 1.3541999999998333e-05, 1.2514000000005132e-05, 1.1457999999998913e-05, 1.3555999999997903e-05, 9.151999999998384e-06, 6.875000000003406e-06, 6.2639999999988816e-06, 1.1264000000003882e-05, 8.721999999995733e-06, 9.181000000003936e-06, 2.277999999994451e-06, 2.7080000000040405e-06, 3.124999999999656e-06, 4.597000000002016e-06, 1.4360999999997459e-05, 6.888999999996037e-06, 2.4860000000029303e-06, 1.3541999999998333e-05, 9.874999999999468e-06, 2.4310000000041243e-06, 2.2910000000014863e-06, 1.4166999999995489e-05, 1.3333000000004258e-05, 8.749999999994873e-06, 7.30600000000553e-06], 'diff': [0, 1.5000000000001124e-05, 1.1471999999998483e-05, 1.541699999999674e-05, 9.444000000004282e-06, 8.472000000002422e-06, 1.5208999999995199e-05, 9.624999999999218e-06, 5.375000000001906e-06, 2.7079999999971016e-06, 8.542000000000272e-06, 8.958000000003352e-06, 4.611000000001586e-06, 1.0819999999994723e-05, 1.3111000000003148e-05, 3.5410000000027364e-06, 1.0848000000000801e-05, 7.512999999993719e-06, 1.3987000000000027e-05, 1.5166000000003954e-05, 1.541699999999674e-05, 1.5208000000002664e-05, 1.3195000000000567e-05, 8.054999999999868e-06, 8.124999999997717e-06, 1.3541999999998333e-05, 1.2514000000005132e-05, 1.1457999999998913e-05, 1.3555999999997903e-05, 9.151999999998384e-06, 6.875000000003406e-06, 6.2639999999988816e-06, 1.1264000000003882e-05, 8.721999999995733e-06, 9.181000000003936e-06, 2.277999999994451e-06, 2.7080000000040405e-06, 3.124999999999656e-06, 4.597000000002016e-06, 1.4360999999997459e-05, 6.888999999996037e-06, 2.4860000000029303e-06, 1.3541999999998333e-05, 9.874999999999468e-06, 2.4310000000041243e-06, 2.2910000000014863e-06, 1.4166999999995489e-05, 1.3333000000004258e-05, 8.749999999994873e-06, 7.30600000000553e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:55.256" endtime="20201112 09:42:55.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.246" endtime="20201112 09:42:55.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:55.273" level="INFO">${RESULT} = [{'time': 0.038742153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000001124e-05, 'source_diff': 1.5000000000001124e-05}, {'time': 0.038769042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:55.265" endtime="20201112 09:42:55.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:55.291" level="INFO">${GPIO_OVERHEAD} = {'time': [0.038742153, 0.038769042, 0.038786958, 0.038811792, 0.038819875, 0.038837375, 0.038852806, 0.038869458, 0.038887819, 0.038916972, 0.038947597, 0.038968847, 0.038990514, 0.039014486, 0.039037...</msg>
<status status="PASS" starttime="20201112 09:42:55.275" endtime="20201112 09:42:55.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.302" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:55.299" endtime="20201112 09:42:55.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.307" level="INFO">VALUE: [1.5000000000001124e-05, 1.541699999999674e-05, 8.472000000002422e-06, 9.624999999999218e-06, 2.7079999999971016e-06, 8.958000000003352e-06, 1.0819999999994723e-05, 3.5410000000027364e-06, 7.512999999993719e-06, 1.5166000000003954e-05, 1.5208000000002664e-05, 8.054999999999868e-06, 1.3541999999998333e-05, 1.1457999999998913e-05, 9.151999999998384e-06, 6.2639999999988816e-06, 8.721999999995733e-06, 2.277999999994451e-06, 3.124999999999656e-06, 1.4360999999997459e-05, 2.4860000000029303e-06, 9.874999999999468e-06, 2.2910000000014863e-06, 1.3333000000004258e-05, 7.30600000000553e-06]</msg>
<status status="PASS" starttime="20201112 09:42:55.304" endtime="20201112 09:42:55.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.293" endtime="20201112 09:42:55.310"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.316" endtime="20201112 09:42:55.319"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:55.325" endtime="20201112 09:42:55.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.320" endtime="20201112 09:42:55.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.312" endtime="20201112 09:42:55.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.781" endtime="20201112 09:42:55.351"></status>
</kw>
<msg timestamp="20201112 09:42:55.351" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.373" endtime="20201112 09:42:55.386"></status>
</kw>
<msg timestamp="20201112 09:42:55.387" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.368" endtime="20201112 09:42:55.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.393" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.389" endtime="20201112 09:42:55.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.396" endtime="20201112 09:42:55.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.361" endtime="20201112 09:42:55.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.356" endtime="20201112 09:42:55.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.420" endtime="20201112 09:42:55.695"></status>
</kw>
<msg timestamp="20201112 09:42:55.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038827153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038837792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.416" endtime="20201112 09:42:55.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038827153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038837792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.698" endtime="20201112 09:42:55.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.704" endtime="20201112 09:42:55.706"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.409" endtime="20201112 09:42:55.706"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.404" endtime="20201112 09:42:55.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.712" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:55.711" endtime="20201112 09:42:55.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.715" level="INFO">VALUE: [{'time': 0.038827153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038837792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.038851764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3971999999994045e-05, 'source_diff': 1.3971999999994045e-05}, {'time': 0.038863208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1444000000006282e-05, 'source_diff': 1.1444000000006282e-05}, {'time': 0.038871958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.749999999994873e-06, 'source_diff': 8.749999999994873e-06}, {'time': 0.038877583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.038891958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}, {'time': 0.038906972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5014000000000693e-05, 'source_diff': 1.5014000000000693e-05}, {'time': 0.038911958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9860000000054305e-06, 'source_diff': 4.9860000000054305e-06}, {'time': 0.038914667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7089999999965753e-06, 'source_diff': 2.7089999999965753e-06}, {'time': 0.03891925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.583000000002446e-06, 'source_diff': 4.583000000002446e-06}, {'time': 0.038933639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4388999999996599e-05, 'source_diff': 1.4388999999996599e-05}, {'time': 0.038939667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.038952583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2916000000001704e-05, 'source_diff': 1.2916000000001704e-05}, {'time': 0.0389605, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.917000000003116e-06, 'source_diff': 7.917000000003116e-06}, {'time': 0.038965931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.038970514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.582999999995507e-06, 'source_diff': 4.582999999995507e-06}, {'time': 0.038973028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.038980514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.038989083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.038995514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.431000000001186e-06, 'source_diff': 6.431000000001186e-06}, {'time': 0.03901075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5235999999994865e-05, 'source_diff': 1.5235999999994865e-05}, {'time': 0.039013014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.26400000000182e-06, 'source_diff': 2.26400000000182e-06}, {'time': 0.039023639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.039026139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.039040097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3958000000001414e-05, 'source_diff': 1.3958000000001414e-05}, {'time': 0.039043431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3340000000006698e-06, 'source_diff': 3.3340000000006698e-06}, {'time': 0.039055306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1874999999994529e-05, 'source_diff': 1.1874999999994529e-05}, {'time': 0.039060514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.039063444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9300000000051507e-06, 'source_diff': 2.9300000000051507e-06}, {'time': 0.039077819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}, {'time': 0.039081139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3200000000011e-06, 'source_diff': 3.3200000000011e-06}, {'time': 0.039089681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.039100528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.039103875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.039107194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3189999999946873e-06, 'source_diff': 3.3189999999946873e-06}, {'time': 0.039120319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3125000000002718e-05, 'source_diff': 1.3125000000002718e-05}, {'time': 0.039123486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1669999999983656e-06, 'source_diff': 3.1669999999983656e-06}, {'time': 0.039133667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180999999997997e-05, 'source_diff': 1.0180999999997997e-05}, {'time': 0.039147819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4152000000003384e-05, 'source_diff': 1.4152000000003384e-05}, {'time': 0.039153653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833999999996231e-06, 'source_diff': 5.833999999996231e-06}, {'time': 0.039163028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.375000000005906e-06, 'source_diff': 9.375000000005906e-06}, {'time': 0.039171389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.039178028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.638999999995787e-06, 'source_diff': 6.638999999995787e-06}, {'time': 0.039184917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.889000000002976e-06, 'source_diff': 6.889000000002976e-06}, {'time': 0.039193236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.039200528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.039213028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2499999999998623e-05, 'source_diff': 1.2499999999998623e-05}, {'time': 0.039220319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.290999999999548e-06, 'source_diff': 7.290999999999548e-06}, {'time': 0.039226167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.84800000000274e-06, 'source_diff': 5.84800000000274e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:55.713" endtime="20201112 09:42:55.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.708" endtime="20201112 09:42:55.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:55.731" level="INFO">${debug-compressed} = {'time': [0.038827153, 0.038837792, 0.038851764, 0.038863208, 0.038871958, 0.038877583, 0.038891958, 0.038906972, 0.038911958, 0.038914667, 0.03891925, 0.038933639, 0.038939667, 0.038952583, 0.0389605...</msg>
<status status="PASS" starttime="20201112 09:42:55.718" endtime="20201112 09:42:55.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.736" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:55.735" endtime="20201112 09:42:55.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.739" level="INFO">VALUE: {'time': [0.038827153, 0.038837792, 0.038851764, 0.038863208, 0.038871958, 0.038877583, 0.038891958, 0.038906972, 0.038911958, 0.038914667, 0.03891925, 0.038933639, 0.038939667, 0.038952583, 0.0389605, 0.038965931, 0.038970514, 0.038973028, 0.038980514, 0.038989083, 0.038995514, 0.03901075, 0.039013014, 0.039023639, 0.039026139, 0.039040097, 0.039043431, 0.039055306, 0.039060514, 0.039063444, 0.039077819, 0.039081139, 0.039089681, 0.039100528, 0.039103875, 0.039107194, 0.039120319, 0.039123486, 0.039133667, 0.039147819, 0.039153653, 0.039163028, 0.039171389, 0.039178028, 0.039184917, 0.039193236, 0.039200528, 0.039213028, 0.039220319, 0.039226167], 'sourcesource_diff': [0, 1.0638999999999788e-05, 1.3971999999994045e-05, 1.1444000000006282e-05, 8.749999999994873e-06, 5.625000000002156e-06, 1.4374999999997029e-05, 1.5014000000000693e-05, 4.9860000000054305e-06, 2.7089999999965753e-06, 4.583000000002446e-06, 1.4388999999996599e-05, 6.0279999999982015e-06, 1.2916000000001704e-05, 7.917000000003116e-06, 5.431000000000186e-06, 4.582999999995507e-06, 2.51400000000207e-06, 7.486000000000992e-06, 8.568999999999938e-06, 6.431000000001186e-06, 1.5235999999994865e-05, 2.26400000000182e-06, 1.0625000000000218e-05, 2.5000000000025002e-06, 1.3958000000001414e-05, 3.3340000000006698e-06, 1.1874999999994529e-05, 5.207999999999602e-06, 2.9300000000051507e-06, 1.4374999999997029e-05, 3.3200000000011e-06, 8.542000000000272e-06, 1.0847000000001328e-05, 3.347000000000766e-06, 3.3189999999946873e-06, 1.3125000000002718e-05, 3.1669999999983656e-06, 1.0180999999997997e-05, 1.4152000000003384e-05, 5.833999999996231e-06, 9.375000000005906e-06, 8.360999999998397e-06, 6.638999999995787e-06, 6.889000000002976e-06, 8.318999999999688e-06, 7.2919999999990215e-06, 1.2499999999998623e-05, 7.290999999999548e-06, 5.84800000000274e-06], 'diff': [0, 1.0638999999999788e-05, 1.3971999999994045e-05, 1.1444000000006282e-05, 8.749999999994873e-06, 5.625000000002156e-06, 1.4374999999997029e-05, 1.5014000000000693e-05, 4.9860000000054305e-06, 2.7089999999965753e-06, 4.583000000002446e-06, 1.4388999999996599e-05, 6.0279999999982015e-06, 1.2916000000001704e-05, 7.917000000003116e-06, 5.431000000000186e-06, 4.582999999995507e-06, 2.51400000000207e-06, 7.486000000000992e-06, 8.568999999999938e-06, 6.431000000001186e-06, 1.5235999999994865e-05, 2.26400000000182e-06, 1.0625000000000218e-05, 2.5000000000025002e-06, 1.3958000000001414e-05, 3.3340000000006698e-06, 1.1874999999994529e-05, 5.207999999999602e-06, 2.9300000000051507e-06, 1.4374999999997029e-05, 3.3200000000011e-06, 8.542000000000272e-06, 1.0847000000001328e-05, 3.347000000000766e-06, 3.3189999999946873e-06, 1.3125000000002718e-05, 3.1669999999983656e-06, 1.0180999999997997e-05, 1.4152000000003384e-05, 5.833999999996231e-06, 9.375000000005906e-06, 8.360999999998397e-06, 6.638999999995787e-06, 6.889000000002976e-06, 8.318999999999688e-06, 7.2919999999990215e-06, 1.2499999999998623e-05, 7.290999999999548e-06, 5.84800000000274e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:55.737" endtime="20201112 09:42:55.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.732" endtime="20201112 09:42:55.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:55.745" level="INFO">${RESULT} = [{'time': 0.038837792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.038863208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:55.741" endtime="20201112 09:42:55.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:55.753" level="INFO">${GPIO_OVERHEAD} = {'time': [0.038837792, 0.038863208, 0.038877583, 0.038906972, 0.038914667, 0.038933639, 0.038952583, 0.038965931, 0.038973028, 0.038989083, 0.03901075, 0.039023639, 0.039040097, 0.039055306, 0.0390634...</msg>
<status status="PASS" starttime="20201112 09:42:55.746" endtime="20201112 09:42:55.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.758" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:55.757" endtime="20201112 09:42:55.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.761" level="INFO">VALUE: [1.0638999999999788e-05, 1.1444000000006282e-05, 5.625000000002156e-06, 1.5014000000000693e-05, 2.7089999999965753e-06, 1.4388999999996599e-05, 1.2916000000001704e-05, 5.431000000000186e-06, 2.51400000000207e-06, 8.568999999999938e-06, 1.5235999999994865e-05, 1.0625000000000218e-05, 1.3958000000001414e-05, 1.1874999999994529e-05, 2.9300000000051507e-06, 3.3200000000011e-06, 1.0847000000001328e-05, 3.3189999999946873e-06, 3.1669999999983656e-06, 1.4152000000003384e-05, 9.375000000005906e-06, 6.638999999995787e-06, 8.318999999999688e-06, 1.2499999999998623e-05, 5.84800000000274e-06]</msg>
<status status="PASS" starttime="20201112 09:42:55.759" endtime="20201112 09:42:55.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.754" endtime="20201112 09:42:55.762"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.765" endtime="20201112 09:42:55.766"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:55.769" endtime="20201112 09:42:55.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.767" endtime="20201112 09:42:55.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.763" endtime="20201112 09:42:55.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.352" endtime="20201112 09:42:55.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.752" endtime="20201112 09:42:55.791"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:55.796" endtime="20201112 09:42:55.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.794" endtime="20201112 09:42:55.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.792" endtime="20201112 09:42:55.816"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:44.577" endtime="20201112 09:42:55.817" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:55.826" endtime="20201112 09:42:55.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.824" endtime="20201112 09:42:55.847"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.863" endtime="20201112 09:42:55.888"></status>
</kw>
<msg timestamp="20201112 09:42:55.889" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.861" endtime="20201112 09:42:55.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.896" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.891" endtime="20201112 09:42:55.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.903" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:55.898" endtime="20201112 09:42:55.903"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:55.858" endtime="20201112 09:42:55.905"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:55.855" endtime="20201112 09:42:55.907"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.854" endtime="20201112 09:42:55.908"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:55.916" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:55.914" endtime="20201112 09:42:55.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.910" endtime="20201112 09:42:55.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.853" endtime="20201112 09:42:55.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.852" endtime="20201112 09:42:55.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.919" endtime="20201112 09:42:55.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.850" endtime="20201112 09:42:55.924"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.847" endtime="20201112 09:42:55.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.822" endtime="20201112 09:42:55.926"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 09:42:55.931" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.952" endtime="20201112 09:42:55.969"></status>
</kw>
<msg timestamp="20201112 09:42:55.970" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.948" endtime="20201112 09:42:55.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.976" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.972" endtime="20201112 09:42:55.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.979" endtime="20201112 09:42:55.983"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.941" endtime="20201112 09:42:55.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.936" endtime="20201112 09:42:55.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.003" endtime="20201112 09:42:56.346"></status>
</kw>
<msg timestamp="20201112 09:42:56.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.120054736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.120056375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.999" endtime="20201112 09:42:56.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.120054736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.120056375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:56.355" endtime="20201112 09:42:56.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.375" endtime="20201112 09:42:56.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.992" endtime="20201112 09:42:56.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.987" endtime="20201112 09:42:56.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:56.392" level="INFO">${RESULT} = [{'time': 0.120056375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6390000000116034e-06, 'source_diff': 1.6390000000116034e-06}, {'time': 0.120060819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:56.383" endtime="20201112 09:42:56.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:56.425" level="INFO">${OVERHEAD} = {'time': [0.120056375, 0.120060819, 0.120066347, 0.120075222, 0.120080514, 0.120091264, 0.120095792, 0.120111319, 0.120124083, 0.120140431, 0.120151972, 0.120160417, 0.120174903, 0.120182278, 0.120189...</msg>
<status status="PASS" starttime="20201112 09:42:56.394" endtime="20201112 09:42:56.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.436" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:56.433" endtime="20201112 09:42:56.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.441" level="INFO">VALUE: [1.6390000000116034e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6529999999903566e-06, 1.6250000000050946e-06, 1.6109999999985858e-06, 1.695000000009883e-06, 1.7079999999891626e-06, 1.6520000000047608e-06, 1.6530000000042344e-06, 1.5689999999929372e-06, 1.6390000000116034e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.582999999999446e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.6669999999968654e-06, 1.6669999999968654e-06, 1.6249999999912168e-06, 1.5970000000059548e-06, 1.6669999999968654e-06, 1.6390000000116034e-06, 1.6389999999977256e-06, 1.6390000000116034e-06, 1.6109999999985858e-06, 1.582999999999446e-06, 1.6659999999973918e-06, 1.6390000000116034e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6109999999985858e-06, 1.6250000000050946e-06, 1.637999999998252e-06, 1.6250000000050946e-06, 1.6530000000042344e-06, 1.5970000000059548e-06, 1.6109999999985858e-06, 1.6669999999968654e-06, 1.6389999999977256e-06, 1.582999999999446e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.7079999999891626e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6250000000050946e-06]</msg>
<status status="PASS" starttime="20201112 09:42:56.438" endtime="20201112 09:42:56.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.427" endtime="20201112 09:42:56.444"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.450" endtime="20201112 09:42:56.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:56.459" endtime="20201112 09:42:56.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.454" endtime="20201112 09:42:56.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.446" endtime="20201112 09:42:56.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.932" endtime="20201112 09:42:56.485"></status>
</kw>
<msg timestamp="20201112 09:42:56.486" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.508" endtime="20201112 09:42:56.523"></status>
</kw>
<msg timestamp="20201112 09:42:56.524" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.504" endtime="20201112 09:42:56.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.530" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.526" endtime="20201112 09:42:56.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.533" endtime="20201112 09:42:56.537"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.497" endtime="20201112 09:42:56.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.491" endtime="20201112 09:42:56.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.559" endtime="20201112 09:42:56.892"></status>
</kw>
<msg timestamp="20201112 09:42:56.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040791292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040792917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:56.555" endtime="20201112 09:42:56.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040791292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040792917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:56.902" endtime="20201112 09:42:56.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.921" endtime="20201112 09:42:56.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.546" endtime="20201112 09:42:56.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.541" endtime="20201112 09:42:56.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:56.939" level="INFO">${RESULT} = [{'time': 0.040792917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.040806556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:56.930" endtime="20201112 09:42:56.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:56.970" level="INFO">${OVERHEAD} = {'time': [0.040792917, 0.040806556, 0.040811444, 0.040815319, 0.04082875, 0.040841361, 0.040855, 0.040868292, 0.040872278, 0.040876153, 0.040892736, 0.040902167, 0.040913958, 0.040925764, 0.040933972,...</msg>
<status status="PASS" starttime="20201112 09:42:56.941" endtime="20201112 09:42:56.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.981" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:56.978" endtime="20201112 09:42:56.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.986" level="INFO">VALUE: [1.6249999999981557e-06, 1.6249999999981557e-06, 1.5969999999990159e-06, 1.6520000000047608e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6950000000029442e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.5980000000054284e-06, 1.6389999999977256e-06, 1.6670000000038043e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6110000000055247e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.5839999999989196e-06, 1.6249999999981557e-06, 1.6519999999978219e-06, 1.6390000000046645e-06, 1.6250000000050946e-06, 1.6670000000038043e-06, 1.6390000000046645e-06, 1.709000000002514e-06, 1.582999999999446e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.568999999999876e-06, 1.6249999999981557e-06, 1.6800000000039006e-06, 1.6390000000046645e-06, 1.6109999999985858e-06, 1.637999999998252e-06, 1.6529999999972955e-06]</msg>
<status status="PASS" starttime="20201112 09:42:56.983" endtime="20201112 09:42:56.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.972" endtime="20201112 09:42:56.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.995" endtime="20201112 09:42:56.999"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:57.005" endtime="20201112 09:42:57.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.000" endtime="20201112 09:42:57.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.991" endtime="20201112 09:42:57.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.488" endtime="20201112 09:42:57.030"></status>
</kw>
<msg timestamp="20201112 09:42:57.031" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.051" endtime="20201112 09:42:57.067"></status>
</kw>
<msg timestamp="20201112 09:42:57.068" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.047" endtime="20201112 09:42:57.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.074" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.070" endtime="20201112 09:42:57.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.076" endtime="20201112 09:42:57.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.040" endtime="20201112 09:42:57.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.035" endtime="20201112 09:42:57.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.100" endtime="20201112 09:42:57.437"></status>
</kw>
<msg timestamp="20201112 09:42:57.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038921861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038923542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:57.097" endtime="20201112 09:42:57.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038921861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038923542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:57.447" endtime="20201112 09:42:57.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.467" endtime="20201112 09:42:57.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.089" endtime="20201112 09:42:57.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.085" endtime="20201112 09:42:57.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:57.484" level="INFO">${RESULT} = [{'time': 0.038923542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999964353e-06, 'source_diff': 1.6809999999964353e-06}, {'time': 0.038939861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:57.475" endtime="20201112 09:42:57.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:57.516" level="INFO">${OVERHEAD} = {'time': [0.038923542, 0.038939861, 0.038956, 0.038965278, 0.038970042, 0.038975708, 0.038988917, 0.039004028, 0.039017264, 0.039021542, 0.039032069, 0.039038014, 0.039046236, 0.039058431, 0.039068319...</msg>
<status status="PASS" starttime="20201112 09:42:57.487" endtime="20201112 09:42:57.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.527" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:57.524" endtime="20201112 09:42:57.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.533" level="INFO">VALUE: [1.6809999999964353e-06, 1.6389999999977256e-06, 1.582999999999446e-06, 1.6389999999977256e-06, 1.709000000002514e-06, 1.6389999999977256e-06, 1.5420000000002099e-06, 1.6250000000050946e-06, 1.582999999999446e-06, 1.6389999999977256e-06, 1.6380000000051909e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6119999999980594e-06, 1.582999999999446e-06, 1.582999999999446e-06, 1.582999999999446e-06, 1.6249999999981557e-06, 1.5410000000007362e-06, 1.6390000000046645e-06, 1.6250000000050946e-06, 1.6390000000046645e-06, 1.6110000000055247e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6520000000047608e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.6110000000055247e-06, 1.6390000000046645e-06, 1.6109999999985858e-06, 1.6380000000051909e-06, 1.6109999999985858e-06, 1.6530000000042344e-06, 1.6109999999985858e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.5970000000059548e-06, 1.6529999999972955e-06, 1.6530000000042344e-06]</msg>
<status status="PASS" starttime="20201112 09:42:57.529" endtime="20201112 09:42:57.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.518" endtime="20201112 09:42:57.540"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.547" endtime="20201112 09:42:57.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:57.555" endtime="20201112 09:42:57.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.551" endtime="20201112 09:42:57.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.542" endtime="20201112 09:42:57.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.032" endtime="20201112 09:42:57.581"></status>
</kw>
<msg timestamp="20201112 09:42:57.582" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.602" endtime="20201112 09:42:57.617"></status>
</kw>
<msg timestamp="20201112 09:42:57.618" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.598" endtime="20201112 09:42:57.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.624" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.620" endtime="20201112 09:42:57.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.627" endtime="20201112 09:42:57.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.591" endtime="20201112 09:42:57.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.586" endtime="20201112 09:42:57.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.651" endtime="20201112 09:42:57.993"></status>
</kw>
<msg timestamp="20201112 09:42:58.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038613569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038615222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:57.647" endtime="20201112 09:42:58.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038613569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038615222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:58.003" endtime="20201112 09:42:58.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.023" endtime="20201112 09:42:58.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.640" endtime="20201112 09:42:58.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.635" endtime="20201112 09:42:58.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:58.041" level="INFO">${RESULT} = [{'time': 0.038615222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.038619056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:58.032" endtime="20201112 09:42:58.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:58.072" level="INFO">${OVERHEAD} = {'time': [0.038615222, 0.038619056, 0.038622903, 0.038635111, 0.038644569, 0.038656986, 0.038662319, 0.038676986, 0.038686875, 0.038701333, 0.038714972, 0.038725097, 0.038736903, 0.038741764, 0.038757...</msg>
<status status="PASS" starttime="20201112 09:42:58.043" endtime="20201112 09:42:58.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.082" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:58.080" endtime="20201112 09:42:58.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.088" level="INFO">VALUE: [1.6529999999972955e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6659999999973918e-06, 1.6529999999972955e-06, 1.568999999999876e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6110000000055247e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1.5549999999933672e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.5550000000003061e-06, 1.5980000000054284e-06, 1.6809999999964353e-06, 1.6249999999981557e-06, 1.568999999999876e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6110000000055247e-06, 1.6249999999981557e-06, 1.568999999999876e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.5699999999993497e-06, 1.6530000000042344e-06, 1.6519999999978219e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6110000000055247e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6390000000046645e-06]</msg>
<status status="PASS" starttime="20201112 09:42:58.085" endtime="20201112 09:42:58.089"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.074" endtime="20201112 09:42:58.091"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.097" endtime="20201112 09:42:58.100"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:58.106" endtime="20201112 09:42:58.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.102" endtime="20201112 09:42:58.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.093" endtime="20201112 09:42:58.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.583" endtime="20201112 09:42:58.132"></status>
</kw>
<msg timestamp="20201112 09:42:58.132" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.152" endtime="20201112 09:42:58.167"></status>
</kw>
<msg timestamp="20201112 09:42:58.168" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.149" endtime="20201112 09:42:58.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.175" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.171" endtime="20201112 09:42:58.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.177" endtime="20201112 09:42:58.181"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.142" endtime="20201112 09:42:58.183"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.137" endtime="20201112 09:42:58.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.201" endtime="20201112 09:42:58.535"></status>
</kw>
<msg timestamp="20201112 09:42:58.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038095764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038097389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:58.197" endtime="20201112 09:42:58.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038095764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038097389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:58.545" endtime="20201112 09:42:58.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.566" endtime="20201112 09:42:58.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.190" endtime="20201112 09:42:58.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.185" endtime="20201112 09:42:58.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:58.586" level="INFO">${RESULT} = [{'time': 0.038097389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000050946e-06, 'source_diff': 1.6250000000050946e-06}, {'time': 0.038105611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:58.576" endtime="20201112 09:42:58.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:58.620" level="INFO">${OVERHEAD} = {'time': [0.038097389, 0.038105611, 0.038121764, 0.038135389, 0.038151944, 0.038167889, 0.038175917, 0.038179778, 0.038194528, 0.038209194, 0.038221583, 0.038238347, 0.03825075, 0.038260444, 0.0382668...</msg>
<status status="PASS" starttime="20201112 09:42:58.588" endtime="20201112 09:42:58.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.630" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:58.628" endtime="20201112 09:42:58.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.636" level="INFO">VALUE: [1.6250000000050946e-06, 1.6109999999985858e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.5970000000059548e-06, 1.6389999999977256e-06, 1.5969999999990159e-06, 1.6809999999964353e-06, 1.6520000000047608e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6519999999978219e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.5979999999984895e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6940000000034705e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6110000000055247e-06, 1.6250000000050946e-06, 1.6390000000046645e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6669999999968654e-06, 1.582999999999446e-06, 1.6249999999981557e-06, 1.6519999999978219e-06, 1.6529999999972955e-06, 1.6390000000046645e-06]</msg>
<status status="PASS" starttime="20201112 09:42:58.633" endtime="20201112 09:42:58.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.622" endtime="20201112 09:42:58.639"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.646" endtime="20201112 09:42:58.648"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:58.654" endtime="20201112 09:42:58.676"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.650" endtime="20201112 09:42:58.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.641" endtime="20201112 09:42:58.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.134" endtime="20201112 09:42:58.680"></status>
</kw>
<msg timestamp="20201112 09:42:58.680" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.700" endtime="20201112 09:42:58.715"></status>
</kw>
<msg timestamp="20201112 09:42:58.717" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.697" endtime="20201112 09:42:58.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.723" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.719" endtime="20201112 09:42:58.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.725" endtime="20201112 09:42:58.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.690" endtime="20201112 09:42:58.731"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.685" endtime="20201112 09:42:58.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.749" endtime="20201112 09:42:59.085"></status>
</kw>
<msg timestamp="20201112 09:42:59.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038056181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038057819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:58.746" endtime="20201112 09:42:59.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038056181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038057819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:59.094" endtime="20201112 09:42:59.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.107" endtime="20201112 09:42:59.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.738" endtime="20201112 09:42:59.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.734" endtime="20201112 09:42:59.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:59.115" level="INFO">${RESULT} = [{'time': 0.038057819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.637999999998252e-06, 'source_diff': 1.637999999998252e-06}, {'time': 0.038072097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:59.111" endtime="20201112 09:42:59.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:59.130" level="INFO">${OVERHEAD} = {'time': [0.038057819, 0.038072097, 0.038087222, 0.038097736, 0.038103875, 0.038114403, 0.038127014, 0.038143389, 0.038154111, 0.038167972, 0.038179111, 0.038191972, 0.038207028, 0.038216361, 0.038220...</msg>
<status status="PASS" starttime="20201112 09:42:59.116" endtime="20201112 09:42:59.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.135" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:59.134" endtime="20201112 09:42:59.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.138" level="INFO">VALUE: [1.637999999998252e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.5969999999990159e-06, 1.6390000000046645e-06, 1.6109999999985858e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6939999999965316e-06, 1.6249999999981557e-06, 1.5970000000059548e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6810000000033742e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.7079999999961015e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6940000000034705e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.637999999998252e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.6519999999978219e-06, 1.6109999999985858e-06, 1.6119999999980594e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.5969999999990159e-06, 1.6250000000050946e-06, 1.6250000000050946e-06]</msg>
<status status="PASS" starttime="20201112 09:42:59.136" endtime="20201112 09:42:59.138"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.131" endtime="20201112 09:42:59.139"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.142" endtime="20201112 09:42:59.144"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:59.146" endtime="20201112 09:42:59.166"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.144" endtime="20201112 09:42:59.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.140" endtime="20201112 09:42:59.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.682" endtime="20201112 09:42:59.167"></status>
</kw>
<msg timestamp="20201112 09:42:59.168" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.177" endtime="20201112 09:42:59.189"></status>
</kw>
<msg timestamp="20201112 09:42:59.190" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.176" endtime="20201112 09:42:59.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.192" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.191" endtime="20201112 09:42:59.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.194" endtime="20201112 09:42:59.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.172" endtime="20201112 09:42:59.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.170" endtime="20201112 09:42:59.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.205" endtime="20201112 09:42:59.489"></status>
</kw>
<msg timestamp="20201112 09:42:59.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021884764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021886389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:59.203" endtime="20201112 09:42:59.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021884764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021886389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:59.493" endtime="20201112 09:42:59.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.502" endtime="20201112 09:42:59.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.200" endtime="20201112 09:42:59.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.197" endtime="20201112 09:42:59.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:59.510" level="INFO">${RESULT} = [{'time': 0.021886389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.021890431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:59.506" endtime="20201112 09:42:59.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:59.524" level="INFO">${OVERHEAD} = {'time': [0.021886389, 0.021890431, 0.021907, 0.021918778, 0.021923667, 0.021931694, 0.021946583, 0.021952944, 0.021958056, 0.021973819, 0.021990139, 0.022001278, 0.022012417, 0.022016889, 0.022020833...</msg>
<status status="PASS" starttime="20201112 09:42:59.511" endtime="20201112 09:42:59.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.529" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:59.528" endtime="20201112 09:42:59.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.532" level="INFO">VALUE: [1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.5969999999990159e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.6659999999973918e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6250000000016251e-06, 1.7219999999991409e-06, 1.6249999999981557e-06, 1.6660000000008612e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6110000000020552e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.6520000000012913e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.6110000000020552e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.637999999998252e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6249999999981557e-06]</msg>
<status status="PASS" starttime="20201112 09:42:59.530" endtime="20201112 09:42:59.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.525" endtime="20201112 09:42:59.534"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.537" endtime="20201112 09:42:59.538"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:59.541" endtime="20201112 09:42:59.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.539" endtime="20201112 09:42:59.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.534" endtime="20201112 09:42:59.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.168" endtime="20201112 09:42:59.562"></status>
</kw>
<msg timestamp="20201112 09:42:59.562" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.572" endtime="20201112 09:42:59.584"></status>
</kw>
<msg timestamp="20201112 09:42:59.585" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.570" endtime="20201112 09:42:59.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.588" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.586" endtime="20201112 09:42:59.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.589" endtime="20201112 09:42:59.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.567" endtime="20201112 09:42:59.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.564" endtime="20201112 09:42:59.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.600" endtime="20201112 09:42:59.932"></status>
</kw>
<msg timestamp="20201112 09:42:59.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022669069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022670667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:59.598" endtime="20201112 09:42:59.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022669069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022670667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:59.942" endtime="20201112 09:42:59.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.961" endtime="20201112 09:42:59.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.595" endtime="20201112 09:42:59.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.593" endtime="20201112 09:42:59.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:59.979" level="INFO">${RESULT} = [{'time': 0.022670667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5979999999984895e-06, 'source_diff': 1.5979999999984895e-06}, {'time': 0.022675361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:59.970" endtime="20201112 09:42:59.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:00.011" level="INFO">${OVERHEAD} = {'time': [0.022670667, 0.022675361, 0.022685944, 0.022699111, 0.022715708, 0.022727042, 0.022737778, 0.022744125, 0.022754042, 0.022760153, 0.022767375, 0.022774736, 0.022780042, 0.022794111, 0.022798...</msg>
<status status="PASS" starttime="20201112 09:42:59.981" endtime="20201112 09:43:00.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.022" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:00.020" endtime="20201112 09:43:00.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.027" level="INFO">VALUE: [1.5979999999984895e-06, 1.639000000001195e-06, 1.694000000000001e-06, 1.6110000000020552e-06, 1.6520000000012913e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6529999999972955e-06, 1.6250000000016251e-06, 1.653000000000765e-06, 1.5969999999990159e-06, 1.6110000000020552e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.707999999999571e-06, 1.639000000001195e-06, 1.5970000000024853e-06, 1.6250000000016251e-06, 1.6249999999981557e-06, 1.6110000000020552e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6110000000020552e-06, 1.6520000000012913e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.653000000000765e-06, 1.6249999999981557e-06, 1.5969999999990159e-06, 1.6249999999981557e-06, 1.6520000000012913e-06, 1.6809999999999048e-06, 1.6519999999978219e-06, 1.6250000000016251e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6250000000016251e-06, 1.6380000000017214e-06, 1.639000000001195e-06, 1.6949999999994747e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.639000000001195e-06]</msg>
<status status="PASS" starttime="20201112 09:43:00.024" endtime="20201112 09:43:00.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.013" endtime="20201112 09:43:00.031"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.037" endtime="20201112 09:43:00.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:00.046" endtime="20201112 09:43:00.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.041" endtime="20201112 09:43:00.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.033" endtime="20201112 09:43:00.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.563" endtime="20201112 09:43:00.071"></status>
</kw>
<msg timestamp="20201112 09:43:00.072" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.092" endtime="20201112 09:43:00.107"></status>
</kw>
<msg timestamp="20201112 09:43:00.108" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.088" endtime="20201112 09:43:00.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.115" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.110" endtime="20201112 09:43:00.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.117" endtime="20201112 09:43:00.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.081" endtime="20201112 09:43:00.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.076" endtime="20201112 09:43:00.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.141" endtime="20201112 09:43:00.475"></status>
</kw>
<msg timestamp="20201112 09:43:00.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038058708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038060389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:00.137" endtime="20201112 09:43:00.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038058708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038060389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:00.485" endtime="20201112 09:43:00.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.504" endtime="20201112 09:43:00.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.130" endtime="20201112 09:43:00.509"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.125" endtime="20201112 09:43:00.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:00.522" level="INFO">${RESULT} = [{'time': 0.038060389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6810000000033742e-06, 'source_diff': 1.6810000000033742e-06}, {'time': 0.03806775, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:43:00.513" endtime="20201112 09:43:00.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:00.555" level="INFO">${OVERHEAD} = {'time': [0.038060389, 0.03806775, 0.038076389, 0.038085028, 0.038093236, 0.038098764, 0.038109306, 0.038119597, 0.038129931, 0.038139375, 0.038151153, 0.038163542, 0.038167611, 0.038173319, 0.0381844...</msg>
<status status="PASS" starttime="20201112 09:43:00.524" endtime="20201112 09:43:00.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.567" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:00.563" endtime="20201112 09:43:00.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.573" level="INFO">VALUE: [1.6810000000033742e-06, 1.6249999999981557e-06, 1.5969999999990159e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.582999999999446e-06, 1.6109999999985858e-06, 1.582999999999446e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.637999999998252e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.5969999999990159e-06, 1.6520000000047608e-06, 1.6110000000055247e-06, 1.6250000000050946e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6669999999968654e-06, 1.6529999999972955e-06, 1.6520000000047608e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6120000000049983e-06, 1.6250000000050946e-06]</msg>
<status status="PASS" starttime="20201112 09:43:00.569" endtime="20201112 09:43:00.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.557" endtime="20201112 09:43:00.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.582" endtime="20201112 09:43:00.585"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:00.591" endtime="20201112 09:43:00.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.586" endtime="20201112 09:43:00.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.578" endtime="20201112 09:43:00.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.073" endtime="20201112 09:43:00.618"></status>
</kw>
<msg timestamp="20201112 09:43:00.618" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.639" endtime="20201112 09:43:00.654"></status>
</kw>
<msg timestamp="20201112 09:43:00.655" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.635" endtime="20201112 09:43:00.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.661" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.657" endtime="20201112 09:43:00.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.664" endtime="20201112 09:43:00.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.628" endtime="20201112 09:43:00.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.623" endtime="20201112 09:43:00.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.688" endtime="20201112 09:43:01.029"></status>
</kw>
<msg timestamp="20201112 09:43:01.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039540806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039542444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:00.684" endtime="20201112 09:43:01.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039540806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039542444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:01.039" endtime="20201112 09:43:01.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.058" endtime="20201112 09:43:01.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.677" endtime="20201112 09:43:01.064"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.672" endtime="20201112 09:43:01.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:01.076" level="INFO">${RESULT} = [{'time': 0.039542444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6380000000051909e-06, 'source_diff': 1.6380000000051909e-06}, {'time': 0.039547764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:01.067" endtime="20201112 09:43:01.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:01.107" level="INFO">${OVERHEAD} = {'time': [0.039542444, 0.039547764, 0.039559528, 0.039569472, 0.039575139, 0.039590028, 0.039603667, 0.039610028, 0.039614917, 0.039626278, 0.039641389, 0.039653361, 0.039666819, 0.039680042, 0.039694...</msg>
<status status="PASS" starttime="20201112 09:43:01.078" endtime="20201112 09:43:01.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.118" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:01.115" endtime="20201112 09:43:01.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.123" level="INFO">VALUE: [1.6380000000051909e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6660000000043307e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.6249999999981557e-06, 1.6530000000042344e-06, 1.6940000000034705e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6250000000050946e-06, 1.6119999999980594e-06, 1.6530000000042344e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.5969999999990159e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.568999999999876e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6530000000042344e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6670000000038043e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6380000000051909e-06, 1.6530000000042344e-06]</msg>
<status status="PASS" starttime="20201112 09:43:01.120" endtime="20201112 09:43:01.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.109" endtime="20201112 09:43:01.127"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.134" endtime="20201112 09:43:01.137"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:01.143" endtime="20201112 09:43:01.165"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.139" endtime="20201112 09:43:01.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.128" endtime="20201112 09:43:01.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.619" endtime="20201112 09:43:01.169"></status>
</kw>
<msg timestamp="20201112 09:43:01.169" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.189" endtime="20201112 09:43:01.204"></status>
</kw>
<msg timestamp="20201112 09:43:01.205" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:01.186" endtime="20201112 09:43:01.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.212" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:01.207" endtime="20201112 09:43:01.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.214" endtime="20201112 09:43:01.218"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.179" endtime="20201112 09:43:01.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.174" endtime="20201112 09:43:01.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.238" endtime="20201112 09:43:01.573"></status>
</kw>
<msg timestamp="20201112 09:43:01.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038161056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038162667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:01.235" endtime="20201112 09:43:01.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038161056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038162667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:01.583" endtime="20201112 09:43:01.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.602" endtime="20201112 09:43:01.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.228" endtime="20201112 09:43:01.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.223" endtime="20201112 09:43:01.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:01.620" level="INFO">${RESULT} = [{'time': 0.038162667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.038170903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:01.611" endtime="20201112 09:43:01.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:01.652" level="INFO">${OVERHEAD} = {'time': [0.038162667, 0.038170903, 0.038186431, 0.038201319, 0.038211833, 0.038215694, 0.038225167, 0.038237556, 0.038250361, 0.038264667, 0.038269764, 0.038283208, 0.038296431, 0.038312569, 0.038322...</msg>
<status status="PASS" starttime="20201112 09:43:01.622" endtime="20201112 09:43:01.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.663" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:01.661" endtime="20201112 09:43:01.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.669" level="INFO">VALUE: [1.6109999999985858e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.568999999999876e-06, 1.637999999998252e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6659999999973918e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6110000000055247e-06, 1.6389999999977256e-06, 1.6670000000038043e-06, 1.6250000000050946e-06, 1.6519999999978219e-06, 1.5979999999984895e-06, 1.6110000000055247e-06, 1.6250000000050946e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.5559999999997798e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.568999999999876e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6390000000046645e-06, 1.6249999999981557e-06]</msg>
<status status="PASS" starttime="20201112 09:43:01.665" endtime="20201112 09:43:01.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.654" endtime="20201112 09:43:01.672"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.679" endtime="20201112 09:43:01.681"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:01.687" endtime="20201112 09:43:01.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.683" endtime="20201112 09:43:01.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.674" endtime="20201112 09:43:01.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.170" endtime="20201112 09:43:01.714"></status>
</kw>
<msg timestamp="20201112 09:43:01.714" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.735" endtime="20201112 09:43:01.750"></status>
</kw>
<msg timestamp="20201112 09:43:01.751" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:01.731" endtime="20201112 09:43:01.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.757" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:01.753" endtime="20201112 09:43:01.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.760" endtime="20201112 09:43:01.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.724" endtime="20201112 09:43:01.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.719" endtime="20201112 09:43:01.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.784" endtime="20201112 09:43:02.131"></status>
</kw>
<msg timestamp="20201112 09:43:02.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038388833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038390444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:01.780" endtime="20201112 09:43:02.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038388833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038390444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:02.141" endtime="20201112 09:43:02.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.160" endtime="20201112 09:43:02.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.773" endtime="20201112 09:43:02.166"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.768" endtime="20201112 09:43:02.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:02.178" level="INFO">${RESULT} = [{'time': 0.038390444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000055247e-06, 'source_diff': 1.6110000000055247e-06}, {'time': 0.038403667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:02.169" endtime="20201112 09:43:02.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:02.209" level="INFO">${OVERHEAD} = {'time': [0.038390444, 0.038403667, 0.038416056, 0.038425111, 0.038439167, 0.03844475, 0.038459819, 0.038469292, 0.038483153, 0.038489528, 0.038504625, 0.038510778, 0.038524625, 0.038533069, 0.0385450...</msg>
<status status="PASS" starttime="20201112 09:43:02.180" endtime="20201112 09:43:02.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.220" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:02.217" endtime="20201112 09:43:02.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.225" level="INFO">VALUE: [1.6110000000055247e-06, 1.5420000000002099e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.5420000000002099e-06, 1.6809999999964353e-06, 1.637999999998252e-06, 1.5420000000002099e-06, 1.5839999999989196e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.5969999999990159e-06, 1.6380000000051909e-06, 1.5839999999989196e-06, 1.6670000000038043e-06, 1.6109999999985858e-06, 1.5970000000059548e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6110000000055247e-06, 1.7080000000030404e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.582999999999446e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6250000000050946e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6110000000055247e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.5969999999990159e-06, 1.6389999999977256e-06, 1.6120000000049983e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201112 09:43:02.222" endtime="20201112 09:43:02.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.211" endtime="20201112 09:43:02.229"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.235" endtime="20201112 09:43:02.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:02.244" endtime="20201112 09:43:02.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.239" endtime="20201112 09:43:02.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.231" endtime="20201112 09:43:02.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.716" endtime="20201112 09:43:02.269"></status>
</kw>
<msg timestamp="20201112 09:43:02.270" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.292" endtime="20201112 09:43:02.307"></status>
</kw>
<msg timestamp="20201112 09:43:02.308" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.288" endtime="20201112 09:43:02.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.314" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.310" endtime="20201112 09:43:02.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.317" endtime="20201112 09:43:02.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.281" endtime="20201112 09:43:02.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.275" endtime="20201112 09:43:02.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.341" endtime="20201112 09:43:02.675"></status>
</kw>
<msg timestamp="20201112 09:43:02.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039997542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039999181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:02.337" endtime="20201112 09:43:02.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039997542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039999181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:02.685" endtime="20201112 09:43:02.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.705" endtime="20201112 09:43:02.709"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.330" endtime="20201112 09:43:02.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.325" endtime="20201112 09:43:02.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:02.723" level="INFO">${RESULT} = [{'time': 0.039999181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6390000000046645e-06, 'source_diff': 1.6390000000046645e-06}, {'time': 0.040004903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:02.714" endtime="20201112 09:43:02.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:02.756" level="INFO">${OVERHEAD} = {'time': [0.039999181, 0.040004903, 0.040013958, 0.040024486, 0.040029375, 0.040033458, 0.040044569, 0.040055514, 0.040071278, 0.040076542, 0.040088333, 0.040100306, 0.040115417, 0.040131972, 0.040142...</msg>
<status status="PASS" starttime="20201112 09:43:02.726" endtime="20201112 09:43:02.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.767" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:02.765" endtime="20201112 09:43:02.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.773" level="INFO">VALUE: [1.6390000000046645e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6519999999978219e-06, 1.6110000000055247e-06, 1.6389999999977256e-06, 1.6670000000038043e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.5699999999993497e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6120000000049983e-06, 1.5969999999990159e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.6249999999981557e-06, 1.582999999999446e-06, 1.6800000000039006e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.5839999999989196e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.582999999999446e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201112 09:43:02.769" endtime="20201112 09:43:02.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.758" endtime="20201112 09:43:02.783"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.789" endtime="20201112 09:43:02.792"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:02.798" endtime="20201112 09:43:02.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.793" endtime="20201112 09:43:02.821"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.785" endtime="20201112 09:43:02.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.271" endtime="20201112 09:43:02.823"></status>
</kw>
<msg timestamp="20201112 09:43:02.824" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.844" endtime="20201112 09:43:02.857"></status>
</kw>
<msg timestamp="20201112 09:43:02.858" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.841" endtime="20201112 09:43:02.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.861" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.859" endtime="20201112 09:43:02.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.862" endtime="20201112 09:43:02.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.833" endtime="20201112 09:43:02.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.828" endtime="20201112 09:43:02.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.874" endtime="20201112 09:43:03.197"></status>
</kw>
<msg timestamp="20201112 09:43:03.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037364472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037366097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:02.872" endtime="20201112 09:43:03.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037364472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037366097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:03.207" endtime="20201112 09:43:03.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.226" endtime="20201112 09:43:03.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.869" endtime="20201112 09:43:03.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.867" endtime="20201112 09:43:03.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:03.244" level="INFO">${RESULT} = [{'time': 0.037366097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.037369958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:03.235" endtime="20201112 09:43:03.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:03.275" level="INFO">${OVERHEAD} = {'time': [0.037366097, 0.037369958, 0.03737675, 0.037391639, 0.037406931, 0.037416833, 0.037426528, 0.037430819, 0.037439681, 0.037445611, 0.037451333, 0.037463944, 0.037478, 0.037492056, 0.037496333,...</msg>
<status status="PASS" starttime="20201112 09:43:03.246" endtime="20201112 09:43:03.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.285" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:03.283" endtime="20201112 09:43:03.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.291" level="INFO">VALUE: [1.6249999999981557e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.5979999999984895e-06, 1.5969999999990159e-06, 1.6249999999981557e-06, 1.6519999999978219e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.637999999998252e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.568999999999876e-06, 1.6119999999980594e-06, 1.6669999999968654e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6530000000042344e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.5969999999990159e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6659999999973918e-06, 1.6529999999972955e-06, 1.6119999999980594e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201112 09:43:03.288" endtime="20201112 09:43:03.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.277" endtime="20201112 09:43:03.295"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.301" endtime="20201112 09:43:03.304"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:03.310" endtime="20201112 09:43:03.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.305" endtime="20201112 09:43:03.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.297" endtime="20201112 09:43:03.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.825" endtime="20201112 09:43:03.335"></status>
</kw>
<msg timestamp="20201112 09:43:03.336" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.356" endtime="20201112 09:43:03.371"></status>
</kw>
<msg timestamp="20201112 09:43:03.372" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.353" endtime="20201112 09:43:03.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.378" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.375" endtime="20201112 09:43:03.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.381" endtime="20201112 09:43:03.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.345" endtime="20201112 09:43:03.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.340" endtime="20201112 09:43:03.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.406" endtime="20201112 09:43:03.742"></status>
</kw>
<msg timestamp="20201112 09:43:03.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038156056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038157667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:03.403" endtime="20201112 09:43:03.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038156056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038157667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:03.752" endtime="20201112 09:43:03.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.771" endtime="20201112 09:43:03.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.394" endtime="20201112 09:43:03.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.389" endtime="20201112 09:43:03.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:03.789" level="INFO">${RESULT} = [{'time': 0.038157667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.038171139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:03.780" endtime="20201112 09:43:03.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:03.820" level="INFO">${OVERHEAD} = {'time': [0.038157667, 0.038171139, 0.038177917, 0.038188431, 0.038203125, 0.038210514, 0.038223736, 0.038233028, 0.038249389, 0.038264083, 0.038277292, 0.038283847, 0.038297514, 0.038311361, 0.038325...</msg>
<status status="PASS" starttime="20201112 09:43:03.791" endtime="20201112 09:43:03.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.831" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:03.828" endtime="20201112 09:43:03.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.836" level="INFO">VALUE: [1.6109999999985858e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6530000000042344e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6110000000055247e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6109999999985858e-06, 1.637999999998252e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6950000000029442e-06, 1.6529999999972955e-06, 1.6250000000050946e-06, 1.582999999999446e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.582999999999446e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.5559999999997798e-06, 1.6109999999985858e-06, 1.637999999998252e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6519999999978219e-06, 1.637999999998252e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6249999999981557e-06]</msg>
<status status="PASS" starttime="20201112 09:43:03.833" endtime="20201112 09:43:03.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.822" endtime="20201112 09:43:03.839"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.846" endtime="20201112 09:43:03.849"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:03.855" endtime="20201112 09:43:03.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.850" endtime="20201112 09:43:03.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.841" endtime="20201112 09:43:03.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.337" endtime="20201112 09:43:03.880"></status>
</kw>
<msg timestamp="20201112 09:43:03.881" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.901" endtime="20201112 09:43:03.916"></status>
</kw>
<msg timestamp="20201112 09:43:03.917" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.898" endtime="20201112 09:43:03.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.924" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.920" endtime="20201112 09:43:03.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.926" endtime="20201112 09:43:03.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.890" endtime="20201112 09:43:03.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.885" endtime="20201112 09:43:03.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.950" endtime="20201112 09:43:04.293"></status>
</kw>
<msg timestamp="20201112 09:43:04.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038551667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038553319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:03.947" endtime="20201112 09:43:04.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038551667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038553319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:04.303" endtime="20201112 09:43:04.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.322" endtime="20201112 09:43:04.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.939" endtime="20201112 09:43:04.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.935" endtime="20201112 09:43:04.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:04.340" level="INFO">${RESULT} = [{'time': 0.038553319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6520000000047608e-06, 'source_diff': 1.6520000000047608e-06}, {'time': 0.038562403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:04.331" endtime="20201112 09:43:04.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:04.371" level="INFO">${OVERHEAD} = {'time': [0.038553319, 0.038562403, 0.038574153, 0.038579028, 0.038583083, 0.038592778, 0.038608306, 0.038623014, 0.038633542, 0.038637597, 0.038644375, 0.038650931, 0.038664569, 0.038671125, 0.038676...</msg>
<status status="PASS" starttime="20201112 09:43:04.342" endtime="20201112 09:43:04.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.381" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:04.379" endtime="20201112 09:43:04.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.387" level="INFO">VALUE: [1.6520000000047608e-06, 1.6670000000038043e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.5559999999997798e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6950000000029442e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6519999999978219e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6939999999965316e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.6660000000043307e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.582999999999446e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6109999999985858e-06]</msg>
<status status="PASS" starttime="20201112 09:43:04.384" endtime="20201112 09:43:04.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.373" endtime="20201112 09:43:04.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.397" endtime="20201112 09:43:04.399"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:04.405" endtime="20201112 09:43:04.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.401" endtime="20201112 09:43:04.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.392" endtime="20201112 09:43:04.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.882" endtime="20201112 09:43:04.431"></status>
</kw>
<msg timestamp="20201112 09:43:04.431" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.452" endtime="20201112 09:43:04.466"></status>
</kw>
<msg timestamp="20201112 09:43:04.467" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:04.448" endtime="20201112 09:43:04.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.473" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:04.469" endtime="20201112 09:43:04.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.476" endtime="20201112 09:43:04.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.441" endtime="20201112 09:43:04.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.436" endtime="20201112 09:43:04.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.500" endtime="20201112 09:43:04.840"></status>
</kw>
<msg timestamp="20201112 09:43:04.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038368722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038370347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:04.496" endtime="20201112 09:43:04.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038368722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038370347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:04.850" endtime="20201112 09:43:04.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.869" endtime="20201112 09:43:04.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.489" endtime="20201112 09:43:04.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.484" endtime="20201112 09:43:04.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:04.888" level="INFO">${RESULT} = [{'time': 0.038370347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.038376056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:04.878" endtime="20201112 09:43:04.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:04.921" level="INFO">${OVERHEAD} = {'time': [0.038370347, 0.038376056, 0.038382194, 0.038387097, 0.038400722, 0.038414778, 0.038426806, 0.038437708, 0.038447, 0.038462944, 0.038476792, 0.038490667, 0.038499167, 0.038511903, 0.038518681...</msg>
<status status="PASS" starttime="20201112 09:43:04.890" endtime="20201112 09:43:04.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.932" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:04.929" endtime="20201112 09:43:04.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.937" level="INFO">VALUE: [1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6670000000038043e-06, 1.6109999999985858e-06, 1.6530000000042344e-06, 1.6519999999978219e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.709000000002514e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6810000000033742e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6380000000051909e-06, 1.5839999999989196e-06, 1.6389999999977256e-06, 1.6519999999978219e-06, 1.6109999999985858e-06, 1.6119999999980594e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6250000000050946e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.5969999999990159e-06, 1.6250000000050946e-06, 1.6250000000050946e-06, 1.6249999999981557e-06]</msg>
<status status="PASS" starttime="20201112 09:43:04.934" endtime="20201112 09:43:04.939"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.923" endtime="20201112 09:43:04.941"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.947" endtime="20201112 09:43:04.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:04.955" endtime="20201112 09:43:04.977"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.951" endtime="20201112 09:43:04.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.942" endtime="20201112 09:43:04.981"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.433" endtime="20201112 09:43:04.981"></status>
</kw>
<msg timestamp="20201112 09:43:04.982" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.002" endtime="20201112 09:43:05.016"></status>
</kw>
<msg timestamp="20201112 09:43:05.018" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:04.998" endtime="20201112 09:43:05.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.024" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:05.020" endtime="20201112 09:43:05.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.026" endtime="20201112 09:43:05.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.991" endtime="20201112 09:43:05.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.986" endtime="20201112 09:43:05.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.050" endtime="20201112 09:43:05.389"></status>
</kw>
<msg timestamp="20201112 09:43:05.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038359528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038361153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:05.047" endtime="20201112 09:43:05.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038359528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038361153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:05.398" endtime="20201112 09:43:05.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.417" endtime="20201112 09:43:05.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.040" endtime="20201112 09:43:05.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.035" endtime="20201112 09:43:05.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:05.435" level="INFO">${RESULT} = [{'time': 0.038361153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000050946e-06, 'source_diff': 1.6250000000050946e-06}, {'time': 0.038370014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:05.426" endtime="20201112 09:43:05.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:05.468" level="INFO">${OVERHEAD} = {'time': [0.038361153, 0.038370014, 0.038381792, 0.038396681, 0.038404306, 0.038420264, 0.038432278, 0.038446708, 0.038452222, 0.038469069, 0.038474528, 0.038488167, 0.038496625, 0.038512569, 0.038517...</msg>
<status status="PASS" starttime="20201112 09:43:05.438" endtime="20201112 09:43:05.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.478" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:05.476" endtime="20201112 09:43:05.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.484" level="INFO">VALUE: [1.6250000000050946e-06, 1.6389999999977256e-06, 1.5559999999997798e-06, 1.6250000000050946e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6810000000033742e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.7080000000030404e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.5830000000063849e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6530000000042344e-06, 1.6250000000050946e-06, 1.6109999999985858e-06, 1.5969999999990159e-06, 1.6249999999981557e-06, 1.6530000000042344e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6669999999968654e-06, 1.6389999999977256e-06, 1.5699999999993497e-06, 1.5839999999989196e-06, 1.6670000000038043e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.5839999999989196e-06, 1.6110000000055247e-06, 1.6669999999968654e-06, 1.6250000000050946e-06, 1.6390000000046645e-06, 1.582999999999446e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6530000000042344e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6119999999980594e-06]</msg>
<status status="PASS" starttime="20201112 09:43:05.481" endtime="20201112 09:43:05.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.470" endtime="20201112 09:43:05.487"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.494" endtime="20201112 09:43:05.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:05.502" endtime="20201112 09:43:05.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.498" endtime="20201112 09:43:05.526"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.489" endtime="20201112 09:43:05.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.983" endtime="20201112 09:43:05.528"></status>
</kw>
<msg timestamp="20201112 09:43:05.529" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.549" endtime="20201112 09:43:05.564"></status>
</kw>
<msg timestamp="20201112 09:43:05.565" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:05.545" endtime="20201112 09:43:05.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.571" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:05.567" endtime="20201112 09:43:05.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.574" endtime="20201112 09:43:05.578"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.538" endtime="20201112 09:43:05.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.533" endtime="20201112 09:43:05.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.598" endtime="20201112 09:43:05.935"></status>
</kw>
<msg timestamp="20201112 09:43:05.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038339069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038340708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:05.594" endtime="20201112 09:43:05.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038339069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038340708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:05.944" endtime="20201112 09:43:05.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.963" endtime="20201112 09:43:05.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.587" endtime="20201112 09:43:05.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.582" endtime="20201112 09:43:05.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:05.981" level="INFO">${RESULT} = [{'time': 0.038340708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.038350389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:05.972" endtime="20201112 09:43:05.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:06.014" level="INFO">${OVERHEAD} = {'time': [0.038340708, 0.038350389, 0.038356125, 0.038365583, 0.038377778, 0.038386431, 0.038403194, 0.038418917, 0.038430292, 0.038438319, 0.038445292, 0.038454778, 0.038464681, 0.038477264, 0.038483...</msg>
<status status="PASS" starttime="20201112 09:43:05.983" endtime="20201112 09:43:06.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.024" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:06.022" endtime="20201112 09:43:06.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.030" level="INFO">VALUE: [1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.582999999999446e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6249999999981557e-06, 1.5699999999993497e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.568999999999876e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6110000000055247e-06, 1.6529999999972955e-06, 1.6110000000055247e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1.5839999999989196e-06, 1.6109999999985858e-06, 1.6940000000034705e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6810000000033742e-06, 1.6530000000042344e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.582999999999446e-06, 1.6659999999973918e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6530000000042344e-06, 1.6110000000055247e-06]</msg>
<status status="PASS" starttime="20201112 09:43:06.027" endtime="20201112 09:43:06.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.016" endtime="20201112 09:43:06.033"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.040" endtime="20201112 09:43:06.043"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:06.048" endtime="20201112 09:43:06.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.044" endtime="20201112 09:43:06.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.035" endtime="20201112 09:43:06.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.530" endtime="20201112 09:43:06.074"></status>
</kw>
<msg timestamp="20201112 09:43:06.074" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.095" endtime="20201112 09:43:06.109"></status>
</kw>
<msg timestamp="20201112 09:43:06.110" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.091" endtime="20201112 09:43:06.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.116" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.112" endtime="20201112 09:43:06.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.119" endtime="20201112 09:43:06.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.084" endtime="20201112 09:43:06.124"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.079" endtime="20201112 09:43:06.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.143" endtime="20201112 09:43:06.435"></status>
</kw>
<msg timestamp="20201112 09:43:06.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038381806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038383458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:06.139" endtime="20201112 09:43:06.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038381806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038383458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:06.439" endtime="20201112 09:43:06.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.448" endtime="20201112 09:43:06.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.132" endtime="20201112 09:43:06.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.127" endtime="20201112 09:43:06.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:06.456" level="INFO">${RESULT} = [{'time': 0.038383458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6520000000047608e-06, 'source_diff': 1.6520000000047608e-06}, {'time': 0.038394806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:06.452" endtime="20201112 09:43:06.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:06.470" level="INFO">${OVERHEAD} = {'time': [0.038383458, 0.038394806, 0.038402014, 0.038408778, 0.038422653, 0.03843275, 0.038448278, 0.038454, 0.03845975, 0.038467958, 0.038475167, 0.038480042, 0.038496611, 0.038511708, 0.038518486, ...</msg>
<status status="PASS" starttime="20201112 09:43:06.457" endtime="20201112 09:43:06.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.475" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:06.474" endtime="20201112 09:43:06.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.478" level="INFO">VALUE: [1.6520000000047608e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.5969999999990159e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6110000000055247e-06, 1.6110000000055247e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.582999999999446e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6120000000049983e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.5969999999990159e-06, 1.6669999999968654e-06, 1.6390000000046645e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6110000000055247e-06, 1.5970000000059548e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.5969999999990159e-06, 1.709000000002514e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6109999999985858e-06]</msg>
<status status="PASS" starttime="20201112 09:43:06.476" endtime="20201112 09:43:06.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.471" endtime="20201112 09:43:06.480"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.483" endtime="20201112 09:43:06.484"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:06.487" endtime="20201112 09:43:06.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.485" endtime="20201112 09:43:06.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.481" endtime="20201112 09:43:06.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.075" endtime="20201112 09:43:06.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.929" endtime="20201112 09:43:06.508"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:06.514" endtime="20201112 09:43:06.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.511" endtime="20201112 09:43:06.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.510" endtime="20201112 09:43:06.534"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:55.819" endtime="20201112 09:43:06.535" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:06.543" endtime="20201112 09:43:06.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.542" endtime="20201112 09:43:06.564"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.579" endtime="20201112 09:43:06.602"></status>
</kw>
<msg timestamp="20201112 09:43:06.603" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.578" endtime="20201112 09:43:06.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.610" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.605" endtime="20201112 09:43:06.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.616" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:06.612" endtime="20201112 09:43:06.617"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:06.574" endtime="20201112 09:43:06.619"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:06.571" endtime="20201112 09:43:06.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.570" endtime="20201112 09:43:06.622"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:06.632" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:06.630" endtime="20201112 09:43:06.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.623" endtime="20201112 09:43:06.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.569" endtime="20201112 09:43:06.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.568" endtime="20201112 09:43:06.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.635" endtime="20201112 09:43:06.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.567" endtime="20201112 09:43:06.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.564" endtime="20201112 09:43:06.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.540" endtime="20201112 09:43:06.643"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.667" endtime="20201112 09:43:06.691"></status>
</kw>
<msg timestamp="20201112 09:43:06.692" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.663" endtime="20201112 09:43:06.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.698" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.694" endtime="20201112 09:43:06.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.701" endtime="20201112 09:43:06.704"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.655" endtime="20201112 09:43:06.706"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.649" endtime="20201112 09:43:06.708"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.712" endtime="20201112 09:43:06.717"></status>
</kw>
<msg timestamp="20201112 09:43:06.718" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:43:06.709" endtime="20201112 09:43:06.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.728" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:43:06.726" endtime="20201112 09:43:06.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.733" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:43:06.731" endtime="20201112 09:43:06.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.720" endtime="20201112 09:43:06.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.745" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:43:06.743" endtime="20201112 09:43:06.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.750" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:43:06.747" endtime="20201112 09:43:06.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.737" endtime="20201112 09:43:06.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.769" endtime="20201112 09:43:07.117"></status>
</kw>
<msg timestamp="20201112 09:43:07.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.117576667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.117580361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:06.765" endtime="20201112 09:43:07.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.117576667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.117580361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.127" endtime="20201112 09:43:07.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.147" endtime="20201112 09:43:07.151"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.758" endtime="20201112 09:43:07.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.753" endtime="20201112 09:43:07.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:07.164" level="INFO">${RESULT} = [{'time': 0.117580361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.693999999998532e-06, 'source_diff': 3.693999999998532e-06}, {'time': 0.117597514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:07.155" endtime="20201112 09:43:07.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:07.199" level="INFO">${OVERHEAD} = {'time': [0.117580361, 0.117597514, 0.117609681, 0.117616639, 0.117632333, 0.117650319, 0.117659986, 0.117667347, 0.117685764, 0.117704611, 0.117714278, 0.117732472, 0.117738389, 0.117750153, 0.117761...</msg>
<status status="PASS" starttime="20201112 09:43:07.166" endtime="20201112 09:43:07.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.210" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 09:43:07.208" endtime="20201112 09:43:07.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.216" level="INFO">VALUE: [3.693999999998532e-06, 3.7499999999968114e-06, 3.7369999999897763e-06, 3.7359999999903026e-06, 3.7360000000041804e-06, 3.7360000000041804e-06, 3.7499999999968114e-06, 3.7360000000041804e-06, 3.7499999999968114e-06, 3.7499999999968114e-06, 3.7360000000041804e-06, 3.7360000000041804e-06, 3.7499999999968114e-06, 3.7639999999894425e-06, 3.8049999999956174e-06, 3.7500000000106892e-06, 3.7219999999976716e-06, 3.806000000008969e-06, 3.7640000000033202e-06, 3.79200000000246e-06, 3.7640000000033202e-06, 3.737000000003654e-06, 3.723000000011023e-06, 3.7360000000041804e-06, 3.7359999999903026e-06, 3.7359999999903026e-06, 3.7640000000033202e-06, 3.7219999999976716e-06, 3.7360000000041804e-06, 3.7219999999976716e-06, 3.7499999999968114e-06, 3.7219999999976716e-06, 3.7360000000041804e-06, 3.7630000000038466e-06, 3.7640000000033202e-06, 3.7080000000050406e-06, 3.7499999999968114e-06, 3.7499999999968114e-06, 3.7779999999959513e-06, 3.819000000002126e-06, 3.7910000000029864e-06, 3.7359999999903026e-06, 3.8200000000016e-06, 3.7499999999968114e-06, 3.7499999999968114e-06, 3.7499999999968114e-06, 3.7229999999971453e-06, 3.7500000000106892e-06, 3.7219999999976716e-06, 3.693999999998532e-06]</msg>
<status status="PASS" starttime="20201112 09:43:07.213" endtime="20201112 09:43:07.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.200" endtime="20201112 09:43:07.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.225" endtime="20201112 09:43:07.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:07.234" endtime="20201112 09:43:07.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.229" endtime="20201112 09:43:07.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.221" endtime="20201112 09:43:07.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.644" endtime="20201112 09:43:07.261"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:06.537" endtime="20201112 09:43:07.263" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:07.285" endtime="20201112 09:43:07.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.281" endtime="20201112 09:43:07.309"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.344" endtime="20201112 09:43:07.371"></status>
</kw>
<msg timestamp="20201112 09:43:07.373" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:07.341" endtime="20201112 09:43:07.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.379" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:07.375" endtime="20201112 09:43:07.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.386" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:07.382" endtime="20201112 09:43:07.387"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:07.333" endtime="20201112 09:43:07.389"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:07.326" endtime="20201112 09:43:07.391"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.323" endtime="20201112 09:43:07.392"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:07.400" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:07.398" endtime="20201112 09:43:07.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.394" endtime="20201112 09:43:07.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.322" endtime="20201112 09:43:07.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.320" endtime="20201112 09:43:07.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.404" endtime="20201112 09:43:07.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.315" endtime="20201112 09:43:07.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.311" endtime="20201112 09:43:07.411"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.277" endtime="20201112 09:43:07.412"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.439" endtime="20201112 09:43:07.506"></status>
</kw>
<msg timestamp="20201112 09:43:07.508" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:07.436" endtime="20201112 09:43:07.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.514" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:07.510" endtime="20201112 09:43:07.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.517" endtime="20201112 09:43:07.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.428" endtime="20201112 09:43:07.523"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.420" endtime="20201112 09:43:07.524"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.529" endtime="20201112 09:43:07.534"></status>
</kw>
<msg timestamp="20201112 09:43:07.535" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:43:07.526" endtime="20201112 09:43:07.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.546" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:43:07.544" endtime="20201112 09:43:07.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.551" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:43:07.548" endtime="20201112 09:43:07.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.537" endtime="20201112 09:43:07.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.563" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:43:07.561" endtime="20201112 09:43:07.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.568" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:43:07.566" endtime="20201112 09:43:07.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.555" endtime="20201112 09:43:07.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.588" endtime="20201112 09:43:07.958"></status>
</kw>
<msg timestamp="20201112 09:43:07.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.148761542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.148792417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.585" endtime="20201112 09:43:07.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.148761542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.148792417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.967" endtime="20201112 09:43:07.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.986" endtime="20201112 09:43:07.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.577" endtime="20201112 09:43:07.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.572" endtime="20201112 09:43:07.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:08.004" level="INFO">${RESULT} = [{'time': 0.148792417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.087500000001353e-05, 'source_diff': 3.087500000001353e-05}, {'time': 0.149663944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:07.994" endtime="20201112 09:43:08.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:08.034" level="INFO">${OVERHEAD} = {'time': [0.148792417, 0.149663944, 0.150528139, 0.151389, 0.152256125, 0.153127639, 0.15399, 0.154860861, 0.155734222, 0.156601153, 0.157470167, 0.158335847, 0.159204694, 0.160074889, 0.16093975, 0.1...</msg>
<status status="PASS" starttime="20201112 09:43:08.006" endtime="20201112 09:43:08.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.047" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 09:43:08.045" endtime="20201112 09:43:08.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.055" level="INFO">VALUE: [3.087500000001353e-05, 3.090199999999932e-05, 3.088900000000616e-05, 3.088900000000616e-05, 3.0888999999978406e-05, 3.090299999999879e-05, 3.0930999999984055e-05, 3.0888999999978406e-05, 3.083300000000788e-05, 3.0874999999985775e-05, 3.090299999999879e-05, 3.090299999999879e-05, 3.09579999999976e-05, 3.090299999999879e-05, 3.0874999999985775e-05, 3.097199999999023e-05, 3.090199999999932e-05, 3.087500000001353e-05, 3.09579999999976e-05, 3.0834000000007356e-05, 3.0847999999999987e-05, 3.090199999999932e-05, 3.088800000000669e-05, 3.0916999999991424e-05, 3.090299999999879e-05, 3.090299999999879e-05, 3.0874999999985775e-05, 3.0916999999991424e-05, 3.090299999999879e-05, 3.088900000000616e-05, 3.088900000000616e-05, 3.09579999999976e-05, 3.0930999999984055e-05, 3.090199999999932e-05, 3.090299999999879e-05, 3.088900000000616e-05, 3.091599999999195e-05, 3.088900000000616e-05, 3.08610000000209e-05, 3.090299999999879e-05, 3.088900000000616e-05, 3.090299999999879e-05, 3.091700000001918e-05, 3.090299999999879e-05, 3.088900000000616e-05, 3.090299999999879e-05, 3.0916999999991424e-05, 3.097199999999023e-05, 3.090299999999879e-05, 3.090299999999879e-05]</msg>
<status status="PASS" starttime="20201112 09:43:08.049" endtime="20201112 09:43:08.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.037" endtime="20201112 09:43:08.057"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.064" endtime="20201112 09:43:08.067"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:08.072" endtime="20201112 09:43:08.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.068" endtime="20201112 09:43:08.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.059" endtime="20201112 09:43:08.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.414" endtime="20201112 09:43:08.098"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:07.269" endtime="20201112 09:43:08.100" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:08.119" endtime="20201112 09:43:08.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.115" endtime="20201112 09:43:08.142"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.175" endtime="20201112 09:43:08.199"></status>
</kw>
<msg timestamp="20201112 09:43:08.200" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.172" endtime="20201112 09:43:08.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.207" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.202" endtime="20201112 09:43:08.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.213" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:08.209" endtime="20201112 09:43:08.214"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:08.165" endtime="20201112 09:43:08.216"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:08.158" endtime="20201112 09:43:08.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.156" endtime="20201112 09:43:08.218"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:08.226" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:08.225" endtime="20201112 09:43:08.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.220" endtime="20201112 09:43:08.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.154" endtime="20201112 09:43:08.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.152" endtime="20201112 09:43:08.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.230" endtime="20201112 09:43:08.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.148" endtime="20201112 09:43:08.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.144" endtime="20201112 09:43:08.237"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.113" endtime="20201112 09:43:08.237"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.264" endtime="20201112 09:43:08.447"></status>
</kw>
<msg timestamp="20201112 09:43:08.448" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.261" endtime="20201112 09:43:08.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.455" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.450" endtime="20201112 09:43:08.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.457" endtime="20201112 09:43:08.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.250" endtime="20201112 09:43:08.463"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.244" endtime="20201112 09:43:08.464"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.469" endtime="20201112 09:43:08.473"></status>
</kw>
<msg timestamp="20201112 09:43:08.475" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:43:08.466" endtime="20201112 09:43:08.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.484" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:43:08.482" endtime="20201112 09:43:08.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.489" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:43:08.487" endtime="20201112 09:43:08.490"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.476" endtime="20201112 09:43:08.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.501" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:43:08.499" endtime="20201112 09:43:08.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.505" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:43:08.503" endtime="20201112 09:43:08.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.493" endtime="20201112 09:43:08.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.524" endtime="20201112 09:43:08.880"></status>
</kw>
<msg timestamp="20201112 09:43:08.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140517556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.140576917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.521" endtime="20201112 09:43:08.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140517556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.140576917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.890" endtime="20201112 09:43:08.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.908" endtime="20201112 09:43:08.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.514" endtime="20201112 09:43:08.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.509" endtime="20201112 09:43:08.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:08.927" level="INFO">${RESULT} = [{'time': 0.140576917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.936100000000777e-05, 'source_diff': 5.936100000000777e-05}, {'time': 0.143763736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:08.917" endtime="20201112 09:43:08.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:08.958" level="INFO">${OVERHEAD} = {'time': [0.140576917, 0.143763736, 0.146952681, 0.150141194, 0.153334542, 0.156525792, 0.159719069, 0.162917361, 0.166160639, 0.169357486, 0.172545792, 0.175735986, 0.178925542, 0.182113222, 0.185299...</msg>
<status status="PASS" starttime="20201112 09:43:08.929" endtime="20201112 09:43:08.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.970" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 09:43:08.967" endtime="20201112 09:43:08.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.975" level="INFO">VALUE: [5.936100000000777e-05, 5.8707999999990657e-05, 5.873700000000315e-05, 5.8736000000003674e-05, 5.8805999999994585e-05, 5.877800000000932e-05, 5.8776999999982094e-05, 5.8736000000003674e-05, 5.8763999999988936e-05, 5.8749999999996305e-05, 5.8736000000003674e-05, 5.8736000000003674e-05, 5.8736000000003674e-05, 5.8749999999996305e-05, 5.8736000000003674e-05, 5.872200000001104e-05, 5.872200000001104e-05, 5.8749999999996305e-05, 5.877800000000932e-05, 5.8749999999996305e-05, 5.877800000000932e-05, 5.876400000001669e-05, 5.8749999999996305e-05, 5.8749999999996305e-05, 5.873599999997592e-05, 5.876400000001669e-05, 5.8736000000003674e-05, 5.872299999998276e-05, 5.872200000001104e-05, 5.8736000000003674e-05, 5.8749999999996305e-05, 5.876400000001669e-05, 5.8763999999988936e-05, 5.8749999999996305e-05, 5.8736000000003674e-05, 5.8749999999996305e-05, 5.8736000000003674e-05, 5.872200000001104e-05, 5.8763999999988936e-05, 5.8736000000003674e-05, 5.8749999999996305e-05, 5.8749999999996305e-05, 5.8736000000003674e-05, 5.8749999999996305e-05, 5.8736000000003674e-05, 5.872200000001104e-05, 5.8749999999996305e-05, 5.8736000000003674e-05, 5.877799999998157e-05, 5.877700000000985e-05]</msg>
<status status="PASS" starttime="20201112 09:43:08.972" endtime="20201112 09:43:08.976"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.960" endtime="20201112 09:43:08.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.984" endtime="20201112 09:43:08.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:08.992" endtime="20201112 09:43:09.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.988" endtime="20201112 09:43:09.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.979" endtime="20201112 09:43:09.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.239" endtime="20201112 09:43:09.019"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:08.105" endtime="20201112 09:43:09.022" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:09.040" endtime="20201112 09:43:09.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.036" endtime="20201112 09:43:09.063"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.096" endtime="20201112 09:43:09.121"></status>
</kw>
<msg timestamp="20201112 09:43:09.122" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.093" endtime="20201112 09:43:09.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.128" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.124" endtime="20201112 09:43:09.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.135" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:09.131" endtime="20201112 09:43:09.135"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:09.086" endtime="20201112 09:43:09.137"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:09.079" endtime="20201112 09:43:09.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.077" endtime="20201112 09:43:09.140"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:09.148" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:09.147" endtime="20201112 09:43:09.149"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.142" endtime="20201112 09:43:09.149"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.075" endtime="20201112 09:43:09.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.073" endtime="20201112 09:43:09.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.152" endtime="20201112 09:43:09.155"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.069" endtime="20201112 09:43:09.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.065" endtime="20201112 09:43:09.158"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.034" endtime="20201112 09:43:09.159"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.184" endtime="20201112 09:43:09.207"></status>
</kw>
<msg timestamp="20201112 09:43:09.209" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.179" endtime="20201112 09:43:09.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.215" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.211" endtime="20201112 09:43:09.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.217" endtime="20201112 09:43:09.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.172" endtime="20201112 09:43:09.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.166" endtime="20201112 09:43:09.224"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.228" endtime="20201112 09:43:09.233"></status>
</kw>
<msg timestamp="20201112 09:43:09.234" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:43:09.226" endtime="20201112 09:43:09.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.244" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:43:09.242" endtime="20201112 09:43:09.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.249" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:43:09.246" endtime="20201112 09:43:09.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.236" endtime="20201112 09:43:09.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.262" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:43:09.259" endtime="20201112 09:43:09.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.266" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:43:09.264" endtime="20201112 09:43:09.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.252" endtime="20201112 09:43:09.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.285" endtime="20201112 09:43:09.626"></status>
</kw>
<msg timestamp="20201112 09:43:09.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137365722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.137366569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:09.281" endtime="20201112 09:43:09.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137365722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.137366569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:09.636" endtime="20201112 09:43:09.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.656" endtime="20201112 09:43:09.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.274" endtime="20201112 09:43:09.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.270" endtime="20201112 09:43:09.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:09.673" level="INFO">${RESULT} = [{'time': 0.137366569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.469999999982658e-07, 'source_diff': 8.469999999982658e-07}, {'time': 0.137376319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:09.664" endtime="20201112 09:43:09.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:09.706" level="INFO">${OVERHEAD} = {'time': [0.137366569, 0.137376319, 0.137388986, 0.137397069, 0.137411208, 0.137423681, 0.137440167, 0.137453181, 0.137464875, 0.137480028, 0.137493167, 0.137511806, 0.137518431, 0.13753675, 0.1375458...</msg>
<status status="PASS" starttime="20201112 09:43:09.675" endtime="20201112 09:43:09.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.717" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 09:43:09.715" endtime="20201112 09:43:09.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.723" level="INFO">VALUE: [8.469999999982658e-07, 8.609999999908968e-07, 8.609999999908968e-07, 8.610000000186524e-07, 8.750000000112834e-07, 8.749999999835278e-07, 9.310000000095631e-07, 8.479999999977395e-07, 9.169999999891765e-07, 8.890000000039144e-07, 9.450000000021941e-07, 8.199999999847218e-07, 8.619999999903705e-07, 8.610000000186524e-07, 8.610000000186524e-07, 8.749999999835278e-07, 8.610000000186524e-07, 8.609999999908968e-07, 8.609999999908968e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.62000000018126e-07, 8.750000000112834e-07, 8.609999999908968e-07, 8.749999999835278e-07, 8.609999999908968e-07, 8.199999999847218e-07, 8.750000000112834e-07, 8.479999999977395e-07, 7.919999999994598e-07, 8.610000000186524e-07, 9.029999999965455e-07, 8.609999999908968e-07, 9.029999999965455e-07, 8.340000000051084e-07, 8.469999999982658e-07, 8.750000000112834e-07, 9.440000000027204e-07, 8.609999999908968e-07, 8.62000000018126e-07, 8.609999999908968e-07, 8.609999999908968e-07, 8.610000000186524e-07, 8.750000000112834e-07, 8.609999999908968e-07, 9.17000000016932e-07, 8.469999999982658e-07, 9.169999999891765e-07, 8.609999999908968e-07, 8.610000000186524e-07]</msg>
<status status="PASS" starttime="20201112 09:43:09.719" endtime="20201112 09:43:09.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.708" endtime="20201112 09:43:09.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.731" endtime="20201112 09:43:09.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:09.740" endtime="20201112 09:43:09.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.735" endtime="20201112 09:43:09.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.727" endtime="20201112 09:43:09.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.161" endtime="20201112 09:43:09.765"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:09.027" endtime="20201112 09:43:09.768" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:09.786" endtime="20201112 09:43:09.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.782" endtime="20201112 09:43:09.811"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.844" endtime="20201112 09:43:09.868"></status>
</kw>
<msg timestamp="20201112 09:43:09.870" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.840" endtime="20201112 09:43:09.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.876" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.872" endtime="20201112 09:43:09.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.883" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:09.878" endtime="20201112 09:43:09.884"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:09.833" endtime="20201112 09:43:09.886"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:09.827" endtime="20201112 09:43:09.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.824" endtime="20201112 09:43:09.888"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:09.896" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:09.894" endtime="20201112 09:43:09.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.890" endtime="20201112 09:43:09.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.822" endtime="20201112 09:43:09.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.821" endtime="20201112 09:43:09.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.899" endtime="20201112 09:43:09.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.817" endtime="20201112 09:43:09.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.812" endtime="20201112 09:43:09.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.780" endtime="20201112 09:43:09.906"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.931" endtime="20201112 09:43:09.999"></status>
</kw>
<msg timestamp="20201112 09:43:10.000" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.927" endtime="20201112 09:43:10.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.006" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.002" endtime="20201112 09:43:10.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.009" endtime="20201112 09:43:10.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.920" endtime="20201112 09:43:10.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.914" endtime="20201112 09:43:10.016"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.020" endtime="20201112 09:43:10.025"></status>
</kw>
<msg timestamp="20201112 09:43:10.026" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:43:10.017" endtime="20201112 09:43:10.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.038" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:43:10.033" endtime="20201112 09:43:10.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.042" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:43:10.040" endtime="20201112 09:43:10.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.027" endtime="20201112 09:43:10.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.054" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:43:10.052" endtime="20201112 09:43:10.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.059" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:43:10.056" endtime="20201112 09:43:10.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.046" endtime="20201112 09:43:10.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.077" endtime="20201112 09:43:10.419"></status>
</kw>
<msg timestamp="20201112 09:43:10.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138511917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138522986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:10.074" endtime="20201112 09:43:10.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138511917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138522986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:10.429" endtime="20201112 09:43:10.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.448" endtime="20201112 09:43:10.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.067" endtime="20201112 09:43:10.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.062" endtime="20201112 09:43:10.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:10.466" level="INFO">${RESULT} = [{'time': 0.138522986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1068999999974682e-05, 'source_diff': 1.1068999999974682e-05}, {'time': 0.139393944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:10.457" endtime="20201112 09:43:10.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:10.496" level="INFO">${OVERHEAD} = {'time': [0.138522986, 0.139393944, 0.140275764, 0.141146139, 0.142020458, 0.142900028, 0.143771389, 0.144648417, 0.145522347, 0.146404153, 0.147275139, 0.148157167, 0.149035444, 0.149914403, 0.150796...</msg>
<status status="PASS" starttime="20201112 09:43:10.468" endtime="20201112 09:43:10.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.507" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 09:43:10.505" endtime="20201112 09:43:10.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.513" level="INFO">VALUE: [1.1068999999974682e-05, 1.102699999999679e-05, 1.1027999999996263e-05, 1.1014000000003632e-05, 1.102699999999679e-05, 1.1014000000003632e-05, 1.1027999999996263e-05, 1.1014000000003632e-05, 1.1027999999996263e-05, 1.1014000000003632e-05, 1.1014000000003632e-05, 1.1027999999996263e-05, 1.1012999999976403e-05, 1.1070000000001912e-05, 1.1041999999988894e-05, 1.1069000000002438e-05, 1.1027999999996263e-05, 1.1028000000024019e-05, 1.1041999999988894e-05, 1.1027999999996263e-05, 1.1028000000024019e-05, 1.1014000000003632e-05, 1.1027999999996263e-05, 1.1041000000017176e-05, 1.1028000000024019e-05, 1.1014000000003632e-05, 1.1014000000003632e-05, 1.1014000000003632e-05, 1.1000000000011001e-05, 1.1055999999981525e-05, 1.102699999999679e-05, 1.1027999999996263e-05, 1.1013000000004158e-05, 1.1027999999996263e-05, 1.104200000001665e-05, 1.1054999999982051e-05, 1.104200000001665e-05, 1.1014000000003632e-05, 1.1027999999996263e-05, 1.1082999999995069e-05, 1.102699999999679e-05, 1.1027999999996263e-05, 1.1027999999996263e-05, 1.102699999999679e-05, 1.1014000000003632e-05, 1.104200000001665e-05, 1.1027999999996263e-05, 1.1069000000002438e-05, 1.0943999999984966e-05, 1.1000000000011001e-05]</msg>
<status status="PASS" starttime="20201112 09:43:10.510" endtime="20201112 09:43:10.514"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.498" endtime="20201112 09:43:10.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.522" endtime="20201112 09:43:10.524"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:10.530" endtime="20201112 09:43:10.550"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.526" endtime="20201112 09:43:10.551"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.517" endtime="20201112 09:43:10.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.909" endtime="20201112 09:43:10.552"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:09.773" endtime="20201112 09:43:10.553" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:10.563" endtime="20201112 09:43:10.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.561" endtime="20201112 09:43:10.583"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.600" endtime="20201112 09:43:10.619"></status>
</kw>
<msg timestamp="20201112 09:43:10.619" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.598" endtime="20201112 09:43:10.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.623" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.621" endtime="20201112 09:43:10.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.626" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:10.624" endtime="20201112 09:43:10.626"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:10.595" endtime="20201112 09:43:10.627"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:10.592" endtime="20201112 09:43:10.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.590" endtime="20201112 09:43:10.628"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:10.632" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:10.632" endtime="20201112 09:43:10.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.629" endtime="20201112 09:43:10.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.589" endtime="20201112 09:43:10.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.588" endtime="20201112 09:43:10.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.634" endtime="20201112 09:43:10.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.586" endtime="20201112 09:43:10.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.584" endtime="20201112 09:43:10.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.559" endtime="20201112 09:43:10.637"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.660" endtime="20201112 09:43:10.844"></status>
</kw>
<msg timestamp="20201112 09:43:10.845" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.657" endtime="20201112 09:43:10.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.851" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.847" endtime="20201112 09:43:10.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.853" endtime="20201112 09:43:10.857"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.649" endtime="20201112 09:43:10.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.643" endtime="20201112 09:43:10.860"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.865" endtime="20201112 09:43:10.869"></status>
</kw>
<msg timestamp="20201112 09:43:10.870" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:43:10.862" endtime="20201112 09:43:10.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.880" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:43:10.878" endtime="20201112 09:43:10.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.885" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:43:10.883" endtime="20201112 09:43:10.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.872" endtime="20201112 09:43:10.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.897" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:43:10.894" endtime="20201112 09:43:10.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.901" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:43:10.899" endtime="20201112 09:43:10.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.888" endtime="20201112 09:43:10.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.923" endtime="20201112 09:43:11.263"></status>
</kw>
<msg timestamp="20201112 09:43:11.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.094844139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.094865611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:10.919" endtime="20201112 09:43:11.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.094844139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.094865611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:11.272" endtime="20201112 09:43:11.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.290" endtime="20201112 09:43:11.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.909" endtime="20201112 09:43:11.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.905" endtime="20201112 09:43:11.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:11.307" level="INFO">${RESULT} = [{'time': 0.094865611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1472000000008484e-05, 'source_diff': 2.1472000000008484e-05}, {'time': 0.098071417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:11.298" endtime="20201112 09:43:11.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:11.338" level="INFO">${OVERHEAD} = {'time': [0.094865611, 0.098071417, 0.101279778, 0.104487556, 0.107695444, 0.110898958, 0.114168125, 0.117375375, 0.120580181, 0.123790597, 0.126999375, 0.130203944, 0.133407097, 0.136620431, 0.139834...</msg>
<status status="PASS" starttime="20201112 09:43:11.309" endtime="20201112 09:43:11.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.349" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 09:43:11.347" endtime="20201112 09:43:11.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.354" level="INFO">VALUE: [2.1472000000008484e-05, 2.144499999999494e-05, 2.145900000000145e-05, 2.1514000000000255e-05, 2.1486000000001115e-05, 2.1430000000002836e-05, 2.1486000000001115e-05, 2.1444000000009344e-05, 2.143099999998843e-05, 2.1458000000001975e-05, 2.1471999999994607e-05, 2.1415999999996327e-05, 2.1444000000009344e-05, 2.1444999999981063e-05, 2.1444000000009344e-05, 2.1444000000009344e-05, 2.1445000000008818e-05, 2.144399999998159e-05, 2.14169999999958e-05, 2.140300000000317e-05, 2.1444000000009344e-05, 2.144399999998159e-05, 2.1444999999981063e-05, 2.145900000000145e-05, 2.1429999999988958e-05, 2.1444000000009344e-05, 2.1431000000016187e-05, 2.144399999998159e-05, 2.1429999999988958e-05, 2.143099999998843e-05, 2.143099999998843e-05, 2.1444000000009344e-05, 2.1444000000009344e-05, 2.1444000000009344e-05, 2.145900000000145e-05, 2.1445000000008818e-05, 2.1444999999981063e-05, 2.1415999999996327e-05, 2.144399999998159e-05, 2.1472000000022362e-05, 2.1445000000008818e-05, 2.1445000000008818e-05, 2.1402000000003696e-05, 2.1445000000008818e-05, 2.1444000000009344e-05, 2.144399999998159e-05, 2.1429999999988958e-05, 2.1444000000009344e-05, 2.1458000000001975e-05, 2.145900000000145e-05]</msg>
<status status="PASS" starttime="20201112 09:43:11.351" endtime="20201112 09:43:11.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.340" endtime="20201112 09:43:11.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.363" endtime="20201112 09:43:11.366"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:11.372" endtime="20201112 09:43:11.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.367" endtime="20201112 09:43:11.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.359" endtime="20201112 09:43:11.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.638" endtime="20201112 09:43:11.397"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:10.556" endtime="20201112 09:43:11.400" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:42:42.067" endtime="20201112 09:43:11.421"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.592" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:43:11.607" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:43:13.548" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:43:11.588" endtime="20201112 09:43:13.550"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.555" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:43:13.552" endtime="20201112 09:43:13.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.586" endtime="20201112 09:43:13.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:13.562" endtime="20201112 09:43:13.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.559" endtime="20201112 09:43:13.780"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.851" endtime="20201112 09:43:13.886"></status>
</kw>
<msg timestamp="20201112 09:43:13.887" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['his is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', ...</msg>
<status status="PASS" starttime="20201112 09:43:13.848" endtime="20201112 09:43:13.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.893" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['his is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', ...</msg>
<status status="PASS" starttime="20201112 09:43:13.889" endtime="20201112 09:43:13.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.900" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:13.896" endtime="20201112 09:43:13.901"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:13.841" endtime="20201112 09:43:13.903"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:13.836" endtime="20201112 09:43:13.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.833" endtime="20201112 09:43:13.905"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:13.913" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:13.911" endtime="20201112 09:43:13.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.907" endtime="20201112 09:43:13.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.832" endtime="20201112 09:43:13.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.830" endtime="20201112 09:43:13.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.916" endtime="20201112 09:43:13.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.827" endtime="20201112 09:43:13.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.923" endtime="20201112 09:43:13.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.823" endtime="20201112 09:43:13.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.583" endtime="20201112 09:43:13.929"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:13.946" endtime="20201112 09:43:13.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.940" endtime="20201112 09:43:13.969"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.003" endtime="20201112 09:43:14.026"></status>
</kw>
<msg timestamp="20201112 09:43:14.028" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.999" endtime="20201112 09:43:14.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.034" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:14.030" endtime="20201112 09:43:14.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.041" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:14.037" endtime="20201112 09:43:14.042"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:13.992" endtime="20201112 09:43:14.044"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:13.985" endtime="20201112 09:43:14.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.983" endtime="20201112 09:43:14.046"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:14.054" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:14.053" endtime="20201112 09:43:14.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.048" endtime="20201112 09:43:14.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.981" endtime="20201112 09:43:14.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.979" endtime="20201112 09:43:14.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.058" endtime="20201112 09:43:14.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.975" endtime="20201112 09:43:14.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.971" endtime="20201112 09:43:14.064"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.937" endtime="20201112 09:43:14.065"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.093" endtime="20201112 09:43:14.110"></status>
</kw>
<msg timestamp="20201112 09:43:14.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:14.089" endtime="20201112 09:43:14.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:14.114" endtime="20201112 09:43:14.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.120" endtime="20201112 09:43:14.124"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.081" endtime="20201112 09:43:14.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.075" endtime="20201112 09:43:14.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.146" endtime="20201112 09:43:14.494"></status>
</kw>
<msg timestamp="20201112 09:43:14.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140340208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.140343125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:14.142" endtime="20201112 09:43:14.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140340208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.140343125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:14.503" endtime="20201112 09:43:14.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.522" endtime="20201112 09:43:14.526"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.133" endtime="20201112 09:43:14.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.128" endtime="20201112 09:43:14.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:14.540" level="INFO">${RESULT} = [{'time': 0.140343125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9170000000189322e-06, 'source_diff': 2.9170000000189322e-06}, {'time': 0.140358583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:14.531" endtime="20201112 09:43:14.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:14.570" level="INFO">${ACCURACY} = {'time': [0.140343125, 0.140358583, 0.14036925, 0.140380125, 0.140389306, 0.14039725, 0.140414583, 0.140429417, 0.140434361, 0.140452542, 0.140465194, 0.140479403, 0.140496542, 0.140504472, 0.14051423...</msg>
<status status="PASS" starttime="20201112 09:43:14.542" endtime="20201112 09:43:14.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.582" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 09:43:14.580" endtime="20201112 09:43:14.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.588" level="INFO">VALUE: [2.9170000000189322e-06, 2.9300000000120896e-06, 2.9579999999973516e-06, 2.9579999999973516e-06, 2.9450000000041943e-06, 2.9310000000115632e-06, 2.9579999999973516e-06, 2.9450000000041943e-06, 2.4440000000180984e-06, 2.959000000024581e-06, 2.4439999999903428e-06, 2.9450000000041943e-06, 2.9589999999968253e-06, 2.929999999984334e-06, 2.471999999975605e-06, 2.471999999975605e-06, 2.9310000000115632e-06, 2.9579999999973516e-06, 2.4439999999903428e-06, 2.4589999999824474e-06, 2.9440000000047206e-06, 2.4309999999971854e-06, 2.4440000000180984e-06, 2.9440000000047206e-06, 2.445000000017572e-06, 2.4859999999959914e-06, 2.52800000000164e-06, 2.9310000000115632e-06, 2.457999999982974e-06, 2.9579999999973516e-06, 2.9579999999973516e-06, 2.8890000000059146e-06, 2.9589999999968253e-06, 2.4720000000033604e-06, 2.929999999984334e-06, 3.0139999999956313e-06, 2.9589999999968253e-06, 2.9440000000047206e-06, 2.445000000017572e-06, 3.416000000006081e-06, 2.4299999999977118e-06, 2.360999999978519e-06, 2.9579999999973516e-06, 2.4309999999971854e-06, 2.9440000000047206e-06, 2.4589999999824474e-06, 2.9579999999973516e-06, 2.4580000000107294e-06, 3.443999999991343e-06, 2.9450000000041943e-06]</msg>
<status status="PASS" starttime="20201112 09:43:14.585" endtime="20201112 09:43:14.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.572" endtime="20201112 09:43:14.590"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.597" endtime="20201112 09:43:14.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:14.605" endtime="20201112 09:43:14.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.601" endtime="20201112 09:43:14.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.592" endtime="20201112 09:43:14.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.071" endtime="20201112 09:43:14.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.069" endtime="20201112 09:43:14.631"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.653" endtime="20201112 09:43:14.671"></status>
</kw>
<msg timestamp="20201112 09:43:14.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:14.650" endtime="20201112 09:43:14.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:14.674" endtime="20201112 09:43:14.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.680" endtime="20201112 09:43:14.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.643" endtime="20201112 09:43:14.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.637" endtime="20201112 09:43:14.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.704" endtime="20201112 09:43:15.034"></status>
</kw>
<msg timestamp="20201112 09:43:15.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04163675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041640708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:14.700" endtime="20201112 09:43:15.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04163675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041640708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:15.043" endtime="20201112 09:43:15.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.062" endtime="20201112 09:43:15.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.693" endtime="20201112 09:43:15.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.688" endtime="20201112 09:43:15.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:15.080" level="INFO">${RESULT} = [{'time': 0.041640708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.041657042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:15.071" endtime="20201112 09:43:15.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:15.111" level="INFO">${ACCURACY} = {'time': [0.041640708, 0.041657042, 0.04167475, 0.041680903, 0.041698083, 0.041707014, 0.041712958, 0.041724819, 0.041731597, 0.041741708, 0.041760653, 0.041768681, 0.041781958, 0.041797972, 0.0418159...</msg>
<status status="PASS" starttime="20201112 09:43:15.083" endtime="20201112 09:43:15.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.123" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 09:43:15.120" endtime="20201112 09:43:15.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.129" level="INFO">VALUE: [3.957999999998352e-06, 4.430999999999186e-06, 3.958000000005291e-06, 3.4589999999973253e-06, 4.471999999998422e-06, 3.9309999999986855e-06, 3.4439999999982818e-06, 3.944000000005721e-06, 3.4300000000056508e-06, 3.4440000000052207e-06, 3.945000000005194e-06, 3.4310000000051244e-06, 3.4579999999978517e-06, 3.888999999999976e-06, 4.000000000004e-06, 4.4449999999987555e-06, 3.9720000000048605e-06, 3.945000000005194e-06, 3.4720000000043605e-06, 3.4579999999978517e-06, 3.4579999999978517e-06, 3.4580000000047906e-06, 3.4440000000052207e-06, 3.4579999999978517e-06, 3.4729999999968952e-06, 3.4449999999977554e-06, 3.875000000000406e-06, 3.4579999999978517e-06, 3.4719999999974216e-06, 3.9449999999982555e-06, 3.9720000000048605e-06, 3.4449999999977554e-06, 3.9720000000048605e-06, 4.443999999999282e-06, 3.4579999999978517e-06, 3.4589999999973253e-06, 3.943999999998782e-06, 3.4719999999974216e-06, 3.986999999996965e-06, 4.5000000000045e-06, 3.958000000005291e-06, 3.4309999999981855e-06, 3.943999999998782e-06, 3.4309999999981855e-06, 3.4580000000047906e-06, 3.944000000005721e-06, 3.4580000000047906e-06, 3.4589999999973253e-06, 4.443999999999282e-06, 3.4169999999986156e-06]</msg>
<status status="PASS" starttime="20201112 09:43:15.125" endtime="20201112 09:43:15.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.113" endtime="20201112 09:43:15.132"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.138" endtime="20201112 09:43:15.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:15.147" endtime="20201112 09:43:15.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.143" endtime="20201112 09:43:15.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.133" endtime="20201112 09:43:15.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.633" endtime="20201112 09:43:15.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.632" endtime="20201112 09:43:15.173"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.195" endtime="20201112 09:43:15.213"></status>
</kw>
<msg timestamp="20201112 09:43:15.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:15.192" endtime="20201112 09:43:15.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:15.216" endtime="20201112 09:43:15.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.223" endtime="20201112 09:43:15.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.185" endtime="20201112 09:43:15.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.179" endtime="20201112 09:43:15.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.246" endtime="20201112 09:43:15.577"></status>
</kw>
<msg timestamp="20201112 09:43:15.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041568167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041573611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:15.243" endtime="20201112 09:43:15.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041568167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041573611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:15.586" endtime="20201112 09:43:15.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.605" endtime="20201112 09:43:15.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.235" endtime="20201112 09:43:15.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.231" endtime="20201112 09:43:15.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:15.623" level="INFO">${RESULT} = [{'time': 0.041573611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.444000000000282e-06, 'source_diff': 5.444000000000282e-06}, {'time': 0.041589306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:15.614" endtime="20201112 09:43:15.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:15.654" level="INFO">${ACCURACY} = {'time': [0.041573611, 0.041589306, 0.041602181, 0.041615375, 0.041630556, 0.041648222, 0.041659208, 0.041676153, 0.041683417, 0.041703583, 0.041713319, 0.041726181, 0.041744389, 0.041757167, 0.041767...</msg>
<status status="PASS" starttime="20201112 09:43:15.625" endtime="20201112 09:43:15.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.665" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 09:43:15.662" endtime="20201112 09:43:15.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.670" level="INFO">VALUE: [5.444000000000282e-06, 4.4449999999987555e-06, 4.930999999999686e-06, 4.416999999999616e-06, 4.9589999999988255e-06, 4.971999999998922e-06, 4.958000000006291e-06, 4.4449999999987555e-06, 4.9589999999988255e-06, 4.972000000005861e-06, 4.957999999999352e-06, 4.9449999999992555e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.957999999999352e-06, 4.4449999999987555e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 5.430000000000712e-06, 4.458999999998325e-06, 4.971999999998922e-06, 5.431000000000186e-06, 4.971999999998922e-06, 4.9589999999988255e-06, 4.485999999997992e-06, 4.443999999999282e-06, 4.9589999999988255e-06, 4.458000000005791e-06, 4.9449999999992555e-06, 4.972000000005861e-06, 4.9589999999988255e-06, 4.9589999999988255e-06, 4.9449999999992555e-06, 5.431000000000186e-06, 4.443999999999282e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.5000000000045e-06, 4.957999999999352e-06, 4.959000000005764e-06, 4.943999999999782e-06, 4.443999999999282e-06, 4.889000000000976e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 5.457999999999852e-06, 4.903000000000546e-06, 4.443999999999282e-06, 4.9449999999992555e-06, 4.930999999999686e-06]</msg>
<status status="PASS" starttime="20201112 09:43:15.667" endtime="20201112 09:43:15.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.655" endtime="20201112 09:43:15.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.679" endtime="20201112 09:43:15.682"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:15.687" endtime="20201112 09:43:15.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.683" endtime="20201112 09:43:15.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.674" endtime="20201112 09:43:15.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.175" endtime="20201112 09:43:15.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.174" endtime="20201112 09:43:15.713"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.735" endtime="20201112 09:43:15.753"></status>
</kw>
<msg timestamp="20201112 09:43:15.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:15.732" endtime="20201112 09:43:15.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:15.756" endtime="20201112 09:43:15.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.763" endtime="20201112 09:43:15.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.725" endtime="20201112 09:43:15.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.719" endtime="20201112 09:43:15.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.786" endtime="20201112 09:43:16.117"></status>
</kw>
<msg timestamp="20201112 09:43:16.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041396292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041402278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:15.783" endtime="20201112 09:43:16.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041396292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041402278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:16.127" endtime="20201112 09:43:16.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.146" endtime="20201112 09:43:16.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.776" endtime="20201112 09:43:16.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.771" endtime="20201112 09:43:16.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:16.165" level="INFO">${RESULT} = [{'time': 0.041402278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.041417181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:16.155" endtime="20201112 09:43:16.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:16.197" level="INFO">${ACCURACY} = {'time': [0.041402278, 0.041417181, 0.041428333, 0.041449292, 0.041461292, 0.041480153, 0.041499986, 0.041514181, 0.041535347, 0.041546014, 0.041561125, 0.041570319, 0.041591194, 0.041607361, 0.041617...</msg>
<status status="PASS" starttime="20201112 09:43:16.167" endtime="20201112 09:43:16.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.208" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 09:43:16.205" endtime="20201112 09:43:16.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.213" level="INFO">VALUE: [5.985999999999492e-06, 5.916999999994177e-06, 5.958000000000352e-06, 5.945000000000256e-06, 5.9589999999998255e-06, 5.945000000000256e-06, 5.457999999999852e-06, 5.431000000000186e-06, 5.958000000000352e-06, 5.457999999999852e-06, 5.931000000000686e-06, 5.444000000000282e-06, 5.416000000001142e-06, 5.958000000000352e-06, 5.945000000000256e-06, 5.944000000000782e-06, 5.430000000000712e-06, 5.944000000000782e-06, 5.471999999999422e-06, 5.416999999993677e-06, 5.444000000000282e-06, 5.958000000000352e-06, 5.944000000000782e-06, 5.444000000000282e-06, 5.958000000000352e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.457999999999852e-06, 6.403000000002046e-06, 5.945000000000256e-06, 5.945000000000256e-06, 6.458000000000852e-06, 5.945000000000256e-06, 5.444000000000282e-06, 5.444000000000282e-06, 6.458000000000852e-06, 5.4589999999993255e-06, 5.945000000000256e-06, 5.944000000000782e-06, 6.445000000000756e-06, 5.4589999999993255e-06, 5.986999999998965e-06, 5.944000000000782e-06, 5.457999999999852e-06, 6.02800000000514e-06, 5.958000000000352e-06, 5.944000000000782e-06, 6.459000000000326e-06, 5.917000000001116e-06, 5.931000000000686e-06]</msg>
<status status="PASS" starttime="20201112 09:43:16.210" endtime="20201112 09:43:16.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.199" endtime="20201112 09:43:16.216"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.222" endtime="20201112 09:43:16.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:16.231" endtime="20201112 09:43:16.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.226" endtime="20201112 09:43:16.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.217" endtime="20201112 09:43:16.256"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.715" endtime="20201112 09:43:16.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.714" endtime="20201112 09:43:16.258"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.282" endtime="20201112 09:43:16.299"></status>
</kw>
<msg timestamp="20201112 09:43:16.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.278" endtime="20201112 09:43:16.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.303" endtime="20201112 09:43:16.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.310" endtime="20201112 09:43:16.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.271" endtime="20201112 09:43:16.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.265" endtime="20201112 09:43:16.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.334" endtime="20201112 09:43:16.672"></status>
</kw>
<msg timestamp="20201112 09:43:16.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044354889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044361819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:16.331" endtime="20201112 09:43:16.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044354889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044361819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:16.682" endtime="20201112 09:43:16.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.701" endtime="20201112 09:43:16.705"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.323" endtime="20201112 09:43:16.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.318" endtime="20201112 09:43:16.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:16.719" level="INFO">${RESULT} = [{'time': 0.044361819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.929999999995273e-06, 'source_diff': 6.929999999995273e-06}, {'time': 0.044374931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:16.710" endtime="20201112 09:43:16.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:16.752" level="INFO">${ACCURACY} = {'time': [0.044361819, 0.044374931, 0.044389764, 0.044407764, 0.044422861, 0.044443708, 0.044460792, 0.044471819, 0.04448075, 0.044500917, 0.044511931, 0.044531861, 0.044549556, 0.044568819, 0.0445828...</msg>
<status status="PASS" starttime="20201112 09:43:16.721" endtime="20201112 09:43:16.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.764" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 09:43:16.762" endtime="20201112 09:43:16.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.769" level="INFO">VALUE: [6.929999999995273e-06, 7.4870000000004655e-06, 6.945000000001256e-06, 6.958000000001352e-06, 6.972000000000922e-06, 6.485999999999992e-06, 6.431000000001186e-06, 6.458000000000852e-06, 6.444000000001282e-06, 7.459000000001326e-06, 7.473000000000896e-06, 7.429999999995773e-06, 6.444999999993817e-06, 6.958000000001352e-06, 6.972000000000922e-06, 6.945000000001256e-06, 6.931000000001686e-06, 6.459000000000326e-06, 6.958000000001352e-06, 6.444999999993817e-06, 6.445000000000756e-06, 6.458000000000852e-06, 6.945000000001256e-06, 6.957999999994413e-06, 7.417000000002616e-06, 6.445000000000756e-06, 6.5279999999987015e-06, 6.959000000000826e-06, 6.958000000001352e-06, 6.957999999994413e-06, 6.930999999994747e-06, 6.4729999999998955e-06, 6.917000000002116e-06, 6.472000000000422e-06, 6.444000000001282e-06, 6.458000000000852e-06, 6.944000000001782e-06, 6.416000000002142e-06, 6.958000000001352e-06, 6.443999999994343e-06, 6.459000000000326e-06, 6.485999999999992e-06, 6.931000000001686e-06, 6.485999999999992e-06, 6.431000000001186e-06, 7.443999999995343e-06, 6.959000000000826e-06, 6.389000000002476e-06, 7.0279999999992016e-06, 6.944000000001782e-06]</msg>
<status status="PASS" starttime="20201112 09:43:16.766" endtime="20201112 09:43:16.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.754" endtime="20201112 09:43:16.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.778" endtime="20201112 09:43:16.781"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:16.787" endtime="20201112 09:43:16.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.782" endtime="20201112 09:43:16.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.774" endtime="20201112 09:43:16.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.260" endtime="20201112 09:43:16.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.259" endtime="20201112 09:43:16.812"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.823" endtime="20201112 09:43:16.838"></status>
</kw>
<msg timestamp="20201112 09:43:16.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.821" endtime="20201112 09:43:16.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.840" endtime="20201112 09:43:16.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.843" endtime="20201112 09:43:16.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.818" endtime="20201112 09:43:16.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.815" endtime="20201112 09:43:16.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.855" endtime="20201112 09:43:17.141"></status>
</kw>
<msg timestamp="20201112 09:43:17.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028254083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028261542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:16.853" endtime="20201112 09:43:17.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028254083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028261542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:17.146" endtime="20201112 09:43:17.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.154" endtime="20201112 09:43:17.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.850" endtime="20201112 09:43:17.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.847" endtime="20201112 09:43:17.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:17.162" level="INFO">${RESULT} = [{'time': 0.028261542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.459000000001326e-06, 'source_diff': 7.459000000001326e-06}, {'time': 0.028273444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:17.158" endtime="20201112 09:43:17.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:17.177" level="INFO">${ACCURACY} = {'time': [0.028261542, 0.028273444, 0.028287458, 0.028305389, 0.028316583, 0.028334472, 0.028346292, 0.028357653, 0.028369264, 0.028385458, 0.028404236, 0.028415333, 0.028431611, 0.028450514, 0.028469...</msg>
<status status="PASS" starttime="20201112 09:43:17.163" endtime="20201112 09:43:17.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.183" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 09:43:17.181" endtime="20201112 09:43:17.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.185" level="INFO">VALUE: [7.459000000001326e-06, 7.957999999998883e-06, 7.972000000001922e-06, 7.944999999998786e-06, 7.429999999999243e-06, 7.457999999998383e-06, 7.458999999997856e-06, 8.389000000001007e-06, 7.431000000002186e-06, 7.443999999998813e-06, 7.943999999999313e-06, 7.972000000001922e-06, 7.957999999998883e-06, 7.444999999998286e-06, 7.457999999998383e-06, 7.959000000001826e-06, 7.458999999997856e-06, 7.443999999998813e-06, 7.958999999998356e-06, 8.028000000000202e-06, 7.972999999997926e-06, 7.458999999997856e-06, 7.403000000003046e-06, 7.958000000002352e-06, 7.472000000001422e-06, 7.443999999998813e-06, 7.944999999998786e-06, 7.458999999997856e-06, 7.431000000002186e-06, 7.4719999999979525e-06, 7.944000000002782e-06, 7.958000000002352e-06, 7.943999999999313e-06, 7.958000000002352e-06, 7.457999999998383e-06, 7.875000000000937e-06, 7.457999999998383e-06, 7.445000000001756e-06, 7.444999999998286e-06, 7.971999999998453e-06, 7.957999999998883e-06, 7.444999999998286e-06, 7.514000000000132e-06, 7.445000000001756e-06, 7.943999999999313e-06, 7.444000000002282e-06, 7.473000000000896e-06, 7.958000000002352e-06, 7.458000000001852e-06, 7.445000000001756e-06]</msg>
<status status="PASS" starttime="20201112 09:43:17.184" endtime="20201112 09:43:17.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.178" endtime="20201112 09:43:17.187"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.190" endtime="20201112 09:43:17.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:17.195" endtime="20201112 09:43:17.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.192" endtime="20201112 09:43:17.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.188" endtime="20201112 09:43:17.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.813" endtime="20201112 09:43:17.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.813" endtime="20201112 09:43:17.216"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.240" endtime="20201112 09:43:17.258"></status>
</kw>
<msg timestamp="20201112 09:43:17.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.236" endtime="20201112 09:43:17.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.262" endtime="20201112 09:43:17.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.268" endtime="20201112 09:43:17.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.229" endtime="20201112 09:43:17.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.223" endtime="20201112 09:43:17.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.293" endtime="20201112 09:43:17.630"></status>
</kw>
<msg timestamp="20201112 09:43:17.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039670153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039678625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:17.289" endtime="20201112 09:43:17.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039670153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039678625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:17.639" endtime="20201112 09:43:17.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.658" endtime="20201112 09:43:17.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.282" endtime="20201112 09:43:17.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.277" endtime="20201112 09:43:17.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:17.676" level="INFO">${RESULT} = [{'time': 0.039678625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.472000000002422e-06, 'source_diff': 8.472000000002422e-06}, {'time': 0.039702486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:17.667" endtime="20201112 09:43:17.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:17.707" level="INFO">${ACCURACY} = {'time': [0.039678625, 0.039702486, 0.039719333, 0.039734528, 0.039754653, 0.039766319, 0.039786653, 0.039805681, 0.039825597, 0.039844375, 0.039859542, 0.039871708, 0.039885722, 0.039901681, 0.039919...</msg>
<status status="PASS" starttime="20201112 09:43:17.678" endtime="20201112 09:43:17.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.720" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 09:43:17.718" endtime="20201112 09:43:17.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.726" level="INFO">VALUE: [8.472000000002422e-06, 8.458000000002852e-06, 8.944000000003782e-06, 8.944999999996317e-06, 8.459000000002326e-06, 8.972000000002922e-06, 8.471999999995483e-06, 9.459000000003326e-06, 8.457999999995913e-06, 8.958000000003352e-06, 8.944999999996317e-06, 9.457999999996913e-06, 9.014000000001632e-06, 8.931000000003686e-06, 8.930999999996747e-06, 8.443999999996343e-06, 8.459000000002326e-06, 8.959000000002826e-06, 8.445000000002756e-06, 8.528000000000702e-06, 8.971999999995983e-06, 8.958000000003352e-06, 8.957999999996413e-06, 8.416999999996677e-06, 9.458000000003852e-06, 8.945000000003256e-06, 8.458000000002852e-06, 8.458000000002852e-06, 8.471999999995483e-06, 8.931000000003686e-06, 8.458999999995387e-06, 8.930999999996747e-06, 8.458000000002852e-06, 8.444999999995817e-06, 8.459000000002326e-06, 8.443999999996343e-06, 8.944000000003782e-06, 8.429999999996773e-06, 8.458000000002852e-06, 8.443999999996343e-06, 9.417000000004616e-06, 8.457999999995913e-06, 8.944999999996317e-06, 8.958000000003352e-06, 8.458000000002852e-06, 9.472000000003422e-06, 8.959000000002826e-06, 8.959000000002826e-06, 8.999999999995123e-06, 8.444000000003282e-06]</msg>
<status status="PASS" starttime="20201112 09:43:17.722" endtime="20201112 09:43:17.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.709" endtime="20201112 09:43:17.728"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.735" endtime="20201112 09:43:17.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:17.743" endtime="20201112 09:43:17.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.739" endtime="20201112 09:43:17.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.730" endtime="20201112 09:43:17.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.218" endtime="20201112 09:43:17.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.217" endtime="20201112 09:43:17.769"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.793" endtime="20201112 09:43:17.811"></status>
</kw>
<msg timestamp="20201112 09:43:17.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.790" endtime="20201112 09:43:17.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.815" endtime="20201112 09:43:17.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.821" endtime="20201112 09:43:17.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.782" endtime="20201112 09:43:17.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.776" endtime="20201112 09:43:17.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.845" endtime="20201112 09:43:18.183"></status>
</kw>
<msg timestamp="20201112 09:43:18.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043040708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043050167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:17.842" endtime="20201112 09:43:18.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043040708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043050167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:18.193" endtime="20201112 09:43:18.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.212" endtime="20201112 09:43:18.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.834" endtime="20201112 09:43:18.218"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.829" endtime="20201112 09:43:18.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:18.231" level="INFO">${RESULT} = [{'time': 0.043050167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.459000000003326e-06, 'source_diff': 9.459000000003326e-06}, {'time': 0.043067417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:18.222" endtime="20201112 09:43:18.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:18.263" level="INFO">${ACCURACY} = {'time': [0.043050167, 0.043067417, 0.043085417, 0.043110292, 0.043127375, 0.043144569, 0.043157486, 0.043177292, 0.04320225, 0.043223153, 0.043241153, 0.043262486, 0.043278417, 0.043303583, 0.0433183...</msg>
<status status="PASS" starttime="20201112 09:43:18.233" endtime="20201112 09:43:18.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.274" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 09:43:18.272" endtime="20201112 09:43:18.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.281" level="INFO">VALUE: [9.459000000003326e-06, 9.888999999999037e-06, 9.459000000003326e-06, 9.459000000003326e-06, 1.0014000000002632e-05, 9.943999999997843e-06, 1.0000000000003062e-05, 9.444999999996817e-06, 9.888999999999037e-06, 9.459000000003326e-06, 9.458999999996387e-06, 9.444000000004282e-06, 9.458999999996387e-06, 9.957999999997413e-06, 9.971999999996983e-06, 9.457999999996913e-06, 9.944000000004782e-06, 9.445000000003756e-06, 9.972999999996457e-06, 9.430000000004712e-06, 9.943999999997843e-06, 9.929999999998274e-06, 9.985999999996553e-06, 9.443999999997343e-06, 9.943999999997843e-06, 9.444999999996817e-06, 9.945000000004256e-06, 9.443999999997343e-06, 9.957999999997413e-06, 9.943999999997843e-06, 9.972999999996457e-06, 9.943999999997843e-06, 9.931000000004686e-06, 9.943999999997843e-06, 9.444000000004282e-06, 1.0458999999997387e-05, 9.930000000005212e-06, 9.957999999997413e-06, 9.445000000003756e-06, 9.458000000003852e-06, 1.0041000000002298e-05, 9.944000000004782e-06, 9.430999999997247e-06, 9.972000000003922e-06, 9.958000000004352e-06, 9.957999999997413e-06, 9.915999999998704e-06, 9.958000000004352e-06, 9.943999999997843e-06, 9.458000000003852e-06]</msg>
<status status="PASS" starttime="20201112 09:43:18.276" endtime="20201112 09:43:18.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.265" endtime="20201112 09:43:18.284"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.290" endtime="20201112 09:43:18.293"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:18.299" endtime="20201112 09:43:18.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.295" endtime="20201112 09:43:18.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.285" endtime="20201112 09:43:18.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.771" endtime="20201112 09:43:18.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.770" endtime="20201112 09:43:18.325"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.348" endtime="20201112 09:43:18.367"></status>
</kw>
<msg timestamp="20201112 09:43:18.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:18.345" endtime="20201112 09:43:18.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:18.370" endtime="20201112 09:43:18.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.377" endtime="20201112 09:43:18.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.338" endtime="20201112 09:43:18.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.332" endtime="20201112 09:43:18.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.401" endtime="20201112 09:43:18.737"></status>
</kw>
<msg timestamp="20201112 09:43:18.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042739222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042750194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:18.397" endtime="20201112 09:43:18.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042739222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042750194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:18.746" endtime="20201112 09:43:18.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.765" endtime="20201112 09:43:18.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.390" endtime="20201112 09:43:18.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.385" endtime="20201112 09:43:18.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:18.783" level="INFO">${RESULT} = [{'time': 0.042750194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0971999999997983e-05, 'source_diff': 1.0971999999997983e-05}, {'time': 0.042763431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:18.774" endtime="20201112 09:43:18.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:18.816" level="INFO">${ACCURACY} = {'time': [0.042750194, 0.042763431, 0.042789292, 0.042805403, 0.042828208, 0.042848236, 0.042867611, 0.042892625, 0.042918639, 0.042943639, 0.042958556, 0.042974319, 0.042994236, 0.043009583, 0.043032...</msg>
<status status="PASS" starttime="20201112 09:43:18.785" endtime="20201112 09:43:18.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.827" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 09:43:18.825" endtime="20201112 09:43:18.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.833" level="INFO">VALUE: [1.0971999999997983e-05, 1.0958999999997887e-05, 1.0430999999998247e-05, 1.0485999999997053e-05, 1.0943999999998844e-05, 1.0429999999998774e-05, 1.1443999999999344e-05, 1.1471999999998483e-05, 1.1430999999999247e-05, 1.1457999999998913e-05, 1.0959000000004826e-05, 1.0971999999997983e-05, 1.0971999999997983e-05, 1.0971999999997983e-05, 1.0902999999999607e-05, 1.0431000000005186e-05, 1.0943999999998844e-05, 1.0499999999996623e-05, 1.0443999999998343e-05, 1.0444999999997817e-05, 1.0457999999997913e-05, 1.0957999999998413e-05, 1.0959000000004826e-05, 1.0929999999999274e-05, 1.0889000000000038e-05, 1.0457999999997913e-05, 1.1444999999998817e-05, 1.0471999999997483e-05, 1.0944999999998317e-05, 1.0457999999997913e-05, 1.0943999999998844e-05, 1.0971999999997983e-05, 1.0445000000004756e-05, 1.0471999999997483e-05, 1.0430000000005712e-05, 1.0957999999998413e-05, 1.0471999999997483e-05, 1.0929999999999274e-05, 1.0443999999998343e-05, 1.0457999999997913e-05, 1.1458999999998387e-05, 1.0943999999998844e-05, 1.0415999999999204e-05, 1.0457999999997913e-05, 1.0958000000005352e-05, 1.0471999999997483e-05, 1.0944999999998317e-05, 1.1443999999999344e-05, 1.0429999999998774e-05, 1.0944999999998317e-05]</msg>
<status status="PASS" starttime="20201112 09:43:18.830" endtime="20201112 09:43:18.841"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.818" endtime="20201112 09:43:18.843"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.849" endtime="20201112 09:43:18.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:18.860" endtime="20201112 09:43:18.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.855" endtime="20201112 09:43:18.883"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.845" endtime="20201112 09:43:18.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.327" endtime="20201112 09:43:18.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.326" endtime="20201112 09:43:18.886"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.909" endtime="20201112 09:43:18.927"></status>
</kw>
<msg timestamp="20201112 09:43:18.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:18.905" endtime="20201112 09:43:18.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:18.931" endtime="20201112 09:43:18.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.937" endtime="20201112 09:43:18.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.898" endtime="20201112 09:43:18.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.892" endtime="20201112 09:43:18.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.961" endtime="20201112 09:43:19.302"></status>
</kw>
<msg timestamp="20201112 09:43:19.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042649417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042661361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:18.958" endtime="20201112 09:43:19.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042649417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042661361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:19.312" endtime="20201112 09:43:19.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.332" endtime="20201112 09:43:19.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.950" endtime="20201112 09:43:19.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.946" endtime="20201112 09:43:19.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:19.349" level="INFO">${RESULT} = [{'time': 0.042661361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1943999999999844e-05, 'source_diff': 1.1943999999999844e-05}, {'time': 0.042677472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:19.340" endtime="20201112 09:43:19.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:19.381" level="INFO">${ACCURACY} = {'time': [0.042661361, 0.042677472, 0.042697167, 0.042715458, 0.042735556, 0.042751236, 0.042774167, 0.042792361, 0.042813472, 0.0428345, 0.042861361, 0.042876417, 0.042898125, 0.042913319, 0.04293444...</msg>
<status status="PASS" starttime="20201112 09:43:19.351" endtime="20201112 09:43:19.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.392" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 09:43:19.389" endtime="20201112 09:43:19.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.397" level="INFO">VALUE: [1.1943999999999844e-05, 1.1957999999999414e-05, 1.1985999999998553e-05, 1.1443999999999344e-05, 1.1972999999998457e-05, 1.1930000000000274e-05, 1.1473000000004896e-05, 1.1943999999999844e-05, 1.1943999999999844e-05, 1.1430999999999247e-05, 1.1429999999999774e-05, 1.1513999999997193e-05, 1.1971999999998983e-05, 1.1443999999999344e-05, 1.1943999999999844e-05, 1.1444999999998817e-05, 1.1971999999998983e-05, 1.1972999999998457e-05, 1.1403000000000107e-05, 1.1957999999999414e-05, 1.1930000000000274e-05, 1.1945000000006256e-05, 1.1999999999998123e-05, 1.1971999999998983e-05, 1.1430999999999247e-05, 1.1457999999998913e-05, 1.1943999999999844e-05, 1.1429999999999774e-05, 1.2457999999999914e-05, 1.1903000000000608e-05, 1.2457999999999914e-05, 1.2444000000000344e-05, 1.1958999999998887e-05, 1.1943999999999844e-05, 1.1458999999998387e-05, 1.1444000000006282e-05, 1.1943999999999844e-05, 1.1472000000005422e-05, 1.1457999999998913e-05, 1.1943999999999844e-05, 1.1959000000005826e-05, 1.1985999999998553e-05, 1.1958999999998887e-05, 1.1472999999997957e-05, 1.1943999999999844e-05, 1.1943999999999844e-05, 1.1957999999999414e-05, 1.1458999999998387e-05, 1.1944999999999317e-05, 1.1444999999998817e-05]</msg>
<status status="PASS" starttime="20201112 09:43:19.394" endtime="20201112 09:43:19.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.382" endtime="20201112 09:43:19.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.407" endtime="20201112 09:43:19.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:19.416" endtime="20201112 09:43:19.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.411" endtime="20201112 09:43:19.439"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.402" endtime="20201112 09:43:19.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.888" endtime="20201112 09:43:19.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.887" endtime="20201112 09:43:19.442"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.467" endtime="20201112 09:43:19.485"></status>
</kw>
<msg timestamp="20201112 09:43:19.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:19.463" endtime="20201112 09:43:19.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:19.488" endtime="20201112 09:43:19.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.495" endtime="20201112 09:43:19.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.456" endtime="20201112 09:43:19.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.448" endtime="20201112 09:43:19.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.519" endtime="20201112 09:43:19.857"></status>
</kw>
<msg timestamp="20201112 09:43:19.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044629278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044642222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:19.516" endtime="20201112 09:43:19.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044629278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044642222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:19.867" endtime="20201112 09:43:19.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.886" endtime="20201112 09:43:19.890"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.508" endtime="20201112 09:43:19.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.503" endtime="20201112 09:43:19.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:19.904" level="INFO">${RESULT} = [{'time': 0.044642222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2944000000000844e-05, 'source_diff': 1.2944000000000844e-05}, {'time': 0.044668236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:19.895" endtime="20201112 09:43:19.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:19.936" level="INFO">${ACCURACY} = {'time': [0.044642222, 0.044668236, 0.044692306, 0.044710056, 0.044726903, 0.044746917, 0.044766042, 0.04479225, 0.044819153, 0.044836069, 0.044854986, 0.044877014, 0.044898111, 0.044917056, 0.0449328...</msg>
<status status="PASS" starttime="20201112 09:43:19.906" endtime="20201112 09:43:19.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.947" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 09:43:19.944" endtime="20201112 09:43:19.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.952" level="INFO">VALUE: [1.2944000000000844e-05, 1.2471999999999483e-05, 1.3459000000000387e-05, 1.2958999999999887e-05, 1.2471999999999483e-05, 1.2945000000000317e-05, 1.2458999999999387e-05, 1.2457999999999914e-05, 1.2945000000000317e-05, 1.2944000000000844e-05, 1.2457999999999914e-05, 1.2444999999999817e-05, 1.2902999999994669e-05, 1.2486999999998527e-05, 1.2944999999993378e-05, 1.3458000000000914e-05, 1.2499999999998623e-05, 1.2931000000000747e-05, 1.2972999999999457e-05, 1.2444999999999817e-05, 1.2986999999999027e-05, 1.2930000000001274e-05, 1.2457999999999914e-05, 1.2458999999999387e-05, 1.2444999999999817e-05, 1.3013999999998693e-05, 1.2944000000000844e-05, 1.2459000000006326e-05, 1.2471999999999483e-05, 1.2471999999999483e-05, 1.2958000000000414e-05, 1.2444999999999817e-05, 1.2457999999999914e-05, 1.2431000000000247e-05, 1.2472999999998957e-05, 1.2958999999999887e-05, 1.2458999999999387e-05, 1.2471999999999483e-05, 1.2457999999999914e-05, 1.2916999999994239e-05, 1.2958000000000414e-05, 1.2930999999993809e-05, 1.2971999999999984e-05, 1.3429999999994835e-05, 1.2958000000000414e-05, 1.2971999999999984e-05, 1.2444999999999817e-05, 1.3027000000005728e-05, 1.2917000000001178e-05, 1.2444000000000344e-05]</msg>
<status status="PASS" starttime="20201112 09:43:19.949" endtime="20201112 09:43:19.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.937" endtime="20201112 09:43:19.956"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.962" endtime="20201112 09:43:19.965"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:19.971" endtime="20201112 09:43:19.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.966" endtime="20201112 09:43:19.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.957" endtime="20201112 09:43:19.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.444" endtime="20201112 09:43:19.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.443" endtime="20201112 09:43:19.997"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.020" endtime="20201112 09:43:20.039"></status>
</kw>
<msg timestamp="20201112 09:43:20.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.017" endtime="20201112 09:43:20.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.043" endtime="20201112 09:43:20.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.049" endtime="20201112 09:43:20.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.009" endtime="20201112 09:43:20.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.003" endtime="20201112 09:43:20.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.074" endtime="20201112 09:43:20.414"></status>
</kw>
<msg timestamp="20201112 09:43:20.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044357306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044371236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:20.070" endtime="20201112 09:43:20.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044357306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044371236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:20.423" endtime="20201112 09:43:20.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.442" endtime="20201112 09:43:20.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.063" endtime="20201112 09:43:20.448"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.058" endtime="20201112 09:43:20.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:20.457" level="INFO">${RESULT} = [{'time': 0.044371236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3930000000002274e-05, 'source_diff': 1.3930000000002274e-05}, {'time': 0.04439625, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:43:20.451" endtime="20201112 09:43:20.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:20.471" level="INFO">${ACCURACY} = {'time': [0.044371236, 0.04439625, 0.044420944, 0.044446972, 0.044472083, 0.044491792, 0.044521139, 0.044543167, 0.044563167, 0.044588931, 0.044611097, 0.044634153, 0.044653917, 0.044682861, 0.0447108...</msg>
<status status="PASS" starttime="20201112 09:43:20.458" endtime="20201112 09:43:20.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.476" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 09:43:20.475" endtime="20201112 09:43:20.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.479" level="INFO">VALUE: [1.3930000000002274e-05, 1.3930999999994809e-05, 1.3443999999994405e-05, 1.3930000000002274e-05, 1.3444000000001344e-05, 1.3445000000000817e-05, 1.3931000000001748e-05, 1.3472999999999957e-05, 1.3959000000000887e-05, 1.3486999999999527e-05, 1.3444000000001344e-05, 1.3472000000000484e-05, 1.3945000000001317e-05, 1.3929999999995335e-05, 1.3444999999993879e-05, 1.3972000000000984e-05, 1.3903000000002608e-05, 1.3958000000001414e-05, 1.4388999999996599e-05, 1.3930000000002274e-05, 1.3445000000000817e-05, 1.3458000000000914e-05, 1.3945000000001317e-05, 1.3959000000000887e-05, 1.3945000000001317e-05, 1.3945000000001317e-05, 1.3957999999994475e-05, 1.4444000000002344e-05, 1.3445000000000817e-05, 1.3944000000001844e-05, 1.3485999999993115e-05, 1.3471999999993545e-05, 1.3444000000001344e-05, 1.3959000000000887e-05, 1.3959000000000887e-05, 1.3513999999999193e-05, 1.3916999999995239e-05, 1.3458000000000914e-05, 1.3958000000001414e-05, 1.3916000000002704e-05, 1.3445000000000817e-05, 1.3958000000001414e-05, 1.3944999999994379e-05, 1.4445000000001817e-05, 1.3472000000000484e-05, 1.3917000000002178e-05, 1.3459000000000387e-05, 1.3943999999994905e-05, 1.3445000000000817e-05, 1.3972000000000984e-05]</msg>
<status status="PASS" starttime="20201112 09:43:20.477" endtime="20201112 09:43:20.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.472" endtime="20201112 09:43:20.481"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.484" endtime="20201112 09:43:20.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:20.488" endtime="20201112 09:43:20.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.486" endtime="20201112 09:43:20.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.481" endtime="20201112 09:43:20.509"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.999" endtime="20201112 09:43:20.509"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.998" endtime="20201112 09:43:20.509"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.520" endtime="20201112 09:43:20.536"></status>
</kw>
<msg timestamp="20201112 09:43:20.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.518" endtime="20201112 09:43:20.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.537" endtime="20201112 09:43:20.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.540" endtime="20201112 09:43:20.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.515" endtime="20201112 09:43:20.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.512" endtime="20201112 09:43:20.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.552" endtime="20201112 09:43:20.839"></status>
</kw>
<msg timestamp="20201112 09:43:20.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025309292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025324778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:20.551" endtime="20201112 09:43:20.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025309292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025324778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:20.843" endtime="20201112 09:43:20.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.852" endtime="20201112 09:43:20.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.547" endtime="20201112 09:43:20.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.544" endtime="20201112 09:43:20.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:20.860" level="INFO">${RESULT} = [{'time': 0.025324778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5485999999998584e-05, 'source_diff': 1.5485999999998584e-05}, {'time': 0.025343444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:20.856" endtime="20201112 09:43:20.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:20.875" level="INFO">${ACCURACY} = {'time': [0.025324778, 0.025343444, 0.025367556, 0.025386681, 0.025410778, 0.025440819, 0.025462653, 0.025480667, 0.025499778, 0.025521708, 0.025546458, 0.025576625, 0.025600472, 0.025618472, 0.025644...</msg>
<status status="PASS" starttime="20201112 09:43:20.861" endtime="20201112 09:43:20.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.880" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 09:43:20.879" endtime="20201112 09:43:20.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.883" level="INFO">VALUE: [1.5485999999998584e-05, 1.4943999999999374e-05, 1.4889000000000568e-05, 1.4959000000001887e-05, 1.4944999999998848e-05, 1.5457999999999444e-05, 1.4944999999998848e-05, 1.4458999999997918e-05, 1.4959000000001887e-05, 1.4443999999998874e-05, 1.4958000000002414e-05, 1.4943999999999374e-05, 1.4457999999998444e-05, 1.4443999999998874e-05, 1.4903000000000138e-05, 1.4929999999999805e-05, 1.4457999999998444e-05, 1.4458000000001914e-05, 1.4457999999998444e-05, 1.4959000000001887e-05, 1.4945000000002318e-05, 1.5457999999999444e-05, 1.4943999999999374e-05, 1.4444000000002344e-05, 1.4445000000001817e-05, 1.4430999999998778e-05, 1.4903000000000138e-05, 1.4957999999998944e-05, 1.4431000000002248e-05, 1.4958000000002414e-05, 1.4930999999999278e-05, 1.4458000000001914e-05, 1.4888000000001095e-05, 1.4445000000001817e-05, 1.4430000000002774e-05, 1.5430000000000305e-05, 1.4444999999998348e-05, 1.4957999999998944e-05, 1.4430999999998778e-05, 1.4943999999999374e-05, 1.4472999999997488e-05, 1.4957999999998944e-05, 1.4917000000003178e-05, 1.4958999999998418e-05, 1.4472000000001484e-05, 1.4445000000001817e-05, 1.4972000000001984e-05, 1.4430999999998778e-05, 1.4959000000001887e-05, 1.4458999999997918e-05]</msg>
<status status="PASS" starttime="20201112 09:43:20.881" endtime="20201112 09:43:20.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.876" endtime="20201112 09:43:20.884"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.887" endtime="20201112 09:43:20.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:20.891" endtime="20201112 09:43:20.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.889" endtime="20201112 09:43:20.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.885" endtime="20201112 09:43:20.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.510" endtime="20201112 09:43:20.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.509" endtime="20201112 09:43:20.913"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.924" endtime="20201112 09:43:20.939"></status>
</kw>
<msg timestamp="20201112 09:43:20.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.922" endtime="20201112 09:43:20.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.941" endtime="20201112 09:43:20.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.944" endtime="20201112 09:43:20.946"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.919" endtime="20201112 09:43:20.946"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.916" endtime="20201112 09:43:20.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.955" endtime="20201112 09:43:21.243"></status>
</kw>
<msg timestamp="20201112 09:43:21.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025005056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025021014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:20.953" endtime="20201112 09:43:21.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025005056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025021014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:21.247" endtime="20201112 09:43:21.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.256" endtime="20201112 09:43:21.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.950" endtime="20201112 09:43:21.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.948" endtime="20201112 09:43:21.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:21.264" level="INFO">${RESULT} = [{'time': 0.025021014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5957999999999944e-05, 'source_diff': 1.5957999999999944e-05}, {'time': 0.02504925, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:43:21.260" endtime="20201112 09:43:21.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:21.278" level="INFO">${ACCURACY} = {'time': [0.025021014, 0.02504925, 0.025072208, 0.025098236, 0.02511925, 0.025150194, 0.025177208, 0.025205042, 0.025225375, 0.025247139, 0.025275153, 0.025296375, 0.025315069, 0.025345069, 0.02536625...</msg>
<status status="PASS" starttime="20201112 09:43:21.265" endtime="20201112 09:43:21.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.283" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 09:43:21.282" endtime="20201112 09:43:21.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.286" level="INFO">VALUE: [1.5957999999999944e-05, 1.5957999999999944e-05, 1.5457999999999444e-05, 1.6013999999998224e-05, 1.5471999999999014e-05, 1.5957999999999944e-05, 1.5985999999999084e-05, 1.5985999999999084e-05, 1.5972000000002984e-05, 1.5944999999999848e-05, 1.5500000000001624e-05, 1.5457999999999444e-05, 1.5999999999998654e-05, 1.5416000000000735e-05, 1.5971999999999514e-05, 1.5443999999999874e-05, 1.5944000000000375e-05, 1.541700000000021e-05, 1.5944000000000375e-05, 1.5445000000002818e-05, 1.5430000000000305e-05, 1.5944000000000375e-05, 1.5457999999999444e-05, 1.643099999999731e-05, 1.5499999999998154e-05, 1.5929999999997335e-05, 1.5457999999999444e-05, 1.6458000000000444e-05, 1.5985999999999084e-05, 1.5971999999999514e-05, 1.5443999999999874e-05, 1.6472000000000014e-05, 1.5457999999999444e-05, 1.588900000000157e-05, 1.5959000000002888e-05, 1.5972000000002984e-05, 1.5457999999999444e-05, 1.5457999999999444e-05, 1.5445000000002818e-05, 1.5514000000001194e-05, 1.6445000000000348e-05, 1.5444999999999348e-05, 1.5971999999999514e-05, 1.5444999999999348e-05, 1.5957999999999944e-05, 1.5459000000002387e-05, 1.643100000000078e-05, 1.5972000000002984e-05, 1.5944999999999848e-05, 1.6458000000000444e-05]</msg>
<status status="PASS" starttime="20201112 09:43:21.285" endtime="20201112 09:43:21.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.279" endtime="20201112 09:43:21.288"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.291" endtime="20201112 09:43:21.292"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:21.295" endtime="20201112 09:43:21.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.293" endtime="20201112 09:43:21.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.289" endtime="20201112 09:43:21.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.914" endtime="20201112 09:43:21.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.913" endtime="20201112 09:43:21.317"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.328" endtime="20201112 09:43:21.343"></status>
</kw>
<msg timestamp="20201112 09:43:21.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.326" endtime="20201112 09:43:21.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.345" endtime="20201112 09:43:21.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.347" endtime="20201112 09:43:21.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.323" endtime="20201112 09:43:21.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.320" endtime="20201112 09:43:21.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.359" endtime="20201112 09:43:21.699"></status>
</kw>
<msg timestamp="20201112 09:43:21.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02590875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025925708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:21.357" endtime="20201112 09:43:21.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02590875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025925708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:21.708" endtime="20201112 09:43:21.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.728" endtime="20201112 09:43:21.732"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.354" endtime="20201112 09:43:21.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.352" endtime="20201112 09:43:21.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:21.746" level="INFO">${RESULT} = [{'time': 0.025925708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6957999999997475e-05, 'source_diff': 1.6957999999997475e-05}, {'time': 0.025948486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:21.736" endtime="20201112 09:43:21.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:21.777" level="INFO">${ACCURACY} = {'time': [0.025925708, 0.025948486, 0.025975861, 0.025999806, 0.026020556, 0.026041833, 0.026065653, 0.026091778, 0.026123458, 0.026144694, 0.026176639, 0.026203806, 0.026230764, 0.026256597, 0.026283...</msg>
<status status="PASS" starttime="20201112 09:43:21.748" endtime="20201112 09:43:21.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.788" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 09:43:21.786" endtime="20201112 09:43:21.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.794" level="INFO">VALUE: [1.6957999999997475e-05, 1.6958000000000945e-05, 1.6958000000000945e-05, 1.6458999999999918e-05, 1.7013999999999224e-05, 1.6958000000000945e-05, 1.6945000000000848e-05, 1.691699999999824e-05, 1.6415999999998265e-05, 1.6458000000000444e-05, 1.691700000000171e-05, 1.691699999999824e-05, 1.693100000000128e-05, 1.6458000000000444e-05, 1.6959000000000418e-05, 1.6943999999997905e-05, 1.6958000000000945e-05, 1.6929999999998335e-05, 1.644499999999688e-05, 1.6972000000000514e-05, 1.6445000000000348e-05, 1.6472000000000014e-05, 1.6443999999997405e-05, 1.6458000000000444e-05, 1.6458000000000444e-05, 1.643100000000078e-05, 1.6986000000000084e-05, 1.6458000000000444e-05, 1.6429999999997835e-05, 1.6959000000000418e-05, 1.744499999999788e-05, 1.6458000000000444e-05, 1.6999999999999654e-05, 1.6472000000000014e-05, 1.7013999999999224e-05, 1.637499999999903e-05, 1.6444000000000875e-05, 1.6429999999997835e-05, 1.6958000000000945e-05, 1.6458000000000444e-05, 1.6943999999997905e-05, 1.6943999999997905e-05, 1.6957999999997475e-05, 1.6930000000001805e-05, 1.6445000000000348e-05, 1.6972000000000514e-05, 1.6472999999999488e-05, 1.6958000000000945e-05, 1.7472000000001014e-05, 1.6486000000003054e-05]</msg>
<status status="PASS" starttime="20201112 09:43:21.790" endtime="20201112 09:43:21.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.779" endtime="20201112 09:43:21.797"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.803" endtime="20201112 09:43:21.806"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:21.812" endtime="20201112 09:43:21.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.807" endtime="20201112 09:43:21.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.799" endtime="20201112 09:43:21.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.318" endtime="20201112 09:43:21.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.317" endtime="20201112 09:43:21.838"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.861" endtime="20201112 09:43:21.879"></status>
</kw>
<msg timestamp="20201112 09:43:21.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.858" endtime="20201112 09:43:21.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.883" endtime="20201112 09:43:21.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.889" endtime="20201112 09:43:21.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.850" endtime="20201112 09:43:21.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.844" endtime="20201112 09:43:21.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.913" endtime="20201112 09:43:22.249"></status>
</kw>
<msg timestamp="20201112 09:43:22.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042725278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042743208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:21.909" endtime="20201112 09:43:22.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042725278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042743208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:22.258" endtime="20201112 09:43:22.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.278" endtime="20201112 09:43:22.283"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.902" endtime="20201112 09:43:22.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.897" endtime="20201112 09:43:22.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:22.297" level="INFO">${RESULT} = [{'time': 0.042743208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7929999999999335e-05, 'source_diff': 1.7929999999999335e-05}, {'time': 0.042764292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:22.288" endtime="20201112 09:43:22.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:22.328" level="INFO">${ACCURACY} = {'time': [0.042743208, 0.042764292, 0.042791417, 0.042822069, 0.042852444, 0.042878319, 0.042907306, 0.042934431, 0.042963014, 0.042995278, 0.043018375, 0.043045181, 0.043067111, 0.043090194, 0.043116...</msg>
<status status="PASS" starttime="20201112 09:43:22.299" endtime="20201112 09:43:22.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.340" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 09:43:22.337" endtime="20201112 09:43:22.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.346" level="INFO">VALUE: [1.7929999999999335e-05, 1.7959000000004888e-05, 1.795899999999795e-05, 1.7499999999996685e-05, 1.7930000000006274e-05, 1.7957999999998475e-05, 1.794499999999838e-05, 1.7959000000004888e-05, 1.794499999999838e-05, 1.7471999999997545e-05, 1.7485999999997115e-05, 1.7445000000004818e-05, 1.7971999999998045e-05, 1.7457999999997975e-05, 1.7458000000004914e-05, 1.7943999999998905e-05, 1.7458000000004914e-05, 1.7458000000004914e-05, 1.7471999999997545e-05, 1.7958000000005414e-05, 1.7999999999997185e-05, 1.7959000000004888e-05, 1.7915999999999765e-05, 1.7957999999998475e-05, 1.743099999999831e-05, 1.7459000000004388e-05, 1.7943999999998905e-05, 1.7986000000004554e-05, 1.745899999999745e-05, 1.743099999999831e-05, 1.7457999999997975e-05, 1.7429999999998835e-05, 1.7971999999998045e-05, 1.8000000000004124e-05, 1.8445000000005818e-05, 1.793099999999881e-05, 1.7457999999997975e-05, 1.7485999999997115e-05, 1.845899999999845e-05, 1.7430000000005774e-05, 1.791699999999924e-05, 1.7971999999998045e-05, 1.7458000000004914e-05, 1.7957999999998475e-05, 1.743099999999831e-05, 1.7943999999998905e-05, 1.7443999999998405e-05, 1.791699999999924e-05, 1.7457999999997975e-05, 1.744499999999788e-05]</msg>
<status status="PASS" starttime="20201112 09:43:22.343" endtime="20201112 09:43:22.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.330" endtime="20201112 09:43:22.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.357" endtime="20201112 09:43:22.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:22.365" endtime="20201112 09:43:22.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.361" endtime="20201112 09:43:22.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.352" endtime="20201112 09:43:22.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.840" endtime="20201112 09:43:22.391"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.839" endtime="20201112 09:43:22.391"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.415" endtime="20201112 09:43:22.434"></status>
</kw>
<msg timestamp="20201112 09:43:22.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.411" endtime="20201112 09:43:22.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.437" endtime="20201112 09:43:22.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.444" endtime="20201112 09:43:22.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.404" endtime="20201112 09:43:22.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.398" endtime="20201112 09:43:22.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.467" endtime="20201112 09:43:22.803"></status>
</kw>
<msg timestamp="20201112 09:43:22.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042909625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042928083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:22.464" endtime="20201112 09:43:22.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042909625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042928083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:22.813" endtime="20201112 09:43:22.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.832" endtime="20201112 09:43:22.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.457" endtime="20201112 09:43:22.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.452" endtime="20201112 09:43:22.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:22.851" level="INFO">${RESULT} = [{'time': 0.042928083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8457999999998975e-05, 'source_diff': 1.8457999999998975e-05}, {'time': 0.042955194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:22.842" endtime="20201112 09:43:22.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:22.885" level="INFO">${ACCURACY} = {'time': [0.042928083, 0.042955194, 0.042989139, 0.043017319, 0.043044097, 0.043075375, 0.043098889, 0.043129083, 0.043154917, 0.043176917, 0.043203083, 0.043235375, 0.043264972, 0.043291167, 0.043317...</msg>
<status status="PASS" starttime="20201112 09:43:22.853" endtime="20201112 09:43:22.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.896" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 09:43:22.894" endtime="20201112 09:43:22.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.902" level="INFO">VALUE: [1.8457999999998975e-05, 1.8971999999999045e-05, 1.8957999999999475e-05, 1.9387999999995187e-05, 1.8444000000006344e-05, 1.8985999999998615e-05, 1.893099999999981e-05, 1.8930000000000335e-05, 1.895899999999895e-05, 1.8459000000005388e-05, 1.8458000000005914e-05, 1.893099999999981e-05, 1.8971999999999045e-05, 1.8485999999998115e-05, 1.890300000000067e-05, 1.9416000000001266e-05, 1.847299999999802e-05, 1.893099999999981e-05, 1.8943999999999905e-05, 1.8443999999999405e-05, 1.8957999999999475e-05, 1.893099999999981e-05, 1.895899999999895e-05, 1.844499999999888e-05, 1.895899999999895e-05, 1.894499999999938e-05, 1.8457999999998975e-05, 1.8943999999999905e-05, 1.8445000000005818e-05, 1.8943999999999905e-05, 1.9013999999997755e-05, 1.8471999999998545e-05, 1.945899999999945e-05, 1.8429999999999835e-05, 1.8930000000000335e-05, 1.8957999999999475e-05, 1.844499999999888e-05, 1.8972000000005984e-05, 1.8957999999999475e-05, 1.841699999999974e-05, 1.843099999999931e-05, 1.944499999999988e-05, 1.8429999999999835e-05, 1.8945000000006318e-05, 1.8457999999998975e-05, 1.8459000000005388e-05, 1.894499999999938e-05, 1.8985999999998615e-05, 1.844499999999888e-05, 1.8457999999998975e-05]</msg>
<status status="PASS" starttime="20201112 09:43:22.899" endtime="20201112 09:43:22.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.887" endtime="20201112 09:43:22.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.912" endtime="20201112 09:43:22.915"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:22.920" endtime="20201112 09:43:22.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.916" endtime="20201112 09:43:22.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.907" endtime="20201112 09:43:22.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.394" endtime="20201112 09:43:22.946"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.392" endtime="20201112 09:43:22.946"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.969" endtime="20201112 09:43:22.988"></status>
</kw>
<msg timestamp="20201112 09:43:22.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.966" endtime="20201112 09:43:22.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.992" endtime="20201112 09:43:22.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.998" endtime="20201112 09:43:23.003"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.959" endtime="20201112 09:43:23.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.953" endtime="20201112 09:43:23.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.022" endtime="20201112 09:43:23.360"></status>
</kw>
<msg timestamp="20201112 09:43:23.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042430375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042450333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:23.019" endtime="20201112 09:43:23.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042430375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042450333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:23.369" endtime="20201112 09:43:23.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.389" endtime="20201112 09:43:23.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.012" endtime="20201112 09:43:23.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.007" endtime="20201112 09:43:23.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:23.407" level="INFO">${RESULT} = [{'time': 0.042450333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9958000000000475e-05, 'source_diff': 1.9958000000000475e-05}, {'time': 0.042477375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:23.398" endtime="20201112 09:43:23.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:23.440" level="INFO">${ACCURACY} = {'time': [0.042450333, 0.042477375, 0.042506222, 0.0425395, 0.042567569, 0.042601431, 0.042629625, 0.042658528, 0.042682556, 0.042710653, 0.042741236, 0.042766403, 0.042794597, 0.042823708, 0.04284858...</msg>
<status status="PASS" starttime="20201112 09:43:23.410" endtime="20201112 09:43:23.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.451" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 09:43:23.449" endtime="20201112 09:43:23.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.457" level="INFO">VALUE: [1.9958000000000475e-05, 1.993100000000081e-05, 1.9472000000006484e-05, 1.9944000000000905e-05, 1.9958000000000475e-05, 1.9487000000005528e-05, 1.9444000000000405e-05, 1.993100000000081e-05, 1.940300000000117e-05, 1.994500000000038e-05, 1.9944000000000905e-05, 1.991700000000124e-05, 1.9443999999993467e-05, 1.9944000000000905e-05, 1.9457999999999975e-05, 1.9457999999999975e-05, 1.9958000000000475e-05, 1.9471999999999545e-05, 1.995899999999995e-05, 1.943100000000031e-05, 1.945899999999945e-05, 1.9430000000000835e-05, 1.9457999999999975e-05, 1.9485999999999115e-05, 1.9444000000000405e-05, 1.995899999999995e-05, 2.0028000000005264e-05, 2.0444000000001405e-05, 1.9457999999999975e-05, 1.9430000000000835e-05, 1.9457999999999975e-05, 2.044500000000088e-05, 1.9999999999999185e-05, 1.993100000000081e-05, 1.9930000000001336e-05, 1.9944000000000905e-05, 1.945899999999945e-05, 1.9972000000000045e-05, 1.9944000000000905e-05, 2.045900000000045e-05, 1.993100000000081e-05, 1.945899999999945e-05, 1.9485999999999115e-05, 1.9485999999999115e-05, 1.9444000000000405e-05, 1.944499999999988e-05, 1.990300000000167e-05, 1.9958000000000475e-05, 1.9944000000000905e-05, 1.944499999999988e-05]</msg>
<status status="PASS" starttime="20201112 09:43:23.454" endtime="20201112 09:43:23.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.442" endtime="20201112 09:43:23.460"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.467" endtime="20201112 09:43:23.469"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:23.475" endtime="20201112 09:43:23.497"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.471" endtime="20201112 09:43:23.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.462" endtime="20201112 09:43:23.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.948" endtime="20201112 09:43:23.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.947" endtime="20201112 09:43:23.501"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.524" endtime="20201112 09:43:23.543"></status>
</kw>
<msg timestamp="20201112 09:43:23.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:23.521" endtime="20201112 09:43:23.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:23.547" endtime="20201112 09:43:23.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.553" endtime="20201112 09:43:23.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.514" endtime="20201112 09:43:23.558"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.508" endtime="20201112 09:43:23.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.577" endtime="20201112 09:43:23.914"></status>
</kw>
<msg timestamp="20201112 09:43:23.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042605167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042629944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:23.574" endtime="20201112 09:43:23.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042605167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042629944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:23.924" endtime="20201112 09:43:23.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.943" endtime="20201112 09:43:23.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.566" endtime="20201112 09:43:23.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.561" endtime="20201112 09:43:23.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:23.961" level="INFO">${RESULT} = [{'time': 0.042629944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4777000000003602e-05, 'source_diff': 2.4777000000003602e-05}, {'time': 0.042672958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:23.952" endtime="20201112 09:43:23.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:23.993" level="INFO">${ACCURACY} = {'time': [0.042629944, 0.042672958, 0.042712986, 0.042756958, 0.042793972, 0.042830972, 0.042873972, 0.042911986, 0.042946028, 0.042977014, 0.043014014, 0.043051028, 0.043084, 0.043123, 0.043164097, 0...</msg>
<status status="PASS" starttime="20201112 09:43:23.963" endtime="20201112 09:43:23.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.005" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 09:43:24.002" endtime="20201112 09:43:24.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.010" level="INFO">VALUE: [2.4777000000003602e-05, 2.4415999999999327e-05, 2.4986000000004616e-05, 2.4999999999997247e-05, 2.406900000000156e-05, 2.490299999999973e-05, 2.4166000000006016e-05, 2.4804999999995803e-05, 2.4985999999997677e-05, 2.4735999999997427e-05, 2.488900000000016e-05, 2.4485999999997177e-05, 2.4777999999996136e-05, 2.461100000000077e-05, 2.4415999999999327e-05, 2.490299999999973e-05, 2.4472000000004546e-05, 2.490299999999973e-05, 2.4500000000003685e-05, 2.4249999999996497e-05, 2.4999999999997247e-05, 2.422300000000377e-05, 2.431900000000181e-05, 2.4306000000001715e-05, 2.4320000000001285e-05, 2.4915999999999827e-05, 2.4902000000000257e-05, 2.5013999999996817e-05, 2.487500000000059e-05, 2.4264000000003005e-05, 2.4568999999995123e-05, 2.4194000000005156e-05, 2.4179999999998647e-05, 2.461100000000077e-05, 2.4249999999996497e-05, 2.413899999999941e-05, 2.465299999999948e-05, 2.4235999999996927e-05, 2.4874999999993652e-05, 2.4068999999994622e-05, 2.4568999999995123e-05, 2.490299999999973e-05, 2.4834000000001355e-05, 2.461100000000077e-05, 2.49169999999993e-05, 2.40970000000007e-05, 2.4264000000003005e-05, 2.40970000000007e-05, 2.469499999999819e-05, 2.4151999999999507e-05]</msg>
<status status="PASS" starttime="20201112 09:43:24.007" endtime="20201112 09:43:24.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.995" endtime="20201112 09:43:24.019"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.026" endtime="20201112 09:43:24.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:24.034" endtime="20201112 09:43:24.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.030" endtime="20201112 09:43:24.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.021" endtime="20201112 09:43:24.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.503" endtime="20201112 09:43:24.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.502" endtime="20201112 09:43:24.060"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.084" endtime="20201112 09:43:24.102"></status>
</kw>
<msg timestamp="20201112 09:43:24.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.080" endtime="20201112 09:43:24.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.106" endtime="20201112 09:43:24.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.112" endtime="20201112 09:43:24.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.073" endtime="20201112 09:43:24.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.067" endtime="20201112 09:43:24.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.136" endtime="20201112 09:43:24.476"></status>
</kw>
<msg timestamp="20201112 09:43:24.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042688514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042713667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:24.133" endtime="20201112 09:43:24.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042688514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042713667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:24.486" endtime="20201112 09:43:24.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.505" endtime="20201112 09:43:24.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.125" endtime="20201112 09:43:24.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.121" endtime="20201112 09:43:24.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:24.522" level="INFO">${RESULT} = [{'time': 0.042713667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.515299999999998e-05, 'source_diff': 2.515299999999998e-05}, {'time': 0.042753667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:24.513" endtime="20201112 09:43:24.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:24.555" level="INFO">${ACCURACY} = {'time': [0.042713667, 0.042753667, 0.042796681, 0.042837681, 0.042875681, 0.042910694, 0.042954694, 0.042998694, 0.043032694, 0.043064694, 0.043098708, 0.043142708, 0.043177708, 0.043219764, 0.043256...</msg>
<status status="PASS" starttime="20201112 09:43:24.524" endtime="20201112 09:43:24.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.566" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 09:43:24.564" endtime="20201112 09:43:24.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.572" level="INFO">VALUE: [2.515299999999998e-05, 2.5736000000005366e-05, 2.548700000000459e-05, 2.598700000000509e-05, 2.569499999999919e-05, 2.5790999999997233e-05, 2.5999999999998247e-05, 2.5429999999999897e-05, 2.5416000000000327e-05, 2.562500000000134e-05, 2.5776999999997663e-05, 2.5985999999998677e-05, 2.538900000000066e-05, 2.5499999999997747e-05, 2.5471999999998607e-05, 2.6027999999997387e-05, 2.588900000000116e-05, 2.5943999999999967e-05, 2.584700000000245e-05, 2.583300000000288e-05, 2.5957999999999537e-05, 2.5222000000005296e-05, 2.515299999999998e-05, 2.5777999999997137e-05, 2.59170000000003e-05, 2.5500000000004686e-05, 2.5084000000001605e-05, 2.5555999999996026e-05, 2.5221999999998357e-05, 2.5528000000003825e-05, 2.5084000000001605e-05, 2.512500000000084e-05, 2.5902999999993792e-05, 2.5528000000003825e-05, 2.5040999999996483e-05, 2.505500000000299e-05, 2.5249999999997497e-05, 2.5292000000003145e-05, 2.5235999999997927e-05, 2.5276999999997163e-05, 2.561100000000177e-05, 2.506900000000256e-05, 2.511100000000127e-05, 2.5776999999997663e-05, 2.55970000000022e-05, 2.512500000000084e-05, 2.515299999999998e-05, 2.5902999999993792e-05, 2.516699999999955e-05, 2.5582999999995693e-05]</msg>
<status status="PASS" starttime="20201112 09:43:24.568" endtime="20201112 09:43:24.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.557" endtime="20201112 09:43:24.575"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.581" endtime="20201112 09:43:24.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:24.590" endtime="20201112 09:43:24.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.586" endtime="20201112 09:43:24.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.577" endtime="20201112 09:43:24.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.063" endtime="20201112 09:43:24.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.061" endtime="20201112 09:43:24.612"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.623" endtime="20201112 09:43:24.639"></status>
</kw>
<msg timestamp="20201112 09:43:24.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.621" endtime="20201112 09:43:24.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.641" endtime="20201112 09:43:24.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.644" endtime="20201112 09:43:24.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.618" endtime="20201112 09:43:24.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.615" endtime="20201112 09:43:24.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.655" endtime="20201112 09:43:24.941"></status>
</kw>
<msg timestamp="20201112 09:43:24.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024663514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02469025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:24.653" endtime="20201112 09:43:24.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024663514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02469025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:24.945" endtime="20201112 09:43:24.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.954" endtime="20201112 09:43:24.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.650" endtime="20201112 09:43:24.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.648" endtime="20201112 09:43:24.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:24.962" level="INFO">${RESULT} = [{'time': 0.02469025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6735999999999427e-05, 'source_diff': 2.6735999999999427e-05}, {'time': 0.024723264, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:43:24.958" endtime="20201112 09:43:24.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:24.977" level="INFO">${ACCURACY} = {'time': [0.02469025, 0.024723264, 0.024757264, 0.024795264, 0.024829292, 0.024868278, 0.024901292, 0.024945292, 0.024987306, 0.025032306, 0.025072319, 0.025109319, 0.025152319, 0.025188306, 0.0252243...</msg>
<status status="PASS" starttime="20201112 09:43:24.963" endtime="20201112 09:43:24.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.983" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 09:43:24.982" endtime="20201112 09:43:24.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.986" level="INFO">VALUE: [2.6735999999999427e-05, 2.6305999999996776e-05, 2.6278000000001106e-05, 2.694500000000044e-05, 2.6485999999999177e-05, 2.6042000000000426e-05, 2.622299999999883e-05, 2.6292000000000676e-05, 2.6999999999999247e-05, 2.644499999999994e-05, 2.6221999999999357e-05, 2.634700000000295e-05, 2.6332999999999912e-05, 2.638900000000166e-05, 2.6346999999999482e-05, 2.6958000000000537e-05, 2.6430000000000897e-05, 2.6791000000001702e-05, 2.640300000000123e-05, 2.6750000000002466e-05, 2.7055000000001522e-05, 2.6082999999999662e-05, 2.6694000000000717e-05, 2.6250000000001966e-05, 2.6958000000000537e-05, 2.6527999999997887e-05, 2.6860999999999552e-05, 2.688900000000216e-05, 2.6082999999999662e-05, 2.6860999999999552e-05, 2.6528000000001356e-05, 2.6777999999998137e-05, 2.6319999999999816e-05, 2.6110999999998802e-05, 2.6721999999999857e-05, 2.694500000000044e-05, 2.6583000000000162e-05, 2.688900000000216e-05, 2.6402000000001757e-05, 2.6292000000000676e-05, 2.6458000000000037e-05, 2.6999999999999247e-05, 2.6528000000001356e-05, 2.6570000000000066e-05, 2.6985999999999677e-05, 2.686100000000302e-05, 2.666700000000105e-05, 2.6110999999998802e-05, 2.6777000000002132e-05, 2.6915999999998358e-05]</msg>
<status status="PASS" starttime="20201112 09:43:24.984" endtime="20201112 09:43:24.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.978" endtime="20201112 09:43:24.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.990" endtime="20201112 09:43:24.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:24.994" endtime="20201112 09:43:25.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.992" endtime="20201112 09:43:25.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.988" endtime="20201112 09:43:25.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.613" endtime="20201112 09:43:25.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.613" endtime="20201112 09:43:25.016"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.026" endtime="20201112 09:43:25.043"></status>
</kw>
<msg timestamp="20201112 09:43:25.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.025" endtime="20201112 09:43:25.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.045" endtime="20201112 09:43:25.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.048" endtime="20201112 09:43:25.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.022" endtime="20201112 09:43:25.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.019" endtime="20201112 09:43:25.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.059" endtime="20201112 09:43:25.346"></status>
</kw>
<msg timestamp="20201112 09:43:25.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025174764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025202083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:25.057" endtime="20201112 09:43:25.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025174764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025202083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:25.350" endtime="20201112 09:43:25.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.358" endtime="20201112 09:43:25.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.054" endtime="20201112 09:43:25.361"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.052" endtime="20201112 09:43:25.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:25.367" level="INFO">${RESULT} = [{'time': 0.025202083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7319000000001342e-05, 'source_diff': 2.7319000000001342e-05}, {'time': 0.025245083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:25.363" endtime="20201112 09:43:25.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:25.381" level="INFO">${ACCURACY} = {'time': [0.025202083, 0.025245083, 0.025280097, 0.025314111, 0.025357097, 0.025399097, 0.025442139, 0.025485111, 0.025519111, 0.025553139, 0.025599153, 0.025638139, 0.025680153, 0.025722153, 0.025760...</msg>
<status status="PASS" starttime="20201112 09:43:25.368" endtime="20201112 09:43:25.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.387" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 09:43:25.385" endtime="20201112 09:43:25.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.389" level="INFO">VALUE: [2.7319000000001342e-05, 2.7083000000000662e-05, 2.7916000000002827e-05, 2.7902999999999262e-05, 2.7318999999997873e-05, 2.7179999999998178e-05, 2.716699999999808e-05, 2.7542000000001926e-05, 2.766700000000205e-05, 2.7875000000000122e-05, 2.7235999999999927e-05, 2.7306000000001246e-05, 2.7972000000001107e-05, 2.8013999999999817e-05, 2.7570000000001066e-05, 2.8000000000000247e-05, 2.8041999999998957e-05, 2.7499999999999747e-05, 2.74170000000018e-05, 2.7583999999997166e-05, 2.7834000000000886e-05, 2.795900000000101e-05, 2.7513999999999317e-05, 2.7847000000000982e-05, 2.7277999999998637e-05, 2.7334000000000386e-05, 2.7888000000000218e-05, 2.7902999999999262e-05, 2.7124999999999372e-05, 2.7764000000003036e-05, 2.7222000000000357e-05, 2.7791999999998707e-05, 2.7776999999999663e-05, 2.72369999999994e-05, 2.741699999999833e-05, 2.7486000000000177e-05, 2.7374999999999622e-05, 2.7374999999999622e-05, 2.74170000000018e-05, 2.7333000000000912e-05, 2.7778000000002606e-05, 2.718100000000112e-05, 2.7777999999999137e-05, 2.7056000000000996e-05, 2.7320000000000816e-05, 2.7902999999999262e-05, 2.791699999999883e-05, 2.7347999999999956e-05, 2.7902999999999262e-05, 2.7569000000001592e-05]</msg>
<status status="PASS" starttime="20201112 09:43:25.388" endtime="20201112 09:43:25.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.382" endtime="20201112 09:43:25.391"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.394" endtime="20201112 09:43:25.395"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:25.398" endtime="20201112 09:43:25.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.396" endtime="20201112 09:43:25.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.392" endtime="20201112 09:43:25.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.017" endtime="20201112 09:43:25.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.016" endtime="20201112 09:43:25.419"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.431" endtime="20201112 09:43:25.446"></status>
</kw>
<msg timestamp="20201112 09:43:25.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.429" endtime="20201112 09:43:25.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.448" endtime="20201112 09:43:25.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.451" endtime="20201112 09:43:25.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.425" endtime="20201112 09:43:25.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.423" endtime="20201112 09:43:25.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.463" endtime="20201112 09:43:25.792"></status>
</kw>
<msg timestamp="20201112 09:43:25.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025687389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025715819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:25.461" endtime="20201112 09:43:25.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025687389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025715819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:25.801" endtime="20201112 09:43:25.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.820" endtime="20201112 09:43:25.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.457" endtime="20201112 09:43:25.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.455" endtime="20201112 09:43:25.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:25.838" level="INFO">${RESULT} = [{'time': 0.025715819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8429999999999428e-05, 'source_diff': 2.8429999999999428e-05}, {'time': 0.025762792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:25.829" endtime="20201112 09:43:25.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:25.870" level="INFO">${ACCURACY} = {'time': [0.025715819, 0.025762792, 0.025809806, 0.025849806, 0.025884847, 0.025920806, 0.025964806, 0.026010819, 0.026054833, 0.026089847, 0.026130819, 0.026167833, 0.026206889, 0.026249833, 0.026290...</msg>
<status status="PASS" starttime="20201112 09:43:25.840" endtime="20201112 09:43:25.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.881" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 09:43:25.878" endtime="20201112 09:43:25.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.887" level="INFO">VALUE: [2.8429999999999428e-05, 2.84309999999989e-05, 2.8598000000001206e-05, 2.8541999999999457e-05, 2.8165999999999608e-05, 2.8042000000002426e-05, 2.8555999999999027e-05, 2.8694000000002717e-05, 2.8527000000000413e-05, 2.8485999999997708e-05, 2.8250000000000497e-05, 2.8875000000001122e-05, 2.8625000000000872e-05, 2.8597000000001732e-05, 2.8903000000000262e-05, 2.8236000000000927e-05, 2.8541999999999457e-05, 2.9014000000000817e-05, 2.8846999999998513e-05, 2.8291999999999207e-05, 2.8111000000000802e-05, 2.9000000000001247e-05, 2.8750000000000997e-05, 2.8527999999999887e-05, 2.84309999999989e-05, 2.8653000000000012e-05, 2.8513999999996847e-05, 2.8556000000002496e-05, 2.8319999999998346e-05, 2.8110999999997333e-05, 2.818099999999865e-05, 2.8735999999997958e-05, 2.8847999999997986e-05, 2.8306000000002246e-05, 2.9028000000000387e-05, 2.894500000000244e-05, 2.8985999999998208e-05, 2.8958000000002537e-05, 2.9041999999999957e-05, 2.8888999999997222e-05, 2.8068999999998623e-05, 2.8679999999999678e-05, 2.840199999999682e-05, 2.8639000000000442e-05, 2.8736000000001427e-05, 2.844500000000194e-05, 2.8332999999998443e-05, 2.8929999999999928e-05, 2.8250000000000497e-05, 2.8486000000001177e-05]</msg>
<status status="PASS" starttime="20201112 09:43:25.883" endtime="20201112 09:43:25.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.872" endtime="20201112 09:43:25.891"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.898" endtime="20201112 09:43:25.900"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:25.906" endtime="20201112 09:43:25.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.902" endtime="20201112 09:43:25.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.893" endtime="20201112 09:43:25.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.421" endtime="20201112 09:43:25.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.420" endtime="20201112 09:43:25.932"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.956" endtime="20201112 09:43:25.975"></status>
</kw>
<msg timestamp="20201112 09:43:25.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.952" endtime="20201112 09:43:25.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.978" endtime="20201112 09:43:25.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.985" endtime="20201112 09:43:25.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.945" endtime="20201112 09:43:25.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.939" endtime="20201112 09:43:25.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.009" endtime="20201112 09:43:26.345"></status>
</kw>
<msg timestamp="20201112 09:43:26.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042688069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042717583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:26.006" endtime="20201112 09:43:26.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042688069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042717583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:26.354" endtime="20201112 09:43:26.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.374" endtime="20201112 09:43:26.377"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.998" endtime="20201112 09:43:26.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.994" endtime="20201112 09:43:26.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:26.392" level="INFO">${RESULT} = [{'time': 0.042717583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9514000000001317e-05, 'source_diff': 2.9514000000001317e-05}, {'time': 0.042753667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:26.382" endtime="20201112 09:43:26.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:26.423" level="INFO">${ACCURACY} = {'time': [0.042717583, 0.042753667, 0.042789597, 0.042833597, 0.042874639, 0.042918611, 0.042955611, 0.043001625, 0.043043625, 0.043089639, 0.043134653, 0.043176667, 0.043220639, 0.043257667, 0.043305...</msg>
<status status="PASS" starttime="20201112 09:43:26.394" endtime="20201112 09:43:26.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.434" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 09:43:26.432" endtime="20201112 09:43:26.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.440" level="INFO">VALUE: [2.9514000000001317e-05, 3.0014000000001817e-05, 2.9902999999997792e-05, 2.9528000000000887e-05, 2.9278000000000637e-05, 2.940300000000423e-05, 2.9416999999996862e-05, 2.9041999999999957e-05, 2.9832999999999943e-05, 2.9332999999999443e-05, 2.916700000000355e-05, 2.965300000000448e-05, 2.9999999999995308e-05, 2.9874999999998653e-05, 2.9528000000000887e-05, 2.9888999999998223e-05, 2.9666999999997112e-05, 2.9666999999997112e-05, 2.9055999999999527e-05, 3.0055000000001053e-05, 2.994500000000344e-05, 2.9833999999999417e-05, 2.938799999999825e-05, 2.9791000000001233e-05, 2.9902999999997792e-05, 2.965199999999807e-05, 2.994399999999703e-05, 2.992999999999746e-05, 2.9250000000001497e-05, 2.9250000000001497e-05, 2.9082999999999193e-05, 2.920799999999585e-05, 2.9778000000001137e-05, 2.9472000000002607e-05, 2.9486000000002177e-05, 2.9236000000001927e-05, 2.9250000000001497e-05, 2.916700000000355e-05, 2.9542000000000457e-05, 2.9832999999999943e-05, 2.9222000000002357e-05, 2.9722000000002857e-05, 2.9584000000006105e-05, 3.0042000000000957e-05, 2.9110999999998333e-05, 2.9986000000002677e-05, 2.9055000000000053e-05, 2.9680000000004148e-05, 2.916700000000355e-05, 2.9694999999996252e-05]</msg>
<status status="PASS" starttime="20201112 09:43:26.436" endtime="20201112 09:43:26.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.425" endtime="20201112 09:43:26.443"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.450" endtime="20201112 09:43:26.454"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:26.460" endtime="20201112 09:43:26.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.456" endtime="20201112 09:43:26.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.445" endtime="20201112 09:43:26.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.935" endtime="20201112 09:43:26.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.933" endtime="20201112 09:43:26.487"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.510" endtime="20201112 09:43:26.529"></status>
</kw>
<msg timestamp="20201112 09:43:26.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:26.507" endtime="20201112 09:43:26.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:26.533" endtime="20201112 09:43:26.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.539" endtime="20201112 09:43:26.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.500" endtime="20201112 09:43:26.545"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.494" endtime="20201112 09:43:26.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.563" endtime="20201112 09:43:26.901"></status>
</kw>
<msg timestamp="20201112 09:43:26.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043188861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043219458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:26.560" endtime="20201112 09:43:26.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043188861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043219458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:26.911" endtime="20201112 09:43:26.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.929" endtime="20201112 09:43:26.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.553" endtime="20201112 09:43:26.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.548" endtime="20201112 09:43:26.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:26.948" level="INFO">${RESULT} = [{'time': 0.043219458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.059700000000026e-05, 'source_diff': 3.059700000000026e-05}, {'time': 0.043260472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:26.938" endtime="20201112 09:43:26.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:26.981" level="INFO">${ACCURACY} = {'time': [0.043219458, 0.043260472, 0.043309472, 0.043355472, 0.0434045, 0.0434535, 0.043494542, 0.0435315, 0.0435785, 0.0436255, 0.043670528, 0.043720556, 0.043765542, 0.043807528, 0.043846528, 0.043...</msg>
<status status="PASS" starttime="20201112 09:43:26.950" endtime="20201112 09:43:26.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.992" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 09:43:26.990" endtime="20201112 09:43:26.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.998" level="INFO">VALUE: [3.059700000000026e-05, 3.058300000000069e-05, 3.065299999999854e-05, 3.0041000000001483e-05, 3.0264000000002067e-05, 3.086100000000008e-05, 3.081999999999391e-05, 3.093099999999793e-05, 3.0069000000000623e-05, 3.0110999999999333e-05, 3.0402999999998293e-05, 3.100000000000325e-05, 3.0402999999998293e-05, 3.0070000000000097e-05, 3.044500000000394e-05, 3.0013999999994878e-05, 3.079200000000171e-05, 3.016700000000455e-05, 3.0249999999995558e-05, 3.07370000000029e-05, 3.098699999999621e-05, 3.043100000000437e-05, 3.09579999999976e-05, 3.068000000000515e-05, 3.022199999999642e-05, 3.016700000000455e-05, 3.016599999999814e-05, 3.0333000000000443e-05, 3.0333000000000443e-05, 3.0472000000003607e-05, 3.079200000000171e-05, 3.090300000000573e-05, 3.068099999999768e-05, 3.0222999999995892e-05, 3.076400000000257e-05, 3.055600000000103e-05, 3.0194000000004217e-05, 3.0264000000002067e-05, 3.097199999999717e-05, 3.074999999999606e-05, 3.0444999999997002e-05, 3.0514000000002317e-05, 3.097300000000358e-05, 3.0110999999999333e-05, 3.0278000000001637e-05, 3.087500000000659e-05, 3.012500000000584e-05, 3.0292000000001207e-05, 3.0250000000002497e-05, 3.056900000000112e-05]</msg>
<status status="PASS" starttime="20201112 09:43:26.995" endtime="20201112 09:43:26.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.983" endtime="20201112 09:43:27.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.008" endtime="20201112 09:43:27.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:27.016" endtime="20201112 09:43:27.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.012" endtime="20201112 09:43:27.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.003" endtime="20201112 09:43:27.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.489" endtime="20201112 09:43:27.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.488" endtime="20201112 09:43:27.044"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.067" endtime="20201112 09:43:27.087"></status>
</kw>
<msg timestamp="20201112 09:43:27.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:27.064" endtime="20201112 09:43:27.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:27.090" endtime="20201112 09:43:27.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.096" endtime="20201112 09:43:27.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.056" endtime="20201112 09:43:27.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.050" endtime="20201112 09:43:27.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.120" endtime="20201112 09:43:27.458"></status>
</kw>
<msg timestamp="20201112 09:43:27.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044243083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044275014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:27.117" endtime="20201112 09:43:27.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044243083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044275014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:27.467" endtime="20201112 09:43:27.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.486" endtime="20201112 09:43:27.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.109" endtime="20201112 09:43:27.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.105" endtime="20201112 09:43:27.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:27.505" level="INFO">${RESULT} = [{'time': 0.044275014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.193099999999893e-05, 'source_diff': 3.193099999999893e-05}, {'time': 0.044323, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:43:27.496" endtime="20201112 09:43:27.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:27.537" level="INFO">${ACCURACY} = {'time': [0.044275014, 0.044323, 0.044372, 0.044415986, 0.044456056, 0.044500028, 0.044546, 0.044596042, 0.044640056, 0.044688056, 0.044733056, 0.044780069, 0.044829056, 0.044872083, 0.044910042, 0.04...</msg>
<status status="PASS" starttime="20201112 09:43:27.507" endtime="20201112 09:43:27.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.548" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 09:43:27.546" endtime="20201112 09:43:27.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.554" level="INFO">VALUE: [3.193099999999893e-05, 3.152800000000289e-05, 3.170799999999835e-05, 3.124999999999656e-05, 3.172299999999739e-05, 3.123599999999699e-05, 3.115299999999904e-05, 3.140299999999929e-05, 3.106999999999416e-05, 3.191699999999936e-05, 3.163899999999997e-05, 3.199999999999731e-05, 3.16250000000004e-05, 3.149999999999681e-05, 3.191699999999936e-05, 3.147199999999767e-05, 3.150000000000375e-05, 3.148600000000418e-05, 3.1054999999995114e-05, 3.199999999999731e-05, 3.108300000000119e-05, 3.161100000000083e-05, 3.113899999999947e-05, 3.119400000000522e-05, 3.119399999999828e-05, 3.137500000000015e-05, 3.148599999999724e-05, 3.118099999999818e-05, 3.200000000000425e-05, 3.165299999999954e-05, 3.152800000000289e-05, 3.143099999999843e-05, 3.190299999999979e-05, 3.1582999999994754e-05, 3.166699999999911e-05, 3.154200000000246e-05, 3.179200000000271e-05, 3.161100000000083e-05, 3.208300000000219e-05, 3.1098000000000237e-05, 3.10700000000011e-05, 3.204200000000296e-05, 3.147199999999767e-05, 3.191699999999936e-05, 3.155599999999509e-05, 3.137500000000015e-05, 3.111100000000033e-05, 3.140199999999982e-05, 3.1750000000004e-05, 3.156900000000212e-05]</msg>
<status status="PASS" starttime="20201112 09:43:27.550" endtime="20201112 09:43:27.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.539" endtime="20201112 09:43:27.557"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.563" endtime="20201112 09:43:27.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:27.572" endtime="20201112 09:43:27.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.567" endtime="20201112 09:43:27.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.559" endtime="20201112 09:43:27.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.046" endtime="20201112 09:43:27.598"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.045" endtime="20201112 09:43:27.598"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.623" endtime="20201112 09:43:27.643"></status>
</kw>
<msg timestamp="20201112 09:43:27.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:27.619" endtime="20201112 09:43:27.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:27.646" endtime="20201112 09:43:27.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.653" endtime="20201112 09:43:27.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.612" endtime="20201112 09:43:27.658"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.604" endtime="20201112 09:43:27.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.677" endtime="20201112 09:43:28.016"></status>
</kw>
<msg timestamp="20201112 09:43:28.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044158347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044191028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:27.673" endtime="20201112 09:43:28.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044158347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044191028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:28.025" endtime="20201112 09:43:28.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.044" endtime="20201112 09:43:28.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.666" endtime="20201112 09:43:28.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.661" endtime="20201112 09:43:28.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:28.062" level="INFO">${RESULT} = [{'time': 0.044191028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.268099999999968e-05, 'source_diff': 3.268099999999968e-05}, {'time': 0.044230097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:28.053" endtime="20201112 09:43:28.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:28.094" level="INFO">${ACCURACY} = {'time': [0.044191028, 0.044230097, 0.044281069, 0.044328042, 0.044368042, 0.044411111, 0.044461083, 0.044502056, 0.044542097, 0.044592069, 0.044643097, 0.044689111, 0.044735111, 0.044774083, 0.044813...</msg>
<status status="PASS" starttime="20201112 09:43:28.065" endtime="20201112 09:43:28.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.105" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 09:43:28.103" endtime="20201112 09:43:28.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.111" level="INFO">VALUE: [3.268099999999968e-05, 3.277800000000414e-05, 3.220799999999885e-05, 3.299999999999831e-05, 3.290300000000079e-05, 3.277800000000414e-05, 3.290200000000132e-05, 3.241699999999986e-05, 3.266600000000064e-05, 3.2026999999996975e-05, 3.240300000000029e-05, 3.2652999999993604e-05, 3.265300000000054e-05, 3.226399999999713e-05, 3.290300000000079e-05, 3.291599999999395e-05, 3.244399999999953e-05, 3.202800000000339e-05, 3.2568999999996184e-05, 3.269399999999978e-05, 3.284700000000251e-05, 3.229199999999627e-05, 3.205599999999559e-05, 3.3026999999997975e-05, 3.279200000000371e-05, 3.268099999999968e-05, 3.266600000000064e-05, 3.211100000000133e-05, 3.2762999999998155e-05, 3.249999999999781e-05, 3.29579999999996e-05, 3.229100000000373e-05, 3.286199999999462e-05, 3.249999999999781e-05, 3.2540999999997045e-05, 3.26380000000015e-05, 3.209700000000176e-05, 3.222199999999842e-05, 3.216600000000014e-05, 3.231900000000287e-05, 3.294400000000003e-05, 3.287500000000165e-05, 3.27779999999972e-05, 3.237500000000115e-05, 3.223599999999799e-05, 3.209700000000176e-05, 3.26380000000015e-05, 3.254199999999652e-05, 3.227800000000364e-05, 3.265300000000054e-05]</msg>
<status status="PASS" starttime="20201112 09:43:28.107" endtime="20201112 09:43:28.112"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.096" endtime="20201112 09:43:28.114"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.120" endtime="20201112 09:43:28.123"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:28.129" endtime="20201112 09:43:28.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.124" endtime="20201112 09:43:28.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.116" endtime="20201112 09:43:28.154"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.600" endtime="20201112 09:43:28.154"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.599" endtime="20201112 09:43:28.155"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.179" endtime="20201112 09:43:28.198"></status>
</kw>
<msg timestamp="20201112 09:43:28.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.175" endtime="20201112 09:43:28.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.202" endtime="20201112 09:43:28.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.208" endtime="20201112 09:43:28.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.167" endtime="20201112 09:43:28.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.161" endtime="20201112 09:43:28.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.234" endtime="20201112 09:43:28.572"></status>
</kw>
<msg timestamp="20201112 09:43:28.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043875361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043908875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:28.230" endtime="20201112 09:43:28.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043875361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043908875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:28.582" endtime="20201112 09:43:28.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.602" endtime="20201112 09:43:28.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.223" endtime="20201112 09:43:28.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.218" endtime="20201112 09:43:28.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:28.619" level="INFO">${RESULT} = [{'time': 0.043908875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.351399999999838e-05, 'source_diff': 3.351399999999838e-05}, {'time': 0.043948875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:28.610" endtime="20201112 09:43:28.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:28.650" level="INFO">${ACCURACY} = {'time': [0.043908875, 0.043948875, 0.043994875, 0.044043889, 0.044095889, 0.044142889, 0.044188917, 0.044230944, 0.044276944, 0.044318986, 0.044361917, 0.044404917, 0.044445917, 0.044495931, 0.044535...</msg>
<status status="PASS" starttime="20201112 09:43:28.621" endtime="20201112 09:43:28.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.662" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 09:43:28.659" endtime="20201112 09:43:28.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.667" level="INFO">VALUE: [3.351399999999838e-05, 3.3110999999995394e-05, 3.319400000000028e-05, 3.358300000000369e-05, 3.316700000000061e-05, 3.3445e-05, 3.305600000000353e-05, 3.341600000000139e-05, 3.391600000000189e-05, 3.367999999999427e-05, 3.358400000000317e-05, 3.338900000000172e-05, 3.341700000000086e-05, 3.365300000000154e-05, 3.347199999999967e-05, 3.305500000000405e-05, 3.384700000000351e-05, 3.368000000000121e-05, 3.365300000000154e-05, 3.381900000000437e-05, 3.366700000000111e-05, 3.347199999999967e-05, 3.323600000000593e-05, 3.341599999999445e-05, 3.398599999999974e-05, 3.393100000000093e-05, 3.316700000000061e-05, 3.390300000000179e-05, 3.3388999999994784e-05, 3.373599999999949e-05, 3.399999999999931e-05, 3.341700000000086e-05, 3.3666999999994174e-05, 3.402799999999845e-05, 3.330599999999684e-05, 3.350000000000575e-05, 3.370800000000035e-05, 3.368000000000121e-05, 3.365199999999513e-05, 3.306999999999616e-05, 3.351400000000532e-05, 3.324999999999856e-05, 3.3791000000005234e-05, 3.3290999999997795e-05, 3.3290999999997795e-05, 3.399999999999931e-05, 3.399999999999931e-05, 3.341600000000139e-05, 3.380600000000428e-05, 3.355599999999709e-05]</msg>
<status status="PASS" starttime="20201112 09:43:28.664" endtime="20201112 09:43:28.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.652" endtime="20201112 09:43:28.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.677" endtime="20201112 09:43:28.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:28.685" endtime="20201112 09:43:28.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.681" endtime="20201112 09:43:28.709"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.672" endtime="20201112 09:43:28.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.157" endtime="20201112 09:43:28.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.156" endtime="20201112 09:43:28.711"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.734" endtime="20201112 09:43:28.752"></status>
</kw>
<msg timestamp="20201112 09:43:28.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.731" endtime="20201112 09:43:28.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.754" endtime="20201112 09:43:28.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.757" endtime="20201112 09:43:28.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.724" endtime="20201112 09:43:28.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.718" endtime="20201112 09:43:28.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.769" endtime="20201112 09:43:29.055"></status>
</kw>
<msg timestamp="20201112 09:43:29.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042382972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042417778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:28.767" endtime="20201112 09:43:29.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042382972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042417778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:29.060" endtime="20201112 09:43:29.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.068" endtime="20201112 09:43:29.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.763" endtime="20201112 09:43:29.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.761" endtime="20201112 09:43:29.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:29.077" level="INFO">${RESULT} = [{'time': 0.042417778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.480600000000528e-05, 'source_diff': 3.480600000000528e-05}, {'time': 0.042461792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:29.072" endtime="20201112 09:43:29.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:29.091" level="INFO">${ACCURACY} = {'time': [0.042417778, 0.042461792, 0.042506778, 0.042551792, 0.042596792, 0.042638792, 0.042685806, 0.042732806, 0.042779875, 0.042825819, 0.042874819, 0.042923833, 0.042964833, 0.043007833, 0.043055...</msg>
<status status="PASS" starttime="20201112 09:43:29.078" endtime="20201112 09:43:29.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.097" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 09:43:29.096" endtime="20201112 09:43:29.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.099" level="INFO">VALUE: [3.480600000000528e-05, 3.434799999999655e-05, 3.415300000000204e-05, 3.408399999999673e-05, 3.45700000000046e-05, 3.42779999999987e-05, 3.42779999999987e-05, 3.448699999999971e-05, 3.454199999999852e-05, 3.4304999999998365e-05, 3.5026999999999975e-05, 3.441600000000239e-05, 3.463900000000297e-05, 3.500000000000031e-05, 3.466600000000264e-05, 3.416700000000161e-05, 3.44580000000011e-05, 3.4110999999996394e-05, 3.472200000000092e-05, 3.458399999999723e-05, 3.4846999999997574e-05, 3.431900000000487e-05, 3.4430999999994494e-05, 3.493100000000193e-05, 3.42779999999987e-05, 3.4666999999995174e-05, 3.4416999999994924e-05, 3.4388999999995784e-05, 3.4790999999999295e-05, 3.466700000000211e-05, 3.458399999999723e-05, 3.422200000000042e-05, 3.440199999999588e-05, 3.455599999999809e-05, 3.449999999999981e-05, 3.447200000000067e-05, 3.436100000000358e-05, 3.423599999999999e-05, 3.411100000000333e-05, 3.468000000000221e-05, 3.4068999999997684e-05, 3.4818999999998435e-05, 3.411100000000333e-05, 3.419400000000128e-05, 3.4638999999996034e-05, 3.472300000000039e-05, 3.4152999999995104e-05, 3.4068999999997684e-05, 3.49450000000015e-05, 3.422299999999989e-05]</msg>
<status status="PASS" starttime="20201112 09:43:29.098" endtime="20201112 09:43:29.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.092" endtime="20201112 09:43:29.106"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.110" endtime="20201112 09:43:29.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:29.114" endtime="20201112 09:43:29.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.112" endtime="20201112 09:43:29.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.107" endtime="20201112 09:43:29.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.714" endtime="20201112 09:43:29.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.712" endtime="20201112 09:43:29.135"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.146" endtime="20201112 09:43:29.165"></status>
</kw>
<msg timestamp="20201112 09:43:29.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:29.145" endtime="20201112 09:43:29.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:29.168" endtime="20201112 09:43:29.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.174" endtime="20201112 09:43:29.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.141" endtime="20201112 09:43:29.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.138" endtime="20201112 09:43:29.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.198" endtime="20201112 09:43:29.538"></status>
</kw>
<msg timestamp="20201112 09:43:29.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025027806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0250635, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:29.195" endtime="20201112 09:43:29.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025027806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0250635, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:29.548" endtime="20201112 09:43:29.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.568" endtime="20201112 09:43:29.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.187" endtime="20201112 09:43:29.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.183" endtime="20201112 09:43:29.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:29.586" level="INFO">${RESULT} = [{'time': 0.0250635, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.569399999999931e-05, 'source_diff': 3.569399999999931e-05}, {'time': 0.025106514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:29.577" endtime="20201112 09:43:29.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:29.618" level="INFO">${ACCURACY} = {'time': [0.0250635, 0.025106514, 0.025156458, 0.025204472, 0.025248486, 0.025301486, 0.025352514, 0.025396486, 0.025439528, 0.0254885, 0.025541528, 0.025591514, 0.025642514, 0.025693597, 0.025745528,...</msg>
<status status="PASS" starttime="20201112 09:43:29.589" endtime="20201112 09:43:29.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.629" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 09:43:29.627" endtime="20201112 09:43:29.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.635" level="INFO">VALUE: [3.569399999999931e-05, 3.551400000000038e-05, 3.600000000000131e-05, 3.5903000000000324e-05, 3.600000000000131e-05, 3.5875000000001184e-05, 3.5111000000000864e-05, 3.542999999999949e-05, 3.5903000000000324e-05, 3.5416999999999393e-05, 3.5653000000000074e-05, 3.579199999999977e-05, 3.526400000000013e-05, 3.5568999999999185e-05, 3.5111000000000864e-05, 3.57780000000002e-05, 3.507000000000163e-05, 3.602800000000045e-05, 3.505599999999859e-05, 3.519499999999828e-05, 3.545799999999863e-05, 3.5055000000002584e-05, 3.5290999999999795e-05, 3.5083000000001724e-05, 3.575000000000106e-05, 3.576400000000063e-05, 3.56520000000006e-05, 3.526400000000013e-05, 3.548599999999777e-05, 3.516599999999967e-05, 3.551400000000038e-05, 3.573600000000149e-05, 3.57780000000002e-05, 3.551400000000038e-05, 3.5638999999997034e-05, 3.526400000000013e-05, 3.550000000000081e-05, 3.593099999999946e-05, 3.502799999999945e-05, 3.5653000000000074e-05, 3.516700000000261e-05, 3.52779999999997e-05, 3.5166999999999143e-05, 3.56520000000006e-05, 3.5361000000001114e-05, 3.588800000000128e-05, 3.606999999999916e-05, 3.5304999999999365e-05, 3.523599999999752e-05, 3.5610999999997894e-05]</msg>
<status status="PASS" starttime="20201112 09:43:29.632" endtime="20201112 09:43:29.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.620" endtime="20201112 09:43:29.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.645" endtime="20201112 09:43:29.648"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:29.653" endtime="20201112 09:43:29.675"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.649" endtime="20201112 09:43:29.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.640" endtime="20201112 09:43:29.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.136" endtime="20201112 09:43:29.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.136" endtime="20201112 09:43:29.679"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.703" endtime="20201112 09:43:29.722"></status>
</kw>
<msg timestamp="20201112 09:43:29.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:29.699" endtime="20201112 09:43:29.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:29.725" endtime="20201112 09:43:29.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.732" endtime="20201112 09:43:29.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.692" endtime="20201112 09:43:29.737"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.686" endtime="20201112 09:43:29.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.756" endtime="20201112 09:43:30.095"></status>
</kw>
<msg timestamp="20201112 09:43:30.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042728389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042765083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:29.753" endtime="20201112 09:43:30.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042728389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042765083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:30.104" endtime="20201112 09:43:30.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.124" endtime="20201112 09:43:30.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.745" endtime="20201112 09:43:30.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.740" endtime="20201112 09:43:30.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:30.141" level="INFO">${RESULT} = [{'time': 0.042765083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.669400000000378e-05, 'source_diff': 3.669400000000378e-05}, {'time': 0.042812083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:30.132" endtime="20201112 09:43:30.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:30.172" level="INFO">${ACCURACY} = {'time': [0.042765083, 0.042812083, 0.042866111, 0.042920111, 0.042969167, 0.043012097, 0.043060097, 0.043111111, 0.043163111, 0.043216125, 0.043260125, 0.043312125, 0.043364139, 0.043419139, 0.043468...</msg>
<status status="PASS" starttime="20201112 09:43:30.144" endtime="20201112 09:43:30.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.184" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 09:43:30.181" endtime="20201112 09:43:30.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.189" level="INFO">VALUE: [3.669400000000378e-05, 3.6541000000001045e-05, 3.620799999999591e-05, 3.6902999999997854e-05, 3.633400000000592e-05, 3.694399999999709e-05, 3.6291000000000795e-05, 3.6346999999999074e-05, 3.697199999999623e-05, 3.652800000000095e-05, 3.661100000000583e-05, 3.6332999999999505e-05, 3.6582999999999755e-05, 3.665300000000454e-05, 3.663900000000497e-05, 3.604200000000002e-05, 3.683400000000642e-05, 3.705600000000059e-05, 3.6194999999995814e-05, 3.661199999999837e-05, 3.66659999999977e-05, 3.6402999999997354e-05, 3.624999999999462e-05, 3.6555000000000615e-05, 3.644399999999659e-05, 3.626400000000113e-05, 3.692999999999752e-05, 3.6291000000000795e-05, 3.624999999999462e-05, 3.619399999999634e-05, 3.6666999999997174e-05, 3.6610999999998894e-05, 3.623600000000199e-05, 3.655600000000009e-05, 3.648600000000224e-05, 3.6596999999999325e-05, 3.6846999999999575e-05, 3.64859999999953e-05, 3.6624999999998464e-05, 3.704200000000102e-05, 3.625000000000156e-05, 3.690300000000479e-05, 3.625000000000156e-05, 3.651400000000138e-05, 3.6333000000006443e-05, 3.67780000000012e-05, 3.651400000000138e-05, 3.6790999999994356e-05, 3.6860999999999144e-05, 3.617999999999677e-05]</msg>
<status status="PASS" starttime="20201112 09:43:30.186" endtime="20201112 09:43:30.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.174" endtime="20201112 09:43:30.192"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.199" endtime="20201112 09:43:30.202"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:30.208" endtime="20201112 09:43:30.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.203" endtime="20201112 09:43:30.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.194" endtime="20201112 09:43:30.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.682" endtime="20201112 09:43:30.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.680" endtime="20201112 09:43:30.234"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.257" endtime="20201112 09:43:30.277"></status>
</kw>
<msg timestamp="20201112 09:43:30.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:30.254" endtime="20201112 09:43:30.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:30.281" endtime="20201112 09:43:30.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.287" endtime="20201112 09:43:30.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.246" endtime="20201112 09:43:30.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.240" endtime="20201112 09:43:30.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.311" endtime="20201112 09:43:30.649"></status>
</kw>
<msg timestamp="20201112 09:43:30.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043194125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043231556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:30.308" endtime="20201112 09:43:30.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043194125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043231556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:30.659" endtime="20201112 09:43:30.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.678" endtime="20201112 09:43:30.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.301" endtime="20201112 09:43:30.685"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.296" endtime="20201112 09:43:30.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:30.697" level="INFO">${RESULT} = [{'time': 0.043231556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7430999999997494e-05, 'source_diff': 3.7430999999997494e-05}, {'time': 0.043284556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:30.688" endtime="20201112 09:43:30.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:30.728" level="INFO">${ACCURACY} = {'time': [0.043231556, 0.043284556, 0.043336556, 0.043385556, 0.043439569, 0.043484597, 0.043539597, 0.043588583, 0.043642611, 0.043688583, 0.043743625, 0.043789625, 0.043843597, 0.043891625, 0.043943...</msg>
<status status="PASS" starttime="20201112 09:43:30.699" endtime="20201112 09:43:30.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.739" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 09:43:30.737" endtime="20201112 09:43:30.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.745" level="INFO">VALUE: [3.7430999999997494e-05, 3.754200000000152e-05, 3.733399999999998e-05, 3.7722999999996454e-05, 3.774999999999612e-05, 3.7291000000001795e-05, 3.772199999999698e-05, 3.7305000000001365e-05, 3.7874999999999714e-05, 3.741600000000539e-05, 3.7652999999998604e-05, 3.7638999999999034e-05, 3.791599999999895e-05, 3.73059999999939e-05, 3.773600000000349e-05, 3.748600000000324e-05, 3.702800000000145e-05, 3.74859999999963e-05, 3.800000000000331e-05, 3.7916999999998424e-05, 3.7861000000000145e-05, 3.752800000000195e-05, 3.7694999999997314e-05, 3.793100000000493e-05, 3.75979999999998e-05, 3.7610999999999895e-05, 3.795900000000407e-05, 3.747300000000314e-05, 3.8041000000002545e-05, 3.7333000000000505e-05, 3.719399999999734e-05, 3.715300000000504e-05, 3.799999999999637e-05, 3.770799999999741e-05, 3.79859999999968e-05, 3.752800000000195e-05, 3.723599999999605e-05, 3.7555000000001615e-05, 3.7347000000000075e-05, 3.711199999999887e-05, 3.7527000000002475e-05, 3.7833000000001005e-05, 3.7958999999997134e-05, 3.7166999999997674e-05, 3.7916999999998424e-05, 3.766700000000511e-05, 3.7291000000001795e-05, 3.748600000000324e-05, 3.7513000000002905e-05, 3.722200000000342e-05]</msg>
<status status="PASS" starttime="20201112 09:43:30.742" endtime="20201112 09:43:30.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.730" endtime="20201112 09:43:30.748"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.755" endtime="20201112 09:43:30.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:30.763" endtime="20201112 09:43:30.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.759" endtime="20201112 09:43:30.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.750" endtime="20201112 09:43:30.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.236" endtime="20201112 09:43:30.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.235" endtime="20201112 09:43:30.789"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.813" endtime="20201112 09:43:30.832"></status>
</kw>
<msg timestamp="20201112 09:43:30.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:30.809" endtime="20201112 09:43:30.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:30.835" endtime="20201112 09:43:30.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.842" endtime="20201112 09:43:30.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.802" endtime="20201112 09:43:30.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.796" endtime="20201112 09:43:30.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.866" endtime="20201112 09:43:31.204"></status>
</kw>
<msg timestamp="20201112 09:43:31.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042783667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042822333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:30.863" endtime="20201112 09:43:31.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042783667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042822333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:31.214" endtime="20201112 09:43:31.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.233" endtime="20201112 09:43:31.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.855" endtime="20201112 09:43:31.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.850" endtime="20201112 09:43:31.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:31.253" level="INFO">${RESULT} = [{'time': 0.042822333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.86659999999997e-05, 'source_diff': 3.86659999999997e-05}, {'time': 0.042868306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:31.243" endtime="20201112 09:43:31.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:31.286" level="INFO">${ACCURACY} = {'time': [0.042822333, 0.042868306, 0.042918319, 0.042969361, 0.043015375, 0.043060375, 0.043112375, 0.043164347, 0.043220347, 0.043266361, 0.043319361, 0.043372361, 0.043428403, 0.043485417, 0.043536...</msg>
<status status="PASS" starttime="20201112 09:43:31.255" endtime="20201112 09:43:31.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.297" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 09:43:31.295" endtime="20201112 09:43:31.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.303" level="INFO">VALUE: [3.86659999999997e-05, 3.804200000000202e-05, 3.866600000000664e-05, 3.823599999999705e-05, 3.8916999999999424e-05, 3.874999999999712e-05, 3.8666999999999174e-05, 3.8833000000002005e-05, 3.8069000000001685e-05, 3.850000000000381e-05, 3.895799999999866e-05, 3.8804999999995926e-05, 3.872199999999798e-05, 3.824999999999662e-05, 3.851400000000338e-05, 3.84859999999973e-05, 3.8402999999999354e-05, 3.891599999999995e-05, 3.854199999999558e-05, 3.892999999999952e-05, 3.8166999999998674e-05, 3.8680999999998744e-05, 3.899999999999737e-05, 3.850000000000381e-05, 3.8819000000002435e-05, 3.8083000000001255e-05, 3.8319000000001935e-05, 3.841599999999945e-05, 3.8416999999998924e-05, 3.8402999999999354e-05, 3.804200000000202e-05, 3.845799999999816e-05, 3.845799999999816e-05, 3.8152999999999104e-05, 3.824999999999662e-05, 3.8902999999999854e-05, 3.8847000000001575e-05, 3.807000000000116e-05, 3.832000000000141e-05, 3.8958999999998134e-05, 3.858400000000123e-05, 3.904199999999608e-05, 3.8694999999998314e-05, 3.877799999999626e-05, 3.891599999999995e-05, 3.8777000000003725e-05, 3.8652999999999604e-05, 3.848600000000424e-05, 3.900000000000431e-05, 3.8847000000001575e-05]</msg>
<status status="PASS" starttime="20201112 09:43:31.300" endtime="20201112 09:43:31.304"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.288" endtime="20201112 09:43:31.306"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.313" endtime="20201112 09:43:31.315"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:31.321" endtime="20201112 09:43:31.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.317" endtime="20201112 09:43:31.345"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.308" endtime="20201112 09:43:31.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.792" endtime="20201112 09:43:31.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.790" endtime="20201112 09:43:31.347"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.371" endtime="20201112 09:43:31.390"></status>
</kw>
<msg timestamp="20201112 09:43:31.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.367" endtime="20201112 09:43:31.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.393" endtime="20201112 09:43:31.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.400" endtime="20201112 09:43:31.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.360" endtime="20201112 09:43:31.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.354" endtime="20201112 09:43:31.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.424" endtime="20201112 09:43:31.762"></status>
</kw>
<msg timestamp="20201112 09:43:31.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043028278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043067722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:31.421" endtime="20201112 09:43:31.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043028278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043067722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:31.772" endtime="20201112 09:43:31.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.791" endtime="20201112 09:43:31.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.413" endtime="20201112 09:43:31.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.408" endtime="20201112 09:43:31.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:31.809" level="INFO">${RESULT} = [{'time': 0.043067722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.944399999999959e-05, 'source_diff': 3.944399999999959e-05}, {'time': 0.043113708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:31.800" endtime="20201112 09:43:31.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:31.841" level="INFO">${ACCURACY} = {'time': [0.043067722, 0.043113708, 0.04316275, 0.04321975, 0.043276764, 0.043328778, 0.043379778, 0.04342575, 0.04347675, 0.043524778, 0.043571778, 0.043625778, 0.043681806, 0.043737819, 0.043783792,...</msg>
<status status="PASS" starttime="20201112 09:43:31.811" endtime="20201112 09:43:31.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.853" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 09:43:31.850" endtime="20201112 09:43:31.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.858" level="INFO">VALUE: [3.944399999999959e-05, 3.990200000000138e-05, 3.994400000000009e-05, 3.9903000000000854e-05, 3.950000000000481e-05, 3.9917000000000424e-05, 3.9111000000001395e-05, 3.951399999999744e-05, 3.994400000000009e-05, 3.9861000000002145e-05, 3.906999999999522e-05, 3.9180999999999244e-05, 3.9736999999998024e-05, 3.966599999999376e-05, 3.951400000000438e-05, 3.983400000000248e-05, 3.9986999999998274e-05, 3.907000000000216e-05, 3.991600000000095e-05, 3.917999999999977e-05, 3.899999999999737e-05, 3.9139000000000534e-05, 3.943000000000002e-05, 3.9540999999997106e-05, 3.999999999999837e-05, 3.944399999999959e-05, 3.9403000000000354e-05, 3.9667000000000174e-05, 3.9304999999996426e-05, 4.0054999999997176e-05, 3.9833000000003005e-05, 4.002799999999751e-05, 3.979199999999683e-05, 3.927799999999676e-05, 3.9847000000002575e-05, 3.922199999999848e-05, 3.958400000000223e-05, 4.002799999999751e-05, 3.973599999999855e-05, 3.9276999999997286e-05, 3.9569000000003185e-05, 3.925000000000456e-05, 3.9153000000000104e-05, 3.9526999999997536e-05, 3.9319000000002935e-05, 3.9276999999997286e-05, 3.9874999999994776e-05, 3.9875000000001715e-05, 3.926400000000413e-05, 3.999999999999837e-05]</msg>
<status status="PASS" starttime="20201112 09:43:31.855" endtime="20201112 09:43:31.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.843" endtime="20201112 09:43:31.862"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.868" endtime="20201112 09:43:31.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:31.877" endtime="20201112 09:43:31.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.872" endtime="20201112 09:43:31.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.864" endtime="20201112 09:43:31.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.350" endtime="20201112 09:43:31.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.348" endtime="20201112 09:43:31.903"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.926" endtime="20201112 09:43:31.946"></status>
</kw>
<msg timestamp="20201112 09:43:31.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.923" endtime="20201112 09:43:31.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.949" endtime="20201112 09:43:31.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.956" endtime="20201112 09:43:31.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.915" endtime="20201112 09:43:31.961"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.909" endtime="20201112 09:43:31.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.979" endtime="20201112 09:43:32.317"></status>
</kw>
<msg timestamp="20201112 09:43:32.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042774611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042815306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:31.976" endtime="20201112 09:43:32.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042774611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042815306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:32.326" endtime="20201112 09:43:32.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.346" endtime="20201112 09:43:32.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.969" endtime="20201112 09:43:32.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.964" endtime="20201112 09:43:32.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:32.364" level="INFO">${RESULT} = [{'time': 0.042815306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0695000000000314e-05, 'source_diff': 4.0695000000000314e-05}, {'time': 0.042871306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:32.355" endtime="20201112 09:43:32.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:32.393" level="INFO">${ACCURACY} = {'time': [0.042815306, 0.042871306, 0.042921319, 0.042974319, 0.043031319, 0.043081333, 0.043137347, 0.043189361, 0.043248361, 0.043305361, 0.043361375, 0.043410361, 0.043466389, 0.043523417, 0.043580...</msg>
<status status="PASS" starttime="20201112 09:43:32.366" endtime="20201112 09:43:32.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.399" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 09:43:32.398" endtime="20201112 09:43:32.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.402" level="INFO">VALUE: [4.0695000000000314e-05, 4.033399999999604e-05, 4.1040999999998606e-05, 4.0276999999998286e-05, 4.0096999999995886e-05, 4.040200000000188e-05, 4.049999999999887e-05, 4.0555000000004615e-05, 4.045800000000016e-05, 4.0097000000002825e-05, 4.0583000000003755e-05, 4.023599999999905e-05, 4.0167000000000674e-05, 4.0903000000001855e-05, 4.075000000000606e-05, 4.0776999999998786e-05, 4.0375000000002215e-05, 4.0653000000001605e-05, 4.0153000000001104e-05, 4.091600000000195e-05, 4.099999999999937e-05, 4.099999999999937e-05, 4.0486999999998774e-05, 4.001399999999794e-05, 4.0291000000004795e-05, 4.0916999999994486e-05, 4.01660000000012e-05, 4.0291000000004795e-05, 4.0582999999996816e-05, 4.0055000000004115e-05, 4.0319000000003935e-05, 4.04859999999993e-05, 4.101399999999894e-05, 4.070800000000041e-05, 4.0917000000001424e-05, 4.0417000000000924e-05, 4.0096999999995886e-05, 4.0430999999993555e-05, 4.0153000000001104e-05, 4.00980000000023e-05, 4.024999999999862e-05, 4.0972999999999704e-05, 4.074999999999912e-05, 4.091600000000195e-05, 4.0569000000004185e-05, 4.0847000000003575e-05, 4.093000000000152e-05, 4.0790999999998356e-05, 4.026399999999819e-05, 4.0403000000001354e-05]</msg>
<status status="PASS" starttime="20201112 09:43:32.400" endtime="20201112 09:43:32.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.394" endtime="20201112 09:43:32.403"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.406" endtime="20201112 09:43:32.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:32.411" endtime="20201112 09:43:32.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.408" endtime="20201112 09:43:32.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.404" endtime="20201112 09:43:32.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.905" endtime="20201112 09:43:32.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.904" endtime="20201112 09:43:32.432"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.443" endtime="20201112 09:43:32.460"></status>
</kw>
<msg timestamp="20201112 09:43:32.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:32.441" endtime="20201112 09:43:32.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:32.461" endtime="20201112 09:43:32.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.464" endtime="20201112 09:43:32.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.438" endtime="20201112 09:43:32.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.435" endtime="20201112 09:43:32.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.475" endtime="20201112 09:43:32.774"></status>
</kw>
<msg timestamp="20201112 09:43:32.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024813014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024854542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:32.474" endtime="20201112 09:43:32.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024813014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024854542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:32.784" endtime="20201112 09:43:32.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.803" endtime="20201112 09:43:32.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.471" endtime="20201112 09:43:32.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.468" endtime="20201112 09:43:32.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:32.821" level="INFO">${RESULT} = [{'time': 0.024854542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152799999999901e-05, 'source_diff': 4.152799999999901e-05}, {'time': 0.024907528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:32.811" endtime="20201112 09:43:32.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:32.853" level="INFO">${ACCURACY} = {'time': [0.024854542, 0.024907528, 0.0249635, 0.025012514, 0.025060514, 0.025113528, 0.025172556, 0.025230542, 0.025284556, 0.025332556, 0.025383542, 0.025433569, 0.025490556, 0.025540583, 0.02558956...</msg>
<status status="PASS" starttime="20201112 09:43:32.823" endtime="20201112 09:43:32.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.864" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 09:43:32.862" endtime="20201112 09:43:32.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.870" level="INFO">VALUE: [4.152799999999901e-05, 4.175000000000012e-05, 4.1930999999998525e-05, 4.1888999999999815e-05, 4.1666999999998705e-05, 4.105600000000112e-05, 4.124999999999962e-05, 4.102800000000198e-05, 4.130600000000137e-05, 4.1737000000000024e-05, 4.19999999999969e-05, 4.123600000000005e-05, 4.1153000000002105e-05, 4.119399999999787e-05, 4.1832999999998066e-05, 4.1554999999998676e-05, 4.1555000000002146e-05, 4.197199999999776e-05, 4.200000000000037e-05, 4.1847000000001106e-05, 4.1875000000000245e-05, 4.1652999999999135e-05, 4.1652999999999135e-05, 4.1152999999998635e-05, 4.1861000000000675e-05, 4.177799999999926e-05, 4.151399999999944e-05, 4.127799999999876e-05, 4.119400000000134e-05, 4.202800000000298e-05, 4.136199999999965e-05, 4.108400000000026e-05, 4.168000000000227e-05, 4.1262999999999717e-05, 4.16660000000027e-05, 4.175000000000012e-05, 4.1096999999996886e-05, 4.1374999999999745e-05, 4.1597000000000856e-05, 4.1555000000002146e-05, 4.200000000000037e-05, 4.1596999999997386e-05, 4.144400000000159e-05, 4.1083000000000786e-05, 4.1680999999998275e-05, 4.1680999999998275e-05, 4.1445000000001064e-05, 4.1473000000000204e-05, 4.1430999999998025e-05, 4.127800000000223e-05]</msg>
<status status="PASS" starttime="20201112 09:43:32.866" endtime="20201112 09:43:32.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.855" endtime="20201112 09:43:32.873"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.879" endtime="20201112 09:43:32.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:32.888" endtime="20201112 09:43:32.909"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.883" endtime="20201112 09:43:32.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.875" endtime="20201112 09:43:32.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.433" endtime="20201112 09:43:32.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.433" endtime="20201112 09:43:32.914"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.937" endtime="20201112 09:43:32.957"></status>
</kw>
<msg timestamp="20201112 09:43:32.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:32.934" endtime="20201112 09:43:32.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:32.961" endtime="20201112 09:43:32.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.967" endtime="20201112 09:43:32.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.926" endtime="20201112 09:43:32.973"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.920" endtime="20201112 09:43:32.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.991" endtime="20201112 09:43:33.328"></status>
</kw>
<msg timestamp="20201112 09:43:33.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042705028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042747097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:32.987" endtime="20201112 09:43:33.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042705028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042747097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:33.338" endtime="20201112 09:43:33.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.357" endtime="20201112 09:43:33.361"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.980" endtime="20201112 09:43:33.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.975" endtime="20201112 09:43:33.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:33.375" level="INFO">${RESULT} = [{'time': 0.042747097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2068999999998746e-05, 'source_diff': 4.2068999999998746e-05}, {'time': 0.042798083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:33.366" endtime="20201112 09:43:33.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:33.408" level="INFO">${ACCURACY} = {'time': [0.042747097, 0.042798083, 0.042849097, 0.042899097, 0.042957111, 0.043016111, 0.043073139, 0.043129125, 0.043183139, 0.043244153, 0.043303139, 0.043362153, 0.043415153, 0.043473167, 0.043525...</msg>
<status status="PASS" starttime="20201112 09:43:33.377" endtime="20201112 09:43:33.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.420" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 09:43:33.417" endtime="20201112 09:43:33.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.425" level="INFO">VALUE: [4.2068999999998746e-05, 4.300000000000137e-05, 4.2639000000004035e-05, 4.2832999999999066e-05, 4.2167000000002675e-05, 4.2653000000003605e-05, 4.277800000000026e-05, 4.28059999999994e-05, 4.254199999999958e-05, 4.2860999999998206e-05, 4.2944999999995626e-05, 4.2917000000003425e-05, 4.229199999999933e-05, 4.2917000000003425e-05, 4.300000000000137e-05, 4.275000000000112e-05, 4.2902999999996916e-05, 4.29860000000018e-05, 4.270800000000241e-05, 4.2833000000006005e-05, 4.2110999999997456e-05, 4.300000000000137e-05, 4.218000000000277e-05, 4.272200000000198e-05, 4.2666999999996236e-05, 4.2666999999996236e-05, 4.2195000000001814e-05, 4.2666999999996236e-05, 4.2403000000003355e-05, 4.226400000000019e-05, 4.302799999999357e-05, 4.2181000000002244e-05, 4.255599999999915e-05, 4.283399999999854e-05, 4.250000000000087e-05, 4.231999999999847e-05, 4.284799999999811e-05, 4.2833000000006005e-05, 4.2194999999994875e-05, 4.251300000000097e-05, 4.244400000000259e-05, 4.222199999999454e-05, 4.2653000000003605e-05, 4.250000000000087e-05, 4.299999999999443e-05, 4.2903000000003855e-05, 4.299999999999443e-05, 4.2153000000003105e-05, 4.202799999999951e-05, 4.29860000000018e-05]</msg>
<status status="PASS" starttime="20201112 09:43:33.422" endtime="20201112 09:43:33.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.410" endtime="20201112 09:43:33.429"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.435" endtime="20201112 09:43:33.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:33.444" endtime="20201112 09:43:33.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.439" endtime="20201112 09:43:33.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.430" endtime="20201112 09:43:33.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.916" endtime="20201112 09:43:33.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.915" endtime="20201112 09:43:33.470"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.493" endtime="20201112 09:43:33.513"></status>
</kw>
<msg timestamp="20201112 09:43:33.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:33.489" endtime="20201112 09:43:33.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:33.516" endtime="20201112 09:43:33.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.523" endtime="20201112 09:43:33.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.482" endtime="20201112 09:43:33.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.476" endtime="20201112 09:43:33.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.546" endtime="20201112 09:43:33.883"></status>
</kw>
<msg timestamp="20201112 09:43:33.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042385014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042428417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:33.543" endtime="20201112 09:43:33.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042385014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042428417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:33.893" endtime="20201112 09:43:33.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.912" endtime="20201112 09:43:33.916"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.536" endtime="20201112 09:43:33.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.531" endtime="20201112 09:43:33.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:33.930" level="INFO">${RESULT} = [{'time': 0.042428417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3403000000004355e-05, 'source_diff': 4.3403000000004355e-05}, {'time': 0.042483444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:33.921" endtime="20201112 09:43:33.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:33.961" level="INFO">${ACCURACY} = {'time': [0.042428417, 0.042483444, 0.042541458, 0.042602458, 0.042655444, 0.042717444, 0.042775458, 0.042835472, 0.042886542, 0.042949486, 0.043000472, 0.043059486, 0.043113514, 0.043175528, 0.043226...</msg>
<status status="PASS" starttime="20201112 09:43:33.932" endtime="20201112 09:43:33.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.974" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 09:43:33.970" endtime="20201112 09:43:33.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.979" level="INFO">VALUE: [4.3403000000004355e-05, 4.393000000000452e-05, 4.395799999999672e-05, 4.3833000000000066e-05, 4.3124999999998026e-05, 4.377700000000179e-05, 4.375000000000212e-05, 4.3332999999999566e-05, 4.334799999999861e-05, 4.402800000000151e-05, 4.327800000000076e-05, 4.3153000000004105e-05, 4.331999999999947e-05, 4.38060000000004e-05, 4.3833000000000066e-05, 4.350000000000187e-05, 4.401400000000194e-05, 4.3124999999998026e-05, 4.348599999999536e-05, 4.3431000000003495e-05, 4.325000000000162e-05, 4.352800000000101e-05, 4.379200000000083e-05, 4.3737000000002024e-05, 4.340200000000488e-05, 4.3055000000000176e-05, 4.3389000000004785e-05, 4.351400000000144e-05, 4.40269999999951e-05, 4.373600000000255e-05, 4.326400000000119e-05, 4.3388999999997846e-05, 4.3874999999998776e-05, 4.3166999999996736e-05, 4.377800000000126e-05, 4.3318999999999996e-05, 4.3180999999996306e-05, 4.3153000000004105e-05, 4.373600000000255e-05, 4.367999999999733e-05, 4.35980000000058e-05, 4.377800000000126e-05, 4.300000000000137e-05, 4.304200000000008e-05, 4.3068999999999746e-05, 4.400000000000237e-05, 4.340199999999794e-05, 4.375000000000212e-05, 4.3624999999998526e-05, 4.402800000000151e-05]</msg>
<status status="PASS" starttime="20201112 09:43:33.976" endtime="20201112 09:43:33.981"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.963" endtime="20201112 09:43:33.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.989" endtime="20201112 09:43:33.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:33.997" endtime="20201112 09:43:34.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.993" endtime="20201112 09:43:34.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.984" endtime="20201112 09:43:34.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.472" endtime="20201112 09:43:34.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.471" endtime="20201112 09:43:34.024"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.047" endtime="20201112 09:43:34.067"></status>
</kw>
<msg timestamp="20201112 09:43:34.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:34.043" endtime="20201112 09:43:34.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:34.070" endtime="20201112 09:43:34.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.077" endtime="20201112 09:43:34.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.036" endtime="20201112 09:43:34.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.030" endtime="20201112 09:43:34.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.102" endtime="20201112 09:43:34.439"></status>
</kw>
<msg timestamp="20201112 09:43:34.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042417917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042462847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:34.098" endtime="20201112 09:43:34.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042417917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042462847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:34.448" endtime="20201112 09:43:34.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.468" endtime="20201112 09:43:34.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.091" endtime="20201112 09:43:34.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.086" endtime="20201112 09:43:34.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:34.486" level="INFO">${RESULT} = [{'time': 0.042462847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.492999999999858e-05, 'source_diff': 4.492999999999858e-05}, {'time': 0.042518847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:34.476" endtime="20201112 09:43:34.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:34.517" level="INFO">${ACCURACY} = {'time': [0.042462847, 0.042518847, 0.042570903, 0.042626861, 0.042685889, 0.042740889, 0.042804917, 0.042866889, 0.042924944, 0.042979903, 0.043033972, 0.043089931, 0.043146917, 0.043205958, 0.043258...</msg>
<status status="PASS" starttime="20201112 09:43:34.488" endtime="20201112 09:43:34.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.528" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 09:43:34.526" endtime="20201112 09:43:34.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.534" level="INFO">VALUE: [4.492999999999858e-05, 4.4069000000000746e-05, 4.408399999999979e-05, 4.4319000000000996e-05, 4.4610999999999956e-05, 4.4110999999999456e-05, 4.499999999999643e-05, 4.404200000000108e-05, 4.442999999999808e-05, 4.475000000000312e-05, 4.4888999999999346e-05, 4.432000000000047e-05, 4.4902999999998916e-05, 4.415200000000563e-05, 4.4402999999998416e-05, 4.41939999999974e-05, 4.404100000000161e-05, 4.479199999999489e-05, 4.431899999999406e-05, 4.444399999999765e-05, 4.41660000000052e-05, 4.474999999999618e-05, 4.4875000000006715e-05, 4.4847000000000636e-05, 4.444399999999765e-05, 4.472199999999704e-05, 4.458400000000029e-05, 4.4944999999997626e-05, 4.474999999999618e-05, 4.4888999999999346e-05, 4.436199999999918e-05, 4.4111000000006395e-05, 4.4374999999999276e-05, 4.415199999999869e-05, 4.450000000000287e-05, 4.454100000000211e-05, 4.4610999999999956e-05, 4.444400000000459e-05, 4.4083000000000316e-05, 4.4083000000000316e-05, 4.501400000000294e-05, 4.4638999999999096e-05, 4.479200000000183e-05, 4.4847000000000636e-05, 4.4430999999997556e-05, 4.4069000000000746e-05, 4.422200000000348e-05, 4.4638999999999096e-05, 4.449999999999593e-05, 4.479199999999489e-05]</msg>
<status status="PASS" starttime="20201112 09:43:34.531" endtime="20201112 09:43:34.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.519" endtime="20201112 09:43:34.544"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.551" endtime="20201112 09:43:34.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:34.560" endtime="20201112 09:43:34.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.555" endtime="20201112 09:43:34.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.546" endtime="20201112 09:43:34.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.026" endtime="20201112 09:43:34.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.025" endtime="20201112 09:43:34.586"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.609" endtime="20201112 09:43:34.629"></status>
</kw>
<msg timestamp="20201112 09:43:34.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:34.606" endtime="20201112 09:43:34.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:34.632" endtime="20201112 09:43:34.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.639" endtime="20201112 09:43:34.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.598" endtime="20201112 09:43:34.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.592" endtime="20201112 09:43:34.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.663" endtime="20201112 09:43:35.001"></status>
</kw>
<msg timestamp="20201112 09:43:35.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042626111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042671847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:34.659" endtime="20201112 09:43:35.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042626111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042671847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:35.010" endtime="20201112 09:43:35.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.029" endtime="20201112 09:43:35.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.652" endtime="20201112 09:43:35.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.647" endtime="20201112 09:43:35.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:35.047" level="INFO">${RESULT} = [{'time': 0.042671847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.573599999999761e-05, 'source_diff': 4.573599999999761e-05}, {'time': 0.042730806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:35.038" endtime="20201112 09:43:35.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:35.078" level="INFO">${ACCURACY} = {'time': [0.042671847, 0.042730806, 0.042785778, 0.042840806, 0.042902778, 0.042960806, 0.043023792, 0.043076819, 0.043129847, 0.043185806, 0.043240806, 0.043293833, 0.043357819, 0.043420875, 0.043475...</msg>
<status status="PASS" starttime="20201112 09:43:35.049" endtime="20201112 09:43:35.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.089" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 09:43:35.087" endtime="20201112 09:43:35.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.095" level="INFO">VALUE: [4.573599999999761e-05, 4.5459000000004635e-05, 4.556999999999478e-05, 4.5987000000004274e-05, 4.5916999999999486e-05, 4.5652999999999666e-05, 4.526399999999625e-05, 4.5083000000001316e-05, 4.5111000000000456e-05, 4.555600000000215e-05, 4.558400000000129e-05, 4.592999999999958e-05, 4.516599999999926e-05, 4.5611000000000956e-05, 4.599999999999743e-05, 4.5152999999999166e-05, 4.5902999999999916e-05, 4.505499999999524e-05, 4.573599999999761e-05, 4.552799999999607e-05, 4.5111000000000456e-05, 4.569400000000584e-05, 4.579200000000283e-05, 4.523600000000405e-05, 4.526400000000319e-05, 4.548599999999736e-05, 4.59860000000048e-05, 4.5861000000001206e-05, 4.527800000000276e-05, 4.561200000000043e-05, 4.5694999999998376e-05, 4.5625000000000526e-05, 4.5652999999999666e-05, 4.56939999999989e-05, 4.5833000000002067e-05, 4.5583000000001817e-05, 4.577800000000326e-05, 4.5138999999999596e-05, 4.5152999999999166e-05, 4.5889000000000346e-05, 4.5902999999999916e-05, 4.522199999999754e-05, 4.58469999999947e-05, 4.5347000000001136e-05, 4.605599999999571e-05, 4.5458999999997696e-05, 4.5125000000000026e-05, 4.555499999999574e-05, 4.597199999999829e-05, 4.504200000000208e-05]</msg>
<status status="PASS" starttime="20201112 09:43:35.092" endtime="20201112 09:43:35.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.080" endtime="20201112 09:43:35.098"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.105" endtime="20201112 09:43:35.109"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:35.115" endtime="20201112 09:43:35.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.110" endtime="20201112 09:43:35.138"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.100" endtime="20201112 09:43:35.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.588" endtime="20201112 09:43:35.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.587" endtime="20201112 09:43:35.141"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.164" endtime="20201112 09:43:35.184"></status>
</kw>
<msg timestamp="20201112 09:43:35.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.161" endtime="20201112 09:43:35.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.187" endtime="20201112 09:43:35.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.194" endtime="20201112 09:43:35.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.153" endtime="20201112 09:43:35.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.147" endtime="20201112 09:43:35.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.218" endtime="20201112 09:43:35.555"></status>
</kw>
<msg timestamp="20201112 09:43:35.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042650375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042696944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:35.214" endtime="20201112 09:43:35.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042650375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042696944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:35.565" endtime="20201112 09:43:35.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.584" endtime="20201112 09:43:35.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.207" endtime="20201112 09:43:35.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.202" endtime="20201112 09:43:35.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:35.602" level="INFO">${RESULT} = [{'time': 0.042696944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.656900000000325e-05, 'source_diff': 4.656900000000325e-05}, {'time': 0.042760958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:35.593" endtime="20201112 09:43:35.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:35.633" level="INFO">${ACCURACY} = {'time': [0.042696944, 0.042760958, 0.042819972, 0.042872958, 0.042935, 0.042999986, 0.043055986, 0.043110028, 0.043175014, 0.043240042, 0.043296056, 0.043361014, 0.043413028, 0.043471028, 0.043528028...</msg>
<status status="PASS" starttime="20201112 09:43:35.604" endtime="20201112 09:43:35.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.644" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 09:43:35.642" endtime="20201112 09:43:35.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.650" level="INFO">VALUE: [4.656900000000325e-05, 4.683300000000307e-05, 4.693000000000058e-05, 4.600000000000437e-05, 4.6333000000002567e-05, 4.699999999999843e-05, 4.6403000000000416e-05, 4.6667000000000236e-05, 4.6653000000000666e-05, 4.623599999999811e-05, 4.6430999999999556e-05, 4.683300000000307e-05, 4.6166999999999736e-05, 4.625000000000462e-05, 4.6153000000000166e-05, 4.641600000000051e-05, 4.680499999999699e-05, 4.6097000000001886e-05, 4.655600000000315e-05, 4.695799999999972e-05, 4.633299999999563e-05, 4.654099999999717e-05, 4.674999999999818e-05, 4.644399999999965e-05, 4.674999999999818e-05, 4.622199999999854e-05, 4.6903000000000916e-05, 4.627799999999682e-05, 4.6430999999999556e-05, 4.601400000000394e-05, 4.6847000000002637e-05, 4.65139999999975e-05, 4.6722999999998516e-05, 4.608400000000179e-05, 4.6653000000000666e-05, 4.608400000000179e-05, 4.6903000000000916e-05, 4.630599999999596e-05, 4.697199999999929e-05, 4.605499999999624e-05, 4.6125000000001026e-05, 4.6680999999999806e-05, 4.650000000000487e-05, 4.631899999999606e-05, 4.665299999999373e-05, 4.649999999999793e-05, 4.679199999999689e-05, 4.656900000000325e-05, 4.645800000000616e-05, 4.6097000000001886e-05]</msg>
<status status="PASS" starttime="20201112 09:43:35.647" endtime="20201112 09:43:35.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.635" endtime="20201112 09:43:35.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.660" endtime="20201112 09:43:35.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:35.669" endtime="20201112 09:43:35.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.664" endtime="20201112 09:43:35.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.655" endtime="20201112 09:43:35.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.143" endtime="20201112 09:43:35.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.142" endtime="20201112 09:43:35.698"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.721" endtime="20201112 09:43:35.742"></status>
</kw>
<msg timestamp="20201112 09:43:35.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.718" endtime="20201112 09:43:35.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.745" endtime="20201112 09:43:35.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.751" endtime="20201112 09:43:35.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.711" endtime="20201112 09:43:35.757"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.704" endtime="20201112 09:43:35.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.777" endtime="20201112 09:43:36.085"></status>
</kw>
<msg timestamp="20201112 09:43:36.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043235556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043282611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:35.773" endtime="20201112 09:43:36.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043235556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043282611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:36.090" endtime="20201112 09:43:36.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.098" endtime="20201112 09:43:36.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.765" endtime="20201112 09:43:36.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.760" endtime="20201112 09:43:36.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:36.106" level="INFO">${RESULT} = [{'time': 0.043282611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.705499999999724e-05, 'source_diff': 4.705499999999724e-05}, {'time': 0.043346639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:36.102" endtime="20201112 09:43:36.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:36.120" level="INFO">${ACCURACY} = {'time': [0.043282611, 0.043346639, 0.043403639, 0.043457639, 0.043517639, 0.043581639, 0.043636653, 0.043700653, 0.043766667, 0.043826681, 0.043888681, 0.043947681, 0.044009708, 0.044072694, 0.044130...</msg>
<status status="PASS" starttime="20201112 09:43:36.107" endtime="20201112 09:43:36.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.126" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 09:43:36.125" endtime="20201112 09:43:36.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.128" level="INFO">VALUE: [4.705499999999724e-05, 4.706999999999628e-05, 4.7347000000003137e-05, 4.774999999999918e-05, 4.745800000000022e-05, 4.709699999999595e-05, 4.727799999999782e-05, 4.7695000000000376e-05, 4.7208999999999446e-05, 4.7708999999999946e-05, 4.756999999999678e-05, 4.7945000000000626e-05, 4.780500000000493e-05, 4.729100000000486e-05, 4.770799999999353e-05, 4.7653000000001666e-05, 4.765299999999473e-05, 4.804199999999814e-05, 4.774999999999918e-05, 4.738800000000237e-05, 4.7611000000002957e-05, 4.786099999999627e-05, 4.724999999999868e-05, 4.751400000000544e-05, 4.752799999999807e-05, 4.781999999999703e-05, 4.7931000000001056e-05, 4.741600000000151e-05, 4.7361000000002706e-05, 4.708300000000332e-05, 4.755599999999721e-05, 4.766600000000176e-05, 4.773599999999961e-05, 4.75139999999985e-05, 4.729100000000486e-05, 4.733299999999663e-05, 4.794400000000115e-05, 4.7181000000000306e-05, 4.7639000000002096e-05, 4.7917000000001486e-05, 4.7431000000000556e-05, 4.706900000000375e-05, 4.747199999999979e-05, 4.707000000000322e-05, 4.726400000000519e-05, 4.7653000000001666e-05, 4.755600000000415e-05, 4.7153000000001166e-05, 4.8013999999999e-05, 4.7931000000001056e-05]</msg>
<status status="PASS" starttime="20201112 09:43:36.127" endtime="20201112 09:43:36.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.121" endtime="20201112 09:43:36.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.133" endtime="20201112 09:43:36.134"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:36.137" endtime="20201112 09:43:36.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.135" endtime="20201112 09:43:36.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.131" endtime="20201112 09:43:36.158"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.700" endtime="20201112 09:43:36.158"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.699" endtime="20201112 09:43:36.158"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.170" endtime="20201112 09:43:36.187"></status>
</kw>
<msg timestamp="20201112 09:43:36.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:36.169" endtime="20201112 09:43:36.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:36.189" endtime="20201112 09:43:36.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.192" endtime="20201112 09:43:36.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.165" endtime="20201112 09:43:36.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.162" endtime="20201112 09:43:36.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.203" endtime="20201112 09:43:36.489"></status>
</kw>
<msg timestamp="20201112 09:43:36.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025760222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025809236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:36.202" endtime="20201112 09:43:36.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025760222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025809236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:36.494" endtime="20201112 09:43:36.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.502" endtime="20201112 09:43:36.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.198" endtime="20201112 09:43:36.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.196" endtime="20201112 09:43:36.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:36.510" level="INFO">${RESULT} = [{'time': 0.025809236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9014e-05, 'source_diff': 4.9014e-05}, {'time': 0.025865236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.890299999999945e-...</msg>
<status status="PASS" starttime="20201112 09:43:36.506" endtime="20201112 09:43:36.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:36.524" level="INFO">${ACCURACY} = {'time': [0.025809236, 0.025865236, 0.02592325, 0.02598025, 0.026042278, 0.026102347, 0.026164361, 0.026231292, 0.026287319, 0.026353319, 0.026410306, 0.026469319, 0.026527333, 0.026583375, 0.02663831...</msg>
<status status="PASS" starttime="20201112 09:43:36.511" endtime="20201112 09:43:36.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.529" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 09:43:36.528" endtime="20201112 09:43:36.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.532" level="INFO">VALUE: [4.9014e-05, 4.890299999999945e-05, 4.876399999999975e-05, 4.823600000000011e-05, 4.8458999999997227e-05, 4.858300000000135e-05, 4.852799999999907e-05, 4.841699999999852e-05, 4.866599999999929e-05, 4.88880000000004e-05, 4.8417000000001986e-05, 4.844400000000165e-05, 4.822200000000054e-05, 4.809700000000042e-05, 4.823600000000011e-05, 4.892999999999911e-05, 4.841599999999904e-05, 4.8013999999999e-05, 4.873600000000061e-05, 4.880599999999846e-05, 4.895800000000172e-05, 4.890299999999945e-05, 4.847199999999732e-05, 4.876399999999975e-05, 4.866599999999929e-05, 4.827799999999882e-05, 4.849999999999993e-05, 4.841699999999852e-05, 4.841699999999852e-05, 4.83879999999999e-05, 4.863899999999963e-05, 4.8931000000002056e-05, 4.875000000000018e-05, 4.811099999999999e-05, 4.815199999999922e-05, 4.88330000000016e-05, 4.886100000000074e-05, 4.806900000000128e-05, 4.834700000000067e-05, 4.813899999999913e-05, 4.8181000000001306e-05, 4.85139999999995e-05, 4.804200000000161e-05, 4.88330000000016e-05, 4.8737000000000086e-05, 4.818000000000183e-05, 4.85139999999995e-05, 4.813899999999913e-05, 4.815199999999922e-05, 4.844399999999818e-05]</msg>
<status status="PASS" starttime="20201112 09:43:36.531" endtime="20201112 09:43:36.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.525" endtime="20201112 09:43:36.534"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.537" endtime="20201112 09:43:36.538"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:36.541" endtime="20201112 09:43:36.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.539" endtime="20201112 09:43:36.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.535" endtime="20201112 09:43:36.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.159" endtime="20201112 09:43:36.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.159" endtime="20201112 09:43:36.562"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.574" endtime="20201112 09:43:36.591"></status>
</kw>
<msg timestamp="20201112 09:43:36.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:36.572" endtime="20201112 09:43:36.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:36.593" endtime="20201112 09:43:36.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.595" endtime="20201112 09:43:36.598"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.568" endtime="20201112 09:43:36.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.565" endtime="20201112 09:43:36.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.608" endtime="20201112 09:43:36.904"></status>
</kw>
<msg timestamp="20201112 09:43:36.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025676431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025726181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:36.606" endtime="20201112 09:43:36.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025676431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025726181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:36.914" endtime="20201112 09:43:36.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.933" endtime="20201112 09:43:36.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.603" endtime="20201112 09:43:36.939"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.600" endtime="20201112 09:43:36.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:36.951" level="INFO">${RESULT} = [{'time': 0.025726181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.975000000000118e-05, 'source_diff': 4.975000000000118e-05}, {'time': 0.025785153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:36.942" endtime="20201112 09:43:36.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:36.982" level="INFO">${ACCURACY} = {'time': [0.025726181, 0.025785153, 0.025847181, 0.025904181, 0.025967181, 0.026028181, 0.026093208, 0.026155194, 0.026216222, 0.026280236, 0.026342236, 0.026410222, 0.026466222, 0.026533236, 0.026591...</msg>
<status status="PASS" starttime="20201112 09:43:36.953" endtime="20201112 09:43:36.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.993" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 09:43:36.991" endtime="20201112 09:43:36.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.998" level="INFO">VALUE: [4.975000000000118e-05, 4.977800000000032e-05, 4.98339999999986e-05, 4.9486999999997366e-05, 4.9458999999998227e-05, 4.908400000000132e-05, 4.916599999999979e-05, 4.9388000000000903e-05, 4.987500000000131e-05, 4.940299999999995e-05, 4.947200000000179e-05, 4.983299999999913e-05, 4.991600000000054e-05, 4.918000000000283e-05, 4.940299999999995e-05, 4.991700000000002e-05, 4.966699999999977e-05, 4.9222999999997546e-05, 4.925000000000068e-05, 4.947200000000179e-05, 4.986099999999827e-05, 4.91529999999997e-05, 4.9959000000002196e-05, 5.002800000000057e-05, 4.906999999999828e-05, 4.940200000000047e-05, 4.941699999999952e-05, 4.942999999999961e-05, 4.9901999999997504e-05, 4.997199999999882e-05, 5.001399999999753e-05, 4.975000000000118e-05, 4.973600000000161e-05, 4.956899999999931e-05, 4.931900000000253e-05, 4.995799999999925e-05, 4.898600000000086e-05, 4.9417000000002986e-05, 4.91529999999997e-05, 4.976400000000075e-05, 4.965200000000072e-05, 4.9987000000001336e-05, 4.9195000000001876e-05, 4.92079999999985e-05, 4.956900000000278e-05, 4.950000000000093e-05, 4.988899999999741e-05, 4.979100000000042e-05, 4.96940000000029e-05, 4.904099999999967e-05]</msg>
<status status="PASS" starttime="20201112 09:43:36.995" endtime="20201112 09:43:37.000"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.984" endtime="20201112 09:43:37.002"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.009" endtime="20201112 09:43:37.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:37.017" endtime="20201112 09:43:37.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.013" endtime="20201112 09:43:37.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.004" endtime="20201112 09:43:37.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.563" endtime="20201112 09:43:37.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.563" endtime="20201112 09:43:37.043"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.067" endtime="20201112 09:43:37.087"></status>
</kw>
<msg timestamp="20201112 09:43:37.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.063" endtime="20201112 09:43:37.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.091" endtime="20201112 09:43:37.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.097" endtime="20201112 09:43:37.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.056" endtime="20201112 09:43:37.103"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.050" endtime="20201112 09:43:37.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.123" endtime="20201112 09:43:37.460"></status>
</kw>
<msg timestamp="20201112 09:43:37.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042976972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043027153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:37.119" endtime="20201112 09:43:37.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042976972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043027153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:37.470" endtime="20201112 09:43:37.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.489" endtime="20201112 09:43:37.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.110" endtime="20201112 09:43:37.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.105" endtime="20201112 09:43:37.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:37.507" level="INFO">${RESULT} = [{'time': 0.043027153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.018099999999637e-05, 'source_diff': 5.018099999999637e-05}, {'time': 0.043085181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:37.497" endtime="20201112 09:43:37.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:37.538" level="INFO">${ACCURACY} = {'time': [0.043027153, 0.043085181, 0.043154167, 0.043212222, 0.043274222, 0.043341194, 0.043400208, 0.043465236, 0.043526236, 0.04359525, 0.043653222, 0.043723264, 0.04378925, 0.04385525, 0.043925278...</msg>
<status status="PASS" starttime="20201112 09:43:37.509" endtime="20201112 09:43:37.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.549" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 09:43:37.547" endtime="20201112 09:43:37.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.555" level="INFO">VALUE: [5.018099999999637e-05, 5.005599999999971e-05, 5.01669999999968e-05, 5.068000000000433e-05, 5.06940000000039e-05, 5.051300000000203e-05, 5.066600000000476e-05, 5.0985999999995923e-05, 5.0139000000004597e-05, 5.025000000000168e-05, 5.004100000000067e-05, 5.0985999999995923e-05, 5.076400000000175e-05, 5.01669999999968e-05, 5.0985999999995923e-05, 5.030500000000049e-05, 5.013899999999766e-05, 5.055600000000021e-05, 5.038899999999791e-05, 5.0707999999996534e-05, 5.030599999999996e-05, 5.027700000000135e-05, 5.056999999999978e-05, 5.0901999999998504e-05, 5.0415999999997574e-05, 5.065299999999773e-05, 5.047200000000279e-05, 5.0153000000004166e-05, 5.077800000000132e-05, 5.008299999999938e-05, 5.061099999999902e-05, 5.05419999999937e-05, 5.01669999999968e-05, 5.072200000000304e-05, 5.080500000000099e-05, 5.095899999999626e-05, 5.058399999999935e-05, 5.079200000000089e-05, 5.0987000000002336e-05, 5.0137999999998184e-05, 5.0679999999997394e-05, 5.025000000000168e-05, 5.072200000000304e-05, 5.10270000000021e-05, 5.0943999999997214e-05, 5.0445000000003126e-05, 5.077800000000132e-05, 5.086099999999927e-05, 5.059699999999945e-05, 5.0457999999996284e-05]</msg>
<status status="PASS" starttime="20201112 09:43:37.551" endtime="20201112 09:43:37.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.540" endtime="20201112 09:43:37.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.565" endtime="20201112 09:43:37.568"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:37.573" endtime="20201112 09:43:37.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.569" endtime="20201112 09:43:37.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.560" endtime="20201112 09:43:37.598"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.045" endtime="20201112 09:43:37.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.044" endtime="20201112 09:43:37.599"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.623" endtime="20201112 09:43:37.643"></status>
</kw>
<msg timestamp="20201112 09:43:37.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.619" endtime="20201112 09:43:37.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.647" endtime="20201112 09:43:37.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.653" endtime="20201112 09:43:37.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.612" endtime="20201112 09:43:37.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.606" endtime="20201112 09:43:37.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.678" endtime="20201112 09:43:38.019"></status>
</kw>
<msg timestamp="20201112 09:43:38.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042694222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042745486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:37.674" endtime="20201112 09:43:38.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042694222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042745486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:38.028" endtime="20201112 09:43:38.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.048" endtime="20201112 09:43:38.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.667" endtime="20201112 09:43:38.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.662" endtime="20201112 09:43:38.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:38.066" level="INFO">${RESULT} = [{'time': 0.042745486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.126400000000225e-05, 'source_diff': 5.126400000000225e-05}, {'time': 0.042806486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:38.056" endtime="20201112 09:43:38.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:38.096" level="INFO">${ACCURACY} = {'time': [0.042745486, 0.042806486, 0.0428705, 0.042933472, 0.042996486, 0.043055486, 0.043123514, 0.043186514, 0.043246542, 0.043312528, 0.043376569, 0.043436542, 0.043495542, 0.043564542, 0.04363458...</msg>
<status status="PASS" starttime="20201112 09:43:38.068" endtime="20201112 09:43:38.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.108" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 09:43:38.105" endtime="20201112 09:43:38.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.113" level="INFO">VALUE: [5.126400000000225e-05, 5.1179999999997894e-05, 5.16669999999983e-05, 5.129100000000192e-05, 5.105500000000124e-05, 5.138899999999891e-05, 5.107000000000028e-05, 5.1681000000004806e-05, 5.120899999999651e-05, 5.152800000000207e-05, 5.126299999999584e-05, 5.1431000000004556e-05, 5.184800000000017e-05, 5.169499999999744e-05, 5.1651999999999254e-05, 5.1471999999996854e-05, 5.1679999999998394e-05, 5.126399999999531e-05, 5.150000000000293e-05, 5.16390000000061e-05, 5.176400000000275e-05, 5.1415999999998574e-05, 5.1667000000005237e-05, 5.1249999999995743e-05, 5.163899999999916e-05, 5.1403000000005417e-05, 5.1917000000005487e-05, 5.165299999999873e-05, 5.161100000000002e-05, 5.1749999999996243e-05, 5.1459000000003696e-05, 5.1014000000002e-05, 5.184800000000017e-05, 5.127699999999541e-05, 5.1499999999995993e-05, 5.1137999999999184e-05, 5.175000000000318e-05, 5.180600000000146e-05, 5.175000000000318e-05, 5.165299999999873e-05, 5.1167000000004736e-05, 5.2014000000003e-05, 5.138900000000585e-05, 5.197200000000429e-05, 5.177800000000232e-05, 5.1431000000004556e-05, 5.127800000000182e-05, 5.177800000000232e-05, 5.177700000000285e-05, 5.136099999999977e-05]</msg>
<status status="PASS" starttime="20201112 09:43:38.110" endtime="20201112 09:43:38.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.098" endtime="20201112 09:43:38.117"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.123" endtime="20201112 09:43:38.126"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:38.132" endtime="20201112 09:43:38.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.127" endtime="20201112 09:43:38.155"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.118" endtime="20201112 09:43:38.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.602" endtime="20201112 09:43:38.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.600" endtime="20201112 09:43:38.158"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.181" endtime="20201112 09:43:38.202"></status>
</kw>
<msg timestamp="20201112 09:43:38.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:38.178" endtime="20201112 09:43:38.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:38.205" endtime="20201112 09:43:38.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.211" endtime="20201112 09:43:38.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.170" endtime="20201112 09:43:38.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.164" endtime="20201112 09:43:38.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.235" endtime="20201112 09:43:38.573"></status>
</kw>
<msg timestamp="20201112 09:43:38.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042745125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042797653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:38.232" endtime="20201112 09:43:38.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042745125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042797653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:38.582" endtime="20201112 09:43:38.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.601" endtime="20201112 09:43:38.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.225" endtime="20201112 09:43:38.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.220" endtime="20201112 09:43:38.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:38.619" level="INFO">${RESULT} = [{'time': 0.042797653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.252799999999613e-05, 'source_diff': 5.252799999999613e-05}, {'time': 0.042862639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:38.610" endtime="20201112 09:43:38.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:38.650" level="INFO">${ACCURACY} = {'time': [0.042797653, 0.042862639, 0.042920653, 0.042982625, 0.043044625, 0.043113653, 0.043172639, 0.043243653, 0.043303653, 0.043370694, 0.043439708, 0.043500681, 0.043559681, 0.043624681, 0.043690...</msg>
<status status="PASS" starttime="20201112 09:43:38.621" endtime="20201112 09:43:38.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.662" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 09:43:38.659" endtime="20201112 09:43:38.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.667" level="INFO">VALUE: [5.252799999999613e-05, 5.250000000000393e-05, 5.215300000000617e-05, 5.258300000000188e-05, 5.3014000000004e-05, 5.23470000000012e-05, 5.209700000000095e-05, 5.245899999999776e-05, 5.20419999999952e-05, 5.279100000000342e-05, 5.2151999999999754e-05, 5.26669999999993e-05, 5.225000000000368e-05, 5.269499999999844e-05, 5.283300000000213e-05, 5.275000000000418e-05, 5.2263999999996313e-05, 5.280500000000299e-05, 5.215299999999923e-05, 5.245800000000522e-05, 5.206900000000181e-05, 5.288900000000041e-05, 5.2943999999999214e-05, 5.2263999999996313e-05, 5.29869999999974e-05, 5.28470000000017e-05, 5.262500000000059e-05, 5.2473000000004266e-05, 5.208400000000085e-05, 5.262500000000059e-05, 5.2943999999999214e-05, 5.3013999999997063e-05, 5.2638000000000684e-05, 5.250000000000393e-05, 5.227700000000335e-05, 5.2165999999999324e-05, 5.230600000000196e-05, 5.293099999999912e-05, 5.208300000000138e-05, 5.3013999999997063e-05, 5.2263999999996313e-05, 5.231900000000206e-05, 5.2499999999996994e-05, 5.269499999999844e-05, 5.26940000000059e-05, 5.2263999999996313e-05, 5.2235999999997174e-05, 5.220899999999751e-05, 5.276300000000428e-05, 5.304100000000367e-05]</msg>
<status status="PASS" starttime="20201112 09:43:38.664" endtime="20201112 09:43:38.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.652" endtime="20201112 09:43:38.671"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.677" endtime="20201112 09:43:38.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:38.686" endtime="20201112 09:43:38.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.681" endtime="20201112 09:43:38.709"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.673" endtime="20201112 09:43:38.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.160" endtime="20201112 09:43:38.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.159" endtime="20201112 09:43:38.712"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.735" endtime="20201112 09:43:38.755"></status>
</kw>
<msg timestamp="20201112 09:43:38.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:38.732" endtime="20201112 09:43:38.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:38.759" endtime="20201112 09:43:38.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.765" endtime="20201112 09:43:38.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.724" endtime="20201112 09:43:38.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.718" endtime="20201112 09:43:38.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.789" endtime="20201112 09:43:39.128"></status>
</kw>
<msg timestamp="20201112 09:43:39.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042462167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042516056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:38.786" endtime="20201112 09:43:39.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042462167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042516056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:39.138" endtime="20201112 09:43:39.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.157" endtime="20201112 09:43:39.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.778" endtime="20201112 09:43:39.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.774" endtime="20201112 09:43:39.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:39.176" level="INFO">${RESULT} = [{'time': 0.042516056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.388900000000141e-05, 'source_diff': 5.388900000000141e-05}, {'time': 0.042586028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:39.167" endtime="20201112 09:43:39.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:39.207" level="INFO">${ACCURACY} = {'time': [0.042516056, 0.042586028, 0.042656028, 0.042722056, 0.042785042, 0.042855083, 0.042924056, 0.042985097, 0.043050069, 0.043113139, 0.043182083, 0.043252097, 0.043322097, 0.043383111, 0.043450...</msg>
<status status="PASS" starttime="20201112 09:43:39.178" endtime="20201112 09:43:39.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.218" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 09:43:39.216" endtime="20201112 09:43:39.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.224" level="INFO">VALUE: [5.388900000000141e-05, 5.35419999999967e-05, 5.345899999999876e-05, 5.329200000000339e-05, 5.340300000000048e-05, 5.350000000000493e-05, 5.354200000000364e-05, 5.3249999999997744e-05, 5.329100000000392e-05, 5.380600000000346e-05, 5.355500000000374e-05, 5.308300000000238e-05, 5.3735999999998674e-05, 5.3707999999999534e-05, 5.365300000000073e-05, 5.3249999999997744e-05, 5.341700000000005e-05, 5.3249999999997744e-05, 5.3971999999999354e-05, 5.358400000000235e-05, 5.382000000000303e-05, 5.309800000000142e-05, 5.3235999999998174e-05, 5.362500000000159e-05, 5.311099999999458e-05, 5.3763999999997814e-05, 5.3430000000000144e-05, 5.3735999999998674e-05, 5.38470000000027e-05, 5.331899999999612e-05, 5.4027999999997633e-05, 5.356900000000331e-05, 5.333300000000263e-05, 5.365300000000073e-05, 5.395899999999926e-05, 5.338900000000091e-05, 5.331999999999559e-05, 5.3235999999998174e-05, 5.379100000000442e-05, 5.384800000000217e-05, 5.336100000000177e-05, 5.3487000000004836e-05, 5.3166000000000324e-05, 5.311100000000152e-05, 5.3707999999999534e-05, 5.36670000000003e-05, 5.386099999999533e-05, 5.354200000000364e-05, 5.330500000000349e-05, 5.315300000000023e-05]</msg>
<status status="PASS" starttime="20201112 09:43:39.221" endtime="20201112 09:43:39.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.209" endtime="20201112 09:43:39.227"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.234" endtime="20201112 09:43:39.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:39.242" endtime="20201112 09:43:39.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.238" endtime="20201112 09:43:39.266"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.229" endtime="20201112 09:43:39.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.714" endtime="20201112 09:43:39.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.713" endtime="20201112 09:43:39.268"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.292" endtime="20201112 09:43:39.312"></status>
</kw>
<msg timestamp="20201112 09:43:39.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.288" endtime="20201112 09:43:39.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.316" endtime="20201112 09:43:39.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.323" endtime="20201112 09:43:39.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.281" endtime="20201112 09:43:39.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.275" endtime="20201112 09:43:39.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.346" endtime="20201112 09:43:39.683"></status>
</kw>
<msg timestamp="20201112 09:43:39.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042689278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042743625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:39.343" endtime="20201112 09:43:39.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042689278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042743625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:39.692" endtime="20201112 09:43:39.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.711" endtime="20201112 09:43:39.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.336" endtime="20201112 09:43:39.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.331" endtime="20201112 09:43:39.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:39.731" level="INFO">${RESULT} = [{'time': 0.042743625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.43470000000032e-05, 'source_diff': 5.43470000000032e-05}, {'time': 0.042812597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:39.722" endtime="20201112 09:43:39.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:39.762" level="INFO">${ACCURACY} = {'time': [0.042743625, 0.042812597, 0.042873597, 0.042940611, 0.043009625, 0.043076639, 0.043144639, 0.043211667, 0.043274639, 0.043342653, 0.043403722, 0.043467667, 0.043540681, 0.043607681, 0.043672...</msg>
<status status="PASS" starttime="20201112 09:43:39.733" endtime="20201112 09:43:39.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.773" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 09:43:39.771" endtime="20201112 09:43:39.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.779" level="INFO">VALUE: [5.43470000000032e-05, 5.4763999999998814e-05, 5.4513999999998564e-05, 5.491699999999461e-05, 5.43470000000032e-05, 5.4499999999998994e-05, 5.444500000000019e-05, 5.488900000000241e-05, 5.441699999999411e-05, 5.458400000000335e-05, 5.4180000000000894e-05, 5.4985999999999924e-05, 5.445899999999976e-05, 5.46670000000013e-05, 5.431899999999712e-05, 5.426299999999884e-05, 5.4999999999999494e-05, 5.4151999999994815e-05, 5.4249999999998744e-05, 5.408300000000338e-05, 5.5041999999998203e-05, 5.45549999999978e-05, 5.4499999999998994e-05, 5.4499999999998994e-05, 5.4014000000005e-05, 5.444500000000019e-05, 5.4749999999999244e-05, 5.409800000000242e-05, 5.4527999999998134e-05, 5.425000000000568e-05, 5.452699999999866e-05, 5.4693999999994025e-05, 5.483299999999719e-05, 5.4694000000000964e-05, 5.4416000000001574e-05, 5.4416000000001574e-05, 5.4999999999999494e-05, 5.4929999999994705e-05, 5.443100000000062e-05, 5.491699999999461e-05, 5.408300000000338e-05, 5.418100000000037e-05, 5.447299999999933e-05, 5.405599999999677e-05, 5.4958000000000784e-05, 5.4999999999999494e-05, 5.445899999999976e-05, 5.506899999999787e-05, 5.486200000000274e-05, 5.426299999999884e-05]</msg>
<status status="PASS" starttime="20201112 09:43:39.775" endtime="20201112 09:43:39.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.763" endtime="20201112 09:43:39.788"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.794" endtime="20201112 09:43:39.797"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:39.803" endtime="20201112 09:43:39.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.798" endtime="20201112 09:43:39.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.790" endtime="20201112 09:43:39.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.271" endtime="20201112 09:43:39.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.269" endtime="20201112 09:43:39.829"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.852" endtime="20201112 09:43:39.873"></status>
</kw>
<msg timestamp="20201112 09:43:39.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.849" endtime="20201112 09:43:39.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.877" endtime="20201112 09:43:39.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.883" endtime="20201112 09:43:39.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.841" endtime="20201112 09:43:39.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.836" endtime="20201112 09:43:39.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.908" endtime="20201112 09:43:40.218"></status>
</kw>
<msg timestamp="20201112 09:43:40.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042644681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042700083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:39.905" endtime="20201112 09:43:40.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042644681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042700083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:40.223" endtime="20201112 09:43:40.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.231" endtime="20201112 09:43:40.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.897" endtime="20201112 09:43:40.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.892" endtime="20201112 09:43:40.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:40.241" level="INFO">${RESULT} = [{'time': 0.042700083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5402000000003004e-05, 'source_diff': 5.5402000000003004e-05}, {'time': 0.042773069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:40.237" endtime="20201112 09:43:40.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:40.255" level="INFO">${ACCURACY} = {'time': [0.042700083, 0.042773069, 0.042842069, 0.042905111, 0.042972083, 0.043039111, 0.043105111, 0.043168125, 0.043239111, 0.043302181, 0.043366139, 0.043440167, 0.043510139, 0.043583153, 0.043651...</msg>
<status status="PASS" starttime="20201112 09:43:40.242" endtime="20201112 09:43:40.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.260" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 09:43:40.259" endtime="20201112 09:43:40.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.263" level="INFO">VALUE: [5.5402000000003004e-05, 5.526299999999984e-05, 5.58470000000047e-05, 5.552800000000607e-05, 5.511100000000352e-05, 5.5541999999998704e-05, 5.558300000000488e-05, 5.530600000000496e-05, 5.515299999999529e-05, 5.588900000000341e-05, 5.5458000000001284e-05, 5.587500000000384e-05, 5.540300000000248e-05, 5.581999999999809e-05, 5.5291999999998453e-05, 5.5401999999996066e-05, 5.5637999999996746e-05, 5.5444000000001714e-05, 5.527699999999941e-05, 5.583299999999819e-05, 5.5791999999998954e-05, 5.554100000000617e-05, 5.5986000000000924e-05, 5.56670000000023e-05, 5.5041999999998203e-05, 5.565299999999579e-05, 5.5291999999998453e-05, 5.529200000000539e-05, 5.544500000000119e-05, 5.5249999999999744e-05, 5.5415999999995635e-05, 5.530600000000496e-05, 5.5401999999996066e-05, 5.534800000000367e-05, 5.5652000000003254e-05, 5.5638000000003685e-05, 5.5263999999999314e-05, 5.5916000000003074e-05, 5.5972000000001354e-05, 5.508299999999744e-05, 5.509700000000395e-05, 5.5986000000000924e-05, 5.565299999999579e-05, 5.570899999999407e-05, 5.5249999999999744e-05, 5.5027999999998634e-05, 5.5805999999998523e-05, 5.5957999999994845e-05, 5.5291999999998453e-05, 5.591699999999561e-05]</msg>
<status status="PASS" starttime="20201112 09:43:40.261" endtime="20201112 09:43:40.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.256" endtime="20201112 09:43:40.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.268" endtime="20201112 09:43:40.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:40.272" endtime="20201112 09:43:40.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.270" endtime="20201112 09:43:40.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.265" endtime="20201112 09:43:40.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.831" endtime="20201112 09:43:40.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.830" endtime="20201112 09:43:40.297"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.320" endtime="20201112 09:43:40.341"></status>
</kw>
<msg timestamp="20201112 09:43:40.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:40.317" endtime="20201112 09:43:40.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:40.345" endtime="20201112 09:43:40.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.351" endtime="20201112 09:43:40.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.310" endtime="20201112 09:43:40.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.304" endtime="20201112 09:43:40.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.375" endtime="20201112 09:43:40.711"></status>
</kw>
<msg timestamp="20201112 09:43:40.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042733667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042790181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:40.372" endtime="20201112 09:43:40.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042733667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042790181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:40.721" endtime="20201112 09:43:40.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.741" endtime="20201112 09:43:40.746"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.364" endtime="20201112 09:43:40.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.359" endtime="20201112 09:43:40.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:40.760" level="INFO">${RESULT} = [{'time': 0.042790181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6513999999993625e-05, 'source_diff': 5.6513999999993625e-05}, {'time': 0.042865194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:40.751" endtime="20201112 09:43:40.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:40.791" level="INFO">${ACCURACY} = {'time': [0.042790181, 0.042865194, 0.042935181, 0.043006194, 0.043080194, 0.043147236, 0.043221236, 0.043287222, 0.043360236, 0.043429236, 0.04349825, 0.04356225, 0.043629278, 0.043693333, 0.04376827...</msg>
<status status="PASS" starttime="20201112 09:43:40.762" endtime="20201112 09:43:40.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.802" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 09:43:40.800" endtime="20201112 09:43:40.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.807" level="INFO">VALUE: [5.6513999999993625e-05, 5.687500000000484e-05, 5.643100000000262e-05, 5.679100000000048e-05, 5.676300000000134e-05, 5.659699999999851e-05, 5.609700000000495e-05, 5.6166000000003324e-05, 5.6514000000000564e-05, 5.606900000000581e-05, 5.608300000000538e-05, 5.6485999999994485e-05, 5.638900000000391e-05, 5.634699999999826e-05, 5.66670000000033e-05, 5.6264000000000314e-05, 5.654100000000023e-05, 5.644500000000219e-05, 5.670900000000201e-05, 5.604099999999973e-05, 5.60549999999993e-05, 5.65549999999998e-05, 5.608299999999844e-05, 5.6750000000001244e-05, 5.665300000000373e-05, 5.7055999999999774e-05, 5.6986000000001924e-05, 5.6194000000002464e-05, 5.6736000000001674e-05, 5.666699999999636e-05, 5.6208000000002034e-05, 5.6555999999999274e-05, 5.659800000000492e-05, 5.7042000000000204e-05, 5.7042000000000204e-05, 5.6514000000000564e-05, 5.6250000000000744e-05, 5.633300000000563e-05, 5.679100000000048e-05, 5.6444000000002714e-05, 5.6750000000001244e-05, 5.615299999999629e-05, 5.618099999999543e-05, 5.6514000000000564e-05, 5.644500000000219e-05, 5.6514000000000564e-05, 5.6679999999996455e-05, 5.641699999999611e-05, 5.634800000000467e-05, 5.613900000000366e-05]</msg>
<status status="PASS" starttime="20201112 09:43:40.804" endtime="20201112 09:43:40.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.793" endtime="20201112 09:43:40.811"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.817" endtime="20201112 09:43:40.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:40.826" endtime="20201112 09:43:40.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.821" endtime="20201112 09:43:40.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.813" endtime="20201112 09:43:40.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.299" endtime="20201112 09:43:40.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.298" endtime="20201112 09:43:40.852"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.876" endtime="20201112 09:43:40.897"></status>
</kw>
<msg timestamp="20201112 09:43:40.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:40.872" endtime="20201112 09:43:40.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:40.900" endtime="20201112 09:43:40.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.907" endtime="20201112 09:43:40.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.865" endtime="20201112 09:43:40.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.859" endtime="20201112 09:43:40.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.931" endtime="20201112 09:43:41.270"></status>
</kw>
<msg timestamp="20201112 09:43:41.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042821764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042879528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:40.927" endtime="20201112 09:43:41.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042821764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042879528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:41.280" endtime="20201112 09:43:41.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.299" endtime="20201112 09:43:41.304"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.920" endtime="20201112 09:43:41.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.915" endtime="20201112 09:43:41.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:41.318" level="INFO">${RESULT} = [{'time': 0.042879528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7764000000001814e-05, 'source_diff': 5.7764000000001814e-05}, {'time': 0.0429555, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:41.309" endtime="20201112 09:43:41.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:41.349" level="INFO">${ACCURACY} = {'time': [0.042879528, 0.0429555, 0.043024514, 0.043099542, 0.043164569, 0.043237556, 0.043306542, 0.043373556, 0.043448597, 0.043525597, 0.043595597, 0.043667597, 0.043733611, 0.043810653, 0.04387861...</msg>
<status status="PASS" starttime="20201112 09:43:41.320" endtime="20201112 09:43:41.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.360" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 09:43:41.358" endtime="20201112 09:43:41.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.366" level="INFO">VALUE: [5.7764000000001814e-05, 5.741700000000405e-05, 5.7028000000000634e-05, 5.7235999999995235e-05, 5.7915999999998136e-05, 5.7778000000001384e-05, 5.7528000000001134e-05, 5.741700000000405e-05, 5.765299999999779e-05, 5.804100000000173e-05, 5.7486000000002424e-05, 5.7416000000004574e-05, 5.7193999999996525e-05, 5.8013999999995125e-05, 5.7749999999995305e-05, 5.7944000000004214e-05, 5.788899999999847e-05, 5.7458000000003284e-05, 5.769500000000344e-05, 5.765299999999779e-05, 5.7250000000001744e-05, 5.73340000000061e-05, 5.7833999999999663e-05, 5.7820000000000094e-05, 5.7750000000002244e-05, 5.804100000000173e-05, 5.7943999999997275e-05, 5.780500000000105e-05, 5.788899999999847e-05, 5.7430000000004144e-05, 5.7486000000002424e-05, 5.708299999999944e-05, 5.7722000000003104e-05, 5.78749999999989e-05, 5.733299999999969e-05, 5.7749999999995305e-05, 5.7250000000001744e-05, 5.715299999999729e-05, 5.7416000000004574e-05, 5.784800000000617e-05, 5.7651999999998316e-05, 5.7820000000000094e-05, 5.756900000000037e-05, 5.7972000000003354e-05, 5.8013999999995125e-05, 5.7292000000000454e-05, 5.7736000000002674e-05, 5.7236000000002174e-05, 5.7028000000000634e-05, 5.744499999999625e-05]</msg>
<status status="PASS" starttime="20201112 09:43:41.363" endtime="20201112 09:43:41.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.351" endtime="20201112 09:43:41.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.376" endtime="20201112 09:43:41.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:41.385" endtime="20201112 09:43:41.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.380" endtime="20201112 09:43:41.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.371" endtime="20201112 09:43:41.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.854" endtime="20201112 09:43:41.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.853" endtime="20201112 09:43:41.411"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.434" endtime="20201112 09:43:41.455"></status>
</kw>
<msg timestamp="20201112 09:43:41.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.431" endtime="20201112 09:43:41.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.458" endtime="20201112 09:43:41.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.465" endtime="20201112 09:43:41.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.423" endtime="20201112 09:43:41.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.417" endtime="20201112 09:43:41.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.489" endtime="20201112 09:43:41.825"></status>
</kw>
<msg timestamp="20201112 09:43:41.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042603903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042661972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:41.485" endtime="20201112 09:43:41.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042603903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042661972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:41.835" endtime="20201112 09:43:41.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.854" endtime="20201112 09:43:41.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.478" endtime="20201112 09:43:41.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.473" endtime="20201112 09:43:41.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:41.874" level="INFO">${RESULT} = [{'time': 0.042661972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.806900000000087e-05, 'source_diff': 5.806900000000087e-05}, {'time': 0.042728042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:41.865" endtime="20201112 09:43:41.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:41.905" level="INFO">${ACCURACY} = {'time': [0.042661972, 0.042728042, 0.042801028, 0.042874014, 0.042949, 0.043023042, 0.043092069, 0.043165042, 0.043229042, 0.043297069, 0.043370042, 0.043438056, 0.043511056, 0.043587097, 0.043653083...</msg>
<status status="PASS" starttime="20201112 09:43:41.876" endtime="20201112 09:43:41.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.916" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 09:43:41.914" endtime="20201112 09:43:41.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.922" level="INFO">VALUE: [5.806900000000087e-05, 5.847300000000333e-05, 5.813899999999872e-05, 5.8778000000002384e-05, 5.8042000000001204e-05, 5.872299999999664e-05, 5.901299999999665e-05, 5.861100000000008e-05, 5.81670000000048e-05, 5.8165999999998386e-05, 5.894499999999775e-05, 5.8820000000001094e-05, 5.8820000000001094e-05, 5.8929999999998706e-05, 5.8430000000005144e-05, 5.8028000000001634e-05, 5.8971999999997415e-05, 5.8791999999995015e-05, 5.815300000000523e-05, 5.8235999999996235e-05, 5.847300000000333e-05, 5.8528000000002134e-05, 5.891699999999861e-05, 5.8791999999995015e-05, 5.8721999999997165e-05, 5.8541999999994765e-05, 5.8848000000000233e-05, 5.8999999999996555e-05, 5.838899999999897e-05, 5.8750000000003244e-05, 5.8263999999995375e-05, 5.8651999999999316e-05, 5.8999999999996555e-05, 5.8929999999998706e-05, 5.8443999999997776e-05, 5.8500000000002994e-05, 5.830500000000155e-05, 5.865299999999879e-05, 5.816699999999786e-05, 5.8070000000000344e-05, 5.8485999999996485e-05, 5.9014000000003064e-05, 5.8542000000001704e-05, 5.8735999999996735e-05, 5.8429999999998206e-05, 5.8778000000002384e-05, 5.812499999999915e-05, 5.836099999999983e-05, 5.9013999999996125e-05, 5.8986000000003924e-05]</msg>
<status status="PASS" starttime="20201112 09:43:41.918" endtime="20201112 09:43:41.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.907" endtime="20201112 09:43:41.925"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.932" endtime="20201112 09:43:41.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:41.940" endtime="20201112 09:43:41.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.936" endtime="20201112 09:43:41.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.927" endtime="20201112 09:43:41.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.413" endtime="20201112 09:43:41.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.411" endtime="20201112 09:43:41.967"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.992" endtime="20201112 09:43:42.013"></status>
</kw>
<msg timestamp="20201112 09:43:42.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.988" endtime="20201112 09:43:42.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:42.017" endtime="20201112 09:43:42.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.023" endtime="20201112 09:43:42.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.980" endtime="20201112 09:43:42.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.974" endtime="20201112 09:43:42.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.047" endtime="20201112 09:43:42.384"></status>
</kw>
<msg timestamp="20201112 09:43:42.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045224681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045283875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:42.044" endtime="20201112 09:43:42.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045224681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045283875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:42.394" endtime="20201112 09:43:42.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.412" endtime="20201112 09:43:42.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.036" endtime="20201112 09:43:42.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.032" endtime="20201112 09:43:42.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:42.434" level="INFO">${RESULT} = [{'time': 0.045283875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9193999999998526e-05, 'source_diff': 5.9193999999998526e-05}, {'time': 0.045357875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:42.425" endtime="20201112 09:43:42.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:42.464" level="INFO">${ACCURACY} = {'time': [0.045283875, 0.045357875, 0.045435875, 0.045512917, 0.045578889, 0.045650903, 0.045728903, 0.045799917, 0.045866931, 0.045940931, 0.046017944, 0.046094944, 0.046161958, 0.046233958, 0.046300...</msg>
<status status="PASS" starttime="20201112 09:43:42.436" endtime="20201112 09:43:42.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.476" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 09:43:42.473" endtime="20201112 09:43:42.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.482" level="INFO">VALUE: [5.9193999999998526e-05, 5.9791999999996015e-05, 5.916699999999886e-05, 5.9235999999997235e-05, 5.9499999999997055e-05, 5.9278000000002884e-05, 5.986100000000133e-05, 5.9736000000004674e-05, 5.9084000000000914e-05, 5.962500000000065e-05, 5.9902000000000566e-05, 5.980499999999611e-05, 5.904100000000273e-05, 5.905499999999536e-05, 5.929100000000298e-05, 5.940299999999954e-05, 5.940299999999954e-05, 5.9278000000002884e-05, 6.008300000000244e-05, 5.915299999999929e-05, 5.9042000000002204e-05, 5.9582999999995e-05, 5.963900000000022e-05, 5.96949999999985e-05, 5.9402000000000066e-05, 5.9848000000001234e-05, 5.9306000000002024e-05, 5.958300000000194e-05, 5.9665999999999886e-05, 5.934700000000126e-05, 6.0028000000003634e-05, 5.906900000000187e-05, 5.9542000000002704e-05, 5.9541999999995765e-05, 5.9555999999995335e-05, 5.9235999999997235e-05, 5.9194999999998e-05, 5.993099999999918e-05, 5.9777999999996445e-05, 5.918099999999843e-05, 5.943100000000562e-05, 5.918099999999843e-05, 5.990300000000004e-05, 5.930499999999561e-05, 5.902699999999622e-05, 5.933300000000169e-05, 5.9471999999997915e-05, 5.990300000000004e-05, 5.9263999999996375e-05, 5.936099999999389e-05]</msg>
<status status="PASS" starttime="20201112 09:43:42.478" endtime="20201112 09:43:42.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.466" endtime="20201112 09:43:42.485"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.491" endtime="20201112 09:43:42.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:42.500" endtime="20201112 09:43:42.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.495" endtime="20201112 09:43:42.523"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.487" endtime="20201112 09:43:42.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.969" endtime="20201112 09:43:42.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.968" endtime="20201112 09:43:42.526"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.549" endtime="20201112 09:43:42.569"></status>
</kw>
<msg timestamp="20201112 09:43:42.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:42.546" endtime="20201112 09:43:42.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:42.573" endtime="20201112 09:43:42.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.579" endtime="20201112 09:43:42.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.538" endtime="20201112 09:43:42.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.533" endtime="20201112 09:43:42.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.603" endtime="20201112 09:43:42.941"></status>
</kw>
<msg timestamp="20201112 09:43:42.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042689083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042749847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:42.600" endtime="20201112 09:43:42.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042689083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042749847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:42.950" endtime="20201112 09:43:42.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.969" endtime="20201112 09:43:42.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.593" endtime="20201112 09:43:42.976"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.588" endtime="20201112 09:43:42.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:42.989" level="INFO">${RESULT} = [{'time': 0.042749847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0763999999997875e-05, 'source_diff': 6.0763999999997875e-05}, {'time': 0.042825861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:42.980" endtime="20201112 09:43:42.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:43.020" level="INFO">${ACCURACY} = {'time': [0.042749847, 0.042825861, 0.042896875, 0.042966931, 0.043034889, 0.043113889, 0.043184917, 0.043258917, 0.043335917, 0.043408917, 0.043484944, 0.043552931, 0.043624944, 0.043690958, 0.043758...</msg>
<status status="PASS" starttime="20201112 09:43:42.991" endtime="20201112 09:43:43.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.032" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 09:43:43.030" endtime="20201112 09:43:43.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.038" level="INFO">VALUE: [6.0763999999997875e-05, 6.0777999999997445e-05, 6.016699999999986e-05, 6.097299999999889e-05, 6.0249999999997805e-05, 6.065300000000079e-05, 6.0320000000002594e-05, 6.1013999999998125e-05, 6.0528000000004134e-05, 6.047299999999839e-05, 6.038799999999456e-05, 6.04870000000049e-05, 6.033299999999575e-05, 6.0166000000000386e-05, 6.0249999999997805e-05, 6.083299999999625e-05, 6.006900000000287e-05, 6.0957999999999846e-05, 6.0985999999998985e-05, 6.038900000000097e-05, 6.065300000000079e-05, 6.068099999999993e-05, 6.0764000000004814e-05, 6.0443999999999776e-05, 6.044499999999925e-05, 6.0042000000003204e-05, 6.0472000000005854e-05, 6.016699999999986e-05, 6.004099999999679e-05, 6.0152000000000816e-05, 6.034699999999532e-05, 6.084699999999582e-05, 6.011100000000158e-05, 6.094399999999334e-05, 6.0056000000002774e-05, 6.084700000000276e-05, 6.0471999999998916e-05, 6.0235999999998235e-05, 6.0833999999995725e-05, 6.065300000000079e-05, 6.043099999999968e-05, 6.030500000000355e-05, 6.059700000000251e-05, 6.048699999999796e-05, 6.006900000000287e-05, 6.083299999999625e-05, 6.0694000000000026e-05, 6.091700000000061e-05, 6.090300000000104e-05, 6.0263999999997375e-05]</msg>
<status status="PASS" starttime="20201112 09:43:43.035" endtime="20201112 09:43:43.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.022" endtime="20201112 09:43:43.041"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.048" endtime="20201112 09:43:43.051"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:43.057" endtime="20201112 09:43:43.078"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.052" endtime="20201112 09:43:43.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.043" endtime="20201112 09:43:43.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.528" endtime="20201112 09:43:43.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.527" endtime="20201112 09:43:43.083"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.106" endtime="20201112 09:43:43.127"></status>
</kw>
<msg timestamp="20201112 09:43:43.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.103" endtime="20201112 09:43:43.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.130" endtime="20201112 09:43:43.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.137" endtime="20201112 09:43:43.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.095" endtime="20201112 09:43:43.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.089" endtime="20201112 09:43:43.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.161" endtime="20201112 09:43:43.498"></status>
</kw>
<msg timestamp="20201112 09:43:43.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042619958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042681389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.157" endtime="20201112 09:43:43.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042619958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042681389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.507" endtime="20201112 09:43:43.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.524" endtime="20201112 09:43:43.526"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.150" endtime="20201112 09:43:43.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.145" endtime="20201112 09:43:43.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:43.533" level="INFO">${RESULT} = [{'time': 0.042681389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.143100000000068e-05, 'source_diff': 6.143100000000068e-05}, {'time': 0.042756431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:43.528" endtime="20201112 09:43:43.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:43.546" level="INFO">${ACCURACY} = {'time': [0.042681389, 0.042756431, 0.042833431, 0.042910417, 0.042978486, 0.043050417, 0.043124458, 0.043194472, 0.043268472, 0.043342458, 0.043421458, 0.043491472, 0.043569486, 0.043648514, 0.043716...</msg>
<status status="PASS" starttime="20201112 09:43:43.534" endtime="20201112 09:43:43.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.552" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 09:43:43.551" endtime="20201112 09:43:43.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.554" level="INFO">VALUE: [6.143100000000068e-05, 6.162499999999571e-05, 6.199999999999956e-05, 6.155599999999734e-05, 6.131900000000412e-05, 6.113900000000172e-05, 6.123599999999924e-05, 6.12499999999988e-05, 6.148599999999949e-05, 6.12499999999988e-05, 6.168000000000146e-05, 6.14300000000012e-05, 6.166699999999442e-05, 6.165300000000179e-05, 6.191700000000161e-05, 6.129199999999752e-05, 6.141700000000111e-05, 6.180600000000452e-05, 6.17499999999993e-05, 6.198599999999999e-05, 6.109800000000248e-05, 6.17499999999993e-05, 6.145800000000035e-05, 6.12499999999988e-05, 6.10829999999965e-05, 6.12080000000001e-05, 6.147199999999992e-05, 6.149999999999906e-05, 6.18750000000029e-05, 6.115300000000129e-05, 6.17080000000006e-05, 6.141700000000111e-05, 6.133300000000369e-05, 6.177799999999845e-05, 6.161099999999614e-05, 6.145899999999982e-05, 6.123599999999924e-05, 6.183400000000366e-05, 6.144400000000078e-05, 6.172200000000017e-05, 6.156899999999743e-05, 6.125000000000574e-05, 6.115300000000129e-05, 6.15420000000047e-05, 6.156899999999743e-05, 6.155599999999734e-05, 6.195800000000085e-05, 6.111100000000258e-05, 6.133399999999622e-05, 6.162499999999571e-05]</msg>
<status status="PASS" starttime="20201112 09:43:43.553" endtime="20201112 09:43:43.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.547" endtime="20201112 09:43:43.556"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.559" endtime="20201112 09:43:43.560"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:43.563" endtime="20201112 09:43:43.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.561" endtime="20201112 09:43:43.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.557" endtime="20201112 09:43:43.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.085" endtime="20201112 09:43:43.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.084" endtime="20201112 09:43:43.585"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.595" endtime="20201112 09:43:43.614"></status>
</kw>
<msg timestamp="20201112 09:43:43.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.594" endtime="20201112 09:43:43.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.615" endtime="20201112 09:43:43.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.618" endtime="20201112 09:43:43.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.590" endtime="20201112 09:43:43.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.588" endtime="20201112 09:43:43.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.629" endtime="20201112 09:43:43.951"></status>
</kw>
<msg timestamp="20201112 09:43:43.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024858986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024921028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.628" endtime="20201112 09:43:43.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024858986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024921028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.960" endtime="20201112 09:43:43.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.979" endtime="20201112 09:43:43.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.624" endtime="20201112 09:43:43.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.622" endtime="20201112 09:43:43.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:43.999" level="INFO">${RESULT} = [{'time': 0.024921028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.204200000000173e-05, 'source_diff': 6.204200000000173e-05}, {'time': 0.025002042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:43.990" endtime="20201112 09:43:44.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:44.030" level="INFO">${ACCURACY} = {'time': [0.024921028, 0.025002042, 0.025074056, 0.025146042, 0.025225056, 0.025303056, 0.025374069, 0.025456083, 0.025537097, 0.025606097, 0.025677111, 0.025757139, 0.025831125, 0.025903181, 0.025979...</msg>
<status status="PASS" starttime="20201112 09:43:44.001" endtime="20201112 09:43:44.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.042" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 09:43:44.039" endtime="20201112 09:43:44.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.048" level="INFO">VALUE: [6.204200000000173e-05, 6.216699999999839e-05, 6.236199999999983e-05, 6.30279999999997e-05, 6.27500000000003e-05, 6.277799999999945e-05, 6.22499999999998e-05, 6.304099999999979e-05, 6.225000000000327e-05, 6.211100000000011e-05, 6.22499999999998e-05, 6.229199999999852e-05, 6.212499999999968e-05, 6.266700000000236e-05, 6.245799999999788e-05, 6.27500000000003e-05, 6.244499999999778e-05, 6.297299999999742e-05, 6.291700000000261e-05, 6.20690000000014e-05, 6.222200000000067e-05, 6.302700000000022e-05, 6.248600000000049e-05, 6.269399999999856e-05, 6.276399999999988e-05, 6.297199999999795e-05, 6.2582999999998e-05, 6.219399999999806e-05, 6.259700000000104e-05, 6.294500000000175e-05, 6.223600000000024e-05, 6.291599999999967e-05, 6.230599999999809e-05, 6.207000000000087e-05, 6.212499999999968e-05, 6.26950000000015e-05, 6.216600000000239e-05, 6.215299999999882e-05, 6.29439999999988e-05, 6.255499999999886e-05, 6.281900000000215e-05, 6.280500000000258e-05, 6.287499999999696e-05, 6.216700000000186e-05, 6.266700000000236e-05, 6.287500000000043e-05, 6.250000000000006e-05, 6.2195000000001e-05, 6.265299999999932e-05, 6.204200000000173e-05]</msg>
<status status="PASS" starttime="20201112 09:43:44.044" endtime="20201112 09:43:44.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.032" endtime="20201112 09:43:44.051"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.058" endtime="20201112 09:43:44.061"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:44.067" endtime="20201112 09:43:44.089"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.063" endtime="20201112 09:43:44.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.053" endtime="20201112 09:43:44.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.586" endtime="20201112 09:43:44.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.585" endtime="20201112 09:43:44.094"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.117" endtime="20201112 09:43:44.137"></status>
</kw>
<msg timestamp="20201112 09:43:44.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.114" endtime="20201112 09:43:44.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.141" endtime="20201112 09:43:44.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.147" endtime="20201112 09:43:44.151"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.106" endtime="20201112 09:43:44.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.100" endtime="20201112 09:43:44.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.171" endtime="20201112 09:43:44.510"></status>
</kw>
<msg timestamp="20201112 09:43:44.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042618472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042682278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.168" endtime="20201112 09:43:44.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042618472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042682278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.519" endtime="20201112 09:43:44.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.538" endtime="20201112 09:43:44.546"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.160" endtime="20201112 09:43:44.547"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.156" endtime="20201112 09:43:44.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:44.559" level="INFO">${RESULT} = [{'time': 0.042682278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.380599999999959e-05, 'source_diff': 6.380599999999959e-05}, {'time': 0.042761292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:44.550" endtime="20201112 09:43:44.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:44.590" level="INFO">${ACCURACY} = {'time': [0.042682278, 0.042761292, 0.042831292, 0.042908306, 0.042983306, 0.043060319, 0.043138361, 0.043208333, 0.043279361, 0.043360361, 0.043434361, 0.043506361, 0.043585389, 0.043668417, 0.043744...</msg>
<status status="PASS" starttime="20201112 09:43:44.562" endtime="20201112 09:43:44.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.601" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 09:43:44.599" endtime="20201112 09:43:44.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.607" level="INFO">VALUE: [6.380599999999959e-05, 6.309799999999754e-05, 6.311099999999764e-05, 6.366700000000336e-05, 6.304199999999927e-05, 6.316599999999645e-05, 6.316700000000286e-05, 6.38750000000049e-05, 6.384700000000576e-05, 6.329199999999952e-05, 6.316699999999592e-05, 6.398600000000199e-05, 6.311100000000458e-05, 6.400000000000156e-05, 6.330499999999961e-05, 6.383399999999873e-05, 6.393100000000318e-05, 6.316699999999592e-05, 6.377700000000097e-05, 6.390300000000404e-05, 6.392999999999677e-05, 6.34159999999967e-05, 6.340300000000354e-05, 6.368000000000346e-05, 6.32359999999943e-05, 6.3195000000002e-05, 6.37500000000013e-05, 6.368099999999599e-05, 6.351400000000063e-05, 6.341700000000311e-05, 6.309699999999807e-05, 6.386099999999839e-05, 6.380500000000011e-05, 6.326400000000038e-05, 6.348700000000096e-05, 6.369400000000303e-05, 6.316599999999645e-05, 6.344400000000278e-05, 6.390300000000404e-05, 6.326400000000038e-05, 6.356899999999943e-05, 6.359699999999857e-05, 6.384699999999882e-05, 6.323600000000124e-05, 6.350000000000106e-05, 6.345900000000182e-05, 6.348700000000096e-05, 6.397200000000242e-05, 6.318099999999549e-05, 6.32500000000008e-05]</msg>
<status status="PASS" starttime="20201112 09:43:44.604" endtime="20201112 09:43:44.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.592" endtime="20201112 09:43:44.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.617" endtime="20201112 09:43:44.619"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:44.625" endtime="20201112 09:43:44.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.621" endtime="20201112 09:43:44.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.612" endtime="20201112 09:43:44.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.096" endtime="20201112 09:43:44.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.095" endtime="20201112 09:43:44.651"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.674" endtime="20201112 09:43:44.695"></status>
</kw>
<msg timestamp="20201112 09:43:44.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.671" endtime="20201112 09:43:44.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.699" endtime="20201112 09:43:44.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.705" endtime="20201112 09:43:44.709"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.663" endtime="20201112 09:43:44.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.657" endtime="20201112 09:43:44.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.729" endtime="20201112 09:43:45.064"></status>
</kw>
<msg timestamp="20201112 09:43:45.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042404417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042468778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.726" endtime="20201112 09:43:45.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042404417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042468778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.074" endtime="20201112 09:43:45.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.094" endtime="20201112 09:43:45.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.718" endtime="20201112 09:43:45.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.713" endtime="20201112 09:43:45.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:45.114" level="INFO">${RESULT} = [{'time': 0.042468778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.436099999999889e-05, 'source_diff': 6.436099999999889e-05}, {'time': 0.042543778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:45.105" endtime="20201112 09:43:45.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:45.145" level="INFO">${ACCURACY} = {'time': [0.042468778, 0.042543778, 0.042624861, 0.042703792, 0.042785806, 0.042862847, 0.042932847, 0.043003847, 0.043080833, 0.043152889, 0.043234861, 0.043305861, 0.043381889, 0.043464931, 0.043541...</msg>
<status status="PASS" starttime="20201112 09:43:45.116" endtime="20201112 09:43:45.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.156" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 09:43:45.154" endtime="20201112 09:43:45.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.162" level="INFO">VALUE: [6.436099999999889e-05, 6.498599999999605e-05, 6.455500000000086e-05, 6.47779999999945e-05, 6.490300000000504e-05, 6.423600000000224e-05, 6.413900000000472e-05, 6.430500000000061e-05, 6.44159999999977e-05, 6.487499999999896e-05, 6.429200000000052e-05, 6.472200000000317e-05, 6.454200000000077e-05, 6.427800000000095e-05, 6.491699999999767e-05, 6.466700000000436e-05, 6.426400000000138e-05, 6.433399999999923e-05, 6.501400000000213e-05, 6.47500000000023e-05, 6.49159999999982e-05, 6.40829999999995e-05, 6.447199999999598e-05, 6.409700000000601e-05, 6.450000000000206e-05, 6.466699999999742e-05, 6.479200000000102e-05, 6.45280000000012e-05, 6.429200000000052e-05, 6.468100000000393e-05, 6.451400000000163e-05, 6.440300000000454e-05, 6.411099999999864e-05, 6.427800000000095e-05, 6.466600000000489e-05, 6.476400000000188e-05, 6.469399999999709e-05, 6.474999999999537e-05, 6.477700000000197e-05, 6.454200000000077e-05, 6.401399999999419e-05, 6.455600000000034e-05, 6.418099999999649e-05, 6.416599999999745e-05, 6.448600000000249e-05, 6.402799999999376e-05, 6.411099999999864e-05, 6.408399999999898e-05, 6.479100000000154e-05, 6.433399999999923e-05]</msg>
<status status="PASS" starttime="20201112 09:43:45.159" endtime="20201112 09:43:45.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.147" endtime="20201112 09:43:45.165"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.172" endtime="20201112 09:43:45.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:45.180" endtime="20201112 09:43:45.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.176" endtime="20201112 09:43:45.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.167" endtime="20201112 09:43:45.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.653" endtime="20201112 09:43:45.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.652" endtime="20201112 09:43:45.206"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.229" endtime="20201112 09:43:45.251"></status>
</kw>
<msg timestamp="20201112 09:43:45.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.226" endtime="20201112 09:43:45.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.254" endtime="20201112 09:43:45.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.261" endtime="20201112 09:43:45.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.219" endtime="20201112 09:43:45.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.213" endtime="20201112 09:43:45.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.285" endtime="20201112 09:43:45.623"></status>
</kw>
<msg timestamp="20201112 09:43:45.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042616667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042681847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.282" endtime="20201112 09:43:45.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042616667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042681847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.633" endtime="20201112 09:43:45.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.652" endtime="20201112 09:43:45.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.275" endtime="20201112 09:43:45.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.270" endtime="20201112 09:43:45.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:45.671" level="INFO">${RESULT} = [{'time': 0.042681847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.518000000000496e-05, 'source_diff': 6.518000000000496e-05}, {'time': 0.042755861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:45.662" endtime="20201112 09:43:45.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:45.702" level="INFO">${ACCURACY} = {'time': [0.042681847, 0.042755861, 0.042839875, 0.042914917, 0.042996903, 0.043070903, 0.043153903, 0.043235944, 0.043306944, 0.043379944, 0.043461972, 0.043532972, 0.043606958, 0.043683986, 0.043762...</msg>
<status status="PASS" starttime="20201112 09:43:45.673" endtime="20201112 09:43:45.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.713" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 09:43:45.711" endtime="20201112 09:43:45.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.719" level="INFO">VALUE: [6.518000000000496e-05, 6.542999999999827e-05, 6.580600000000159e-05, 6.599999999999662e-05, 6.511099999999964e-05, 6.587499999999996e-05, 6.568099999999799e-05, 6.574999999999637e-05, 6.513799999999931e-05, 6.566599999999895e-05, 6.586100000000039e-05, 6.506900000000093e-05, 6.537499999999946e-05, 6.588899999999953e-05, 6.581899999999474e-05, 6.52080000000041e-05, 6.574999999999637e-05, 6.579200000000202e-05, 6.57779999999955e-05, 6.591699999999867e-05, 6.569499999999756e-05, 6.54029999999986e-05, 6.53479999999998e-05, 6.515299999999835e-05, 6.569400000000503e-05, 6.50700000000004e-05, 6.599999999999662e-05, 6.555500000000186e-05, 6.566599999999895e-05, 6.595800000000485e-05, 6.605499999999542e-05, 6.581899999999474e-05, 6.568099999999799e-05, 6.580500000000211e-05, 6.594500000000475e-05, 6.543099999999774e-05, 6.506900000000093e-05, 6.52500000000028e-05, 6.554199999999483e-05, 6.52500000000028e-05, 6.593099999999824e-05, 6.59159999999992e-05, 6.566699999999842e-05, 6.54159999999987e-05, 6.598600000000399e-05, 6.529199999999458e-05, 6.532000000000066e-05, 6.588899999999953e-05, 6.604200000000227e-05, 6.586100000000039e-05]</msg>
<status status="PASS" starttime="20201112 09:43:45.716" endtime="20201112 09:43:45.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.704" endtime="20201112 09:43:45.722"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.729" endtime="20201112 09:43:45.731"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:45.737" endtime="20201112 09:43:45.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.733" endtime="20201112 09:43:45.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.724" endtime="20201112 09:43:45.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.208" endtime="20201112 09:43:45.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.207" endtime="20201112 09:43:45.763"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.787" endtime="20201112 09:43:45.808"></status>
</kw>
<msg timestamp="20201112 09:43:45.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.783" endtime="20201112 09:43:45.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.812" endtime="20201112 09:43:45.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.818" endtime="20201112 09:43:45.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.776" endtime="20201112 09:43:45.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.770" endtime="20201112 09:43:45.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.842" endtime="20201112 09:43:46.183"></status>
</kw>
<msg timestamp="20201112 09:43:46.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042895931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042962694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.839" endtime="20201112 09:43:46.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042895931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042962694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:46.193" endtime="20201112 09:43:46.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.212" endtime="20201112 09:43:46.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.831" endtime="20201112 09:43:46.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.826" endtime="20201112 09:43:46.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:46.231" level="INFO">${RESULT} = [{'time': 0.042962694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.67630000000044e-05, 'source_diff': 6.67630000000044e-05}, {'time': 0.043036708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:46.222" endtime="20201112 09:43:46.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:46.262" level="INFO">${ACCURACY} = {'time': [0.042962694, 0.043036708, 0.043114708, 0.043193736, 0.043277722, 0.043350764, 0.043428778, 0.043506764, 0.043592764, 0.043667792, 0.043750819, 0.043833792, 0.043911847, 0.043995819, 0.044081...</msg>
<status status="PASS" starttime="20201112 09:43:46.233" endtime="20201112 09:43:46.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.273" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 09:43:46.271" endtime="20201112 09:43:46.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.278" level="INFO">VALUE: [6.67630000000044e-05, 6.669399999999909e-05, 6.650000000000406e-05, 6.650000000000406e-05, 6.606899999999499e-05, 6.613899999999978e-05, 6.655600000000234e-05, 6.693100000000618e-05, 6.701399999999719e-05, 6.626399999999644e-05, 6.677700000000397e-05, 6.612500000000021e-05, 6.637499999999352e-05, 6.670799999999866e-05, 6.698599999999805e-05, 6.676299999999746e-05, 6.663900000000028e-05, 6.62359999999973e-05, 6.668100000000593e-05, 6.692999999999977e-05, 6.69030000000001e-05, 6.649999999999712e-05, 6.70280000000037e-05, 6.676400000000388e-05, 6.626400000000338e-05, 6.65700000000019e-05, 6.665299999999985e-05, 6.606900000000193e-05, 6.623700000000371e-05, 6.636100000000089e-05, 6.672200000000517e-05, 6.654099999999635e-05, 6.680499999999617e-05, 6.619399999999859e-05, 6.699999999999762e-05, 6.695799999999891e-05, 6.60830000000015e-05, 6.629199999999558e-05, 6.668099999999899e-05, 6.652700000000372e-05, 6.62359999999973e-05, 6.694499999999881e-05, 6.630600000000209e-05, 6.701299999999771e-05, 6.648599999999755e-05, 6.611100000000064e-05, 6.672199999999823e-05, 6.64159999999997e-05, 6.65280000000032e-05, 6.6583000000002e-05]</msg>
<status status="PASS" starttime="20201112 09:43:46.275" endtime="20201112 09:43:46.280"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.264" endtime="20201112 09:43:46.282"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.288" endtime="20201112 09:43:46.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:46.297" endtime="20201112 09:43:46.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.293" endtime="20201112 09:43:46.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.284" endtime="20201112 09:43:46.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.765" endtime="20201112 09:43:46.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.764" endtime="20201112 09:43:46.323"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.347" endtime="20201112 09:43:46.368"></status>
</kw>
<msg timestamp="20201112 09:43:46.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.344" endtime="20201112 09:43:46.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.371" endtime="20201112 09:43:46.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.377" endtime="20201112 09:43:46.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.336" endtime="20201112 09:43:46.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.330" endtime="20201112 09:43:46.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.401" endtime="20201112 09:43:46.750"></status>
</kw>
<msg timestamp="20201112 09:43:46.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04314575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043213361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:46.398" endtime="20201112 09:43:46.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04314575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043213361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:46.760" endtime="20201112 09:43:46.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.779" endtime="20201112 09:43:46.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.391" endtime="20201112 09:43:46.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.386" endtime="20201112 09:43:46.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:46.800" level="INFO">${RESULT} = [{'time': 0.043213361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.761100000000214e-05, 'source_diff': 6.761100000000214e-05}, {'time': 0.043288361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:46.791" endtime="20201112 09:43:46.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:46.831" level="INFO">${ACCURACY} = {'time': [0.043213361, 0.043288361, 0.043371361, 0.043455375, 0.043537375, 0.043620389, 0.043706403, 0.043785444, 0.043868417, 0.043944472, 0.044021444, 0.044094444, 0.044178444, 0.044263458, 0.044341...</msg>
<status status="PASS" starttime="20201112 09:43:46.802" endtime="20201112 09:43:46.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.842" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 09:43:46.840" endtime="20201112 09:43:46.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.848" level="INFO">VALUE: [6.761100000000214e-05, 6.729199999999658e-05, 6.756899999999649e-05, 6.712499999999427e-05, 6.738900000000103e-05, 6.750000000000506e-05, 6.766700000000042e-05, 6.790200000000163e-05, 6.75559999999964e-05, 6.743000000000027e-05, 6.718000000000002e-05, 6.709699999999513e-05, 6.71109999999947e-05, 6.727699999999753e-05, 6.737500000000146e-05, 6.777800000000445e-05, 6.776399999999794e-05, 6.726399999999744e-05, 6.745799999999941e-05, 6.750000000000506e-05, 6.788899999999459e-05, 6.726399999999744e-05, 6.776400000000488e-05, 6.736100000000189e-05, 6.802799999999776e-05, 6.772199999999923e-05, 6.72359999999983e-05, 6.801400000000513e-05, 6.709699999999513e-05, 6.748600000000549e-05, 6.791700000000067e-05, 6.70830000000025e-05, 6.733400000000223e-05, 6.786100000000239e-05, 6.794499999999981e-05, 6.743000000000027e-05, 6.729200000000352e-05, 6.732000000000266e-05, 6.795900000000632e-05, 6.793000000000077e-05, 6.724999999999787e-05, 6.80280000000047e-05, 6.756900000000343e-05, 6.744399999999984e-05, 6.751400000000463e-05, 6.702799999999676e-05, 6.724999999999787e-05, 6.724999999999787e-05, 6.77500000000053e-05, 6.779199999999708e-05]</msg>
<status status="PASS" starttime="20201112 09:43:46.845" endtime="20201112 09:43:46.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.833" endtime="20201112 09:43:46.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.858" endtime="20201112 09:43:46.860"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:46.866" endtime="20201112 09:43:46.888"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.862" endtime="20201112 09:43:46.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.853" endtime="20201112 09:43:46.891"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.326" endtime="20201112 09:43:46.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.324" endtime="20201112 09:43:46.892"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.915" endtime="20201112 09:43:46.937"></status>
</kw>
<msg timestamp="20201112 09:43:46.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.912" endtime="20201112 09:43:46.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.940" endtime="20201112 09:43:46.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.947" endtime="20201112 09:43:46.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.905" endtime="20201112 09:43:46.952"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.899" endtime="20201112 09:43:46.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.966" endtime="20201112 09:43:47.269"></status>
</kw>
<msg timestamp="20201112 09:43:47.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042592014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042660528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:46.965" endtime="20201112 09:43:47.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042592014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042660528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:47.278" endtime="20201112 09:43:47.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.297" endtime="20201112 09:43:47.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.960" endtime="20201112 09:43:47.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.955" endtime="20201112 09:43:47.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:47.317" level="INFO">${RESULT} = [{'time': 0.042660528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.851400000000563e-05, 'source_diff': 6.851400000000563e-05}, {'time': 0.042735556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:47.308" endtime="20201112 09:43:47.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:47.348" level="INFO">${ACCURACY} = {'time': [0.042660528, 0.042735556, 0.042812528, 0.042899542, 0.042974556, 0.043055556, 0.043138569, 0.043222569, 0.043301597, 0.043385611, 0.043469611, 0.043556667, 0.043634639, 0.043709625, 0.043794...</msg>
<status status="PASS" starttime="20201112 09:43:47.319" endtime="20201112 09:43:47.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.359" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 09:43:47.356" endtime="20201112 09:43:47.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.364" level="INFO">VALUE: [6.851400000000563e-05, 6.836200000000237e-05, 6.822199999999973e-05, 6.82359999999993e-05, 6.812499999999527e-05, 6.868100000000099e-05, 6.859700000000357e-05, 6.834700000000332e-05, 6.838899999999509e-05, 6.877799999999851e-05, 6.895800000000091e-05, 6.849999999999912e-05, 6.897200000000048e-05, 6.85280000000052e-05, 6.895800000000091e-05, 6.802799999999776e-05, 6.82359999999993e-05, 6.868100000000099e-05, 6.808400000000298e-05, 6.836100000000289e-05, 6.837500000000246e-05, 6.869400000000109e-05, 6.897200000000048e-05, 6.822199999999973e-05, 6.843000000000127e-05, 6.899999999999962e-05, 6.84030000000016e-05, 6.808299999999656e-05, 6.819500000000006e-05, 6.813899999999484e-05, 6.901400000000613e-05, 6.865300000000185e-05, 6.856999999999697e-05, 6.891699999999473e-05, 6.82909999999981e-05, 6.872199999999329e-05, 6.87500000000063e-05, 6.874999999999937e-05, 6.866700000000142e-05, 6.829199999999758e-05, 6.887499999999602e-05, 6.838900000000203e-05, 6.877799999999851e-05, 6.856999999999697e-05, 6.854200000000477e-05, 6.904199999999833e-05, 6.813800000000231e-05, 6.895900000000038e-05, 6.805500000000436e-05, 6.899999999999962e-05]</msg>
<status status="PASS" starttime="20201112 09:43:47.361" endtime="20201112 09:43:47.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.349" endtime="20201112 09:43:47.368"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.374" endtime="20201112 09:43:47.377"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:47.383" endtime="20201112 09:43:47.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.378" endtime="20201112 09:43:47.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.369" endtime="20201112 09:43:47.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.894" endtime="20201112 09:43:47.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.893" endtime="20201112 09:43:47.409"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.432" endtime="20201112 09:43:47.453"></status>
</kw>
<msg timestamp="20201112 09:43:47.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.429" endtime="20201112 09:43:47.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.457" endtime="20201112 09:43:47.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.463" endtime="20201112 09:43:47.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.421" endtime="20201112 09:43:47.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.415" endtime="20201112 09:43:47.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.487" endtime="20201112 09:43:47.827"></status>
</kw>
<msg timestamp="20201112 09:43:47.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0423675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042437375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:47.483" endtime="20201112 09:43:47.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0423675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042437375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:47.836" endtime="20201112 09:43:47.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.856" endtime="20201112 09:43:47.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.476" endtime="20201112 09:43:47.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.471" endtime="20201112 09:43:47.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:47.875" level="INFO">${RESULT} = [{'time': 0.042437375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.987499999999702e-05, 'source_diff': 6.987499999999702e-05}, {'time': 0.042515389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:47.866" endtime="20201112 09:43:47.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:47.906" level="INFO">${ACCURACY} = {'time': [0.042437375, 0.042515389, 0.042599375, 0.042685417, 0.042766403, 0.042844403, 0.042920431, 0.042998444, 0.043082431, 0.043164444, 0.043242472, 0.043330458, 0.043410472, 0.043496472, 0.043576...</msg>
<status status="PASS" starttime="20201112 09:43:47.877" endtime="20201112 09:43:47.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.917" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 09:43:47.915" endtime="20201112 09:43:47.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.923" level="INFO">VALUE: [6.987499999999702e-05, 6.987500000000396e-05, 6.918100000000149e-05, 6.905600000000484e-05, 6.933400000000423e-05, 6.922200000000073e-05, 6.954199999999883e-05, 6.923599999999336e-05, 6.983399999999779e-05, 6.950000000000012e-05, 6.959699999999763e-05, 6.916600000000245e-05, 6.950000000000012e-05, 6.909700000000407e-05, 6.983400000000473e-05, 6.995800000000191e-05, 6.916700000000192e-05, 7.001400000000019e-05, 6.938900000000303e-05, 6.999999999999368e-05, 6.947300000000045e-05, 6.965300000000285e-05, 6.986099999999745e-05, 6.918100000000149e-05, 6.99160000000032e-05, 6.962500000000371e-05, 6.965199999999644e-05, 6.943100000000174e-05, 6.930599999999815e-05, 6.950000000000012e-05, 6.95559999999984e-05, 7.001300000000071e-05, 6.950000000000012e-05, 6.993100000000224e-05, 6.951399999999969e-05, 7.000000000000062e-05, 6.97360000000008e-05, 6.965300000000285e-05, 6.916700000000192e-05, 6.998600000000105e-05, 6.965300000000285e-05, 6.965299999999591e-05, 6.904199999999833e-05, 6.90559999999979e-05, 6.924999999999987e-05, 6.97360000000008e-05, 6.909699999999713e-05, 6.962499999999677e-05, 6.97230000000007e-05, 6.924999999999987e-05]</msg>
<status status="PASS" starttime="20201112 09:43:47.920" endtime="20201112 09:43:47.924"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.908" endtime="20201112 09:43:47.926"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.933" endtime="20201112 09:43:47.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:47.942" endtime="20201112 09:43:47.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.938" endtime="20201112 09:43:47.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.928" endtime="20201112 09:43:47.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.411" endtime="20201112 09:43:47.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.410" endtime="20201112 09:43:47.969"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.992" endtime="20201112 09:43:48.014"></status>
</kw>
<msg timestamp="20201112 09:43:48.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.989" endtime="20201112 09:43:48.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.017" endtime="20201112 09:43:48.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.024" endtime="20201112 09:43:48.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.981" endtime="20201112 09:43:48.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.975" endtime="20201112 09:43:48.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.048" endtime="20201112 09:43:48.393"></status>
</kw>
<msg timestamp="20201112 09:43:48.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043025236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043095903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.044" endtime="20201112 09:43:48.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043025236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043095903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.403" endtime="20201112 09:43:48.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.422" endtime="20201112 09:43:48.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.037" endtime="20201112 09:43:48.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.032" endtime="20201112 09:43:48.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:48.441" level="INFO">${RESULT} = [{'time': 0.043095903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.066699999999648e-05, 'source_diff': 7.066699999999648e-05}, {'time': 0.043178903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:48.432" endtime="20201112 09:43:48.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:48.473" level="INFO">${ACCURACY} = {'time': [0.043095903, 0.043178903, 0.043256903, 0.043338931, 0.043424917, 0.043505931, 0.043589986, 0.043678014, 0.043757986, 0.043835986, 0.043916028, 0.043994, 0.044074986, 0.044156, 0.044239028, 0...</msg>
<status status="PASS" starttime="20201112 09:43:48.444" endtime="20201112 09:43:48.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.484" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 09:43:48.481" endtime="20201112 09:43:48.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.489" level="INFO">VALUE: [7.066699999999648e-05, 7.00559999999989e-05, 7.075000000000137e-05, 7.095899999999544e-05, 7.054199999999983e-05, 7.088899999999759e-05, 7.042999999999633e-05, 7.01109999999977e-05, 7.016699999999598e-05, 7.068000000000352e-05, 7.101400000000119e-05, 7.006899999999899e-05, 7.091699999999673e-05, 7.000000000000062e-05, 7.072200000000223e-05, 7.084699999999888e-05, 7.104200000000033e-05, 7.079200000000008e-05, 7.033399999999829e-05, 7.026400000000044e-05, 7.034699999999838e-05, 7.008299999999856e-05, 7.051400000000069e-05, 7.075000000000137e-05, 7.054199999999983e-05, 7.083299999999931e-05, 7.104200000000033e-05, 7.031999999999872e-05, 7.083300000000625e-05, 7.031999999999872e-05, 7.055499999999992e-05, 7.081899999999974e-05, 7.070899999999519e-05, 7.101400000000119e-05, 7.048600000000155e-05, 7.099999999999468e-05, 7.102800000000076e-05, 7.020800000000216e-05, 7.025000000000087e-05, 7.052800000000026e-05, 7.041700000000317e-05, 7.016699999999598e-05, 7.069500000000256e-05, 7.004199999999933e-05, 7.101399999999425e-05, 7.102800000000076e-05, 7.044499999999537e-05, 7.005600000000584e-05, 7.051400000000069e-05, 7.091599999999726e-05]</msg>
<status status="PASS" starttime="20201112 09:43:48.486" endtime="20201112 09:43:48.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.474" endtime="20201112 09:43:48.493"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.499" endtime="20201112 09:43:48.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:48.508" endtime="20201112 09:43:48.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.503" endtime="20201112 09:43:48.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.494" endtime="20201112 09:43:48.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.971" endtime="20201112 09:43:48.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.970" endtime="20201112 09:43:48.534"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.558" endtime="20201112 09:43:48.579"></status>
</kw>
<msg timestamp="20201112 09:43:48.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.554" endtime="20201112 09:43:48.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.582" endtime="20201112 09:43:48.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.589" endtime="20201112 09:43:48.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.547" endtime="20201112 09:43:48.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.540" endtime="20201112 09:43:48.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.613" endtime="20201112 09:43:48.950"></status>
</kw>
<msg timestamp="20201112 09:43:48.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043385167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043457181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.609" endtime="20201112 09:43:48.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043385167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043457181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.959" endtime="20201112 09:43:48.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.978" endtime="20201112 09:43:48.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.602" endtime="20201112 09:43:48.988"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.597" endtime="20201112 09:43:48.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:49.000" level="INFO">${RESULT} = [{'time': 0.043457181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.201399999999525e-05, 'source_diff': 7.201399999999525e-05}, {'time': 0.043537153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:48.991" endtime="20201112 09:43:49.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:49.031" level="INFO">${ACCURACY} = {'time': [0.043457181, 0.043537153, 0.043627167, 0.043709181, 0.043789153, 0.043875208, 0.043965194, 0.044047208, 0.044130208, 0.044213194, 0.044297208, 0.044377236, 0.04446325, 0.04454725, 0.04462926...</msg>
<status status="PASS" starttime="20201112 09:43:49.002" endtime="20201112 09:43:49.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.042" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 09:43:49.040" endtime="20201112 09:43:49.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.048" level="INFO">VALUE: [7.201399999999525e-05, 7.165300000000485e-05, 7.166700000000442e-05, 7.116699999999698e-05, 7.141699999999723e-05, 7.116599999999751e-05, 7.122199999999579e-05, 7.17769999999951e-05, 7.1763999999995e-05, 7.19439999999974e-05, 7.166599999999801e-05, 7.119400000000359e-05, 7.195800000000391e-05, 7.124999999999493e-05, 7.138900000000503e-05, 7.186099999999945e-05, 7.159699999999963e-05, 7.133399999999929e-05, 7.168100000000399e-05, 7.158399999999954e-05, 7.134699999999938e-05, 7.116599999999751e-05, 7.119399999999665e-05, 7.175000000000237e-05, 7.150000000000212e-05, 7.126400000000144e-05, 7.116700000000392e-05, 7.199999999999568e-05, 7.150000000000212e-05, 7.118099999999655e-05, 7.165300000000485e-05, 7.131900000000024e-05, 7.138899999999809e-05, 7.141699999999723e-05, 7.200000000000262e-05, 7.163900000000528e-05, 7.183300000000031e-05, 7.1763999999995e-05, 7.152800000000126e-05, 7.163899999999834e-05, 7.116700000000392e-05, 7.116699999999698e-05, 7.11109999999987e-05, 7.198600000000305e-05, 7.152800000000126e-05, 7.126400000000144e-05, 7.131999999999972e-05, 7.138899999999809e-05, 7.158399999999954e-05, 7.158300000000006e-05]</msg>
<status status="PASS" starttime="20201112 09:43:49.044" endtime="20201112 09:43:49.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.033" endtime="20201112 09:43:49.052"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.058" endtime="20201112 09:43:49.061"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:49.067" endtime="20201112 09:43:49.088"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.062" endtime="20201112 09:43:49.090"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.054" endtime="20201112 09:43:49.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.536" endtime="20201112 09:43:49.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.535" endtime="20201112 09:43:49.093"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.116" endtime="20201112 09:43:49.138"></status>
</kw>
<msg timestamp="20201112 09:43:49.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.113" endtime="20201112 09:43:49.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.141" endtime="20201112 09:43:49.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.148" endtime="20201112 09:43:49.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.106" endtime="20201112 09:43:49.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.100" endtime="20201112 09:43:49.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.172" endtime="20201112 09:43:49.510"></status>
</kw>
<msg timestamp="20201112 09:43:49.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042690111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042763125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:49.168" endtime="20201112 09:43:49.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042690111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042763125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:49.519" endtime="20201112 09:43:49.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.538" endtime="20201112 09:43:49.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.161" endtime="20201112 09:43:49.545"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.156" endtime="20201112 09:43:49.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:49.558" level="INFO">${RESULT} = [{'time': 0.042763125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.301399999999625e-05, 'source_diff': 7.301399999999625e-05}, {'time': 0.042854097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:49.549" endtime="20201112 09:43:49.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:49.589" level="INFO">${ACCURACY} = {'time': [0.042763125, 0.042854097, 0.042938139, 0.043025139, 0.043113153, 0.043199139, 0.043288153, 0.043369153, 0.043456194, 0.043544181, 0.043623208, 0.043705194, 0.043787236, 0.043873208, 0.043962...</msg>
<status status="PASS" starttime="20201112 09:43:49.560" endtime="20201112 09:43:49.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.600" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 09:43:49.598" endtime="20201112 09:43:49.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.606" level="INFO">VALUE: [7.301399999999625e-05, 7.280500000000217e-05, 7.213899999999884e-05, 7.284699999999394e-05, 7.259700000000063e-05, 7.222199999999679e-05, 7.275000000000337e-05, 7.282000000000122e-05, 7.305499999999548e-05, 7.213899999999884e-05, 7.290199999999969e-05, 7.27910000000026e-05, 7.258300000000106e-05, 7.258299999999412e-05, 7.21109999999997e-05, 7.286100000000045e-05, 7.218100000000449e-05, 7.266699999999848e-05, 7.227800000000201e-05, 7.240299999999866e-05, 7.280600000000165e-05, 7.301399999999625e-05, 7.213899999999884e-05, 7.222299999999626e-05, 7.291599999999926e-05, 7.304200000000233e-05, 7.250000000000312e-05, 7.283299999999437e-05, 7.215299999999841e-05, 7.21109999999997e-05, 7.279200000000208e-05, 7.269399999999815e-05, 7.21109999999997e-05, 7.272299999999676e-05, 7.207000000000047e-05, 7.279199999999514e-05, 7.269399999999815e-05, 7.272199999999729e-05, 7.229099999999516e-05, 7.292999999999883e-05, 7.250000000000312e-05, 7.249999999999618e-05, 7.226400000000244e-05, 7.22360000000033e-05, 7.236099999999995e-05, 7.254199999999489e-05, 7.244499999999737e-05, 7.268099999999805e-05, 7.216699999999798e-05, 7.230600000000115e-05]</msg>
<status status="PASS" starttime="20201112 09:43:49.603" endtime="20201112 09:43:49.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.591" endtime="20201112 09:43:49.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.616" endtime="20201112 09:43:49.618"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:49.624" endtime="20201112 09:43:49.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.620" endtime="20201112 09:43:49.647"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.611" endtime="20201112 09:43:49.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.095" endtime="20201112 09:43:49.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.094" endtime="20201112 09:43:49.650"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.673" endtime="20201112 09:43:49.695"></status>
</kw>
<msg timestamp="20201112 09:43:49.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.670" endtime="20201112 09:43:49.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.698" endtime="20201112 09:43:49.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.705" endtime="20201112 09:43:49.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.663" endtime="20201112 09:43:49.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.657" endtime="20201112 09:43:49.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.728" endtime="20201112 09:43:50.066"></status>
</kw>
<msg timestamp="20201112 09:43:50.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042841486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042914556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:49.725" endtime="20201112 09:43:50.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042841486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042914556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.075" endtime="20201112 09:43:50.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.094" endtime="20201112 09:43:50.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.718" endtime="20201112 09:43:50.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.713" endtime="20201112 09:43:50.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:50.114" level="INFO">${RESULT} = [{'time': 0.042914556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.307000000000147e-05, 'source_diff': 7.307000000000147e-05}, {'time': 0.043005556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:50.105" endtime="20201112 09:43:50.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:50.145" level="INFO">${ACCURACY} = {'time': [0.042914556, 0.043005556, 0.043085583, 0.043167583, 0.043249583, 0.043336611, 0.043421653, 0.043504625, 0.043584653, 0.043669667, 0.043750639, 0.043832653, 0.043917667, 0.044007736, 0.044097...</msg>
<status status="PASS" starttime="20201112 09:43:50.116" endtime="20201112 09:43:50.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.156" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 09:43:50.154" endtime="20201112 09:43:50.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.162" level="INFO">VALUE: [7.307000000000147e-05, 7.369499999999862e-05, 7.330499999999573e-05, 7.317999999999908e-05, 7.398599999999811e-05, 7.387499999999408e-05, 7.337500000000052e-05, 7.340299999999966e-05, 7.391699999999973e-05, 7.375000000000437e-05, 7.366699999999948e-05, 7.401399999999725e-05, 7.372299999999776e-05, 7.401399999999725e-05, 7.331900000000224e-05, 7.365299999999991e-05, 7.327800000000301e-05, 7.365200000000044e-05, 7.376400000000394e-05, 7.352799999999632e-05, 7.345800000000541e-05, 7.34309999999988e-05, 7.37360000000048e-05, 7.370799999999872e-05, 7.313899999999984e-05, 7.322299999999726e-05, 7.330600000000215e-05, 7.324999999999693e-05, 7.354200000000283e-05, 7.367999999999958e-05, 7.391700000000667e-05, 7.329200000000258e-05, 7.333300000000181e-05, 7.376400000000394e-05, 7.366699999999948e-05, 7.390300000000016e-05, 7.368100000000599e-05, 7.372299999999776e-05, 7.404200000000333e-05, 7.359800000000111e-05, 7.387500000000102e-05, 7.394499999999887e-05, 7.392999999999983e-05, 7.315299999999941e-05, 7.36110000000012e-05, 7.358300000000206e-05, 7.376400000000394e-05, 7.33189999999953e-05, 7.380600000000265e-05, 7.348599999999761e-05]</msg>
<status status="PASS" starttime="20201112 09:43:50.158" endtime="20201112 09:43:50.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.146" endtime="20201112 09:43:50.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.175" endtime="20201112 09:43:50.178"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:50.184" endtime="20201112 09:43:50.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.179" endtime="20201112 09:43:50.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.171" endtime="20201112 09:43:50.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.652" endtime="20201112 09:43:50.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.651" endtime="20201112 09:43:50.210"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.234" endtime="20201112 09:43:50.255"></status>
</kw>
<msg timestamp="20201112 09:43:50.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.230" endtime="20201112 09:43:50.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.259" endtime="20201112 09:43:50.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.266" endtime="20201112 09:43:50.270"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.223" endtime="20201112 09:43:50.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.217" endtime="20201112 09:43:50.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.290" endtime="20201112 09:43:50.591"></status>
</kw>
<msg timestamp="20201112 09:43:50.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042936, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043011014, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:50.287" endtime="20201112 09:43:50.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042936, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043011014, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:50.595" endtime="20201112 09:43:50.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.604" endtime="20201112 09:43:50.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.280" endtime="20201112 09:43:50.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.275" endtime="20201112 09:43:50.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:50.613" level="INFO">${RESULT} = [{'time': 0.043011014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.501399999999825e-05, 'source_diff': 7.501399999999825e-05}, {'time': 0.043099986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:50.609" endtime="20201112 09:43:50.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:50.626" level="INFO">${ACCURACY} = {'time': [0.043011014, 0.043099986, 0.043187014, 0.043272042, 0.043360014, 0.043453028, 0.043538028, 0.043623028, 0.043716069, 0.043800056, 0.043884083, 0.043976083, 0.044068111, 0.044154097, 0.044236...</msg>
<status status="PASS" starttime="20201112 09:43:50.614" endtime="20201112 09:43:50.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.632" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 09:43:50.631" endtime="20201112 09:43:50.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.634" level="INFO">VALUE: [7.501399999999825e-05, 7.418000000000008e-05, 7.465300000000091e-05, 7.501399999999825e-05, 7.441700000000023e-05, 7.479199999999714e-05, 7.430599999999621e-05, 7.429200000000358e-05, 7.440200000000119e-05, 7.480599999999671e-05, 7.498599999999911e-05, 7.405499999999648e-05, 7.46110000000022e-05, 7.430500000000367e-05, 7.466700000000048e-05, 7.472199999999929e-05, 7.438900000000109e-05, 7.449999999999818e-05, 7.420799999999922e-05, 7.490300000000116e-05, 7.498599999999911e-05, 7.49310000000003e-05, 7.416699999999998e-05, 7.490199999999475e-05, 7.474999999999843e-05, 7.455499999999698e-05, 7.42769999999976e-05, 7.466700000000048e-05, 7.425000000000487e-05, 7.440300000000066e-05, 7.48189999999968e-05, 7.406999999999553e-05, 7.427799999999707e-05, 7.455599999999646e-05, 7.474999999999843e-05, 7.504200000000433e-05, 7.447199999999904e-05, 7.499999999999868e-05, 7.454099999999741e-05, 7.411099999999476e-05, 7.418000000000008e-05, 7.440300000000066e-05, 7.402800000000376e-05, 7.40560000000029e-05, 7.420899999999869e-05, 7.424999999999793e-05, 7.451400000000469e-05, 7.466700000000048e-05, 7.499999999999868e-05, 7.434800000000186e-05]</msg>
<status status="PASS" starttime="20201112 09:43:50.633" endtime="20201112 09:43:50.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.627" endtime="20201112 09:43:50.636"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.639" endtime="20201112 09:43:50.640"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:50.643" endtime="20201112 09:43:50.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.641" endtime="20201112 09:43:50.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.637" endtime="20201112 09:43:50.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.212" endtime="20201112 09:43:50.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.211" endtime="20201112 09:43:50.665"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.675" endtime="20201112 09:43:50.694"></status>
</kw>
<msg timestamp="20201112 09:43:50.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.674" endtime="20201112 09:43:50.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.695" endtime="20201112 09:43:50.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.698" endtime="20201112 09:43:50.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.670" endtime="20201112 09:43:50.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.668" endtime="20201112 09:43:50.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.710" endtime="20201112 09:43:50.995"></status>
</kw>
<msg timestamp="20201112 09:43:50.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024918681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024994111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.708" endtime="20201112 09:43:50.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024918681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024994111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.000" endtime="20201112 09:43:51.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.008" endtime="20201112 09:43:51.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.705" endtime="20201112 09:43:51.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.702" endtime="20201112 09:43:51.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:51.019" level="INFO">${RESULT} = [{'time': 0.024994111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.542999999999786e-05, 'source_diff': 7.542999999999786e-05}, {'time': 0.025082194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:51.014" endtime="20201112 09:43:51.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:51.032" level="INFO">${ACCURACY} = {'time': [0.024994111, 0.025082194, 0.025173125, 0.025257153, 0.025345208, 0.025427181, 0.025512167, 0.025600194, 0.025684222, 0.025775236, 0.02585825, 0.025942264, 0.026025222, 0.026119236, 0.0262082...</msg>
<status status="PASS" starttime="20201112 09:43:51.020" endtime="20201112 09:43:51.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.037" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 09:43:51.036" endtime="20201112 09:43:51.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.040" level="INFO">VALUE: [7.542999999999786e-05, 7.574999999999943e-05, 7.590300000000216e-05, 7.519500000000012e-05, 7.526400000000197e-05, 7.573699999999933e-05, 7.559799999999964e-05, 7.570800000000072e-05, 7.54440000000009e-05, 7.574999999999943e-05, 7.593099999999783e-05, 7.566699999999801e-05, 7.526400000000197e-05, 7.523599999999936e-05, 7.587499999999955e-05, 7.570800000000072e-05, 7.566700000000148e-05, 7.524999999999893e-05, 7.536099999999948e-05, 7.515300000000141e-05, 7.505500000000095e-05, 7.599999999999968e-05, 7.552699999999885e-05, 7.574999999999943e-05, 7.540300000000166e-05, 7.551399999999875e-05, 7.591699999999826e-05, 7.554200000000136e-05, 7.520800000000022e-05, 7.530600000000068e-05, 7.532000000000025e-05, 7.515300000000141e-05, 7.508399999999957e-05, 7.518100000000055e-05, 7.565199999999897e-05, 7.53050000000012e-05, 7.566600000000201e-05, 7.567999999999811e-05, 7.534699999999991e-05, 7.599999999999968e-05, 7.588899999999912e-05, 7.526400000000197e-05, 7.566700000000148e-05, 7.541700000000123e-05, 7.597200000000054e-05, 7.529200000000111e-05, 7.547299999999951e-05, 7.566599999999854e-05, 7.6070000000001e-05, 7.565300000000191e-05]</msg>
<status status="PASS" starttime="20201112 09:43:51.038" endtime="20201112 09:43:51.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.033" endtime="20201112 09:43:51.042"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.045" endtime="20201112 09:43:51.046"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:51.049" endtime="20201112 09:43:51.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.047" endtime="20201112 09:43:51.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.042" endtime="20201112 09:43:51.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.666" endtime="20201112 09:43:51.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.665" endtime="20201112 09:43:51.070"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.081" endtime="20201112 09:43:51.100"></status>
</kw>
<msg timestamp="20201112 09:43:51.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.079" endtime="20201112 09:43:51.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.102" endtime="20201112 09:43:51.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.105" endtime="20201112 09:43:51.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.076" endtime="20201112 09:43:51.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.073" endtime="20201112 09:43:51.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.116" endtime="20201112 09:43:51.419"></status>
</kw>
<msg timestamp="20201112 09:43:51.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024833292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024909903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.115" endtime="20201112 09:43:51.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024833292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024909903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.429" endtime="20201112 09:43:51.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.448" endtime="20201112 09:43:51.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.111" endtime="20201112 09:43:51.455"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.109" endtime="20201112 09:43:51.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:51.467" level="INFO">${RESULT} = [{'time': 0.024909903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.661100000000073e-05, 'source_diff': 7.661100000000073e-05}, {'time': 0.024996917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:51.458" endtime="20201112 09:43:51.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:51.498" level="INFO">${ACCURACY} = {'time': [0.024909903, 0.024996917, 0.025090917, 0.025182931, 0.025265931, 0.025348958, 0.025432958, 0.025525958, 0.025610972, 0.025703986, 0.025788028, 0.025880028, 0.025972028, 0.026065028, 0.026157...</msg>
<status status="PASS" starttime="20201112 09:43:51.469" endtime="20201112 09:43:51.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.509" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 09:43:51.507" endtime="20201112 09:43:51.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.515" level="INFO">VALUE: [7.661100000000073e-05, 7.679199999999914e-05, 7.69029999999997e-05, 7.609800000000014e-05, 7.609800000000014e-05, 7.669400000000215e-05, 7.650000000000018e-05, 7.673600000000086e-05, 7.644399999999843e-05, 7.693000000000283e-05, 7.687500000000055e-05, 7.680599999999871e-05, 7.680600000000218e-05, 7.611100000000023e-05, 7.65839999999976e-05, 7.702799999999982e-05, 7.700000000000068e-05, 7.66380000000004e-05, 7.67770000000001e-05, 7.641599999999929e-05, 7.698600000000111e-05, 7.666699999999901e-05, 7.659700000000116e-05, 7.613899999999937e-05, 7.63189999999983e-05, 7.645800000000147e-05, 7.651300000000028e-05, 7.608400000000057e-05, 7.702799999999982e-05, 7.629199999999864e-05, 7.641599999999929e-05, 7.650000000000018e-05, 7.694399999999893e-05, 7.673600000000086e-05, 7.641699999999876e-05, 7.684699999999794e-05, 7.677799999999957e-05, 7.654199999999889e-05, 7.636100000000048e-05, 7.61249999999998e-05, 7.677799999999957e-05, 7.611100000000023e-05, 7.666699999999901e-05, 7.633400000000082e-05, 7.670800000000172e-05, 7.650000000000018e-05, 7.666599999999954e-05, 7.697200000000154e-05, 7.630599999999821e-05, 7.663899999999987e-05]</msg>
<status status="PASS" starttime="20201112 09:43:51.512" endtime="20201112 09:43:51.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.500" endtime="20201112 09:43:51.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.525" endtime="20201112 09:43:51.527"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:51.533" endtime="20201112 09:43:51.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.529" endtime="20201112 09:43:51.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.520" endtime="20201112 09:43:51.558"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.071" endtime="20201112 09:43:51.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.071" endtime="20201112 09:43:51.559"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.583" endtime="20201112 09:43:51.605"></status>
</kw>
<msg timestamp="20201112 09:43:51.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.579" endtime="20201112 09:43:51.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.608" endtime="20201112 09:43:51.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.615" endtime="20201112 09:43:51.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.572" endtime="20201112 09:43:51.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.566" endtime="20201112 09:43:51.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.639" endtime="20201112 09:43:51.977"></status>
</kw>
<msg timestamp="20201112 09:43:51.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042909667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042987667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.635" endtime="20201112 09:43:51.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042909667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042987667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.987" endtime="20201112 09:43:52.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.006" endtime="20201112 09:43:52.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.628" endtime="20201112 09:43:52.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.623" endtime="20201112 09:43:52.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:52.026" level="INFO">${RESULT} = [{'time': 0.042987667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.800000000000168e-05, 'source_diff': 7.800000000000168e-05}, {'time': 0.043081681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:52.016" endtime="20201112 09:43:52.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:52.056" level="INFO">${ACCURACY} = {'time': [0.042987667, 0.043081681, 0.043172694, 0.043265708, 0.043356722, 0.043447722, 0.043538778, 0.043631736, 0.04371875, 0.043803764, 0.043891792, 0.043977792, 0.044068792, 0.044161806, 0.0442488...</msg>
<status status="PASS" starttime="20201112 09:43:52.028" endtime="20201112 09:43:52.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.068" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 09:43:52.065" endtime="20201112 09:43:52.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.073" level="INFO">VALUE: [7.800000000000168e-05, 7.752799999999338e-05, 7.76519999999975e-05, 7.70969999999982e-05, 7.784699999999894e-05, 7.723600000000136e-05, 7.727800000000007e-05, 7.756899999999955e-05, 7.78189999999998e-05, 7.770800000000272e-05, 7.798600000000211e-05, 7.74310000000028e-05, 7.758400000000554e-05, 7.799999999999474e-05, 7.800000000000168e-05, 7.741599999999682e-05, 7.786099999999851e-05, 7.765300000000391e-05, 7.749999999999424e-05, 7.734699999999844e-05, 7.748600000000161e-05, 7.788899999999765e-05, 7.725000000000093e-05, 7.759700000000563e-05, 7.791700000000373e-05, 7.70560000000059e-05, 7.794399999999646e-05, 7.76519999999975e-05, 7.743000000000333e-05, 7.722200000000179e-05, 7.741700000000323e-05, 7.741700000000323e-05, 7.758299999999912e-05, 7.706899999999905e-05, 7.727800000000007e-05, 7.71389999999969e-05, 7.765300000000391e-05, 7.719400000000265e-05, 7.787499999999808e-05, 7.779200000000014e-05, 7.790200000000469e-05, 7.791700000000373e-05, 7.734699999999844e-05, 7.719500000000212e-05, 7.736100000000495e-05, 7.754199999999989e-05, 7.804200000000039e-05, 7.747200000000204e-05, 7.727800000000007e-05, 7.725000000000093e-05]</msg>
<status status="PASS" starttime="20201112 09:43:52.070" endtime="20201112 09:43:52.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.058" endtime="20201112 09:43:52.076"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.083" endtime="20201112 09:43:52.086"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:52.092" endtime="20201112 09:43:52.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.087" endtime="20201112 09:43:52.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.078" endtime="20201112 09:43:52.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.562" endtime="20201112 09:43:52.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.560" endtime="20201112 09:43:52.118"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.141" endtime="20201112 09:43:52.163"></status>
</kw>
<msg timestamp="20201112 09:43:52.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.137" endtime="20201112 09:43:52.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.166" endtime="20201112 09:43:52.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.172" endtime="20201112 09:43:52.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.130" endtime="20201112 09:43:52.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.124" endtime="20201112 09:43:52.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.196" endtime="20201112 09:43:52.534"></status>
</kw>
<msg timestamp="20201112 09:43:52.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042439792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042518194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.193" endtime="20201112 09:43:52.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042439792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042518194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.544" endtime="20201112 09:43:52.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.563" endtime="20201112 09:43:52.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.185" endtime="20201112 09:43:52.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.181" endtime="20201112 09:43:52.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:52.582" level="INFO">${RESULT} = [{'time': 0.042518194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.840200000000519e-05, 'source_diff': 7.840200000000519e-05}, {'time': 0.042607222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:52.573" endtime="20201112 09:43:52.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:52.613" level="INFO">${ACCURACY} = {'time': [0.042518194, 0.042607222, 0.042695208, 0.042782194, 0.042875208, 0.04297125, 0.043061236, 0.04315225, 0.043248278, 0.043339292, 0.043426292, 0.043520319, 0.043612333, 0.043703361, 0.04379730...</msg>
<status status="PASS" starttime="20201112 09:43:52.584" endtime="20201112 09:43:52.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.624" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 09:43:52.622" endtime="20201112 09:43:52.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.630" level="INFO">VALUE: [7.840200000000519e-05, 7.900000000000268e-05, 7.819399999999671e-05, 7.858300000000012e-05, 7.883300000000037e-05, 7.81110000000057e-05, 7.875000000000243e-05, 7.829200000000064e-05, 7.873600000000286e-05, 7.890299999999822e-05, 7.865299999999797e-05, 7.900000000000268e-05, 7.862500000000577e-05, 7.891700000000473e-05, 7.875000000000243e-05, 7.872200000000329e-05, 7.837499999999858e-05, 7.806900000000006e-05, 7.898599999999617e-05, 7.8764000000002e-05, 7.815299999999747e-05, 7.879200000000114e-05, 7.838899999999815e-05, 7.815300000000441e-05, 7.848699999999514e-05, 7.873600000000286e-05, 7.861099999999926e-05, 7.819500000000312e-05, 7.887499999999908e-05, 7.83190000000003e-05, 7.823600000000236e-05, 7.850000000000218e-05, 7.876299999999559e-05, 7.849999999999524e-05, 7.816699999999704e-05, 7.827800000000107e-05, 7.849999999999524e-05, 7.806999999999953e-05, 7.872299999999582e-05, 7.862499999999883e-05, 7.904099999999498e-05, 7.823599999999542e-05, 7.83190000000003e-05, 7.816600000000451e-05, 7.833299999999987e-05, 7.875000000000243e-05, 7.89169999999978e-05, 7.847200000000304e-05, 7.873599999999592e-05, 7.884699999999994e-05]</msg>
<status status="PASS" starttime="20201112 09:43:52.627" endtime="20201112 09:43:52.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.615" endtime="20201112 09:43:52.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.640" endtime="20201112 09:43:52.643"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:52.648" endtime="20201112 09:43:52.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.644" endtime="20201112 09:43:52.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.635" endtime="20201112 09:43:52.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.120" endtime="20201112 09:43:52.674"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.119" endtime="20201112 09:43:52.674"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.697" endtime="20201112 09:43:52.719"></status>
</kw>
<msg timestamp="20201112 09:43:52.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.694" endtime="20201112 09:43:52.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.723" endtime="20201112 09:43:52.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.729" endtime="20201112 09:43:52.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.687" endtime="20201112 09:43:52.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.681" endtime="20201112 09:43:52.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.753" endtime="20201112 09:43:53.089"></status>
</kw>
<msg timestamp="20201112 09:43:53.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042433236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042512764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.749" endtime="20201112 09:43:53.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042433236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042512764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.099" endtime="20201112 09:43:53.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.118" endtime="20201112 09:43:53.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.742" endtime="20201112 09:43:53.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.737" endtime="20201112 09:43:53.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:53.139" level="INFO">${RESULT} = [{'time': 0.042512764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.952800000000232e-05, 'source_diff': 7.952800000000232e-05}, {'time': 0.042610778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:53.130" endtime="20201112 09:43:53.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:53.170" level="INFO">${ACCURACY} = {'time': [0.042512764, 0.042610778, 0.042697778, 0.042792833, 0.042880819, 0.042966875, 0.043064819, 0.043157861, 0.043254875, 0.043339917, 0.043436861, 0.043530875, 0.043621889, 0.043708889, 0.043794...</msg>
<status status="PASS" starttime="20201112 09:43:53.141" endtime="20201112 09:43:53.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.181" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 09:43:53.179" endtime="20201112 09:43:53.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.186" level="INFO">VALUE: [7.952800000000232e-05, 7.925000000000293e-05, 7.904200000000139e-05, 7.961100000000026e-05, 7.926300000000303e-05, 7.977800000000257e-05, 7.942999999999839e-05, 7.923599999999642e-05, 7.949999999999624e-05, 7.915299999999847e-05, 7.967999999999864e-05, 7.976399999999606e-05, 7.954199999999495e-05, 7.969499999999768e-05, 7.90970000000002e-05, 7.966699999999854e-05, 7.948599999999667e-05, 7.975000000000343e-05, 7.934700000000044e-05, 7.96519999999995e-05, 7.923600000000336e-05, 7.951400000000275e-05, 7.969499999999768e-05, 7.908300000000063e-05, 7.912499999999933e-05, 7.987500000000008e-05, 7.948599999999667e-05, 7.99169999999988e-05, 7.905600000000096e-05, 7.925000000000293e-05, 7.991600000000626e-05, 8.001399999999631e-05, 7.951400000000275e-05, 7.93190000000013e-05, 7.965299999999897e-05, 7.961100000000026e-05, 7.980500000000224e-05, 7.986100000000051e-05, 7.965300000000591e-05, 7.9764000000003e-05, 7.902800000000182e-05, 7.983300000000138e-05, 7.955500000000199e-05, 7.930500000000174e-05, 7.999999999999674e-05, 7.917999999999814e-05, 7.998600000000411e-05, 7.924999999999599e-05, 7.927800000000207e-05, 7.984700000000094e-05]</msg>
<status status="PASS" starttime="20201112 09:43:53.183" endtime="20201112 09:43:53.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.172" endtime="20201112 09:43:53.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.196" endtime="20201112 09:43:53.199"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:53.205" endtime="20201112 09:43:53.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.200" endtime="20201112 09:43:53.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.192" endtime="20201112 09:43:53.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.676" endtime="20201112 09:43:53.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.675" endtime="20201112 09:43:53.231"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.254" endtime="20201112 09:43:53.275"></status>
</kw>
<msg timestamp="20201112 09:43:53.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.250" endtime="20201112 09:43:53.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.279" endtime="20201112 09:43:53.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.285" endtime="20201112 09:43:53.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.243" endtime="20201112 09:43:53.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.237" endtime="20201112 09:43:53.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.309" endtime="20201112 09:43:53.649"></status>
</kw>
<msg timestamp="20201112 09:43:53.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042634042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042714097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.306" endtime="20201112 09:43:53.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042634042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042714097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.659" endtime="20201112 09:43:53.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.678" endtime="20201112 09:43:53.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.298" endtime="20201112 09:43:53.685"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.294" endtime="20201112 09:43:53.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:53.697" level="INFO">${RESULT} = [{'time': 0.042714097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.005500000000249e-05, 'source_diff': 8.005500000000249e-05}, {'time': 0.042804111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:53.688" endtime="20201112 09:43:53.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:53.728" level="INFO">${ACCURACY} = {'time': [0.042714097, 0.042804111, 0.042897111, 0.042987153, 0.043079153, 0.043166139, 0.043264153, 0.043351194, 0.043448222, 0.043542194, 0.043634194, 0.043729208, 0.043817222, 0.043908236, 0.044003...</msg>
<status status="PASS" starttime="20201112 09:43:53.700" endtime="20201112 09:43:53.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.739" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 09:43:53.737" endtime="20201112 09:43:53.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.745" level="INFO">VALUE: [8.005500000000249e-05, 8.055499999999605e-05, 8.040299999999972e-05, 8.077800000000357e-05, 8.0764000000004e-05, 8.00970000000012e-05, 8.088900000000065e-05, 8.050000000000418e-05, 8.075000000000443e-05, 8.042999999999939e-05, 8.002700000000335e-05, 8.076399999999706e-05, 8.008300000000163e-05, 8.077800000000357e-05, 8.040299999999972e-05, 8.037500000000058e-05, 8.098599999999817e-05, 8.03469999999945e-05, 8.091600000000032e-05, 8.012500000000033e-05, 8.044499999999843e-05, 8.004200000000239e-05, 8.03190000000023e-05, 8.020799999999828e-05, 8.0152e-05, 8.058299999999519e-05, 8.06249999999939e-05, 8.03049999999958e-05, 8.069499999999868e-05, 8.051400000000375e-05, 8.030600000000221e-05, 8.080600000000271e-05, 8.084800000000142e-05, 8.049999999999724e-05, 8.104099999999698e-05, 8.017999999999914e-05, 8.052800000000332e-05, 8.033300000000188e-05, 8.073599999999792e-05, 8.02919999999957e-05, 8.058300000000213e-05, 8.070800000000572e-05, 8.0764000000004e-05, 8.005600000000196e-05, 8.099999999999774e-05, 8.0152e-05, 8.042999999999939e-05, 7.999999999999674e-05, 8.074999999999749e-05, 8.10269999999974e-05]</msg>
<status status="PASS" starttime="20201112 09:43:53.742" endtime="20201112 09:43:53.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.730" endtime="20201112 09:43:53.748"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.755" endtime="20201112 09:43:53.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:53.764" endtime="20201112 09:43:53.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.759" endtime="20201112 09:43:53.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.750" endtime="20201112 09:43:53.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.233" endtime="20201112 09:43:53.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.232" endtime="20201112 09:43:53.789"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.813" endtime="20201112 09:43:53.834"></status>
</kw>
<msg timestamp="20201112 09:43:53.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.809" endtime="20201112 09:43:53.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.838" endtime="20201112 09:43:53.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.844" endtime="20201112 09:43:53.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.802" endtime="20201112 09:43:53.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.796" endtime="20201112 09:43:53.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.869" endtime="20201112 09:43:54.205"></status>
</kw>
<msg timestamp="20201112 09:43:54.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042563764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042645319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.865" endtime="20201112 09:43:54.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042563764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042645319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.215" endtime="20201112 09:43:54.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.234" endtime="20201112 09:43:54.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.858" endtime="20201112 09:43:54.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.853" endtime="20201112 09:43:54.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:54.253" level="INFO">${RESULT} = [{'time': 0.042645319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.155500000000399e-05, 'source_diff': 8.155500000000399e-05}, {'time': 0.042736333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:54.244" endtime="20201112 09:43:54.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:54.284" level="INFO">${ACCURACY} = {'time': [0.042645319, 0.042736333, 0.042831333, 0.042930389, 0.043029347, 0.043122361, 0.043212375, 0.043304403, 0.043403417, 0.043503431, 0.043594431, 0.043684444, 0.043779472, 0.043871514, 0.043968...</msg>
<status status="PASS" starttime="20201112 09:43:54.255" endtime="20201112 09:43:54.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.295" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 09:43:54.293" endtime="20201112 09:43:54.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.301" level="INFO">VALUE: [8.155500000000399e-05, 8.183300000000338e-05, 8.166600000000107e-05, 8.168100000000011e-05, 8.16390000000014e-05, 8.166700000000054e-05, 8.159699999999576e-05, 8.118099999999961e-05, 8.165300000000097e-05, 8.186200000000199e-05, 8.201400000000525e-05, 8.147200000000604e-05, 8.166600000000107e-05, 8.120799999999928e-05, 8.154100000000442e-05, 8.188899999999472e-05, 8.148599999999867e-05, 8.116700000000004e-05, 8.199999999999874e-05, 8.173599999999892e-05, 8.132000000000278e-05, 8.111100000000177e-05, 8.194400000000046e-05, 8.140300000000072e-05, 8.156900000000356e-05, 8.126299999999809e-05, 8.173599999999892e-05, 8.200000000000568e-05, 8.13190000000033e-05, 8.104199999999645e-05, 8.126399999999756e-05, 8.168100000000011e-05, 8.17919999999972e-05, 8.170799999999978e-05, 8.180600000000371e-05, 8.133300000000288e-05, 8.150000000000518e-05, 8.13049999999968e-05, 8.11390000000009e-05, 8.122199999999885e-05, 8.127799999999713e-05, 8.141699999999336e-05, 8.104200000000339e-05, 8.199999999999874e-05, 8.186100000000252e-05, 8.174999999999849e-05, 8.116700000000004e-05, 8.183400000000285e-05, 8.106999999999559e-05, 8.13469999999955e-05]</msg>
<status status="PASS" starttime="20201112 09:43:54.297" endtime="20201112 09:43:54.302"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.286" endtime="20201112 09:43:54.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.310" endtime="20201112 09:43:54.313"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:54.319" endtime="20201112 09:43:54.341"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.315" endtime="20201112 09:43:54.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.306" endtime="20201112 09:43:54.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.792" endtime="20201112 09:43:54.345"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.790" endtime="20201112 09:43:54.345"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.369" endtime="20201112 09:43:54.391"></status>
</kw>
<msg timestamp="20201112 09:43:54.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.365" endtime="20201112 09:43:54.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.395" endtime="20201112 09:43:54.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.401" endtime="20201112 09:43:54.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.357" endtime="20201112 09:43:54.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.352" endtime="20201112 09:43:54.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.426" endtime="20201112 09:43:54.729"></status>
</kw>
<msg timestamp="20201112 09:43:54.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043458653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043541458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.422" endtime="20201112 09:43:54.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043458653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043541458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.733" endtime="20201112 09:43:54.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.742" endtime="20201112 09:43:54.745"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.415" endtime="20201112 09:43:54.745"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.410" endtime="20201112 09:43:54.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:54.751" level="INFO">${RESULT} = [{'time': 0.043541458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.28049999999983e-05, 'source_diff': 8.28049999999983e-05}, {'time': 0.043636528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:54.747" endtime="20201112 09:43:54.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:54.764" level="INFO">${ACCURACY} = {'time': [0.043541458, 0.043636528, 0.043728486, 0.043820514, 0.0439105, 0.044008514, 0.044107542, 0.044203556, 0.044303556, 0.044404556, 0.044503639, 0.044599583, 0.044697583, 0.044790597, 0.04489166...</msg>
<status status="PASS" starttime="20201112 09:43:54.752" endtime="20201112 09:43:54.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.770" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 09:43:54.769" endtime="20201112 09:43:54.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.773" level="INFO">VALUE: [8.28049999999983e-05, 8.288900000000265e-05, 8.281899999999787e-05, 8.281999999999734e-05, 8.248599999999967e-05, 8.294500000000093e-05, 8.272299999999982e-05, 8.226399999999856e-05, 8.22919999999977e-05, 8.287499999999615e-05, 8.255599999999752e-05, 8.223599999999942e-05, 8.2152000000002e-05, 8.229099999999823e-05, 8.243100000000086e-05, 8.230600000000421e-05, 8.243100000000086e-05, 8.241599999999488e-05, 8.233399999999641e-05, 8.259799999999623e-05, 8.244500000000043e-05, 8.259699999999676e-05, 8.245800000000053e-05, 8.240300000000172e-05, 8.298600000000017e-05, 8.294400000000146e-05, 8.224999999999899e-05, 8.273600000000686e-05, 8.254199999999795e-05, 8.273599999999992e-05, 8.248599999999967e-05, 8.265300000000197e-05, 8.20840000000031e-05, 8.268000000000164e-05, 8.299999999999974e-05, 8.254099999999848e-05, 8.225000000000593e-05, 8.20970000000032e-05, 8.29170000000018e-05, 8.222199999999985e-05, 8.211100000000277e-05, 8.304199999999845e-05, 8.26390000000024e-05, 8.254200000000489e-05, 8.279200000000514e-05, 8.273599999999992e-05, 8.224999999999899e-05, 8.223599999999942e-05, 8.216600000000157e-05, 8.249999999999924e-05]</msg>
<status status="PASS" starttime="20201112 09:43:54.771" endtime="20201112 09:43:54.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.765" endtime="20201112 09:43:54.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.777" endtime="20201112 09:43:54.779"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:54.781" endtime="20201112 09:43:54.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.779" endtime="20201112 09:43:54.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.775" endtime="20201112 09:43:54.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.347" endtime="20201112 09:43:54.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.346" endtime="20201112 09:43:54.803"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.814" endtime="20201112 09:43:54.832"></status>
</kw>
<msg timestamp="20201112 09:43:54.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.812" endtime="20201112 09:43:54.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.833" endtime="20201112 09:43:54.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.836" endtime="20201112 09:43:54.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.809" endtime="20201112 09:43:54.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.806" endtime="20201112 09:43:54.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.848" endtime="20201112 09:43:55.134"></status>
</kw>
<msg timestamp="20201112 09:43:55.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024932014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025015194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.846" endtime="20201112 09:43:55.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024932014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025015194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.138" endtime="20201112 09:43:55.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.147" endtime="20201112 09:43:55.151"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.843" endtime="20201112 09:43:55.151"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.840" endtime="20201112 09:43:55.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:55.157" level="INFO">${RESULT} = [{'time': 0.025015194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.318000000000214e-05, 'source_diff': 8.318000000000214e-05}, {'time': 0.025113139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:55.153" endtime="20201112 09:43:55.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:55.171" level="INFO">${ACCURACY} = {'time': [0.025015194, 0.025113139, 0.025205181, 0.025306139, 0.025403139, 0.025504153, 0.025603181, 0.025706194, 0.025804181, 0.02590325, 0.026000236, 0.02610125, 0.026198222, 0.026294236, 0.02639025...</msg>
<status status="PASS" starttime="20201112 09:43:55.158" endtime="20201112 09:43:55.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.176" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 09:43:55.175" endtime="20201112 09:43:55.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.179" level="INFO">VALUE: [8.318000000000214e-05, 8.340299999999926e-05, 8.368099999999865e-05, 8.305599999999802e-05, 8.400000000000074e-05, 8.39170000000028e-05, 8.311199999999977e-05, 8.404099999999998e-05, 8.319499999999772e-05, 8.318099999999815e-05, 8.359699999999776e-05, 8.350000000000024e-05, 8.381899999999887e-05, 8.306899999999812e-05, 8.370800000000178e-05, 8.316700000000204e-05, 8.401400000000031e-05, 8.345800000000153e-05, 8.305600000000149e-05, 8.384700000000148e-05, 8.341699999999883e-05, 8.373600000000092e-05, 8.402799999999988e-05, 8.33330000000014e-05, 8.38330000000019e-05, 8.366700000000254e-05, 8.348600000000067e-05, 8.309700000000073e-05, 8.36390000000034e-05, 8.390200000000028e-05, 8.400000000000074e-05, 8.312499999999987e-05, 8.31659999999991e-05, 8.351399999999981e-05, 8.372200000000135e-05, 8.377799999999963e-05, 8.376400000000006e-05, 8.365300000000297e-05, 8.330599999999827e-05, 8.398600000000117e-05, 8.398600000000117e-05, 8.354199999999895e-05, 8.37919999999992e-05, 8.35980000000007e-05, 8.383299999999844e-05, 8.306900000000159e-05, 8.354099999999948e-05, 8.348600000000067e-05, 8.409799999999773e-05, 8.33049999999988e-05]</msg>
<status status="PASS" starttime="20201112 09:43:55.177" endtime="20201112 09:43:55.184"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.172" endtime="20201112 09:43:55.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.188" endtime="20201112 09:43:55.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:55.192" endtime="20201112 09:43:55.211"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.190" endtime="20201112 09:43:55.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.186" endtime="20201112 09:43:55.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.804" endtime="20201112 09:43:55.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.803" endtime="20201112 09:43:55.213"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.224" endtime="20201112 09:43:55.243"></status>
</kw>
<msg timestamp="20201112 09:43:55.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.223" endtime="20201112 09:43:55.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.245" endtime="20201112 09:43:55.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.248" endtime="20201112 09:43:55.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.219" endtime="20201112 09:43:55.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.216" endtime="20201112 09:43:55.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.259" endtime="20201112 09:43:55.563"></status>
</kw>
<msg timestamp="20201112 09:43:55.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025078861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025163528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.257" endtime="20201112 09:43:55.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025078861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025163528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.573" endtime="20201112 09:43:55.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.592" endtime="20201112 09:43:55.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.254" endtime="20201112 09:43:55.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.252" endtime="20201112 09:43:55.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:55.611" level="INFO">${RESULT} = [{'time': 0.025163528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.466700000000008e-05, 'source_diff': 8.466700000000008e-05}, {'time': 0.025257528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:55.602" endtime="20201112 09:43:55.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:55.642" level="INFO">${ACCURACY} = {'time': [0.025163528, 0.025257528, 0.025352514, 0.025450528, 0.025553528, 0.025645569, 0.025737542, 0.025833569, 0.025932569, 0.026025583, 0.026122611, 0.026216597, 0.026310653, 0.026403611, 0.026498...</msg>
<status status="PASS" starttime="20201112 09:43:55.613" endtime="20201112 09:43:55.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.653" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 09:43:55.651" endtime="20201112 09:43:55.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.659" level="INFO">VALUE: [8.466700000000008e-05, 8.437500000000112e-05, 8.476400000000106e-05, 8.466700000000008e-05, 8.495899999999904e-05, 8.473599999999845e-05, 8.424999999999752e-05, 8.455500000000005e-05, 8.46249999999979e-05, 8.46660000000006e-05, 8.458299999999919e-05, 8.501400000000131e-05, 8.437500000000112e-05, 8.416699999999958e-05, 8.495899999999904e-05, 8.484700000000248e-05, 8.408400000000163e-05, 8.462500000000137e-05, 8.491700000000033e-05, 8.473600000000192e-05, 8.447199999999863e-05, 8.418099999999915e-05, 8.442999999999992e-05, 8.483299999999944e-05, 8.458299999999919e-05, 8.473600000000192e-05, 8.447199999999863e-05, 8.430599999999927e-05, 8.468099999999965e-05, 8.423599999999795e-05, 8.42919999999997e-05, 8.473599999999845e-05, 8.408299999999869e-05, 8.434700000000198e-05, 8.494399999999999e-05, 8.425000000000099e-05, 8.431900000000284e-05, 8.473599999999845e-05, 8.504200000000045e-05, 8.43049999999998e-05, 8.434800000000145e-05, 8.469499999999922e-05, 8.434799999999798e-05, 8.493000000000042e-05, 8.477799999999716e-05, 8.492999999999695e-05, 8.468000000000017e-05, 8.451399999999734e-05, 8.444399999999949e-05, 8.416699999999958e-05]</msg>
<status status="PASS" starttime="20201112 09:43:55.656" endtime="20201112 09:43:55.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.644" endtime="20201112 09:43:55.662"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.669" endtime="20201112 09:43:55.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:55.677" endtime="20201112 09:43:55.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.673" endtime="20201112 09:43:55.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.664" endtime="20201112 09:43:55.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.214" endtime="20201112 09:43:55.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.214" endtime="20201112 09:43:55.703"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.727" endtime="20201112 09:43:55.748"></status>
</kw>
<msg timestamp="20201112 09:43:55.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.723" endtime="20201112 09:43:55.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.752" endtime="20201112 09:43:55.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.758" endtime="20201112 09:43:55.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.716" endtime="20201112 09:43:55.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.710" endtime="20201112 09:43:55.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.782" endtime="20201112 09:43:56.120"></status>
</kw>
<msg timestamp="20201112 09:43:56.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042571264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042657194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.779" endtime="20201112 09:43:56.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042571264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042657194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:56.129" endtime="20201112 09:43:56.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.148" endtime="20201112 09:43:56.154"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.772" endtime="20201112 09:43:56.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.767" endtime="20201112 09:43:56.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:56.168" level="INFO">${RESULT} = [{'time': 0.042657194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.593000000000489e-05, 'source_diff': 8.593000000000489e-05}, {'time': 0.042758208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:56.159" endtime="20201112 09:43:56.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:56.199" level="INFO">${ACCURACY} = {'time': [0.042657194, 0.042758208, 0.042852181, 0.042946208, 0.043039236, 0.043141208, 0.043236222, 0.043335236, 0.043427292, 0.043522278, 0.043620264, 0.043714319, 0.043815333, 0.043916319, 0.044017...</msg>
<status status="PASS" starttime="20201112 09:43:56.170" endtime="20201112 09:43:56.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.210" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 09:43:56.207" endtime="20201112 09:43:56.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.215" level="INFO">VALUE: [8.593000000000489e-05, 8.59999999999958e-05, 8.57920000000012e-05, 8.547199999999616e-05, 8.548600000000267e-05, 8.520800000000328e-05, 8.576399999999512e-05, 8.523600000000242e-05, 8.577800000000163e-05, 8.605600000000102e-05, 8.590299999999829e-05, 8.543000000000439e-05, 8.601399999999537e-05, 8.598600000000317e-05, 8.597199999999666e-05, 8.598599999999623e-05, 8.600000000000274e-05, 8.527800000000113e-05, 8.509699999999926e-05, 8.57920000000012e-05, 8.56669999999976e-05, 8.551400000000181e-05, 8.576400000000206e-05, 8.518100000000361e-05, 8.498600000000217e-05, 8.538899999999822e-05, 8.569500000000368e-05, 8.573600000000292e-05, 8.573600000000292e-05, 8.508299999999969e-05, 8.523599999999548e-05, 8.554200000000095e-05, 8.582000000000034e-05, 8.575000000000249e-05, 8.590299999999829e-05, 8.509699999999926e-05, 8.554200000000095e-05, 8.591699999999786e-05, 8.541599999999788e-05, 8.576299999999565e-05, 8.555600000000052e-05, 8.526400000000156e-05, 8.551400000000181e-05, 8.538899999999822e-05, 8.509699999999926e-05, 8.525000000000199e-05, 8.604199999999451e-05, 8.547300000000257e-05, 8.541699999999736e-05, 8.544500000000343e-05]</msg>
<status status="PASS" starttime="20201112 09:43:56.212" endtime="20201112 09:43:56.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.201" endtime="20201112 09:43:56.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.225" endtime="20201112 09:43:56.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:56.234" endtime="20201112 09:43:56.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.229" endtime="20201112 09:43:56.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.221" endtime="20201112 09:43:56.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.706" endtime="20201112 09:43:56.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.704" endtime="20201112 09:43:56.260"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.283" endtime="20201112 09:43:56.305"></status>
</kw>
<msg timestamp="20201112 09:43:56.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.280" endtime="20201112 09:43:56.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.309" endtime="20201112 09:43:56.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.315" endtime="20201112 09:43:56.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.273" endtime="20201112 09:43:56.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.267" endtime="20201112 09:43:56.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.339" endtime="20201112 09:43:56.679"></status>
</kw>
<msg timestamp="20201112 09:43:56.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042970431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043057222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:56.336" endtime="20201112 09:43:56.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042970431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043057222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:56.688" endtime="20201112 09:43:56.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.707" endtime="20201112 09:43:56.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.328" endtime="20201112 09:43:56.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.324" endtime="20201112 09:43:56.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:56.727" level="INFO">${RESULT} = [{'time': 0.043057222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.679099999999579e-05, 'source_diff': 8.679099999999579e-05}, {'time': 0.043156236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:56.717" endtime="20201112 09:43:56.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:56.758" level="INFO">${ACCURACY} = {'time': [0.043057222, 0.043156236, 0.043251236, 0.04335325, 0.043446264, 0.043541292, 0.043637306, 0.043740292, 0.043841347, 0.043938306, 0.044042319, 0.044140375, 0.044236347, 0.044341347, 0.0444443...</msg>
<status status="PASS" starttime="20201112 09:43:56.729" endtime="20201112 09:43:56.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.769" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 09:43:56.766" endtime="20201112 09:43:56.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.775" level="INFO">VALUE: [8.679099999999579e-05, 8.692999999999895e-05, 8.697199999999766e-05, 8.67920000000022e-05, 8.673599999999698e-05, 8.669500000000468e-05, 8.615299999999854e-05, 8.691699999999886e-05, 8.659700000000076e-05, 8.608400000000016e-05, 8.670800000000478e-05, 8.676400000000306e-05, 8.68050000000023e-05, 8.61390000000059e-05, 8.659700000000076e-05, 8.63470000000005e-05, 8.608400000000016e-05, 8.626400000000256e-05, 8.623600000000342e-05, 8.672299999999689e-05, 8.64999999999963e-05, 8.624999999999605e-05, 8.690299999999929e-05, 8.633300000000094e-05, 8.636100000000008e-05, 8.605500000000155e-05, 8.675000000000349e-05, 8.643100000000487e-05, 8.611099999999983e-05, 8.697299999999714e-05, 8.609799999999973e-05, 8.630600000000127e-05, 8.691599999999938e-05, 8.630499999999486e-05, 8.668099999999818e-05, 8.650000000000324e-05, 8.623599999999648e-05, 8.659700000000076e-05, 8.626399999999562e-05, 8.626400000000256e-05, 8.627800000000213e-05, 8.673600000000392e-05, 8.606999999999365e-05, 8.687500000000015e-05, 8.629100000000223e-05, 8.609700000000026e-05, 8.659700000000076e-05, 8.615299999999854e-05, 8.654200000000195e-05, 8.641699999999836e-05]</msg>
<status status="PASS" starttime="20201112 09:43:56.771" endtime="20201112 09:43:56.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.759" endtime="20201112 09:43:56.778"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.784" endtime="20201112 09:43:56.787"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:56.793" endtime="20201112 09:43:56.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.788" endtime="20201112 09:43:56.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.780" endtime="20201112 09:43:56.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.262" endtime="20201112 09:43:56.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.261" endtime="20201112 09:43:56.819"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.842" endtime="20201112 09:43:56.864"></status>
</kw>
<msg timestamp="20201112 09:43:56.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.839" endtime="20201112 09:43:56.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.867" endtime="20201112 09:43:56.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.874" endtime="20201112 09:43:56.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.832" endtime="20201112 09:43:56.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.826" endtime="20201112 09:43:56.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.898" endtime="20201112 09:43:57.234"></status>
</kw>
<msg timestamp="20201112 09:43:57.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042732042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042820097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:56.894" endtime="20201112 09:43:57.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042732042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042820097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:57.244" endtime="20201112 09:43:57.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.263" endtime="20201112 09:43:57.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.887" endtime="20201112 09:43:57.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.882" endtime="20201112 09:43:57.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:57.284" level="INFO">${RESULT} = [{'time': 0.042820097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.805500000000355e-05, 'source_diff': 8.805500000000355e-05}, {'time': 0.042923083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:57.275" endtime="20201112 09:43:57.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:57.391" level="INFO">${ACCURACY} = {'time': [0.042820097, 0.042923083, 0.043022111, 0.043116097, 0.043214111, 0.043309125, 0.043412153, 0.043518167, 0.043620194, 0.043721181, 0.043821181, 0.043924208, 0.044029194, 0.044135208, 0.044229...</msg>
<status status="PASS" starttime="20201112 09:43:57.287" endtime="20201112 09:43:57.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.402" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 09:43:57.400" endtime="20201112 09:43:57.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.408" level="INFO">VALUE: [8.805500000000355e-05, 8.716599999999963e-05, 8.726400000000356e-05, 8.765300000000004e-05, 8.715299999999954e-05, 8.741699999999936e-05, 8.751400000000381e-05, 8.7459000000005e-05, 8.783300000000244e-05, 8.802799999999694e-05, 8.72920000000027e-05, 8.780499999999636e-05, 8.727700000000366e-05, 8.722200000000485e-05, 8.71250000000004e-05, 8.715299999999954e-05, 8.71669999999991e-05, 8.741699999999936e-05, 8.750000000000424e-05, 8.788800000000124e-05, 8.737500000000065e-05, 8.752799999999644e-05, 8.800000000000474e-05, 8.770799999999884e-05, 8.751399999999687e-05, 8.706900000000212e-05, 8.741699999999936e-05, 8.74999999999973e-05, 8.755600000000252e-05, 8.769499999999875e-05, 8.758299999999525e-05, 8.723599999999748e-05, 8.780600000000277e-05, 8.716700000000605e-05, 8.756900000000262e-05, 8.779099999999679e-05, 8.704100000000298e-05, 8.798599999999823e-05, 8.718100000000562e-05, 8.775000000000449e-05, 8.72920000000027e-05, 8.783400000000191e-05, 8.709800000000073e-05, 8.713800000000049e-05, 8.787500000000115e-05, 8.729100000000323e-05, 8.752699999999697e-05, 8.716599999999963e-05, 8.768099999999918e-05, 8.765300000000004e-05]</msg>
<status status="PASS" starttime="20201112 09:43:57.404" endtime="20201112 09:43:57.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.393" endtime="20201112 09:43:57.411"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.417" endtime="20201112 09:43:57.420"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:57.426" endtime="20201112 09:43:57.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.422" endtime="20201112 09:43:57.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.413" endtime="20201112 09:43:57.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.821" endtime="20201112 09:43:57.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.820" endtime="20201112 09:43:57.452"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.478" endtime="20201112 09:43:57.501"></status>
</kw>
<msg timestamp="20201112 09:43:57.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.475" endtime="20201112 09:43:57.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.505" endtime="20201112 09:43:57.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.511" endtime="20201112 09:43:57.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.466" endtime="20201112 09:43:57.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.459" endtime="20201112 09:43:57.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.535" endtime="20201112 09:43:57.872"></status>
</kw>
<msg timestamp="20201112 09:43:57.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046486292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046574431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:57.532" endtime="20201112 09:43:57.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046486292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046574431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:57.882" endtime="20201112 09:43:57.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.901" endtime="20201112 09:43:57.905"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.525" endtime="20201112 09:43:57.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.519" endtime="20201112 09:43:57.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:57.918" level="INFO">${RESULT} = [{'time': 0.046574431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.813900000000097e-05, 'source_diff': 8.813900000000097e-05}, {'time': 0.046675417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:57.909" endtime="20201112 09:43:57.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:57.949" level="INFO">${ACCURACY} = {'time': [0.046574431, 0.046675417, 0.046774444, 0.046876431, 0.046983514, 0.047090472, 0.047196472, 0.0472945, 0.047389486, 0.0474865, 0.047585542, 0.047684556, 0.047784528, 0.047879542, 0.047982583,...</msg>
<status status="PASS" starttime="20201112 09:43:57.921" endtime="20201112 09:43:57.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.960" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 09:43:57.958" endtime="20201112 09:43:57.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.966" level="INFO">VALUE: [8.813900000000097e-05, 8.801399999999737e-05, 8.81800000000002e-05, 8.877800000000463e-05, 8.906999999999665e-05, 8.826400000000456e-05, 8.808300000000269e-05, 8.822200000000585e-05, 8.890300000000129e-05, 8.880600000000377e-05, 8.874999999999855e-05, 8.81670000000001e-05, 8.84999999999983e-05, 8.8945e-05, 8.840200000000131e-05, 8.858300000000319e-05, 8.855499999999711e-05, 8.848599999999873e-05, 8.895800000000009e-05, 8.82920000000037e-05, 8.845799999999959e-05, 8.824999999999805e-05, 8.823599999999848e-05, 8.904200000000445e-05, 8.881900000000387e-05, 8.84999999999983e-05, 8.882000000000334e-05, 8.830499999999686e-05, 8.886099999999564e-05, 8.854199999999701e-05, 8.851400000000481e-05, 8.838900000000122e-05, 8.859700000000276e-05, 8.84449999999995e-05, 8.829199999999676e-05, 8.863900000000147e-05, 8.82920000000037e-05, 8.840200000000131e-05, 8.874999999999855e-05, 8.86800000000007e-05, 8.848599999999873e-05, 8.858300000000319e-05, 8.851400000000481e-05, 8.891700000000086e-05, 8.858299999999625e-05, 8.893100000000043e-05, 8.887499999999521e-05, 8.836200000000155e-05, 8.845899999999907e-05, 8.895899999999957e-05]</msg>
<status status="PASS" starttime="20201112 09:43:57.963" endtime="20201112 09:43:57.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.951" endtime="20201112 09:43:57.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.976" endtime="20201112 09:43:57.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:57.984" endtime="20201112 09:43:58.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.980" endtime="20201112 09:43:58.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.971" endtime="20201112 09:43:58.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.455" endtime="20201112 09:43:58.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.453" endtime="20201112 09:43:58.010"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.034" endtime="20201112 09:43:58.057"></status>
</kw>
<msg timestamp="20201112 09:43:58.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.030" endtime="20201112 09:43:58.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.061" endtime="20201112 09:43:58.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.067" endtime="20201112 09:43:58.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.023" endtime="20201112 09:43:58.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.017" endtime="20201112 09:43:58.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.091" endtime="20201112 09:43:58.428"></status>
</kw>
<msg timestamp="20201112 09:43:58.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044081486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044170597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.088" endtime="20201112 09:43:58.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044081486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044170597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.437" endtime="20201112 09:43:58.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.456" endtime="20201112 09:43:58.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.081" endtime="20201112 09:43:58.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.076" endtime="20201112 09:43:58.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:58.474" level="INFO">${RESULT} = [{'time': 0.044170597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.911099999999589e-05, 'source_diff': 8.911099999999589e-05}, {'time': 0.044277597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:58.465" endtime="20201112 09:43:58.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:58.505" level="INFO">${ACCURACY} = {'time': [0.044170597, 0.044277597, 0.044385611, 0.044487625, 0.044590639, 0.044696681, 0.044794653, 0.044902667, 0.045000681, 0.045106736, 0.045206722, 0.045312708, 0.04541375, 0.045516736, 0.0456207...</msg>
<status status="PASS" starttime="20201112 09:43:58.476" endtime="20201112 09:43:58.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.517" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 09:43:58.515" endtime="20201112 09:43:58.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.523" level="INFO">VALUE: [8.911099999999589e-05, 8.927800000000513e-05, 8.943000000000145e-05, 8.968100000000118e-05, 8.977799999999869e-05, 8.92920000000047e-05, 8.96529999999951e-05, 8.956999999999715e-05, 8.965300000000204e-05, 8.993000000000195e-05, 8.977799999999869e-05, 8.993000000000195e-05, 8.973599999999998e-05, 8.984700000000401e-05, 9.004199999999851e-05, 8.987500000000315e-05, 8.933399999999647e-05, 8.919500000000025e-05, 8.974999999999955e-05, 8.99999999999998e-05, 9.002699999999947e-05, 8.981899999999793e-05, 8.984700000000401e-05, 8.977800000000563e-05, 8.916699999999417e-05, 8.990300000000229e-05, 8.98329999999975e-05, 8.912499999999546e-05, 8.950000000000624e-05, 8.925000000000599e-05, 8.943100000000093e-05, 8.99869999999997e-05, 8.972200000000041e-05, 8.906900000000412e-05, 9.001399999999937e-05, 8.944499999999356e-05, 8.94999999999993e-05, 8.94450000000005e-05, 8.951399999999887e-05, 8.91670000000011e-05, 8.924999999999905e-05, 8.96250000000029e-05, 8.937500000000265e-05, 8.926399999999862e-05, 8.96800000000017e-05, 8.944400000000102e-05, 8.96670000000016e-05, 8.96670000000016e-05, 8.94999999999993e-05, 8.99999999999998e-05]</msg>
<status status="PASS" starttime="20201112 09:43:58.520" endtime="20201112 09:43:58.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.507" endtime="20201112 09:43:58.527"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.533" endtime="20201112 09:43:58.536"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:58.542" endtime="20201112 09:43:58.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.537" endtime="20201112 09:43:58.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.528" endtime="20201112 09:43:58.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.012" endtime="20201112 09:43:58.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.011" endtime="20201112 09:43:58.568"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.592" endtime="20201112 09:43:58.614"></status>
</kw>
<msg timestamp="20201112 09:43:58.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.588" endtime="20201112 09:43:58.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.617" endtime="20201112 09:43:58.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.624" endtime="20201112 09:43:58.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.581" endtime="20201112 09:43:58.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.575" endtime="20201112 09:43:58.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.649" endtime="20201112 09:43:58.942"></status>
</kw>
<msg timestamp="20201112 09:43:58.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043007667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043098028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.646" endtime="20201112 09:43:58.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043007667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043098028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.946" endtime="20201112 09:43:58.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.955" endtime="20201112 09:43:58.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.637" endtime="20201112 09:43:58.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.632" endtime="20201112 09:43:58.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:58.963" level="INFO">${RESULT} = [{'time': 0.043098028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.036099999999714e-05, 'source_diff': 9.036099999999714e-05}, {'time': 0.043206056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:58.959" endtime="20201112 09:43:58.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:58.977" level="INFO">${ACCURACY} = {'time': [0.043098028, 0.043206056, 0.043311139, 0.043410042, 0.043512056, 0.043616056, 0.043720069, 0.043825153, 0.043933111, 0.044040125, 0.044137111, 0.044241125, 0.044343139, 0.044451236, 0.044557...</msg>
<status status="PASS" starttime="20201112 09:43:58.964" endtime="20201112 09:43:58.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.982" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 09:43:58.981" endtime="20201112 09:43:58.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.985" level="INFO">VALUE: [9.036099999999714e-05, 9.093100000000243e-05, 9.048600000000073e-05, 9.043100000000193e-05, 9.068100000000218e-05, 9.077799999999969e-05, 9.076300000000065e-05, 9.020900000000082e-05, 9.027799999999919e-05, 9.076400000000012e-05, 9.031899999999843e-05, 9.06670000000026e-05, 9.068099999999524e-05, 9.030499999999886e-05, 9.10000000000008e-05, 9.004199999999851e-05, 9.072200000000141e-05, 9.056899999999868e-05, 9.030499999999886e-05, 9.026399999999962e-05, 9.02079999999944e-05, 9.079199999999926e-05, 9.027799999999919e-05, 9.037500000000365e-05, 9.06670000000026e-05, 9.084799999999754e-05, 9.077799999999969e-05, 9.06250000000039e-05, 9.091600000000338e-05, 9.01670000000021e-05, 9.05000000000003e-05, 9.10000000000008e-05, 9.01670000000021e-05, 9.05000000000003e-05, 9.011100000000383e-05, 9.069500000000175e-05, 9.044400000000202e-05, 9.070800000000184e-05, 9.102700000000047e-05, 9.104100000000004e-05, 9.072200000000141e-05, 9.051399999999987e-05, 9.030499999999886e-05, 9.025000000000005e-05, 9.06250000000039e-05, 9.068100000000218e-05, 9.084699999999807e-05, 9.006999999999765e-05, 9.088899999999678e-05, 9.073600000000098e-05]</msg>
<status status="PASS" starttime="20201112 09:43:58.983" endtime="20201112 09:43:58.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.978" endtime="20201112 09:43:58.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.990" endtime="20201112 09:43:58.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:58.994" endtime="20201112 09:43:59.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.992" endtime="20201112 09:43:59.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.987" endtime="20201112 09:43:59.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.570" endtime="20201112 09:43:59.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.569" endtime="20201112 09:43:59.019"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.043" endtime="20201112 09:43:59.064"></status>
</kw>
<msg timestamp="20201112 09:43:59.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.039" endtime="20201112 09:43:59.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.068" endtime="20201112 09:43:59.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.074" endtime="20201112 09:43:59.078"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.032" endtime="20201112 09:43:59.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.026" endtime="20201112 09:43:59.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.098" endtime="20201112 09:43:59.437"></status>
</kw>
<msg timestamp="20201112 09:43:59.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042895972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042987972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.095" endtime="20201112 09:43:59.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042895972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042987972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.447" endtime="20201112 09:43:59.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.467" endtime="20201112 09:43:59.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.087" endtime="20201112 09:43:59.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.083" endtime="20201112 09:43:59.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:59.485" level="INFO">${RESULT} = [{'time': 0.042987972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.20000000000018e-05, 'source_diff': 9.20000000000018e-05}, {'time': 0.043092958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:59.476" endtime="20201112 09:43:59.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:59.517" level="INFO">${ACCURACY} = {'time': [0.042987972, 0.043092958, 0.043194944, 0.043294986, 0.043400986, 0.0435, 0.043603028, 0.043704014, 0.043801014, 0.043910028, 0.044019111, 0.044127042, 0.044233097, 0.044341069, 0.044440111, ...</msg>
<status status="PASS" starttime="20201112 09:43:59.487" endtime="20201112 09:43:59.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.529" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 09:43:59.527" endtime="20201112 09:43:59.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.535" level="INFO">VALUE: [9.20000000000018e-05, 9.123600000000148e-05, 9.175000000000155e-05, 9.190299999999735e-05, 9.18329999999995e-05, 9.172199999999547e-05, 9.175000000000155e-05, 9.161099999999839e-05, 9.11529999999966e-05, 9.141699999999642e-05, 9.129199999999976e-05, 9.126400000000062e-05, 9.20000000000018e-05, 9.192999999999701e-05, 9.124999999999411e-05, 9.126400000000062e-05, 9.175000000000155e-05, 9.125000000000105e-05, 9.176400000000112e-05, 9.129199999999976e-05, 9.168100000000318e-05, 9.141600000000388e-05, 9.129199999999976e-05, 9.105599999999908e-05, 9.126300000000115e-05, 9.181899999999993e-05, 9.151399999999393e-05, 9.191699999999692e-05, 9.186099999999864e-05, 9.137500000000465e-05, 9.18329999999995e-05, 9.161100000000533e-05, 9.16800000000037e-05, 9.16659999999972e-05, 9.148600000000173e-05, 9.140299999999685e-05, 9.195800000000309e-05, 9.187499999999821e-05, 9.199999999999486e-05, 9.156899999999968e-05, 9.179200000000026e-05, 9.193100000000343e-05, 9.133300000000594e-05, 9.136100000000508e-05, 9.112499999999746e-05, 9.175000000000155e-05, 9.113900000000397e-05, 9.173600000000198e-05, 9.16659999999972e-05, 9.111100000000483e-05]</msg>
<status status="PASS" starttime="20201112 09:43:59.532" endtime="20201112 09:43:59.537"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.519" endtime="20201112 09:43:59.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.546" endtime="20201112 09:43:59.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:59.555" endtime="20201112 09:43:59.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.550" endtime="20201112 09:43:59.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.541" endtime="20201112 09:43:59.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.021" endtime="20201112 09:43:59.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.020" endtime="20201112 09:43:59.581"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.604" endtime="20201112 09:43:59.626"></status>
</kw>
<msg timestamp="20201112 09:43:59.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.601" endtime="20201112 09:43:59.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.630" endtime="20201112 09:43:59.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.636" endtime="20201112 09:43:59.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.594" endtime="20201112 09:43:59.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.588" endtime="20201112 09:43:59.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.660" endtime="20201112 09:43:59.998"></status>
</kw>
<msg timestamp="20201112 09:44:00.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042699472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042792278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.657" endtime="20201112 09:44:00.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042699472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042792278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.007" endtime="20201112 09:44:00.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.026" endtime="20201112 09:44:00.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.649" endtime="20201112 09:44:00.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.645" endtime="20201112 09:44:00.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:00.046" level="INFO">${RESULT} = [{'time': 0.042792278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.280600000000083e-05, 'source_diff': 9.280600000000083e-05}, {'time': 0.042893306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:00.037" endtime="20201112 09:44:00.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:00.076" level="INFO">${ACCURACY} = {'time': [0.042792278, 0.042893306, 0.042996361, 0.043104319, 0.043215333, 0.043325361, 0.043429347, 0.043533361, 0.043639375, 0.043740417, 0.043846403, 0.043953403, 0.044058458, 0.044157431, 0.044257...</msg>
<status status="PASS" starttime="20201112 09:44:00.048" endtime="20201112 09:44:00.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.088" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 09:44:00.085" endtime="20201112 09:44:00.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.093" level="INFO">VALUE: [9.280600000000083e-05, 9.225000000000205e-05, 9.305499999999467e-05, 9.237499999999871e-05, 9.280500000000136e-05, 9.230500000000086e-05, 9.2333e-05, 9.275000000000255e-05, 9.287499999999921e-05, 9.227799999999425e-05, 9.225000000000205e-05, 9.259699999999982e-05, 9.2333e-05, 9.212499999999846e-05, 9.211099999999889e-05, 9.277700000000222e-05, 9.225000000000205e-05, 9.309700000000032e-05, 9.28330000000005e-05, 9.247200000000316e-05, 9.2333e-05, 9.272200000000341e-05, 9.233399999999947e-05, 9.288900000000572e-05, 9.30130000000029e-05, 9.2333e-05, 9.254100000000154e-05, 9.290300000000529e-05, 9.298600000000323e-05, 9.262499999999896e-05, 9.258300000000025e-05, 9.211099999999889e-05, 9.225000000000205e-05, 9.270900000000332e-05, 9.277799999999475e-05, 9.256900000000068e-05, 9.227700000000172e-05, 9.222199999999597e-05, 9.274999999999561e-05, 9.270800000000384e-05, 9.266699999999767e-05, 9.206999999999965e-05, 9.226400000000162e-05, 9.206999999999965e-05, 9.28200000000004e-05, 9.205600000000008e-05, 9.222300000000239e-05, 9.286199999999911e-05, 9.273600000000298e-05, 9.290199999999887e-05]</msg>
<status status="PASS" starttime="20201112 09:44:00.090" endtime="20201112 09:44:00.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.078" endtime="20201112 09:44:00.096"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.103" endtime="20201112 09:44:00.106"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:00.111" endtime="20201112 09:44:00.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.107" endtime="20201112 09:44:00.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.098" endtime="20201112 09:44:00.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.583" endtime="20201112 09:44:00.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.582" endtime="20201112 09:44:00.137"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.161" endtime="20201112 09:44:00.184"></status>
</kw>
<msg timestamp="20201112 09:44:00.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.157" endtime="20201112 09:44:00.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.187" endtime="20201112 09:44:00.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.194" endtime="20201112 09:44:00.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.150" endtime="20201112 09:44:00.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.144" endtime="20201112 09:44:00.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.217" endtime="20201112 09:44:00.556"></status>
</kw>
<msg timestamp="20201112 09:44:00.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042446708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042539889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.214" endtime="20201112 09:44:00.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042446708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042539889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.566" endtime="20201112 09:44:00.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.586" endtime="20201112 09:44:00.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.207" endtime="20201112 09:44:00.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.202" endtime="20201112 09:44:00.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:00.606" level="INFO">${RESULT} = [{'time': 0.042539889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.318099999999774e-05, 'source_diff': 9.318099999999774e-05}, {'time': 0.042639903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:00.597" endtime="20201112 09:44:00.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:00.637" level="INFO">${ACCURACY} = {'time': [0.042539889, 0.042639903, 0.042742917, 0.042848958, 0.042957931, 0.043067972, 0.043173958, 0.043284958, 0.043384972, 0.043485042, 0.043586, 0.043697014, 0.043807014, 0.043917042, 0.044017042...</msg>
<status status="PASS" starttime="20201112 09:44:00.608" endtime="20201112 09:44:00.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.648" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 09:44:00.646" endtime="20201112 09:44:00.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.654" level="INFO">VALUE: [9.318099999999774e-05, 9.309700000000032e-05, 9.320899999999688e-05, 9.351400000000287e-05, 9.376399999999618e-05, 9.355500000000211e-05, 9.327699999999578e-05, 9.390199999999987e-05, 9.326400000000262e-05, 9.313899999999903e-05, 9.37079999999979e-05, 9.326400000000262e-05, 9.33200000000009e-05, 9.333400000000047e-05, 9.354200000000201e-05, 9.307000000000065e-05, 9.36659999999992e-05, 9.38330000000015e-05, 9.377699999999628e-05, 9.390299999999935e-05, 9.379200000000226e-05, 9.334700000000057e-05, 9.366699999999867e-05, 9.366699999999867e-05, 9.358399999999378e-05, 9.390300000000629e-05, 9.317999999999826e-05, 9.331900000000143e-05, 9.38330000000015e-05, 9.35000000000033e-05, 9.365300000000604e-05, 9.31800000000052e-05, 9.374999999999661e-05, 9.38330000000015e-05, 9.33200000000009e-05, 9.338899999999928e-05, 9.323599999999654e-05, 9.344399999999808e-05, 9.309700000000032e-05, 9.395799999999815e-05, 9.401400000000337e-05, 9.3333000000001e-05, 9.3333000000001e-05, 9.337499999999971e-05, 9.33200000000009e-05, 9.374999999999661e-05, 9.399999999999686e-05, 9.336100000000014e-05, 9.399999999999686e-05, 9.369399999999833e-05]</msg>
<status status="PASS" starttime="20201112 09:44:00.651" endtime="20201112 09:44:00.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.639" endtime="20201112 09:44:00.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.668" endtime="20201112 09:44:00.670"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:00.676" endtime="20201112 09:44:00.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.672" endtime="20201112 09:44:00.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.663" endtime="20201112 09:44:00.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.139" endtime="20201112 09:44:00.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.138" endtime="20201112 09:44:00.702"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.725" endtime="20201112 09:44:00.747"></status>
</kw>
<msg timestamp="20201112 09:44:00.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.722" endtime="20201112 09:44:00.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.751" endtime="20201112 09:44:00.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.757" endtime="20201112 09:44:00.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.715" endtime="20201112 09:44:00.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.709" endtime="20201112 09:44:00.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.781" endtime="20201112 09:44:01.120"></status>
</kw>
<msg timestamp="20201112 09:44:01.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042473236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042567542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.778" endtime="20201112 09:44:01.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042473236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042567542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.131" endtime="20201112 09:44:01.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.153" endtime="20201112 09:44:01.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.770" endtime="20201112 09:44:01.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.765" endtime="20201112 09:44:01.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:01.179" level="INFO">${RESULT} = [{'time': 0.042567542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.430600000000233e-05, 'source_diff': 9.430600000000233e-05}, {'time': 0.042672569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:01.168" endtime="20201112 09:44:01.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:01.214" level="INFO">${ACCURACY} = {'time': [0.042567542, 0.042672569, 0.042782625, 0.042883583, 0.042995597, 0.043096611, 0.043206611, 0.043307653, 0.043412639, 0.043516667, 0.043622681, 0.043730708, 0.043831694, 0.043938694, 0.044050...</msg>
<status status="PASS" starttime="20201112 09:44:01.182" endtime="20201112 09:44:01.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.226" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 09:44:01.224" endtime="20201112 09:44:01.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.232" level="INFO">VALUE: [9.430600000000233e-05, 9.430500000000286e-05, 9.476399999999718e-05, 9.451400000000387e-05, 9.406900000000218e-05, 9.412500000000046e-05, 9.49859999999983e-05, 9.436100000000114e-05, 9.493099999999949e-05, 9.484800000000154e-05, 9.412500000000046e-05, 9.490200000000087e-05, 9.434699999999463e-05, 9.449999999999736e-05, 9.441599999999994e-05, 9.495799999999915e-05, 9.442999999999951e-05, 9.423599999999754e-05, 9.46530000000001e-05, 9.416700000000611e-05, 9.469499999999881e-05, 9.490200000000087e-05, 9.469399999999933e-05, 9.426400000000362e-05, 9.458299999999531e-05, 9.413900000000003e-05, 9.411100000000089e-05, 9.495800000000609e-05, 9.423599999999754e-05, 9.4027999999996e-05, 9.4333000000002e-05, 9.408399999999428e-05, 9.480600000000283e-05, 9.412499999999352e-05, 9.449999999999736e-05, 9.431900000000243e-05, 9.42079999999984e-05, 9.497199999999872e-05, 9.451400000000387e-05, 9.440299999999985e-05, 9.443099999999899e-05, 9.405600000000208e-05, 9.424999999999711e-05, 9.454200000000301e-05, 9.436200000000061e-05, 9.477800000000369e-05, 9.495899999999863e-05, 9.477700000000422e-05, 9.413900000000003e-05, 9.494399999999958e-05]</msg>
<status status="PASS" starttime="20201112 09:44:01.229" endtime="20201112 09:44:01.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.216" endtime="20201112 09:44:01.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.242" endtime="20201112 09:44:01.245"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:01.251" endtime="20201112 09:44:01.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.246" endtime="20201112 09:44:01.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.237" endtime="20201112 09:44:01.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.704" endtime="20201112 09:44:01.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.703" endtime="20201112 09:44:01.277"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.300" endtime="20201112 09:44:01.323"></status>
</kw>
<msg timestamp="20201112 09:44:01.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.297" endtime="20201112 09:44:01.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.327" endtime="20201112 09:44:01.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.333" endtime="20201112 09:44:01.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.290" endtime="20201112 09:44:01.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.284" endtime="20201112 09:44:01.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.357" endtime="20201112 09:44:01.700"></status>
</kw>
<msg timestamp="20201112 09:44:01.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043019542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043115222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.354" endtime="20201112 09:44:01.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043019542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043115222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.710" endtime="20201112 09:44:01.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.728" endtime="20201112 09:44:01.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.346" endtime="20201112 09:44:01.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.342" endtime="20201112 09:44:01.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:01.748" level="INFO">${RESULT} = [{'time': 0.043115222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.568000000000076e-05, 'source_diff': 9.568000000000076e-05}, {'time': 0.043223236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:01.739" endtime="20201112 09:44:01.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:01.781" level="INFO">${ACCURACY} = {'time': [0.043115222, 0.043223236, 0.043326264, 0.043431236, 0.043545236, 0.04364725, 0.043753278, 0.043856306, 0.043965306, 0.044072333, 0.044183306, 0.044296319, 0.044406375, 0.044521347, 0.0446243...</msg>
<status status="PASS" starttime="20201112 09:44:01.750" endtime="20201112 09:44:01.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.792" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 09:44:01.790" endtime="20201112 09:44:01.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.798" level="INFO">VALUE: [9.568000000000076e-05, 9.588899999999484e-05, 9.551400000000487e-05, 9.518000000000026e-05, 9.577799999999775e-05, 9.505599999999614e-05, 9.53200000000029e-05, 9.523699999999802e-05, 9.563900000000153e-05, 9.531899999999649e-05, 9.529199999999682e-05, 9.543000000000051e-05, 9.59859999999993e-05, 9.60000000000058e-05, 9.57079999999999e-05, 9.601399999999843e-05, 9.568100000000024e-05, 9.541700000000042e-05, 9.531900000000343e-05, 9.584800000000254e-05, 9.53880000000018e-05, 9.536100000000214e-05, 9.533299999999606e-05, 9.601399999999843e-05, 9.562499999999502e-05, 9.523600000000548e-05, 9.602800000000494e-05, 9.566700000000067e-05, 9.549999999999836e-05, 9.56530000000011e-05, 9.524999999999811e-05, 9.543000000000051e-05, 9.561099999999545e-05, 9.565199999999469e-05, 9.50409999999971e-05, 9.524999999999811e-05, 9.533400000000247e-05, 9.526399999999768e-05, 9.575000000000555e-05, 9.53200000000029e-05, 9.572299999999895e-05, 9.501399999999743e-05, 9.529100000000429e-05, 9.574999999999861e-05, 9.523599999999854e-05, 9.5333000000003e-05, 9.53609999999952e-05, 9.522199999999897e-05, 9.516700000000017e-05, 9.527799999999725e-05]</msg>
<status status="PASS" starttime="20201112 09:44:01.795" endtime="20201112 09:44:01.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.783" endtime="20201112 09:44:01.801"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.807" endtime="20201112 09:44:01.810"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:01.816" endtime="20201112 09:44:01.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.812" endtime="20201112 09:44:01.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.803" endtime="20201112 09:44:01.841"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.279" endtime="20201112 09:44:01.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.278" endtime="20201112 09:44:01.842"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.865" endtime="20201112 09:44:01.888"></status>
</kw>
<msg timestamp="20201112 09:44:01.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.862" endtime="20201112 09:44:01.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.892" endtime="20201112 09:44:01.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.898" endtime="20201112 09:44:01.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.855" endtime="20201112 09:44:01.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.849" endtime="20201112 09:44:01.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.922" endtime="20201112 09:44:02.256"></status>
</kw>
<msg timestamp="20201112 09:44:02.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042749764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042846486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.918" endtime="20201112 09:44:02.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042749764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042846486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:02.260" endtime="20201112 09:44:02.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.269" endtime="20201112 09:44:02.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.911" endtime="20201112 09:44:02.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.906" endtime="20201112 09:44:02.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:02.277" level="INFO">${RESULT} = [{'time': 0.042846486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.672200000000047e-05, 'source_diff': 9.672200000000047e-05}, {'time': 0.042954431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:02.273" endtime="20201112 09:44:02.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:02.292" level="INFO">${ACCURACY} = {'time': [0.042846486, 0.042954431, 0.043057431, 0.043163431, 0.043269444, 0.043378458, 0.043486514, 0.043600514, 0.043710472, 0.043823486, 0.043935528, 0.044042542, 0.044145556, 0.044260542, 0.044369...</msg>
<status status="PASS" starttime="20201112 09:44:02.278" endtime="20201112 09:44:02.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.297" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 09:44:02.296" endtime="20201112 09:44:02.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.299" level="INFO">VALUE: [9.672200000000047e-05, 9.676399999999918e-05, 9.673699999999952e-05, 9.7027999999999e-05, 9.642999999999458e-05, 9.623599999999954e-05, 9.63609999999962e-05, 9.64859999999998e-05, 9.618000000000126e-05, 9.605500000000461e-05, 9.674999999999961e-05, 9.69860000000003e-05, 9.670900000000038e-05, 9.683399999999703e-05, 9.665299999999516e-05, 9.6415999999995e-05, 9.661099999999645e-05, 9.676399999999918e-05, 9.652699999999903e-05, 9.673600000000004e-05, 9.705599999999814e-05, 9.67080000000009e-05, 9.695800000000115e-05, 9.64859999999998e-05, 9.701399999999943e-05, 9.64859999999998e-05, 9.68479999999966e-05, 9.692999999999508e-05, 9.626399999999868e-05, 9.667999999999483e-05, 9.634699999999663e-05, 9.630499999999792e-05, 9.672200000000047e-05, 9.669500000000081e-05, 9.609799999999585e-05, 9.670900000000038e-05, 9.674999999999961e-05, 9.641700000000142e-05, 9.699999999999986e-05, 9.68059999999979e-05, 9.687500000000321e-05, 9.623599999999954e-05, 9.62080000000004e-05, 9.7027999999999e-05, 9.663899999999559e-05, 9.656999999999721e-05, 9.69730000000002e-05, 9.687499999999627e-05, 9.662500000000296e-05, 9.608300000000375e-05]</msg>
<status status="PASS" starttime="20201112 09:44:02.298" endtime="20201112 09:44:02.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.293" endtime="20201112 09:44:02.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.304" endtime="20201112 09:44:02.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:02.308" endtime="20201112 09:44:02.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.306" endtime="20201112 09:44:02.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.302" endtime="20201112 09:44:02.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.844" endtime="20201112 09:44:02.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.843" endtime="20201112 09:44:02.330"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.341" endtime="20201112 09:44:02.360"></status>
</kw>
<msg timestamp="20201112 09:44:02.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.339" endtime="20201112 09:44:02.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.362" endtime="20201112 09:44:02.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.365" endtime="20201112 09:44:02.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.336" endtime="20201112 09:44:02.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.333" endtime="20201112 09:44:02.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.376" endtime="20201112 09:44:02.668"></status>
</kw>
<msg timestamp="20201112 09:44:02.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025126014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025223847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:02.374" endtime="20201112 09:44:02.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025126014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025223847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:02.678" endtime="20201112 09:44:02.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.697" endtime="20201112 09:44:02.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.371" endtime="20201112 09:44:02.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.369" endtime="20201112 09:44:02.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:02.715" level="INFO">${RESULT} = [{'time': 0.025223847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.783300000000203e-05, 'source_diff': 9.783300000000203e-05}, {'time': 0.025334889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:02.705" endtime="20201112 09:44:02.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:02.747" level="INFO">${ACCURACY} = {'time': [0.025223847, 0.025334889, 0.025447861, 0.025557875, 0.025672903, 0.025785917, 0.025898931, 0.026001944, 0.026110944, 0.026217986, 0.026324972, 0.026439986, 0.026547986, 0.026662, 0.026772, 0...</msg>
<status status="PASS" starttime="20201112 09:44:02.717" endtime="20201112 09:44:02.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.758" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 09:44:02.756" endtime="20201112 09:44:02.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.764" level="INFO">VALUE: [9.783300000000203e-05, 9.743099999999852e-05, 9.734699999999763e-05, 9.72920000000023e-05, 9.793099999999902e-05, 9.765299999999963e-05, 9.708400000000075e-05, 9.713800000000009e-05, 9.752700000000003e-05, 9.725000000000011e-05, 9.8028e-05, 9.770799999999843e-05, 9.734699999999763e-05, 9.773600000000104e-05, 9.765299999999963e-05, 9.801400000000043e-05, 9.76669999999992e-05, 9.727800000000272e-05, 9.740299999999938e-05, 9.793000000000301e-05, 9.726399999999968e-05, 9.711100000000042e-05, 9.80410000000001e-05, 9.708300000000128e-05, 9.762500000000049e-05, 9.72219999999975e-05, 9.769499999999834e-05, 9.765299999999963e-05, 9.751399999999993e-05, 9.791699999999945e-05, 9.71799999999988e-05, 9.722200000000097e-05, 9.779199999999932e-05, 9.706899999999824e-05, 9.769399999999887e-05, 9.726399999999968e-05, 9.725000000000011e-05, 9.729199999999882e-05, 9.726399999999968e-05, 9.793099999999902e-05, 9.763900000000006e-05, 9.71660000000027e-05, 9.723600000000054e-05, 9.790299999999988e-05, 9.741699999999895e-05, 9.709699999999738e-05, 9.779199999999932e-05, 9.777799999999975e-05, 9.750000000000036e-05, 9.71669999999987e-05]</msg>
<status status="PASS" starttime="20201112 09:44:02.761" endtime="20201112 09:44:02.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.749" endtime="20201112 09:44:02.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.774" endtime="20201112 09:44:02.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:02.782" endtime="20201112 09:44:02.804"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.778" endtime="20201112 09:44:02.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.769" endtime="20201112 09:44:02.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.331" endtime="20201112 09:44:02.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.330" endtime="20201112 09:44:02.808"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.831" endtime="20201112 09:44:02.855"></status>
</kw>
<msg timestamp="20201112 09:44:02.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.828" endtime="20201112 09:44:02.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.858" endtime="20201112 09:44:02.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.865" endtime="20201112 09:44:02.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.821" endtime="20201112 09:44:02.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.815" endtime="20201112 09:44:02.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.889" endtime="20201112 09:44:03.228"></status>
</kw>
<msg timestamp="20201112 09:44:03.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043069542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043168333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:02.885" endtime="20201112 09:44:03.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043069542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043168333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.238" endtime="20201112 09:44:03.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.257" endtime="20201112 09:44:03.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.878" endtime="20201112 09:44:03.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.873" endtime="20201112 09:44:03.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:03.275" level="INFO">${RESULT} = [{'time': 0.043168333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.879100000000085e-05, 'source_diff': 9.879100000000085e-05}, {'time': 0.043284361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:03.266" endtime="20201112 09:44:03.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:03.307" level="INFO">${ACCURACY} = {'time': [0.043168333, 0.043284361, 0.043394361, 0.043503375, 0.043609431, 0.043715403, 0.043829472, 0.043935417, 0.044047444, 0.044159472, 0.0442655, 0.044380486, 0.044486528, 0.044602486, 0.04471551...</msg>
<status status="PASS" starttime="20201112 09:44:03.277" endtime="20201112 09:44:03.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.318" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 09:44:03.316" endtime="20201112 09:44:03.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.324" level="INFO">VALUE: [9.879100000000085e-05, 9.884699999999913e-05, 9.833299999999906e-05, 9.856899999999974e-05, 9.831999999999896e-05, 9.870900000000238e-05, 9.818000000000326e-05, 9.863899999999759e-05, 9.817999999999633e-05, 9.8415999999997e-05, 9.851400000000093e-05, 9.829199999999982e-05, 9.866699999999673e-05, 9.865299999999716e-05, 9.855599999999964e-05, 9.818100000000274e-05, 9.823600000000154e-05, 9.83059999999994e-05, 9.867999999999683e-05, 9.818000000000326e-05, 9.826399999999375e-05, 9.876400000000118e-05, 9.840300000000385e-05, 9.834699999999863e-05, 9.881899999999999e-05, 9.869499999999587e-05, 9.866699999999673e-05, 9.815199999999719e-05, 9.815200000000412e-05, 9.873600000000204e-05, 9.805499999999967e-05, 9.866699999999673e-05, 9.880500000000042e-05, 9.858299999999931e-05, 9.895800000000315e-05, 9.850000000000136e-05, 9.838900000000428e-05, 9.879200000000032e-05, 9.901400000000143e-05, 9.894399999999665e-05, 9.875000000000161e-05, 9.892999999999708e-05, 9.811099999999795e-05, 9.856899999999974e-05, 9.823600000000154e-05, 9.808299999999881e-05, 9.816700000000317e-05, 9.891700000000392e-05, 9.809800000000479e-05, 9.807000000000565e-05]</msg>
<status status="PASS" starttime="20201112 09:44:03.321" endtime="20201112 09:44:03.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.309" endtime="20201112 09:44:03.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.333" endtime="20201112 09:44:03.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:03.342" endtime="20201112 09:44:03.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.338" endtime="20201112 09:44:03.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.329" endtime="20201112 09:44:03.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.810" endtime="20201112 09:44:03.368"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.809" endtime="20201112 09:44:03.368"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.391" endtime="20201112 09:44:03.414"></status>
</kw>
<msg timestamp="20201112 09:44:03.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.388" endtime="20201112 09:44:03.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.417" endtime="20201112 09:44:03.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.424" endtime="20201112 09:44:03.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.381" endtime="20201112 09:44:03.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.375" endtime="20201112 09:44:03.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.448" endtime="20201112 09:44:03.787"></status>
</kw>
<msg timestamp="20201112 09:44:03.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042670264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042769319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.445" endtime="20201112 09:44:03.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042670264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042769319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.797" endtime="20201112 09:44:03.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.816" endtime="20201112 09:44:03.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.437" endtime="20201112 09:44:03.821"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.432" endtime="20201112 09:44:03.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:03.833" level="INFO">${RESULT} = [{'time': 0.042769319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.905500000000067e-05, 'source_diff': 9.905500000000067e-05}, {'time': 0.042880347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:03.824" endtime="20201112 09:44:03.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:03.867" level="INFO">${ACCURACY} = {'time': [0.042769319, 0.042880347, 0.042998361, 0.043109361, 0.043223389, 0.043341375, 0.043447403, 0.043554417, 0.043670403, 0.043786417, 0.043895458, 0.044012486, 0.044126486, 0.044233472, 0.044341...</msg>
<status status="PASS" starttime="20201112 09:44:03.836" endtime="20201112 09:44:03.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.878" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 09:44:03.876" endtime="20201112 09:44:03.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.884" level="INFO">VALUE: [9.905500000000067e-05, 9.99159999999985e-05, 9.92359999999956e-05, 9.908299999999981e-05, 9.98609999999997e-05, 9.98609999999997e-05, 9.997200000000372e-05, 9.990299999999841e-05, 9.929200000000082e-05, 9.965299999999816e-05, 9.915199999999819e-05, 9.994400000000458e-05, 9.940299999999791e-05, 9.968000000000476e-05, 9.958300000000031e-05, 9.916700000000417e-05, 9.987499999999927e-05, 9.919500000000331e-05, 0.00010006900000000124, 9.995899999999669e-05, 9.997299999999626e-05, 9.91939999999969e-05, 9.925000000000211e-05, 9.908299999999981e-05, 9.9415999999998e-05, 0.00010005500000000167, 9.959699999999988e-05, 9.933399999999953e-05, 9.93609999999992e-05, 9.994499999999712e-05, 9.975000000000261e-05, 9.952699999999509e-05, 9.98609999999997e-05, 9.922200000000297e-05, 9.93060000000004e-05, 9.929200000000082e-05, 9.930500000000092e-05, 9.91809999999968e-05, 9.926399999999475e-05, 9.973600000000304e-05, 9.931999999999996e-05, 9.98609999999997e-05, 0.00010001400000000243, 9.998599999999636e-05, 9.911099999999895e-05, 0.00010005500000000167, 9.908299999999981e-05, 9.938900000000528e-05, 9.962499999999902e-05, 9.997199999999679e-05]</msg>
<status status="PASS" starttime="20201112 09:44:03.881" endtime="20201112 09:44:03.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.869" endtime="20201112 09:44:03.887"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.894" endtime="20201112 09:44:03.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:03.902" endtime="20201112 09:44:03.924"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.898" endtime="20201112 09:44:03.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.889" endtime="20201112 09:44:03.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.370" endtime="20201112 09:44:03.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.369" endtime="20201112 09:44:03.928"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.952" endtime="20201112 09:44:03.974"></status>
</kw>
<msg timestamp="20201112 09:44:03.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.948" endtime="20201112 09:44:03.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.978" endtime="20201112 09:44:03.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.984" endtime="20201112 09:44:03.988"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.941" endtime="20201112 09:44:03.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.935" endtime="20201112 09:44:03.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.008" endtime="20201112 09:44:04.344"></status>
</kw>
<msg timestamp="20201112 09:44:04.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042496653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042596875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.005" endtime="20201112 09:44:04.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042496653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042596875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.354" endtime="20201112 09:44:04.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.372" endtime="20201112 09:44:04.376"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.997" endtime="20201112 09:44:04.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.993" endtime="20201112 09:44:04.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:04.390" level="INFO">${RESULT} = [{'time': 0.042596875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010022199999999704, 'source_diff': 0.00010022199999999704}, {'time': 0.042712889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:04.381" endtime="20201112 09:44:04.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:04.421" level="INFO">${ACCURACY} = {'time': [0.042596875, 0.042712889, 0.042827903, 0.042933917, 0.043046917, 0.043154931, 0.043263958, 0.043378986, 0.043494986, 0.043602986, 0.043710014, 0.043820028, 0.043934014, 0.044042028, 0.044150...</msg>
<status status="PASS" starttime="20201112 09:44:04.392" endtime="20201112 09:44:04.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.433" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 09:44:04.429" endtime="20201112 09:44:04.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.438" level="INFO">VALUE: [0.00010022199999999704, 0.00010079199999999539, 0.00010062500000000002, 0.00010016700000000517, 0.00010081999999999453, 0.00010029200000000182, 0.00010066599999999926, 0.00010079200000000232, 0.00010079200000000232, 0.00010043000000000551, 0.00010097199999999779, 0.00010040299999999891, 0.00010041699999999848, 0.00010041699999999848, 0.00010067999999999883, 0.0001007359999999971, 0.00010042999999999858, 0.00010084700000000113, 0.00010052700000000303, 0.00010076399999999625, 0.00010030500000000192, 0.00010076399999999625, 0.00010009700000000038, 0.00010066599999999926, 0.00010029200000000182, 0.00010091699999999898, 0.0001008480000000006, 0.00010049999999999643, 0.00010015299999999866, 0.000101028000000003, 0.00010031900000000149, 0.00010033400000000053, 0.00010023600000000354, 0.00010029199999999489, 0.00010024999999999618, 0.0001007359999999971, 0.00010072299999999701, 0.00010029099999999541, 0.00010033300000000106, 0.00010074999999999668, 0.00010027800000000225, 0.00010040299999999891, 0.00010062500000000002, 0.00010094499999999812, 0.00010051400000000293, 0.00010020899999999694, 0.00010093099999999855, 0.00010024999999999618, 0.00010075000000000361, 0.00010067999999999883]</msg>
<status status="PASS" starttime="20201112 09:44:04.435" endtime="20201112 09:44:04.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.422" endtime="20201112 09:44:04.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.448" endtime="20201112 09:44:04.451"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:04.457" endtime="20201112 09:44:04.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.453" endtime="20201112 09:44:04.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.444" endtime="20201112 09:44:04.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.931" endtime="20201112 09:44:04.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.929" endtime="20201112 09:44:04.483"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.506" endtime="20201112 09:44:04.529"></status>
</kw>
<msg timestamp="20201112 09:44:04.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:04.503" endtime="20201112 09:44:04.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:04.533" endtime="20201112 09:44:04.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.539" endtime="20201112 09:44:04.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.495" endtime="20201112 09:44:04.545"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.489" endtime="20201112 09:44:04.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.563" endtime="20201112 09:44:04.902"></status>
</kw>
<msg timestamp="20201112 09:44:04.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042625639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042727486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.559" endtime="20201112 09:44:04.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042625639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042727486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.911" endtime="20201112 09:44:04.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.930" endtime="20201112 09:44:04.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.552" endtime="20201112 09:44:04.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.547" endtime="20201112 09:44:04.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:04.947" level="INFO">${RESULT} = [{'time': 0.042727486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010184700000000213, 'source_diff': 0.00010184700000000213}, {'time': 0.042834458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:04.938" endtime="20201112 09:44:04.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:04.978" level="INFO">${ACCURACY} = {'time': [0.042727486, 0.042834458, 0.042951417, 0.043070486, 0.043186458, 0.043296514, 0.043409486, 0.043517514, 0.043627528, 0.043741514, 0.043854542, 0.043969528, 0.044089542, 0.044203569, 0.044322...</msg>
<status status="PASS" starttime="20201112 09:44:04.949" endtime="20201112 09:44:04.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.989" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 09:44:04.987" endtime="20201112 09:44:04.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.995" level="INFO">VALUE: [0.00010184700000000213, 0.0001011939999999989, 0.00010124999999999718, 0.00010127799999999632, 0.00010180499999999648, 0.00010123600000000454, 0.0001010689999999953, 0.00010190300000000041, 0.00010166699999999973, 0.00010105600000000214, 0.00010190300000000041, 0.00010141699999999948, 0.00010157000000000221, 0.00010151299999999752, 0.00010108300000000181, 0.00010112500000000052, 0.00010190300000000041, 0.00010112500000000052, 0.00010112499999999358, 0.00010109700000000138, 0.00010174999999999768, 0.00010187500000000127, 0.00010161100000000145, 0.00010123700000000402, 0.00010148599999999786, 0.00010180500000000342, 0.0001017359999999981, 0.00010183300000000256, 0.00010162500000000102, 0.00010158400000000178, 0.00010120799999999847, 0.00010125000000000411, 0.0001019160000000005, 0.00010165200000000069, 0.00010176299999999777, 0.0001019160000000005, 0.00010106900000000224, 0.00010190300000000041, 0.00010188900000000084, 0.00010184699999999519, 0.00010137500000000077, 0.00010193099999999955, 0.00010105600000000214, 0.00010127799999999632, 0.00010163900000000059, 0.00010190300000000041, 0.00010150000000000436, 0.00010176399999999725, 0.00010137500000000077, 0.00010129199999999589]</msg>
<status status="PASS" starttime="20201112 09:44:04.992" endtime="20201112 09:44:04.998"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.980" endtime="20201112 09:44:04.999"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.006" endtime="20201112 09:44:05.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:05.014" endtime="20201112 09:44:05.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.010" endtime="20201112 09:44:05.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.001" endtime="20201112 09:44:05.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.485" endtime="20201112 09:44:05.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.484" endtime="20201112 09:44:05.040"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.064" endtime="20201112 09:44:05.086"></status>
</kw>
<msg timestamp="20201112 09:44:05.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.060" endtime="20201112 09:44:05.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.090" endtime="20201112 09:44:05.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.096" endtime="20201112 09:44:05.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.053" endtime="20201112 09:44:05.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.047" endtime="20201112 09:44:05.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.120" endtime="20201112 09:44:05.457"></status>
</kw>
<msg timestamp="20201112 09:44:05.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042617125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042719819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.117" endtime="20201112 09:44:05.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042617125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042719819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.466" endtime="20201112 09:44:05.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.485" endtime="20201112 09:44:05.489"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.110" endtime="20201112 09:44:05.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.105" endtime="20201112 09:44:05.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:05.503" level="INFO">${RESULT} = [{'time': 0.042719819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001026940000000004, 'source_diff': 0.0001026940000000004}, {'time': 0.042837847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:05.494" endtime="20201112 09:44:05.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:05.533" level="INFO">${ACCURACY} = {'time': [0.042719819, 0.042837847, 0.042951833, 0.043064861, 0.043176861, 0.043285889, 0.043401889, 0.043514903, 0.043623903, 0.043739986, 0.043852931, 0.043966972, 0.044081986, 0.044194972, 0.044306...</msg>
<status status="PASS" starttime="20201112 09:44:05.505" endtime="20201112 09:44:05.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.544" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 09:44:05.542" endtime="20201112 09:44:05.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.550" level="INFO">VALUE: [0.0001026940000000004, 0.00010215300000000066, 0.00010249999999999843, 0.00010300000000000586, 0.00010261099999999551, 0.00010274999999999868, 0.00010265300000000116, 0.00010229200000000382, 0.00010224999999999818, 0.0001025280000000045, 0.0001025559999999967, 0.0001029160000000015, 0.00010291699999999404, 0.00010234699999999569, 0.0001028889999999949, 0.00010297199999999979, 0.00010213900000000109, 0.00010236099999999526, 0.00010295899999999969, 0.0001027359999999991, 0.00010212499999999458, 0.00010227699999999784, 0.000102513999999998, 0.00010241700000000048, 0.00010265300000000116, 0.00010279200000000432, 0.00010252799999999757, 0.00010276399999999825, 0.00010266700000000073, 0.00010266700000000073, 0.00010255499999999723, 0.0001028889999999949, 0.00010287500000000227, 0.0001020689999999963, 0.00010202799999999707, 0.00010227799999999732, 0.00010258299999999637, 0.00010224999999999818, 0.00010240300000000091, 0.0001021939999999999, 0.00010266599999999432, 0.00010218000000000033, 0.00010224999999999818, 0.00010266599999999432, 0.00010215300000000066, 0.0001027359999999991, 0.0001020559999999962, 0.00010213899999999415, 0.00010245899999999919, 0.00010281899999999705]</msg>
<status status="PASS" starttime="20201112 09:44:05.547" endtime="20201112 09:44:05.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.535" endtime="20201112 09:44:05.553"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.560" endtime="20201112 09:44:05.564"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:05.570" endtime="20201112 09:44:05.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.565" endtime="20201112 09:44:05.593"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.555" endtime="20201112 09:44:05.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.043" endtime="20201112 09:44:05.596"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.041" endtime="20201112 09:44:05.596"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.619" endtime="20201112 09:44:05.642"></status>
</kw>
<msg timestamp="20201112 09:44:05.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.616" endtime="20201112 09:44:05.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.645" endtime="20201112 09:44:05.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.652" endtime="20201112 09:44:05.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.608" endtime="20201112 09:44:05.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.602" endtime="20201112 09:44:05.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.676" endtime="20201112 09:44:06.007"></status>
</kw>
<msg timestamp="20201112 09:44:06.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042635833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042739056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.672" endtime="20201112 09:44:06.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042635833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042739056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:06.011" endtime="20201112 09:44:06.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.019" endtime="20201112 09:44:06.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.665" endtime="20201112 09:44:06.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.660" endtime="20201112 09:44:06.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:06.027" level="INFO">${RESULT} = [{'time': 0.042739056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010322299999999951, 'source_diff': 0.00010322299999999951}, {'time': 0.042860069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:06.023" endtime="20201112 09:44:06.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:06.041" level="INFO">${ACCURACY} = {'time': [0.042739056, 0.042860069, 0.042978111, 0.043090111, 0.043200125, 0.043322139, 0.043441153, 0.043557153, 0.043672167, 0.043790181, 0.043907181, 0.044029194, 0.044149208, 0.044267222, 0.044389...</msg>
<status status="PASS" starttime="20201112 09:44:06.028" endtime="20201112 09:44:06.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.047" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 09:44:06.046" endtime="20201112 09:44:06.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.050" level="INFO">VALUE: [0.00010322299999999951, 0.0001036940000000014, 0.00010341700000000148, 0.0001038610000000037, 0.0001035559999999977, 0.0001036810000000013, 0.00010309700000000338, 0.00010347200000000029, 0.00010354199999999814, 0.0001033889999999954, 0.00010373700000000652, 0.00010315200000000219, 0.0001030410000000051, 0.00010374999999999968, 0.00010322200000000004, 0.00010324999999999918, 0.00010341700000000148, 0.00010401300000000002, 0.0001031810000000008, 0.00010366599999999532, 0.00010358299999999737, 0.00010393000000000208, 0.00010343100000000105, 0.00010391700000000198, 0.00010388900000000284, 0.00010359700000000388, 0.00010318099999999386, 0.00010394500000000112, 0.00010329200000000482, 0.000103513999999999, 0.00010376399999999925, 0.00010316600000000176, 0.00010380499999999848, 0.00010399999999999993, 0.00010362500000000302, 0.00010340300000000191, 0.00010401300000000002, 0.00010350000000000636, 0.00010318000000000133, 0.00010348599999999986, 0.00010309699999999644, 0.00010386099999999676, 0.0001030689999999973, 0.0001033610000000032, 0.0001030689999999973, 0.00010366700000000173, 0.00010366700000000173, 0.00010365299999999522, 0.00010394499999999418, 0.00010368000000000183]</msg>
<status status="PASS" starttime="20201112 09:44:06.048" endtime="20201112 09:44:06.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.042" endtime="20201112 09:44:06.057"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.060" endtime="20201112 09:44:06.061"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:06.064" endtime="20201112 09:44:06.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.062" endtime="20201112 09:44:06.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.058" endtime="20201112 09:44:06.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.598" endtime="20201112 09:44:06.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.597" endtime="20201112 09:44:06.086"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.097" endtime="20201112 09:44:06.117"></status>
</kw>
<msg timestamp="20201112 09:44:06.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:06.096" endtime="20201112 09:44:06.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:06.119" endtime="20201112 09:44:06.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.122" endtime="20201112 09:44:06.124"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.092" endtime="20201112 09:44:06.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.089" endtime="20201112 09:44:06.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.133" endtime="20201112 09:44:06.419"></status>
</kw>
<msg timestamp="20201112 09:44:06.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025878611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025983639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:06.131" endtime="20201112 09:44:06.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025878611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025983639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:06.424" endtime="20201112 09:44:06.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.432" endtime="20201112 09:44:06.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.128" endtime="20201112 09:44:06.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.126" endtime="20201112 09:44:06.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:06.440" level="INFO">${RESULT} = [{'time': 0.025983639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010502800000000007, 'source_diff': 0.00010502800000000007}, {'time': 0.026104653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:06.436" endtime="20201112 09:44:06.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:06.453" level="INFO">${ACCURACY} = {'time': [0.025983639, 0.026104653, 0.026221653, 0.026333653, 0.026455667, 0.026571736, 0.026688694, 0.026808708, 0.026931722, 0.027054736, 0.027168764, 0.027289764, 0.027407819, 0.027518792, 0.027633...</msg>
<status status="PASS" starttime="20201112 09:44:06.441" endtime="20201112 09:44:06.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.459" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 09:44:06.458" endtime="20201112 09:44:06.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.461" level="INFO">VALUE: [0.00010502800000000007, 0.00010495899999999822, 0.0001040420000000021, 0.00010440299999999944, 0.00010480599999999896, 0.00010479199999999939, 0.00010450000000000043, 0.00010415199999999972, 0.00010476400000000025, 0.00010459699999999794, 0.00010505600000000268, 0.00010495800000000222, 0.00010467999999999936, 0.00010409800000000038, 0.00010498700000000083, 0.00010473700000000058, 0.00010492999999999961, 0.00010494399999999918, 0.00010467999999999936, 0.00010490299999999994, 0.00010427800000000279, 0.00010450000000000043, 0.000104416000000003, 0.00010466700000000273, 0.000104514, 0.00010475000000000068, 0.00010465299999999969, 0.00010425000000000018, 0.00010454099999999966, 0.00010504199999999964, 0.00010429199999999889, 0.00010412500000000005, 0.00010493099999999908, 0.00010444500000000162, 0.00010406900000000177, 0.00010419399999999843, 0.00010495800000000222, 0.00010491600000000004, 0.00010442999999999911, 0.00010406900000000177, 0.00010472199999999807, 0.000104820000000002, 0.00010480600000000242, 0.00010481999999999853, 0.00010415199999999972, 0.00010477700000000034, 0.00010465200000000022, 0.00010481899999999905, 0.000104514, 0.0001042360000000006]</msg>
<status status="PASS" starttime="20201112 09:44:06.460" endtime="20201112 09:44:06.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.454" endtime="20201112 09:44:06.463"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.466" endtime="20201112 09:44:06.467"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:06.470" endtime="20201112 09:44:06.490"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.468" endtime="20201112 09:44:06.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.464" endtime="20201112 09:44:06.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.087" endtime="20201112 09:44:06.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.086" endtime="20201112 09:44:06.495"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.520" endtime="20201112 09:44:06.543"></status>
</kw>
<msg timestamp="20201112 09:44:06.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:06.516" endtime="20201112 09:44:06.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:06.547" endtime="20201112 09:44:06.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.554" endtime="20201112 09:44:06.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.509" endtime="20201112 09:44:06.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.501" endtime="20201112 09:44:06.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.577" endtime="20201112 09:44:06.914"></status>
</kw>
<msg timestamp="20201112 09:44:06.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043832278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043937472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:06.574" endtime="20201112 09:44:06.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043832278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043937472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:06.924" endtime="20201112 09:44:06.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.942" endtime="20201112 09:44:06.946"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.567" endtime="20201112 09:44:06.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.562" endtime="20201112 09:44:06.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:06.960" level="INFO">${RESULT} = [{'time': 0.043937472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010519399999999596, 'source_diff': 0.00010519399999999596}, {'time': 0.0440615, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:06.951" endtime="20201112 09:44:06.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:06.990" level="INFO">${ACCURACY} = {'time': [0.043937472, 0.0440615, 0.044179486, 0.044294514, 0.044408514, 0.044521528, 0.044645542, 0.044758556, 0.044879611, 0.044999625, 0.045117639, 0.045228667, 0.045343653, 0.045457625, 0.04556963...</msg>
<status status="PASS" starttime="20201112 09:44:06.962" endtime="20201112 09:44:06.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.002" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 09:44:07.000" endtime="20201112 09:44:07.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.007" level="INFO">VALUE: [0.00010519399999999596, 0.00010520800000000247, 0.00010524999999999424, 0.0001060560000000002, 0.0001058610000000057, 0.00010591699999999704, 0.00010579200000000039, 0.00010540299999999697, 0.00010597200000000279, 0.0001060140000000015, 0.000105514000000001, 0.00010519500000000237, 0.00010561099999999851, 0.00010586099999999876, 0.00010595800000000322, 0.00010555500000000023, 0.00010591599999999757, 0.00010570799999999603, 0.00010566600000000426, 0.00010576400000000125, 0.00010541700000000348, 0.00010543100000000305, 0.00010598599999999542, 0.00010529100000000041, 0.00010579199999999345, 0.00010541599999999707, 0.00010530599999999946, 0.00010579100000000091, 0.00010525000000000118, 0.00010583299999999962, 0.00010593000000000408, 0.00010545900000000219, 0.0001060140000000015, 0.0001057360000000021, 0.00010536099999999826, 0.00010565299999999722, 0.00010548599999999492, 0.0001055559999999997, 0.00010566600000000426, 0.00010515299999999672, 0.00010591699999999704, 0.00010516700000000323, 0.0001055559999999997, 0.00010591699999999704, 0.00010530599999999946, 0.00010508399999999835, 0.00010595899999999575, 0.00010525000000000118, 0.00010517999999999639, 0.0001050689999999993]</msg>
<status status="PASS" starttime="20201112 09:44:07.004" endtime="20201112 09:44:07.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.992" endtime="20201112 09:44:07.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.017" endtime="20201112 09:44:07.020"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:07.026" endtime="20201112 09:44:07.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.022" endtime="20201112 09:44:07.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.013" endtime="20201112 09:44:07.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.497" endtime="20201112 09:44:07.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.496" endtime="20201112 09:44:07.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.067" endtime="20201112 09:44:07.052"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:07.063" endtime="20201112 09:44:07.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.059" endtime="20201112 09:44:07.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.056" endtime="20201112 09:44:07.087"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:13.930" endtime="20201112 09:44:07.088" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:07.106" endtime="20201112 09:44:07.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.103" endtime="20201112 09:44:07.130"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.166" endtime="20201112 09:44:07.190"></status>
</kw>
<msg timestamp="20201112 09:44:07.192" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.162" endtime="20201112 09:44:07.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.198" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.194" endtime="20201112 09:44:07.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.205" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:44:07.201" endtime="20201112 09:44:07.206"></status>
</kw>
<status status="FAIL" starttime="20201112 09:44:07.155" endtime="20201112 09:44:07.208"></status>
</kw>
<status status="FAIL" starttime="20201112 09:44:07.148" endtime="20201112 09:44:07.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.145" endtime="20201112 09:44:07.210"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:44:07.218" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:44:07.217" endtime="20201112 09:44:07.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.212" endtime="20201112 09:44:07.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.144" endtime="20201112 09:44:07.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.142" endtime="20201112 09:44:07.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.222" endtime="20201112 09:44:07.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.136" endtime="20201112 09:44:07.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.131" endtime="20201112 09:44:07.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.100" endtime="20201112 09:44:07.229"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.256" endtime="20201112 09:44:07.275"></status>
</kw>
<msg timestamp="20201112 09:44:07.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.252" endtime="20201112 09:44:07.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.279" endtime="20201112 09:44:07.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.285" endtime="20201112 09:44:07.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.244" endtime="20201112 09:44:07.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.238" endtime="20201112 09:44:07.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.311" endtime="20201112 09:44:07.659"></status>
</kw>
<msg timestamp="20201112 09:44:07.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143419292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143424417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.306" endtime="20201112 09:44:07.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143419292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143424417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.668" endtime="20201112 09:44:07.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.687" endtime="20201112 09:44:07.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.298" endtime="20201112 09:44:07.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.293" endtime="20201112 09:44:07.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:07.705" level="INFO">${RESULT} = [{'time': 0.143424417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.124999999994717e-06, 'source_diff': 5.124999999994717e-06}, {'time': 0.143439514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:07.696" endtime="20201112 09:44:07.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:07.736" level="INFO">${ACCURACY} = {'time': [0.143424417, 0.143439514, 0.143458417, 0.143468708, 0.143488556, 0.143507764, 0.143521778, 0.143536806, 0.143545625, 0.143557736, 0.143569347, 0.143587458, 0.143604375, 0.143619569, 0.143630...</msg>
<status status="PASS" starttime="20201112 09:44:07.707" endtime="20201112 09:44:07.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.747" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 09:44:07.745" endtime="20201112 09:44:07.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.753" level="INFO">VALUE: [5.124999999994717e-06, 5.152999999979979e-06, 5.611000000016464e-06, 5.097000000009455e-06, 5.124999999994717e-06, 6.097000000010455e-06, 6.152999999980979e-06, 6.138999999988348e-06, 5.139000000015104e-06, 6.111000000003086e-06, 5.625000000009095e-06, 5.665999999987514e-06, 5.097000000009455e-06, 5.66600000001527e-06, 5.596999999996077e-06, 5.625000000009095e-06, 5.639000000001726e-06, 5.611000000016464e-06, 5.124999999994717e-06, 5.625000000009095e-06, 5.639000000001726e-06, 5.625000000009095e-06, 6.124999999995717e-06, 5.138999999987348e-06, 5.611999999988182e-06, 5.1379999999878745e-06, 5.138999999987348e-06, 5.139000000015104e-06, 5.624999999981339e-06, 5.611000000016464e-06, 5.1109999999743305e-06, 5.610999999988708e-06, 5.139000000015104e-06, 5.625000000009095e-06, 5.638000000002252e-06, 5.125000000022473e-06, 5.208999999978259e-06, 6.180000000022279e-06, 5.652999999994357e-06, 5.625000000009095e-06, 5.625000000009095e-06, 5.625000000009095e-06, 5.139000000015104e-06, 5.139000000015104e-06, 5.596999999996077e-06, 5.638000000002252e-06, 5.111000000002086e-06, 5.610999999988708e-06, 5.651999999994883e-06, 5.624999999981339e-06]</msg>
<status status="PASS" starttime="20201112 09:44:07.750" endtime="20201112 09:44:07.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.738" endtime="20201112 09:44:07.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.762" endtime="20201112 09:44:07.765"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:07.771" endtime="20201112 09:44:07.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.766" endtime="20201112 09:44:07.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.758" endtime="20201112 09:44:07.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.234" endtime="20201112 09:44:07.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.232" endtime="20201112 09:44:07.799"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.826" endtime="20201112 09:44:07.844"></status>
</kw>
<msg timestamp="20201112 09:44:07.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.822" endtime="20201112 09:44:07.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.847" endtime="20201112 09:44:07.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.854" endtime="20201112 09:44:07.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.814" endtime="20201112 09:44:07.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.808" endtime="20201112 09:44:07.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.878" endtime="20201112 09:44:08.221"></status>
</kw>
<msg timestamp="20201112 09:44:08.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047671597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047678222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.875" endtime="20201112 09:44:08.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047671597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047678222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:08.231" endtime="20201112 09:44:08.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.250" endtime="20201112 09:44:08.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.867" endtime="20201112 09:44:08.256"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.862" endtime="20201112 09:44:08.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:08.268" level="INFO">${RESULT} = [{'time': 0.047678222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.624999999996217e-06, 'source_diff': 6.624999999996217e-06}, {'time': 0.04769325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:44:08.259" endtime="20201112 09:44:08.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:08.302" level="INFO">${ACCURACY} = {'time': [0.047678222, 0.04769325, 0.047713375, 0.047722361, 0.047741361, 0.047750167, 0.047763389, 0.047772167, 0.047783528, 0.047792444, 0.047801236, 0.047810514, 0.047827208, 0.047840458, 0.0478500...</msg>
<status status="PASS" starttime="20201112 09:44:08.271" endtime="20201112 09:44:08.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.313" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 09:44:08.311" endtime="20201112 09:44:08.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.319" level="INFO">VALUE: [6.624999999996217e-06, 6.125000000002656e-06, 6.639000000002726e-06, 6.138999999995287e-06, 6.139000000002226e-06, 6.153000000001796e-06, 6.639000000002726e-06, 6.110999999996147e-06, 6.2090000000000756e-06, 6.138000000002752e-06, 6.124999999995717e-06, 6.624999999996217e-06, 6.111000000003086e-06, 6.611000000003586e-06, 6.125000000002656e-06, 6.111999999995621e-06, 6.139000000002226e-06, 6.624999999996217e-06, 6.124999999995717e-06, 6.110999999996147e-06, 6.125000000002656e-06, 6.125000000002656e-06, 6.679999999995023e-06, 6.639000000002726e-06, 6.125000000002656e-06, 6.110999999996147e-06, 6.59800000000349e-06, 6.666999999994927e-06, 6.625000000003156e-06, 7.125000000003656e-06, 6.111000000003086e-06, 7.111999999996621e-06, 6.665999999995453e-06, 7.124999999996717e-06, 6.680000000001962e-06, 6.652999999995357e-06, 6.638000000003252e-06, 6.125000000002656e-06, 6.625000000003156e-06, 6.639000000002726e-06, 7.110999999997147e-06, 6.625000000003156e-06, 6.139000000002226e-06, 6.639000000002726e-06, 6.555999999997841e-06, 7.124999999996717e-06, 6.125000000002656e-06, 6.639000000002726e-06, 6.138000000002752e-06, 6.138999999995287e-06]</msg>
<status status="PASS" starttime="20201112 09:44:08.315" endtime="20201112 09:44:08.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.304" endtime="20201112 09:44:08.321"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.329" endtime="20201112 09:44:08.331"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:08.337" endtime="20201112 09:44:08.359"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.333" endtime="20201112 09:44:08.361"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.324" endtime="20201112 09:44:08.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.802" endtime="20201112 09:44:08.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.801" endtime="20201112 09:44:08.363"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.386" endtime="20201112 09:44:08.406"></status>
</kw>
<msg timestamp="20201112 09:44:08.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:08.383" endtime="20201112 09:44:08.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:08.409" endtime="20201112 09:44:08.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.416" endtime="20201112 09:44:08.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.376" endtime="20201112 09:44:08.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.370" endtime="20201112 09:44:08.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.442" endtime="20201112 09:44:08.779"></status>
</kw>
<msg timestamp="20201112 09:44:08.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042432722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042440431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:08.438" endtime="20201112 09:44:08.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042432722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042440431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:08.789" endtime="20201112 09:44:08.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.808" endtime="20201112 09:44:08.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.430" endtime="20201112 09:44:08.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.425" endtime="20201112 09:44:08.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:08.826" level="INFO">${RESULT} = [{'time': 0.042440431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.709000000001576e-06, 'source_diff': 7.709000000001576e-06}, {'time': 0.042454111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:08.817" endtime="20201112 09:44:08.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:08.858" level="INFO">${ACCURACY} = {'time': [0.042440431, 0.042454111, 0.042472125, 0.042488222, 0.0425105, 0.042529542, 0.042552125, 0.042571583, 0.042585319, 0.042608667, 0.042626375, 0.042647292, 0.042670569, 0.042680264, 0.04270252...</msg>
<status status="PASS" starttime="20201112 09:44:08.828" endtime="20201112 09:44:08.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.870" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 09:44:08.868" endtime="20201112 09:44:08.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.876" level="INFO">VALUE: [7.709000000001576e-06, 7.125000000003656e-06, 7.6109999999976474e-06, 7.6109999999976474e-06, 7.124999999996717e-06, 7.638999999996787e-06, 7.639000000003726e-06, 7.639000000003726e-06, 7.097000000004516e-06, 8.195000000002506e-06, 7.625000000004156e-06, 7.625000000004156e-06, 8.110999999998147e-06, 7.667000000002866e-06, 7.110999999997147e-06, 7.639000000003726e-06, 7.139000000003226e-06, 7.652999999996357e-06, 7.61200000000406e-06, 7.097999999997051e-06, 7.624999999997217e-06, 7.139000000003226e-06, 7.638999999996787e-06, 7.638999999996787e-06, 7.153000000002796e-06, 7.138999999996287e-06, 7.097999999997051e-06, 7.639000000003726e-06, 7.638999999996787e-06, 7.681000000002436e-06, 7.6109999999976474e-06, 7.139000000003226e-06, 7.125000000003656e-06, 7.625000000004156e-06, 7.625000000004156e-06, 8.069999999998911e-06, 7.57000000000535e-06, 7.652000000003822e-06, 8.124999999997717e-06, 7.625000000004156e-06, 7.652999999996357e-06, 7.639000000003726e-06, 7.138999999996287e-06, 7.166999999995427e-06, 7.639000000003726e-06, 7.139000000003226e-06, 8.138999999997287e-06, 7.139000000003226e-06, 7.1379999999968136e-06, 7.625000000004156e-06]</msg>
<status status="PASS" starttime="20201112 09:44:08.873" endtime="20201112 09:44:08.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.861" endtime="20201112 09:44:08.880"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.886" endtime="20201112 09:44:08.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:08.895" endtime="20201112 09:44:08.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.891" endtime="20201112 09:44:08.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.882" endtime="20201112 09:44:08.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.365" endtime="20201112 09:44:08.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.364" endtime="20201112 09:44:08.921"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.945" endtime="20201112 09:44:08.962"></status>
</kw>
<msg timestamp="20201112 09:44:08.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:08.941" endtime="20201112 09:44:08.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:08.966" endtime="20201112 09:44:08.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.972" endtime="20201112 09:44:08.976"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.934" endtime="20201112 09:44:08.978"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.928" endtime="20201112 09:44:08.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.996" endtime="20201112 09:44:09.334"></status>
</kw>
<msg timestamp="20201112 09:44:09.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042700917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042709042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:08.993" endtime="20201112 09:44:09.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042700917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042709042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.344" endtime="20201112 09:44:09.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.363" endtime="20201112 09:44:09.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.985" endtime="20201112 09:44:09.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.981" endtime="20201112 09:44:09.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:09.381" level="INFO">${RESULT} = [{'time': 0.042709042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.125000000004656e-06, 'source_diff': 8.125000000004656e-06}, {'time': 0.042722194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:09.372" endtime="20201112 09:44:09.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:09.413" level="INFO">${ACCURACY} = {'time': [0.042709042, 0.042722194, 0.042740306, 0.042753139, 0.042764222, 0.042779181, 0.042793361, 0.042810361, 0.042821167, 0.042831931, 0.042851347, 0.042864097, 0.042881014, 0.042898972, 0.042917...</msg>
<status status="PASS" starttime="20201112 09:44:09.383" endtime="20201112 09:44:09.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.425" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 09:44:09.422" endtime="20201112 09:44:09.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.430" level="INFO">VALUE: [8.125000000004656e-06, 8.637999999998314e-06, 8.124999999997717e-06, 8.111000000005086e-06, 8.610999999998648e-06, 8.138999999997287e-06, 8.625000000005156e-06, 9.124999999998717e-06, 8.138999999997287e-06, 8.124999999997717e-06, 8.638999999997787e-06, 8.638999999997787e-06, 8.639000000004726e-06, 8.638999999997787e-06, 8.625000000005156e-06, 8.611999999998121e-06, 8.193999999996093e-06, 8.11200000000456e-06, 8.610999999998648e-06, 8.624999999998217e-06, 8.125000000004656e-06, 8.583999999998981e-06, 8.611000000005586e-06, 8.138999999997287e-06, 8.152999999996857e-06, 8.638999999997787e-06, 8.639000000004726e-06, 8.138999999997287e-06, 8.624999999998217e-06, 8.624999999998217e-06, 8.124999999997717e-06, 8.152999999996857e-06, 8.652999999997357e-06, 9.138999999998287e-06, 8.611999999998121e-06, 8.610999999998648e-06, 8.624999999998217e-06, 8.624999999998217e-06, 8.639000000004726e-06, 8.124999999997717e-06, 8.639000000004726e-06, 8.638999999997787e-06, 8.624999999998217e-06, 8.610999999998648e-06, 8.124999999997717e-06, 8.638999999997787e-06, 8.139000000004226e-06, 8.166000000003892e-06, 8.195000000002506e-06, 8.125000000004656e-06]</msg>
<status status="PASS" starttime="20201112 09:44:09.427" endtime="20201112 09:44:09.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.415" endtime="20201112 09:44:09.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.440" endtime="20201112 09:44:09.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:09.448" endtime="20201112 09:44:09.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.444" endtime="20201112 09:44:09.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.435" endtime="20201112 09:44:09.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.923" endtime="20201112 09:44:09.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.922" endtime="20201112 09:44:09.474"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.498" endtime="20201112 09:44:09.516"></status>
</kw>
<msg timestamp="20201112 09:44:09.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.494" endtime="20201112 09:44:09.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.519" endtime="20201112 09:44:09.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.526" endtime="20201112 09:44:09.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.487" endtime="20201112 09:44:09.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.481" endtime="20201112 09:44:09.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.550" endtime="20201112 09:44:09.862"></status>
</kw>
<msg timestamp="20201112 09:44:09.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042553486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042562611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.546" endtime="20201112 09:44:09.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042553486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042562611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.866" endtime="20201112 09:44:09.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.875" endtime="20201112 09:44:09.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.539" endtime="20201112 09:44:09.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.534" endtime="20201112 09:44:09.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:09.884" level="INFO">${RESULT} = [{'time': 0.042562611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.042576486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:09.879" endtime="20201112 09:44:09.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:09.898" level="INFO">${ACCURACY} = {'time': [0.042562611, 0.042576486, 0.042590722, 0.042612583, 0.042626444, 0.042638306, 0.042659472, 0.042680319, 0.0426965, 0.042716403, 0.042735611, 0.042749653, 0.042767264, 0.042781361, 0.04279654...</msg>
<status status="PASS" starttime="20201112 09:44:09.885" endtime="20201112 09:44:09.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.904" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 09:44:09.903" endtime="20201112 09:44:09.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.907" level="INFO">VALUE: [9.124999999998717e-06, 9.096999999999578e-06, 1.0124999999999718e-05, 9.624999999999218e-06, 9.110999999999148e-06, 9.624999999999218e-06, 9.124999999998717e-06, 9.637999999999314e-06, 9.152999999997857e-06, 9.138999999998287e-06, 9.679999999998024e-06, 9.138999999998287e-06, 9.069999999999911e-06, 9.152999999997857e-06, 9.542000000001272e-06, 9.624999999999218e-06, 9.610999999999648e-06, 9.638999999998787e-06, 9.138999999998287e-06, 9.638999999998787e-06, 9.152000000005323e-06, 9.139000000005226e-06, 9.165999999997954e-06, 1.0124999999999718e-05, 9.110999999999148e-06, 9.166999999997427e-06, 9.111000000006086e-06, 9.610999999999648e-06, 9.624999999999218e-06, 9.679999999998024e-06, 9.638999999998787e-06, 9.138999999998287e-06, 9.638999999998787e-06, 9.624999999999218e-06, 9.097000000006517e-06, 9.624999999999218e-06, 9.124999999998717e-06, 9.597000000000078e-06, 9.651999999998884e-06, 9.152999999997857e-06, 9.638999999998787e-06, 9.125000000005656e-06, 9.637999999999314e-06, 9.638000000006253e-06, 9.680999999997497e-06, 9.653000000005296e-06, 9.138999999998287e-06, 9.638999999998787e-06, 9.139000000005226e-06, 9.638999999998787e-06]</msg>
<status status="PASS" starttime="20201112 09:44:09.905" endtime="20201112 09:44:09.907"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.899" endtime="20201112 09:44:09.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.911" endtime="20201112 09:44:09.913"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:09.915" endtime="20201112 09:44:09.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.913" endtime="20201112 09:44:09.938"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.909" endtime="20201112 09:44:09.939"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.477" endtime="20201112 09:44:09.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.475" endtime="20201112 09:44:09.941"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.964" endtime="20201112 09:44:09.983"></status>
</kw>
<msg timestamp="20201112 09:44:09.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.961" endtime="20201112 09:44:09.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.986" endtime="20201112 09:44:09.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.993" endtime="20201112 09:44:09.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.953" endtime="20201112 09:44:09.998"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.947" endtime="20201112 09:44:10.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.017" endtime="20201112 09:44:10.353"></status>
</kw>
<msg timestamp="20201112 09:44:10.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042906167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042916806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.014" endtime="20201112 09:44:10.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042906167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042916806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.363" endtime="20201112 09:44:10.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.382" endtime="20201112 09:44:10.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.006" endtime="20201112 09:44:10.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.001" endtime="20201112 09:44:10.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:10.400" level="INFO">${RESULT} = [{'time': 0.042916806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.042933917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:10.391" endtime="20201112 09:44:10.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:10.433" level="INFO">${ACCURACY} = {'time': [0.042916806, 0.042933917, 0.042957528, 0.042976556, 0.042989639, 0.043005556, 0.043025569, 0.043042958, 0.043058736, 0.043072653, 0.04309075, 0.043106931, 0.043122931, 0.043144542, 0.0431649...</msg>
<status status="PASS" starttime="20201112 09:44:10.402" endtime="20201112 09:44:10.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.445" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 09:44:10.442" endtime="20201112 09:44:10.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.451" level="INFO">VALUE: [1.0638999999999788e-05, 1.1125000000000718e-05, 1.0124999999999718e-05, 1.0111999999999621e-05, 1.0638999999999788e-05, 1.0124999999999718e-05, 1.0679999999999024e-05, 1.0611000000000648e-05, 1.0625000000000218e-05, 1.0625000000000218e-05, 1.0568999999994999e-05, 1.0625000000000218e-05, 1.0638999999999788e-05, 1.0625000000000218e-05, 1.0625000000000218e-05, 1.0152999999998857e-05, 1.0165999999998954e-05, 1.0679999999999024e-05, 1.0638999999999788e-05, 1.0625000000000218e-05, 1.0070000000000912e-05, 1.0138999999999287e-05, 1.0652999999999357e-05, 1.0625000000000218e-05, 1.0666999999998927e-05, 1.0124999999999718e-05, 1.0611000000000648e-05, 1.0124999999999718e-05, 1.0638999999999788e-05, 1.0138999999999287e-05, 1.0638999999999788e-05, 1.0653000000006296e-05, 1.1097000000001578e-05, 1.0625000000000218e-05, 1.0124999999999718e-05, 1.0625000000000218e-05, 1.0138999999999287e-05, 1.0625000000000218e-05, 1.0625000000000218e-05, 1.0680999999998497e-05, 1.0151999999999384e-05, 1.0638999999999788e-05, 1.1139000000000288e-05, 1.0624999999993279e-05, 1.0124999999999718e-05, 1.0625000000000218e-05, 1.0680999999998497e-05, 1.0598000000000551e-05, 1.0111000000000148e-05, 1.0612000000000121e-05]</msg>
<status status="PASS" starttime="20201112 09:44:10.448" endtime="20201112 09:44:10.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.435" endtime="20201112 09:44:10.454"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.461" endtime="20201112 09:44:10.464"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:10.469" endtime="20201112 09:44:10.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.465" endtime="20201112 09:44:10.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.456" endtime="20201112 09:44:10.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.943" endtime="20201112 09:44:10.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.942" endtime="20201112 09:44:10.495"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.519" endtime="20201112 09:44:10.537"></status>
</kw>
<msg timestamp="20201112 09:44:10.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:10.515" endtime="20201112 09:44:10.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:10.540" endtime="20201112 09:44:10.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.547" endtime="20201112 09:44:10.551"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.508" endtime="20201112 09:44:10.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.502" endtime="20201112 09:44:10.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.571" endtime="20201112 09:44:10.909"></status>
</kw>
<msg timestamp="20201112 09:44:10.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042723167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042735306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.568" endtime="20201112 09:44:10.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042723167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042735306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.919" endtime="20201112 09:44:10.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.939" endtime="20201112 09:44:10.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.560" endtime="20201112 09:44:10.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.555" endtime="20201112 09:44:10.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:10.957" level="INFO">${RESULT} = [{'time': 0.042735306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2139000000001288e-05, 'source_diff': 1.2139000000001288e-05}, {'time': 0.042757333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:10.947" endtime="20201112 09:44:10.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:10.988" level="INFO">${ACCURACY} = {'time': [0.042735306, 0.042757333, 0.042771944, 0.042795194, 0.042809042, 0.042826167, 0.042852931, 0.042873194, 0.042887069, 0.042911403, 0.042932097, 0.042958167, 0.042983278, 0.043006125, 0.043023...</msg>
<status status="PASS" starttime="20201112 09:44:10.959" endtime="20201112 09:44:10.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.999" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 09:44:10.997" endtime="20201112 09:44:11.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.005" level="INFO">VALUE: [1.2139000000001288e-05, 1.1639000000000788e-05, 1.1111000000001148e-05, 1.1652000000000884e-05, 1.1625000000001218e-05, 1.1139000000000288e-05, 1.1611999999994183e-05, 1.1152000000000384e-05, 1.1625000000001218e-05, 1.1680999999999497e-05, 1.1653000000000358e-05, 1.1139000000000288e-05, 1.1625000000001218e-05, 1.1639000000000788e-05, 1.1624999999994279e-05, 1.1125000000000718e-05, 1.1193999999999094e-05, 1.1639000000000788e-05, 1.1179999999999524e-05, 1.1125000000000718e-05, 1.1139000000000288e-05, 1.1110999999994209e-05, 1.1639000000000788e-05, 1.1625000000001218e-05, 1.1166999999999427e-05, 1.1111000000001148e-05, 1.1611000000001648e-05, 1.1125000000000718e-05, 1.2125000000001718e-05, 1.1625000000001218e-05, 1.1583000000002508e-05, 1.1125000000000718e-05, 1.1694999999999067e-05, 1.1111999999993682e-05, 1.1625000000001218e-05, 1.1125000000000718e-05, 1.1124999999993779e-05, 1.2110999999995209e-05, 1.1652000000000884e-05, 1.1125000000000718e-05, 1.1125000000000718e-05, 1.1111000000001148e-05, 1.2139000000001288e-05, 1.1139000000000288e-05, 1.1194999999998567e-05, 1.1125000000000718e-05, 1.1639000000000788e-05, 1.2153000000000858e-05, 1.1125000000000718e-05, 1.1624999999994279e-05]</msg>
<status status="PASS" starttime="20201112 09:44:11.002" endtime="20201112 09:44:11.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.990" endtime="20201112 09:44:11.008"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.015" endtime="20201112 09:44:11.019"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:11.025" endtime="20201112 09:44:11.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.021" endtime="20201112 09:44:11.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.010" endtime="20201112 09:44:11.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.497" endtime="20201112 09:44:11.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.496" endtime="20201112 09:44:11.051"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.074" endtime="20201112 09:44:11.093"></status>
</kw>
<msg timestamp="20201112 09:44:11.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.071" endtime="20201112 09:44:11.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.096" endtime="20201112 09:44:11.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.103" endtime="20201112 09:44:11.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.064" endtime="20201112 09:44:11.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.057" endtime="20201112 09:44:11.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.127" endtime="20201112 09:44:11.463"></status>
</kw>
<msg timestamp="20201112 09:44:11.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042968014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042980667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.123" endtime="20201112 09:44:11.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042968014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042980667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.473" endtime="20201112 09:44:11.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.492" endtime="20201112 09:44:11.496"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.116" endtime="20201112 09:44:11.497"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.111" endtime="20201112 09:44:11.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:11.510" level="INFO">${RESULT} = [{'time': 0.042980667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2653000000001358e-05, 'source_diff': 1.2653000000001358e-05}, {'time': 0.043004986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:11.501" endtime="20201112 09:44:11.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:11.541" level="INFO">${ACCURACY} = {'time': [0.042980667, 0.043004986, 0.043028028, 0.043051972, 0.043068014, 0.043087778, 0.043113806, 0.043134931, 0.043156139, 0.043173722, 0.043190792, 0.043208792, 0.043234028, 0.043260931, 0.043288...</msg>
<status status="PASS" starttime="20201112 09:44:11.512" endtime="20201112 09:44:11.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.552" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 09:44:11.550" endtime="20201112 09:44:11.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.558" level="INFO">VALUE: [1.2653000000001358e-05, 1.2721999999999734e-05, 1.2056000000003342e-05, 1.2125000000001718e-05, 1.2139000000001288e-05, 1.2125000000001718e-05, 1.2083999999995543e-05, 1.2639000000001788e-05, 1.3125000000002718e-05, 1.2652999999994419e-05, 1.2139000000001288e-05, 1.2639000000001788e-05, 1.2167000000000427e-05, 1.2612000000002122e-05, 1.2139000000001288e-05, 1.3139000000002288e-05, 1.2625000000002218e-05, 1.2624999999995279e-05, 1.2639000000001788e-05, 1.2138000000001814e-05, 1.2625000000002218e-05, 1.2139000000001288e-05, 1.2125000000001718e-05, 1.2124999999994779e-05, 1.2639000000001788e-05, 1.2679999999994085e-05, 1.2680000000001024e-05, 1.2125000000001718e-05, 1.2625000000002218e-05, 1.3139000000002288e-05, 1.2666999999993989e-05, 1.3153000000001858e-05, 1.3125000000002718e-05, 1.2139000000001288e-05, 1.2152999999993919e-05, 1.2138999999994349e-05, 1.2125000000001718e-05, 1.2638000000002314e-05, 1.2639000000001788e-05, 1.2139000000001288e-05, 1.2653000000001358e-05, 1.2069999999995973e-05, 1.2639000000001788e-05, 1.2083999999995543e-05, 1.3125000000002718e-05, 1.2625000000002218e-05, 1.2624999999995279e-05, 1.2625000000002218e-05, 1.2125000000001718e-05, 1.2651999999994945e-05]</msg>
<status status="PASS" starttime="20201112 09:44:11.554" endtime="20201112 09:44:11.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.543" endtime="20201112 09:44:11.566"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.573" endtime="20201112 09:44:11.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:11.581" endtime="20201112 09:44:11.603"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.577" endtime="20201112 09:44:11.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.568" endtime="20201112 09:44:11.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.053" endtime="20201112 09:44:11.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.052" endtime="20201112 09:44:11.607"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.632" endtime="20201112 09:44:11.651"></status>
</kw>
<msg timestamp="20201112 09:44:11.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.629" endtime="20201112 09:44:11.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.655" endtime="20201112 09:44:11.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.661" endtime="20201112 09:44:11.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.622" endtime="20201112 09:44:11.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.614" endtime="20201112 09:44:11.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.685" endtime="20201112 09:44:12.022"></status>
</kw>
<msg timestamp="20201112 09:44:12.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044702875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044716486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.682" endtime="20201112 09:44:12.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044702875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044716486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:12.032" endtime="20201112 09:44:12.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.051" endtime="20201112 09:44:12.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.675" endtime="20201112 09:44:12.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.670" endtime="20201112 09:44:12.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:12.069" level="INFO">${RESULT} = [{'time': 0.044716486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3610999999996709e-05, 'source_diff': 1.3610999999996709e-05}, {'time': 0.044733403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:12.060" endtime="20201112 09:44:12.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:12.100" level="INFO">${ACCURACY} = {'time': [0.044716486, 0.044733403, 0.044756514, 0.044777847, 0.044797472, 0.044822708, 0.044844472, 0.044868681, 0.044892861, 0.044911639, 0.044928847, 0.044952625, 0.044971903, 0.044992861, 0.045020...</msg>
<status status="PASS" starttime="20201112 09:44:12.071" endtime="20201112 09:44:12.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.112" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 09:44:12.109" endtime="20201112 09:44:12.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.117" level="INFO">VALUE: [1.3610999999996709e-05, 1.3638999999995849e-05, 1.3166999999994489e-05, 1.4125000000003718e-05, 1.3638999999995849e-05, 1.3222000000000234e-05, 1.3139000000002288e-05, 1.3639000000002788e-05, 1.3610999999996709e-05, 1.3625000000003218e-05, 1.4139000000003288e-05, 1.3639000000002788e-05, 1.4055999999998403e-05, 1.4139000000003288e-05, 1.3638999999995849e-05, 1.3639000000002788e-05, 1.3625000000003218e-05, 1.3625000000003218e-05, 1.3139000000002288e-05, 1.4139000000003288e-05, 1.3125000000002718e-05, 1.3638000000003314e-05, 1.3624999999996279e-05, 1.3639000000002788e-05, 1.3139000000002288e-05, 1.3639000000002788e-05, 1.3124999999995779e-05, 1.3638000000003314e-05, 1.3624999999996279e-05, 1.3679999999995085e-05, 1.3153000000001858e-05, 1.3624999999996279e-05, 1.3139000000002288e-05, 1.3625000000003218e-05, 1.358299999999757e-05, 1.3139000000002288e-05, 1.3110999999996209e-05, 1.3624999999996279e-05, 1.4125000000003718e-05, 1.3110999999996209e-05, 1.3610999999996709e-05, 1.3125000000002718e-05, 1.3638999999995849e-05, 1.3624999999996279e-05, 1.3139000000002288e-05, 1.3125000000002718e-05, 1.3695000000001067e-05, 1.3625000000003218e-05, 1.3139000000002288e-05, 1.3639000000002788e-05]</msg>
<status status="PASS" starttime="20201112 09:44:12.114" endtime="20201112 09:44:12.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.102" endtime="20201112 09:44:12.120"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.127" endtime="20201112 09:44:12.130"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:12.135" endtime="20201112 09:44:12.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.131" endtime="20201112 09:44:12.159"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.122" endtime="20201112 09:44:12.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.609" endtime="20201112 09:44:12.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.608" endtime="20201112 09:44:12.161"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.185" endtime="20201112 09:44:12.205"></status>
</kw>
<msg timestamp="20201112 09:44:12.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:12.181" endtime="20201112 09:44:12.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:12.208" endtime="20201112 09:44:12.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.215" endtime="20201112 09:44:12.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.174" endtime="20201112 09:44:12.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.168" endtime="20201112 09:44:12.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.239" endtime="20201112 09:44:12.577"></status>
</kw>
<msg timestamp="20201112 09:44:12.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044240681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044255333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:12.236" endtime="20201112 09:44:12.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044240681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044255333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:12.587" endtime="20201112 09:44:12.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.606" endtime="20201112 09:44:12.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.228" endtime="20201112 09:44:12.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.223" endtime="20201112 09:44:12.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:12.625" level="INFO">${RESULT} = [{'time': 0.044255333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4652000000003884e-05, 'source_diff': 1.4652000000003884e-05}, {'time': 0.044279278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:12.615" endtime="20201112 09:44:12.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:12.658" level="INFO">${ACCURACY} = {'time': [0.044255333, 0.044279278, 0.044306472, 0.04432675, 0.044351528, 0.044378417, 0.044406764, 0.044424431, 0.044442361, 0.044464708, 0.044493736, 0.044521431, 0.044541361, 0.044562389, 0.0445816...</msg>
<status status="PASS" starttime="20201112 09:44:12.627" endtime="20201112 09:44:12.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.669" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 09:44:12.667" endtime="20201112 09:44:12.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.675" level="INFO">VALUE: [1.4652000000003884e-05, 1.4638999999996849e-05, 1.4110999999997209e-05, 1.511099999999821e-05, 1.4625000000004218e-05, 1.4639000000003788e-05, 1.4681000000002498e-05, 1.4624999999997279e-05, 1.4638999999996849e-05, 1.5124999999997779e-05, 1.511099999999821e-05, 1.4624999999997279e-05, 1.4139000000003288e-05, 1.4625000000004218e-05, 1.4124999999996779e-05, 1.4653000000003358e-05, 1.4139000000003288e-05, 1.4638999999996849e-05, 1.4624999999997279e-05, 1.5125000000004718e-05, 1.4625000000004218e-05, 1.4653000000003358e-05, 1.4153000000002858e-05, 1.4639000000003788e-05, 1.4681000000002498e-05, 1.4624999999997279e-05, 1.4125000000003718e-05, 1.458299999999857e-05, 1.408299999999807e-05, 1.4139000000003288e-05, 1.4652999999996419e-05, 1.511099999999821e-05, 1.4625000000004218e-05, 1.4111000000004148e-05, 1.4638999999996849e-05, 1.409699999999764e-05, 1.4125000000003718e-05, 1.4124999999996779e-05, 1.4583999999998043e-05, 1.4569000000005938e-05, 1.4138999999996349e-05, 1.4624999999997279e-05, 1.4639000000003788e-05, 1.4124999999996779e-05, 1.4137999999996875e-05, 1.409699999999764e-05, 1.4638999999996849e-05, 1.5138999999997349e-05, 1.4125000000003718e-05, 1.4138999999996349e-05]</msg>
<status status="PASS" starttime="20201112 09:44:12.672" endtime="20201112 09:44:12.676"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.659" endtime="20201112 09:44:12.678"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.685" endtime="20201112 09:44:12.687"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:12.693" endtime="20201112 09:44:12.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.688" endtime="20201112 09:44:12.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.680" endtime="20201112 09:44:12.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.164" endtime="20201112 09:44:12.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.162" endtime="20201112 09:44:12.719"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.742" endtime="20201112 09:44:12.761"></status>
</kw>
<msg timestamp="20201112 09:44:12.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:12.739" endtime="20201112 09:44:12.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:12.764" endtime="20201112 09:44:12.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.771" endtime="20201112 09:44:12.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.732" endtime="20201112 09:44:12.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.726" endtime="20201112 09:44:12.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.796" endtime="20201112 09:44:13.134"></status>
</kw>
<msg timestamp="20201112 09:44:13.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042842458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042858097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:12.793" endtime="20201112 09:44:13.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042842458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042858097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.144" endtime="20201112 09:44:13.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.163" endtime="20201112 09:44:13.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.784" endtime="20201112 09:44:13.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.779" endtime="20201112 09:44:13.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:13.174" level="INFO">${RESULT} = [{'time': 0.042858097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.563899999999785e-05, 'source_diff': 1.563899999999785e-05}, {'time': 0.042876917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:13.170" endtime="20201112 09:44:13.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:13.188" level="INFO">${ACCURACY} = {'time': [0.042858097, 0.042876917, 0.042900847, 0.04292975, 0.042948861, 0.042971056, 0.042990917, 0.043020014, 0.043039889, 0.043060792, 0.043090042, 0.043108889, 0.043130722, 0.043153917, 0.0431757...</msg>
<status status="PASS" starttime="20201112 09:44:13.175" endtime="20201112 09:44:13.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.193" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 09:44:13.192" endtime="20201112 09:44:13.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.196" level="INFO">VALUE: [1.563899999999785e-05, 1.5138999999997349e-05, 1.565299999999742e-05, 1.5639000000004788e-05, 1.562499999999828e-05, 1.5167000000003428e-05, 1.5124999999997779e-05, 1.5625000000005218e-05, 1.5124999999997779e-05, 1.5138999999997349e-05, 1.5139000000004288e-05, 1.5138999999997349e-05, 1.5569e-05, 1.5124999999997779e-05, 1.559699999999914e-05, 1.5153000000003858e-05, 1.5124999999997779e-05, 1.5139000000004288e-05, 1.5124999999997779e-05, 1.6137999999998875e-05, 1.5138999999997349e-05, 1.562499999999828e-05, 1.561099999999871e-05, 1.563899999999785e-05, 1.5139000000004288e-05, 1.563899999999785e-05, 1.5138999999997349e-05, 1.5125000000004718e-05, 1.5139000000004288e-05, 1.563899999999785e-05, 1.511099999999821e-05, 1.5681000000003498e-05, 1.5139000000004288e-05, 1.5139000000004288e-05, 1.563899999999785e-05, 1.511099999999821e-05, 1.5153000000003858e-05, 1.5694000000003594e-05, 1.5124999999997779e-05, 1.612499999999878e-05, 1.5151999999997445e-05, 1.5138999999997349e-05, 1.5138999999997349e-05, 1.5083999999998543e-05, 1.562499999999828e-05, 1.5139000000004288e-05, 1.5611999999998183e-05, 1.5680000000004024e-05, 1.5152999999996919e-05, 1.5139000000004288e-05]</msg>
<status status="PASS" starttime="20201112 09:44:13.194" endtime="20201112 09:44:13.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.189" endtime="20201112 09:44:13.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.200" endtime="20201112 09:44:13.202"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:13.205" endtime="20201112 09:44:13.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.202" endtime="20201112 09:44:13.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.198" endtime="20201112 09:44:13.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.721" endtime="20201112 09:44:13.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.720" endtime="20201112 09:44:13.226"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.237" endtime="20201112 09:44:13.252"></status>
</kw>
<msg timestamp="20201112 09:44:13.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.235" endtime="20201112 09:44:13.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.254" endtime="20201112 09:44:13.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.257" endtime="20201112 09:44:13.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.232" endtime="20201112 09:44:13.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.229" endtime="20201112 09:44:13.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.268" endtime="20201112 09:44:13.555"></status>
</kw>
<msg timestamp="20201112 09:44:13.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025290861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025307486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.267" endtime="20201112 09:44:13.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025290861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025307486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.559" endtime="20201112 09:44:13.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.568" endtime="20201112 09:44:13.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.263" endtime="20201112 09:44:13.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.261" endtime="20201112 09:44:13.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:13.577" level="INFO">${RESULT} = [{'time': 0.025307486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.662499999999928e-05, 'source_diff': 1.662499999999928e-05}, {'time': 0.025333153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:13.572" endtime="20201112 09:44:13.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:13.590" level="INFO">${ACCURACY} = {'time': [0.025307486, 0.025333153, 0.025362389, 0.025382181, 0.025407292, 0.025433472, 0.025453347, 0.025476556, 0.025495653, 0.025518306, 0.025544417, 0.025564347, 0.025591361, 0.025615361, 0.025640...</msg>
<status status="PASS" starttime="20201112 09:44:13.578" endtime="20201112 09:44:13.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.595" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 09:44:13.594" endtime="20201112 09:44:13.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.598" level="INFO">VALUE: [1.662499999999928e-05, 1.612500000000225e-05, 1.615299999999792e-05, 1.613900000000182e-05, 1.662500000000275e-05, 1.662499999999928e-05, 1.6180000000001055e-05, 1.663900000000232e-05, 1.663899999999885e-05, 1.666700000000146e-05, 1.662499999999928e-05, 1.662500000000275e-05, 1.661099999999971e-05, 1.615300000000139e-05, 1.6098000000002582e-05, 1.665299999999842e-05, 1.609700000000311e-05, 1.663899999999885e-05, 1.613900000000182e-05, 1.661099999999971e-05, 1.613900000000182e-05, 1.662500000000275e-05, 1.662499999999928e-05, 1.662500000000275e-05, 1.612499999999878e-05, 1.665300000000189e-05, 1.662500000000275e-05, 1.662499999999928e-05, 1.663899999999885e-05, 1.612500000000225e-05, 1.613900000000182e-05, 1.6195000000000098e-05, 1.6097999999999113e-05, 1.662499999999928e-05, 1.663899999999885e-05, 1.611099999999921e-05, 1.612500000000225e-05, 1.713899999999935e-05, 1.613899999999835e-05, 1.662499999999928e-05, 1.663900000000232e-05, 1.608300000000007e-05, 1.613900000000182e-05, 1.662499999999928e-05, 1.663900000000232e-05, 1.663899999999885e-05, 1.665299999999842e-05, 1.613900000000182e-05, 1.615300000000139e-05, 1.662499999999928e-05]</msg>
<status status="PASS" starttime="20201112 09:44:13.597" endtime="20201112 09:44:13.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.591" endtime="20201112 09:44:13.600"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.603" endtime="20201112 09:44:13.604"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:13.607" endtime="20201112 09:44:13.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.605" endtime="20201112 09:44:13.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.601" endtime="20201112 09:44:13.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.227" endtime="20201112 09:44:13.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.226" endtime="20201112 09:44:13.628"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.639" endtime="20201112 09:44:13.655"></status>
</kw>
<msg timestamp="20201112 09:44:13.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.637" endtime="20201112 09:44:13.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.656" endtime="20201112 09:44:13.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.659" endtime="20201112 09:44:13.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.634" endtime="20201112 09:44:13.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.631" endtime="20201112 09:44:13.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.671" endtime="20201112 09:44:13.957"></status>
</kw>
<msg timestamp="20201112 09:44:13.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025167014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025184167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.669" endtime="20201112 09:44:13.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025167014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025184167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.961" endtime="20201112 09:44:13.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.970" endtime="20201112 09:44:13.972"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.666" endtime="20201112 09:44:13.972"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.663" endtime="20201112 09:44:13.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:13.978" level="INFO">${RESULT} = [{'time': 0.025184167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.715299999999892e-05, 'source_diff': 1.715299999999892e-05}, {'time': 0.025216944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:13.974" endtime="20201112 09:44:13.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:13.991" level="INFO">${ACCURACY} = {'time': [0.025184167, 0.025216944, 0.025249208, 0.025281292, 0.025303, 0.025326167, 0.025353431, 0.02538425, 0.025412319, 0.025442958, 0.025465083, 0.025488194, 0.025519194, 0.025545306, 0.025567167,...</msg>
<status status="PASS" starttime="20201112 09:44:13.979" endtime="20201112 09:44:13.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.997" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 09:44:13.996" endtime="20201112 09:44:13.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.999" level="INFO">VALUE: [1.715299999999892e-05, 1.758300000000157e-05, 1.711100000000021e-05, 1.712499999999978e-05, 1.713899999999935e-05, 1.762500000000028e-05, 1.815299999999992e-05, 1.712499999999978e-05, 1.7693999999998655e-05, 1.762500000000028e-05, 1.7179999999998585e-05, 1.70829999999976e-05, 1.7137999999999876e-05, 1.7556000000001903e-05, 1.711099999999674e-05, 1.713899999999935e-05, 1.712499999999978e-05, 1.713899999999935e-05, 1.7137999999999876e-05, 1.716700000000196e-05, 1.761099999999724e-05, 1.712499999999978e-05, 1.712499999999978e-05, 1.712499999999978e-05, 1.712500000000325e-05, 1.813900000000035e-05, 1.712499999999978e-05, 1.713900000000282e-05, 1.762500000000028e-05, 1.7151999999999445e-05, 1.7638000000000376e-05, 1.7612000000000183e-05, 1.7151999999999445e-05, 1.708300000000107e-05, 1.713900000000282e-05, 1.718100000000153e-05, 1.705500000000193e-05, 1.708300000000107e-05, 1.761099999999724e-05, 1.7151999999999445e-05, 1.7137999999999876e-05, 1.812500000000078e-05, 1.765299999999942e-05, 1.763899999999985e-05, 1.711100000000021e-05, 1.763899999999985e-05, 1.761100000000071e-05, 1.711100000000021e-05, 1.762500000000028e-05, 1.766700000000246e-05]</msg>
<status status="PASS" starttime="20201112 09:44:13.998" endtime="20201112 09:44:14.000"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.992" endtime="20201112 09:44:14.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.004" endtime="20201112 09:44:14.006"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:14.009" endtime="20201112 09:44:14.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.007" endtime="20201112 09:44:14.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.002" endtime="20201112 09:44:14.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.629" endtime="20201112 09:44:14.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.629" endtime="20201112 09:44:14.031"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.042" endtime="20201112 09:44:14.057"></status>
</kw>
<msg timestamp="20201112 09:44:14.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.040" endtime="20201112 09:44:14.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.059" endtime="20201112 09:44:14.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.062" endtime="20201112 09:44:14.064"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.037" endtime="20201112 09:44:14.064"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.034" endtime="20201112 09:44:14.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.073" endtime="20201112 09:44:14.410"></status>
</kw>
<msg timestamp="20201112 09:44:14.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025204292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025222444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.072" endtime="20201112 09:44:14.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025204292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025222444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.420" endtime="20201112 09:44:14.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.439" endtime="20201112 09:44:14.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.068" endtime="20201112 09:44:14.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.066" endtime="20201112 09:44:14.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:14.458" level="INFO">${RESULT} = [{'time': 0.025222444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8152000000000446e-05, 'source_diff': 1.8152000000000446e-05}, {'time': 0.025249681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:14.449" endtime="20201112 09:44:14.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:14.492" level="INFO">${ACCURACY} = {'time': [0.025222444, 0.025249681, 0.025275556, 0.025304778, 0.025333667, 0.025355708, 0.025386472, 0.025410403, 0.02544075, 0.025467569, 0.0254995, 0.025528764, 0.025549458, 0.025572806, 0.025601597...</msg>
<status status="PASS" starttime="20201112 09:44:14.460" endtime="20201112 09:44:14.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.503" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 09:44:14.501" endtime="20201112 09:44:14.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.508" level="INFO">VALUE: [1.8152000000000446e-05, 1.813900000000035e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.812500000000078e-05, 1.813900000000035e-05, 1.811100000000121e-05, 1.815299999999992e-05, 1.915300000000092e-05, 1.8137999999997406e-05, 1.865300000000042e-05, 1.912499999999831e-05, 1.8652000000000946e-05, 1.8612000000001183e-05, 1.859699999999867e-05, 1.813899999999688e-05, 1.863899999999738e-05, 1.912500000000178e-05, 1.8680000000000085e-05, 1.913899999999788e-05, 1.813900000000035e-05, 1.862500000000128e-05, 1.862499999999781e-05, 1.813900000000035e-05, 1.862500000000128e-05, 1.82089999999982e-05, 1.863900000000085e-05, 1.8151999999996976e-05, 1.8583999999998574e-05, 1.812500000000078e-05, 1.913899999999788e-05, 1.863900000000085e-05, 1.811100000000121e-05, 1.815299999999992e-05, 1.812500000000078e-05, 1.8735999999998365e-05, 1.862500000000128e-05, 1.861099999999824e-05, 1.862500000000128e-05, 1.8084000000001543e-05, 1.913899999999788e-05, 1.818099999999906e-05, 1.811099999999774e-05, 1.863900000000085e-05, 1.815299999999992e-05, 1.8680000000000085e-05, 1.862500000000128e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.812500000000078e-05]</msg>
<status status="PASS" starttime="20201112 09:44:14.505" endtime="20201112 09:44:14.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.494" endtime="20201112 09:44:14.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.518" endtime="20201112 09:44:14.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:14.527" endtime="20201112 09:44:14.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.523" endtime="20201112 09:44:14.550"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.514" endtime="20201112 09:44:14.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.032" endtime="20201112 09:44:14.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.031" endtime="20201112 09:44:14.553"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.576" endtime="20201112 09:44:14.594"></status>
</kw>
<msg timestamp="20201112 09:44:14.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.573" endtime="20201112 09:44:14.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.598" endtime="20201112 09:44:14.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.604" endtime="20201112 09:44:14.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.565" endtime="20201112 09:44:14.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.559" endtime="20201112 09:44:14.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.628" endtime="20201112 09:44:14.965"></status>
</kw>
<msg timestamp="20201112 09:44:14.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042818028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042837139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.625" endtime="20201112 09:44:14.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042818028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042837139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.975" endtime="20201112 09:44:14.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.994" endtime="20201112 09:44:14.998"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.617" endtime="20201112 09:44:14.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.613" endtime="20201112 09:44:15.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:15.012" level="INFO">${RESULT} = [{'time': 0.042837139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.911100000000221e-05, 'source_diff': 1.911100000000221e-05}, {'time': 0.042860056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:15.003" endtime="20201112 09:44:15.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:15.044" level="INFO">${ACCURACY} = {'time': [0.042837139, 0.042860056, 0.042889236, 0.042913264, 0.042943903, 0.042969069, 0.042994917, 0.043016097, 0.043046208, 0.043079861, 0.043110056, 0.043139375, 0.043173014, 0.043198111, 0.043226...</msg>
<status status="PASS" starttime="20201112 09:44:15.014" endtime="20201112 09:44:15.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.056" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 09:44:15.054" endtime="20201112 09:44:15.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.062" level="INFO">VALUE: [1.911100000000221e-05, 1.963900000000185e-05, 1.962499999999534e-05, 2.00969999999967e-05, 1.963900000000185e-05, 1.962499999999534e-05, 1.965300000000142e-05, 1.915300000000092e-05, 1.913900000000135e-05, 1.912499999999484e-05, 1.962500000000228e-05, 2.015300000000192e-05, 1.916700000000049e-05, 1.913899999999441e-05, 1.962500000000228e-05, 1.915300000000092e-05, 1.965299999999448e-05, 1.9638000000002376e-05, 1.912499999999484e-05, 1.963900000000185e-05, 1.911100000000221e-05, 2.013899999999541e-05, 1.963900000000185e-05, 1.963900000000185e-05, 1.911100000000221e-05, 1.909700000000264e-05, 1.962499999999534e-05, 1.9694000000000655e-05, 1.95969999999962e-05, 2.012499999999584e-05, 1.913900000000135e-05, 1.9583999999996105e-05, 1.913899999999441e-05, 1.963900000000185e-05, 1.95969999999962e-05, 1.9680000000001086e-05, 1.963900000000185e-05, 1.911100000000221e-05, 1.963900000000185e-05, 1.913899999999441e-05, 1.9583999999996105e-05, 1.963900000000185e-05, 1.9041999999996895e-05, 1.963900000000185e-05, 1.908300000000307e-05, 1.962500000000228e-05, 1.913900000000135e-05, 1.962500000000228e-05, 1.912500000000178e-05, 1.912499999999484e-05]</msg>
<status status="PASS" starttime="20201112 09:44:15.058" endtime="20201112 09:44:15.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.046" endtime="20201112 09:44:15.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.072" endtime="20201112 09:44:15.075"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:15.080" endtime="20201112 09:44:15.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.076" endtime="20201112 09:44:15.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.067" endtime="20201112 09:44:15.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.555" endtime="20201112 09:44:15.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.554" endtime="20201112 09:44:15.106"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.130" endtime="20201112 09:44:15.149"></status>
</kw>
<msg timestamp="20201112 09:44:15.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.126" endtime="20201112 09:44:15.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.152" endtime="20201112 09:44:15.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.159" endtime="20201112 09:44:15.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.119" endtime="20201112 09:44:15.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.113" endtime="20201112 09:44:15.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.183" endtime="20201112 09:44:15.521"></status>
</kw>
<msg timestamp="20201112 09:44:15.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043262264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043282889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:15.179" endtime="20201112 09:44:15.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043262264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043282889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:15.531" endtime="20201112 09:44:15.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.550" endtime="20201112 09:44:15.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.172" endtime="20201112 09:44:15.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.167" endtime="20201112 09:44:15.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:15.567" level="INFO">${RESULT} = [{'time': 0.043282889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.062499999999634e-05, 'source_diff': 2.062499999999634e-05}, {'time': 0.043315694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:15.558" endtime="20201112 09:44:15.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:15.600" level="INFO">${ACCURACY} = {'time': [0.043282889, 0.043315694, 0.043341681, 0.043366778, 0.043388931, 0.043413681, 0.043440792, 0.043468597, 0.043502611, 0.043532042, 0.043561917, 0.043587694, 0.043614708, 0.043643069, 0.043675...</msg>
<status status="PASS" starttime="20201112 09:44:15.570" endtime="20201112 09:44:15.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.611" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 09:44:15.609" endtime="20201112 09:44:15.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.617" level="INFO">VALUE: [2.062499999999634e-05, 2.0138000000002876e-05, 2.063900000000285e-05, 2.013900000000235e-05, 2.013899999999541e-05, 2.062500000000328e-05, 2.07090000000007e-05, 2.063899999999591e-05, 2.011099999999627e-05, 2.115300000000292e-05, 2.015300000000192e-05, 2.0638000000003376e-05, 2.062500000000328e-05, 2.111099999999727e-05, 2.013900000000235e-05, 2.0166000000002016e-05, 2.012500000000278e-05, 2.062499999999634e-05, 2.062500000000328e-05, 2.016699999999455e-05, 2.059700000000414e-05, 2.065300000000242e-05, 2.062500000000328e-05, 2.011100000000321e-05, 2.012500000000278e-05, 2.015300000000192e-05, 2.063900000000285e-05, 2.062500000000328e-05, 2.065299999999548e-05, 2.113899999999641e-05, 2.012499999999584e-05, 2.012499999999584e-05, 2.1137999999996937e-05, 2.063899999999591e-05, 2.0638000000003376e-05, 2.012500000000278e-05, 2.0584000000004044e-05, 2.0235999999999865e-05, 2.013900000000235e-05, 2.012499999999584e-05, 2.015299999999498e-05, 2.063900000000285e-05, 2.062500000000328e-05, 2.0166000000002016e-05, 2.063899999999591e-05, 2.0152000000002446e-05, 2.015300000000192e-05, 2.063900000000285e-05, 2.012499999999584e-05, 2.012500000000278e-05]</msg>
<status status="PASS" starttime="20201112 09:44:15.614" endtime="20201112 09:44:15.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.602" endtime="20201112 09:44:15.620"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.627" endtime="20201112 09:44:15.629"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:15.635" endtime="20201112 09:44:15.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.631" endtime="20201112 09:44:15.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.622" endtime="20201112 09:44:15.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.108" endtime="20201112 09:44:15.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.107" endtime="20201112 09:44:15.661"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.685" endtime="20201112 09:44:15.703"></status>
</kw>
<msg timestamp="20201112 09:44:15.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.681" endtime="20201112 09:44:15.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.706" endtime="20201112 09:44:15.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.713" endtime="20201112 09:44:15.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.674" endtime="20201112 09:44:15.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.668" endtime="20201112 09:44:15.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.737" endtime="20201112 09:44:16.074"></status>
</kw>
<msg timestamp="20201112 09:44:16.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042833486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042855111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:15.733" endtime="20201112 09:44:16.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042833486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042855111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.084" endtime="20201112 09:44:16.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.104" endtime="20201112 09:44:16.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.726" endtime="20201112 09:44:16.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.721" endtime="20201112 09:44:16.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:16.122" level="INFO">${RESULT} = [{'time': 0.042855111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.162500000000428e-05, 'source_diff': 2.162500000000428e-05}, {'time': 0.042885319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:16.113" endtime="20201112 09:44:16.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:16.154" level="INFO">${ACCURACY} = {'time': [0.042855111, 0.042885319, 0.042915333, 0.042940319, 0.042975014, 0.043002139, 0.043034333, 0.043064333, 0.043091028, 0.043121375, 0.043151083, 0.043175347, 0.043210278, 0.043238208, 0.043269...</msg>
<status status="PASS" starttime="20201112 09:44:16.124" endtime="20201112 09:44:16.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.165" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 09:44:16.163" endtime="20201112 09:44:16.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.171" level="INFO">VALUE: [2.162500000000428e-05, 2.2137999999997937e-05, 2.213899999999741e-05, 2.212499999999784e-05, 2.161099999999777e-05, 2.113900000000335e-05, 2.162500000000428e-05, 2.212500000000478e-05, 2.112500000000378e-05, 2.163900000000385e-05, 2.163899999999691e-05, 2.161100000000471e-05, 2.162499999999734e-05, 2.112499999999684e-05, 2.162499999999734e-05, 2.165299999999648e-05, 2.159700000000514e-05, 2.158299999999863e-05, 2.162499999999734e-05, 2.1180000000002586e-05, 2.162499999999734e-05, 2.113899999999641e-05, 2.163899999999691e-05, 2.112499999999684e-05, 2.20969999999987e-05, 2.112499999999684e-05, 2.112500000000378e-05, 2.162499999999734e-05, 2.163900000000385e-05, 2.115300000000292e-05, 2.163900000000385e-05, 2.161099999999777e-05, 2.116700000000249e-05, 2.163899999999691e-05, 2.113900000000335e-05, 2.1638000000004376e-05, 2.163899999999691e-05, 2.162500000000428e-05, 2.111099999999727e-05, 2.113899999999641e-05, 2.163900000000385e-05, 2.113900000000335e-05, 2.1083999999997605e-05, 2.163899999999691e-05, 2.106899999999856e-05, 2.113900000000335e-05, 2.162500000000428e-05, 2.2138000000004876e-05, 2.113900000000335e-05, 2.1193999999995217e-05]</msg>
<status status="PASS" starttime="20201112 09:44:16.168" endtime="20201112 09:44:16.173"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.156" endtime="20201112 09:44:16.174"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.181" endtime="20201112 09:44:16.184"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:16.189" endtime="20201112 09:44:16.211"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.185" endtime="20201112 09:44:16.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.176" endtime="20201112 09:44:16.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.663" endtime="20201112 09:44:16.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.662" endtime="20201112 09:44:16.215"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.239" endtime="20201112 09:44:16.258"></status>
</kw>
<msg timestamp="20201112 09:44:16.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.235" endtime="20201112 09:44:16.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.261" endtime="20201112 09:44:16.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.268" endtime="20201112 09:44:16.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.228" endtime="20201112 09:44:16.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.222" endtime="20201112 09:44:16.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.292" endtime="20201112 09:44:16.629"></status>
</kw>
<msg timestamp="20201112 09:44:16.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042803028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042825625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.288" endtime="20201112 09:44:16.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042803028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042825625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.638" endtime="20201112 09:44:16.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.658" endtime="20201112 09:44:16.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.281" endtime="20201112 09:44:16.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.276" endtime="20201112 09:44:16.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:16.676" level="INFO">${RESULT} = [{'time': 0.042825625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.25969999999992e-05, 'source_diff': 2.25969999999992e-05}, {'time': 0.042856639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:16.666" endtime="20201112 09:44:16.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:16.709" level="INFO">${ACCURACY} = {'time': [0.042825625, 0.042856639, 0.042894222, 0.042920375, 0.042955333, 0.042985208, 0.043021333, 0.04305225, 0.043089319, 0.043120444, 0.043157389, 0.04318725, 0.043211431, 0.043237542, 0.04327420...</msg>
<status status="PASS" starttime="20201112 09:44:16.678" endtime="20201112 09:44:16.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.720" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 09:44:16.718" endtime="20201112 09:44:16.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.726" level="INFO">VALUE: [2.25969999999992e-05, 2.313900000000535e-05, 2.262500000000528e-05, 2.266699999999705e-05, 2.213899999999741e-05, 2.263899999999791e-05, 2.263900000000485e-05, 2.265299999999748e-05, 2.2137999999997937e-05, 2.262499999999834e-05, 2.258299999999963e-05, 2.262500000000528e-05, 2.215300000000392e-05, 2.262499999999834e-05, 2.212500000000478e-05, 2.2179999999996647e-05, 2.211099999999827e-05, 2.262499999999834e-05, 2.265300000000442e-05, 2.2651999999998007e-05, 2.263899999999791e-05, 2.2637999999998437e-05, 2.213899999999741e-05, 2.213899999999741e-05, 2.261099999999877e-05, 2.215299999999698e-05, 2.2665999999997577e-05, 2.262500000000528e-05, 2.2111999999997745e-05, 2.263899999999791e-05, 2.213899999999741e-05, 2.212499999999784e-05, 2.213900000000435e-05, 2.2651999999998007e-05, 2.213899999999741e-05, 2.215299999999698e-05, 2.213899999999741e-05, 2.263899999999791e-05, 2.262500000000528e-05, 2.266699999999705e-05, 2.263899999999791e-05, 2.213899999999741e-05, 2.212500000000478e-05, 2.211100000000521e-05, 2.212500000000478e-05, 2.263900000000485e-05, 2.263899999999791e-05, 2.263899999999791e-05, 2.2151999999997507e-05, 2.262499999999834e-05]</msg>
<status status="PASS" starttime="20201112 09:44:16.723" endtime="20201112 09:44:16.731"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.711" endtime="20201112 09:44:16.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.740" endtime="20201112 09:44:16.742"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:16.748" endtime="20201112 09:44:16.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.744" endtime="20201112 09:44:16.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.735" endtime="20201112 09:44:16.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.218" endtime="20201112 09:44:16.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.216" endtime="20201112 09:44:16.774"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.797" endtime="20201112 09:44:16.816"></status>
</kw>
<msg timestamp="20201112 09:44:16.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.794" endtime="20201112 09:44:16.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.820" endtime="20201112 09:44:16.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.827" endtime="20201112 09:44:16.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.787" endtime="20201112 09:44:16.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.781" endtime="20201112 09:44:16.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.850" endtime="20201112 09:44:17.190"></status>
</kw>
<msg timestamp="20201112 09:44:17.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042785208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042818306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.847" endtime="20201112 09:44:17.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042785208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042818306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.200" endtime="20201112 09:44:17.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.219" endtime="20201112 09:44:17.223"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.840" endtime="20201112 09:44:17.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.835" endtime="20201112 09:44:17.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:17.237" level="INFO">${RESULT} = [{'time': 0.042818306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.309800000000224e-05, 'source_diff': 3.309800000000224e-05}, {'time': 0.042865306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:17.228" endtime="20201112 09:44:17.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:17.270" level="INFO">${ACCURACY} = {'time': [0.042818306, 0.042865306, 0.042901306, 0.042941319, 0.042986319, 0.043031319, 0.043070333, 0.043118333, 0.043155333, 0.043202361, 0.043247347, 0.043292361, 0.043335361, 0.043382375, 0.043427...</msg>
<status status="PASS" starttime="20201112 09:44:17.239" endtime="20201112 09:44:17.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.282" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 09:44:17.279" endtime="20201112 09:44:17.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.288" level="INFO">VALUE: [3.309800000000224e-05, 3.288900000000122e-05, 3.313900000000147e-05, 3.2762999999998155e-05, 3.29579999999996e-05, 3.315200000000157e-05, 3.343000000000096e-05, 3.324999999999856e-05, 3.3096999999995824e-05, 3.351399999999838e-05, 3.3568999999997184e-05, 3.319400000000028e-05, 3.347199999999967e-05, 3.290300000000079e-05, 3.297199999999917e-05, 3.365300000000154e-05, 3.308399999999573e-05, 3.29579999999996e-05, 3.356999999999666e-05, 3.323599999999899e-05, 3.326399999999813e-05, 3.30700000000031e-05, 3.298599999999874e-05, 3.293099999999993e-05, 3.352800000000489e-05, 3.2888999999994284e-05, 3.29579999999996e-05, 3.29579999999996e-05, 3.309800000000224e-05, 3.347300000000608e-05, 3.334700000000301e-05, 3.31250000000019e-05, 3.3512999999998905e-05, 3.366600000000164e-05, 3.369400000000078e-05, 3.274999999999806e-05, 3.273599999999849e-05, 3.29579999999996e-05, 3.286100000000208e-05, 3.290300000000079e-05, 3.352799999999795e-05, 3.326399999999813e-05, 3.315300000000104e-05, 3.355599999999709e-05, 3.2846999999995574e-05, 3.330599999999684e-05, 3.350000000000575e-05, 3.30700000000031e-05, 3.351399999999838e-05, 3.330600000000378e-05]</msg>
<status status="PASS" starttime="20201112 09:44:17.285" endtime="20201112 09:44:17.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.272" endtime="20201112 09:44:17.291"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.298" endtime="20201112 09:44:17.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:17.306" endtime="20201112 09:44:17.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.302" endtime="20201112 09:44:17.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.293" endtime="20201112 09:44:17.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.776" endtime="20201112 09:44:17.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.775" endtime="20201112 09:44:17.328"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.339" endtime="20201112 09:44:17.355"></status>
</kw>
<msg timestamp="20201112 09:44:17.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.338" endtime="20201112 09:44:17.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.356" endtime="20201112 09:44:17.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.359" endtime="20201112 09:44:17.361"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.334" endtime="20201112 09:44:17.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.332" endtime="20201112 09:44:17.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.371" endtime="20201112 09:44:17.658"></status>
</kw>
<msg timestamp="20201112 09:44:17.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025082167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025116361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.369" endtime="20201112 09:44:17.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025082167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025116361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.663" endtime="20201112 09:44:17.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.671" endtime="20201112 09:44:17.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.366" endtime="20201112 09:44:17.674"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.363" endtime="20201112 09:44:17.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:17.680" level="INFO">${RESULT} = [{'time': 0.025116361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.419400000000128e-05, 'source_diff': 3.419400000000128e-05}, {'time': 0.025153403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:17.675" endtime="20201112 09:44:17.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:17.693" level="INFO">${ACCURACY} = {'time': [0.025116361, 0.025153403, 0.025191347, 0.025232361, 0.025272361, 0.025315375, 0.025362389, 0.025398375, 0.025440389, 0.025485444, 0.025530389, 0.025572389, 0.025612403, 0.025657417, 0.025699...</msg>
<status status="PASS" starttime="20201112 09:44:17.681" endtime="20201112 09:44:17.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.699" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 09:44:17.698" endtime="20201112 09:44:17.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.702" level="INFO">VALUE: [3.419400000000128e-05, 3.440300000000229e-05, 3.3847000000000044e-05, 3.4610999999996894e-05, 3.373599999999949e-05, 3.388900000000222e-05, 3.4152999999998573e-05, 3.37640000000021e-05, 3.372199999999992e-05, 3.3874999999999184e-05, 3.380600000000081e-05, 3.4347000000000544e-05, 3.402799999999845e-05, 3.381999999999691e-05, 3.433400000000045e-05, 3.423699999999946e-05, 3.380600000000081e-05, 3.402799999999845e-05, 3.469500000000125e-05, 3.4374999999999684e-05, 3.3874999999999184e-05, 3.4012999999999405e-05, 3.4554999999998615e-05, 3.4347000000000544e-05, 3.469399999999831e-05, 3.420800000000085e-05, 3.451399999999938e-05, 3.452799999999895e-05, 3.39719999999967e-05, 3.44580000000011e-05, 3.4124999999999434e-05, 3.447200000000067e-05, 3.426399999999913e-05, 3.377800000000167e-05, 3.4097000000000294e-05, 3.443099999999796e-05, 3.440300000000229e-05, 3.404199999999802e-05, 3.418100000000118e-05, 3.444499999999753e-05, 3.449999999999981e-05, 3.376399999999863e-05, 3.473600000000049e-05, 3.461199999999984e-05, 3.449999999999981e-05, 3.394499999999703e-05, 3.422299999999989e-05, 3.376399999999863e-05, 3.373599999999949e-05, 3.438799999999978e-05]</msg>
<status status="PASS" starttime="20201112 09:44:17.700" endtime="20201112 09:44:17.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.694" endtime="20201112 09:44:17.704"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.707" endtime="20201112 09:44:17.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:17.711" endtime="20201112 09:44:17.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.709" endtime="20201112 09:44:17.731"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.705" endtime="20201112 09:44:17.732"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.329" endtime="20201112 09:44:17.732"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.329" endtime="20201112 09:44:17.732"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.743" endtime="20201112 09:44:17.760"></status>
</kw>
<msg timestamp="20201112 09:44:17.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.741" endtime="20201112 09:44:17.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.761" endtime="20201112 09:44:17.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.764" endtime="20201112 09:44:17.766"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.738" endtime="20201112 09:44:17.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.735" endtime="20201112 09:44:17.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.776" endtime="20201112 09:44:18.064"></status>
</kw>
<msg timestamp="20201112 09:44:18.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024849278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024884806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.774" endtime="20201112 09:44:18.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024849278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024884806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.068" endtime="20201112 09:44:18.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.077" endtime="20201112 09:44:18.079"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.771" endtime="20201112 09:44:18.079"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.768" endtime="20201112 09:44:18.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:18.085" level="INFO">${RESULT} = [{'time': 0.024884806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.552799999999995e-05, 'source_diff': 3.552799999999995e-05}, {'time': 0.02493175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:44:18.081" endtime="20201112 09:44:18.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:18.099" level="INFO">${ACCURACY} = {'time': [0.024884806, 0.02493175, 0.02497075, 0.025015764, 0.025058833, 0.025096764, 0.025138806, 0.025181792, 0.025230778, 0.025271847, 0.025309792, 0.025353792, 0.025395806, 0.025442806, 0.02548088...</msg>
<status status="PASS" starttime="20201112 09:44:18.086" endtime="20201112 09:44:18.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.104" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 09:44:18.103" endtime="20201112 09:44:18.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.107" level="INFO">VALUE: [3.552799999999995e-05, 3.5389000000000254e-05, 3.4888999999999754e-05, 3.4861000000000614e-05, 3.4790999999999295e-05, 3.5333000000001974e-05, 3.518099999999871e-05, 3.515300000000304e-05, 3.530599999999884e-05, 3.52779999999997e-05, 3.5125000000000434e-05, 3.482000000000138e-05, 3.561200000000084e-05, 3.476399999999963e-05, 3.5402999999999823e-05, 3.5527000000000475e-05, 3.470799999999788e-05, 3.475000000000006e-05, 3.515199999999663e-05, 3.4804999999998865e-05, 3.518000000000271e-05, 3.518000000000271e-05, 3.4875000000000184e-05, 3.5125000000000434e-05, 3.5111000000000864e-05, 3.5347000000001544e-05, 3.49450000000015e-05, 3.5653000000000074e-05, 3.552799999999995e-05, 3.5402999999999823e-05, 3.5389000000000254e-05, 3.470899999999735e-05, 3.472200000000092e-05, 3.481999999999791e-05, 3.4847000000001044e-05, 3.491699999999889e-05, 3.551400000000038e-05, 3.5639000000000504e-05, 3.55840000000017e-05, 3.550000000000081e-05, 3.5568999999999185e-05, 3.4790999999999295e-05, 3.548599999999777e-05, 3.497200000000117e-05, 3.541599999999992e-05, 3.526400000000013e-05, 3.492999999999899e-05, 3.568099999999921e-05, 3.5318999999998935e-05, 3.475000000000006e-05]</msg>
<status status="PASS" starttime="20201112 09:44:18.105" endtime="20201112 09:44:18.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.100" endtime="20201112 09:44:18.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.112" endtime="20201112 09:44:18.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:18.116" endtime="20201112 09:44:18.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.114" endtime="20201112 09:44:18.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.109" endtime="20201112 09:44:18.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.733" endtime="20201112 09:44:18.138"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.733" endtime="20201112 09:44:18.138"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.150" endtime="20201112 09:44:18.167"></status>
</kw>
<msg timestamp="20201112 09:44:18.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.148" endtime="20201112 09:44:18.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.168" endtime="20201112 09:44:18.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.172" endtime="20201112 09:44:18.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.145" endtime="20201112 09:44:18.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.142" endtime="20201112 09:44:18.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.183" endtime="20201112 09:44:18.523"></status>
</kw>
<msg timestamp="20201112 09:44:18.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026194667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026230528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.182" endtime="20201112 09:44:18.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026194667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026230528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.533" endtime="20201112 09:44:18.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.552" endtime="20201112 09:44:18.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.178" endtime="20201112 09:44:18.558"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.176" endtime="20201112 09:44:18.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:18.570" level="INFO">${RESULT} = [{'time': 0.026230528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5860999999998144e-05, 'source_diff': 3.5860999999998144e-05}, {'time': 0.026272514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:18.561" endtime="20201112 09:44:18.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:18.601" level="INFO">${ACCURACY} = {'time': [0.026230528, 0.026272514, 0.026316514, 0.026360528, 0.026403528, 0.026444528, 0.026494556, 0.026540569, 0.026580542, 0.026631556, 0.026673556, 0.026715569, 0.026758569, 0.026803569, 0.026847...</msg>
<status status="PASS" starttime="20201112 09:44:18.572" endtime="20201112 09:44:18.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.612" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 09:44:18.610" endtime="20201112 09:44:18.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.618" level="INFO">VALUE: [3.5860999999998144e-05, 3.600000000000131e-05, 3.593099999999946e-05, 3.656999999999966e-05, 3.59719999999987e-05, 3.6680999999996744e-05, 3.5903000000000324e-05, 3.6068999999999685e-05, 3.5888999999997284e-05, 3.669499999999978e-05, 3.6430999999999963e-05, 3.6027000000000975e-05, 3.6596999999999325e-05, 3.6305000000000365e-05, 3.6347000000002544e-05, 3.5777000000000725e-05, 3.5889000000000754e-05, 3.576399999999716e-05, 3.654200000000052e-05, 3.651400000000138e-05, 3.6111000000001864e-05, 3.5847000000002044e-05, 3.604200000000002e-05, 3.645799999999963e-05, 3.647200000000267e-05, 3.6388999999997784e-05, 3.619499999999928e-05, 3.645799999999963e-05, 3.5916999999999893e-05, 3.650000000000181e-05, 3.613800000000153e-05, 3.6096999999998824e-05, 3.573600000000149e-05, 3.584800000000152e-05, 3.595799999999913e-05, 3.629200000000027e-05, 3.6139000000001004e-05, 3.584799999999805e-05, 3.6055000000000115e-05, 3.6124999999997964e-05, 3.650000000000181e-05, 3.626399999999766e-05, 3.619499999999928e-05, 3.6526999999998006e-05, 3.64719999999992e-05, 3.643000000000049e-05, 3.6569000000000185e-05, 3.6417000000000394e-05, 3.655600000000009e-05, 3.642999999999702e-05]</msg>
<status status="PASS" starttime="20201112 09:44:18.615" endtime="20201112 09:44:18.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.603" endtime="20201112 09:44:18.621"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.628" endtime="20201112 09:44:18.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:18.636" endtime="20201112 09:44:18.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.632" endtime="20201112 09:44:18.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.623" endtime="20201112 09:44:18.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.139" endtime="20201112 09:44:18.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.138" endtime="20201112 09:44:18.666"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.689" endtime="20201112 09:44:18.709"></status>
</kw>
<msg timestamp="20201112 09:44:18.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.686" endtime="20201112 09:44:18.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.712" endtime="20201112 09:44:18.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.719" endtime="20201112 09:44:18.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.678" endtime="20201112 09:44:18.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.672" endtime="20201112 09:44:18.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.743" endtime="20201112 09:44:19.092"></status>
</kw>
<msg timestamp="20201112 09:44:19.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043354625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043391681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.739" endtime="20201112 09:44:19.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043354625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043391681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.102" endtime="20201112 09:44:19.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.121" endtime="20201112 09:44:19.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.732" endtime="20201112 09:44:19.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.727" endtime="20201112 09:44:19.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:19.139" level="INFO">${RESULT} = [{'time': 0.043391681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.705600000000059e-05, 'source_diff': 3.705600000000059e-05}, {'time': 0.043432681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:19.129" endtime="20201112 09:44:19.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:19.170" level="INFO">${ACCURACY} = {'time': [0.043391681, 0.043432681, 0.043484681, 0.043536681, 0.043577708, 0.043617694, 0.043660694, 0.043708722, 0.043758708, 0.043809708, 0.043851736, 0.043900736, 0.043948736, 0.04400075, 0.0440427...</msg>
<status status="PASS" starttime="20201112 09:44:19.141" endtime="20201112 09:44:19.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.182" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 09:44:19.179" endtime="20201112 09:44:19.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.188" level="INFO">VALUE: [3.705600000000059e-05, 3.730600000000084e-05, 3.7680999999997744e-05, 3.747300000000314e-05, 3.7305000000001365e-05, 3.7512999999995966e-05, 3.722199999999648e-05, 3.745799999999716e-05, 3.6874999999998714e-05, 3.751400000000238e-05, 3.750000000000281e-05, 3.719400000000428e-05, 3.722200000000342e-05, 3.727799999999476e-05, 3.747199999999673e-05, 3.7138999999998534e-05, 3.7708999999996884e-05, 3.751400000000238e-05, 3.7152999999998104e-05, 3.6916999999997424e-05, 3.705600000000059e-05, 3.6874999999998714e-05, 3.6874999999998714e-05, 3.7597000000000325e-05, 3.7069000000000685e-05, 3.701400000000188e-05, 3.693100000000393e-05, 3.6874999999998714e-05, 3.688800000000575e-05, 3.740200000000582e-05, 3.738799999999931e-05, 3.7513000000002905e-05, 3.7138999999998534e-05, 3.7638999999999034e-05, 3.752800000000195e-05, 3.719500000000375e-05, 3.7597000000000325e-05, 3.726399999999519e-05, 3.7124999999998964e-05, 3.6805000000000865e-05, 3.7555000000001615e-05, 3.7333000000000505e-05, 3.722200000000342e-05, 3.690300000000479e-05, 3.727799999999476e-05, 3.681999999999991e-05, 3.676400000000163e-05, 3.747200000000367e-05, 3.768100000000468e-05, 3.72780000000017e-05]</msg>
<status status="PASS" starttime="20201112 09:44:19.184" endtime="20201112 09:44:19.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.172" endtime="20201112 09:44:19.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.197" endtime="20201112 09:44:19.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:19.206" endtime="20201112 09:44:19.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.202" endtime="20201112 09:44:19.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.193" endtime="20201112 09:44:19.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.668" endtime="20201112 09:44:19.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.667" endtime="20201112 09:44:19.232"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.257" endtime="20201112 09:44:19.277"></status>
</kw>
<msg timestamp="20201112 09:44:19.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.254" endtime="20201112 09:44:19.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.280" endtime="20201112 09:44:19.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.287" endtime="20201112 09:44:19.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.246" endtime="20201112 09:44:19.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.239" endtime="20201112 09:44:19.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.311" endtime="20201112 09:44:19.648"></status>
</kw>
<msg timestamp="20201112 09:44:19.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045174611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045212403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.307" endtime="20201112 09:44:19.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045174611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045212403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.658" endtime="20201112 09:44:19.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.677" endtime="20201112 09:44:19.681"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.300" endtime="20201112 09:44:19.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.295" endtime="20201112 09:44:19.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:19.695" level="INFO">${RESULT} = [{'time': 0.045212403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.779199999999483e-05, 'source_diff': 3.779199999999483e-05}, {'time': 0.045254403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:19.686" endtime="20201112 09:44:19.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:19.726" level="INFO">${ACCURACY} = {'time': [0.045212403, 0.045254403, 0.045304472, 0.045352431, 0.045398417, 0.045440431, 0.045484431, 0.045531431, 0.045580444, 0.045629444, 0.045678444, 0.045729458, 0.045777458, 0.045818472, 0.045861...</msg>
<status status="PASS" starttime="20201112 09:44:19.697" endtime="20201112 09:44:19.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.737" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 09:44:19.735" endtime="20201112 09:44:19.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.743" level="INFO">VALUE: [3.779199999999483e-05, 3.823599999999705e-05, 3.844399999999859e-05, 3.8486999999996774e-05, 3.834800000000055e-05, 3.830600000000184e-05, 3.8430999999998494e-05, 3.80980000000003e-05, 3.7818999999994496e-05, 3.841599999999945e-05, 3.7805000000001865e-05, 3.8347000000001075e-05, 3.823599999999705e-05, 3.8319000000001935e-05, 3.847199999999773e-05, 3.847199999999773e-05, 3.8611000000000895e-05, 3.8582999999994816e-05, 3.822199999999748e-05, 3.807000000000116e-05, 3.772200000000392e-05, 3.804200000000202e-05, 3.848600000000424e-05, 3.8152999999999104e-05, 3.79450000000045e-05, 3.826399999999619e-05, 3.782000000000091e-05, 3.852799999999601e-05, 3.7777000000002725e-05, 3.834800000000055e-05, 3.80980000000003e-05, 3.799999999999637e-05, 3.85980000000008e-05, 3.844399999999859e-05, 3.8569000000002185e-05, 3.84859999999973e-05, 3.867999999999927e-05, 3.793000000000546e-05, 3.7819000000001435e-05, 3.8054999999995176e-05, 3.8554999999995676e-05, 3.790300000000579e-05, 3.8388999999999784e-05, 3.848600000000424e-05, 3.7916999999998424e-05, 3.79580000000046e-05, 3.84859999999973e-05, 3.782000000000091e-05, 3.8582999999994816e-05, 3.847300000000414e-05]</msg>
<status status="PASS" starttime="20201112 09:44:19.740" endtime="20201112 09:44:19.745"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.728" endtime="20201112 09:44:19.746"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.753" endtime="20201112 09:44:19.756"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:19.761" endtime="20201112 09:44:19.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.757" endtime="20201112 09:44:19.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.748" endtime="20201112 09:44:19.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.235" endtime="20201112 09:44:19.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.233" endtime="20201112 09:44:19.787"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.811" endtime="20201112 09:44:19.831"></status>
</kw>
<msg timestamp="20201112 09:44:19.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.807" endtime="20201112 09:44:19.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.835" endtime="20201112 09:44:19.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.842" endtime="20201112 09:44:19.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.800" endtime="20201112 09:44:19.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.794" endtime="20201112 09:44:19.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.867" endtime="20201112 09:44:20.209"></status>
</kw>
<msg timestamp="20201112 09:44:20.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042880903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042920569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.864" endtime="20201112 09:44:20.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042880903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042920569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:20.219" endtime="20201112 09:44:20.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.238" endtime="20201112 09:44:20.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.857" endtime="20201112 09:44:20.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.852" endtime="20201112 09:44:20.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:20.256" level="INFO">${RESULT} = [{'time': 0.042920569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.96660000000007e-05, 'source_diff': 3.96660000000007e-05}, {'time': 0.042974583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:20.247" endtime="20201112 09:44:20.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:20.287" level="INFO">${ACCURACY} = {'time': [0.042920569, 0.042974583, 0.043020583, 0.043064583, 0.043112611, 0.043153597, 0.043203597, 0.043254611, 0.043308611, 0.043350611, 0.043401625, 0.043452639, 0.043496653, 0.043541653, 0.043585...</msg>
<status status="PASS" starttime="20201112 09:44:20.259" endtime="20201112 09:44:20.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.299" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 09:44:20.296" endtime="20201112 09:44:20.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.304" level="INFO">VALUE: [3.96660000000007e-05, 3.8860999999994206e-05, 3.9569000000003185e-05, 3.926399999999719e-05, 3.952800000000395e-05, 3.897200000000517e-05, 3.920800000000585e-05, 3.89859999999978e-05, 3.947199999999873e-05, 3.9554999999996676e-05, 3.8889000000000284e-05, 3.9403000000000354e-05, 3.907000000000216e-05, 3.9653000000000604e-05, 3.926400000000413e-05, 3.9153000000000104e-05, 3.9208999999998384e-05, 3.9639000000001035e-05, 3.879200000000277e-05, 3.8930999999998994e-05, 3.9416999999999924e-05, 3.8944999999998564e-05, 3.872199999999798e-05, 3.905599999999565e-05, 3.922199999999848e-05, 3.8805000000002865e-05, 3.9389000000000784e-05, 3.94580000000061e-05, 3.9319000000002935e-05, 3.9403000000000354e-05, 3.927799999999676e-05, 3.9054999999996176e-05, 3.892999999999952e-05, 3.954200000000352e-05, 3.9194999999998814e-05, 3.920799999999891e-05, 3.8902999999999854e-05, 3.954200000000352e-05, 3.9388999999993846e-05, 3.897199999999823e-05, 3.870900000000482e-05, 3.875000000000406e-05, 3.8972999999997704e-05, 3.873600000000449e-05, 3.9486999999997774e-05, 3.884800000000105e-05, 3.943100000000643e-05, 3.930600000000284e-05, 3.940200000000088e-05, 3.9554999999996676e-05]</msg>
<status status="PASS" starttime="20201112 09:44:20.301" endtime="20201112 09:44:20.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.289" endtime="20201112 09:44:20.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.314" endtime="20201112 09:44:20.317"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:20.323" endtime="20201112 09:44:20.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.318" endtime="20201112 09:44:20.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.309" endtime="20201112 09:44:20.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.790" endtime="20201112 09:44:20.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.788" endtime="20201112 09:44:20.349"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.372" endtime="20201112 09:44:20.392"></status>
</kw>
<msg timestamp="20201112 09:44:20.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:20.368" endtime="20201112 09:44:20.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:20.395" endtime="20201112 09:44:20.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.402" endtime="20201112 09:44:20.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.361" endtime="20201112 09:44:20.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.355" endtime="20201112 09:44:20.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.427" endtime="20201112 09:44:20.766"></status>
</kw>
<msg timestamp="20201112 09:44:20.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043042486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043082694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:20.424" endtime="20201112 09:44:20.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043042486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043082694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:20.775" endtime="20201112 09:44:20.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.795" endtime="20201112 09:44:20.798"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.415" endtime="20201112 09:44:20.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.410" endtime="20201112 09:44:20.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:20.813" level="INFO">${RESULT} = [{'time': 0.043082694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.020799999999991e-05, 'source_diff': 4.020799999999991e-05}, {'time': 0.043137764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:20.803" endtime="20201112 09:44:20.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:20.844" level="INFO">${ACCURACY} = {'time': [0.043082694, 0.043137764, 0.043192708, 0.043246764, 0.043300764, 0.043342736, 0.04338875, 0.04343175, 0.043474736, 0.043516764, 0.04356675, 0.043612764, 0.043659778, 0.043704778, 0.043746792...</msg>
<status status="PASS" starttime="20201112 09:44:20.815" endtime="20201112 09:44:20.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.855" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 09:44:20.852" endtime="20201112 09:44:20.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.860" level="INFO">VALUE: [4.020799999999991e-05, 4.073599999999955e-05, 4.068000000000127e-05, 3.9944999999999564e-05, 4.0346999999996136e-05, 3.977799999999726e-05, 3.9818999999996496e-05, 4.0346999999996136e-05, 4.0347000000003075e-05, 3.99859999999988e-05, 4.047199999999973e-05, 4.023599999999905e-05, 4.0403000000001354e-05, 3.9861000000002145e-05, 3.999999999999837e-05, 3.9861000000002145e-05, 3.9972999999998704e-05, 3.973599999999855e-05, 4.061199999999543e-05, 4.0445000000000064e-05, 4.0694999999993375e-05, 4.0082999999996316e-05, 4.0125000000001965e-05, 3.999999999999837e-05, 4.0583000000003755e-05, 4.045800000000016e-05, 4.0054999999997176e-05, 4.0667000000001174e-05, 4.020799999999991e-05, 4.0305000000004365e-05, 4.0653000000001605e-05, 4.051399999999844e-05, 4.0667000000001174e-05, 3.973599999999855e-05, 4.054199999999758e-05, 4.004199999999708e-05, 3.9833000000003005e-05, 3.9833000000003005e-05, 4.0445000000000064e-05, 4.0611000000002895e-05, 4.0472999999999204e-05, 3.9889000000001285e-05, 4.011200000000187e-05, 4.0638999999995096e-05, 4.0139000000001535e-05, 4.03059999999969e-05, 4.0318999999996996e-05, 4.047199999999973e-05, 3.9847000000002575e-05, 4.0653000000001605e-05]</msg>
<status status="PASS" starttime="20201112 09:44:20.857" endtime="20201112 09:44:20.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.845" endtime="20201112 09:44:20.864"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.870" endtime="20201112 09:44:20.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:20.879" endtime="20201112 09:44:20.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.874" endtime="20201112 09:44:20.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.866" endtime="20201112 09:44:20.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.351" endtime="20201112 09:44:20.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.350" endtime="20201112 09:44:20.905"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.928" endtime="20201112 09:44:20.948"></status>
</kw>
<msg timestamp="20201112 09:44:20.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:20.924" endtime="20201112 09:44:20.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:20.951" endtime="20201112 09:44:20.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.958" endtime="20201112 09:44:20.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.917" endtime="20201112 09:44:20.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.911" endtime="20201112 09:44:20.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.982" endtime="20201112 09:44:21.325"></status>
</kw>
<msg timestamp="20201112 09:44:21.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042486278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042527903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:20.978" endtime="20201112 09:44:21.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042486278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042527903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:21.334" endtime="20201112 09:44:21.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.354" endtime="20201112 09:44:21.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.971" endtime="20201112 09:44:21.359"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.966" endtime="20201112 09:44:21.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:21.372" level="INFO">${RESULT} = [{'time': 0.042527903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1624999999996526e-05, 'source_diff': 4.1624999999996526e-05}, {'time': 0.042579917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:21.362" endtime="20201112 09:44:21.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:21.403" level="INFO">${ACCURACY} = {'time': [0.042527903, 0.042579917, 0.042627944, 0.042679944, 0.042734972, 0.042781931, 0.042836944, 0.042889944, 0.042941958, 0.042998014, 0.043051972, 0.043104972, 0.043159972, 0.043209, 0.043258, 0...</msg>
<status status="PASS" starttime="20201112 09:44:21.374" endtime="20201112 09:44:21.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.414" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 09:44:21.411" endtime="20201112 09:44:21.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.419" level="INFO">VALUE: [4.1624999999996526e-05, 4.09859999999998e-05, 4.099999999999937e-05, 4.097200000000023e-05, 4.093000000000152e-05, 4.099999999999937e-05, 4.1512999999999967e-05, 4.1346999999997136e-05, 4.165200000000313e-05, 4.13059999999979e-05, 4.073599999999955e-05, 4.1388999999995846e-05, 4.102799999999851e-05, 4.1166999999994736e-05, 4.094400000000109e-05, 4.1611000000003895e-05, 4.105600000000459e-05, 4.127799999999876e-05, 4.105599999999765e-05, 4.0888999999995346e-05, 4.1639000000003035e-05, 4.1681000000001744e-05, 4.077799999999826e-05, 4.1430999999994556e-05, 4.1222999999999954e-05, 4.093000000000152e-05, 4.079199999999783e-05, 4.165199999999619e-05, 4.0917000000001424e-05, 4.127799999999876e-05, 4.172200000000098e-05, 4.1318999999997996e-05, 4.1568999999998246e-05, 4.169400000000184e-05, 4.072199999999998e-05, 4.105600000000459e-05, 4.1167000000001674e-05, 4.123600000000005e-05, 4.097199999999329e-05, 4.155600000000509e-05, 4.095800000000066e-05, 4.129200000000527e-05, 4.1097000000003825e-05, 4.105599999999765e-05, 4.1347000000004075e-05, 4.129200000000527e-05, 4.1583000000004755e-05, 4.0931000000000994e-05, 4.155600000000509e-05, 4.1417000000001924e-05]</msg>
<status status="PASS" starttime="20201112 09:44:21.416" endtime="20201112 09:44:21.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.404" endtime="20201112 09:44:21.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.429" endtime="20201112 09:44:21.432"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:21.438" endtime="20201112 09:44:21.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.433" endtime="20201112 09:44:21.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.424" endtime="20201112 09:44:21.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.907" endtime="20201112 09:44:21.463"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.906" endtime="20201112 09:44:21.463"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.474" endtime="20201112 09:44:21.490"></status>
</kw>
<msg timestamp="20201112 09:44:21.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.472" endtime="20201112 09:44:21.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.492" endtime="20201112 09:44:21.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.495" endtime="20201112 09:44:21.497"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.469" endtime="20201112 09:44:21.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.466" endtime="20201112 09:44:21.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.506" endtime="20201112 09:44:21.793"></status>
</kw>
<msg timestamp="20201112 09:44:21.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027883083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027925167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:21.505" endtime="20201112 09:44:21.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027883083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027925167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:21.798" endtime="20201112 09:44:21.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.806" endtime="20201112 09:44:21.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.501" endtime="20201112 09:44:21.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.499" endtime="20201112 09:44:21.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:21.815" level="INFO">${RESULT} = [{'time': 0.027925167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.208400000000126e-05, 'source_diff': 4.208400000000126e-05}, {'time': 0.027977167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:21.810" endtime="20201112 09:44:21.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:21.828" level="INFO">${ACCURACY} = {'time': [0.027925167, 0.027977167, 0.028029181, 0.02808125, 0.028131194, 0.028187236, 0.028242236, 0.028297194, 0.028354194, 0.028398264, 0.028449222, 0.028498236, 0.028545222, 0.028593236, 0.0286412...</msg>
<status status="PASS" starttime="20201112 09:44:21.816" endtime="20201112 09:44:21.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.834" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 09:44:21.833" endtime="20201112 09:44:21.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.836" level="INFO">VALUE: [4.208400000000126e-05, 4.2402999999999885e-05, 4.2237000000000524e-05, 4.254199999999958e-05, 4.2375000000000745e-05, 4.2347000000001606e-05, 4.177799999999926e-05, 4.2347000000001606e-05, 4.226300000000072e-05, 4.181999999999797e-05, 4.2111000000000925e-05, 4.220799999999844e-05, 4.223599999999758e-05, 4.2389000000000315e-05, 4.244399999999912e-05, 4.2417000000002925e-05, 4.2639000000000565e-05, 4.2680999999999275e-05, 4.255599999999915e-05, 4.1847000000001106e-05, 4.2125000000000495e-05, 4.1888999999999815e-05, 4.2639000000000565e-05, 4.2416999999999455e-05, 4.1902999999999385e-05, 4.1972999999997235e-05, 4.2083000000001786e-05, 4.254199999999958e-05, 4.229199999999933e-05, 4.215200000000016e-05, 4.2625000000000995e-05, 4.2277000000000287e-05, 4.2332999999998566e-05, 4.2667000000003175e-05, 4.250000000000087e-05, 4.2097000000001356e-05, 4.2152999999999635e-05, 4.1888999999999815e-05, 4.2389000000000315e-05, 4.1916999999998955e-05, 4.1902999999999385e-05, 4.175000000000012e-05, 4.23059999999989e-05, 4.19860000000008e-05, 4.2430999999999025e-05, 4.251400000000044e-05, 4.2402999999999885e-05, 4.195800000000166e-05, 4.209800000000083e-05, 4.1723000000000454e-05]</msg>
<status status="PASS" starttime="20201112 09:44:21.835" endtime="20201112 09:44:21.841"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.829" endtime="20201112 09:44:21.842"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.845" endtime="20201112 09:44:21.846"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:21.849" endtime="20201112 09:44:21.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.847" endtime="20201112 09:44:21.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.843" endtime="20201112 09:44:21.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.464" endtime="20201112 09:44:21.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.463" endtime="20201112 09:44:21.871"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.882" endtime="20201112 09:44:21.899"></status>
</kw>
<msg timestamp="20201112 09:44:21.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.880" endtime="20201112 09:44:21.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.900" endtime="20201112 09:44:21.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.903" endtime="20201112 09:44:21.905"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.877" endtime="20201112 09:44:21.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.874" endtime="20201112 09:44:21.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.914" endtime="20201112 09:44:22.200"></status>
</kw>
<msg timestamp="20201112 09:44:22.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025370917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025414611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:21.913" endtime="20201112 09:44:22.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025370917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025414611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:22.204" endtime="20201112 09:44:22.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.213" endtime="20201112 09:44:22.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.909" endtime="20201112 09:44:22.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.907" endtime="20201112 09:44:22.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:22.222" level="INFO">${RESULT} = [{'time': 0.025414611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.369400000000037e-05, 'source_diff': 4.369400000000037e-05}, {'time': 0.025462681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:22.218" endtime="20201112 09:44:22.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:22.236" level="INFO">${ACCURACY} = {'time': [0.025414611, 0.025462681, 0.025510597, 0.025560639, 0.025617611, 0.025672611, 0.025719639, 0.025769653, 0.025818639, 0.025872639, 0.025928694, 0.025986667, 0.026032653, 0.026088681, 0.026141...</msg>
<status status="PASS" starttime="20201112 09:44:22.223" endtime="20201112 09:44:22.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.241" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 09:44:22.240" endtime="20201112 09:44:22.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.244" level="INFO">VALUE: [4.369400000000037e-05, 4.377800000000126e-05, 4.326399999999772e-05, 4.3638999999998096e-05, 4.329199999999686e-05, 4.3582999999999816e-05, 4.331999999999947e-05, 4.3208999999998915e-05, 4.3639000000001565e-05, 4.3417000000000455e-05, 4.319399999999987e-05, 4.34860000000023e-05, 4.333399999999904e-05, 4.2736999999997555e-05, 4.305599999999965e-05, 4.332000000000294e-05, 4.3055000000000176e-05, 4.3180999999999775e-05, 4.327699999999782e-05, 4.2791000000000357e-05, 4.295799999999919e-05, 4.2804999999999926e-05, 4.295799999999919e-05, 4.316599999999726e-05, 4.348599999999883e-05, 4.3652999999997666e-05, 4.3652999999997666e-05, 4.343000000000055e-05, 4.3611000000002426e-05, 4.3180999999999775e-05, 4.347199999999926e-05, 4.3332999999999566e-05, 4.3680999999996806e-05, 4.275000000000112e-05, 4.3653000000001135e-05, 4.281999999999897e-05, 4.350000000000187e-05, 4.2930999999999525e-05, 4.3472999999998735e-05, 4.334800000000208e-05, 4.297199999999876e-05, 4.3582999999999816e-05, 4.355499999999721e-05, 4.3346999999999136e-05, 4.2847000000002106e-05, 4.279199999999983e-05, 4.3069000000003216e-05, 4.270799999999894e-05, 4.301400000000094e-05, 4.347200000000273e-05]</msg>
<status status="PASS" starttime="20201112 09:44:22.242" endtime="20201112 09:44:22.245"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.237" endtime="20201112 09:44:22.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.248" endtime="20201112 09:44:22.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:22.253" endtime="20201112 09:44:22.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.250" endtime="20201112 09:44:22.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.246" endtime="20201112 09:44:22.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.872" endtime="20201112 09:44:22.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.871" endtime="20201112 09:44:22.278"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.301" endtime="20201112 09:44:22.321"></status>
</kw>
<msg timestamp="20201112 09:44:22.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:22.298" endtime="20201112 09:44:22.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:22.325" endtime="20201112 09:44:22.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.332" endtime="20201112 09:44:22.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.291" endtime="20201112 09:44:22.338"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.284" endtime="20201112 09:44:22.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.356" endtime="20201112 09:44:22.694"></status>
</kw>
<msg timestamp="20201112 09:44:22.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042809278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042853125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:22.353" endtime="20201112 09:44:22.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042809278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042853125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:22.703" endtime="20201112 09:44:22.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.722" endtime="20201112 09:44:22.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.346" endtime="20201112 09:44:22.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.341" endtime="20201112 09:44:22.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:22.742" level="INFO">${RESULT} = [{'time': 0.042853125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3846999999999636e-05, 'source_diff': 4.3846999999999636e-05}, {'time': 0.042909125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:22.733" endtime="20201112 09:44:22.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:22.773" level="INFO">${ACCURACY} = {'time': [0.042853125, 0.042909125, 0.042961194, 0.043017153, 0.043075153, 0.043127167, 0.043186222, 0.043232167, 0.043284236, 0.043339194, 0.043389194, 0.043445181, 0.043492208, 0.043551222, 0.043607...</msg>
<status status="PASS" starttime="20201112 09:44:22.744" endtime="20201112 09:44:22.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.784" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 09:44:22.782" endtime="20201112 09:44:22.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.789" level="INFO">VALUE: [4.3846999999999636e-05, 4.4583000000000816e-05, 4.441599999999851e-05, 4.4403000000005355e-05, 4.432000000000047e-05, 4.457000000000072e-05, 4.4333000000000566e-05, 4.376400000000169e-05, 4.4624999999999526e-05, 4.40269999999951e-05, 4.420799999999697e-05, 4.459799999999986e-05, 4.4374999999999276e-05, 4.470799999999747e-05, 4.440199999999894e-05, 4.441600000000545e-05, 4.3902999999997916e-05, 4.4110999999999456e-05, 4.4138999999998596e-05, 4.394400000000409e-05, 4.3805000000000927e-05, 4.427800000000176e-05, 4.4096999999999886e-05, 4.4138999999998596e-05, 4.4333000000000566e-05, 4.447200000000373e-05, 4.4208999999996446e-05, 4.447200000000373e-05, 4.397200000000323e-05, 4.3973000000002704e-05, 4.4431000000004495e-05, 4.3833000000000066e-05, 4.4374999999999276e-05, 4.447200000000373e-05, 4.3888999999998346e-05, 4.425000000000262e-05, 4.4360999999999706e-05, 4.4110999999999456e-05, 4.3888999999998346e-05, 4.3861000000006145e-05, 4.4360999999999706e-05, 4.3833000000000066e-05, 4.4152999999998166e-05, 4.44860000000033e-05, 4.43060000000009e-05, 4.4666999999998236e-05, 4.373599999999561e-05, 4.376400000000169e-05, 4.450000000000287e-05, 4.407000000000022e-05]</msg>
<status status="PASS" starttime="20201112 09:44:22.786" endtime="20201112 09:44:22.791"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.775" endtime="20201112 09:44:22.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.799" endtime="20201112 09:44:22.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:22.808" endtime="20201112 09:44:22.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.804" endtime="20201112 09:44:22.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.795" endtime="20201112 09:44:22.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.280" endtime="20201112 09:44:22.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.279" endtime="20201112 09:44:22.834"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.858" endtime="20201112 09:44:22.877"></status>
</kw>
<msg timestamp="20201112 09:44:22.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:22.854" endtime="20201112 09:44:22.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:22.881" endtime="20201112 09:44:22.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.887" endtime="20201112 09:44:22.891"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.847" endtime="20201112 09:44:22.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.841" endtime="20201112 09:44:22.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.911" endtime="20201112 09:44:23.249"></status>
</kw>
<msg timestamp="20201112 09:44:23.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043189278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043234736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:22.908" endtime="20201112 09:44:23.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043189278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043234736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:23.259" endtime="20201112 09:44:23.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.279" endtime="20201112 09:44:23.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.901" endtime="20201112 09:44:23.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.896" endtime="20201112 09:44:23.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:23.302" level="INFO">${RESULT} = [{'time': 0.043234736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.545800000000516e-05, 'source_diff': 4.545800000000516e-05}, {'time': 0.04329075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:44:23.292" endtime="20201112 09:44:23.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:23.333" level="INFO">${ACCURACY} = {'time': [0.043234736, 0.04329075, 0.043342778, 0.04339475, 0.043443764, 0.043495764, 0.043549764, 0.043607819, 0.043656778, 0.043714792, 0.043767806, 0.043818792, 0.043869806, 0.043917806, 0.04396783...</msg>
<status status="PASS" starttime="20201112 09:44:23.304" endtime="20201112 09:44:23.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.344" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 09:44:23.342" endtime="20201112 09:44:23.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.350" level="INFO">VALUE: [4.545800000000516e-05, 4.523600000000405e-05, 4.499999999999643e-05, 4.5181000000005245e-05, 4.532000000000147e-05, 4.476400000000269e-05, 4.530599999999496e-05, 4.5597000000001386e-05, 4.4861000000000206e-05, 4.4945000000004565e-05, 4.5152999999999166e-05, 4.5431000000005495e-05, 4.480599999999446e-05, 4.4916999999998486e-05, 4.506899999999481e-05, 4.552799999999607e-05, 4.530500000000243e-05, 4.4833000000001066e-05, 4.480500000000193e-05, 4.550000000000387e-05, 4.5416999999998986e-05, 4.527800000000276e-05, 4.5375000000000276e-05, 4.481899999999456e-05, 4.473599999999661e-05, 4.527800000000276e-05, 4.5361000000000706e-05, 4.517999999999883e-05, 4.473599999999661e-05, 4.5597000000001386e-05, 4.4709000000003885e-05, 4.5430999999998556e-05, 4.5487000000003774e-05, 4.477799999999532e-05, 4.5458999999997696e-05, 4.5417000000005925e-05, 4.49860000000038e-05, 4.567999999999933e-05, 4.5125000000000026e-05, 4.5319000000001997e-05, 4.545799999999822e-05, 4.474999999999618e-05, 4.4888999999999346e-05, 4.500000000000337e-05, 4.476399999999575e-05, 4.480500000000193e-05, 4.501400000000294e-05, 4.502799999999557e-05, 4.523600000000405e-05, 4.4930999999998056e-05]</msg>
<status status="PASS" starttime="20201112 09:44:23.347" endtime="20201112 09:44:23.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.335" endtime="20201112 09:44:23.353"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.360" endtime="20201112 09:44:23.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:23.368" endtime="20201112 09:44:23.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.364" endtime="20201112 09:44:23.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.355" endtime="20201112 09:44:23.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.836" endtime="20201112 09:44:23.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.835" endtime="20201112 09:44:23.394"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.418" endtime="20201112 09:44:23.438"></status>
</kw>
<msg timestamp="20201112 09:44:23.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:23.414" endtime="20201112 09:44:23.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:23.442" endtime="20201112 09:44:23.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.448" endtime="20201112 09:44:23.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.407" endtime="20201112 09:44:23.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.401" endtime="20201112 09:44:23.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.472" endtime="20201112 09:44:23.809"></status>
</kw>
<msg timestamp="20201112 09:44:23.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042872917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042918694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:23.469" endtime="20201112 09:44:23.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042872917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042918694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:23.819" endtime="20201112 09:44:23.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.838" endtime="20201112 09:44:23.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.461" endtime="20201112 09:44:23.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.457" endtime="20201112 09:44:23.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:23.858" level="INFO">${RESULT} = [{'time': 0.042918694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.577699999999685e-05, 'source_diff': 4.577699999999685e-05}, {'time': 0.042971681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:23.848" endtime="20201112 09:44:23.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:23.888" level="INFO">${ACCURACY} = {'time': [0.042918694, 0.042971681, 0.043031694, 0.043083694, 0.043132694, 0.043183708, 0.043239708, 0.043298722, 0.043352722, 0.043413722, 0.043467736, 0.043526736, 0.043583764, 0.04364075, 0.0436928...</msg>
<status status="PASS" starttime="20201112 09:44:23.860" endtime="20201112 09:44:23.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.900" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 09:44:23.897" endtime="20201112 09:44:23.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.905" level="INFO">VALUE: [4.577699999999685e-05, 4.658399999999535e-05, 4.647200000000573e-05, 4.580499999999599e-05, 4.6333000000002567e-05, 4.606900000000275e-05, 4.5847000000001636e-05, 4.609699999999495e-05, 4.6125000000001026e-05, 4.5847000000001636e-05, 4.6111000000001456e-05, 4.6111000000001456e-05, 4.645799999999922e-05, 4.6013999999997e-05, 4.649999999999793e-05, 4.5889000000000346e-05, 4.6139000000000596e-05, 4.6013999999997e-05, 4.655599999999621e-05, 4.6166999999999736e-05, 4.5930999999999056e-05, 4.673599999999861e-05, 4.6680999999999806e-05, 4.590200000000044e-05, 4.576399999999675e-05, 4.605500000000318e-05, 4.5902999999999916e-05, 4.647199999999879e-05, 4.602800000000351e-05, 4.649999999999793e-05, 4.6139000000000596e-05, 4.630500000000343e-05, 4.6583000000002817e-05, 4.654200000000358e-05, 4.6139000000000596e-05, 4.573599999999761e-05, 4.656999999999578e-05, 4.6361000000001706e-05, 4.597199999999829e-05, 4.6639000000001096e-05, 4.5736999999997086e-05, 4.6639000000001096e-05, 4.624999999999768e-05, 4.6458999999998696e-05, 4.581899999999556e-05, 4.609699999999495e-05, 4.6375000000001276e-05, 4.666600000000076e-05, 4.636099999999477e-05, 4.630599999999596e-05]</msg>
<status status="PASS" starttime="20201112 09:44:23.902" endtime="20201112 09:44:23.907"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.890" endtime="20201112 09:44:23.909"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.915" endtime="20201112 09:44:23.918"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:23.924" endtime="20201112 09:44:23.946"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.919" endtime="20201112 09:44:23.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.911" endtime="20201112 09:44:23.949"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.397" endtime="20201112 09:44:23.949"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.395" endtime="20201112 09:44:23.950"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.973" endtime="20201112 09:44:23.995"></status>
</kw>
<msg timestamp="20201112 09:44:23.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:23.970" endtime="20201112 09:44:23.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:24.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:23.998" endtime="20201112 09:44:24.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.005" endtime="20201112 09:44:24.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.962" endtime="20201112 09:44:24.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.956" endtime="20201112 09:44:24.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.029" endtime="20201112 09:44:24.367"></status>
</kw>
<msg timestamp="20201112 09:44:24.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04320325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043249917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:24.025" endtime="20201112 09:44:24.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:24.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04320325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043249917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:24.377" endtime="20201112 09:44:24.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.396" endtime="20201112 09:44:24.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.018" endtime="20201112 09:44:24.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.013" endtime="20201112 09:44:24.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:24.416" level="INFO">${RESULT} = [{'time': 0.043249917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6667000000000236e-05, 'source_diff': 4.6667000000000236e-05}, {'time': 0.043298944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:24.407" endtime="20201112 09:44:24.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:24.447" level="INFO">${ACCURACY} = {'time': [0.043249917, 0.043298944, 0.043350944, 0.043403931, 0.043457958, 0.043507972, 0.043565972, 0.043619, 0.043668972, 0.043724986, 0.043781986, 0.043843986, 0.043904, 0.043956, 0.044014, 0.04406...</msg>
<status status="PASS" starttime="20201112 09:44:24.418" endtime="20201112 09:44:24.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:24.458" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 09:44:24.456" endtime="20201112 09:44:24.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:24.464" level="INFO">VALUE: [4.6667000000000236e-05, 4.679099999999742e-05, 4.748599999999936e-05, 4.7625000000002526e-05, 4.677699999999785e-05, 4.695799999999972e-05, 4.723599999999911e-05, 4.7681000000000806e-05, 4.7347000000003137e-05, 4.752799999999807e-05, 4.727800000000476e-05, 4.768000000000133e-05, 4.756899999999731e-05, 4.726400000000519e-05, 4.680599999999646e-05, 4.69860000000058e-05, 4.755599999999721e-05, 4.676399999999775e-05, 4.755599999999721e-05, 4.7681000000000806e-05, 4.737499999999534e-05, 4.684799999999517e-05, 4.766600000000176e-05, 4.706899999999681e-05, 4.749999999999893e-05, 4.688800000000187e-05, 4.7389000000001846e-05, 4.69860000000058e-05, 4.708300000000332e-05, 4.749999999999893e-05, 4.702799999999757e-05, 4.6917000000000486e-05, 4.7111000000002456e-05, 4.756899999999731e-05, 4.7139000000001596e-05, 4.6889000000001346e-05, 4.6917000000000486e-05, 4.695800000000666e-05, 4.7708999999999946e-05, 4.7347000000003137e-05, 4.754099999999817e-05, 4.684800000000211e-05, 4.731899999999706e-05, 4.699999999999843e-05, 4.715200000000169e-05, 4.683300000000307e-05, 4.7347000000003137e-05, 4.71940000000004e-05, 4.706899999999681e-05, 4.677799999999732e-05]</msg>
<status status="PASS" starttime="20201112 09:44:24.461" endtime="20201112 09:44:24.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.449" endtime="20201112 09:44:24.467"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.474" endtime="20201112 09:44:24.476"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:24.482" endtime="20201112 09:44:24.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.478" endtime="20201112 09:44:24.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.469" endtime="20201112 09:44:24.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.952" endtime="20201112 09:44:24.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.951" endtime="20201112 09:44:24.508"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.531" endtime="20201112 09:44:24.551"></status>
</kw>
<msg timestamp="20201112 09:44:24.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:24.528" endtime="20201112 09:44:24.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:24.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:24.555" endtime="20201112 09:44:24.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.561" endtime="20201112 09:44:24.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.521" endtime="20201112 09:44:24.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.515" endtime="20201112 09:44:24.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.585" endtime="20201112 09:44:24.922"></status>
</kw>
<msg timestamp="20201112 09:44:24.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042700722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042749, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:24.582" endtime="20201112 09:44:24.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:24.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042700722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042749, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:24.932" endtime="20201112 09:44:24.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.951" endtime="20201112 09:44:24.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.574" endtime="20201112 09:44:24.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.569" endtime="20201112 09:44:24.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:24.971" level="INFO">${RESULT} = [{'time': 0.042749, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.827799999999882e-05, 'source_diff': 4.827799999999882e-05}, {'time': 0.042802, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7...</msg>
<status status="PASS" starttime="20201112 09:44:24.962" endtime="20201112 09:44:24.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:25.001" level="INFO">${ACCURACY} = {'time': [0.042749, 0.042802, 0.042852014, 0.042908014, 0.042961028, 0.043013056, 0.043064028, 0.043125042, 0.043183042, 0.043241056, 0.043297069, 0.043348069, 0.043411069, 0.043461083, 0.043517097, 0...</msg>
<status status="PASS" starttime="20201112 09:44:24.973" endtime="20201112 09:44:25.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.013" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 09:44:25.010" endtime="20201112 09:44:25.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.018" level="INFO">VALUE: [4.827799999999882e-05, 4.78469999999967e-05, 4.797200000000029e-05, 4.8139000000002596e-05, 4.847200000000079e-05, 4.8125000000003026e-05, 4.83469999999972e-05, 4.855600000000515e-05, 4.804199999999814e-05, 4.8695000000001376e-05, 4.794400000000115e-05, 4.854100000000611e-05, 4.804099999999867e-05, 4.798599999999986e-05, 4.770800000000047e-05, 4.770800000000047e-05, 4.802799999999857e-05, 4.820800000000097e-05, 4.848600000000036e-05, 4.855499999999874e-05, 4.825000000000662e-05, 4.823600000000011e-05, 4.787499999999584e-05, 4.797200000000029e-05, 4.7861000000003207e-05, 4.85139999999995e-05, 4.809699999999695e-05, 4.813800000000312e-05, 4.7737000000006025e-05, 4.784799999999617e-05, 4.805599999999771e-05, 4.847200000000079e-05, 4.833299999999763e-05, 4.859700000000439e-05, 4.781899999999756e-05, 4.856900000000525e-05, 4.794400000000115e-05, 4.840299999999548e-05, 4.8179999999994894e-05, 4.822200000000054e-05, 4.7889000000002346e-05, 4.7903000000001916e-05, 4.8695000000001376e-05, 4.811099999999652e-05, 4.820800000000097e-05, 4.829099999999892e-05, 4.795800000000072e-05, 4.8153000000002166e-05, 4.8681000000001806e-05, 4.805599999999771e-05]</msg>
<status status="PASS" starttime="20201112 09:44:25.015" endtime="20201112 09:44:25.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.004" endtime="20201112 09:44:25.022"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:25.028" endtime="20201112 09:44:25.031"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:25.037" endtime="20201112 09:44:25.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.032" endtime="20201112 09:44:25.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.024" endtime="20201112 09:44:25.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.510" endtime="20201112 09:44:25.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.509" endtime="20201112 09:44:25.063"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:25.086" endtime="20201112 09:44:25.107"></status>
</kw>
<msg timestamp="20201112 09:44:25.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:25.082" endtime="20201112 09:44:25.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:25.110" endtime="20201112 09:44:25.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:25.116" endtime="20201112 09:44:25.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.075" endtime="20201112 09:44:25.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.069" endtime="20201112 09:44:25.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:25.140" endtime="20201112 09:44:25.479"></status>
</kw>
<msg timestamp="20201112 09:44:25.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042952903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043001625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:25.137" endtime="20201112 09:44:25.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042952903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043001625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:25.489" endtime="20201112 09:44:25.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:25.508" endtime="20201112 09:44:25.512"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.130" endtime="20201112 09:44:25.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.125" endtime="20201112 09:44:25.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:25.518" level="INFO">${RESULT} = [{'time': 0.043001625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.872200000000104e-05, 'source_diff': 4.872200000000104e-05}, {'time': 0.043054625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:25.514" endtime="20201112 09:44:25.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:25.532" level="INFO">${ACCURACY} = {'time': [0.043001625, 0.043054625, 0.043116639, 0.043176667, 0.043234722, 0.043297639, 0.043352667, 0.043413667, 0.043473667, 0.043534694, 0.043590681, 0.043651681, 0.043706708, 0.043765694, 0.043822...</msg>
<status status="PASS" starttime="20201112 09:44:25.519" endtime="20201112 09:44:25.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.537" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 09:44:25.536" endtime="20201112 09:44:25.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.540" level="INFO">VALUE: [4.872200000000104e-05, 4.890299999999598e-05, 4.956999999999878e-05, 4.9681000000002806e-05, 4.959700000000539e-05, 4.909699999999795e-05, 4.965299999999673e-05, 4.9403000000003416e-05, 4.9445000000002126e-05, 4.9193999999995464e-05, 4.961199999999749e-05, 4.875000000000018e-05, 4.904099999999967e-05, 4.945800000000222e-05, 4.9375000000004277e-05, 4.872200000000104e-05, 4.9429999999996144e-05, 4.886099999999727e-05, 4.898600000000086e-05, 4.940299999999648e-05, 4.9125000000004027e-05, 4.958299999999888e-05, 4.893099999999512e-05, 4.945899999999476e-05, 4.955599999999921e-05, 4.947200000000179e-05, 4.877799999999932e-05, 4.8709000000000946e-05, 4.8931000000002056e-05, 4.882000000000497e-05, 4.937499999999734e-05, 4.9625000000004527e-05, 4.9667000000003236e-05, 4.897200000000129e-05, 4.9417000000002986e-05, 4.911100000000446e-05, 4.897200000000129e-05, 4.902799999999957e-05, 4.952800000000007e-05, 4.915299999999623e-05, 4.876399999999975e-05, 4.88469999999977e-05, 4.934700000000514e-05, 4.872200000000104e-05, 4.959700000000539e-05, 4.93469999999982e-05, 4.951399999999356e-05, 4.900000000000043e-05, 4.941699999999605e-05, 4.9707999999995534e-05]</msg>
<status status="PASS" starttime="20201112 09:44:25.538" endtime="20201112 09:44:25.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.533" endtime="20201112 09:44:25.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:25.544" endtime="20201112 09:44:25.546"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:25.549" endtime="20201112 09:44:25.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.546" endtime="20201112 09:44:25.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.542" endtime="20201112 09:44:25.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.065" endtime="20201112 09:44:25.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.064" endtime="20201112 09:44:25.570"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:25.581" endtime="20201112 09:44:25.599"></status>
</kw>
<msg timestamp="20201112 09:44:25.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:25.579" endtime="20201112 09:44:25.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:25.600" endtime="20201112 09:44:25.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:25.603" endtime="20201112 09:44:25.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.576" endtime="20201112 09:44:25.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.573" endtime="20201112 09:44:25.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:25.614" endtime="20201112 09:44:25.934"></status>
</kw>
<msg timestamp="20201112 09:44:25.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025046514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025096833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:25.613" endtime="20201112 09:44:25.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025046514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025096833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:25.943" endtime="20201112 09:44:25.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:25.962" endtime="20201112 09:44:25.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.609" endtime="20201112 09:44:25.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.607" endtime="20201112 09:44:25.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:25.982" level="INFO">${RESULT} = [{'time': 0.025096833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.031900000000006e-05, 'source_diff': 5.031900000000006e-05}, {'time': 0.025160847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:25.972" endtime="20201112 09:44:25.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:26.013" level="INFO">${ACCURACY} = {'time': [0.025096833, 0.025160847, 0.025213847, 0.025275847, 0.025337903, 0.025394861, 0.025459875, 0.025516917, 0.025578944, 0.025642889, 0.025697972, 0.025760931, 0.025817958, 0.025870931, 0.025935...</msg>
<status status="PASS" starttime="20201112 09:44:25.984" endtime="20201112 09:44:26.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.024" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 09:44:26.022" endtime="20201112 09:44:26.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.029" level="INFO">VALUE: [5.031900000000006e-05, 5.011099999999852e-05, 4.991600000000054e-05, 4.976400000000075e-05, 5.043100000000009e-05, 5.058299999999988e-05, 5.006899999999981e-05, 5.0014000000001e-05, 5.0665999999997824e-05, 4.988899999999741e-05, 5.03469999999992e-05, 4.975000000000118e-05, 5.0415999999997574e-05, 5.036199999999824e-05, 4.984799999999817e-05, 5.055600000000021e-05, 4.9723000000001516e-05, 4.977700000000085e-05, 5.030500000000049e-05, 4.980499999999999e-05, 4.993000000000011e-05, 4.987500000000131e-05, 5.012500000000156e-05, 4.972200000000204e-05, 5.022199999999907e-05, 5.036099999999877e-05, 5.007000000000275e-05, 5.070899999999948e-05, 5.043100000000009e-05, 5.027800000000082e-05, 5.004100000000067e-05, 5.056999999999978e-05, 5.019499999999941e-05, 5.018099999999984e-05, 5.045799999999975e-05, 5.015200000000122e-05, 5.05270000000016e-05, 5.045799999999975e-05, 5.00270000000011e-05, 5.05279999999976e-05, 5.037499999999834e-05, 4.993000000000011e-05, 5.069400000000043e-05, 5.004200000000014e-05, 5.049999999999846e-05, 5.059699999999945e-05, 5.013900000000113e-05, 5.03339999999991e-05, 5.069499999999991e-05, 5.044499999999966e-05]</msg>
<status status="PASS" starttime="20201112 09:44:26.026" endtime="20201112 09:44:26.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.015" endtime="20201112 09:44:26.033"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.039" endtime="20201112 09:44:26.042"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:26.048" endtime="20201112 09:44:26.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.043" endtime="20201112 09:44:26.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.035" endtime="20201112 09:44:26.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.571" endtime="20201112 09:44:26.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.571" endtime="20201112 09:44:26.074"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.097" endtime="20201112 09:44:26.118"></status>
</kw>
<msg timestamp="20201112 09:44:26.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:26.094" endtime="20201112 09:44:26.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:26.121" endtime="20201112 09:44:26.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.128" endtime="20201112 09:44:26.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.086" endtime="20201112 09:44:26.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.080" endtime="20201112 09:44:26.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.152" endtime="20201112 09:44:26.490"></status>
</kw>
<msg timestamp="20201112 09:44:26.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043085361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043136722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:26.148" endtime="20201112 09:44:26.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043085361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043136722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:26.500" endtime="20201112 09:44:26.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.519" endtime="20201112 09:44:26.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.141" endtime="20201112 09:44:26.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.136" endtime="20201112 09:44:26.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:26.539" level="INFO">${RESULT} = [{'time': 0.043136722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.136099999999977e-05, 'source_diff': 5.136099999999977e-05}, {'time': 0.043193722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:26.530" endtime="20201112 09:44:26.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:26.570" level="INFO">${ACCURACY} = {'time': [0.043136722, 0.043193722, 0.043250722, 0.043306736, 0.043362736, 0.04341875, 0.04348175, 0.043537764, 0.043595764, 0.043650833, 0.043713806, 0.043777778, 0.043842792, 0.043903806, 0.04395981...</msg>
<status status="PASS" starttime="20201112 09:44:26.541" endtime="20201112 09:44:26.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.581" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 09:44:26.579" endtime="20201112 09:44:26.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.587" level="INFO">VALUE: [5.136099999999977e-05, 5.1443999999997714e-05, 5.162499999999959e-05, 5.106900000000081e-05, 5.08469999999997e-05, 5.1485999999996424e-05, 5.155600000000121e-05, 5.169499999999744e-05, 5.1403000000005417e-05, 5.158300000000088e-05, 5.1209000000003446e-05, 5.11390000000056e-05, 5.1235999999996173e-05, 5.14869999999959e-05, 5.1429999999998144e-05, 5.150000000000293e-05, 5.131900000000106e-05, 5.0887999999998934e-05, 5.152799999999513e-05, 5.0707999999996534e-05, 5.141699999999805e-05, 5.138899999999891e-05, 5.091600000000501e-05, 5.138899999999891e-05, 5.088899999999841e-05, 5.08339999999996e-05, 5.083300000000013e-05, 5.0903000000004917e-05, 5.162499999999959e-05, 5.11669999999978e-05, 5.1181000000004306e-05, 5.126400000000225e-05, 5.126399999999531e-05, 5.132000000000053e-05, 5.134800000000661e-05, 5.077699999999491e-05, 5.1235999999996173e-05, 5.0943999999997214e-05, 5.088899999999841e-05, 5.148600000000336e-05, 5.081900000000056e-05, 5.138900000000585e-05, 5.104200000000114e-05, 5.072200000000304e-05, 5.152799999999513e-05, 5.107000000000028e-05, 5.107000000000028e-05, 5.155600000000121e-05, 5.152799999999513e-05, 5.148600000000336e-05]</msg>
<status status="PASS" starttime="20201112 09:44:26.583" endtime="20201112 09:44:26.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.572" endtime="20201112 09:44:26.590"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.596" endtime="20201112 09:44:26.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:26.605" endtime="20201112 09:44:26.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.601" endtime="20201112 09:44:26.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.592" endtime="20201112 09:44:26.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.076" endtime="20201112 09:44:26.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.075" endtime="20201112 09:44:26.631"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.655" endtime="20201112 09:44:26.674"></status>
</kw>
<msg timestamp="20201112 09:44:26.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:26.651" endtime="20201112 09:44:26.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:26.678" endtime="20201112 09:44:26.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.684" endtime="20201112 09:44:26.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.643" endtime="20201112 09:44:26.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.638" endtime="20201112 09:44:26.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.708" endtime="20201112 09:44:27.047"></status>
</kw>
<msg timestamp="20201112 09:44:27.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043021542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043073889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:26.705" endtime="20201112 09:44:27.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:27.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043021542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043073889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:27.057" endtime="20201112 09:44:27.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.076" endtime="20201112 09:44:27.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.697" endtime="20201112 09:44:27.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.693" endtime="20201112 09:44:27.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:27.095" level="INFO">${RESULT} = [{'time': 0.043073889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.234699999999426e-05, 'source_diff': 5.234699999999426e-05}, {'time': 0.043127889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:27.086" endtime="20201112 09:44:27.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:27.126" level="INFO">${ACCURACY} = {'time': [0.043073889, 0.043127889, 0.043188889, 0.043250903, 0.043308917, 0.043371931, 0.043436917, 0.043493931, 0.043557931, 0.043615958, 0.043672986, 0.043728958, 0.043790958, 0.043852958, 0.04391,...</msg>
<status status="PASS" starttime="20201112 09:44:27.097" endtime="20201112 09:44:27.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:27.137" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 09:44:27.135" endtime="20201112 09:44:27.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:27.143" level="INFO">VALUE: [5.234699999999426e-05, 5.176400000000275e-05, 5.186100000000027e-05, 5.2471999999997854e-05, 5.198600000000386e-05, 5.204200000000214e-05, 5.213899999999966e-05, 5.2263999999996313e-05, 5.193099999999812e-05, 5.2665999999999824e-05, 5.2721999999998104e-05, 5.231899999999512e-05, 5.2263999999996313e-05, 5.20549999999953e-05, 5.208299999999444e-05, 5.18470000000007e-05, 5.23470000000012e-05, 5.172200000000404e-05, 5.25419999999957e-05, 5.188899999999941e-05, 5.248600000000436e-05, 5.172200000000404e-05, 5.195899999999726e-05, 5.1985999999996924e-05, 5.187499999999984e-05, 5.2223000000004016e-05, 5.188899999999941e-05, 5.1749999999996243e-05, 5.256900000000231e-05, 5.211100000000052e-05, 5.236100000000077e-05, 5.188899999999941e-05, 5.223600000000411e-05, 5.180600000000146e-05, 5.213899999999966e-05, 5.236100000000077e-05, 5.26669999999993e-05, 5.21669999999988e-05, 5.213899999999966e-05, 5.229199999999545e-05, 5.2263999999996313e-05, 5.262500000000059e-05, 5.172200000000404e-05, 5.244499999999819e-05, 5.1973000000003766e-05, 5.2735999999997674e-05, 5.234800000000067e-05, 5.170800000000447e-05, 5.2457999999998284e-05, 5.2652000000000254e-05]</msg>
<status status="PASS" starttime="20201112 09:44:27.139" endtime="20201112 09:44:27.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.128" endtime="20201112 09:44:27.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.157" endtime="20201112 09:44:27.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:27.165" endtime="20201112 09:44:27.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.161" endtime="20201112 09:44:27.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.152" endtime="20201112 09:44:27.190"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.633" endtime="20201112 09:44:27.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.632" endtime="20201112 09:44:27.191"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.215" endtime="20201112 09:44:27.235"></status>
</kw>
<msg timestamp="20201112 09:44:27.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:27.212" endtime="20201112 09:44:27.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:27.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:27.239" endtime="20201112 09:44:27.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.245" endtime="20201112 09:44:27.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.204" endtime="20201112 09:44:27.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.198" endtime="20201112 09:44:27.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.269" endtime="20201112 09:44:27.607"></status>
</kw>
<msg timestamp="20201112 09:44:27.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042955208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043008792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:27.266" endtime="20201112 09:44:27.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:27.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042955208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043008792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:27.617" endtime="20201112 09:44:27.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.636" endtime="20201112 09:44:27.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.259" endtime="20201112 09:44:27.645"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.254" endtime="20201112 09:44:27.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:27.658" level="INFO">${RESULT} = [{'time': 0.043008792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.358399999999541e-05, 'source_diff': 5.358399999999541e-05}, {'time': 0.043075806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:27.648" endtime="20201112 09:44:27.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:27.689" level="INFO">${ACCURACY} = {'time': [0.043008792, 0.043075806, 0.043138819, 0.043201819, 0.043265875, 0.043321833, 0.043382833, 0.043447861, 0.043510847, 0.043570847, 0.043636861, 0.043693875, 0.043760875, 0.043816875, 0.043875...</msg>
<status status="PASS" starttime="20201112 09:44:27.660" endtime="20201112 09:44:27.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:27.700" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 09:44:27.697" endtime="20201112 09:44:27.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:27.706" level="INFO">VALUE: [5.358399999999541e-05, 5.35140000000045e-05, 5.3693999999999964e-05, 5.348600000000536e-05, 5.368099999999987e-05, 5.3499999999997994e-05, 5.355500000000374e-05, 5.2735999999997674e-05, 5.3263999999997313e-05, 5.3179999999999894e-05, 5.313900000000066e-05, 5.3527999999997133e-05, 5.287500000000084e-05, 5.293099999999912e-05, 5.363900000000116e-05, 5.3221999999998604e-05, 5.358400000000235e-05, 5.361099999999508e-05, 5.302800000000357e-05, 5.294499999999869e-05, 5.2902000000000504e-05, 5.3223000000005016e-05, 5.2888000000000934e-05, 5.351299999999809e-05, 5.283300000000213e-05, 5.279099999999648e-05, 5.361100000000202e-05, 5.365300000000073e-05, 5.279199999999595e-05, 5.288900000000041e-05, 5.297200000000529e-05, 5.3485999999998424e-05, 5.313900000000066e-05, 5.3485999999998424e-05, 5.311100000000152e-05, 5.358299999999594e-05, 5.3221999999998604e-05, 5.345899999999876e-05, 5.334800000000167e-05, 5.333300000000263e-05, 5.2999999999997494e-05, 5.2916000000000074e-05, 5.308300000000238e-05, 5.3430000000000144e-05, 5.306899999999587e-05, 5.3513999999997564e-05, 5.28470000000017e-05, 5.3221999999998604e-05, 5.290299999999998e-05, 5.2971999999998354e-05]</msg>
<status status="PASS" starttime="20201112 09:44:27.702" endtime="20201112 09:44:27.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.691" endtime="20201112 09:44:27.709"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.716" endtime="20201112 09:44:27.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:27.725" endtime="20201112 09:44:27.746"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.720" endtime="20201112 09:44:27.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.711" endtime="20201112 09:44:27.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.194" endtime="20201112 09:44:27.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.192" endtime="20201112 09:44:27.751"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.774" endtime="20201112 09:44:27.795"></status>
</kw>
<msg timestamp="20201112 09:44:27.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:27.771" endtime="20201112 09:44:27.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:27.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:27.798" endtime="20201112 09:44:27.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.805" endtime="20201112 09:44:27.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.764" endtime="20201112 09:44:27.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.758" endtime="20201112 09:44:27.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:27.829" endtime="20201112 09:44:28.169"></status>
</kw>
<msg timestamp="20201112 09:44:28.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043032, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043086278, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:27.825" endtime="20201112 09:44:28.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043032, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043086278, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:28.179" endtime="20201112 09:44:28.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.198" endtime="20201112 09:44:28.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.818" endtime="20201112 09:44:28.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.813" endtime="20201112 09:44:28.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:28.218" level="INFO">${RESULT} = [{'time': 0.043086278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4277999999997883e-05, 'source_diff': 5.4277999999997883e-05}, {'time': 0.043154333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:28.208" endtime="20201112 09:44:28.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:28.248" level="INFO">${ACCURACY} = {'time': [0.043086278, 0.043154333, 0.043212361, 0.043271333, 0.043330292, 0.043393306, 0.043450306, 0.043512319, 0.043576319, 0.043633347, 0.043690333, 0.043750361, 0.043809347, 0.043866375, 0.043925...</msg>
<status status="PASS" starttime="20201112 09:44:28.220" endtime="20201112 09:44:28.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.260" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 09:44:28.258" endtime="20201112 09:44:28.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.265" level="INFO">VALUE: [5.4277999999997883e-05, 5.3944000000000214e-05, 5.4180000000000894e-05, 5.408300000000338e-05, 5.405599999999677e-05, 5.411200000000199e-05, 5.413900000000166e-05, 5.4152000000001754e-05, 5.4235999999999174e-05, 5.456900000000431e-05, 5.3721999999999104e-05, 5.46670000000013e-05, 5.4680000000001394e-05, 5.3749999999998244e-05, 5.425000000000568e-05, 5.461099999999608e-05, 5.4471999999999854e-05, 5.432000000000353e-05, 5.4208000000000034e-05, 5.409700000000295e-05, 5.3735999999998674e-05, 5.411100000000252e-05, 5.443100000000062e-05, 5.409800000000242e-05, 5.436200000000224e-05, 5.45140000000055e-05, 5.4208000000000034e-05, 5.4637999999995746e-05, 5.436100000000277e-05, 5.413899999999472e-05, 5.3985999999998924e-05, 5.388900000000141e-05, 5.4471999999999854e-05, 5.41670000000008e-05, 5.415300000000123e-05, 5.395899999999926e-05, 5.4485999999999424e-05, 5.3707999999999534e-05, 5.4249999999998744e-05, 5.434699999999626e-05, 5.436100000000277e-05, 5.426400000000525e-05, 5.4416000000001574e-05, 5.413900000000166e-05, 5.381899999999662e-05, 5.388900000000141e-05, 5.433300000000363e-05, 5.4513999999998564e-05, 5.379199999999695e-05, 5.395800000000672e-05]</msg>
<status status="PASS" starttime="20201112 09:44:28.262" endtime="20201112 09:44:28.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.250" endtime="20201112 09:44:28.269"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.275" endtime="20201112 09:44:28.278"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:28.285" endtime="20201112 09:44:28.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.280" endtime="20201112 09:44:28.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.271" endtime="20201112 09:44:28.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.753" endtime="20201112 09:44:28.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:27.752" endtime="20201112 09:44:28.311"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.334" endtime="20201112 09:44:28.355"></status>
</kw>
<msg timestamp="20201112 09:44:28.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:28.331" endtime="20201112 09:44:28.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:28.359" endtime="20201112 09:44:28.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.365" endtime="20201112 09:44:28.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.324" endtime="20201112 09:44:28.371"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.318" endtime="20201112 09:44:28.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.389" endtime="20201112 09:44:28.728"></status>
</kw>
<msg timestamp="20201112 09:44:28.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042883847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042939347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:28.386" endtime="20201112 09:44:28.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042883847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042939347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:28.737" endtime="20201112 09:44:28.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.757" endtime="20201112 09:44:28.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.378" endtime="20201112 09:44:28.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.373" endtime="20201112 09:44:28.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:28.776" level="INFO">${RESULT} = [{'time': 0.042939347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5499999999999994e-05, 'source_diff': 5.5499999999999994e-05}, {'time': 0.043008361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:28.767" endtime="20201112 09:44:28.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:28.807" level="INFO">${ACCURACY} = {'time': [0.042939347, 0.043008361, 0.043074375, 0.043137403, 0.043202375, 0.043263375, 0.043333403, 0.043391389, 0.043455403, 0.043517431, 0.043579417, 0.043643431, 0.043712417, 0.043771486, 0.043829...</msg>
<status status="PASS" starttime="20201112 09:44:28.778" endtime="20201112 09:44:28.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.818" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 09:44:28.816" endtime="20201112 09:44:28.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.824" level="INFO">VALUE: [5.5499999999999994e-05, 5.511100000000352e-05, 5.561099999999708e-05, 5.4749999999999244e-05, 5.568100000000187e-05, 5.556899999999837e-05, 5.508399999999691e-05, 5.4708000000000534e-05, 5.5527999999999134e-05, 5.4999999999999494e-05, 5.477800000000532e-05, 5.511200000000299e-05, 5.530600000000496e-05, 5.55549999999988e-05, 5.4944000000001214e-05, 5.4999999999999494e-05, 5.5402000000003004e-05, 5.531899999999812e-05, 5.509700000000395e-05, 5.5750000000000244e-05, 5.5416000000002574e-05, 5.552800000000607e-05, 5.5263999999999314e-05, 5.4735999999999674e-05, 5.5222000000000604e-05, 5.538900000000291e-05, 5.513900000000266e-05, 5.515300000000223e-05, 5.520900000000051e-05, 5.5750000000000244e-05, 5.493100000000112e-05, 5.511200000000299e-05, 5.552699999999966e-05, 5.5443999999994775e-05, 5.476299999999934e-05, 5.5277999999998884e-05, 5.5263999999999314e-05, 5.5444000000001714e-05, 5.5513999999999564e-05, 5.531999999999759e-05, 5.5430000000002144e-05, 5.48470000000037e-05, 5.5013999999999064e-05, 5.557000000000478e-05, 5.5472000000000854e-05, 5.559699999999751e-05, 5.4972000000000354e-05, 5.515300000000223e-05, 5.5263999999999314e-05, 5.555600000000521e-05]</msg>
<status status="PASS" starttime="20201112 09:44:28.821" endtime="20201112 09:44:28.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.809" endtime="20201112 09:44:28.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.834" endtime="20201112 09:44:28.837"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:28.842" endtime="20201112 09:44:28.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.838" endtime="20201112 09:44:28.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.829" endtime="20201112 09:44:28.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.313" endtime="20201112 09:44:28.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.312" endtime="20201112 09:44:28.868"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.892" endtime="20201112 09:44:28.913"></status>
</kw>
<msg timestamp="20201112 09:44:28.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:28.888" endtime="20201112 09:44:28.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:28.916" endtime="20201112 09:44:28.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.923" endtime="20201112 09:44:28.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.881" endtime="20201112 09:44:28.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.875" endtime="20201112 09:44:28.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.946" endtime="20201112 09:44:29.234"></status>
</kw>
<msg timestamp="20201112 09:44:29.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043114069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043169875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:28.943" endtime="20201112 09:44:29.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043114069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043169875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:29.238" endtime="20201112 09:44:29.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.247" endtime="20201112 09:44:29.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.936" endtime="20201112 09:44:29.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.931" endtime="20201112 09:44:29.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:29.256" level="INFO">${RESULT} = [{'time': 0.043169875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.580600000000546e-05, 'source_diff': 5.580600000000546e-05}, {'time': 0.043231875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:29.252" endtime="20201112 09:44:29.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:29.270" level="INFO">${ACCURACY} = {'time': [0.043169875, 0.043231875, 0.043292889, 0.043362917, 0.043426903, 0.043495903, 0.043556917, 0.043616931, 0.043679944, 0.043747931, 0.043814944, 0.043875944, 0.043933972, 0.044004958, 0.044066...</msg>
<status status="PASS" starttime="20201112 09:44:29.257" endtime="20201112 09:44:29.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.275" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 09:44:29.274" endtime="20201112 09:44:29.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.278" level="INFO">VALUE: [5.580600000000546e-05, 5.643100000000262e-05, 5.606999999999834e-05, 5.611099999999758e-05, 5.6528000000000134e-05, 5.612500000000409e-05, 5.668100000000287e-05, 5.645899999999482e-05, 5.6193999999995525e-05, 5.595899999999432e-05, 5.659699999999851e-05, 5.6458000000002284e-05, 5.579099999999948e-05, 5.6679999999996455e-05, 5.579200000000589e-05, 5.580499999999905e-05, 5.6514000000000564e-05, 5.630499999999955e-05, 5.581999999999809e-05, 5.6055999999998773e-05, 5.643099999999568e-05, 5.6555999999999274e-05, 5.644500000000219e-05, 5.6277999999999884e-05, 5.6041999999999204e-05, 5.608399999999791e-05, 5.611199999999705e-05, 5.6305999999999023e-05, 5.576300000000034e-05, 5.588900000000341e-05, 5.6208000000002034e-05, 5.5916000000003074e-05, 5.640300000000348e-05, 5.633299999999869e-05, 5.656899999999937e-05, 5.5929999999995705e-05, 5.6236000000001174e-05, 5.5972000000001354e-05, 5.612499999999715e-05, 5.605600000000571e-05, 5.6041999999999204e-05, 5.5763999999999814e-05, 5.611099999999758e-05, 5.6014000000000064e-05, 5.6236000000001174e-05, 5.666699999999636e-05, 5.630499999999955e-05, 5.6166000000003324e-05, 5.636099999999783e-05, 5.6430000000003144e-05]</msg>
<status status="PASS" starttime="20201112 09:44:29.277" endtime="20201112 09:44:29.279"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.271" endtime="20201112 09:44:29.280"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.283" endtime="20201112 09:44:29.284"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:29.287" endtime="20201112 09:44:29.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.285" endtime="20201112 09:44:29.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.281" endtime="20201112 09:44:29.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.871" endtime="20201112 09:44:29.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.869" endtime="20201112 09:44:29.308"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.319" endtime="20201112 09:44:29.337"></status>
</kw>
<msg timestamp="20201112 09:44:29.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:29.318" endtime="20201112 09:44:29.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:29.339" endtime="20201112 09:44:29.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.342" endtime="20201112 09:44:29.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.314" endtime="20201112 09:44:29.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.312" endtime="20201112 09:44:29.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.353" endtime="20201112 09:44:29.690"></status>
</kw>
<msg timestamp="20201112 09:44:29.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025482583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025539375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:29.351" endtime="20201112 09:44:29.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025482583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025539375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:29.700" endtime="20201112 09:44:29.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.719" endtime="20201112 09:44:29.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.348" endtime="20201112 09:44:29.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.346" endtime="20201112 09:44:29.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:29.741" level="INFO">${RESULT} = [{'time': 0.025539375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6791999999999954e-05, 'source_diff': 5.6791999999999954e-05}, {'time': 0.025598389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:29.732" endtime="20201112 09:44:29.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:29.772" level="INFO">${ACCURACY} = {'time': [0.025539375, 0.025598389, 0.025665389, 0.025725403, 0.025790403, 0.025857431, 0.025923431, 0.025989431, 0.026054458, 0.026119458, 0.026185444, 0.026248458, 0.026314486, 0.026385472, 0.026457...</msg>
<status status="PASS" starttime="20201112 09:44:29.743" endtime="20201112 09:44:29.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.783" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 09:44:29.780" endtime="20201112 09:44:29.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.788" level="INFO">VALUE: [5.6791999999999954e-05, 5.6778000000000384e-05, 5.684699999999876e-05, 5.734699999999926e-05, 5.6721999999998635e-05, 5.7292000000000454e-05, 5.690300000000051e-05, 5.7514000000001564e-05, 5.6943999999999745e-05, 5.758299999999994e-05, 5.6887999999997996e-05, 5.680500000000005e-05, 5.691700000000008e-05, 5.731900000000012e-05, 5.7263999999997844e-05, 5.7264000000001314e-05, 5.6722000000002104e-05, 5.7193999999999995e-05, 5.7027999999997164e-05, 5.7735999999999205e-05, 5.709699999999901e-05, 5.7472000000002854e-05, 5.7333999999999163e-05, 5.670899999999854e-05, 5.7028000000000634e-05, 5.7306000000000024e-05, 5.752700000000166e-05, 5.7222000000002604e-05, 5.727699999999794e-05, 5.7680000000000925e-05, 5.733299999999969e-05, 5.730500000000055e-05, 5.730500000000055e-05, 5.70550000000003e-05, 5.7556000000000274e-05, 5.763899999999822e-05, 5.7542000000000704e-05, 5.684699999999876e-05, 5.694499999999922e-05, 5.683399999999866e-05, 5.6778000000000384e-05, 5.7694000000000495e-05, 5.6778000000000384e-05, 5.6805999999999524e-05, 5.731900000000012e-05, 5.683299999999919e-05, 5.688900000000094e-05, 5.7249999999998274e-05, 5.7221999999999135e-05, 5.7499999999998525e-05]</msg>
<status status="PASS" starttime="20201112 09:44:29.785" endtime="20201112 09:44:29.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.774" endtime="20201112 09:44:29.792"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.798" endtime="20201112 09:44:29.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:29.806" endtime="20201112 09:44:29.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.802" endtime="20201112 09:44:29.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.793" endtime="20201112 09:44:29.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.309" endtime="20201112 09:44:29.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.309" endtime="20201112 09:44:29.832"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.856" endtime="20201112 09:44:29.877"></status>
</kw>
<msg timestamp="20201112 09:44:29.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:29.852" endtime="20201112 09:44:29.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:29.880" endtime="20201112 09:44:29.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.886" endtime="20201112 09:44:29.890"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.845" endtime="20201112 09:44:29.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.839" endtime="20201112 09:44:29.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.910" endtime="20201112 09:44:30.248"></status>
</kw>
<msg timestamp="20201112 09:44:30.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042763486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042821819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:29.907" endtime="20201112 09:44:30.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042763486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042821819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:30.258" endtime="20201112 09:44:30.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.277" endtime="20201112 09:44:30.283"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.899" endtime="20201112 09:44:30.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.895" endtime="20201112 09:44:30.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:30.297" level="INFO">${RESULT} = [{'time': 0.042821819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.833299999999375e-05, 'source_diff': 5.833299999999375e-05}, {'time': 0.042885819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:30.287" endtime="20201112 09:44:30.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:30.327" level="INFO">${ACCURACY} = {'time': [0.042821819, 0.042885819, 0.042952819, 0.043021833, 0.043093847, 0.043159847, 0.043223889, 0.043287861, 0.043358861, 0.043426889, 0.043497889, 0.043567903, 0.043638903, 0.043708903, 0.043779...</msg>
<status status="PASS" starttime="20201112 09:44:30.299" endtime="20201112 09:44:30.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.339" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 09:44:30.336" endtime="20201112 09:44:30.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.344" level="INFO">VALUE: [5.833299999999375e-05, 5.781900000000062e-05, 5.851300000000309e-05, 5.8430000000005144e-05, 5.830499999999461e-05, 5.813899999999872e-05, 5.784699999999976e-05, 5.8221999999996665e-05, 5.85550000000018e-05, 5.868100000000487e-05, 5.812499999999915e-05, 5.7971999999996415e-05, 5.834700000000026e-05, 5.795900000000326e-05, 5.816699999999786e-05, 5.8042000000001204e-05, 5.8028000000001634e-05, 5.786099999999933e-05, 5.783300000000019e-05, 5.82629999999959e-05, 5.8235999999996235e-05, 5.840300000000548e-05, 5.863899999999922e-05, 5.8528000000002134e-05, 5.8528000000002134e-05, 5.791699999999761e-05, 5.836099999999983e-05, 5.784699999999976e-05, 5.834700000000026e-05, 5.7972000000003354e-05, 5.834700000000026e-05, 5.790300000000498e-05, 5.772300000000258e-05, 5.847300000000333e-05, 5.868099999999793e-05, 5.8693999999998026e-05, 5.8707999999997595e-05, 5.830500000000155e-05, 5.863899999999922e-05, 5.815300000000523e-05, 5.78470000000067e-05, 5.833300000000069e-05, 5.780500000000105e-05, 5.7736000000002674e-05, 5.8556000000001274e-05, 5.8542000000001704e-05, 5.8556000000001274e-05, 5.78749999999989e-05, 5.8306000000001024e-05, 5.8735999999996735e-05]</msg>
<status status="PASS" starttime="20201112 09:44:30.341" endtime="20201112 09:44:30.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.329" endtime="20201112 09:44:30.348"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.354" endtime="20201112 09:44:30.357"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:30.363" endtime="20201112 09:44:30.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.358" endtime="20201112 09:44:30.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.350" endtime="20201112 09:44:30.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.835" endtime="20201112 09:44:30.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.833" endtime="20201112 09:44:30.389"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.412" endtime="20201112 09:44:30.433"></status>
</kw>
<msg timestamp="20201112 09:44:30.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:30.409" endtime="20201112 09:44:30.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:30.436" endtime="20201112 09:44:30.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.443" endtime="20201112 09:44:30.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.401" endtime="20201112 09:44:30.448"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.395" endtime="20201112 09:44:30.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.467" endtime="20201112 09:44:30.805"></status>
</kw>
<msg timestamp="20201112 09:44:30.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042877458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042936417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:30.464" endtime="20201112 09:44:30.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042877458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042936417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:30.815" endtime="20201112 09:44:30.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.834" endtime="20201112 09:44:30.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.456" endtime="20201112 09:44:30.841"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.451" endtime="20201112 09:44:30.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:30.854" level="INFO">${RESULT} = [{'time': 0.042936417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.895899999999732e-05, 'source_diff': 5.895899999999732e-05}, {'time': 0.043008431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:30.844" endtime="20201112 09:44:30.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:30.884" level="INFO">${ACCURACY} = {'time': [0.042936417, 0.043008431, 0.043074431, 0.043142444, 0.043207444, 0.043274458, 0.043348472, 0.043416472, 0.043486486, 0.043556542, 0.043629514, 0.043700528, 0.043765528, 0.043833528, 0.043903...</msg>
<status status="PASS" starttime="20201112 09:44:30.856" endtime="20201112 09:44:30.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.896" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 09:44:30.894" endtime="20201112 09:44:30.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.901" level="INFO">VALUE: [5.895899999999732e-05, 5.9362000000000303e-05, 5.9598000000000984e-05, 5.909700000000101e-05, 5.9221999999997665e-05, 5.95550000000028e-05, 5.906900000000187e-05, 5.930499999999561e-05, 5.9235999999997235e-05, 5.963899999999328e-05, 5.911100000000058e-05, 5.8778000000002384e-05, 5.9249999999996805e-05, 5.911099999999364e-05, 5.9235999999997235e-05, 5.9070000000001344e-05, 5.931900000000212e-05, 5.938899999999997e-05, 5.9069999999994405e-05, 5.8736000000003674e-05, 5.934700000000126e-05, 5.8930000000005645e-05, 5.9500000000003994e-05, 5.9028000000002634e-05, 5.9514000000003564e-05, 5.934699999999432e-05, 5.966699999999936e-05, 5.9513999999996625e-05, 5.96949999999985e-05, 5.9570000000001844e-05, 5.9513999999996625e-05, 5.936100000000083e-05, 5.909700000000101e-05, 5.968099999999893e-05, 5.9278000000002884e-05, 5.961100000000108e-05, 5.947300000000433e-05, 5.941699999999911e-05, 5.926300000000384e-05, 5.8736000000003674e-05, 5.9429999999999206e-05, 5.880500000000205e-05, 5.9179999999998956e-05, 5.881900000000162e-05, 5.8764000000002814e-05, 5.8763999999995875e-05, 5.9499999999997055e-05, 5.894499999999775e-05, 5.9278000000002884e-05, 5.9306000000002024e-05]</msg>
<status status="PASS" starttime="20201112 09:44:30.898" endtime="20201112 09:44:30.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.886" endtime="20201112 09:44:30.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.911" endtime="20201112 09:44:30.914"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:30.920" endtime="20201112 09:44:30.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.915" endtime="20201112 09:44:30.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.906" endtime="20201112 09:44:30.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.391" endtime="20201112 09:44:30.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.390" endtime="20201112 09:44:30.946"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.969" endtime="20201112 09:44:30.990"></status>
</kw>
<msg timestamp="20201112 09:44:30.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:30.966" endtime="20201112 09:44:30.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:30.994" endtime="20201112 09:44:30.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.000" endtime="20201112 09:44:31.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.958" endtime="20201112 09:44:31.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.952" endtime="20201112 09:44:31.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.024" endtime="20201112 09:44:31.360"></status>
</kw>
<msg timestamp="20201112 09:44:31.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042823764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042883681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:31.021" endtime="20201112 09:44:31.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042823764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042883681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:31.370" endtime="20201112 09:44:31.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.389" endtime="20201112 09:44:31.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.014" endtime="20201112 09:44:31.397"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.009" endtime="20201112 09:44:31.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:31.409" level="INFO">${RESULT} = [{'time': 0.042883681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.991699999999961e-05, 'source_diff': 5.991699999999961e-05}, {'time': 0.042954694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:31.400" endtime="20201112 09:44:31.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:31.440" level="INFO">${ACCURACY} = {'time': [0.042883681, 0.042954694, 0.043021694, 0.043084694, 0.043146722, 0.043210722, 0.043277736, 0.043349722, 0.043420736, 0.043491764, 0.04356175, 0.043627764, 0.043694764, 0.043768764, 0.0438377...</msg>
<status status="PASS" starttime="20201112 09:44:31.411" endtime="20201112 09:44:31.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.451" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 09:44:31.449" endtime="20201112 09:44:31.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.457" level="INFO">VALUE: [5.991699999999961e-05, 6.0235999999998235e-05, 6.0582999999996e-05, 6.02629999999979e-05, 5.9749999999997305e-05, 6.009700000000201e-05, 5.9791999999996015e-05, 5.9763999999996875e-05, 6.063900000000122e-05, 6.0250000000004744e-05, 6.0694000000000026e-05, 6.0235999999998235e-05, 6.061099999999514e-05, 5.988900000000047e-05, 6.0084000000001914e-05, 6.070899999999907e-05, 6.0249999999997805e-05, 5.986100000000133e-05, 6.061100000000208e-05, 5.979100000000348e-05, 5.977699999999697e-05, 6.0680000000000456e-05, 6.004100000000373e-05, 6.0014000000004064e-05, 6.0499999999998055e-05, 6.063900000000122e-05, 6.0443999999999776e-05, 5.991699999999961e-05, 6.0306000000003024e-05, 6.043099999999968e-05, 6.0320000000002594e-05, 6.009699999999507e-05, 6.034700000000226e-05, 5.99870000000044e-05, 6.0582999999996e-05, 6.0443999999999776e-05, 6.002700000000416e-05, 6.0222000000005604e-05, 5.9944000000006215e-05, 6.009700000000201e-05, 6.018099999999943e-05, 6.040300000000054e-05, 5.9971999999998415e-05, 6.0000000000004494e-05, 5.9806000000002524e-05, 6.044499999999925e-05, 6.0264000000004314e-05, 6.0541999999996765e-05, 5.9749999999997305e-05, 6.070899999999907e-05]</msg>
<status status="PASS" starttime="20201112 09:44:31.453" endtime="20201112 09:44:31.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.442" endtime="20201112 09:44:31.460"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.467" endtime="20201112 09:44:31.469"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:31.475" endtime="20201112 09:44:31.497"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.471" endtime="20201112 09:44:31.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.462" endtime="20201112 09:44:31.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.948" endtime="20201112 09:44:31.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.947" endtime="20201112 09:44:31.501"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.525" endtime="20201112 09:44:31.545"></status>
</kw>
<msg timestamp="20201112 09:44:31.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:31.521" endtime="20201112 09:44:31.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:31.549" endtime="20201112 09:44:31.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.555" endtime="20201112 09:44:31.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.514" endtime="20201112 09:44:31.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.508" endtime="20201112 09:44:31.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.581" endtime="20201112 09:44:31.920"></status>
</kw>
<msg timestamp="20201112 09:44:31.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043003111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043064292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:31.577" endtime="20201112 09:44:31.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043003111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043064292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:31.930" endtime="20201112 09:44:31.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.949" endtime="20201112 09:44:31.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.570" endtime="20201112 09:44:31.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.565" endtime="20201112 09:44:31.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:31.970" level="INFO">${RESULT} = [{'time': 0.043064292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.118100000000043e-05, 'source_diff': 6.118100000000043e-05}, {'time': 0.043140292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:31.961" endtime="20201112 09:44:31.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:32.001" level="INFO">${ACCURACY} = {'time': [0.043064292, 0.043140292, 0.043211306, 0.043277319, 0.043350333, 0.043416319, 0.043489347, 0.043556347, 0.043628361, 0.043692347, 0.043758361, 0.043823375, 0.043892375, 0.043960389, 0.044029...</msg>
<status status="PASS" starttime="20201112 09:44:31.973" endtime="20201112 09:44:32.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.013" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 09:44:32.010" endtime="20201112 09:44:32.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.018" level="INFO">VALUE: [6.118100000000043e-05, 6.105599999999684e-05, 6.148699999999896e-05, 6.168000000000146e-05, 6.14159999999947e-05, 6.147199999999992e-05, 6.12080000000001e-05, 6.165300000000179e-05, 6.0999999999998555e-05, 6.155499999999786e-05, 6.147199999999992e-05, 6.111099999999564e-05, 6.155599999999734e-05, 6.140300000000154e-05, 6.0735999999998735e-05, 6.127799999999795e-05, 6.111099999999564e-05, 6.118000000000096e-05, 6.155599999999734e-05, 6.144500000000025e-05, 6.134800000000273e-05, 6.140199999999513e-05, 6.12080000000001e-05, 6.109700000000301e-05, 6.130600000000402e-05, 6.162499999999571e-05, 6.122199999999967e-05, 6.113900000000172e-05, 6.147199999999992e-05, 6.113900000000172e-05, 6.111100000000258e-05, 6.109699999999607e-05, 6.145899999999982e-05, 6.134700000000326e-05, 6.0777999999997445e-05, 6.072300000000558e-05, 6.166700000000136e-05, 6.152700000000566e-05, 6.134700000000326e-05, 6.0721999999999166e-05, 6.0985999999998985e-05, 6.0763999999997875e-05, 6.138899999999503e-05, 6.126399999999838e-05, 6.130500000000455e-05, 6.0777999999997445e-05, 6.147199999999992e-05, 6.130600000000402e-05, 6.145800000000035e-05, 6.08750000000019e-05]</msg>
<status status="PASS" starttime="20201112 09:44:32.015" endtime="20201112 09:44:32.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.003" endtime="20201112 09:44:32.022"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.028" endtime="20201112 09:44:32.031"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:32.037" endtime="20201112 09:44:32.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.032" endtime="20201112 09:44:32.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.023" endtime="20201112 09:44:32.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.503" endtime="20201112 09:44:32.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.502" endtime="20201112 09:44:32.063"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.087" endtime="20201112 09:44:32.107"></status>
</kw>
<msg timestamp="20201112 09:44:32.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:32.083" endtime="20201112 09:44:32.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:32.111" endtime="20201112 09:44:32.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.118" endtime="20201112 09:44:32.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.076" endtime="20201112 09:44:32.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.070" endtime="20201112 09:44:32.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.141" endtime="20201112 09:44:32.480"></status>
</kw>
<msg timestamp="20201112 09:44:32.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043534139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043596292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:32.138" endtime="20201112 09:44:32.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043534139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043596292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:32.490" endtime="20201112 09:44:32.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.509" endtime="20201112 09:44:32.514"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.131" endtime="20201112 09:44:32.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.126" endtime="20201112 09:44:32.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:32.528" level="INFO">${RESULT} = [{'time': 0.043596292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.215300000000229e-05, 'source_diff': 6.215300000000229e-05}, {'time': 0.043673278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:32.519" endtime="20201112 09:44:32.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:32.559" level="INFO">${ACCURACY} = {'time': [0.043596292, 0.043673278, 0.043746375, 0.043816292, 0.043881319, 0.043956319, 0.044030319, 0.044104347, 0.044181333, 0.044255347, 0.044328347, 0.044401375, 0.044471403, 0.044536375, 0.044608...</msg>
<status status="PASS" starttime="20201112 09:44:32.531" endtime="20201112 09:44:32.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.571" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 09:44:32.568" endtime="20201112 09:44:32.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.576" level="INFO">VALUE: [6.215300000000229e-05, 6.22499999999998e-05, 6.209699999999707e-05, 6.255599999999834e-05, 6.256900000000537e-05, 6.19300000000017e-05, 6.259699999999757e-05, 6.261100000000408e-05, 6.266600000000289e-05, 6.176399999999888e-05, 6.201399999999913e-05, 6.181899999999768e-05, 6.197200000000042e-05, 6.233300000000469e-05, 6.26950000000015e-05, 6.243100000000168e-05, 6.231999999999766e-05, 6.209699999999707e-05, 6.222199999999373e-05, 6.177799999999845e-05, 6.215300000000229e-05, 6.223600000000024e-05, 6.192999999999477e-05, 6.20550000000053e-05, 6.263900000000322e-05, 6.251399999999963e-05, 6.267999999999552e-05, 6.204199999999827e-05, 6.218000000000196e-05, 6.1888000000003e-05, 6.190300000000204e-05, 6.245800000000135e-05, 6.184700000000376e-05, 6.205599999999784e-05, 6.236099999999689e-05, 6.197299999999989e-05, 6.195800000000085e-05, 6.218100000000143e-05, 6.179200000000495e-05, 6.216599999999545e-05, 6.183299999999725e-05, 6.265300000000279e-05, 6.256899999999843e-05, 6.194400000000128e-05, 6.238899999999603e-05, 6.211100000000358e-05, 6.19029999999951e-05, 6.188900000000247e-05, 6.213899999999578e-05, 6.230599999999809e-05]</msg>
<status status="PASS" starttime="20201112 09:44:32.573" endtime="20201112 09:44:32.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.561" endtime="20201112 09:44:32.584"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.591" endtime="20201112 09:44:32.593"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:32.596" endtime="20201112 09:44:32.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.593" endtime="20201112 09:44:32.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.586" endtime="20201112 09:44:32.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.065" endtime="20201112 09:44:32.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.064" endtime="20201112 09:44:32.617"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.628" endtime="20201112 09:44:32.646"></status>
</kw>
<msg timestamp="20201112 09:44:32.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:32.627" endtime="20201112 09:44:32.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:32.648" endtime="20201112 09:44:32.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.651" endtime="20201112 09:44:32.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.623" endtime="20201112 09:44:32.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.621" endtime="20201112 09:44:32.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.662" endtime="20201112 09:44:32.993"></status>
</kw>
<msg timestamp="20201112 09:44:33.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025184181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025247583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:32.660" endtime="20201112 09:44:33.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025184181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025247583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:33.002" endtime="20201112 09:44:33.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.021" endtime="20201112 09:44:33.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.657" endtime="20201112 09:44:33.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.655" endtime="20201112 09:44:33.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:33.041" level="INFO">${RESULT} = [{'time': 0.025247583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.34020000000006e-05, 'source_diff': 6.34020000000006e-05}, {'time': 0.025321597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:33.032" endtime="20201112 09:44:33.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:33.072" level="INFO">${ACCURACY} = {'time': [0.025247583, 0.025321597, 0.025387597, 0.025457639, 0.025524611, 0.025593639, 0.025659639, 0.025731667, 0.025800653, 0.025873708, 0.025943681, 0.026009694, 0.026078694, 0.026152681, 0.026222...</msg>
<status status="PASS" starttime="20201112 09:44:33.043" endtime="20201112 09:44:33.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.083" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 09:44:33.081" endtime="20201112 09:44:33.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.088" level="INFO">VALUE: [6.34020000000006e-05, 6.300000000000056e-05, 6.29300000000027e-05, 6.322200000000167e-05, 6.30829999999985e-05, 6.345800000000235e-05, 6.273600000000074e-05, 6.333399999999823e-05, 6.30279999999997e-05, 6.373599999999827e-05, 6.277799999999945e-05, 6.336100000000136e-05, 6.32500000000008e-05, 6.343099999999921e-05, 6.298600000000099e-05, 6.295799999999838e-05, 6.276399999999988e-05, 6.284700000000129e-05, 6.309699999999807e-05, 6.311099999999764e-05, 6.284700000000129e-05, 6.316700000000286e-05, 6.327799999999995e-05, 6.344499999999878e-05, 6.326400000000038e-05, 6.351399999999716e-05, 6.286100000000086e-05, 6.312500000000068e-05, 6.304099999999979e-05, 6.359799999999804e-05, 6.273600000000074e-05, 6.297200000000142e-05, 6.365200000000085e-05, 6.276399999999988e-05, 6.323599999999777e-05, 6.351400000000063e-05, 6.372300000000164e-05, 6.366699999999989e-05, 6.281999999999816e-05, 6.33340000000017e-05, 6.295899999999785e-05, 6.329199999999952e-05, 6.290299999999957e-05, 6.304199999999927e-05, 6.313900000000025e-05, 6.286200000000033e-05, 6.363900000000075e-05, 6.349999999999759e-05, 6.356899999999943e-05, 6.29439999999988e-05]</msg>
<status status="PASS" starttime="20201112 09:44:33.085" endtime="20201112 09:44:33.090"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.074" endtime="20201112 09:44:33.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.098" endtime="20201112 09:44:33.101"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:33.107" endtime="20201112 09:44:33.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.102" endtime="20201112 09:44:33.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.094" endtime="20201112 09:44:33.132"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.618" endtime="20201112 09:44:33.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.618" endtime="20201112 09:44:33.133"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.156" endtime="20201112 09:44:33.177"></status>
</kw>
<msg timestamp="20201112 09:44:33.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:33.153" endtime="20201112 09:44:33.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:33.180" endtime="20201112 09:44:33.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.187" endtime="20201112 09:44:33.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.145" endtime="20201112 09:44:33.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.139" endtime="20201112 09:44:33.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.211" endtime="20201112 09:44:33.549"></status>
</kw>
<msg timestamp="20201112 09:44:33.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042661222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042725361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:33.207" endtime="20201112 09:44:33.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042661222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042725361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:33.559" endtime="20201112 09:44:33.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.578" endtime="20201112 09:44:33.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.200" endtime="20201112 09:44:33.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.195" endtime="20201112 09:44:33.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:33.597" level="INFO">${RESULT} = [{'time': 0.042725361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.413900000000472e-05, 'source_diff': 6.413900000000472e-05}, {'time': 0.042801361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:33.588" endtime="20201112 09:44:33.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:33.629" level="INFO">${ACCURACY} = {'time': [0.042725361, 0.042801361, 0.042872361, 0.042939361, 0.043010431, 0.043089403, 0.043155389, 0.043222403, 0.043295403, 0.043371444, 0.043438431, 0.043516431, 0.043595458, 0.043662444, 0.043740...</msg>
<status status="PASS" starttime="20201112 09:44:33.599" endtime="20201112 09:44:33.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.641" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 09:44:33.638" endtime="20201112 09:44:33.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.647" level="INFO">VALUE: [6.413900000000472e-05, 6.377800000000045e-05, 6.376400000000088e-05, 6.39300000000037e-05, 6.423700000000171e-05, 6.387499999999796e-05, 6.397200000000242e-05, 6.372200000000217e-05, 6.430600000000009e-05, 6.43750000000054e-05, 6.45699999999999e-05, 6.431999999999966e-05, 6.470799999999666e-05, 6.38750000000049e-05, 6.409700000000601e-05, 6.42500000000018e-05, 6.46950000000035e-05, 6.444399999999684e-05, 6.390300000000404e-05, 6.42080000000031e-05, 6.45280000000012e-05, 6.377800000000045e-05, 6.427800000000095e-05, 6.377800000000045e-05, 6.412499999999821e-05, 6.37359999999948e-05, 6.419499999999606e-05, 6.455600000000034e-05, 6.399999999999462e-05, 6.395799999999591e-05, 6.415199999999788e-05, 6.447200000000292e-05, 6.40280000000007e-05, 6.398600000000199e-05, 6.422200000000267e-05, 6.433399999999923e-05, 6.398599999999505e-05, 6.426400000000138e-05, 6.434700000000626e-05, 6.395799999999591e-05, 6.37359999999948e-05, 6.37500000000013e-05, 6.413899999999778e-05, 6.441699999999717e-05, 6.40829999999995e-05, 6.416599999999745e-05, 6.424999999999487e-05, 6.392999999999677e-05, 6.376399999999394e-05, 6.455500000000086e-05]</msg>
<status status="PASS" starttime="20201112 09:44:33.643" endtime="20201112 09:44:33.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.631" endtime="20201112 09:44:33.650"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.657" endtime="20201112 09:44:33.659"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:33.665" endtime="20201112 09:44:33.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.661" endtime="20201112 09:44:33.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.652" endtime="20201112 09:44:33.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.135" endtime="20201112 09:44:33.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.134" endtime="20201112 09:44:33.691"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.714" endtime="20201112 09:44:33.736"></status>
</kw>
<msg timestamp="20201112 09:44:33.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:33.711" endtime="20201112 09:44:33.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:33.739" endtime="20201112 09:44:33.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.745" endtime="20201112 09:44:33.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.704" endtime="20201112 09:44:33.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.698" endtime="20201112 09:44:33.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.769" endtime="20201112 09:44:34.107"></status>
</kw>
<msg timestamp="20201112 09:44:34.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042758347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042823722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:33.766" endtime="20201112 09:44:34.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042758347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042823722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:34.117" endtime="20201112 09:44:34.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.136" endtime="20201112 09:44:34.144"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.759" endtime="20201112 09:44:34.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.754" endtime="20201112 09:44:34.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:34.157" level="INFO">${RESULT} = [{'time': 0.042823722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.537499999999946e-05, 'source_diff': 6.537499999999946e-05}, {'time': 0.04289675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:44:34.148" endtime="20201112 09:44:34.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:34.188" level="INFO">${ACCURACY} = {'time': [0.042823722, 0.04289675, 0.042973792, 0.043043764, 0.043117778, 0.043188764, 0.043264792, 0.043335778, 0.043414792, 0.043490792, 0.043561806, 0.043634806, 0.043703819, 0.043783833, 0.0438548...</msg>
<status status="PASS" starttime="20201112 09:44:34.159" endtime="20201112 09:44:34.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.199" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 09:44:34.197" endtime="20201112 09:44:34.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.205" level="INFO">VALUE: [6.537499999999946e-05, 6.515299999999835e-05, 6.52229999999962e-05, 6.529200000000152e-05, 6.486099999999939e-05, 6.563899999999928e-05, 6.545900000000382e-05, 6.543099999999774e-05, 6.545900000000382e-05, 6.522300000000314e-05, 6.480600000000059e-05, 6.47229999999957e-05, 6.509700000000007e-05, 6.52500000000028e-05, 6.523600000000324e-05, 6.526400000000238e-05, 6.474999999999537e-05, 6.501400000000213e-05, 6.554200000000177e-05, 6.487499999999896e-05, 6.512499999999921e-05, 6.509700000000007e-05, 6.482000000000016e-05, 6.550000000000306e-05, 6.569499999999756e-05, 6.476400000000188e-05, 6.488799999999906e-05, 6.530500000000161e-05, 6.480499999999417e-05, 6.520799999999716e-05, 6.561100000000014e-05, 6.484699999999982e-05, 6.511099999999964e-05, 6.567999999999852e-05, 6.526299999999596e-05, 6.500000000000256e-05, 6.511099999999964e-05, 6.493100000000418e-05, 6.518100000000443e-05, 6.55700000000009e-05, 6.562499999999971e-05, 6.512499999999921e-05, 6.556900000000143e-05, 6.567999999999852e-05, 6.515199999999888e-05, 6.505500000000136e-05, 6.568099999999799e-05, 6.531900000000118e-05, 6.505500000000136e-05, 6.534700000000032e-05]</msg>
<status status="PASS" starttime="20201112 09:44:34.202" endtime="20201112 09:44:34.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.190" endtime="20201112 09:44:34.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.215" endtime="20201112 09:44:34.217"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:34.223" endtime="20201112 09:44:34.245"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.219" endtime="20201112 09:44:34.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.210" endtime="20201112 09:44:34.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.693" endtime="20201112 09:44:34.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.692" endtime="20201112 09:44:34.249"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.273" endtime="20201112 09:44:34.294"></status>
</kw>
<msg timestamp="20201112 09:44:34.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:34.269" endtime="20201112 09:44:34.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:34.298" endtime="20201112 09:44:34.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.304" endtime="20201112 09:44:34.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.262" endtime="20201112 09:44:34.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.256" endtime="20201112 09:44:34.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.328" endtime="20201112 09:44:34.666"></status>
</kw>
<msg timestamp="20201112 09:44:34.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043238847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043305431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:34.325" endtime="20201112 09:44:34.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043238847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043305431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:34.676" endtime="20201112 09:44:34.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.696" endtime="20201112 09:44:34.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.317" endtime="20201112 09:44:34.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.313" endtime="20201112 09:44:34.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:34.715" level="INFO">${RESULT} = [{'time': 0.043305431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.658400000000148e-05, 'source_diff': 6.658400000000148e-05}, {'time': 0.043381403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:34.706" endtime="20201112 09:44:34.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:34.746" level="INFO">${ACCURACY} = {'time': [0.043305431, 0.043381403, 0.043455389, 0.043533403, 0.043604403, 0.043678486, 0.043755431, 0.043825431, 0.043901472, 0.043975444, 0.044055458, 0.044130458, 0.0442075, 0.0442765, 0.044349486,...</msg>
<status status="PASS" starttime="20201112 09:44:34.717" endtime="20201112 09:44:34.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.757" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 09:44:34.755" endtime="20201112 09:44:34.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.763" level="INFO">VALUE: [6.658400000000148e-05, 6.587499999999996e-05, 6.608299999999456e-05, 6.64029999999996e-05, 6.605600000000184e-05, 6.64029999999996e-05, 6.598699999999652e-05, 6.651399999999669e-05, 6.630499999999567e-05, 6.655500000000286e-05, 6.609700000000107e-05, 6.630499999999567e-05, 6.604199999999533e-05, 6.6583000000002e-05, 6.637500000000046e-05, 6.619399999999859e-05, 6.606900000000193e-05, 6.605600000000184e-05, 6.595899999999738e-05, 6.661100000000114e-05, 6.648599999999755e-05, 6.629200000000252e-05, 6.64159999999997e-05, 6.595799999999791e-05, 6.656900000000243e-05, 6.670799999999866e-05, 6.647199999999798e-05, 6.600000000000356e-05, 6.583300000000125e-05, 6.655499999999592e-05, 6.634699999999438e-05, 6.611100000000064e-05, 6.577700000000297e-05, 6.65700000000019e-05, 6.642999999999927e-05, 6.587499999999996e-05, 6.597300000000389e-05, 6.624999999999687e-05, 6.630600000000209e-05, 6.577700000000297e-05, 6.655600000000234e-05, 6.647199999999798e-05, 6.615299999999935e-05, 6.609700000000107e-05, 6.665299999999985e-05, 6.655500000000286e-05, 6.579200000000202e-05, 6.59029999999991e-05, 6.57909999999956e-05, 6.631999999999472e-05]</msg>
<status status="PASS" starttime="20201112 09:44:34.759" endtime="20201112 09:44:34.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.748" endtime="20201112 09:44:34.766"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.772" endtime="20201112 09:44:34.775"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:34.781" endtime="20201112 09:44:34.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.777" endtime="20201112 09:44:34.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.768" endtime="20201112 09:44:34.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.252" endtime="20201112 09:44:34.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.250" endtime="20201112 09:44:34.807"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.831" endtime="20201112 09:44:34.852"></status>
</kw>
<msg timestamp="20201112 09:44:34.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:34.828" endtime="20201112 09:44:34.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:34.856" endtime="20201112 09:44:34.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.862" endtime="20201112 09:44:34.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.820" endtime="20201112 09:44:34.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.814" endtime="20201112 09:44:34.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.886" endtime="20201112 09:44:35.226"></status>
</kw>
<msg timestamp="20201112 09:44:35.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043405972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043472972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:34.883" endtime="20201112 09:44:35.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043405972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043472972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:35.236" endtime="20201112 09:44:35.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.254" endtime="20201112 09:44:35.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.876" endtime="20201112 09:44:35.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.871" endtime="20201112 09:44:35.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:35.274" level="INFO">${RESULT} = [{'time': 0.043472972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.699999999999762e-05, 'source_diff': 6.699999999999762e-05}, {'time': 0.043545986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:35.265" endtime="20201112 09:44:35.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:35.305" level="INFO">${ACCURACY} = {'time': [0.043472972, 0.043545986, 0.043619986, 0.043694, 0.043766028, 0.043837014, 0.043909042, 0.043990028, 0.044062042, 0.044136069, 0.044211069, 0.044284083, 0.044355069, 0.044437083, 0.044513083...</msg>
<status status="PASS" starttime="20201112 09:44:35.276" endtime="20201112 09:44:35.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.316" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 09:44:35.314" endtime="20201112 09:44:35.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.322" level="INFO">VALUE: [6.699999999999762e-05, 6.681900000000268e-05, 6.676399999999694e-05, 6.756899999999649e-05, 6.729199999999658e-05, 6.751399999999769e-05, 6.769499999999956e-05, 6.683400000000173e-05, 6.727800000000395e-05, 6.762500000000171e-05, 6.67359999999978e-05, 6.704100000000379e-05, 6.687499999999402e-05, 6.722200000000567e-05, 6.709700000000207e-05, 6.670799999999866e-05, 6.737500000000146e-05, 6.758400000000248e-05, 6.72500000000048e-05, 6.694499999999881e-05, 6.698600000000499e-05, 6.698599999999805e-05, 6.687500000000096e-05, 6.726400000000438e-05, 6.726399999999744e-05, 6.727799999999701e-05, 6.745899999999888e-05, 6.730500000000361e-05, 6.683300000000225e-05, 6.727699999999753e-05, 6.695799999999891e-05, 6.712500000000121e-05, 6.680599999999565e-05, 6.681900000000268e-05, 6.761100000000214e-05, 6.679199999999608e-05, 6.695899999999838e-05, 6.740200000000113e-05, 6.677799999999651e-05, 6.718099999999949e-05, 6.688900000000053e-05, 6.708400000000198e-05, 6.70830000000025e-05, 6.745799999999941e-05, 6.759699999999563e-05, 6.686099999999445e-05, 6.704099999999685e-05, 6.706900000000293e-05, 6.697199999999848e-05, 6.71109999999947e-05]</msg>
<status status="PASS" starttime="20201112 09:44:35.319" endtime="20201112 09:44:35.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.307" endtime="20201112 09:44:35.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.332" endtime="20201112 09:44:35.335"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:35.341" endtime="20201112 09:44:35.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.336" endtime="20201112 09:44:35.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.327" endtime="20201112 09:44:35.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.809" endtime="20201112 09:44:35.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.808" endtime="20201112 09:44:35.366"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.390" endtime="20201112 09:44:35.411"></status>
</kw>
<msg timestamp="20201112 09:44:35.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:35.387" endtime="20201112 09:44:35.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:35.415" endtime="20201112 09:44:35.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.421" endtime="20201112 09:44:35.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.379" endtime="20201112 09:44:35.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.373" endtime="20201112 09:44:35.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.445" endtime="20201112 09:44:35.783"></status>
</kw>
<msg timestamp="20201112 09:44:35.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043053014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043121625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:35.442" endtime="20201112 09:44:35.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043053014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043121625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:35.793" endtime="20201112 09:44:35.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.812" endtime="20201112 09:44:35.817"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.434" endtime="20201112 09:44:35.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.430" endtime="20201112 09:44:35.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:35.831" level="INFO">${RESULT} = [{'time': 0.043121625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.86109999999962e-05, 'source_diff': 6.86109999999962e-05}, {'time': 0.043201694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:35.822" endtime="20201112 09:44:35.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:35.862" level="INFO">${ACCURACY} = {'time': [0.043121625, 0.043201694, 0.043282639, 0.043361667, 0.043442667, 0.043521681, 0.043592694, 0.043665694, 0.043744694, 0.043826694, 0.043902778, 0.043980736, 0.044052736, 0.044129736, 0.044210...</msg>
<status status="PASS" starttime="20201112 09:44:35.833" endtime="20201112 09:44:35.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.873" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 09:44:35.871" endtime="20201112 09:44:35.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.879" level="INFO">VALUE: [6.86109999999962e-05, 6.866600000000195e-05, 6.85559999999974e-05, 6.820899999999963e-05, 6.856999999999697e-05, 6.865300000000185e-05, 6.816600000000145e-05, 6.827699999999853e-05, 6.8583000000004e-05, 6.787500000000196e-05, 6.863900000000228e-05, 6.783299999999631e-05, 6.80830000000035e-05, 6.831900000000418e-05, 6.79030000000011e-05, 6.779100000000454e-05, 6.787500000000196e-05, 6.809700000000307e-05, 6.826399999999844e-05, 6.801400000000513e-05, 6.809800000000255e-05, 6.782000000000316e-05, 6.780599999999665e-05, 6.870800000000066e-05, 6.793000000000077e-05, 6.77909999999976e-05, 6.817999999999408e-05, 6.819500000000006e-05, 6.855500000000486e-05, 6.847199999999998e-05, 6.798599999999905e-05, 6.848599999999955e-05, 6.784699999999588e-05, 6.799999999999862e-05, 6.83480000000028e-05, 6.779200000000402e-05, 6.777799999999751e-05, 6.866600000000195e-05, 6.856899999999749e-05, 6.838799999999562e-05, 6.82359999999993e-05, 6.855499999999792e-05, 6.838900000000203e-05, 6.832000000000366e-05, 6.798599999999905e-05, 6.776399999999794e-05, 6.862499999999577e-05, 6.832000000000366e-05, 6.861100000000314e-05, 6.809700000000307e-05]</msg>
<status status="PASS" starttime="20201112 09:44:35.876" endtime="20201112 09:44:35.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.864" endtime="20201112 09:44:35.882"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.889" endtime="20201112 09:44:35.892"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:35.897" endtime="20201112 09:44:35.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.893" endtime="20201112 09:44:35.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.884" endtime="20201112 09:44:35.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.369" endtime="20201112 09:44:35.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.367" endtime="20201112 09:44:35.923"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.939" endtime="20201112 09:44:35.957"></status>
</kw>
<msg timestamp="20201112 09:44:35.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:35.938" endtime="20201112 09:44:35.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:35.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:35.959" endtime="20201112 09:44:35.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.962" endtime="20201112 09:44:35.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.934" endtime="20201112 09:44:35.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.930" endtime="20201112 09:44:35.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:35.973" endtime="20201112 09:44:36.260"></status>
</kw>
<msg timestamp="20201112 09:44:36.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033921028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033990028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:35.971" endtime="20201112 09:44:36.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033921028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033990028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:36.264" endtime="20201112 09:44:36.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.273" endtime="20201112 09:44:36.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.968" endtime="20201112 09:44:36.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.966" endtime="20201112 09:44:36.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:36.283" level="INFO">${RESULT} = [{'time': 0.033990028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.899999999999962e-05, 'source_diff': 6.899999999999962e-05}, {'time': 0.034074042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:36.279" endtime="20201112 09:44:36.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:36.296" level="INFO">${ACCURACY} = {'time': [0.033990028, 0.034074042, 0.034156069, 0.034232056, 0.034309069, 0.034380069, 0.034461097, 0.034542097, 0.034621167, 0.034697125, 0.034776153, 0.034852139, 0.034935139, 0.035018139, 0.035101...</msg>
<status status="PASS" starttime="20201112 09:44:36.284" endtime="20201112 09:44:36.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.302" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 09:44:36.301" endtime="20201112 09:44:36.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.304" level="INFO">VALUE: [6.899999999999962e-05, 6.966699999999548e-05, 6.937499999999652e-05, 6.89309999999943e-05, 6.915199999999594e-05, 6.897200000000048e-05, 6.918000000000202e-05, 6.898600000000005e-05, 6.912500000000321e-05, 6.961100000000414e-05, 6.886099999999645e-05, 6.877799999999851e-05, 6.952799999999926e-05, 6.929199999999858e-05, 6.951399999999969e-05, 6.927699999999953e-05, 6.931999999999772e-05, 6.880499999999817e-05, 6.89439999999944e-05, 6.917999999999508e-05, 6.880500000000511e-05, 6.874999999999937e-05, 6.963900000000328e-05, 6.922200000000073e-05, 6.880599999999765e-05, 6.906899999999799e-05, 6.913900000000278e-05, 6.902799999999876e-05, 6.930599999999815e-05, 6.948600000000055e-05, 6.91109999999967e-05, 6.893100000000124e-05, 6.90280000000057e-05, 6.927799999999901e-05, 6.909699999999713e-05, 6.938899999999609e-05, 6.965299999999591e-05, 6.881900000000468e-05, 6.942999999999533e-05, 6.911100000000364e-05, 6.886100000000339e-05, 6.901399999999919e-05, 6.918100000000149e-05, 6.93480000000038e-05, 6.930600000000509e-05, 6.95559999999984e-05, 6.904199999999833e-05, 6.952799999999926e-05, 6.962500000000371e-05, 6.880499999999817e-05]</msg>
<status status="PASS" starttime="20201112 09:44:36.303" endtime="20201112 09:44:36.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.297" endtime="20201112 09:44:36.306"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.309" endtime="20201112 09:44:36.310"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:36.313" endtime="20201112 09:44:36.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.311" endtime="20201112 09:44:36.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.307" endtime="20201112 09:44:36.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.925" endtime="20201112 09:44:36.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:35.924" endtime="20201112 09:44:36.335"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.345" endtime="20201112 09:44:36.363"></status>
</kw>
<msg timestamp="20201112 09:44:36.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:36.344" endtime="20201112 09:44:36.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:36.364" endtime="20201112 09:44:36.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.367" endtime="20201112 09:44:36.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.340" endtime="20201112 09:44:36.370"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.338" endtime="20201112 09:44:36.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.379" endtime="20201112 09:44:36.665"></status>
</kw>
<msg timestamp="20201112 09:44:36.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0250735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025143583, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:44:36.377" endtime="20201112 09:44:36.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0250735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025143583, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:44:36.669" endtime="20201112 09:44:36.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.678" endtime="20201112 09:44:36.681"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.373" endtime="20201112 09:44:36.681"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.371" endtime="20201112 09:44:36.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:36.687" level="INFO">${RESULT} = [{'time': 0.025143583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.008300000000203e-05, 'source_diff': 7.008300000000203e-05}, {'time': 0.025228667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:36.683" endtime="20201112 09:44:36.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:36.700" level="INFO">${ACCURACY} = {'time': [0.025143583, 0.025228667, 0.025310611, 0.025392611, 0.025472625, 0.025552625, 0.025634708, 0.025716653, 0.025789653, 0.025870667, 0.025952681, 0.026028694, 0.026113736, 0.026196694, 0.026274...</msg>
<status status="PASS" starttime="20201112 09:44:36.688" endtime="20201112 09:44:36.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.706" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 09:44:36.705" endtime="20201112 09:44:36.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.708" level="INFO">VALUE: [7.008300000000203e-05, 6.99169999999992e-05, 6.995800000000191e-05, 7.017999999999955e-05, 6.984699999999788e-05, 7.047199999999851e-05, 7.066600000000048e-05, 6.977799999999951e-05, 6.968099999999852e-05, 7.059800000000158e-05, 6.977799999999951e-05, 7.02360000000013e-05, 7.01109999999977e-05, 7.030499999999967e-05, 6.972200000000123e-05, 7.011100000000117e-05, 7.001400000000019e-05, 6.995799999999844e-05, 7.068100000000299e-05, 6.973599999999733e-05, 7.002800000000323e-05, 6.993100000000224e-05, 7.034699999999838e-05, 7.006999999999847e-05, 7.052800000000026e-05, 6.995800000000191e-05, 7.027700000000053e-05, 6.994400000000234e-05, 7.02910000000001e-05, 7.006900000000246e-05, 6.998599999999758e-05, 7.051400000000069e-05, 7.073599999999833e-05, 7.051400000000069e-05, 7.063900000000081e-05, 7.069499999999909e-05, 7.002799999999976e-05, 7.033399999999829e-05, 7.051400000000069e-05, 7.019500000000206e-05, 7.012500000000074e-05, 6.986100000000092e-05, 7.034700000000185e-05, 7.068000000000005e-05, 7.025000000000087e-05, 7.026400000000044e-05, 7.068000000000005e-05, 7.006899999999899e-05, 6.998600000000105e-05, 6.987500000000049e-05]</msg>
<status status="PASS" starttime="20201112 09:44:36.707" endtime="20201112 09:44:36.709"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.701" endtime="20201112 09:44:36.710"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.713" endtime="20201112 09:44:36.714"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:36.717" endtime="20201112 09:44:36.737"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.715" endtime="20201112 09:44:36.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.711" endtime="20201112 09:44:36.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.336" endtime="20201112 09:44:36.739"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.335" endtime="20201112 09:44:36.739"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.761" endtime="20201112 09:44:36.783"></status>
</kw>
<msg timestamp="20201112 09:44:36.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:36.758" endtime="20201112 09:44:36.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:36.786" endtime="20201112 09:44:36.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.793" endtime="20201112 09:44:36.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.750" endtime="20201112 09:44:36.798"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.744" endtime="20201112 09:44:36.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.817" endtime="20201112 09:44:37.154"></status>
</kw>
<msg timestamp="20201112 09:44:37.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038375208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038446028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:36.813" endtime="20201112 09:44:37.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038375208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038446028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:37.164" endtime="20201112 09:44:37.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.183" endtime="20201112 09:44:37.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.806" endtime="20201112 09:44:37.190"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.801" endtime="20201112 09:44:37.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:37.203" level="INFO">${RESULT} = [{'time': 0.038446028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.081999999999922e-05, 'source_diff': 7.081999999999922e-05}, {'time': 0.038529042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:37.193" endtime="20201112 09:44:37.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:37.233" level="INFO">${ACCURACY} = {'time': [0.038446028, 0.038529042, 0.038614083, 0.038689056, 0.038763069, 0.038849083, 0.038929083, 0.039010111, 0.039092097, 0.039169111, 0.039245139, 0.039328167, 0.039406181, 0.039482167, 0.039561...</msg>
<status status="PASS" starttime="20201112 09:44:37.205" endtime="20201112 09:44:37.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.244" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 09:44:37.242" endtime="20201112 09:44:37.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.250" level="INFO">VALUE: [7.081999999999922e-05, 7.16109999999992e-05, 7.133299999999981e-05, 7.130600000000015e-05, 7.15690000000005e-05, 7.167999999999758e-05, 7.087500000000496e-05, 7.147200000000298e-05, 7.163899999999834e-05, 7.165299999999791e-05, 7.129200000000058e-05, 7.122299999999526e-05, 7.165299999999791e-05, 7.102800000000076e-05, 7.116700000000392e-05, 7.094499999999587e-05, 7.144499999999637e-05, 7.137499999999852e-05, 7.15690000000005e-05, 7.151299999999527e-05, 7.077800000000051e-05, 7.125000000000187e-05, 7.098599999999511e-05, 7.12360000000023e-05, 7.155499999999398e-05, 7.145900000000288e-05, 7.106999999999947e-05, 7.100000000000162e-05, 7.072200000000223e-05, 7.137499999999852e-05, 7.152800000000126e-05, 7.088899999999759e-05, 7.152700000000178e-05, 7.113799999999837e-05, 7.150000000000212e-05, 7.163899999999834e-05, 7.075000000000137e-05, 7.083299999999931e-05, 7.091700000000367e-05, 7.165300000000485e-05, 7.070799999999572e-05, 7.118099999999655e-05, 7.127800000000101e-05, 7.109699999999913e-05, 7.098700000000152e-05, 7.10979999999986e-05, 7.097300000000195e-05, 7.084799999999836e-05, 7.138799999999862e-05, 7.115300000000435e-05]</msg>
<status status="PASS" starttime="20201112 09:44:37.247" endtime="20201112 09:44:37.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.235" endtime="20201112 09:44:37.253"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.260" endtime="20201112 09:44:37.263"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:37.268" endtime="20201112 09:44:37.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.264" endtime="20201112 09:44:37.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.255" endtime="20201112 09:44:37.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.740" endtime="20201112 09:44:37.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.739" endtime="20201112 09:44:37.294"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.318" endtime="20201112 09:44:37.339"></status>
</kw>
<msg timestamp="20201112 09:44:37.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:37.314" endtime="20201112 09:44:37.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:37.343" endtime="20201112 09:44:37.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.349" endtime="20201112 09:44:37.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.307" endtime="20201112 09:44:37.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.301" endtime="20201112 09:44:37.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.373" endtime="20201112 09:44:37.711"></status>
</kw>
<msg timestamp="20201112 09:44:37.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043033819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043106083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:37.369" endtime="20201112 09:44:37.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043033819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043106083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:37.721" endtime="20201112 09:44:37.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.740" endtime="20201112 09:44:37.746"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.362" endtime="20201112 09:44:37.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.357" endtime="20201112 09:44:37.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:37.761" level="INFO">${RESULT} = [{'time': 0.043106083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.226400000000244e-05, 'source_diff': 7.226400000000244e-05}, {'time': 0.043181083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:37.751" endtime="20201112 09:44:37.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:37.792" level="INFO">${ACCURACY} = {'time': [0.043106083, 0.043181083, 0.043263111, 0.043346097, 0.043430125, 0.043506153, 0.043585125, 0.043660139, 0.043739139, 0.043826153, 0.043906167, 0.043993167, 0.044080194, 0.044155208, 0.044232...</msg>
<status status="PASS" starttime="20201112 09:44:37.763" endtime="20201112 09:44:37.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.803" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 09:44:37.801" endtime="20201112 09:44:37.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.809" level="INFO">VALUE: [7.226400000000244e-05, 7.213899999999884e-05, 7.266699999999848e-05, 7.220799999999722e-05, 7.197199999999654e-05, 7.209700000000013e-05, 7.195800000000391e-05, 7.194500000000381e-05, 7.238900000000603e-05, 7.226400000000244e-05, 7.236099999999995e-05, 7.204200000000133e-05, 7.201300000000271e-05, 7.195800000000391e-05, 7.183300000000031e-05, 7.197199999999654e-05, 7.237499999999952e-05, 7.213899999999884e-05, 7.201400000000219e-05, 7.224999999999593e-05, 7.212499999999927e-05, 7.197199999999654e-05, 7.197200000000348e-05, 7.208400000000004e-05, 7.237499999999952e-05, 7.175000000000237e-05, 7.233300000000081e-05, 7.184699999999988e-05, 7.258300000000106e-05, 7.222200000000373e-05, 7.252799999999532e-05, 7.26110000000002e-05, 7.268099999999805e-05, 7.197199999999654e-05, 7.229200000000158e-05, 7.233300000000081e-05, 7.209700000000013e-05, 7.208400000000004e-05, 7.233400000000029e-05, 7.233400000000029e-05, 7.219499999999712e-05, 7.233300000000081e-05, 7.231900000000124e-05, 7.229200000000158e-05, 7.192999999999783e-05, 7.236099999999995e-05, 7.233300000000081e-05, 7.242999999999833e-05, 7.216699999999798e-05, 7.232000000000072e-05]</msg>
<status status="PASS" starttime="20201112 09:44:37.806" endtime="20201112 09:44:37.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.794" endtime="20201112 09:44:37.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.823" endtime="20201112 09:44:37.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:37.831" endtime="20201112 09:44:37.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.827" endtime="20201112 09:44:37.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.818" endtime="20201112 09:44:37.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.297" endtime="20201112 09:44:37.857"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.295" endtime="20201112 09:44:37.857"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.881" endtime="20201112 09:44:37.903"></status>
</kw>
<msg timestamp="20201112 09:44:37.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:37.877" endtime="20201112 09:44:37.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:37.906" endtime="20201112 09:44:37.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.912" endtime="20201112 09:44:37.916"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.870" endtime="20201112 09:44:37.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.864" endtime="20201112 09:44:37.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.936" endtime="20201112 09:44:38.275"></status>
</kw>
<msg timestamp="20201112 09:44:38.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043078181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04315175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:37.933" endtime="20201112 09:44:38.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043078181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04315175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:38.284" endtime="20201112 09:44:38.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.303" endtime="20201112 09:44:38.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.926" endtime="20201112 09:44:38.312"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.921" endtime="20201112 09:44:38.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:38.325" level="INFO">${RESULT} = [{'time': 0.04315175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.35690000000025e-05, 'source_diff': 7.35690000000025e-05}, {'time': 0.043230736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:44:38.316" endtime="20201112 09:44:38.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:38.355" level="INFO">${ACCURACY} = {'time': [0.04315175, 0.043230736, 0.04330675, 0.043387778, 0.043463764, 0.043549861, 0.043628778, 0.043716806, 0.043801819, 0.043879806, 0.043957847, 0.044036833, 0.044120847, 0.044205847, 0.04428587...</msg>
<status status="PASS" starttime="20201112 09:44:38.327" endtime="20201112 09:44:38.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.366" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 09:44:38.364" endtime="20201112 09:44:38.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.372" level="INFO">VALUE: [7.35690000000025e-05, 7.322199999999779e-05, 7.336100000000095e-05, 7.336100000000095e-05, 7.272200000000423e-05, 7.301400000000319e-05, 7.280600000000165e-05, 7.348699999999708e-05, 7.274999999999643e-05, 7.304200000000233e-05, 7.309700000000113e-05, 7.365200000000044e-05, 7.323599999999736e-05, 7.336100000000095e-05, 7.340299999999966e-05, 7.336100000000095e-05, 7.288899999999959e-05, 7.302799999999582e-05, 7.312500000000027e-05, 7.351399999999675e-05, 7.337500000000052e-05, 7.312500000000027e-05, 7.276400000000294e-05, 7.270799999999772e-05, 7.301300000000371e-05, 7.279199999999514e-05, 7.313899999999984e-05, 7.345899999999794e-05, 7.32639999999965e-05, 7.297199999999754e-05, 7.365299999999991e-05, 7.286099999999351e-05, 7.336100000000095e-05, 7.313899999999984e-05, 7.279099999999566e-05, 7.28189999999948e-05, 7.27910000000026e-05, 7.327700000000353e-05, 7.3069000000002e-05, 7.276400000000294e-05, 7.313899999999984e-05, 7.300000000000362e-05, 7.304100000000285e-05, 7.308300000000156e-05, 7.30560000000019e-05, 7.295799999999797e-05, 7.31110000000007e-05, 7.33189999999953e-05, 7.354200000000283e-05, 7.320900000000463e-05]</msg>
<status status="PASS" starttime="20201112 09:44:38.369" endtime="20201112 09:44:38.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.357" endtime="20201112 09:44:38.375"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.382" endtime="20201112 09:44:38.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:38.391" endtime="20201112 09:44:38.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.386" endtime="20201112 09:44:38.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.377" endtime="20201112 09:44:38.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.860" endtime="20201112 09:44:38.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.858" endtime="20201112 09:44:38.417"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.440" endtime="20201112 09:44:38.462"></status>
</kw>
<msg timestamp="20201112 09:44:38.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:38.437" endtime="20201112 09:44:38.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:38.465" endtime="20201112 09:44:38.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.472" endtime="20201112 09:44:38.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.429" endtime="20201112 09:44:38.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.423" endtime="20201112 09:44:38.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.496" endtime="20201112 09:44:38.834"></status>
</kw>
<msg timestamp="20201112 09:44:38.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042948514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04302275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:38.492" endtime="20201112 09:44:38.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042948514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04302275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:38.844" endtime="20201112 09:44:38.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.863" endtime="20201112 09:44:38.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.485" endtime="20201112 09:44:38.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.480" endtime="20201112 09:44:38.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:38.883" level="INFO">${RESULT} = [{'time': 0.04302275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.423599999999836e-05, 'source_diff': 7.423599999999836e-05}, {'time': 0.043108764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:44:38.873" endtime="20201112 09:44:38.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:38.914" level="INFO">${ACCURACY} = {'time': [0.04302275, 0.043108764, 0.043186819, 0.043265778, 0.043344792, 0.043433792, 0.043510819, 0.043589819, 0.043668833, 0.043756833, 0.043835861, 0.043917847, 0.043998875, 0.044083889, 0.0441668...</msg>
<status status="PASS" starttime="20201112 09:44:38.885" endtime="20201112 09:44:38.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.925" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 09:44:38.922" endtime="20201112 09:44:38.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.930" level="INFO">VALUE: [7.423599999999836e-05, 7.46110000000022e-05, 7.436100000000195e-05, 7.424999999999793e-05, 7.40560000000029e-05, 7.384800000000136e-05, 7.455499999999698e-05, 7.426300000000496e-05, 7.448599999999861e-05, 7.388900000000059e-05, 7.470799999999972e-05, 7.370800000000566e-05, 7.441700000000023e-05, 7.445799999999947e-05, 7.449999999999818e-05, 7.390300000000016e-05, 7.405499999999648e-05, 7.411200000000118e-05, 7.437500000000152e-05, 7.448699999999808e-05, 7.376400000000394e-05, 7.374999999999743e-05, 7.427700000000453e-05, 7.462499999999483e-05, 7.43189999999963e-05, 7.436100000000195e-05, 7.390300000000016e-05, 7.468100000000005e-05, 7.376400000000394e-05, 7.437499999999458e-05, 7.46110000000022e-05, 7.469499999999962e-05, 7.377799999999657e-05, 7.415200000000094e-05, 7.409799999999467e-05, 7.433300000000281e-05, 7.448599999999861e-05, 7.425000000000487e-05, 7.468000000000058e-05, 7.422199999999879e-05, 7.398599999999811e-05, 7.415300000000041e-05, 7.382000000000222e-05, 7.390300000000016e-05, 7.429099999999716e-05, 7.404200000000333e-05, 7.373700000000427e-05, 7.411200000000118e-05, 7.399999999999768e-05, 7.420799999999922e-05]</msg>
<status status="PASS" starttime="20201112 09:44:38.927" endtime="20201112 09:44:38.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.916" endtime="20201112 09:44:38.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.940" endtime="20201112 09:44:38.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:38.949" endtime="20201112 09:44:38.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.944" endtime="20201112 09:44:38.973"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.936" endtime="20201112 09:44:38.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.419" endtime="20201112 09:44:38.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.417" endtime="20201112 09:44:38.975"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.999" endtime="20201112 09:44:39.020"></status>
</kw>
<msg timestamp="20201112 09:44:39.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:38.995" endtime="20201112 09:44:39.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:39.024" endtime="20201112 09:44:39.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.030" endtime="20201112 09:44:39.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.988" endtime="20201112 09:44:39.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.982" endtime="20201112 09:44:39.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.054" endtime="20201112 09:44:39.394"></status>
</kw>
<msg timestamp="20201112 09:44:39.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043884444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04396, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 09:44:39.051" endtime="20201112 09:44:39.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043884444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04396, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 09:44:39.404" endtime="20201112 09:44:39.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.423" endtime="20201112 09:44:39.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.043" endtime="20201112 09:44:39.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.039" endtime="20201112 09:44:39.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:39.442" level="INFO">${RESULT} = [{'time': 0.04396, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.555599999999746e-05, 'source_diff': 7.555599999999746e-05}, {'time': 0.04404, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.505...</msg>
<status status="PASS" starttime="20201112 09:44:39.433" endtime="20201112 09:44:39.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:39.473" level="INFO">${ACCURACY} = {'time': [0.04396, 0.04404, 0.044124, 0.044209014, 0.044298042, 0.044388042, 0.044470056, 0.044552069, 0.044637056, 0.044715069, 0.044799125, 0.044889083, 0.044977111, 0.045055111, 0.045145111, 0.0452...</msg>
<status status="PASS" starttime="20201112 09:44:39.444" endtime="20201112 09:44:39.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.484" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 09:44:39.482" endtime="20201112 09:44:39.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.490" level="INFO">VALUE: [7.555599999999746e-05, 7.50560000000039e-05, 7.488899999999465e-05, 7.568100000000105e-05, 7.552800000000526e-05, 7.486100000000245e-05, 7.479200000000408e-05, 7.541600000000176e-05, 7.484800000000236e-05, 7.534700000000338e-05, 7.55560000000044e-05, 7.545800000000047e-05, 7.536100000000295e-05, 7.515300000000141e-05, 7.52639999999985e-05, 7.483300000000331e-05, 7.49310000000003e-05, 7.537500000000252e-05, 7.565300000000191e-05, 7.536099999999601e-05, 7.559800000000311e-05, 7.537499999999558e-05, 7.494399999999346e-05, 7.526299999999903e-05, 7.51110000000027e-05, 7.527799999999807e-05, 7.472199999999929e-05, 7.49440000000004e-05, 7.534700000000338e-05, 7.530599999999721e-05, 7.491700000000073e-05, 7.538899999999515e-05, 7.527799999999807e-05, 7.519400000000065e-05, 7.570900000000019e-05, 7.538899999999515e-05, 7.530500000000467e-05, 7.525000000000587e-05, 7.51389999999949e-05, 7.500000000000562e-05, 7.565299999999497e-05, 7.51110000000027e-05, 7.562499999999583e-05, 7.497199999999954e-05, 7.499999999999868e-05, 7.522199999999979e-05, 7.486100000000245e-05, 7.477799999999757e-05, 7.522299999999926e-05, 7.507000000000347e-05]</msg>
<status status="PASS" starttime="20201112 09:44:39.487" endtime="20201112 09:44:39.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.475" endtime="20201112 09:44:39.493"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.500" endtime="20201112 09:44:39.503"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:39.508" endtime="20201112 09:44:39.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.504" endtime="20201112 09:44:39.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.495" endtime="20201112 09:44:39.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.977" endtime="20201112 09:44:39.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.976" endtime="20201112 09:44:39.534"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.558" endtime="20201112 09:44:39.579"></status>
</kw>
<msg timestamp="20201112 09:44:39.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:39.554" endtime="20201112 09:44:39.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:39.582" endtime="20201112 09:44:39.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.589" endtime="20201112 09:44:39.593"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.547" endtime="20201112 09:44:39.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.541" endtime="20201112 09:44:39.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.613" endtime="20201112 09:44:39.953"></status>
</kw>
<msg timestamp="20201112 09:44:39.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042906361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042982514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:39.609" endtime="20201112 09:44:39.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042906361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042982514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:39.963" endtime="20201112 09:44:39.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.980" endtime="20201112 09:44:39.983"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.602" endtime="20201112 09:44:39.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.597" endtime="20201112 09:44:39.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:39.989" level="INFO">${RESULT} = [{'time': 0.042982514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.615300000000241e-05, 'source_diff': 7.615300000000241e-05}, {'time': 0.0430615, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:39.985" endtime="20201112 09:44:39.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:40.003" level="INFO">${ACCURACY} = {'time': [0.042982514, 0.0430615, 0.043149542, 0.043235542, 0.043322514, 0.043412528, 0.043500542, 0.043581556, 0.043660556, 0.043751583, 0.043839569, 0.043928583, 0.044019597, 0.044101611, 0.04418662...</msg>
<status status="PASS" starttime="20201112 09:44:39.990" endtime="20201112 09:44:40.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:40.008" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 09:44:40.007" endtime="20201112 09:44:40.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:40.011" level="INFO">VALUE: [7.615300000000241e-05, 7.636100000000395e-05, 7.601399999999925e-05, 7.607000000000447e-05, 7.622200000000079e-05, 7.651399999999975e-05, 7.637500000000352e-05, 7.62639999999995e-05, 7.612500000000327e-05, 7.649999999999324e-05, 7.597200000000054e-05, 7.572200000000029e-05, 7.583299999999737e-05, 7.64440000000019e-05, 7.652799999999932e-05, 7.590299999999522e-05, 7.59310000000013e-05, 7.66110000000042e-05, 7.620900000000069e-05, 7.601399999999925e-05, 7.577799999999857e-05, 7.608299999999762e-05, 7.574999999999943e-05, 7.656899999999855e-05, 7.573599999999986e-05, 7.661099999999726e-05, 7.665299999999597e-05, 7.587500000000302e-05, 7.654199999999889e-05, 7.598600000000011e-05, 7.595900000000044e-05, 7.611099999999676e-05, 7.594499999999393e-05, 7.5763999999999e-05, 7.602799999999882e-05, 7.631999999999778e-05, 7.61110000000037e-05, 7.611099999999676e-05, 7.611099999999676e-05, 7.665300000000291e-05, 7.648600000000061e-05, 7.644399999999496e-05, 7.62639999999995e-05, 7.586099999999651e-05, 7.573599999999986e-05, 7.620800000000122e-05, 7.669500000000162e-05, 7.595900000000044e-05, 7.59169999999948e-05, 7.601299999999978e-05]</msg>
<status status="PASS" starttime="20201112 09:44:40.010" endtime="20201112 09:44:40.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.004" endtime="20201112 09:44:40.013"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.016" endtime="20201112 09:44:40.017"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:40.020" endtime="20201112 09:44:40.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.018" endtime="20201112 09:44:40.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.014" endtime="20201112 09:44:40.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.536" endtime="20201112 09:44:40.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.535" endtime="20201112 09:44:40.041"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.052" endtime="20201112 09:44:40.070"></status>
</kw>
<msg timestamp="20201112 09:44:40.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:40.051" endtime="20201112 09:44:40.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:40.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:40.072" endtime="20201112 09:44:40.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.075" endtime="20201112 09:44:40.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.047" endtime="20201112 09:44:40.078"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.044" endtime="20201112 09:44:40.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.086" endtime="20201112 09:44:40.371"></status>
</kw>
<msg timestamp="20201112 09:44:40.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025082222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025159556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:40.085" endtime="20201112 09:44:40.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:40.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025082222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025159556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:40.376" endtime="20201112 09:44:40.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.384" endtime="20201112 09:44:40.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.081" endtime="20201112 09:44:40.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.079" endtime="20201112 09:44:40.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:40.395" level="INFO">${RESULT} = [{'time': 0.025159556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.733399999999835e-05, 'source_diff': 7.733399999999835e-05}, {'time': 0.025240556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:40.390" endtime="20201112 09:44:40.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:40.408" level="INFO">${ACCURACY} = {'time': [0.025159556, 0.025240556, 0.025321583, 0.025404597, 0.025490583, 0.025580639, 0.025659611, 0.025742625, 0.025827667, 0.025912694, 0.025995694, 0.026078653, 0.026163667, 0.026243667, 0.026326...</msg>
<status status="PASS" starttime="20201112 09:44:40.396" endtime="20201112 09:44:40.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:40.413" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 09:44:40.412" endtime="20201112 09:44:40.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:40.416" level="INFO">VALUE: [7.733399999999835e-05, 7.688900000000012e-05, 7.690200000000022e-05, 7.765300000000044e-05, 7.688900000000012e-05, 7.6764e-05, 7.698599999999764e-05, 7.763900000000087e-05, 7.736099999999801e-05, 7.76250000000013e-05, 7.769399999999968e-05, 7.702799999999982e-05, 7.69310000000023e-05, 7.71389999999969e-05, 7.702799999999982e-05, 7.68189999999988e-05, 7.71380000000009e-05, 7.765200000000097e-05, 7.72640000000005e-05, 7.719399999999918e-05, 7.698599999999764e-05, 7.748600000000161e-05, 7.74310000000028e-05, 7.702799999999982e-05, 7.7070000000002e-05, 7.74310000000028e-05, 7.711099999999776e-05, 7.69029999999997e-05, 7.711100000000123e-05, 7.754100000000042e-05, 7.69440000000024e-05, 7.755499999999999e-05, 7.675000000000043e-05, 7.698600000000111e-05, 7.734699999999844e-05, 7.747299999999804e-05, 7.72640000000005e-05, 7.713900000000037e-05, 7.687500000000055e-05, 7.67229999999973e-05, 7.673700000000033e-05, 7.677799999999957e-05, 7.705500000000295e-05, 7.691599999999979e-05, 7.744399999999943e-05, 7.706899999999905e-05, 7.737500000000105e-05, 7.742999999999986e-05, 7.711099999999776e-05, 7.684700000000141e-05]</msg>
<status status="PASS" starttime="20201112 09:44:40.415" endtime="20201112 09:44:40.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.409" endtime="20201112 09:44:40.418"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.421" endtime="20201112 09:44:40.422"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:40.425" endtime="20201112 09:44:40.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.423" endtime="20201112 09:44:40.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.418" endtime="20201112 09:44:40.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.042" endtime="20201112 09:44:40.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.042" endtime="20201112 09:44:40.446"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.457" endtime="20201112 09:44:40.475"></status>
</kw>
<msg timestamp="20201112 09:44:40.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:40.455" endtime="20201112 09:44:40.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:40.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:40.477" endtime="20201112 09:44:40.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.480" endtime="20201112 09:44:40.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.452" endtime="20201112 09:44:40.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.449" endtime="20201112 09:44:40.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.491" endtime="20201112 09:44:40.778"></status>
</kw>
<msg timestamp="20201112 09:44:40.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025103833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025181611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:40.490" endtime="20201112 09:44:40.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:40.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025103833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025181611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:40.783" endtime="20201112 09:44:40.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.791" endtime="20201112 09:44:40.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.486" endtime="20201112 09:44:40.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.484" endtime="20201112 09:44:40.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:40.801" level="INFO">${RESULT} = [{'time': 0.025181611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.777800000000057e-05, 'source_diff': 7.777800000000057e-05}, {'time': 0.025266597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:40.796" endtime="20201112 09:44:40.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:40.814" level="INFO">${ACCURACY} = {'time': [0.025181611, 0.025266597, 0.025350583, 0.025442597, 0.025527611, 0.025608639, 0.025695625, 0.025787653, 0.025868667, 0.025961653, 0.026042681, 0.026128681, 0.026219694, 0.026304694, 0.026386...</msg>
<status status="PASS" starttime="20201112 09:44:40.802" endtime="20201112 09:44:40.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:40.819" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 09:44:40.818" endtime="20201112 09:44:40.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:40.822" level="INFO">VALUE: [7.777800000000057e-05, 7.79579999999995e-05, 7.779100000000067e-05, 7.830500000000074e-05, 7.861099999999926e-05, 7.79579999999995e-05, 7.851399999999828e-05, 7.82640000000015e-05, 7.858400000000307e-05, 7.847199999999957e-05, 7.858400000000307e-05, 7.834800000000239e-05, 7.836100000000248e-05, 7.798599999999864e-05, 7.808299999999962e-05, 7.770799999999925e-05, 7.849999999999871e-05, 7.851399999999828e-05, 7.79030000000007e-05, 7.816700000000051e-05, 7.869500000000015e-05, 7.836099999999901e-05, 7.783399999999885e-05, 7.820899999999922e-05, 7.855600000000046e-05, 7.798700000000158e-05, 7.848599999999914e-05, 7.793000000000036e-05, 7.806900000000006e-05, 7.82909999999977e-05, 7.812499999999833e-05, 7.830500000000074e-05, 7.777800000000057e-05, 7.793099999999983e-05, 7.788899999999765e-05, 7.806999999999953e-05, 7.780599999999971e-05, 7.851399999999828e-05, 7.802799999999735e-05, 7.818000000000061e-05, 7.818000000000061e-05, 7.815200000000147e-05, 7.838900000000162e-05, 7.862499999999883e-05, 7.772199999999882e-05, 7.833299999999987e-05, 7.811099999999876e-05, 7.816700000000051e-05, 7.834699999999944e-05, 7.793099999999983e-05]</msg>
<status status="PASS" starttime="20201112 09:44:40.821" endtime="20201112 09:44:40.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.815" endtime="20201112 09:44:40.824"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.827" endtime="20201112 09:44:40.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:40.831" endtime="20201112 09:44:40.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.829" endtime="20201112 09:44:40.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.825" endtime="20201112 09:44:40.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.447" endtime="20201112 09:44:40.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.446" endtime="20201112 09:44:40.853"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.864" endtime="20201112 09:44:40.882"></status>
</kw>
<msg timestamp="20201112 09:44:40.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:40.863" endtime="20201112 09:44:40.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:40.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:40.883" endtime="20201112 09:44:40.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.886" endtime="20201112 09:44:40.890"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.859" endtime="20201112 09:44:40.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.856" endtime="20201112 09:44:40.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:40.910" endtime="20201112 09:44:41.250"></status>
</kw>
<msg timestamp="20201112 09:44:41.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026083319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026162472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:40.907" endtime="20201112 09:44:41.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026083319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026162472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:41.260" endtime="20201112 09:44:41.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.279" endtime="20201112 09:44:41.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.900" endtime="20201112 09:44:41.286"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.895" endtime="20201112 09:44:41.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:41.298" level="INFO">${RESULT} = [{'time': 0.026162472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.915299999999847e-05, 'source_diff': 7.915299999999847e-05}, {'time': 0.026249486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:41.289" endtime="20201112 09:44:41.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:41.329" level="INFO">${ACCURACY} = {'time': [0.026162472, 0.026249486, 0.0263305, 0.0264145, 0.026497514, 0.026591514, 0.026673556, 0.026767542, 0.026850542, 0.026938556, 0.027021597, 0.027114597, 0.027208625, 0.027295611, 0.027383681,...</msg>
<status status="PASS" starttime="20201112 09:44:41.301" endtime="20201112 09:44:41.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.340" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 09:44:41.338" endtime="20201112 09:44:41.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.346" level="INFO">VALUE: [7.915299999999847e-05, 7.915299999999847e-05, 7.876399999999853e-05, 7.966700000000201e-05, 7.911099999999976e-05, 7.924999999999946e-05, 7.916700000000151e-05, 7.92779999999986e-05, 7.929200000000164e-05, 7.909799999999967e-05, 7.933300000000088e-05, 7.891600000000179e-05, 7.887499999999908e-05, 7.875000000000243e-05, 7.888899999999865e-05, 7.90970000000002e-05, 7.911099999999976e-05, 7.908300000000063e-05, 7.951399999999928e-05, 7.922200000000032e-05, 7.92640000000025e-05, 7.957000000000103e-05, 7.919400000000118e-05, 7.968000000000211e-05, 7.898599999999964e-05, 7.94719999999971e-05, 7.936100000000001e-05, 7.880500000000124e-05, 7.938899999999915e-05, 7.934700000000044e-05, 7.936100000000001e-05, 7.926399999999903e-05, 7.87779999999981e-05, 7.958399999999713e-05, 7.96389999999994e-05, 7.882000000000028e-05, 7.911099999999976e-05, 7.967999999999864e-05, 7.942999999999839e-05, 7.905500000000149e-05, 7.888899999999865e-05, 7.89030000000017e-05, 7.915299999999847e-05, 7.89169999999978e-05, 7.901399999999878e-05, 7.962499999999983e-05, 7.911099999999976e-05, 7.899999999999921e-05, 7.96389999999994e-05, 7.930499999999827e-05]</msg>
<status status="PASS" starttime="20201112 09:44:41.343" endtime="20201112 09:44:41.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.331" endtime="20201112 09:44:41.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.356" endtime="20201112 09:44:41.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:41.364" endtime="20201112 09:44:41.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.360" endtime="20201112 09:44:41.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.351" endtime="20201112 09:44:41.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.854" endtime="20201112 09:44:41.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:40.853" endtime="20201112 09:44:41.390"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.414" endtime="20201112 09:44:41.436"></status>
</kw>
<msg timestamp="20201112 09:44:41.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:41.410" endtime="20201112 09:44:41.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:41.439" endtime="20201112 09:44:41.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.446" endtime="20201112 09:44:41.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.403" endtime="20201112 09:44:41.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.397" endtime="20201112 09:44:41.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.470" endtime="20201112 09:44:41.809"></status>
</kw>
<msg timestamp="20201112 09:44:41.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042826931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042907347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:41.467" endtime="20201112 09:44:41.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042826931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042907347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:41.819" endtime="20201112 09:44:41.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.838" endtime="20201112 09:44:41.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.459" endtime="20201112 09:44:41.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.454" endtime="20201112 09:44:41.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:41.857" level="INFO">${RESULT} = [{'time': 0.042907347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.041599999999982e-05, 'source_diff': 8.041599999999982e-05}, {'time': 0.043002361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:41.848" endtime="20201112 09:44:41.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:41.889" level="INFO">${ACCURACY} = {'time': [0.042907347, 0.043002361, 0.043096444, 0.043179389, 0.043269389, 0.043361417, 0.043450403, 0.043538431, 0.043627431, 0.043713444, 0.043805458, 0.043894486, 0.043985472, 0.044069472, 0.044152...</msg>
<status status="PASS" starttime="20201112 09:44:41.860" endtime="20201112 09:44:41.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.901" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 09:44:41.898" endtime="20201112 09:44:41.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.906" level="INFO">VALUE: [8.041599999999982e-05, 8.047200000000504e-05, 7.99719999999976e-05, 7.993099999999836e-05, 7.984700000000094e-05, 8.062500000000083e-05, 8.051399999999681e-05, 8.05840000000016e-05, 8.02640000000035e-05, 7.98049999999953e-05, 8.05970000000017e-05, 7.98890000000066e-05, 7.981899999999487e-05, 8.00970000000012e-05, 7.992999999999889e-05, 7.981899999999487e-05, 8.066699999999954e-05, 8.01389999999999e-05, 8.027799999999613e-05, 7.976399999999606e-05, 8.01389999999999e-05, 8.059799999999423e-05, 7.998599999999717e-05, 8.036100000000101e-05, 8.024999999999699e-05, 8.001399999999631e-05, 8.058299999999519e-05, 8.038900000000015e-05, 8.052800000000332e-05, 8.012500000000033e-05, 8.057000000000203e-05, 8.004200000000239e-05, 8.051399999999681e-05, 8.048599999999767e-05, 8.04719999999981e-05, 7.997300000000401e-05, 8.005600000000196e-05, 8.03049999999958e-05, 8.031899999999537e-05, 7.994399999999846e-05, 8.052799999999638e-05, 8.006900000000206e-05, 8.04719999999981e-05, 8.011100000000076e-05, 7.975000000000343e-05, 7.973599999999692e-05, 7.995900000000444e-05, 7.998600000000411e-05, 8.033300000000188e-05, 7.977699999999616e-05]</msg>
<status status="PASS" starttime="20201112 09:44:41.903" endtime="20201112 09:44:41.908"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.891" endtime="20201112 09:44:41.910"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.916" endtime="20201112 09:44:41.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:41.925" endtime="20201112 09:44:41.946"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.920" endtime="20201112 09:44:41.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.912" endtime="20201112 09:44:41.950"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.393" endtime="20201112 09:44:41.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.391" endtime="20201112 09:44:41.951"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.974" endtime="20201112 09:44:41.997"></status>
</kw>
<msg timestamp="20201112 09:44:41.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:41.971" endtime="20201112 09:44:41.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:42.000" endtime="20201112 09:44:42.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.007" endtime="20201112 09:44:42.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.964" endtime="20201112 09:44:42.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.958" endtime="20201112 09:44:42.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.031" endtime="20201112 09:44:42.369"></status>
</kw>
<msg timestamp="20201112 09:44:42.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043280861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043362056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:42.027" endtime="20201112 09:44:42.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043280861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043362056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:42.379" endtime="20201112 09:44:42.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.398" endtime="20201112 09:44:42.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.020" endtime="20201112 09:44:42.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.015" endtime="20201112 09:44:42.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:42.419" level="INFO">${RESULT} = [{'time': 0.043362056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.119500000000612e-05, 'source_diff': 8.119500000000612e-05}, {'time': 0.043454069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:42.410" endtime="20201112 09:44:42.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:42.450" level="INFO">${ACCURACY} = {'time': [0.043362056, 0.043454069, 0.043550083, 0.043633083, 0.043724097, 0.043811111, 0.043899111, 0.043993139, 0.044082139, 0.044176153, 0.044260167, 0.044354222, 0.044446236, 0.044535208, 0.044628...</msg>
<status status="PASS" starttime="20201112 09:44:42.421" endtime="20201112 09:44:42.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.461" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 09:44:42.459" endtime="20201112 09:44:42.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.467" level="INFO">VALUE: [8.119500000000612e-05, 8.123599999999842e-05, 8.104100000000392e-05, 8.095800000000597e-05, 8.086100000000151e-05, 8.102799999999688e-05, 8.118000000000014e-05, 8.158300000000313e-05, 8.093099999999936e-05, 8.134700000000245e-05, 8.134800000000192e-05, 8.120799999999928e-05, 8.086100000000151e-05, 8.073599999999792e-05, 8.140200000000125e-05, 8.137500000000158e-05, 8.137500000000158e-05, 8.130600000000321e-05, 8.170799999999978e-05, 8.16249999999949e-05, 8.084700000000195e-05, 8.131999999999584e-05, 8.087500000000108e-05, 8.080599999999577e-05, 8.101400000000425e-05, 8.144499999999943e-05, 8.1458999999999e-05, 8.094399999999946e-05, 8.148599999999867e-05, 8.099999999999774e-05, 8.166700000000054e-05, 8.095800000000597e-05, 8.118099999999961e-05, 8.15840000000026e-05, 8.106999999999559e-05, 8.107000000000253e-05, 8.131999999999584e-05, 8.076399999999706e-05, 8.107000000000253e-05, 8.086100000000151e-05, 8.127699999999766e-05, 8.140300000000072e-05, 8.097299999999807e-05, 8.161100000000227e-05, 8.136100000000202e-05, 8.116700000000004e-05, 8.124999999999799e-05, 8.168100000000011e-05, 8.093099999999936e-05, 8.127800000000407e-05]</msg>
<status status="PASS" starttime="20201112 09:44:42.464" endtime="20201112 09:44:42.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.452" endtime="20201112 09:44:42.470"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.477" endtime="20201112 09:44:42.479"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:42.485" endtime="20201112 09:44:42.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.481" endtime="20201112 09:44:42.509"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.472" endtime="20201112 09:44:42.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.953" endtime="20201112 09:44:42.511"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.952" endtime="20201112 09:44:42.511"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.534" endtime="20201112 09:44:42.556"></status>
</kw>
<msg timestamp="20201112 09:44:42.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:42.531" endtime="20201112 09:44:42.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:42.559" endtime="20201112 09:44:42.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.565" endtime="20201112 09:44:42.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.524" endtime="20201112 09:44:42.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.518" endtime="20201112 09:44:42.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.589" endtime="20201112 09:44:42.930"></status>
</kw>
<msg timestamp="20201112 09:44:42.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042608083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042690333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:42.586" endtime="20201112 09:44:42.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042608083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042690333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:42.940" endtime="20201112 09:44:42.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.959" endtime="20201112 09:44:42.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.578" endtime="20201112 09:44:42.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.574" endtime="20201112 09:44:42.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:42.979" level="INFO">${RESULT} = [{'time': 0.042690333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.224999999999899e-05, 'source_diff': 8.224999999999899e-05}, {'time': 0.042784347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:42.969" endtime="20201112 09:44:42.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:43.010" level="INFO">${ACCURACY} = {'time': [0.042690333, 0.042784347, 0.042879361, 0.042969361, 0.043060389, 0.043147389, 0.043242389, 0.043334417, 0.043422403, 0.043519431, 0.043605431, 0.043696444, 0.043793458, 0.043882458, 0.043972...</msg>
<status status="PASS" starttime="20201112 09:44:42.981" endtime="20201112 09:44:43.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.021" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 09:44:43.019" endtime="20201112 09:44:43.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.027" level="INFO">VALUE: [8.224999999999899e-05, 8.219400000000071e-05, 8.215299999999454e-05, 8.256899999999762e-05, 8.19170000000008e-05, 8.186100000000252e-05, 8.194499999999993e-05, 8.20840000000031e-05, 8.263899999999547e-05, 8.186199999999505e-05, 8.190300000000122e-05, 8.183300000000338e-05, 8.206899999999712e-05, 8.177699999999816e-05, 8.21390000000019e-05, 8.256900000000456e-05, 8.205499999999755e-05, 8.173599999999892e-05, 8.24170000000013e-05, 8.188900000000165e-05, 8.173599999999892e-05, 8.218000000000114e-05, 8.26669999999946e-05, 8.248699999999914e-05, 8.222199999999985e-05, 8.181899999999687e-05, 8.176399999999806e-05, 8.186100000000252e-05, 8.195800000000003e-05, 8.195800000000003e-05, 8.26390000000024e-05, 8.208399999999616e-05, 8.269500000000068e-05, 8.236100000000302e-05, 8.190300000000122e-05, 8.259799999999623e-05, 8.208299999999669e-05, 8.199999999999874e-05, 8.274999999999949e-05, 8.177799999999763e-05, 8.187499999999515e-05, 8.216700000000104e-05, 8.223599999999942e-05, 8.2459e-05, 8.223599999999942e-05, 8.184700000000295e-05, 8.200000000000568e-05, 8.26390000000024e-05, 8.226399999999856e-05, 8.256899999999762e-05]</msg>
<status status="PASS" starttime="20201112 09:44:43.023" endtime="20201112 09:44:43.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.012" endtime="20201112 09:44:43.030"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.036" endtime="20201112 09:44:43.039"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:43.045" endtime="20201112 09:44:43.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.041" endtime="20201112 09:44:43.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.032" endtime="20201112 09:44:43.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.513" endtime="20201112 09:44:43.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.512" endtime="20201112 09:44:43.071"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.094" endtime="20201112 09:44:43.117"></status>
</kw>
<msg timestamp="20201112 09:44:43.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:43.091" endtime="20201112 09:44:43.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:43.120" endtime="20201112 09:44:43.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.127" endtime="20201112 09:44:43.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.084" endtime="20201112 09:44:43.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.078" endtime="20201112 09:44:43.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.151" endtime="20201112 09:44:43.491"></status>
</kw>
<msg timestamp="20201112 09:44:43.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043211361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043294583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:43.148" endtime="20201112 09:44:43.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043211361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043294583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:43.501" endtime="20201112 09:44:43.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.520" endtime="20201112 09:44:43.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.140" endtime="20201112 09:44:43.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.135" endtime="20201112 09:44:43.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:43.539" level="INFO">${RESULT} = [{'time': 0.043294583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.322200000000085e-05, 'source_diff': 8.322200000000085e-05}, {'time': 0.043391583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:43.530" endtime="20201112 09:44:43.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:43.570" level="INFO">${ACCURACY} = {'time': [0.043294583, 0.043391583, 0.043485611, 0.043578611, 0.043663611, 0.043755625, 0.043844639, 0.043931694, 0.044028667, 0.044118736, 0.044207694, 0.044301681, 0.044387694, 0.044476722, 0.044566...</msg>
<status status="PASS" starttime="20201112 09:44:43.541" endtime="20201112 09:44:43.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.581" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 09:44:43.579" endtime="20201112 09:44:43.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.587" level="INFO">VALUE: [8.322200000000085e-05, 8.309699999999726e-05, 8.323600000000042e-05, 8.369400000000221e-05, 8.29720000000006e-05, 8.288900000000265e-05, 8.365299999999604e-05, 8.336099999999708e-05, 8.330599999999827e-05, 8.34720000000011e-05, 8.366599999999613e-05, 8.36390000000034e-05, 8.315199999999606e-05, 8.324999999999999e-05, 8.31799999999952e-05, 8.351399999999981e-05, 8.34720000000011e-05, 8.315299999999554e-05, 8.366700000000254e-05, 8.306999999999759e-05, 8.330600000000521e-05, 8.287499999999615e-05, 8.276399999999906e-05, 8.305599999999802e-05, 8.352699999999991e-05, 8.36799999999957e-05, 8.319400000000171e-05, 8.365300000000297e-05, 8.327799999999913e-05, 8.292999999999495e-05, 8.288899999999572e-05, 8.338899999999622e-05, 8.273599999999992e-05, 8.333299999999794e-05, 8.277799999999863e-05, 8.36119999999968e-05, 8.283399999999691e-05, 8.316599999999563e-05, 8.345800000000153e-05, 8.318000000000214e-05, 8.356899999999862e-05, 8.276399999999906e-05, 8.308299999999769e-05, 8.276399999999906e-05, 8.277799999999863e-05, 8.30970000000042e-05, 8.368099999999518e-05, 8.352799999999938e-05, 8.298699999999964e-05, 8.308299999999769e-05]</msg>
<status status="PASS" starttime="20201112 09:44:43.584" endtime="20201112 09:44:43.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.572" endtime="20201112 09:44:43.590"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.597" endtime="20201112 09:44:43.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:43.605" endtime="20201112 09:44:43.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.601" endtime="20201112 09:44:43.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.592" endtime="20201112 09:44:43.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.073" endtime="20201112 09:44:43.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.072" endtime="20201112 09:44:43.631"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.655" endtime="20201112 09:44:43.677"></status>
</kw>
<msg timestamp="20201112 09:44:43.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:43.651" endtime="20201112 09:44:43.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:43.680" endtime="20201112 09:44:43.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.687" endtime="20201112 09:44:43.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.644" endtime="20201112 09:44:43.692"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.638" endtime="20201112 09:44:43.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.711" endtime="20201112 09:44:44.049"></status>
</kw>
<msg timestamp="20201112 09:44:44.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043322, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043406486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:43.708" endtime="20201112 09:44:44.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043322, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043406486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:44.059" endtime="20201112 09:44:44.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.078" endtime="20201112 09:44:44.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.700" endtime="20201112 09:44:44.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.695" endtime="20201112 09:44:44.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:44.097" level="INFO">${RESULT} = [{'time': 0.043406486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.448600000000167e-05, 'source_diff': 8.448600000000167e-05}, {'time': 0.043505542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:44.088" endtime="20201112 09:44:44.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:44.127" level="INFO">${ACCURACY} = {'time': [0.043406486, 0.043505542, 0.043596486, 0.0436915, 0.043788542, 0.043887528, 0.043983528, 0.044077542, 0.044166556, 0.044253556, 0.044348569, 0.044438625, 0.044527583, 0.044624611, 0.04472262...</msg>
<status status="PASS" starttime="20201112 09:44:44.099" endtime="20201112 09:44:44.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.132" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 09:44:44.131" endtime="20201112 09:44:44.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.135" level="INFO">VALUE: [8.448600000000167e-05, 8.390300000000323e-05, 8.459699999999876e-05, 8.465300000000398e-05, 8.438899999999722e-05, 8.383400000000485e-05, 8.39720000000016e-05, 8.386099999999758e-05, 8.427800000000013e-05, 8.388899999999672e-05, 8.422199999999491e-05, 8.448600000000167e-05, 8.405499999999955e-05, 8.373600000000092e-05, 8.386100000000452e-05, 8.456999999999909e-05, 8.39720000000016e-05, 8.376400000000006e-05, 8.440299999999679e-05, 8.46249999999979e-05, 8.388900000000366e-05, 8.444500000000243e-05, 8.376300000000059e-05, 8.463899999999747e-05, 8.416700000000304e-05, 8.423600000000142e-05, 8.469399999999627e-05, 8.456899999999962e-05, 8.452800000000038e-05, 8.386099999999758e-05, 8.431999999999884e-05, 8.437499999999765e-05, 8.415300000000348e-05, 8.416600000000357e-05, 8.379099999999973e-05, 8.412500000000434e-05, 8.436100000000502e-05, 8.411099999999783e-05, 8.384700000000495e-05, 8.418000000000314e-05, 8.377799999999963e-05, 8.39590000000015e-05, 8.423600000000142e-05, 8.456999999999909e-05, 8.423599999999448e-05, 8.427800000000013e-05, 8.377700000000016e-05, 8.440199999999731e-05, 8.405499999999955e-05, 8.394399999999552e-05]</msg>
<status status="PASS" starttime="20201112 09:44:44.133" endtime="20201112 09:44:44.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.127" endtime="20201112 09:44:44.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.139" endtime="20201112 09:44:44.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:44.143" endtime="20201112 09:44:44.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.141" endtime="20201112 09:44:44.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.137" endtime="20201112 09:44:44.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.634" endtime="20201112 09:44:44.165"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.632" endtime="20201112 09:44:44.165"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.176" endtime="20201112 09:44:44.194"></status>
</kw>
<msg timestamp="20201112 09:44:44.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:44.174" endtime="20201112 09:44:44.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:44.196" endtime="20201112 09:44:44.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.199" endtime="20201112 09:44:44.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.171" endtime="20201112 09:44:44.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.168" endtime="20201112 09:44:44.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.210" endtime="20201112 09:44:44.527"></status>
</kw>
<msg timestamp="20201112 09:44:44.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025306875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025392153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:44.208" endtime="20201112 09:44:44.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025306875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025392153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:44.537" endtime="20201112 09:44:44.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.556" endtime="20201112 09:44:44.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.205" endtime="20201112 09:44:44.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.203" endtime="20201112 09:44:44.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:44.577" level="INFO">${RESULT} = [{'time': 0.025392153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.527800000000113e-05, 'source_diff': 8.527800000000113e-05}, {'time': 0.025484153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:44.568" endtime="20201112 09:44:44.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:44.608" level="INFO">${ACCURACY} = {'time': [0.025392153, 0.025484153, 0.025576167, 0.025673167, 0.025771181, 0.025871194, 0.025963208, 0.026060208, 0.026156236, 0.026254236, 0.026349236, 0.02643925, 0.026531278, 0.026631278, 0.0267252...</msg>
<status status="PASS" starttime="20201112 09:44:44.579" endtime="20201112 09:44:44.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.619" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 09:44:44.617" endtime="20201112 09:44:44.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.625" level="INFO">VALUE: [8.527800000000113e-05, 8.49859999999987e-05, 8.475000000000149e-05, 8.519499999999972e-05, 8.555600000000052e-05, 8.4846999999999e-05, 8.477700000000116e-05, 8.518000000000067e-05, 8.524999999999852e-05, 8.536099999999908e-05, 8.541700000000083e-05, 8.486100000000205e-05, 8.49859999999987e-05, 8.506999999999959e-05, 8.490300000000076e-05, 8.558299999999672e-05, 8.561200000000227e-05, 8.513900000000144e-05, 8.494399999999999e-05, 8.506900000000012e-05, 8.570800000000031e-05, 8.526400000000156e-05, 8.515299999999754e-05, 8.490300000000076e-05, 8.481999999999934e-05, 8.522199999999938e-05, 8.513900000000144e-05, 8.551399999999834e-05, 8.545800000000006e-05, 8.566599999999813e-05, 8.569400000000074e-05, 8.531900000000037e-05, 8.554100000000148e-05, 8.484700000000248e-05, 8.527800000000113e-05, 8.524999999999852e-05, 8.569400000000074e-05, 8.555600000000052e-05, 8.502799999999741e-05, 8.551399999999834e-05, 8.472299999999836e-05, 8.494499999999947e-05, 8.529100000000123e-05, 8.479100000000073e-05, 8.551400000000181e-05, 8.53469999999995e-05, 8.53469999999995e-05, 8.529199999999723e-05, 8.476400000000106e-05, 8.505600000000002e-05]</msg>
<status status="PASS" starttime="20201112 09:44:44.622" endtime="20201112 09:44:44.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.610" endtime="20201112 09:44:44.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.635" endtime="20201112 09:44:44.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:44.643" endtime="20201112 09:44:44.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.638" endtime="20201112 09:44:44.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.630" endtime="20201112 09:44:44.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.166" endtime="20201112 09:44:44.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.165" endtime="20201112 09:44:44.669"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.692" endtime="20201112 09:44:44.714"></status>
</kw>
<msg timestamp="20201112 09:44:44.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:44.689" endtime="20201112 09:44:44.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:44.718" endtime="20201112 09:44:44.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.724" endtime="20201112 09:44:44.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.682" endtime="20201112 09:44:44.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.676" endtime="20201112 09:44:44.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.748" endtime="20201112 09:44:45.091"></status>
</kw>
<msg timestamp="20201112 09:44:45.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042668236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042754639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:44.745" endtime="20201112 09:44:45.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:45.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042668236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042754639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:45.101" endtime="20201112 09:44:45.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:45.120" endtime="20201112 09:44:45.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.737" endtime="20201112 09:44:45.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.733" endtime="20201112 09:44:45.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:45.139" level="INFO">${RESULT} = [{'time': 0.042754639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.640299999999879e-05, 'source_diff': 8.640299999999879e-05}, {'time': 0.042855639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:45.130" endtime="20201112 09:44:45.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:45.170" level="INFO">${ACCURACY} = {'time': [0.042754639, 0.042855639, 0.042954653, 0.043051681, 0.043147667, 0.043238722, 0.043338681, 0.043435694, 0.043529722, 0.043622722, 0.043719722, 0.04381175, 0.04390375, 0.043999778, 0.04409580...</msg>
<status status="PASS" starttime="20201112 09:44:45.142" endtime="20201112 09:44:45.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:45.182" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 09:44:45.179" endtime="20201112 09:44:45.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:45.187" level="INFO">VALUE: [8.640299999999879e-05, 8.586099999999958e-05, 8.573600000000292e-05, 8.62370000000029e-05, 8.605600000000102e-05, 8.590299999999829e-05, 8.608400000000016e-05, 8.642999999999845e-05, 8.615299999999854e-05, 8.661100000000033e-05, 8.622200000000385e-05, 8.625000000000299e-05, 8.622199999999691e-05, 8.582000000000034e-05, 8.651400000000281e-05, 8.632000000000084e-05, 8.627800000000213e-05, 8.573599999999598e-05, 8.637499999999965e-05, 8.63050000000018e-05, 8.594399999999752e-05, 8.638899999999922e-05, 8.58050000000013e-05, 8.58050000000013e-05, 8.656899999999468e-05, 8.641699999999836e-05, 8.651400000000281e-05, 8.582000000000034e-05, 8.661100000000033e-05, 8.64449999999975e-05, 8.630599999999433e-05, 8.652699999999597e-05, 8.587500000000609e-05, 8.659700000000076e-05, 8.652799999999544e-05, 8.584799999999948e-05, 8.623600000000342e-05, 8.633300000000094e-05, 8.595899999999657e-05, 8.627800000000213e-05, 8.666599999999913e-05, 8.623599999999648e-05, 8.598700000000264e-05, 8.670799999999784e-05, 8.619399999999777e-05, 8.573600000000292e-05, 8.66799999999987e-05, 8.640299999999879e-05, 8.590299999999829e-05, 8.66249999999999e-05]</msg>
<status status="PASS" starttime="20201112 09:44:45.184" endtime="20201112 09:44:45.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.172" endtime="20201112 09:44:45.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:45.197" endtime="20201112 09:44:45.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:45.206" endtime="20201112 09:44:45.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.201" endtime="20201112 09:44:45.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.192" endtime="20201112 09:44:45.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.671" endtime="20201112 09:44:45.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.670" endtime="20201112 09:44:45.232"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:45.256" endtime="20201112 09:44:45.278"></status>
</kw>
<msg timestamp="20201112 09:44:45.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:45.252" endtime="20201112 09:44:45.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:45.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:45.281" endtime="20201112 09:44:45.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:45.288" endtime="20201112 09:44:45.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.245" endtime="20201112 09:44:45.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.239" endtime="20201112 09:44:45.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:45.312" endtime="20201112 09:44:45.662"></status>
</kw>
<msg timestamp="20201112 09:44:45.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043410208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043497278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:45.308" endtime="20201112 09:44:45.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:45.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043410208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043497278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:45.671" endtime="20201112 09:44:45.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:45.691" endtime="20201112 09:44:45.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.301" endtime="20201112 09:44:45.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.296" endtime="20201112 09:44:45.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:45.714" level="INFO">${RESULT} = [{'time': 0.043497278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.707000000000159e-05, 'source_diff': 8.707000000000159e-05}, {'time': 0.043593222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:45.704" endtime="20201112 09:44:45.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:45.751" level="INFO">${ACCURACY} = {'time': [0.043497278, 0.043593222, 0.043683236, 0.04378325, 0.04388225, 0.043982278, 0.044084278, 0.044183292, 0.044285292, 0.044376306, 0.044478319, 0.044570333, 0.044666347, 0.044764347, 0.04485736...</msg>
<status status="PASS" starttime="20201112 09:44:45.717" endtime="20201112 09:44:45.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:45.765" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 09:44:45.762" endtime="20201112 09:44:45.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:45.771" level="INFO">VALUE: [8.707000000000159e-05, 8.711100000000083e-05, 8.715299999999954e-05, 8.756900000000262e-05, 8.674999999999655e-05, 8.695899999999757e-05, 8.769499999999875e-05, 8.719499999999825e-05, 8.705599999999508e-05, 8.751399999999687e-05, 8.686100000000058e-05, 8.747199999999816e-05, 8.711100000000083e-05, 8.681900000000187e-05, 8.744399999999902e-05, 8.718099999999868e-05, 8.720799999999834e-05, 8.700000000000374e-05, 8.686100000000058e-05, 8.745899999999807e-05, 8.691699999999886e-05, 8.690199999999981e-05, 8.731899999999543e-05, 8.733300000000194e-05, 8.681899999999493e-05, 8.744399999999902e-05, 8.71250000000004e-05, 8.672199999999741e-05, 8.755600000000252e-05, 8.770899999999832e-05, 8.752800000000338e-05, 8.682000000000134e-05, 8.706900000000212e-05, 8.679100000000273e-05, 8.744400000000596e-05, 8.68050000000023e-05, 8.755499999999611e-05, 8.709699999999432e-05, 8.752799999999644e-05, 8.752799999999644e-05, 8.6847000000001e-05, 8.757000000000209e-05, 8.715299999999954e-05, 8.73199999999949e-05, 8.736200000000055e-05, 8.679100000000273e-05, 8.747300000000457e-05, 8.709700000000126e-05, 8.727699999999672e-05, 8.727799999999619e-05]</msg>
<status status="PASS" starttime="20201112 09:44:45.768" endtime="20201112 09:44:45.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.753" endtime="20201112 09:44:45.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:45.781" endtime="20201112 09:44:45.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:45.789" endtime="20201112 09:44:45.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.785" endtime="20201112 09:44:45.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.776" endtime="20201112 09:44:45.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.234" endtime="20201112 09:44:45.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.233" endtime="20201112 09:44:45.815"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:45.839" endtime="20201112 09:44:45.861"></status>
</kw>
<msg timestamp="20201112 09:44:45.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:45.835" endtime="20201112 09:44:45.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:45.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:45.865" endtime="20201112 09:44:45.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:45.871" endtime="20201112 09:44:45.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.828" endtime="20201112 09:44:45.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.822" endtime="20201112 09:44:45.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:45.895" endtime="20201112 09:44:46.243"></status>
</kw>
<msg timestamp="20201112 09:44:46.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043319597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043407486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:45.892" endtime="20201112 09:44:46.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043319597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043407486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:46.252" endtime="20201112 09:44:46.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.272" endtime="20201112 09:44:46.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.884" endtime="20201112 09:44:46.279"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.879" endtime="20201112 09:44:46.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:46.291" level="INFO">${RESULT} = [{'time': 0.043407486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.788900000000072e-05, 'source_diff': 8.788900000000072e-05}, {'time': 0.043504486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:46.282" endtime="20201112 09:44:46.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:46.322" level="INFO">${ACCURACY} = {'time': [0.043407486, 0.043504486, 0.0435945, 0.043687514, 0.043777542, 0.043870542, 0.043964556, 0.044064569, 0.044160556, 0.044253583, 0.044350583, 0.044445611, 0.044548625, 0.044649611, 0.04474962...</msg>
<status status="PASS" starttime="20201112 09:44:46.293" endtime="20201112 09:44:46.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.333" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 09:44:46.331" endtime="20201112 09:44:46.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.338" level="INFO">VALUE: [8.788900000000072e-05, 8.83050000000038e-05, 8.777800000000363e-05, 8.827799999999719e-05, 8.800000000000474e-05, 8.827799999999719e-05, 8.825000000000499e-05, 8.841600000000088e-05, 8.772299999999789e-05, 8.786100000000158e-05, 8.830499999999686e-05, 8.841700000000036e-05, 8.808300000000269e-05, 8.8332999999996e-05, 8.838900000000122e-05, 8.84449999999995e-05, 8.822199999999891e-05, 8.806900000000312e-05, 8.784700000000201e-05, 8.840199999999437e-05, 8.786100000000158e-05, 8.813900000000097e-05, 8.806899999999618e-05, 8.869400000000027e-05, 8.805600000000302e-05, 8.848599999999873e-05, 8.804200000000345e-05, 8.813900000000097e-05, 8.786099999999464e-05, 8.863899999999453e-05, 8.845899999999907e-05, 8.809699999999532e-05, 8.845799999999959e-05, 8.792999999999995e-05, 8.79720000000056e-05, 8.834699999999557e-05, 8.787500000000115e-05, 8.827799999999719e-05, 8.805600000000302e-05, 8.805500000000355e-05, 8.786100000000158e-05, 8.798599999999823e-05, 8.822199999999891e-05, 8.856999999999615e-05, 8.813800000000149e-05, 8.787499999999421e-05, 8.826399999999762e-05, 8.811100000000183e-05, 8.781900000000287e-05, 8.863900000000147e-05]</msg>
<status status="PASS" starttime="20201112 09:44:46.335" endtime="20201112 09:44:46.340"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.324" endtime="20201112 09:44:46.342"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.348" endtime="20201112 09:44:46.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:46.357" endtime="20201112 09:44:46.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.352" endtime="20201112 09:44:46.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.344" endtime="20201112 09:44:46.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.818" endtime="20201112 09:44:46.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:45.816" endtime="20201112 09:44:46.383"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.407" endtime="20201112 09:44:46.429"></status>
</kw>
<msg timestamp="20201112 09:44:46.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:46.403" endtime="20201112 09:44:46.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:46.432" endtime="20201112 09:44:46.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.439" endtime="20201112 09:44:46.443"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.396" endtime="20201112 09:44:46.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.390" endtime="20201112 09:44:46.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.463" endtime="20201112 09:44:46.809"></status>
</kw>
<msg timestamp="20201112 09:44:46.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043175181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043264472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:46.459" endtime="20201112 09:44:46.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043175181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043264472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:46.819" endtime="20201112 09:44:46.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.837" endtime="20201112 09:44:46.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.452" endtime="20201112 09:44:46.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.447" endtime="20201112 09:44:46.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:46.860" level="INFO">${RESULT} = [{'time': 0.043264472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.929099999999829e-05, 'source_diff': 8.929099999999829e-05}, {'time': 0.043357486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:46.850" endtime="20201112 09:44:46.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:46.890" level="INFO">${ACCURACY} = {'time': [0.043264472, 0.043357486, 0.043449514, 0.043548514, 0.043642514, 0.043734528, 0.043831556, 0.043925556, 0.044029556, 0.044124569, 0.044221597, 0.044312597, 0.044408611, 0.044505639, 0.044609...</msg>
<status status="PASS" starttime="20201112 09:44:46.862" endtime="20201112 09:44:46.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.901" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 09:44:46.898" endtime="20201112 09:44:46.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.906" level="INFO">VALUE: [8.929099999999829e-05, 8.909700000000326e-05, 8.937500000000265e-05, 8.927800000000513e-05, 8.924999999999905e-05, 8.934700000000351e-05, 8.895899999999957e-05, 8.927799999999819e-05, 8.905599999999708e-05, 8.923599999999948e-05, 8.874999999999855e-05, 8.897199999999966e-05, 8.898599999999923e-05, 8.895800000000009e-05, 8.948599999999973e-05, 8.923599999999948e-05, 8.879099999999779e-05, 8.937500000000265e-05, 8.884800000000248e-05, 8.959699999999682e-05, 8.96800000000017e-05, 8.96659999999952e-05, 8.904099999999804e-05, 8.963900000000247e-05, 8.890300000000129e-05, 8.891700000000086e-05, 8.9332999999997e-05, 8.936099999999614e-05, 8.890300000000129e-05, 8.929199999999776e-05, 8.884800000000248e-05, 8.915300000000154e-05, 8.94999999999993e-05, 8.877699999999822e-05, 8.944400000000102e-05, 8.931899999999743e-05, 8.865300000000104e-05, 8.969400000000127e-05, 8.909699999999632e-05, 8.877799999999769e-05, 8.91670000000011e-05, 8.933399999999647e-05, 8.895899999999957e-05, 8.897299999999914e-05, 8.920899999999982e-05, 8.931899999999743e-05, 8.969400000000127e-05, 8.930499999999786e-05, 8.908299999999675e-05, 8.929199999999776e-05]</msg>
<status status="PASS" starttime="20201112 09:44:46.903" endtime="20201112 09:44:46.908"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.892" endtime="20201112 09:44:46.909"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.916" endtime="20201112 09:44:46.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:46.924" endtime="20201112 09:44:46.946"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.920" endtime="20201112 09:44:46.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.911" endtime="20201112 09:44:46.949"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.385" endtime="20201112 09:44:46.950"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.384" endtime="20201112 09:44:46.950"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.973" endtime="20201112 09:44:46.995"></status>
</kw>
<msg timestamp="20201112 09:44:46.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:46.969" endtime="20201112 09:44:46.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:46.998" endtime="20201112 09:44:47.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.004" endtime="20201112 09:44:47.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.962" endtime="20201112 09:44:47.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.956" endtime="20201112 09:44:47.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.028" endtime="20201112 09:44:47.373"></status>
</kw>
<msg timestamp="20201112 09:44:47.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042011819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0421025, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:44:47.024" endtime="20201112 09:44:47.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042011819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0421025, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:44:47.383" endtime="20201112 09:44:47.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.401" endtime="20201112 09:44:47.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.017" endtime="20201112 09:44:47.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.013" endtime="20201112 09:44:47.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:47.420" level="INFO">${RESULT} = [{'time': 0.0421025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.068100000000218e-05, 'source_diff': 9.068100000000218e-05}, {'time': 0.042198514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:47.412" endtime="20201112 09:44:47.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:47.451" level="INFO">${ACCURACY} = {'time': [0.0421025, 0.042198514, 0.042301514, 0.042399528, 0.042492542, 0.042595556, 0.042695556, 0.042793569, 0.042894597, 0.042998611, 0.043102611, 0.043205611, 0.043307625, 0.043405639, 0.04350369...</msg>
<status status="PASS" starttime="20201112 09:44:47.423" endtime="20201112 09:44:47.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.463" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 09:44:47.461" endtime="20201112 09:44:47.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.468" level="INFO">VALUE: [9.068100000000218e-05, 9.063899999999653e-05, 8.991700000000186e-05, 9.01529999999956e-05, 9.034800000000398e-05, 9.055599999999858e-05, 9.068100000000218e-05, 9.056899999999868e-05, 9.06659999999962e-05, 9.0332999999998e-05, 8.986099999999664e-05, 9.034699999999757e-05, 9.059700000000476e-05, 9.036100000000408e-05, 9.019400000000177e-05, 9.006999999999765e-05, 9.052799999999944e-05, 9.052799999999944e-05, 8.990200000000281e-05, 8.995800000000109e-05, 8.969400000000127e-05, 9.027799999999919e-05, 9.013900000000297e-05, 9.019500000000125e-05, 9.04450000000015e-05, 9.022200000000091e-05, 9.065300000000304e-05, 8.986099999999664e-05, 8.9945000000001e-05, 8.984800000000348e-05, 8.976400000000606e-05, 9.054099999999954e-05, 8.98199999999974e-05, 8.965300000000204e-05, 9.013900000000297e-05, 9.054200000000595e-05, 9.005599999999808e-05, 9.004199999999851e-05, 9.034700000000451e-05, 9.011099999999689e-05, 9.001399999999937e-05, 8.986099999999664e-05, 9.033300000000494e-05, 9.047200000000116e-05, 8.981900000000487e-05, 9.063899999999653e-05, 9.055499999999911e-05, 9.043100000000193e-05, 9.034699999999757e-05, 9.004199999999851e-05]</msg>
<status status="PASS" starttime="20201112 09:44:47.465" endtime="20201112 09:44:47.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.453" endtime="20201112 09:44:47.471"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.478" endtime="20201112 09:44:47.481"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:47.486" endtime="20201112 09:44:47.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.482" endtime="20201112 09:44:47.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.473" endtime="20201112 09:44:47.511"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.952" endtime="20201112 09:44:47.512"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.951" endtime="20201112 09:44:47.512"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.535" endtime="20201112 09:44:47.557"></status>
</kw>
<msg timestamp="20201112 09:44:47.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:47.532" endtime="20201112 09:44:47.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:47.560" endtime="20201112 09:44:47.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.567" endtime="20201112 09:44:47.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.524" endtime="20201112 09:44:47.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.519" endtime="20201112 09:44:47.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.578" endtime="20201112 09:44:47.864"></status>
</kw>
<msg timestamp="20201112 09:44:47.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042159806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042250514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:47.576" endtime="20201112 09:44:47.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042159806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042250514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:47.869" endtime="20201112 09:44:47.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.887" endtime="20201112 09:44:47.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.573" endtime="20201112 09:44:47.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.571" endtime="20201112 09:44:47.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:47.906" level="INFO">${RESULT} = [{'time': 0.042250514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.070800000000184e-05, 'source_diff': 9.070800000000184e-05}, {'time': 0.042350528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:47.897" endtime="20201112 09:44:47.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:47.936" level="INFO">${ACCURACY} = {'time': [0.042250514, 0.042350528, 0.042447542, 0.042544556, 0.042647556, 0.042743639, 0.042839597, 0.042934583, 0.043031611, 0.043125611, 0.043222625, 0.043326667, 0.043427639, 0.043531653, 0.043632...</msg>
<status status="PASS" starttime="20201112 09:44:47.908" endtime="20201112 09:44:47.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.951" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 09:44:47.949" endtime="20201112 09:44:47.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.957" level="INFO">VALUE: [9.070800000000184e-05, 9.090299999999635e-05, 9.16529999999971e-05, 9.080599999999883e-05, 9.118100000000268e-05, 9.176400000000112e-05, 9.08329999999985e-05, 9.15000000000013e-05, 9.081899999999893e-05, 9.094400000000252e-05, 9.162499999999796e-05, 9.154200000000001e-05, 9.105599999999908e-05, 9.094499999999506e-05, 9.106999999999865e-05, 9.094400000000252e-05, 9.147199999999522e-05, 9.076300000000065e-05, 9.105499999999961e-05, 9.086099999999764e-05, 9.106899999999918e-05, 9.141700000000336e-05, 9.1332999999999e-05, 9.13199999999989e-05, 9.13199999999989e-05, 9.141699999999642e-05, 9.108399999999822e-05, 9.084799999999754e-05, 9.131899999999943e-05, 9.091599999999644e-05, 9.087500000000415e-05, 9.086099999999764e-05, 9.091700000000286e-05, 9.102799999999994e-05, 9.134699999999857e-05, 9.097200000000166e-05, 9.093100000000243e-05, 9.115300000000354e-05, 9.118100000000268e-05, 9.115200000000406e-05, 9.1332999999999e-05, 9.152700000000097e-05, 9.119400000000277e-05, 9.079099999999979e-05, 9.077799999999969e-05, 9.169399999999633e-05, 9.093100000000243e-05, 9.08199999999984e-05, 9.077799999999969e-05, 9.093000000000295e-05]</msg>
<status status="PASS" starttime="20201112 09:44:47.954" endtime="20201112 09:44:47.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.940" endtime="20201112 09:44:47.961"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.968" endtime="20201112 09:44:47.971"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:47.977" endtime="20201112 09:44:47.998"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.972" endtime="20201112 09:44:48.000"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.963" endtime="20201112 09:44:48.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.514" endtime="20201112 09:44:48.003"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.513" endtime="20201112 09:44:48.003"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.026" endtime="20201112 09:44:48.047"></status>
</kw>
<msg timestamp="20201112 09:44:48.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:48.022" endtime="20201112 09:44:48.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:48.051" endtime="20201112 09:44:48.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.058" endtime="20201112 09:44:48.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.015" endtime="20201112 09:44:48.064"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.009" endtime="20201112 09:44:48.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.082" endtime="20201112 09:44:48.420"></status>
</kw>
<msg timestamp="20201112 09:44:48.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042411028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042503347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:48.079" endtime="20201112 09:44:48.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042411028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042503347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:48.429" endtime="20201112 09:44:48.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.447" endtime="20201112 09:44:48.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.071" endtime="20201112 09:44:48.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.067" endtime="20201112 09:44:48.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:48.468" level="INFO">${RESULT} = [{'time': 0.042503347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.231899999999349e-05, 'source_diff': 9.231899999999349e-05}, {'time': 0.042600347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:48.459" endtime="20201112 09:44:48.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:48.498" level="INFO">${ACCURACY} = {'time': [0.042503347, 0.042600347, 0.042704375, 0.042804361, 0.042910375, 0.043013389, 0.043114403, 0.043220417, 0.043324431, 0.043423431, 0.043526458, 0.043631458, 0.043732486, 0.043834486, 0.043929...</msg>
<status status="PASS" starttime="20201112 09:44:48.470" endtime="20201112 09:44:48.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.509" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 09:44:48.507" endtime="20201112 09:44:48.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.515" level="INFO">VALUE: [9.231899999999349e-05, 9.227799999999425e-05, 9.26250000000059e-05, 9.191699999999692e-05, 9.187499999999821e-05, 9.244499999999656e-05, 9.252800000000144e-05, 9.190299999999735e-05, 9.238899999999828e-05, 9.218099999999674e-05, 9.174999999999461e-05, 9.215199999999812e-05, 9.190300000000429e-05, 9.242999999999751e-05, 9.173600000000198e-05, 9.236099999999914e-05, 9.243099999999699e-05, 9.202800000000094e-05, 9.176400000000112e-05, 9.258399999999972e-05, 9.180599999999983e-05, 9.269399999999733e-05, 9.236099999999914e-05, 9.205500000000061e-05, 9.240299999999785e-05, 9.186099999999864e-05, 9.270800000000384e-05, 9.255600000000058e-05, 9.255600000000058e-05, 9.188899999999778e-05, 9.257000000000015e-05, 9.19870000000017e-05, 9.244399999999708e-05, 9.209699999999932e-05, 9.258300000000025e-05, 9.251400000000187e-05, 9.21529999999976e-05, 9.187499999999821e-05, 9.27079999999969e-05, 9.257000000000015e-05, 9.265300000000504e-05, 9.230600000000033e-05, 9.249999999999536e-05, 9.227700000000172e-05, 9.212499999999846e-05, 9.222199999999597e-05, 9.213899999999803e-05, 9.263899999999853e-05, 9.236099999999914e-05, 9.21529999999976e-05]</msg>
<status status="PASS" starttime="20201112 09:44:48.512" endtime="20201112 09:44:48.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.500" endtime="20201112 09:44:48.523"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.529" endtime="20201112 09:44:48.532"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:48.538" endtime="20201112 09:44:48.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.534" endtime="20201112 09:44:48.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.525" endtime="20201112 09:44:48.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.005" endtime="20201112 09:44:48.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.004" endtime="20201112 09:44:48.564"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.586" endtime="20201112 09:44:48.609"></status>
</kw>
<msg timestamp="20201112 09:44:48.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:48.583" endtime="20201112 09:44:48.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:48.612" endtime="20201112 09:44:48.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.619" endtime="20201112 09:44:48.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.576" endtime="20201112 09:44:48.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.570" endtime="20201112 09:44:48.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.642" endtime="20201112 09:44:48.993"></status>
</kw>
<msg timestamp="20201112 09:44:49.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041939472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042032236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:48.639" endtime="20201112 09:44:49.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041939472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042032236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:49.003" endtime="20201112 09:44:49.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.022" endtime="20201112 09:44:49.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.632" endtime="20201112 09:44:49.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.627" endtime="20201112 09:44:49.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:49.043" level="INFO">${RESULT} = [{'time': 0.042032236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.276400000000212e-05, 'source_diff': 9.276400000000212e-05}, {'time': 0.042140236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:49.034" endtime="20201112 09:44:49.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:49.074" level="INFO">${ACCURACY} = {'time': [0.042032236, 0.042140236, 0.04223625, 0.042336264, 0.042437292, 0.042541292, 0.042641319, 0.042749306, 0.042857319, 0.042964333, 0.043065361, 0.043165361, 0.043266389, 0.043367389, 0.0434713...</msg>
<status status="PASS" starttime="20201112 09:44:49.045" endtime="20201112 09:44:49.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.085" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 09:44:49.083" endtime="20201112 09:44:49.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.090" level="INFO">VALUE: [9.276400000000212e-05, 9.326399999999568e-05, 9.273600000000298e-05, 9.33200000000009e-05, 9.295900000000357e-05, 9.323600000000348e-05, 9.29859999999963e-05, 9.34870000000032e-05, 9.369399999999833e-05, 9.290199999999887e-05, 9.275000000000255e-05, 9.338899999999928e-05, 9.276400000000212e-05, 9.275000000000255e-05, 9.28200000000004e-05, 9.338899999999928e-05, 9.2945000000004e-05, 9.366699999999867e-05, 9.369499999999781e-05, 9.341699999999842e-05, 9.343000000000545e-05, 9.3027999999995e-05, 9.276400000000212e-05, 9.327799999999525e-05, 9.336100000000014e-05, 9.268100000000418e-05, 9.307000000000065e-05, 9.307000000000065e-05, 9.319499999999731e-05, 9.338900000000622e-05, 9.306900000000118e-05, 9.31800000000052e-05, 9.319399999999783e-05, 9.35279999999955e-05, 9.294400000000452e-05, 9.272199999999647e-05, 9.311099999999989e-05, 9.324999999999611e-05, 9.348600000000373e-05, 9.33200000000009e-05, 9.362499999999996e-05, 9.327800000000219e-05, 9.297200000000366e-05, 9.286099999999964e-05, 9.309700000000032e-05, 9.297200000000366e-05, 9.311099999999989e-05, 9.338900000000622e-05, 9.298600000000323e-05, 9.304200000000151e-05]</msg>
<status status="PASS" starttime="20201112 09:44:49.087" endtime="20201112 09:44:49.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.076" endtime="20201112 09:44:49.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.100" endtime="20201112 09:44:49.103"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:49.109" endtime="20201112 09:44:49.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.104" endtime="20201112 09:44:49.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.096" endtime="20201112 09:44:49.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.566" endtime="20201112 09:44:49.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.565" endtime="20201112 09:44:49.135"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.160" endtime="20201112 09:44:49.182"></status>
</kw>
<msg timestamp="20201112 09:44:49.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:49.156" endtime="20201112 09:44:49.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:49.185" endtime="20201112 09:44:49.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.192" endtime="20201112 09:44:49.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.149" endtime="20201112 09:44:49.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.143" endtime="20201112 09:44:49.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.216" endtime="20201112 09:44:49.556"></status>
</kw>
<msg timestamp="20201112 09:44:49.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044768069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044862264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:49.212" endtime="20201112 09:44:49.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044768069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044862264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:49.565" endtime="20201112 09:44:49.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.585" endtime="20201112 09:44:49.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.205" endtime="20201112 09:44:49.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.200" endtime="20201112 09:44:49.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:49.604" level="INFO">${RESULT} = [{'time': 0.044862264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.419499999999831e-05, 'source_diff': 9.419499999999831e-05}, {'time': 0.044971278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:49.595" endtime="20201112 09:44:49.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:49.635" level="INFO">${ACCURACY} = {'time': [0.044862264, 0.044971278, 0.045071292, 0.045177333, 0.045276319, 0.045373319, 0.045471333, 0.045573347, 0.045672389, 0.045774361, 0.045878375, 0.045977403, 0.046078403, 0.046179431, 0.046284...</msg>
<status status="PASS" starttime="20201112 09:44:49.606" endtime="20201112 09:44:49.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.646" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 09:44:49.644" endtime="20201112 09:44:49.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.652" level="INFO">VALUE: [9.419499999999831e-05, 9.407000000000165e-05, 9.443099999999899e-05, 9.463900000000053e-05, 9.448600000000473e-05, 9.370800000000484e-05, 9.411100000000089e-05, 9.394399999999858e-05, 9.430600000000233e-05, 9.372199999999747e-05, 9.384700000000107e-05, 9.405600000000208e-05, 9.397199999999772e-05, 9.399999999999686e-05, 9.444399999999908e-05, 9.394399999999858e-05, 9.427699999999678e-05, 9.456899999999574e-05, 9.372199999999747e-05, 9.434700000000157e-05, 9.423600000000448e-05, 9.466699999999967e-05, 9.390299999999935e-05, 9.469499999999881e-05, 9.409700000000132e-05, 9.459700000000182e-05, 9.459700000000182e-05, 9.398600000000423e-05, 9.45130000000044e-05, 9.423600000000448e-05, 9.45279999999965e-05, 9.381900000000193e-05, 9.41529999999996e-05, 9.466699999999967e-05, 9.447200000000516e-05, 9.457000000000215e-05, 9.463900000000053e-05, 9.415200000000012e-05, 9.388899999999978e-05, 9.423599999999754e-05, 9.39859999999973e-05, 9.45279999999965e-05, 9.38330000000015e-05, 9.37079999999979e-05, 9.381999999999446e-05, 9.458400000000172e-05, 9.448600000000473e-05, 9.437500000000071e-05, 9.402700000000347e-05, 9.461099999999445e-05]</msg>
<status status="PASS" starttime="20201112 09:44:49.648" endtime="20201112 09:44:49.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.637" endtime="20201112 09:44:49.655"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.661" endtime="20201112 09:44:49.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:49.670" endtime="20201112 09:44:49.692"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.666" endtime="20201112 09:44:49.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.657" endtime="20201112 09:44:49.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.138" endtime="20201112 09:44:49.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.136" endtime="20201112 09:44:49.696"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.720" endtime="20201112 09:44:49.742"></status>
</kw>
<msg timestamp="20201112 09:44:49.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:49.716" endtime="20201112 09:44:49.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:49.746" endtime="20201112 09:44:49.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.752" endtime="20201112 09:44:49.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.709" endtime="20201112 09:44:49.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.703" endtime="20201112 09:44:49.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.777" endtime="20201112 09:44:50.116"></status>
</kw>
<msg timestamp="20201112 09:44:50.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043016389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043111736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:49.773" endtime="20201112 09:44:50.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043016389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043111736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:50.126" endtime="20201112 09:44:50.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.145" endtime="20201112 09:44:50.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.766" endtime="20201112 09:44:50.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.761" endtime="20201112 09:44:50.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:50.165" level="INFO">${RESULT} = [{'time': 0.043111736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.534699999999563e-05, 'source_diff': 9.534699999999563e-05}, {'time': 0.043214736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:50.155" endtime="20201112 09:44:50.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:50.196" level="INFO">${ACCURACY} = {'time': [0.043111736, 0.043214736, 0.043316792, 0.043419778, 0.043528778, 0.043637778, 0.043745847, 0.043847819, 0.043950819, 0.044052833, 0.044159847, 0.044267861, 0.044377861, 0.044475875, 0.044575...</msg>
<status status="PASS" starttime="20201112 09:44:50.167" endtime="20201112 09:44:50.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.208" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 09:44:50.205" endtime="20201112 09:44:50.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.213" level="INFO">VALUE: [9.534699999999563e-05, 9.556899999999674e-05, 9.49729999999982e-05, 9.516700000000017e-05, 9.511099999999495e-05, 9.55000000000053e-05, 9.540300000000085e-05, 9.477700000000422e-05, 9.515200000000112e-05, 9.476399999999718e-05, 9.498600000000523e-05, 9.473599999999804e-05, 9.480499999999642e-05, 9.509699999999538e-05, 9.526399999999768e-05, 9.569499999999981e-05, 9.522200000000591e-05, 9.476399999999718e-05, 9.525000000000505e-05, 9.494399999999958e-05, 9.493000000000001e-05, 9.484699999999513e-05, 9.508299999999581e-05, 9.556900000000368e-05, 9.481900000000293e-05, 9.523600000000548e-05, 9.49859999999983e-05, 9.563899999999459e-05, 9.512500000000146e-05, 9.556999999999621e-05, 9.495899999999863e-05, 9.502700000000447e-05, 9.51660000000007e-05, 9.527799999999725e-05, 9.491699999999992e-05, 9.559700000000282e-05, 9.512500000000146e-05, 9.568100000000024e-05, 9.486100000000164e-05, 9.479100000000379e-05, 9.54859999999988e-05, 9.51660000000007e-05, 9.544400000000008e-05, 9.491699999999992e-05, 9.491699999999992e-05, 9.477800000000369e-05, 9.512500000000146e-05, 9.494399999999958e-05, 9.561099999999545e-05, 9.527799999999725e-05]</msg>
<status status="PASS" starttime="20201112 09:44:50.210" endtime="20201112 09:44:50.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.198" endtime="20201112 09:44:50.217"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.224" endtime="20201112 09:44:50.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:50.232" endtime="20201112 09:44:50.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.228" endtime="20201112 09:44:50.256"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.219" endtime="20201112 09:44:50.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.698" endtime="20201112 09:44:50.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.697" endtime="20201112 09:44:50.258"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.282" endtime="20201112 09:44:50.304"></status>
</kw>
<msg timestamp="20201112 09:44:50.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:50.278" endtime="20201112 09:44:50.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:50.308" endtime="20201112 09:44:50.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.314" endtime="20201112 09:44:50.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.271" endtime="20201112 09:44:50.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.265" endtime="20201112 09:44:50.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.338" endtime="20201112 09:44:50.675"></status>
</kw>
<msg timestamp="20201112 09:44:50.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043315958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043417236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:50.335" endtime="20201112 09:44:50.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043315958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043417236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:50.685" endtime="20201112 09:44:50.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.703" endtime="20201112 09:44:50.709"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.328" endtime="20201112 09:44:50.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.323" endtime="20201112 09:44:50.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:50.723" level="INFO">${RESULT} = [{'time': 0.043417236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010127799999999632, 'source_diff': 0.00010127799999999632}, {'time': 0.04352325, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:44:50.714" endtime="20201112 09:44:50.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:50.754" level="INFO">${ACCURACY} = {'time': [0.043417236, 0.04352325, 0.043627264, 0.043730264, 0.043840278, 0.043948292, 0.044059319, 0.044162306, 0.044264333, 0.044370333, 0.044480333, 0.044579361, 0.044690431, 0.044797375, 0.0449003...</msg>
<status status="PASS" starttime="20201112 09:44:50.725" endtime="20201112 09:44:50.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.765" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 09:44:50.763" endtime="20201112 09:44:50.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.771" level="INFO">VALUE: [0.00010127799999999632, 9.587500000000221e-05, 9.613900000000203e-05, 9.59859999999993e-05, 9.630600000000433e-05, 9.619500000000031e-05, 9.608299999999681e-05, 9.577799999999775e-05, 9.625000000000605e-05, 9.58609999999957e-05, 9.651399999999893e-05, 9.594400000000058e-05, 9.612500000000246e-05, 9.663900000000253e-05, 9.637499999999577e-05, 9.588900000000178e-05, 9.638900000000228e-05, 9.636100000000314e-05, 9.669500000000081e-05, 9.606899999999724e-05, 9.59859999999993e-05, 9.64859999999998e-05, 9.608299999999681e-05, 9.612499999999552e-05, 9.618100000000074e-05, 9.64859999999998e-05, 9.580600000000383e-05, 9.655599999999764e-05, 9.573599999999904e-05, 9.644500000000056e-05, 9.66939999999944e-05, 9.640300000000185e-05, 9.631999999999696e-05, 9.669500000000081e-05, 9.595899999999963e-05, 9.627799999999825e-05, 9.595899999999963e-05, 9.623599999999954e-05, 9.649999999999936e-05, 9.613900000000203e-05, 9.619500000000031e-05, 9.575000000000555e-05, 9.631900000000443e-05, 9.594400000000058e-05, 9.62080000000004e-05, 9.65000000000063e-05, 9.606900000000418e-05, 9.623599999999954e-05, 9.584700000000307e-05, 9.6027999999998e-05]</msg>
<status status="PASS" starttime="20201112 09:44:50.767" endtime="20201112 09:44:50.772"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.756" endtime="20201112 09:44:50.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.781" endtime="20201112 09:44:50.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:50.789" endtime="20201112 09:44:50.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.785" endtime="20201112 09:44:50.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.776" endtime="20201112 09:44:50.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.260" endtime="20201112 09:44:50.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.259" endtime="20201112 09:44:50.815"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.838" endtime="20201112 09:44:50.861"></status>
</kw>
<msg timestamp="20201112 09:44:50.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:50.835" endtime="20201112 09:44:50.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:50.864" endtime="20201112 09:44:50.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.871" endtime="20201112 09:44:50.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.828" endtime="20201112 09:44:50.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.822" endtime="20201112 09:44:50.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.895" endtime="20201112 09:44:51.210"></status>
</kw>
<msg timestamp="20201112 09:44:51.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042965736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043062958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:50.891" endtime="20201112 09:44:51.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042965736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043062958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:51.219" endtime="20201112 09:44:51.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.238" endtime="20201112 09:44:51.246"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.884" endtime="20201112 09:44:51.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.879" endtime="20201112 09:44:51.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:51.260" level="INFO">${RESULT} = [{'time': 0.043062958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.722200000000097e-05, 'source_diff': 9.722200000000097e-05}, {'time': 0.043164917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:51.251" endtime="20201112 09:44:51.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:51.292" level="INFO">${ACCURACY} = {'time': [0.043062958, 0.043164917, 0.043269931, 0.043370944, 0.043481958, 0.043583972, 0.043688, 0.043799986, 0.043912014, 0.044014014, 0.044120028, 0.044225056, 0.044331056, 0.044442069, 0.044541069...</msg>
<status status="PASS" starttime="20201112 09:44:51.263" endtime="20201112 09:44:51.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.303" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 09:44:51.301" endtime="20201112 09:44:51.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.309" level="INFO">VALUE: [9.722200000000097e-05, 9.68479999999966e-05, 9.691699999999498e-05, 9.731899999999849e-05, 9.752700000000003e-05, 9.727799999999925e-05, 9.741699999999548e-05, 9.767999999999583e-05, 9.747200000000122e-05, 9.748599999999386e-05, 9.75279999999995e-05, 9.716700000000217e-05, 9.731999999999796e-05, 9.690200000000287e-05, 9.695800000000115e-05, 9.731900000000543e-05, 9.756900000000568e-05, 9.688899999999584e-05, 9.695800000000115e-05, 9.71809999999948e-05, 9.76530000000031e-05, 9.694400000000158e-05, 9.740300000000285e-05, 9.706899999999824e-05, 9.769400000000233e-05, 9.677699999999928e-05, 9.725000000000011e-05, 9.699999999999986e-05, 9.679199999999832e-05, 9.75279999999995e-05, 9.676399999999918e-05, 9.693100000000149e-05, 9.723600000000054e-05, 9.73479999999971e-05, 9.693100000000149e-05, 9.699999999999986e-05, 9.693000000000201e-05, 9.738900000000328e-05, 9.681899999999799e-05, 9.706899999999824e-05, 9.75279999999995e-05, 9.673600000000004e-05, 9.687500000000321e-05, 9.75279999999995e-05, 9.740299999999591e-05, 9.693100000000149e-05, 9.75279999999995e-05, 9.698599999999336e-05, 9.676399999999918e-05, 9.736100000000414e-05]</msg>
<status status="PASS" starttime="20201112 09:44:51.306" endtime="20201112 09:44:51.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.294" endtime="20201112 09:44:51.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.319" endtime="20201112 09:44:51.322"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:51.328" endtime="20201112 09:44:51.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.323" endtime="20201112 09:44:51.351"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.314" endtime="20201112 09:44:51.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.817" endtime="20201112 09:44:51.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.816" endtime="20201112 09:44:51.354"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.377" endtime="20201112 09:44:51.400"></status>
</kw>
<msg timestamp="20201112 09:44:51.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:51.374" endtime="20201112 09:44:51.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:51.403" endtime="20201112 09:44:51.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.410" endtime="20201112 09:44:51.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.366" endtime="20201112 09:44:51.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.360" endtime="20201112 09:44:51.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.434" endtime="20201112 09:44:51.772"></status>
</kw>
<msg timestamp="20201112 09:44:51.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042770361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042868472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:51.430" endtime="20201112 09:44:51.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042770361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042868472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:51.782" endtime="20201112 09:44:51.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.801" endtime="20201112 09:44:51.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.423" endtime="20201112 09:44:51.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.418" endtime="20201112 09:44:51.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:51.820" level="INFO">${RESULT} = [{'time': 0.042868472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.811099999999795e-05, 'source_diff': 9.811099999999795e-05}, {'time': 0.042974514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:51.811" endtime="20201112 09:44:51.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:51.851" level="INFO">${ACCURACY} = {'time': [0.042868472, 0.042974514, 0.043075472, 0.043188486, 0.0432895, 0.043398514, 0.043505597, 0.043614528, 0.043726542, 0.043837611, 0.043945597, 0.044052583, 0.044160611, 0.044272611, 0.04437961...</msg>
<status status="PASS" starttime="20201112 09:44:51.822" endtime="20201112 09:44:51.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.863" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 09:44:51.860" endtime="20201112 09:44:51.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.868" level="INFO">VALUE: [9.811099999999795e-05, 9.777799999999975e-05, 9.83609999999982e-05, 9.804199999999957e-05, 9.856899999999974e-05, 9.8028e-05, 9.816599999999676e-05, 9.78059999999989e-05, 9.808399999999828e-05, 9.820799999999547e-05, 9.808300000000575e-05, 9.790199999999694e-05, 9.850000000000136e-05, 9.830499999999992e-05, 9.809699999999838e-05, 9.851400000000093e-05, 9.8028e-05, 9.819499999999537e-05, 9.815299999999666e-05, 9.827800000000025e-05, 9.831899999999949e-05, 9.815200000000412e-05, 9.852700000000103e-05, 9.78609999999977e-05, 9.83059999999994e-05, 9.8028e-05, 9.797200000000172e-05, 9.772200000000147e-05, 9.773700000000052e-05, 9.795900000000163e-05, 9.870799999999597e-05, 9.851400000000093e-05, 9.78609999999977e-05, 9.799999999999393e-05, 9.770799999999497e-05, 9.787500000000421e-05, 9.8028e-05, 9.79860000000013e-05, 9.844499999999562e-05, 9.829199999999982e-05, 9.837500000000471e-05, 9.844500000000256e-05, 9.845800000000265e-05, 9.856899999999974e-05, 9.772200000000147e-05, 9.856899999999974e-05, 9.833299999999906e-05, 9.790300000000335e-05, 9.811199999999742e-05, 9.775000000000061e-05]</msg>
<status status="PASS" starttime="20201112 09:44:51.865" endtime="20201112 09:44:51.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.853" endtime="20201112 09:44:51.872"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.878" endtime="20201112 09:44:51.881"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:51.886" endtime="20201112 09:44:51.908"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.882" endtime="20201112 09:44:51.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.873" endtime="20201112 09:44:51.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.356" endtime="20201112 09:44:51.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.354" endtime="20201112 09:44:51.912"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.936" endtime="20201112 09:44:51.960"></status>
</kw>
<msg timestamp="20201112 09:44:51.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:51.933" endtime="20201112 09:44:51.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:51.963" endtime="20201112 09:44:51.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.970" endtime="20201112 09:44:51.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.925" endtime="20201112 09:44:51.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.919" endtime="20201112 09:44:51.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.994" endtime="20201112 09:44:52.333"></status>
</kw>
<msg timestamp="20201112 09:44:52.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042907861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043007403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:51.990" endtime="20201112 09:44:52.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042907861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043007403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:52.342" endtime="20201112 09:44:52.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.362" endtime="20201112 09:44:52.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.983" endtime="20201112 09:44:52.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.978" endtime="20201112 09:44:52.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:52.381" level="INFO">${RESULT} = [{'time': 0.043007403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.954200000000107e-05, 'source_diff': 9.954200000000107e-05}, {'time': 0.043113403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:52.372" endtime="20201112 09:44:52.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:52.412" level="INFO">${ACCURACY} = {'time': [0.043007403, 0.043113403, 0.043220417, 0.043331444, 0.043437444, 0.043551472, 0.043653472, 0.043757472, 0.043859569, 0.0439625, 0.044070528, 0.044178528, 0.044289569, 0.044401556, 0.04451555...</msg>
<status status="PASS" starttime="20201112 09:44:52.383" endtime="20201112 09:44:52.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.423" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 09:44:52.421" endtime="20201112 09:44:52.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.429" level="INFO">VALUE: [9.954200000000107e-05, 9.876400000000118e-05, 9.865299999999716e-05, 9.920799999999647e-05, 9.895799999999622e-05, 9.906900000000024e-05, 9.873600000000204e-05, 9.884699999999913e-05, 9.922200000000297e-05, 9.890300000000435e-05, 9.891699999999698e-05, 9.911099999999895e-05, 9.922200000000297e-05, 9.873700000000152e-05, 9.96809999999973e-05, 9.959699999999988e-05, 9.908299999999981e-05, 9.931999999999996e-05, 9.915199999999819e-05, 9.952799999999457e-05, 9.933300000000006e-05, 9.887499999999827e-05, 9.90139999999945e-05, 9.941600000000494e-05, 9.898599999999536e-05, 9.944400000000408e-05, 9.913799999999862e-05, 9.95410000000016e-05, 9.916699999999723e-05, 9.900000000000186e-05, 9.926400000000168e-05, 9.92359999999956e-05, 9.93060000000004e-05, 9.931900000000049e-05, 9.881999999999946e-05, 9.957000000000021e-05, 9.888899999999784e-05, 9.93060000000004e-05, 9.955500000000117e-05, 9.96660000000052e-05, 9.890299999999741e-05, 9.93609999999992e-05, 9.918100000000374e-05, 9.881999999999946e-05, 9.913900000000503e-05, 9.961099999999945e-05, 9.904200000000057e-05, 9.877700000000128e-05, 9.944399999999715e-05, 9.917999999999733e-05]</msg>
<status status="PASS" starttime="20201112 09:44:52.426" endtime="20201112 09:44:52.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.414" endtime="20201112 09:44:52.432"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.439" endtime="20201112 09:44:52.442"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:52.447" endtime="20201112 09:44:52.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.443" endtime="20201112 09:44:52.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.434" endtime="20201112 09:44:52.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.915" endtime="20201112 09:44:52.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.913" endtime="20201112 09:44:52.473"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.497" endtime="20201112 09:44:52.519"></status>
</kw>
<msg timestamp="20201112 09:44:52.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:52.493" endtime="20201112 09:44:52.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:52.523" endtime="20201112 09:44:52.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.529" endtime="20201112 09:44:52.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.486" endtime="20201112 09:44:52.535"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.480" endtime="20201112 09:44:52.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.553" endtime="20201112 09:44:52.890"></status>
</kw>
<msg timestamp="20201112 09:44:52.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042840778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042941292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:52.550" endtime="20201112 09:44:52.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042840778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042941292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:52.899" endtime="20201112 09:44:52.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.918" endtime="20201112 09:44:52.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.543" endtime="20201112 09:44:52.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.538" endtime="20201112 09:44:52.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:52.937" level="INFO">${RESULT} = [{'time': 0.042941292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000100513999999996, 'source_diff': 0.000100513999999996}, {'time': 0.043054306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:52.928" endtime="20201112 09:44:52.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:52.968" level="INFO">${ACCURACY} = {'time': [0.042941292, 0.043054306, 0.043169319, 0.043278347, 0.043380361, 0.043490347, 0.043598375, 0.043705431, 0.043818389, 0.043925403, 0.044028417, 0.044139417, 0.044251431, 0.044362458, 0.044472...</msg>
<status status="PASS" starttime="20201112 09:44:52.939" endtime="20201112 09:44:52.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.979" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 09:44:52.977" endtime="20201112 09:44:52.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.985" level="INFO">VALUE: [0.000100513999999996, 0.00010033400000000053, 0.00010027699999999584, 0.00010031900000000149, 9.979200000000132e-05, 0.00010047199999999729, 9.975000000000261e-05, 0.00010004200000000157, 9.993099999999755e-05, 0.00010019500000000431, 9.993099999999755e-05, 0.00010043099999999805, 9.99730000000032e-05, 0.00010044399999999815, 0.00010048599999999686, 0.00010011099999999995, 0.00010009700000000038, 9.994399999999765e-05, 9.999999999999593e-05, 9.999999999999593e-05, 0.00010045899999999719, 0.00010036199999999967, 0.00010065299999999916, 9.980499999999448e-05, 9.975000000000261e-05, 9.975000000000261e-05, 0.00010067999999999883, 0.00010031900000000149, 0.00010000000000000286, 0.00010011099999999995, 9.994500000000406e-05, 0.00010027800000000225, 0.00010004200000000157, 9.98479999999996e-05, 0.00010062500000000002, 0.00010031900000000149, 0.00010042999999999858, 0.00010022199999999704, 0.00010043100000000499, 0.00010055600000000164, 0.00010013899999999909, 0.00010057000000000121, 0.00010066699999999873, 0.00010000000000000286, 0.00010068100000000524, 9.983300000000056e-05, 0.00010011099999999995, 0.00010016599999999876, 0.00010055500000000217, 0.00010059700000000088]</msg>
<status status="PASS" starttime="20201112 09:44:52.981" endtime="20201112 09:44:52.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.969" endtime="20201112 09:44:52.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.995" endtime="20201112 09:44:52.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:53.003" endtime="20201112 09:44:53.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.998" endtime="20201112 09:44:53.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.990" endtime="20201112 09:44:53.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.476" endtime="20201112 09:44:53.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.474" endtime="20201112 09:44:53.029"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.052" endtime="20201112 09:44:53.075"></status>
</kw>
<msg timestamp="20201112 09:44:53.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:53.049" endtime="20201112 09:44:53.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:53.078" endtime="20201112 09:44:53.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.085" endtime="20201112 09:44:53.089"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.042" endtime="20201112 09:44:53.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.036" endtime="20201112 09:44:53.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.109" endtime="20201112 09:44:53.446"></status>
</kw>
<msg timestamp="20201112 09:44:53.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042939764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043041361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:53.105" endtime="20201112 09:44:53.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042939764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043041361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:53.455" endtime="20201112 09:44:53.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.473" endtime="20201112 09:44:53.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.098" endtime="20201112 09:44:53.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.093" endtime="20201112 09:44:53.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:53.495" level="INFO">${RESULT} = [{'time': 0.043041361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010159700000000188, 'source_diff': 0.00010159700000000188}, {'time': 0.043150361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:53.486" endtime="20201112 09:44:53.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:53.525" level="INFO">${ACCURACY} = {'time': [0.043041361, 0.043150361, 0.043253389, 0.043361403, 0.043467417, 0.043580417, 0.043693444, 0.043797431, 0.043908458, 0.044015472, 0.0441275, 0.044235486, 0.0443425, 0.044450514, 0.044559514,...</msg>
<status status="PASS" starttime="20201112 09:44:53.497" endtime="20201112 09:44:53.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.537" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 09:44:53.534" endtime="20201112 09:44:53.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.542" level="INFO">VALUE: [0.00010159700000000188, 0.00010113900000000009, 0.00010076400000000318, 0.00010076400000000318, 0.00010087500000000027, 0.00010138900000000034, 0.00010138800000000087, 0.00010091699999999898, 0.00010167999999999983, 0.00010124999999999718, 0.00010104200000000257, 0.00010076399999999625, 0.00010144399999999915, 0.00010076400000000318, 0.00010112500000000052, 0.00010107000000000171, 0.0001015559999999957, 0.00010157000000000221, 0.00010113800000000062, 0.00010161100000000145, 0.0001010559999999952, 0.00010111100000000095, 0.00010072200000000447, 0.00010136099999999426, 0.00010127799999999632, 0.0001015280000000035, 0.00010127799999999632, 0.00010170799999999897, 0.00010113900000000009, 0.00010166599999999332, 0.00010109700000000138, 0.00010088899999999984, 0.00010124999999999718, 0.00010084700000000113, 0.00010159700000000188, 0.00010161100000000145, 0.00010137500000000077, 0.00010137500000000077, 0.00010151400000000393, 0.00010163899999999365, 0.00010131900000000249, 0.0001007359999999971, 0.00010076399999999625, 0.00010162500000000102, 0.00010156999999999528, 0.00010111099999999401, 0.0001013610000000012, 0.0001016809999999993, 0.00010129100000000335, 0.00010163900000000059]</msg>
<status status="PASS" starttime="20201112 09:44:53.539" endtime="20201112 09:44:53.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.527" endtime="20201112 09:44:53.549"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.556" endtime="20201112 09:44:53.559"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:53.565" endtime="20201112 09:44:53.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.560" endtime="20201112 09:44:53.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.551" endtime="20201112 09:44:53.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.031" endtime="20201112 09:44:53.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.030" endtime="20201112 09:44:53.591"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.614" endtime="20201112 09:44:53.637"></status>
</kw>
<msg timestamp="20201112 09:44:53.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:53.610" endtime="20201112 09:44:53.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:53.641" endtime="20201112 09:44:53.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.647" endtime="20201112 09:44:53.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.603" endtime="20201112 09:44:53.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.597" endtime="20201112 09:44:53.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.671" endtime="20201112 09:44:54.008"></status>
</kw>
<msg timestamp="20201112 09:44:54.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043106819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043209264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:53.668" endtime="20201112 09:44:54.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043106819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043209264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:54.018" endtime="20201112 09:44:54.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.037" endtime="20201112 09:44:54.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.660" endtime="20201112 09:44:54.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.656" endtime="20201112 09:44:54.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:54.056" level="INFO">${RESULT} = [{'time': 0.043209264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010244499999999962, 'source_diff': 0.00010244499999999962}, {'time': 0.043315278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:54.047" endtime="20201112 09:44:54.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:54.086" level="INFO">${ACCURACY} = {'time': [0.043209264, 0.043315278, 0.043423264, 0.043535306, 0.043649292, 0.043763306, 0.043867333, 0.043982347, 0.044088347, 0.044205361, 0.044316375, 0.044430375, 0.044539403, 0.044649403, 0.044764...</msg>
<status status="PASS" starttime="20201112 09:44:54.058" endtime="20201112 09:44:54.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.097" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 09:44:54.095" endtime="20201112 09:44:54.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.103" level="INFO">VALUE: [0.00010244499999999962, 0.00010254199999999714, 0.00010222200000000597, 0.00010250000000000536, 0.00010259800000000235, 0.00010259800000000235, 0.00010200000000000486, 0.00010258299999999637, 0.00010231899999999655, 0.00010227799999999732, 0.00010231899999999655, 0.00010212500000000152, 0.00010172199999999854, 0.00010231999999999603, 0.0001017359999999981, 0.00010248599999999886, 0.00010256900000000374, 0.00010268000000000083, 0.00010255499999999723, 0.00010209700000000238, 0.00010173600000000504, 0.00010252799999999757, 0.00010174999999999768, 0.00010259700000000288, 0.00010230599999999646, 0.00010208400000000228, 0.00010191699999999998, 0.00010177700000000428, 0.00010180499999999648, 0.00010212499999999458, 0.00010244400000000015, 0.00010215300000000066, 0.00010270899999999944, 0.00010176399999999725, 0.00010187500000000127, 0.0001025280000000045, 0.00010229099999999741, 0.00010254099999999766, 0.0001026940000000004, 0.00010208299999999587, 0.0001017359999999981, 0.00010187500000000127, 0.00010181900000000299, 0.00010233400000000253, 0.00010204199999999664, 0.00010215300000000066, 0.00010255600000000364, 0.00010194399999999965, 0.00010191699999999998, 0.00010274999999999868]</msg>
<status status="PASS" starttime="20201112 09:44:54.100" endtime="20201112 09:44:54.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.088" endtime="20201112 09:44:54.106"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.113" endtime="20201112 09:44:54.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:54.121" endtime="20201112 09:44:54.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.117" endtime="20201112 09:44:54.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.108" endtime="20201112 09:44:54.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.593" endtime="20201112 09:44:54.147"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.592" endtime="20201112 09:44:54.147"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.170" endtime="20201112 09:44:54.193"></status>
</kw>
<msg timestamp="20201112 09:44:54.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:54.167" endtime="20201112 09:44:54.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:54.197" endtime="20201112 09:44:54.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.203" endtime="20201112 09:44:54.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.160" endtime="20201112 09:44:54.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.154" endtime="20201112 09:44:54.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.227" endtime="20201112 09:44:54.543"></status>
</kw>
<msg timestamp="20201112 09:44:54.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043003917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043107444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:54.224" endtime="20201112 09:44:54.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043003917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043107444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:54.548" endtime="20201112 09:44:54.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.556" endtime="20201112 09:44:54.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.216" endtime="20201112 09:44:54.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.212" endtime="20201112 09:44:54.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:54.565" level="INFO">${RESULT} = [{'time': 0.043107444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010352699999999909, 'source_diff': 0.00010352699999999909}, {'time': 0.043220389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:54.561" endtime="20201112 09:44:54.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:54.578" level="INFO">${ACCURACY} = {'time': [0.043107444, 0.043220389, 0.043328389, 0.043445403, 0.043556417, 0.043664431, 0.043782444, 0.043892514, 0.044007472, 0.044118472, 0.044232556, 0.044338514, 0.044451514, 0.044567528, 0.044681...</msg>
<status status="PASS" starttime="20201112 09:44:54.566" endtime="20201112 09:44:54.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.584" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 09:44:54.583" endtime="20201112 09:44:54.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.586" level="INFO">VALUE: [0.00010352699999999909, 0.0001036810000000013, 0.0001036810000000013, 0.00010290300000000141, 0.00010294500000000012, 0.00010369499999999393, 0.00010301299999999902, 0.00010345800000000072, 0.0001031940000000009, 0.00010355499999999823, 0.00010370900000000044, 0.00010358300000000431, 0.00010306999999999678, 0.0001027359999999991, 0.00010365299999999522, 0.00010294400000000065, 0.00010311100000000295, 0.00010354200000000507, 0.00010327799999999832, 0.00010302799999999807, 0.00010359699999999694, 0.00010280599999999696, 0.00010338900000000234, 0.00010334799999999617, 0.00010326399999999875, 0.00010280599999999696, 0.00010287500000000227, 0.00010351400000000593, 0.00010272199999999954, 0.00010299999999999893, 0.00010347200000000029, 0.00010279199999999739, 0.000103513999999999, 0.0001027359999999991, 0.00010290300000000141, 0.0001028610000000027, 0.00010348699999999933, 0.0001036940000000014, 0.00010355499999999823, 0.00010337499999999583, 0.00010326399999999875, 0.00010286099999999576, 0.00010286099999999576, 0.00010297199999999979, 0.00010272299999999901, 0.00010341700000000148, 0.00010290299999999447, 0.0001029860000000063, 0.00010313800000000262, 0.00010302699999999859]</msg>
<status status="PASS" starttime="20201112 09:44:54.585" endtime="20201112 09:44:54.587"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.579" endtime="20201112 09:44:54.588"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.591" endtime="20201112 09:44:54.592"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:54.595" endtime="20201112 09:44:54.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.593" endtime="20201112 09:44:54.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.589" endtime="20201112 09:44:54.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.149" endtime="20201112 09:44:54.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.148" endtime="20201112 09:44:54.616"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.627" endtime="20201112 09:44:54.648"></status>
</kw>
<msg timestamp="20201112 09:44:54.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:54.626" endtime="20201112 09:44:54.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:54.650" endtime="20201112 09:44:54.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.653" endtime="20201112 09:44:54.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.622" endtime="20201112 09:44:54.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.620" endtime="20201112 09:44:54.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.664" endtime="20201112 09:44:54.949"></status>
</kw>
<msg timestamp="20201112 09:44:54.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025547139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025651417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:54.662" endtime="20201112 09:44:54.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025547139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025651417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:54.953" endtime="20201112 09:44:54.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.961" endtime="20201112 09:44:54.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.659" endtime="20201112 09:44:54.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.657" endtime="20201112 09:44:54.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:54.970" level="INFO">${RESULT} = [{'time': 0.025651417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010427799999999932, 'source_diff': 0.00010427799999999932}, {'time': 0.025762431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:54.966" endtime="20201112 09:44:54.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:54.983" level="INFO">${ACCURACY} = {'time': [0.025651417, 0.025762431, 0.025871431, 0.025986444, 0.026096444, 0.026203458, 0.026315486, 0.0264255, 0.026544514, 0.026651514, 0.026760569, 0.026871528, 0.026988542, 0.027101556, 0.02720858...</msg>
<status status="PASS" starttime="20201112 09:44:54.971" endtime="20201112 09:44:54.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.989" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 09:44:54.988" endtime="20201112 09:44:54.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.991" level="INFO">VALUE: [0.00010427799999999932, 0.00010440299999999944, 0.00010407000000000124, 0.00010401300000000002, 0.00010444399999999868, 0.00010455499999999923, 0.00010412500000000005, 0.0001040420000000021, 0.00010470800000000197, 0.0001037360000000001, 0.00010390200000000294, 0.00010436099999999726, 0.0001037360000000001, 0.00010411199999999995, 0.00010436100000000073, 0.00010431899999999855, 0.0001046940000000024, 0.00010447199999999782, 0.00010387500000000327, 0.00010436100000000073, 0.00010407000000000124, 0.0001043200000000015, 0.00010433400000000106, 0.00010415299999999919, 0.00010452700000000009, 0.00010377799999999882, 0.00010447200000000129, 0.00010441699999999901, 0.0001043750000000003, 0.00010437499999999683, 0.0001040559999999982, 0.00010398600000000036, 0.00010443099999999858, 0.00010426399999999975, 0.00010406900000000177, 0.00010427699999999984, 0.00010466599999999979, 0.00010455499999999923, 0.0001042360000000006, 0.0001037360000000001, 0.00010427799999999932, 0.00010411100000000048, 0.00010463800000000065, 0.000104514, 0.00010447299999999729, 0.0001045689999999988, 0.00010420800000000147, 0.00010391699999999851, 0.00010430499999999898, 0.0001040689999999983]</msg>
<status status="PASS" starttime="20201112 09:44:54.990" endtime="20201112 09:44:54.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.984" endtime="20201112 09:44:54.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.996" endtime="20201112 09:44:54.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:55.000" endtime="20201112 09:44:55.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.998" endtime="20201112 09:44:55.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.994" endtime="20201112 09:44:55.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.617" endtime="20201112 09:44:55.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.617" endtime="20201112 09:44:55.022"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.033" endtime="20201112 09:44:55.052"></status>
</kw>
<msg timestamp="20201112 09:44:55.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:55.031" endtime="20201112 09:44:55.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:55.054" endtime="20201112 09:44:55.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.057" endtime="20201112 09:44:55.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.028" endtime="20201112 09:44:55.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.025" endtime="20201112 09:44:55.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.068" endtime="20201112 09:44:55.391"></status>
</kw>
<msg timestamp="20201112 09:44:55.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025154861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025260222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:55.067" endtime="20201112 09:44:55.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025154861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025260222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:55.401" endtime="20201112 09:44:55.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.419" endtime="20201112 09:44:55.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.063" endtime="20201112 09:44:55.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.061" endtime="20201112 09:44:55.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:55.440" level="INFO">${RESULT} = [{'time': 0.025260222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010536099999999826, 'source_diff': 0.00010536099999999826}, {'time': 0.025369208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:55.431" endtime="20201112 09:44:55.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:55.470" level="INFO">${ACCURACY} = {'time': [0.025260222, 0.025369208, 0.025478236, 0.025595292, 0.025715236, 0.02583325, 0.025951264, 0.026069278, 0.026188292, 0.026308306, 0.026426319, 0.026545333, 0.026665347, 0.026774431, 0.0268943...</msg>
<status status="PASS" starttime="20201112 09:44:55.442" endtime="20201112 09:44:55.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.481" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 09:44:55.479" endtime="20201112 09:44:55.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.487" level="INFO">VALUE: [0.00010536099999999826, 0.00010552700000000109, 0.00010491700000000298, 0.00010544499999999915, 0.00010522199999999857, 0.00010534699999999869, 0.00010493100000000255, 0.00010534700000000216, 0.00010509799999999792, 0.00010548700000000133, 0.00010494399999999918, 0.00010488900000000037, 0.00010569399999999993, 0.00010559800000000188, 0.00010569399999999993, 0.00010480600000000242, 0.00010493100000000255, 0.000105514000000001, 0.00010569399999999993, 0.0001056949999999994, 0.000105207999999999, 0.00010502700000000059, 0.0001053339999999986, 0.00010543000000000011, 0.00010569399999999993, 0.00010477799999999982, 0.00010568099999999983, 0.00010552800000000057, 0.00010477799999999982, 0.00010561199999999799, 0.00010548600000000186, 0.00010548600000000186, 0.00010565299999999722, 0.0001047360000000011, 0.00010569399999999993, 0.00010483299999999862, 0.00010556999999999928, 0.00010552800000000057, 0.00010479199999999939, 0.00010566700000000026, 0.00010555500000000023, 0.00010498600000000136, 0.00010568000000000036, 0.00010568000000000036, 0.0001047360000000011, 0.0001047360000000011, 0.00010557000000000274, 0.00010512499999999758, 0.00010541700000000001, 0.00010534799999999817]</msg>
<status status="PASS" starttime="20201112 09:44:55.484" endtime="20201112 09:44:55.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.472" endtime="20201112 09:44:55.490"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.496" endtime="20201112 09:44:55.499"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:55.505" endtime="20201112 09:44:55.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.501" endtime="20201112 09:44:55.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.492" endtime="20201112 09:44:55.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.023" endtime="20201112 09:44:55.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.022" endtime="20201112 09:44:55.531"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.554" endtime="20201112 09:44:55.577"></status>
</kw>
<msg timestamp="20201112 09:44:55.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:55.551" endtime="20201112 09:44:55.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:55.580" endtime="20201112 09:44:55.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.586" endtime="20201112 09:44:55.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.543" endtime="20201112 09:44:55.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.538" endtime="20201112 09:44:55.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.611" endtime="20201112 09:44:55.948"></status>
</kw>
<msg timestamp="20201112 09:44:55.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042604236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042710514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:55.607" endtime="20201112 09:44:55.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042604236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042710514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:55.957" endtime="20201112 09:44:55.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.975" endtime="20201112 09:44:55.981"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.600" endtime="20201112 09:44:55.982"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.595" endtime="20201112 09:44:55.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:55.994" level="INFO">${RESULT} = [{'time': 0.042710514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010627800000000132, 'source_diff': 0.00010627800000000132}, {'time': 0.042822514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:55.986" endtime="20201112 09:44:55.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:56.025" level="INFO">${ACCURACY} = {'time': [0.042710514, 0.042822514, 0.042935542, 0.043044556, 0.043158542, 0.043278569, 0.043394653, 0.043510583, 0.043630597, 0.043739611, 0.043852625, 0.043962639, 0.044073653, 0.044184667, 0.044298...</msg>
<status status="PASS" starttime="20201112 09:44:55.996" endtime="20201112 09:44:56.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.036" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 09:44:56.034" endtime="20201112 09:44:56.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.041" level="INFO">VALUE: [0.00010627800000000132, 0.00010602800000000107, 0.00010619500000000337, 0.00010595899999999575, 0.00010570900000000244, 0.00010611100000000595, 0.00010634699999999969, 0.00010584699999999919, 0.00010608299999999987, 0.00010594399999999671, 0.00010577800000000082, 0.00010611099999999901, 0.00010606999999999978, 0.00010669499999999693, 0.000106514000000002, 0.00010619500000000337, 0.00010633300000000012, 0.00010630499999999404, 0.00010626400000000175, 0.000106514000000002, 0.00010612499999999858, 0.00010579200000000039, 0.00010630600000000046, 0.00010634699999999969, 0.00010654200000000114, 0.00010588900000000484, 0.00010615199999999825, 0.00010629100000000141, 0.00010648599999999592, 0.00010672299999999607, 0.00010613899999999815, 0.00010669499999999693, 0.00010594500000000312, 0.00010655599999999377, 0.00010658399999999985, 0.00010573700000000158, 0.0001065690000000008, 0.00010629100000000141, 0.0001067219999999966, 0.00010605500000000073, 0.00010627799999999438, 0.0001065560000000007, 0.00010590300000000441, 0.00010579200000000039, 0.00010572300000000201, 0.00010611200000000542, 0.00010645799999999678, 0.00010659699999999994, 0.00010611099999999901, 0.00010647200000000329]</msg>
<status status="PASS" starttime="20201112 09:44:56.038" endtime="20201112 09:44:56.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.027" endtime="20201112 09:44:56.045"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.051" endtime="20201112 09:44:56.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:56.060" endtime="20201112 09:44:56.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.055" endtime="20201112 09:44:56.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.046" endtime="20201112 09:44:56.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.533" endtime="20201112 09:44:56.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.532" endtime="20201112 09:44:56.086"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.109" endtime="20201112 09:44:56.132"></status>
</kw>
<msg timestamp="20201112 09:44:56.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:56.106" endtime="20201112 09:44:56.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:56.136" endtime="20201112 09:44:56.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.142" endtime="20201112 09:44:56.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.098" endtime="20201112 09:44:56.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.092" endtime="20201112 09:44:56.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.166" endtime="20201112 09:44:56.504"></status>
</kw>
<msg timestamp="20201112 09:44:56.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042929153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043036208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:56.163" endtime="20201112 09:44:56.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042929153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043036208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:56.513" endtime="20201112 09:44:56.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.532" endtime="20201112 09:44:56.537"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.155" endtime="20201112 09:44:56.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.151" endtime="20201112 09:44:56.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:56.551" level="INFO">${RESULT} = [{'time': 0.043036208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010705500000000173, 'source_diff': 0.00010705500000000173}, {'time': 0.043151208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:56.542" endtime="20201112 09:44:56.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:56.581" level="INFO">${ACCURACY} = {'time': [0.043036208, 0.043151208, 0.043267222, 0.043379236, 0.043493264, 0.043607264, 0.043724278, 0.043834292, 0.043951347, 0.044069319, 0.044191389, 0.044307347, 0.044422347, 0.044533375, 0.044647...</msg>
<status status="PASS" starttime="20201112 09:44:56.553" endtime="20201112 09:44:56.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.592" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 09:44:56.590" endtime="20201112 09:44:56.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.598" level="INFO">VALUE: [0.00010705500000000173, 0.00010670800000000397, 0.00010687499999999933, 0.00010767999999999889, 0.00010755599999999477, 0.0001073889999999994, 0.00010707000000000078, 0.00010756999999999434, 0.00010731900000000155, 0.00010722200000000404, 0.00010712499999999958, 0.00010711100000000001, 0.00010713899999999915, 0.00010691699999999804, 0.00010738900000000634, 0.00010691699999999804, 0.00010682000000000053, 0.00010679199999999445, 0.00010673700000000258, 0.00010752699999999615, 0.0001068889999999989, 0.00010751399999999606, 0.00010675000000000268, 0.00010754200000000214, 0.00010731900000000155, 0.00010740300000000591, 0.00010677700000000234, 0.00010684799999999967, 0.00010691599999999857, 0.00010680500000000148, 0.00010729100000000241, 0.00010747200000000429, 0.0001068889999999989, 0.0001068889999999989, 0.00010694499999999718, 0.0001073340000000006, 0.00010770900000000444, 0.00010718099999999786, 0.00010693099999999761, 0.00010681900000000105, 0.00010675000000000268, 0.00010741700000000548, 0.00010730500000000198, 0.00010711100000000001, 0.00010752800000000257, 0.00010690300000000541, 0.00010732000000000103, 0.00010752799999999563, 0.00010727799999999538, 0.00010706899999999436]</msg>
<status status="PASS" starttime="20201112 09:44:56.595" endtime="20201112 09:44:56.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.583" endtime="20201112 09:44:56.601"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.607" endtime="20201112 09:44:56.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:56.616" endtime="20201112 09:44:56.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.612" endtime="20201112 09:44:56.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.603" endtime="20201112 09:44:56.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.088" endtime="20201112 09:44:56.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.087" endtime="20201112 09:44:56.642"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.665" endtime="20201112 09:44:56.688"></status>
</kw>
<msg timestamp="20201112 09:44:56.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:56.662" endtime="20201112 09:44:56.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:56.692" endtime="20201112 09:44:56.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.698" endtime="20201112 09:44:56.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.654" endtime="20201112 09:44:56.704"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.648" endtime="20201112 09:44:56.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.722" endtime="20201112 09:44:57.058"></status>
</kw>
<msg timestamp="20201112 09:44:57.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042778556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042886944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:56.718" endtime="20201112 09:44:57.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042778556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042886944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:57.067" endtime="20201112 09:44:57.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.086" endtime="20201112 09:44:57.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.711" endtime="20201112 09:44:57.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.706" endtime="20201112 09:44:57.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:57.105" level="INFO">${RESULT} = [{'time': 0.042886944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010838800000000093, 'source_diff': 0.00010838800000000093}, {'time': 0.043003958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:57.096" endtime="20201112 09:44:57.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:57.135" level="INFO">${ACCURACY} = {'time': [0.042886944, 0.043003958, 0.043116972, 0.043239, 0.043352028, 0.043467014, 0.043584028, 0.043706056, 0.043825056, 0.043938056, 0.044058069, 0.044173097, 0.044291097, 0.044411111, 0.044531167...</msg>
<status status="PASS" starttime="20201112 09:44:57.107" endtime="20201112 09:44:57.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.146" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 09:44:57.144" endtime="20201112 09:44:57.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.151" level="INFO">VALUE: [0.00010838800000000093, 0.000107902, 0.00010827800000000332, 0.00010812500000000058, 0.000108514000000004, 0.00010798599999999742, 0.00010831999999999509, 0.00010791699999999904, 0.00010782000000000153, 0.00010848700000000433, 0.00010838800000000093, 0.00010862500000000108, 0.00010869399999999946, 0.00010859700000000194, 0.0001082360000000046, 0.00010851399999999706, 0.00010797300000000426, 0.0001078340000000011, 0.00010786200000000024, 0.00010861100000000151, 0.0001082219999999981, 0.0001080549999999958, 0.00010841699999999954, 0.00010837500000000083, 0.00010870799999999903, 0.00010815300000000666, 0.00010869500000000587, 0.00010807000000000178, 0.00010780599999999502, 0.00010780500000000248, 0.00010826399999999681, 0.00010826400000000375, 0.0001077219999999976, 0.00010852799999999663, 0.00010772200000000454, 0.00010808299999999493, 0.00010794499999999818, 0.00010795899999999775, 0.00010854100000000366, 0.00010788800000000043, 0.00010815200000000025, 0.00010847199999999835, 0.00010854200000000314, 0.00010866699999999979, 0.00010791699999999904, 0.00010841699999999954, 0.00010811100000000101, 0.00010836099999999432, 0.00010848700000000433, 0.00010799999999999699]</msg>
<status status="PASS" starttime="20201112 09:44:57.148" endtime="20201112 09:44:57.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.137" endtime="20201112 09:44:57.155"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.161" endtime="20201112 09:44:57.164"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:57.170" endtime="20201112 09:44:57.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.165" endtime="20201112 09:44:57.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.157" endtime="20201112 09:44:57.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.644" endtime="20201112 09:44:57.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.643" endtime="20201112 09:44:57.196"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.219" endtime="20201112 09:44:57.242"></status>
</kw>
<msg timestamp="20201112 09:44:57.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:57.216" endtime="20201112 09:44:57.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:57.246" endtime="20201112 09:44:57.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.252" endtime="20201112 09:44:57.256"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.208" endtime="20201112 09:44:57.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.202" endtime="20201112 09:44:57.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.276" endtime="20201112 09:44:57.611"></status>
</kw>
<msg timestamp="20201112 09:44:57.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042861306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042970486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:57.273" endtime="20201112 09:44:57.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042861306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042970486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:57.620" endtime="20201112 09:44:57.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.639" endtime="20201112 09:44:57.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.265" endtime="20201112 09:44:57.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.261" endtime="20201112 09:44:57.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:57.660" level="INFO">${RESULT} = [{'time': 0.042970486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010918000000000039, 'source_diff': 0.00010918000000000039}, {'time': 0.0430845, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:57.651" endtime="20201112 09:44:57.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:57.690" level="INFO">${ACCURACY} = {'time': [0.042970486, 0.0430845, 0.043207514, 0.043320542, 0.043436556, 0.043557569, 0.043678569, 0.043798583, 0.043914597, 0.044034597, 0.044149611, 0.044263625, 0.044377639, 0.044493653, 0.04461366...</msg>
<status status="PASS" starttime="20201112 09:44:57.662" endtime="20201112 09:44:57.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.702" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 09:44:57.699" endtime="20201112 09:44:57.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.707" level="INFO">VALUE: [0.00010918000000000039, 0.00010905599999999627, 0.00010932000000000303, 0.00010952799999999763, 0.00010940300000000097, 0.00010897199999999885, 0.00010876299999999783, 0.00010902700000000459, 0.00010877799999999688, 0.0001090140000000045, 0.00010899999999999799, 0.00010968100000000036, 0.00010884700000000219, 0.00010877800000000382, 0.00010965300000000122, 0.00010947300000000576, 0.00010898599999999842, 0.00010915200000000125, 0.00010902799999999713, 0.00010948599999999892, 0.00010936100000000226, 0.00010912500000000158, 0.00010962499999999514, 0.00010936100000000226, 0.00010947299999999882, 0.00010922299999999857, 0.00010961100000000251, 0.00010965300000000122, 0.00010931900000000355, 0.00010881899999999611, 0.00010893100000000655, 0.00010962500000000208, 0.00010908400000000235, 0.00010929099999999747, 0.0001090690000000033, 0.00010877799999999688, 0.00010869399999999946, 0.00010931900000000355, 0.00010918000000000039, 0.00010883299999999568, 0.00010912500000000158, 0.00010932000000000303, 0.00010877799999999688, 0.00010898700000000483, 0.00010877800000000382, 0.00010898600000000536, 0.00010901399999999756, 0.0001093890000000014, 0.00010877799999999688, 0.00010918000000000039]</msg>
<status status="PASS" starttime="20201112 09:44:57.704" endtime="20201112 09:44:57.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.692" endtime="20201112 09:44:57.710"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.717" endtime="20201112 09:44:57.719"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:57.725" endtime="20201112 09:44:57.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.721" endtime="20201112 09:44:57.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.712" endtime="20201112 09:44:57.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.198" endtime="20201112 09:44:57.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.197" endtime="20201112 09:44:57.751"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.774" endtime="20201112 09:44:57.797"></status>
</kw>
<msg timestamp="20201112 09:44:57.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:57.771" endtime="20201112 09:44:57.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:57.801" endtime="20201112 09:44:57.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.807" endtime="20201112 09:44:57.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.763" endtime="20201112 09:44:57.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.758" endtime="20201112 09:44:57.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.831" endtime="20201112 09:44:58.169"></status>
</kw>
<msg timestamp="20201112 09:44:58.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0427595, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042869597, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:44:57.828" endtime="20201112 09:44:58.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0427595, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042869597, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:44:58.178" endtime="20201112 09:44:58.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.197" endtime="20201112 09:44:58.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.820" endtime="20201112 09:44:58.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.816" endtime="20201112 09:44:58.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:58.216" level="INFO">${RESULT} = [{'time': 0.042869597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011009700000000344, 'source_diff': 0.00011009700000000344}, {'time': 0.042982625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:58.207" endtime="20201112 09:44:58.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:58.246" level="INFO">${ACCURACY} = {'time': [0.042869597, 0.042982625, 0.043102653, 0.043224639, 0.043349653, 0.043473681, 0.043592681, 0.043708681, 0.04382475, 0.043942764, 0.044058736, 0.04417775, 0.044298778, 0.044420764, 0.04453879...</msg>
<status status="PASS" starttime="20201112 09:44:58.218" endtime="20201112 09:44:58.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.257" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 09:44:58.255" endtime="20201112 09:44:58.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.263" level="INFO">VALUE: [0.00011009700000000344, 0.00011013900000000215, 0.00011008399999999641, 0.00011019500000000043, 0.00011068100000000136, 0.00010984800000000267, 0.00011009800000000292, 0.00011001399999999856, 0.00010980600000000396, 0.00010998599999999942, 0.0001100419999999977, 0.00011031900000000455, 0.00011044499999999374, 0.00011059700000000394, 0.00011016700000000129, 0.00011002799999999813, 0.00011052799999999863, 0.00011036099999999632, 0.00011015199999999531, 0.00011051399999999906, 0.00011002800000000507, 0.00010983300000000362, 0.00011058299999999743, 0.00011011100000000301, 0.00011048599999999992, 0.00011068100000000136, 0.00011018100000000086, 0.00011024999999999924, 0.00011023599999999967, 0.00010986099999999582, 0.00011065300000000222, 0.00011023599999999967, 0.0001102220000000001, 0.00011022299999999957, 0.00010997299999999932, 0.00010991700000000104, 0.00011052699999999915, 0.00010973599999999917, 0.00011036099999999632, 0.00011056899999999786, 0.00010981899999999711, 0.0001102220000000001, 0.00011027800000000532, 0.00010986099999999582, 0.00011029099999999847, 0.00011052699999999915, 0.00010994400000000071, 0.000109902000000002, 0.0001097219999999996, 0.00011027799999999838]</msg>
<status status="PASS" starttime="20201112 09:44:58.260" endtime="20201112 09:44:58.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.248" endtime="20201112 09:44:58.266"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.273" endtime="20201112 09:44:58.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:58.281" endtime="20201112 09:44:58.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.277" endtime="20201112 09:44:58.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.268" endtime="20201112 09:44:58.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.753" endtime="20201112 09:44:58.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.752" endtime="20201112 09:44:58.307"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.330" endtime="20201112 09:44:58.353"></status>
</kw>
<msg timestamp="20201112 09:44:58.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:58.327" endtime="20201112 09:44:58.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:58.357" endtime="20201112 09:44:58.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.363" endtime="20201112 09:44:58.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.319" endtime="20201112 09:44:58.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.314" endtime="20201112 09:44:58.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.387" endtime="20201112 09:44:58.707"></status>
</kw>
<msg timestamp="20201112 09:44:58.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042674444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042785611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:58.384" endtime="20201112 09:44:58.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042674444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042785611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:58.716" endtime="20201112 09:44:58.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.735" endtime="20201112 09:44:58.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.377" endtime="20201112 09:44:58.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.372" endtime="20201112 09:44:58.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:58.754" level="INFO">${RESULT} = [{'time': 0.042785611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011116700000000229, 'source_diff': 0.00011116700000000229}, {'time': 0.042901542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:58.745" endtime="20201112 09:44:58.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:58.784" level="INFO">${ACCURACY} = {'time': [0.042785611, 0.042901542, 0.043016583, 0.043134569, 0.043258583, 0.043375597, 0.043488681, 0.043601625, 0.043717639, 0.043841653, 0.043964667, 0.044080667, 0.044195681, 0.044319694, 0.044437...</msg>
<status status="PASS" starttime="20201112 09:44:58.756" endtime="20201112 09:44:58.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.795" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 09:44:58.793" endtime="20201112 09:44:58.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.801" level="INFO">VALUE: [0.00011116700000000229, 0.00011126399999999981, 0.0001109299999999952, 0.0001107769999999994, 0.00011155500000000623, 0.00011102799999999913, 0.0001108340000000041, 0.00011098600000000042, 0.00011087500000000333, 0.00011095900000000075, 0.00011098600000000042, 0.00011140299999999603, 0.00011090300000000247, 0.00011136099999999732, 0.00011120800000000153, 0.00011101399999999956, 0.00011165300000000322, 0.00011133300000000512, 0.00011169499999999499, 0.00011148600000000092, 0.00011132000000000503, 0.0001115560000000057, 0.00011074999999999974, 0.00011115200000000325, 0.00011141599999999613, 0.00011119400000000196, 0.00011077800000000582, 0.00011150000000000049, 0.00011105599999999827, 0.00011147200000000135, 0.00011126399999999981, 0.00011106999999999784, 0.00011076299999999983, 0.00011166599999999638, 0.00011077799999999888, 0.00011161100000000451, 0.0001112220000000011, 0.00011122300000000057, 0.00011080599999999802, 0.00011102800000000607, 0.00011079200000000539, 0.00011140300000000297, 0.00011131900000000555, 0.00011083299999999768, 0.00011126399999999981, 0.00011159700000000494, 0.0001112220000000011, 0.00011098600000000042, 0.00011106999999999784, 0.00011151400000000006]</msg>
<status status="PASS" starttime="20201112 09:44:58.798" endtime="20201112 09:44:58.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.786" endtime="20201112 09:44:58.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.815" endtime="20201112 09:44:58.817"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:58.823" endtime="20201112 09:44:58.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.819" endtime="20201112 09:44:58.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.810" endtime="20201112 09:44:58.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.309" endtime="20201112 09:44:58.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.308" endtime="20201112 09:44:58.849"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.872" endtime="20201112 09:44:58.895"></status>
</kw>
<msg timestamp="20201112 09:44:58.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:58.869" endtime="20201112 09:44:58.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:58.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:58.899" endtime="20201112 09:44:58.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.905" endtime="20201112 09:44:58.909"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.862" endtime="20201112 09:44:58.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.856" endtime="20201112 09:44:58.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:58.929" endtime="20201112 09:44:59.266"></status>
</kw>
<msg timestamp="20201112 09:44:59.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042750014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042862056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:58.926" endtime="20201112 09:44:59.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042750014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042862056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:59.275" endtime="20201112 09:44:59.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.293" endtime="20201112 09:44:59.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.918" endtime="20201112 09:44:59.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.914" endtime="20201112 09:44:59.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:59.312" level="INFO">${RESULT} = [{'time': 0.042862056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001120419999999997, 'source_diff': 0.0001120419999999997}, {'time': 0.042980069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:59.304" endtime="20201112 09:44:59.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:59.343" level="INFO">${ACCURACY} = {'time': [0.042862056, 0.042980069, 0.043102139, 0.043229111, 0.043352097, 0.043468111, 0.043593125, 0.043718153, 0.043842167, 0.043961181, 0.044088181, 0.044203194, 0.044325208, 0.044449222, 0.044566...</msg>
<status status="PASS" starttime="20201112 09:44:59.315" endtime="20201112 09:44:59.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.354" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 09:44:59.351" endtime="20201112 09:44:59.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.359" level="INFO">VALUE: [0.0001120419999999997, 0.00011223600000000167, 0.0001119169999999961, 0.00011208299999999893, 0.00011241599999999713, 0.00011231899999999961, 0.0001125690000000068, 0.00011194500000000218, 0.00011198600000000142, 0.00011241700000000354, 0.00011248699999999445, 0.00011191600000000357, 0.00011247199999999541, 0.00011261099999999857, 0.00011227800000000038, 0.00011256899999999986, 0.00011190300000000347, 0.00011184700000000519, 0.00011195899999999481, 0.00011194399999999577, 0.000111902000000004, 0.0001123890000000044, 0.00011168000000000289, 0.00011216700000000329, 0.00011269399999999652, 0.00011261099999999857, 0.0001120969999999985, 0.00011251399999999412, 0.00011177799999999988, 0.00011194500000000218, 0.00011187499999999739, 0.00011240199999999756, 0.00011200000000000099, 0.00011213899999999721, 0.00011255599999999977, 0.00011219499999999549, 0.00011190299999999653, 0.00011209800000000492, 0.00011256999999999934, 0.00011254100000000072, 0.00011193000000000314, 0.00011218100000000286, 0.00011190300000000347, 0.00011248600000000192, 0.0001120419999999997, 0.00011256999999999934, 0.00011255599999999977, 0.0001120549999999998, 0.00011226400000000081, 0.0001118890000000039]</msg>
<status status="PASS" starttime="20201112 09:44:59.356" endtime="20201112 09:44:59.361"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.344" endtime="20201112 09:44:59.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.369" endtime="20201112 09:44:59.372"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:59.378" endtime="20201112 09:44:59.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.373" endtime="20201112 09:44:59.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.364" endtime="20201112 09:44:59.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.851" endtime="20201112 09:44:59.403"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:58.850" endtime="20201112 09:44:59.404"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.427" endtime="20201112 09:44:59.450"></status>
</kw>
<msg timestamp="20201112 09:44:59.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:59.423" endtime="20201112 09:44:59.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:59.454" endtime="20201112 09:44:59.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.460" endtime="20201112 09:44:59.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.416" endtime="20201112 09:44:59.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.410" endtime="20201112 09:44:59.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.485" endtime="20201112 09:44:59.821"></status>
</kw>
<msg timestamp="20201112 09:44:59.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042652028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042765208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:59.482" endtime="20201112 09:44:59.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042652028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042765208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:59.830" endtime="20201112 09:44:59.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.848" endtime="20201112 09:44:59.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.475" endtime="20201112 09:44:59.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.469" endtime="20201112 09:44:59.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:59.869" level="INFO">${RESULT} = [{'time': 0.042765208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011317999999999745, 'source_diff': 0.00011317999999999745}, {'time': 0.042893222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:59.861" endtime="20201112 09:44:59.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:59.899" level="INFO">${ACCURACY} = {'time': [0.042765208, 0.042893222, 0.043019222, 0.043138236, 0.04326425, 0.043386264, 0.043511278, 0.043633306, 0.043756306, 0.043879347, 0.044000347, 0.044125347, 0.044240361, 0.044368389, 0.0444854...</msg>
<status status="PASS" starttime="20201112 09:44:59.872" endtime="20201112 09:44:59.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.911" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 09:44:59.908" endtime="20201112 09:44:59.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.916" level="INFO">VALUE: [0.00011317999999999745, 0.0001128749999999984, 0.00011334699999999975, 0.00011344400000000421, 0.00011272199999999566, 0.00011332000000000009, 0.00011319500000000343, 0.0001129169999999971, 0.00011326400000000181, 0.00011330500000000104, 0.00011315300000000472, 0.00011340300000000497, 0.00011275000000000174, 0.00011329200000000095, 0.0001128749999999984, 0.000113597, 0.00011283299999999968, 0.0001128619999999983, 0.00011280500000000054, 0.0001135420000000012, 0.00011363899999999871, 0.00011281900000000011, 0.00011336099999999932, 0.00011372199999999666, 0.00011344499999999674, 0.0001127220000000026, 0.00011348600000000292, 0.0001128619999999983, 0.00011275000000000174, 0.00011281900000000011, 0.00011356900000000086, 0.00011361099999999957, 0.00011306899999999342, 0.000113209000000003, 0.00011299999999999505, 0.00011369500000000393, 0.00011293099999999667, 0.00011273599999999523, 0.00011365199999999881, 0.0001135550000000013, 0.00011317999999999745, 0.00011323600000000267, 0.00011313899999999821, 0.00011318099999999692, 0.00011365299999999828, 0.00011266700000000379, 0.00011315299999999778, 0.00011313800000000568, 0.00011347199999999641, 0.00011351400000000206]</msg>
<status status="PASS" starttime="20201112 09:44:59.913" endtime="20201112 09:44:59.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.901" endtime="20201112 09:44:59.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.926" endtime="20201112 09:44:59.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:59.934" endtime="20201112 09:44:59.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.930" endtime="20201112 09:44:59.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.921" endtime="20201112 09:44:59.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.406" endtime="20201112 09:44:59.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.404" endtime="20201112 09:44:59.960"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.984" endtime="20201112 09:45:00.007"></status>
</kw>
<msg timestamp="20201112 09:45:00.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:59.980" endtime="20201112 09:45:00.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:00.011" endtime="20201112 09:45:00.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.017" endtime="20201112 09:45:00.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.973" endtime="20201112 09:45:00.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.967" endtime="20201112 09:45:00.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.041" endtime="20201112 09:45:00.379"></status>
</kw>
<msg timestamp="20201112 09:45:00.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042977375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043091, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:45:00.038" endtime="20201112 09:45:00.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042977375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043091, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:45:00.388" endtime="20201112 09:45:00.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.406" endtime="20201112 09:45:00.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.030" endtime="20201112 09:45:00.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.025" endtime="20201112 09:45:00.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:00.426" level="INFO">${RESULT} = [{'time': 0.043091, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011362499999999914, 'source_diff': 0.00011362499999999914}, {'time': 0.043215014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:45:00.417" endtime="20201112 09:45:00.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:45:00.456" level="INFO">${ACCURACY} = {'time': [0.043091, 0.043215014, 0.043341028, 0.043468042, 0.043590056, 0.043714069, 0.043833083, 0.043952111, 0.044078125, 0.044203139, 0.044332139, 0.044455153, 0.044584167, 0.044711181, 0.044837194...</msg>
<status status="PASS" starttime="20201112 09:45:00.428" endtime="20201112 09:45:00.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.467" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 09:45:00.465" endtime="20201112 09:45:00.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.473" level="INFO">VALUE: [0.00011362499999999914, 0.00011383300000000068, 0.00011440299999999903, 0.00011436100000000032, 0.00011394500000000418, 0.00011469399999999852, 0.00011467999999999895, 0.00011429200000000195, 0.00011441700000000554, 0.00011383300000000068, 0.00011405600000000127, 0.00011431999999999415, 0.00011423600000000367, 0.00011434800000000023, 0.00011419399999999802, 0.00011440299999999903, 0.00011440299999999903, 0.0001140550000000018, 0.0001137499999999958, 0.00011394499999999724, 0.00011452800000000263, 0.00011457000000000134, 0.00011427699999999597, 0.00011412499999999964, 0.00011373600000000317, 0.00011394399999999777, 0.00011412500000000658, 0.00011436100000000032, 0.00011452800000000263, 0.00011418099999999792, 0.0001137220000000036, 0.00011427799999999544, 0.00011444499999999774, 0.00011416599999999888, 0.0001139299999999982, 0.00011449999999999655, 0.00011377799999999494, 0.00011386099999999982, 0.00011394500000000418, 0.00011425000000000324, 0.00011462500000000014, 0.00011375000000000274, 0.00011434800000000023, 0.00011412499999999964, 0.00011411100000000007, 0.0001139299999999982, 0.0001137499999999958, 0.00011420799999999759, 0.00011411100000000007, 0.0001138749999999994]</msg>
<status status="PASS" starttime="20201112 09:45:00.469" endtime="20201112 09:45:00.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.458" endtime="20201112 09:45:00.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.483" endtime="20201112 09:45:00.486"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:00.492" endtime="20201112 09:45:00.514"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.487" endtime="20201112 09:45:00.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.478" endtime="20201112 09:45:00.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.963" endtime="20201112 09:45:00.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.961" endtime="20201112 09:45:00.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.230" endtime="20201112 09:45:00.519"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:00.530" endtime="20201112 09:45:00.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.525" endtime="20201112 09:45:00.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.523" endtime="20201112 09:45:00.554"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 09:44:07.093" endtime="20201112 09:45:00.555" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:43:11.476" endtime="20201112 09:45:00.565"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.706" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:45:00.722" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:45:02.676" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:45:00.702" endtime="20201112 09:45:02.677"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.683" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:45:02.679" endtime="20201112 09:45:02.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.699" endtime="20201112 09:45:02.685"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:02.690" endtime="20201112 09:45:03.099"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.687" endtime="20201112 09:45:03.101"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:03.131" endtime="20201112 09:45:03.165"></status>
</kw>
<msg timestamp="20201112 09:45:03.166" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f10...</msg>
<status status="PASS" starttime="20201112 09:45:03.127" endtime="20201112 09:45:03.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:03.173" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f10...</msg>
<status status="PASS" starttime="20201112 09:45:03.169" endtime="20201112 09:45:03.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:45:03.179" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:45:03.175" endtime="20201112 09:45:03.180"></status>
</kw>
<status status="FAIL" starttime="20201112 09:45:03.121" endtime="20201112 09:45:03.182"></status>
</kw>
<status status="FAIL" starttime="20201112 09:45:03.115" endtime="20201112 09:45:03.184"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.113" endtime="20201112 09:45:03.185"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:45:03.193" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:45:03.191" endtime="20201112 09:45:03.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.186" endtime="20201112 09:45:03.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.111" endtime="20201112 09:45:03.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.109" endtime="20201112 09:45:03.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:03.197" endtime="20201112 09:45:03.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.106" endtime="20201112 09:45:03.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:03.204" endtime="20201112 09:45:03.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.103" endtime="20201112 09:45:03.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.696" endtime="20201112 09:45:03.210"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:03.225" endtime="20201112 09:45:03.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.221" endtime="20201112 09:45:03.250"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:03.283" endtime="20201112 09:45:03.308"></status>
</kw>
<msg timestamp="20201112 09:45:03.309" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:03.280" endtime="20201112 09:45:03.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:03.316" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:45:03.311" endtime="20201112 09:45:03.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:45:03.322" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:45:03.318" endtime="20201112 09:45:03.323"></status>
</kw>
<status status="FAIL" starttime="20201112 09:45:03.273" endtime="20201112 09:45:03.325"></status>
</kw>
<status status="FAIL" starttime="20201112 09:45:03.266" endtime="20201112 09:45:03.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.264" endtime="20201112 09:45:03.327"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:45:03.335" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:45:03.334" endtime="20201112 09:45:03.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.329" endtime="20201112 09:45:03.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.262" endtime="20201112 09:45:03.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.260" endtime="20201112 09:45:03.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:03.339" endtime="20201112 09:45:03.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.256" endtime="20201112 09:45:03.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.251" endtime="20201112 09:45:03.345"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.218" endtime="20201112 09:45:03.346"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:03.354" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:03.376" endtime="20201112 09:45:05.484"></status>
</kw>
<msg timestamp="20201112 09:45:05.486" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 784185, 'wakeups': [794193, 804194, 814194, 824194, 834194, 844194, 85...</msg>
<status status="PASS" starttime="20201112 09:45:03.372" endtime="20201112 09:45:05.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.493" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 784185, 'wakeups': [794193, 804194, 814194, 824194, 834194, 844194, 85...</msg>
<status status="PASS" starttime="20201112 09:45:05.488" endtime="20201112 09:45:05.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:05.496" endtime="20201112 09:45:05.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.365" endtime="20201112 09:45:05.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.359" endtime="20201112 09:45:05.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:05.507" level="INFO">${RESULT} = {'wakeups': [794193, 804194, 814194, 824194, 834194, 844194, 854194, 864194, 874194, 884194, 894194, 904194, 914194, 924194, 934194, 944194, 954194, 964194, 974194, 984194, 994194, 1004194, 1014194, 1...</msg>
<status status="PASS" starttime="20201112 09:45:05.504" endtime="20201112 09:45:05.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.512" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:05.511" endtime="20201112 09:45:05.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.515" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:05.513" endtime="20201112 09:45:05.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.508" endtime="20201112 09:45:05.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.520" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:45:05.519" endtime="20201112 09:45:05.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.523" level="INFO">VALUE: 784185</msg>
<status status="PASS" starttime="20201112 09:45:05.522" endtime="20201112 09:45:05.523"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.516" endtime="20201112 09:45:05.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.529" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:05.527" endtime="20201112 09:45:05.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.531" level="INFO">VALUE: [794193, 804194, 814194, 824194, 834194, 844194, 854194, 864194, 874194, 884194, 894194, 904194, 914194, 924194, 934194, 944194, 954194, 964194, 974194, 984194, 994194, 1004194, 1014194, 1024194, 1034194, 1044194, 1054194, 1064194, 1074194, 1084194, 1094194, 1104194, 1114194, 1124194, 1134194, 1144194, 1154194, 1164194, 1174194, 1184194, 1194194, 1204194, 1214194, 1224194, 1234194, 1244194, 1254194, 1264194, 1274194, 1284194, 1294194, 1304194, 1314194, 1324194, 1334194, 1344194, 1354194, 1364194, 1374194, 1384194, 1394194, 1404194, 1414194, 1424194, 1434194, 1444194, 1454194, 1464194, 1474194, 1484194, 1494194, 1504194, 1514194, 1524194, 1534194, 1544194, 1554194, 1564194, 1574194, 1584194, 1594194, 1604194, 1614194, 1624194, 1634194, 1644194, 1654194, 1664194, 1674194, 1684194, 1694194, 1704194, 1714194, 1724194, 1734194, 1744194, 1754194, 1764194, 1774194, 1784194]</msg>
<status status="PASS" starttime="20201112 09:45:05.530" endtime="20201112 09:45:05.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.524" endtime="20201112 09:45:05.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:05.540" endtime="20201112 09:45:05.865"></status>
</kw>
<msg timestamp="20201112 09:45:05.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.142492986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.152502556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:05.538" endtime="20201112 09:45:05.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.142492986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.152502556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:05.874" endtime="20201112 09:45:05.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:05.891" endtime="20201112 09:45:05.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.535" endtime="20201112 09:45:05.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.533" endtime="20201112 09:45:05.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:05.955" level="INFO">${RESULT} = {'time': [0.142492986, 0.152502556, 0.162504708, 0.172505722, 0.182506875, 0.192507889, 0.202509028, 0.212510042, 0.222511194, 0.232512236, 0.242513361, 0.252514361, 0.262515528, 0.272516528, 0.282517...</msg>
<status status="PASS" starttime="20201112 09:45:05.900" endtime="20201112 09:45:05.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.967" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:45:05.964" endtime="20201112 09:45:05.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.971" level="INFO">VALUE: 0.142492986</msg>
<status status="PASS" starttime="20201112 09:45:05.969" endtime="20201112 09:45:05.972"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.957" endtime="20201112 09:45:05.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.985" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:05.983" endtime="20201112 09:45:05.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.990" level="INFO">VALUE: [0.152502556, 0.162504708, 0.172505722, 0.182506875, 0.192507889, 0.202509028, 0.212510042, 0.222511194, 0.232512236, 0.242513361, 0.252514361, 0.262515528, 0.272516528, 0.282517681, 0.292518681, 0.302519833, 0.312520847, 0.322521986, 0.332523014, 0.342524153, 0.352525167, 0.362526347, 0.372527319, 0.382528472, 0.392529486, 0.402530625, 0.412531653, 0.422532806, 0.432533861, 0.442534944, 0.452535972, 0.462537111, 0.472538125, 0.482539306, 0.492540278, 0.502541431, 0.512542444, 0.522543597, 0.532544611, 0.542545792, 0.552546764, 0.562547917, 0.572548972, 0.582550083, 0.592551111, 0.602552292, 0.612553264, 0.622554458, 0.632555417, 0.642556569, 0.652557597, 0.662558722, 0.67255975, 0.682560903, 0.692561903, 0.702563097, 0.712564069, 0.722565236, 0.732566222, 0.742567375, 0.752568389, 0.762569542, 0.772570556, 0.782571708, 0.792572722, 0.802573875, 0.812574875, 0.822576056, 0.832577028, 0.842578181, 0.852579194, 0.862580347, 0.872581375, 0.8825825, 0.892583514, 0.902584694, 0.912585694, 0.922586833, 0.932587847, 0.942589, 0.95259, 0.962591153, 0.972592181, 0.982593319, 0.992594319, 1.002595472, 1.012596486, 1.022597639, 1.032598667, 1.042599819, 1.052600819, 1.062601958, 1.072602972, 1.082604125, 1.092605153, 1.102606278, 1.112607292, 1.122608444, 1.132609472, 1.142610611] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:05.987" endtime="20201112 09:45:05.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.975" endtime="20201112 09:45:05.992"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:05.999" endtime="20201112 09:45:06.002"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:06.008" endtime="20201112 09:45:06.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.003" endtime="20201112 09:45:06.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.994" endtime="20201112 09:45:06.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.356" endtime="20201112 09:45:06.033"></status>
</kw>
<msg timestamp="20201112 09:45:06.034" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:06.055" endtime="20201112 09:45:08.164"></status>
</kw>
<msg timestamp="20201112 09:45:08.165" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3461882, 'wakeups': [3471890, 3481891, 3491891, 3501891, 3511891, 3521...</msg>
<status status="PASS" starttime="20201112 09:45:06.052" endtime="20201112 09:45:08.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:08.172" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3461882, 'wakeups': [3471890, 3481891, 3491891, 3501891, 3511891, 3521...</msg>
<status status="PASS" starttime="20201112 09:45:08.168" endtime="20201112 09:45:08.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:08.175" endtime="20201112 09:45:08.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.044" endtime="20201112 09:45:08.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.039" endtime="20201112 09:45:08.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:08.188" level="INFO">${RESULT} = {'wakeups': [3471890, 3481891, 3491891, 3501891, 3511891, 3521891, 3531891, 3541891, 3551891, 3561891, 3571891, 3581891, 3591891, 3601891, 3611891, 3621891, 3631891, 3641891, 3651891, 3661891, 3671891...</msg>
<status status="PASS" starttime="20201112 09:45:08.183" endtime="20201112 09:45:08.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:08.198" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:08.196" endtime="20201112 09:45:08.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:08.203" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:08.201" endtime="20201112 09:45:08.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:08.190" endtime="20201112 09:45:08.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:08.217" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:45:08.214" endtime="20201112 09:45:08.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:08.221" level="INFO">VALUE: 3461882</msg>
<status status="PASS" starttime="20201112 09:45:08.219" endtime="20201112 09:45:08.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:08.207" endtime="20201112 09:45:08.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:08.235" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:08.232" endtime="20201112 09:45:08.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:08.240" level="INFO">VALUE: [3471890, 3481891, 3491891, 3501891, 3511891, 3521891, 3531891, 3541891, 3551891, 3561891, 3571891, 3581891, 3591891, 3601891, 3611891, 3621891, 3631891, 3641891, 3651891, 3661891, 3671891, 3681891, 3691891, 3701891, 3711891, 3721891, 3731891, 3741891, 3751891, 3761891, 3771891, 3781891, 3791891, 3801891, 3811891, 3821891, 3831891, 3841891, 3851891, 3861891, 3871891, 3881891, 3891891, 3901891, 3911891, 3921891, 3931891, 3941891, 3951891, 3961891, 3971891, 3981891, 3991891, 4001891, 4011891, 4021891, 4031891, 4041891, 4051891, 4061891, 4071891, 4081891, 4091891, 4101891, 4111891, 4121891, 4131891, 4141891, 4151891, 4161891, 4171891, 4181891, 4191891, 4201891, 4211891, 4221891, 4231891, 4241891, 4251891, 4261891, 4271891, 4281891, 4291891, 4301891, 4311891, 4321891, 4331891, 4341891, 4351891, 4361891, 4371891, 4381891, 4391891, 4401891, 4411891, 4421891, 4431891, 4441891, 4451891, 4461891]</msg>
<status status="PASS" starttime="20201112 09:45:08.238" endtime="20201112 09:45:08.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:08.225" endtime="20201112 09:45:08.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:08.262" endtime="20201112 09:45:08.607"></status>
</kw>
<msg timestamp="20201112 09:45:08.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038835486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048845403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:08.258" endtime="20201112 09:45:08.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:08.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038835486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048845403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:08.616" endtime="20201112 09:45:08.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:08.634" endtime="20201112 09:45:08.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:08.251" endtime="20201112 09:45:08.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:08.244" endtime="20201112 09:45:08.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:08.695" level="INFO">${RESULT} = {'time': [0.038835486, 0.048845403, 0.058847542, 0.068848569, 0.078849708, 0.088850708, 0.098851875, 0.108852875, 0.118854028, 0.128855042, 0.138856194, 0.148857194, 0.158858389, 0.168859361, 0.178860...</msg>
<status status="PASS" starttime="20201112 09:45:08.642" endtime="20201112 09:45:08.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:08.706" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:45:08.703" endtime="20201112 09:45:08.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:08.710" level="INFO">VALUE: 0.038835486</msg>
<status status="PASS" starttime="20201112 09:45:08.708" endtime="20201112 09:45:08.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:08.697" endtime="20201112 09:45:08.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:08.718" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:08.717" endtime="20201112 09:45:08.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:08.721" level="INFO">VALUE: [0.048845403, 0.058847542, 0.068848569, 0.078849708, 0.088850708, 0.098851875, 0.108852875, 0.118854028, 0.128855042, 0.138856194, 0.148857194, 0.158858389, 0.168859361, 0.1788605, 0.188861514, 0.198862653, 0.208863667, 0.218864819, 0.228865833, 0.238866972, 0.248867986, 0.258869139, 0.268870153, 0.278871292, 0.288872306, 0.298873472, 0.308874472, 0.318875611, 0.328876625, 0.338877778, 0.348878792, 0.358879931, 0.368880944, 0.378882097, 0.388883111, 0.398884264, 0.408885278, 0.418886417, 0.428887431, 0.438888583, 0.448889653, 0.458890736, 0.46889175, 0.478892903, 0.488893903, 0.498895097, 0.508896153, 0.518897222, 0.528898264, 0.538899389, 0.548900403, 0.558901542, 0.568902556, 0.578903722, 0.588904722, 0.598905861, 0.608906875, 0.618908028, 0.628909042, 0.638910194, 0.648911208, 0.658912347, 0.668913375, 0.678914514, 0.688915528, 0.698916681, 0.708917681, 0.718918847, 0.728919847, 0.738921, 0.748922014, 0.758923208, 0.768924167, 0.778925333, 0.788926347, 0.798927486, 0.808928528, 0.818929653, 0.828930653, 0.838931806, 0.848932833, 0.858933986, 0.868935, 0.878936125, 0.888937153, 0.898938306, 0.908939319, 0.918940458, 0.928941458, 0.938942611, 0.948943639, 0.958944792, 0.968945792, 0.978946958, 0.988947958, 0.998949097, 1.008950111, 1.018951264, 1.028952278, 1.038953431] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:08.719" endtime="20201112 09:45:08.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:08.713" endtime="20201112 09:45:08.722"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:08.726" endtime="20201112 09:45:08.727"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:08.731" endtime="20201112 09:45:08.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:08.728" endtime="20201112 09:45:08.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:08.723" endtime="20201112 09:45:08.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.035" endtime="20201112 09:45:08.752"></status>
</kw>
<msg timestamp="20201112 09:45:08.752" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:08.763" endtime="20201112 09:45:10.870"></status>
</kw>
<msg timestamp="20201112 09:45:10.871" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6168187, 'wakeups': [6178195, 6188196, 6198196, 6208196, 6218196, 6228...</msg>
<status status="PASS" starttime="20201112 09:45:08.761" endtime="20201112 09:45:10.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:10.878" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6168187, 'wakeups': [6178195, 6188196, 6198196, 6208196, 6218196, 6228...</msg>
<status status="PASS" starttime="20201112 09:45:10.873" endtime="20201112 09:45:10.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:10.881" endtime="20201112 09:45:10.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:08.758" endtime="20201112 09:45:10.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:08.755" endtime="20201112 09:45:10.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:10.894" level="INFO">${RESULT} = {'wakeups': [6178195, 6188196, 6198196, 6208196, 6218196, 6228196, 6238196, 6248196, 6258196, 6268196, 6278196, 6288196, 6298196, 6308196, 6318196, 6328196, 6338196, 6348196, 6358196, 6368196, 6378196...</msg>
<status status="PASS" starttime="20201112 09:45:10.889" endtime="20201112 09:45:10.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:10.904" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:10.902" endtime="20201112 09:45:10.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:10.909" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:10.906" endtime="20201112 09:45:10.909"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:10.896" endtime="20201112 09:45:10.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:10.921" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:45:10.919" endtime="20201112 09:45:10.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:10.926" level="INFO">VALUE: 6168187</msg>
<status status="PASS" starttime="20201112 09:45:10.924" endtime="20201112 09:45:10.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:10.912" endtime="20201112 09:45:10.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:10.938" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:10.936" endtime="20201112 09:45:10.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:10.943" level="INFO">VALUE: [6178195, 6188196, 6198196, 6208196, 6218196, 6228196, 6238196, 6248196, 6258196, 6268196, 6278196, 6288196, 6298196, 6308196, 6318196, 6328196, 6338196, 6348196, 6358196, 6368196, 6378196, 6388196, 6398196, 6408196, 6418196, 6428196, 6438196, 6448196, 6458196, 6468196, 6478196, 6488196, 6498196, 6508196, 6518196, 6528196, 6538196, 6548196, 6558196, 6568196, 6578196, 6588196, 6598196, 6608196, 6618196, 6628196, 6638196, 6648196, 6658196, 6668196, 6678196, 6688196, 6698196, 6708196, 6718196, 6728196, 6738196, 6748196, 6758196, 6768196, 6778196, 6788196, 6798196, 6808196, 6818196, 6828196, 6838196, 6848196, 6858196, 6868196, 6878196, 6888196, 6898196, 6908196, 6918196, 6928196, 6938196, 6948196, 6958196, 6968196, 6978196, 6988196, 6998196, 7008196, 7018196, 7028196, 7038196, 7048196, 7058196, 7068196, 7078196, 7088196, 7098196, 7108196, 7118196, 7128196, 7138196, 7148196, 7158196, 7168196]</msg>
<status status="PASS" starttime="20201112 09:45:10.941" endtime="20201112 09:45:10.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:10.930" endtime="20201112 09:45:10.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:10.968" endtime="20201112 09:45:11.311"></status>
</kw>
<msg timestamp="20201112 09:45:11.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022785167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03279475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:45:10.965" endtime="20201112 09:45:11.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:11.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022785167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03279475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:45:11.319" endtime="20201112 09:45:11.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:11.336" endtime="20201112 09:45:11.340"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:10.957" endtime="20201112 09:45:11.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:10.947" endtime="20201112 09:45:11.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:11.400" level="INFO">${RESULT} = {'time': [0.022785167, 0.03279475, 0.042796917, 0.052797958, 0.062799069, 0.072800083, 0.082801236, 0.092802264, 0.102803403, 0.112804431, 0.122805569, 0.132806625, 0.142807736, 0.152808764, 0.1628099...</msg>
<status status="PASS" starttime="20201112 09:45:11.345" endtime="20201112 09:45:11.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:11.411" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:45:11.409" endtime="20201112 09:45:11.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:11.416" level="INFO">VALUE: 0.022785167</msg>
<status status="PASS" starttime="20201112 09:45:11.414" endtime="20201112 09:45:11.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:11.402" endtime="20201112 09:45:11.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:11.429" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:11.427" endtime="20201112 09:45:11.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:11.434" level="INFO">VALUE: [0.03279475, 0.042796917, 0.052797958, 0.062799069, 0.072800083, 0.082801236, 0.092802264, 0.102803403, 0.112804431, 0.122805569, 0.132806625, 0.142807736, 0.152808764, 0.162809917, 0.172810917, 0.182812083, 0.192813139, 0.20281425, 0.212815278, 0.222816403, 0.232817417, 0.242818569, 0.252819583, 0.26282075, 0.27282175, 0.282822931, 0.292823931, 0.302825069, 0.312826083, 0.322827236, 0.332828319, 0.342829417, 0.352830417, 0.362831597, 0.372832583, 0.382833778, 0.39283475, 0.402835903, 0.412836931, 0.422838083, 0.432839111, 0.442840333, 0.452841264, 0.462842417, 0.472843431, 0.482844583, 0.492845611, 0.502846778, 0.512847764, 0.522848917, 0.532849931, 0.542851111, 0.552852097, 0.56285325, 0.572854278, 0.582855431, 0.592856431, 0.602857667, 0.612858611, 0.622859764, 0.632860792, 0.642861931, 0.652862958, 0.662864139, 0.672865153, 0.682866264, 0.692867278, 0.702868431, 0.712869444, 0.722870597, 0.732871625, 0.742872778, 0.752873792, 0.762875028, 0.772875958, 0.782877111, 0.792878125, 0.802879278, 0.812880292, 0.822881444, 0.832882458, 0.842883653, 0.852884625, 0.862885778, 0.872886792, 0.882887958, 0.892888972, 0.902890125, 0.912891139, 0.922892333, 0.932893306, 0.942894472, 0.952895486, 0.962896625, 0.972897653, 0.982898806, 0.992899806, 1.002900972, 1.012901972, 1.022903125] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:11.432" endtime="20201112 09:45:11.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:11.419" endtime="20201112 09:45:11.437"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:11.443" endtime="20201112 09:45:11.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:11.452" endtime="20201112 09:45:11.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:11.447" endtime="20201112 09:45:11.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:11.439" endtime="20201112 09:45:11.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:08.753" endtime="20201112 09:45:11.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.351" endtime="20201112 09:45:11.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.349" endtime="20201112 09:45:11.478"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:11.484" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:11.506" endtime="20201112 09:45:13.613"></status>
</kw>
<msg timestamp="20201112 09:45:13.614" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8912877, 'wakeups': [8922892, 8932892, 8942892, 8952892, 8962892, 8972...</msg>
<status status="PASS" starttime="20201112 09:45:11.502" endtime="20201112 09:45:13.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:13.617" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8912877, 'wakeups': [8922892, 8932892, 8942892, 8952892, 8962892, 8972...</msg>
<status status="PASS" starttime="20201112 09:45:13.615" endtime="20201112 09:45:13.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:13.618" endtime="20201112 09:45:13.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:11.495" endtime="20201112 09:45:13.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:11.489" endtime="20201112 09:45:13.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:13.625" level="INFO">${RESULT} = {'wakeups': [8922892, 8932892, 8942892, 8952892, 8962892, 8972892, 8982892, 8992892, 9002892, 9012892, 9022892, 9032892, 9042892, 9052892, 9062892, 9072892, 9082892, 9092892, 9102892, 9112892, 9122892...</msg>
<status status="PASS" starttime="20201112 09:45:13.622" endtime="20201112 09:45:13.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:13.630" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:13.628" endtime="20201112 09:45:13.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:13.632" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:13.631" endtime="20201112 09:45:13.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.625" endtime="20201112 09:45:13.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:13.638" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:45:13.637" endtime="20201112 09:45:13.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:13.640" level="INFO">VALUE: 8912877</msg>
<status status="PASS" starttime="20201112 09:45:13.639" endtime="20201112 09:45:13.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.634" endtime="20201112 09:45:13.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:13.647" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:13.646" endtime="20201112 09:45:13.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:13.649" level="INFO">VALUE: [8922892, 8932892, 8942892, 8952892, 8962892, 8972892, 8982892, 8992892, 9002892, 9012892, 9022892, 9032892, 9042892, 9052892, 9062892, 9072892, 9082892, 9092892, 9102892, 9112892, 9122892, 9132892, 9142892, 9152892, 9162892, 9172892, 9182892, 9192892, 9202892, 9212892, 9222892, 9232892, 9242892, 9252892, 9262892, 9272892, 9282892, 9292892, 9302892, 9312892, 9322892, 9332892, 9342892, 9352892, 9362892, 9372892, 9382892, 9392892, 9402892, 9412892, 9422892, 9432892, 9442892, 9452892, 9462892, 9472892, 9482892, 9492892, 9502892, 9512892, 9522892, 9532892, 9542892, 9552892, 9562892, 9572892, 9582892, 9592892, 9602892, 9612892, 9622892, 9632892, 9642892, 9652892, 9662892, 9672892, 9682892, 9692892, 9702892, 9712892, 9722892, 9732892, 9742892, 9752892, 9762892, 9772892, 9782892, 9792892, 9802892, 9812892, 9822892, 9832892, 9842892, 9852892, 9862892, 9872892, 9882892, 9892892, 9902892, 9912892]</msg>
<status status="PASS" starttime="20201112 09:45:13.648" endtime="20201112 09:45:13.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.642" endtime="20201112 09:45:13.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:13.658" endtime="20201112 09:45:13.951"></status>
</kw>
<msg timestamp="20201112 09:45:13.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045551444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055568569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:13.657" endtime="20201112 09:45:13.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:13.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045551444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055568569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:13.955" endtime="20201112 09:45:13.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:13.962" endtime="20201112 09:45:13.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.653" endtime="20201112 09:45:13.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.651" endtime="20201112 09:45:13.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:14.017" level="INFO">${RESULT} = {'time': [0.045551444, 0.055568569, 0.065569667, 0.075570681, 0.085571819, 0.095572847, 0.105574, 0.115574986, 0.125576139, 0.135577153, 0.145578306, 0.155579389, 0.165580528, 0.175581486, 0.185582639...</msg>
<status status="PASS" starttime="20201112 09:45:13.967" endtime="20201112 09:45:14.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.028" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:45:14.026" endtime="20201112 09:45:14.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.033" level="INFO">VALUE: 0.045551444</msg>
<status status="PASS" starttime="20201112 09:45:14.030" endtime="20201112 09:45:14.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.019" endtime="20201112 09:45:14.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.046" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:14.044" endtime="20201112 09:45:14.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.051" level="INFO">VALUE: [0.055568569, 0.065569667, 0.075570681, 0.085571819, 0.095572847, 0.105574, 0.115574986, 0.125576139, 0.135577153, 0.145578306, 0.155579389, 0.165580528, 0.175581486, 0.185582639, 0.195583653, 0.205584806, 0.215585819, 0.225586986, 0.235587986, 0.245589139, 0.255590139, 0.265591292, 0.275592319, 0.285593458, 0.295594472, 0.305595667, 0.315596694, 0.325597792, 0.335598806, 0.345599986, 0.355600986, 0.365602125, 0.375603139, 0.385604278, 0.395605306, 0.405606444, 0.415607458, 0.425608611, 0.435609625, 0.445610792, 0.455611819, 0.465612972, 0.475613958, 0.485615125, 0.495616139, 0.505617292, 0.515618319, 0.525619444, 0.535620458, 0.545621611, 0.555622625, 0.565623778, 0.575624806, 0.585625944, 0.595626958, 0.605628111, 0.615629125, 0.625630278, 0.635631375, 0.645632444, 0.655633444, 0.665634653, 0.675635625, 0.685636778, 0.695637778, 0.705638931, 0.715639958, 0.725641111, 0.735642111, 0.745643264, 0.755644306, 0.765645444, 0.775646458, 0.785647597, 0.795648625, 0.805649806, 0.815650792, 0.825651944, 0.835653014, 0.845654097, 0.855655125, 0.865656264, 0.875657292, 0.885658431, 0.895659444, 0.905660597, 0.915661611, 0.925662819, 0.935663792, 0.945664931, 0.955665958, 0.965667097, 0.975668125, 0.985669264, 0.995670278, 1.005671431, 1.015672458, 1.025673625, 1.035674611, 1.045675764] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:14.049" endtime="20201112 09:45:14.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.036" endtime="20201112 09:45:14.054"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:14.060" endtime="20201112 09:45:14.063"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:14.069" endtime="20201112 09:45:14.090"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.064" endtime="20201112 09:45:14.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.055" endtime="20201112 09:45:14.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:11.486" endtime="20201112 09:45:14.094"></status>
</kw>
<msg timestamp="20201112 09:45:14.095" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:14.116" endtime="20201112 09:45:16.235"></status>
</kw>
<msg timestamp="20201112 09:45:16.237" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11522826, 'wakeups': [11532842, 11542841, 11552841, 11562841, 11572841...</msg>
<status status="PASS" starttime="20201112 09:45:14.113" endtime="20201112 09:45:16.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.244" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11522826, 'wakeups': [11532842, 11542841, 11552841, 11562841, 11572841...</msg>
<status status="PASS" starttime="20201112 09:45:16.239" endtime="20201112 09:45:16.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:16.246" endtime="20201112 09:45:16.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.105" endtime="20201112 09:45:16.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.100" endtime="20201112 09:45:16.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:16.259" level="INFO">${RESULT} = {'wakeups': [11532842, 11542841, 11552841, 11562841, 11572841, 11582841, 11592841, 11602841, 11612841, 11622841, 11632841, 11642841, 11652841, 11662841, 11672841, 11682841, 11692841, 11702841, 1171284...</msg>
<status status="PASS" starttime="20201112 09:45:16.255" endtime="20201112 09:45:16.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.277" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:16.275" endtime="20201112 09:45:16.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.282" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:16.280" endtime="20201112 09:45:16.283"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.261" endtime="20201112 09:45:16.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.295" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:45:16.292" endtime="20201112 09:45:16.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.299" level="INFO">VALUE: 11522826</msg>
<status status="PASS" starttime="20201112 09:45:16.297" endtime="20201112 09:45:16.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.286" endtime="20201112 09:45:16.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.312" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:16.309" endtime="20201112 09:45:16.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.317" level="INFO">VALUE: [11532842, 11542841, 11552841, 11562841, 11572841, 11582841, 11592841, 11602841, 11612841, 11622841, 11632841, 11642841, 11652841, 11662841, 11672841, 11682841, 11692841, 11702841, 11712841, 11722841, 11732841, 11742841, 11752841, 11762841, 11772841, 11782841, 11792841, 11802841, 11812841, 11822841, 11832841, 11842841, 11852841, 11862841, 11872841, 11882841, 11892841, 11902841, 11912841, 11922841, 11932841, 11942841, 11952841, 11962841, 11972841, 11982841, 11992841, 12002841, 12012841, 12022841, 12032841, 12042841, 12052841, 12062841, 12072841, 12082841, 12092841, 12102841, 12112841, 12122841, 12132841, 12142841, 12152841, 12162841, 12172841, 12182841, 12192841, 12202841, 12212841, 12222841, 12232841, 12242841, 12252841, 12262841, 12272841, 12282841, 12292841, 12302841, 12312841, 12322841, 12332841, 12342841, 12352841, 12362841, 12372841, 12382841, 12392841, 12402841, 12412841, 12422841, 12432841, 12442841, 12452841, 12462841, 12472841, 12482841, 12492841, 12502841, 12512841, 12522841]</msg>
<status status="PASS" starttime="20201112 09:45:16.314" endtime="20201112 09:45:16.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.303" endtime="20201112 09:45:16.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:16.336" endtime="20201112 09:45:16.681"></status>
</kw>
<msg timestamp="20201112 09:45:16.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038825264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048843014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:16.333" endtime="20201112 09:45:16.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038825264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048843014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:16.689" endtime="20201112 09:45:16.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:16.706" endtime="20201112 09:45:16.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.325" endtime="20201112 09:45:16.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.321" endtime="20201112 09:45:16.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:16.770" level="INFO">${RESULT} = {'time': [0.038825264, 0.048843014, 0.058843139, 0.068844153, 0.078845292, 0.088846319, 0.098847458, 0.1088485, 0.118849639, 0.128850639, 0.138851806, 0.148852792, 0.158853958, 0.168854958, 0.17885611...</msg>
<status status="PASS" starttime="20201112 09:45:16.716" endtime="20201112 09:45:16.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.781" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:45:16.779" endtime="20201112 09:45:16.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.786" level="INFO">VALUE: 0.038825264</msg>
<status status="PASS" starttime="20201112 09:45:16.784" endtime="20201112 09:45:16.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.772" endtime="20201112 09:45:16.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.799" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:16.797" endtime="20201112 09:45:16.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.805" level="INFO">VALUE: [0.048843014, 0.058843139, 0.068844153, 0.078845292, 0.088846319, 0.098847458, 0.1088485, 0.118849639, 0.128850639, 0.138851806, 0.148852792, 0.158853958, 0.168854958, 0.178856111, 0.188857125, 0.198858278, 0.208859292, 0.218860431, 0.228861528, 0.238862611, 0.248863611, 0.258864764, 0.268865778, 0.278866931, 0.288867944, 0.298869153, 0.308870097, 0.318871264, 0.328872264, 0.338873431, 0.348874431, 0.358875583, 0.368876625, 0.37887775, 0.38887875, 0.398879931, 0.408880931, 0.418882069, 0.428883083, 0.438884236, 0.44888525, 0.458886444, 0.468887431, 0.478888569, 0.488889597, 0.49889075, 0.508891778, 0.518892917, 0.528893903, 0.538895056, 0.548896083, 0.558897222, 0.568898236, 0.578899389, 0.588900444, 0.598901556, 0.608902583, 0.618903736, 0.62890475, 0.638905889, 0.648906903, 0.658908056, 0.668909056, 0.678910208, 0.688911222, 0.698912389, 0.708913417, 0.718914542, 0.728915556, 0.738916708, 0.748917736, 0.758918875, 0.768919903, 0.778921042, 0.788922097, 0.798923222, 0.808924222, 0.818925375, 0.828926403, 0.838927542, 0.848928569, 0.858929694, 0.868930708, 0.878931861, 0.888932931, 0.898934028, 0.908935042, 0.918936208, 0.928937208, 0.938938361, 0.948939375, 0.958940528, 0.968941542, 0.978942708, 0.988943708, 0.998944875, 1.008945903, 1.018947028, 1.028948069, 1.038949194] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:16.802" endtime="20201112 09:45:16.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.789" endtime="20201112 09:45:16.807"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:16.814" endtime="20201112 09:45:16.817"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:16.823" endtime="20201112 09:45:16.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.818" endtime="20201112 09:45:16.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.809" endtime="20201112 09:45:16.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.096" endtime="20201112 09:45:16.848"></status>
</kw>
<msg timestamp="20201112 09:45:16.849" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:16.870" endtime="20201112 09:45:18.987"></status>
</kw>
<msg timestamp="20201112 09:45:18.987" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14276642, 'wakeups': [14286658, 14296657, 14306657, 14316657, 14326657...</msg>
<status status="PASS" starttime="20201112 09:45:16.867" endtime="20201112 09:45:18.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.991" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14276642, 'wakeups': [14286658, 14296657, 14306657, 14316657, 14326657...</msg>
<status status="PASS" starttime="20201112 09:45:18.988" endtime="20201112 09:45:18.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:18.992" endtime="20201112 09:45:18.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.859" endtime="20201112 09:45:18.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.854" endtime="20201112 09:45:18.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:18.999" level="INFO">${RESULT} = {'wakeups': [14286658, 14296657, 14306657, 14316657, 14326657, 14336657, 14346657, 14356657, 14366657, 14376657, 14386657, 14396657, 14406657, 14416657, 14426657, 14436657, 14446657, 14456657, 1446665...</msg>
<status status="PASS" starttime="20201112 09:45:18.996" endtime="20201112 09:45:18.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.004" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:19.003" endtime="20201112 09:45:19.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.006" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:19.005" endtime="20201112 09:45:19.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.000" endtime="20201112 09:45:19.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.012" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:45:19.011" endtime="20201112 09:45:19.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.015" level="INFO">VALUE: 14276642</msg>
<status status="PASS" starttime="20201112 09:45:19.013" endtime="20201112 09:45:19.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.008" endtime="20201112 09:45:19.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.020" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:19.019" endtime="20201112 09:45:19.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.023" level="INFO">VALUE: [14286658, 14296657, 14306657, 14316657, 14326657, 14336657, 14346657, 14356657, 14366657, 14376657, 14386657, 14396657, 14406657, 14416657, 14426657, 14436657, 14446657, 14456657, 14466657, 14476657, 14486657, 14496657, 14506657, 14516657, 14526657, 14536657, 14546657, 14556657, 14566657, 14576657, 14586657, 14596657, 14606657, 14616657, 14626657, 14636657, 14646657, 14656657, 14666657, 14676657, 14686657, 14696657, 14706657, 14716657, 14726657, 14736657, 14746657, 14756657, 14766657, 14776657, 14786657, 14796657, 14806657, 14816657, 14826657, 14836657, 14846657, 14856657, 14866657, 14876657, 14886657, 14896657, 14906657, 14916657, 14926657, 14936657, 14946657, 14956657, 14966657, 14976657, 14986657, 14996657, 15006657, 15016657, 15026657, 15036657, 15046657, 15056657, 15066657, 15076657, 15086657, 15096657, 15106657, 15116657, 15126657, 15136657, 15146657, 15156657, 15166657, 15176657, 15186657, 15196657, 15206657, 15216657, 15226657, 15236657, 15246657, 15256657, 15266657, 15276657]</msg>
<status status="PASS" starttime="20201112 09:45:19.022" endtime="20201112 09:45:19.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.016" endtime="20201112 09:45:19.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:19.032" endtime="20201112 09:45:19.361"></status>
</kw>
<msg timestamp="20201112 09:45:19.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038672028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04868975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:45:19.031" endtime="20201112 09:45:19.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038672028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04868975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:45:19.369" endtime="20201112 09:45:19.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:19.387" endtime="20201112 09:45:19.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.027" endtime="20201112 09:45:19.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.025" endtime="20201112 09:45:19.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:19.449" level="INFO">${RESULT} = {'time': [0.038672028, 0.04868975, 0.058689931, 0.068690903, 0.078692069, 0.088693069, 0.098694222, 0.108695222, 0.118696417, 0.128697389, 0.138698542, 0.148699556, 0.158700694, 0.168701722, 0.1787028...</msg>
<status status="PASS" starttime="20201112 09:45:19.395" endtime="20201112 09:45:19.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.460" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:45:19.458" endtime="20201112 09:45:19.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.465" level="INFO">VALUE: 0.038672028</msg>
<status status="PASS" starttime="20201112 09:45:19.463" endtime="20201112 09:45:19.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.451" endtime="20201112 09:45:19.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.478" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:19.476" endtime="20201112 09:45:19.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.483" level="INFO">VALUE: [0.04868975, 0.058689931, 0.068690903, 0.078692069, 0.088693069, 0.098694222, 0.108695222, 0.118696417, 0.128697389, 0.138698542, 0.148699556, 0.158700694, 0.168701722, 0.178702889, 0.188703875, 0.198705028, 0.208706028, 0.218707181, 0.228708194, 0.238709361, 0.248710361, 0.258711514, 0.268712528, 0.278713667, 0.288714681, 0.298715833, 0.308716903, 0.318718028, 0.328719, 0.338720153, 0.348721167, 0.358722319, 0.368723333, 0.378724514, 0.388725486, 0.398726639, 0.408727694, 0.418728806, 0.428729819, 0.438731, 0.448732, 0.458733139, 0.468734139, 0.478735292, 0.488736361, 0.498737458, 0.508738472, 0.518739639, 0.528740639, 0.538741806, 0.548742792, 0.558743944, 0.568744958, 0.578746111, 0.588747125, 0.598748278, 0.608749306, 0.618750444, 0.628751458, 0.638752611, 0.648753653, 0.658754764, 0.668755778, 0.678756931, 0.688757944, 0.698759111, 0.708760139, 0.718761264, 0.728762278, 0.738763431, 0.748764431, 0.758765597, 0.768766597, 0.778767764, 0.788768778, 0.798769917, 0.808770944, 0.818772083, 0.828773097, 0.838774236, 0.848775292, 0.858776403, 0.868777417, 0.878778583, 0.888779597, 0.89878075, 0.908781764, 0.918782917, 0.928783917, 0.938785069, 0.948786083, 0.958787222, 0.968788278, 0.978789389, 0.988790403, 0.998791569, 1.008792569, 1.018793722, 1.028794722, 1.038795889] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:19.481" endtime="20201112 09:45:19.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.468" endtime="20201112 09:45:19.486"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:19.492" endtime="20201112 09:45:19.495"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:19.501" endtime="20201112 09:45:19.522"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.496" endtime="20201112 09:45:19.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.488" endtime="20201112 09:45:19.526"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.850" endtime="20201112 09:45:19.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:11.481" endtime="20201112 09:45:19.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:11.479" endtime="20201112 09:45:19.528"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:19.534" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:19.555" endtime="20201112 09:45:21.674"></status>
</kw>
<msg timestamp="20201112 09:45:21.675" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 16961714, 'wakeups': [16971739, 16981738, 16991738, 17001738, 17011738...</msg>
<status status="PASS" starttime="20201112 09:45:19.552" endtime="20201112 09:45:21.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:21.682" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 16961714, 'wakeups': [16971739, 16981738, 16991738, 17001738, 17011738...</msg>
<status status="PASS" starttime="20201112 09:45:21.678" endtime="20201112 09:45:21.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:21.685" endtime="20201112 09:45:21.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.544" endtime="20201112 09:45:21.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.539" endtime="20201112 09:45:21.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:21.698" level="INFO">${RESULT} = {'wakeups': [16971739, 16981738, 16991738, 17001738, 17011738, 17021738, 17031738, 17041738, 17051738, 17061738, 17071738, 17081738, 17091738, 17101738, 17111738, 17121738, 17131738, 17141738, 1715173...</msg>
<status status="PASS" starttime="20201112 09:45:21.693" endtime="20201112 09:45:21.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:21.708" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:21.706" endtime="20201112 09:45:21.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:21.713" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:21.711" endtime="20201112 09:45:21.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:21.700" endtime="20201112 09:45:21.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:21.726" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:45:21.723" endtime="20201112 09:45:21.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:21.730" level="INFO">VALUE: 16961714</msg>
<status status="PASS" starttime="20201112 09:45:21.728" endtime="20201112 09:45:21.731"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:21.717" endtime="20201112 09:45:21.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:21.743" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:21.741" endtime="20201112 09:45:21.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:21.748" level="INFO">VALUE: [16971739, 16981738, 16991738, 17001738, 17011738, 17021738, 17031738, 17041738, 17051738, 17061738, 17071738, 17081738, 17091738, 17101738, 17111738, 17121738, 17131738, 17141738, 17151738, 17161738, 17171738, 17181738, 17191738, 17201738, 17211738, 17221738, 17231738, 17241738, 17251738, 17261738, 17271738, 17281738, 17291738, 17301738, 17311738, 17321738, 17331738, 17341738, 17351738, 17361738, 17371738, 17381738, 17391738, 17401738, 17411738, 17421738, 17431738, 17441738, 17451738, 17461738, 17471738, 17481738, 17491738, 17501738, 17511738, 17521738, 17531738, 17541738, 17551738, 17561738, 17571738, 17581738, 17591738, 17601738, 17611738, 17621738, 17631738, 17641738, 17651738, 17661738, 17671738, 17681738, 17691738, 17701738, 17711738, 17721738, 17731738, 17741738, 17751738, 17761738, 17771738, 17781738, 17791738, 17801738, 17811738, 17821738, 17831738, 17841738, 17851738, 17861738, 17871738, 17881738, 17891738, 17901738, 17911738, 17921738, 17931738, 17941738, 17951738, 17961738]</msg>
<status status="PASS" starttime="20201112 09:45:21.745" endtime="20201112 09:45:21.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:21.734" endtime="20201112 09:45:21.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:21.774" endtime="20201112 09:45:22.117"></status>
</kw>
<msg timestamp="20201112 09:45:22.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045578639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055604972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:21.766" endtime="20201112 09:45:22.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045578639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055604972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:22.126" endtime="20201112 09:45:22.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:22.144" endtime="20201112 09:45:22.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:21.756" endtime="20201112 09:45:22.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:21.752" endtime="20201112 09:45:22.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:22.181" level="INFO">${RESULT} = {'time': [0.045578639, 0.055604972, 0.065605111, 0.075606125, 0.085607278, 0.095608278, 0.105609417, 0.115610431, 0.125611597, 0.135612597, 0.145613764, 0.155614764, 0.165615903, 0.175616903, 0.185618...</msg>
<status status="PASS" starttime="20201112 09:45:22.153" endtime="20201112 09:45:22.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.186" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:45:22.185" endtime="20201112 09:45:22.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.189" level="INFO">VALUE: 0.045578639</msg>
<status status="PASS" starttime="20201112 09:45:22.188" endtime="20201112 09:45:22.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.182" endtime="20201112 09:45:22.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.195" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:22.194" endtime="20201112 09:45:22.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.197" level="INFO">VALUE: [0.055604972, 0.065605111, 0.075606125, 0.085607278, 0.095608278, 0.105609417, 0.115610431, 0.125611597, 0.135612597, 0.145613764, 0.155614764, 0.165615903, 0.175616903, 0.185618056, 0.195619083, 0.205620236, 0.215621264, 0.225622389, 0.235623389, 0.245624556, 0.255625542, 0.265626694, 0.275627708, 0.285628875, 0.295629889, 0.305631028, 0.315632028, 0.325633236, 0.335634194, 0.345635347, 0.355636347, 0.365637514, 0.375638514, 0.385639667, 0.395640681, 0.405641819, 0.415642917, 0.425644, 0.435645, 0.445646153, 0.455647153, 0.465648347, 0.475649319, 0.485650472, 0.495651486, 0.505652625, 0.515653639, 0.525654792, 0.535655806, 0.545656958, 0.555657972, 0.565659125, 0.575660153, 0.585661292, 0.595662292, 0.605663472, 0.615664458, 0.625665611, 0.635666611, 0.645667764, 0.655668792, 0.665669944, 0.675670958, 0.685672097, 0.695673097, 0.705674264, 0.715675278, 0.725676458, 0.735677444, 0.745678611, 0.755679583, 0.765680736, 0.77568175, 0.785682972, 0.795683917, 0.805685083, 0.815686069, 0.825687236, 0.835688292, 0.845689389, 0.855690417, 0.865691556, 0.875692569, 0.885693722, 0.895694736, 0.905695875, 0.915696889, 0.925698083, 0.935699069, 0.945700208, 0.955701208, 0.965702361, 0.975703389, 0.985704528, 0.995705611, 1.005706708, 1.015707722, 1.025708847, 1.035709875, 1.045711042] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:22.196" endtime="20201112 09:45:22.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.190" endtime="20201112 09:45:22.199"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:22.202" endtime="20201112 09:45:22.203"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:22.206" endtime="20201112 09:45:22.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.204" endtime="20201112 09:45:22.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.199" endtime="20201112 09:45:22.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.535" endtime="20201112 09:45:22.227"></status>
</kw>
<msg timestamp="20201112 09:45:22.227" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:22.239" endtime="20201112 09:45:24.340"></status>
</kw>
<msg timestamp="20201112 09:45:24.341" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 19643649, 'wakeups': [19653673, 19663673, 19673673, 19683673, 19693673...</msg>
<status status="PASS" starttime="20201112 09:45:22.237" endtime="20201112 09:45:24.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.345" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 19643649, 'wakeups': [19653673, 19663673, 19673673, 19683673, 19693673...</msg>
<status status="PASS" starttime="20201112 09:45:24.342" endtime="20201112 09:45:24.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:24.346" endtime="20201112 09:45:24.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.232" endtime="20201112 09:45:24.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.230" endtime="20201112 09:45:24.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:24.352" level="INFO">${RESULT} = {'wakeups': [19653673, 19663673, 19673673, 19683673, 19693673, 19703673, 19713673, 19723673, 19733673, 19743673, 19753673, 19763673, 19773673, 19783673, 19793673, 19803673, 19813673, 19823673, 1983367...</msg>
<status status="PASS" starttime="20201112 09:45:24.350" endtime="20201112 09:45:24.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.357" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:24.356" endtime="20201112 09:45:24.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.359" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:24.358" endtime="20201112 09:45:24.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.353" endtime="20201112 09:45:24.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.365" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:45:24.364" endtime="20201112 09:45:24.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.368" level="INFO">VALUE: 19643649</msg>
<status status="PASS" starttime="20201112 09:45:24.367" endtime="20201112 09:45:24.368"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.361" endtime="20201112 09:45:24.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.374" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:24.372" endtime="20201112 09:45:24.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.376" level="INFO">VALUE: [19653673, 19663673, 19673673, 19683673, 19693673, 19703673, 19713673, 19723673, 19733673, 19743673, 19753673, 19763673, 19773673, 19783673, 19793673, 19803673, 19813673, 19823673, 19833673, 19843673, 19853673, 19863673, 19873673, 19883673, 19893673, 19903673, 19913673, 19923673, 19933673, 19943673, 19953673, 19963673, 19973673, 19983673, 19993673, 20003673, 20013673, 20023673, 20033673, 20043673, 20053673, 20063673, 20073673, 20083673, 20093673, 20103673, 20113673, 20123673, 20133673, 20143673, 20153673, 20163673, 20173673, 20183673, 20193673, 20203673, 20213673, 20223673, 20233673, 20243673, 20253673, 20263673, 20273673, 20283673, 20293673, 20303673, 20313673, 20323673, 20333673, 20343673, 20353673, 20363673, 20373673, 20383673, 20393673, 20403673, 20413673, 20423673, 20433673, 20443673, 20453673, 20463673, 20473673, 20483673, 20493673, 20503673, 20513673, 20523673, 20533673, 20543673, 20553673, 20563673, 20573673, 20583673, 20593673, 20603673, 20613673, 20623673, 20633673, 20643673]</msg>
<status status="PASS" starttime="20201112 09:45:24.375" endtime="20201112 09:45:24.376"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.369" endtime="20201112 09:45:24.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:24.385" endtime="20201112 09:45:24.711"></status>
</kw>
<msg timestamp="20201112 09:45:24.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023344514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033370208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:24.383" endtime="20201112 09:45:24.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023344514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033370208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:24.720" endtime="20201112 09:45:24.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:24.738" endtime="20201112 09:45:24.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.380" endtime="20201112 09:45:24.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.378" endtime="20201112 09:45:24.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:24.801" level="INFO">${RESULT} = {'time': [0.023344514, 0.033370208, 0.043371333, 0.053372333, 0.063373486, 0.073374514, 0.083375639, 0.093376708, 0.103377792, 0.113378819, 0.123380028, 0.133380958, 0.143382125, 0.153383125, 0.163384...</msg>
<status status="PASS" starttime="20201112 09:45:24.747" endtime="20201112 09:45:24.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.812" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:45:24.810" endtime="20201112 09:45:24.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.817" level="INFO">VALUE: 0.023344514</msg>
<status status="PASS" starttime="20201112 09:45:24.815" endtime="20201112 09:45:24.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.803" endtime="20201112 09:45:24.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.831" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:24.828" endtime="20201112 09:45:24.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.835" level="INFO">VALUE: [0.033370208, 0.043371333, 0.053372333, 0.063373486, 0.073374514, 0.083375639, 0.093376708, 0.103377792, 0.113378819, 0.123380028, 0.133380958, 0.143382125, 0.153383125, 0.163384264, 0.173385278, 0.183386431, 0.193387444, 0.203388583, 0.213389625, 0.22339075, 0.233391792, 0.243392917, 0.253393958, 0.263395069, 0.273396083, 0.283397278, 0.293398236, 0.303399403, 0.313400417, 0.323401556, 0.333402556, 0.343403736, 0.353404708, 0.363405875, 0.373406903, 0.383408028, 0.393409056, 0.403410194, 0.413411208, 0.423412347, 0.433413361, 0.443414514, 0.453415514, 0.463416667, 0.473417694, 0.483418833, 0.493419833, 0.503420986, 0.513422, 0.523423153, 0.533424153, 0.543425306, 0.553426333, 0.563427472, 0.573428514, 0.583429639, 0.593430639, 0.603431806, 0.613432806, 0.623434014, 0.633435, 0.643436111, 0.653437139, 0.663438278, 0.673439292, 0.683440431, 0.693441444, 0.703442611, 0.713443681, 0.723444792, 0.733445778, 0.743446917, 0.753447944, 0.763449083, 0.773450083, 0.783451236, 0.793452264, 0.803453403, 0.813454417, 0.823455556, 0.833456569, 0.843457722, 0.853458736, 0.863459889, 0.873460903, 0.883462056, 0.893463056, 0.903464222, 0.913465236, 0.923466375, 0.933467375, 0.943468528, 0.953469556, 0.963470736, 0.973471764, 0.983472847, 0.993473903, 1.003475014, 1.013476083, 1.023477194] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:24.833" endtime="20201112 09:45:24.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.821" endtime="20201112 09:45:24.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:24.844" endtime="20201112 09:45:24.847"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:24.853" endtime="20201112 09:45:24.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.848" endtime="20201112 09:45:24.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.840" endtime="20201112 09:45:24.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.228" endtime="20201112 09:45:24.879"></status>
</kw>
<msg timestamp="20201112 09:45:24.879" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:24.900" endtime="20201112 09:45:27.020"></status>
</kw>
<msg timestamp="20201112 09:45:27.021" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 22307098, 'wakeups': [22317122, 22327122, 22337122, 22347122, 22357122...</msg>
<status status="PASS" starttime="20201112 09:45:24.897" endtime="20201112 09:45:27.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.028" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 22307098, 'wakeups': [22317122, 22327122, 22337122, 22347122, 22357122...</msg>
<status status="PASS" starttime="20201112 09:45:27.024" endtime="20201112 09:45:27.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:27.031" endtime="20201112 09:45:27.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.890" endtime="20201112 09:45:27.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.884" endtime="20201112 09:45:27.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:27.044" level="INFO">${RESULT} = {'wakeups': [22317122, 22327122, 22337122, 22347122, 22357122, 22367122, 22377122, 22387122, 22397122, 22407122, 22417122, 22427122, 22437122, 22447122, 22457122, 22467122, 22477122, 22487122, 2249712...</msg>
<status status="PASS" starttime="20201112 09:45:27.039" endtime="20201112 09:45:27.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.054" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:27.052" endtime="20201112 09:45:27.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.059" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:27.057" endtime="20201112 09:45:27.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.046" endtime="20201112 09:45:27.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.076" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:45:27.074" endtime="20201112 09:45:27.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.081" level="INFO">VALUE: 22307098</msg>
<status status="PASS" starttime="20201112 09:45:27.079" endtime="20201112 09:45:27.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.067" endtime="20201112 09:45:27.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.093" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:27.091" endtime="20201112 09:45:27.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.098" level="INFO">VALUE: [22317122, 22327122, 22337122, 22347122, 22357122, 22367122, 22377122, 22387122, 22397122, 22407122, 22417122, 22427122, 22437122, 22447122, 22457122, 22467122, 22477122, 22487122, 22497122, 22507122, 22517122, 22527122, 22537122, 22547122, 22557122, 22567122, 22577122, 22587122, 22597122, 22607122, 22617122, 22627122, 22637122, 22647122, 22657122, 22667122, 22677122, 22687122, 22697122, 22707122, 22717122, 22727122, 22737122, 22747122, 22757122, 22767122, 22777122, 22787122, 22797122, 22807122, 22817122, 22827122, 22837122, 22847122, 22857122, 22867122, 22877122, 22887122, 22897122, 22907122, 22917122, 22927122, 22937122, 22947122, 22957122, 22967122, 22977122, 22987122, 22997122, 23007122, 23017122, 23027122, 23037122, 23047122, 23057122, 23067122, 23077122, 23087122, 23097122, 23107122, 23117122, 23127122, 23137122, 23147122, 23157122, 23167122, 23177122, 23187122, 23197122, 23207122, 23217122, 23227122, 23237122, 23247122, 23257122, 23267122, 23277122, 23287122, 23297122, 23307122]</msg>
<status status="PASS" starttime="20201112 09:45:27.096" endtime="20201112 09:45:27.099"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.085" endtime="20201112 09:45:27.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:27.120" endtime="20201112 09:45:27.465"></status>
</kw>
<msg timestamp="20201112 09:45:27.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038961889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048987917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:27.117" endtime="20201112 09:45:27.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038961889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048987917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:27.473" endtime="20201112 09:45:27.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:27.490" endtime="20201112 09:45:27.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.109" endtime="20201112 09:45:27.496"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.102" endtime="20201112 09:45:27.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:27.534" level="INFO">${RESULT} = {'time': [0.038961889, 0.048987917, 0.058989042, 0.068990056, 0.078991208, 0.088992222, 0.098993389, 0.108994389, 0.118995542, 0.128996556, 0.138997722, 0.148998722, 0.158999875, 0.169000889, 0.179002...</msg>
<status status="PASS" starttime="20201112 09:45:27.499" endtime="20201112 09:45:27.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.540" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:45:27.539" endtime="20201112 09:45:27.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.542" level="INFO">VALUE: 0.038961889</msg>
<status status="PASS" starttime="20201112 09:45:27.541" endtime="20201112 09:45:27.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.535" endtime="20201112 09:45:27.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.548" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:27.547" endtime="20201112 09:45:27.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.551" level="INFO">VALUE: [0.048987917, 0.058989042, 0.068990056, 0.078991208, 0.088992222, 0.098993389, 0.108994389, 0.118995542, 0.128996556, 0.138997722, 0.148998722, 0.158999875, 0.169000889, 0.179002042, 0.189003056, 0.199004208, 0.209005222, 0.219006375, 0.229007403, 0.239008542, 0.249009556, 0.259010708, 0.269011722, 0.279012875, 0.289013903, 0.299015056, 0.309016056, 0.31901725, 0.329018222, 0.339019389, 0.349020417, 0.359021556, 0.369022569, 0.37902375, 0.389024722, 0.399025917, 0.409026889, 0.419028083, 0.429029083, 0.439030278, 0.449031292, 0.459032389, 0.469033403, 0.479034556, 0.489035569, 0.499036722, 0.50903775, 0.519038889, 0.529039903, 0.539041056, 0.549042083, 0.559043222, 0.56904425, 0.579045431, 0.589046417, 0.599047569, 0.609048569, 0.619049722, 0.62905075, 0.639051917, 0.649052917, 0.659054083, 0.669055083, 0.67905625, 0.689057306, 0.699058403, 0.709059472, 0.719060569, 0.729061583, 0.739062736, 0.749063764, 0.759064903, 0.769065917, 0.779067069, 0.789068097, 0.799069264, 0.809070264, 0.819071403, 0.829072458, 0.839073569, 0.849074653, 0.859075736, 0.86907675, 0.879077917, 0.889078972, 0.899080125, 0.909081083, 0.919082264, 0.929083306, 0.939084417, 0.949085431, 0.959086583, 0.969087611, 0.97908875, 0.989089778, 0.999090917, 1.009091931, 1.019093083, 1.029094111, 1.03909525] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:27.550" endtime="20201112 09:45:27.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.544" endtime="20201112 09:45:27.552"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:27.555" endtime="20201112 09:45:27.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:27.560" endtime="20201112 09:45:27.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.557" endtime="20201112 09:45:27.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.553" endtime="20201112 09:45:27.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.880" endtime="20201112 09:45:27.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.531" endtime="20201112 09:45:27.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.529" endtime="20201112 09:45:27.581"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:27.584" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:27.595" endtime="20201112 09:45:29.712"></status>
</kw>
<msg timestamp="20201112 09:45:29.713" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 24999779, 'wakeups': [25009813, 25019813, 25029813, 25039813, 25049813...</msg>
<status status="PASS" starttime="20201112 09:45:27.593" endtime="20201112 09:45:29.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.720" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 24999779, 'wakeups': [25009813, 25019813, 25029813, 25039813, 25049813...</msg>
<status status="PASS" starttime="20201112 09:45:29.715" endtime="20201112 09:45:29.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:29.722" endtime="20201112 09:45:29.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.589" endtime="20201112 09:45:29.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.587" endtime="20201112 09:45:29.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:29.736" level="INFO">${RESULT} = {'wakeups': [25009813, 25019813, 25029813, 25039813, 25049813, 25059813, 25069813, 25079813, 25089813, 25099813, 25109813, 25119813, 25129813, 25139813, 25149813, 25159813, 25169813, 25179813, 2518981...</msg>
<status status="PASS" starttime="20201112 09:45:29.731" endtime="20201112 09:45:29.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.746" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:29.744" endtime="20201112 09:45:29.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.750" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:29.748" endtime="20201112 09:45:29.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.737" endtime="20201112 09:45:29.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.763" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:45:29.761" endtime="20201112 09:45:29.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.768" level="INFO">VALUE: 24999779</msg>
<status status="PASS" starttime="20201112 09:45:29.766" endtime="20201112 09:45:29.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.754" endtime="20201112 09:45:29.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.781" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:29.778" endtime="20201112 09:45:29.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.785" level="INFO">VALUE: [25009813, 25019813, 25029813, 25039813, 25049813, 25059813, 25069813, 25079813, 25089813, 25099813, 25109813, 25119813, 25129813, 25139813, 25149813, 25159813, 25169813, 25179813, 25189813, 25199813, 25209813, 25219813, 25229813, 25239813, 25249813, 25259813, 25269813, 25279813, 25289813, 25299813, 25309813, 25319813, 25329813, 25339813, 25349813, 25359813, 25369813, 25379813, 25389813, 25399813, 25409813, 25419813, 25429813, 25439813, 25449813, 25459813, 25469813, 25479813, 25489813, 25499813, 25509813, 25519813, 25529813, 25539813, 25549813, 25559813, 25569813, 25579813, 25589813, 25599813, 25609813, 25619813, 25629813, 25639813, 25649813, 25659813, 25669813, 25679813, 25689813, 25699813, 25709813, 25719813, 25729813, 25739813, 25749813, 25759813, 25769813, 25779813, 25789813, 25799813, 25809813, 25819813, 25829813, 25839813, 25849813, 25859813, 25869813, 25879813, 25889813, 25899813, 25909813, 25919813, 25929813, 25939813, 25949813, 25959813, 25969813, 25979813, 25989813, 25999813]</msg>
<status status="PASS" starttime="20201112 09:45:29.783" endtime="20201112 09:45:29.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.772" endtime="20201112 09:45:29.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:29.806" endtime="20201112 09:45:30.147"></status>
</kw>
<msg timestamp="20201112 09:45:30.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025706083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035741472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:29.802" endtime="20201112 09:45:30.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025706083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035741472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:30.156" endtime="20201112 09:45:30.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:30.173" endtime="20201112 09:45:30.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.795" endtime="20201112 09:45:30.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.790" endtime="20201112 09:45:30.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:30.237" level="INFO">${RESULT} = {'time': [0.025706083, 0.035741472, 0.045742597, 0.055743611, 0.065744778, 0.075745833, 0.085746944, 0.095747958, 0.105749097, 0.115750111, 0.125751306, 0.135752264, 0.145753417, 0.155754444, 0.165755...</msg>
<status status="PASS" starttime="20201112 09:45:30.182" endtime="20201112 09:45:30.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.248" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:45:30.245" endtime="20201112 09:45:30.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.252" level="INFO">VALUE: 0.025706083</msg>
<status status="PASS" starttime="20201112 09:45:30.250" endtime="20201112 09:45:30.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.239" endtime="20201112 09:45:30.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.266" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:30.264" endtime="20201112 09:45:30.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.271" level="INFO">VALUE: [0.035741472, 0.045742597, 0.055743611, 0.065744778, 0.075745833, 0.085746944, 0.095747958, 0.105749097, 0.115750111, 0.125751306, 0.135752264, 0.145753417, 0.155754444, 0.165755569, 0.175756583, 0.185757736, 0.19575875, 0.205759903, 0.215760944, 0.225762069, 0.235763097, 0.245764222, 0.255765236, 0.265766389, 0.275767417, 0.285768569, 0.295769625, 0.305770722, 0.315771736, 0.325772889, 0.335773917, 0.345775056, 0.355776069, 0.365777208, 0.375778292, 0.385779417, 0.395780403, 0.405781556, 0.415782583, 0.425783708, 0.435784736, 0.445785875, 0.455786875, 0.465788028, 0.475789042, 0.485790194, 0.495791208, 0.505792361, 0.515793375, 0.525794542, 0.535795542, 0.545796694, 0.555797764, 0.565798889, 0.575799875, 0.585801042, 0.595802028, 0.605803181, 0.615804236, 0.625805361, 0.635806361, 0.645807528, 0.655808542, 0.665809694, 0.675810694, 0.685811931, 0.695812861, 0.705814028, 0.715815042, 0.725816181, 0.735817208, 0.745818375, 0.755819375, 0.765820514, 0.775821528, 0.785822708, 0.795823694, 0.805824847, 0.815825847, 0.825827, 0.835828028, 0.845829167, 0.855830194, 0.865831333, 0.875832347, 0.885833514, 0.895834514, 0.905835667, 0.915836694, 0.925837833, 0.935838861, 0.945840014, 0.955841014, 0.965842167, 0.975843167, 0.985844333, 0.995845333, 1.005846486, 1.015847528, 1.025848653] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:30.269" endtime="20201112 09:45:30.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.256" endtime="20201112 09:45:30.274"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:30.280" endtime="20201112 09:45:30.283"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:30.288" endtime="20201112 09:45:30.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.284" endtime="20201112 09:45:30.312"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.275" endtime="20201112 09:45:30.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.585" endtime="20201112 09:45:30.314"></status>
</kw>
<msg timestamp="20201112 09:45:30.315" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:30.337" endtime="20201112 09:45:32.440"></status>
</kw>
<msg timestamp="20201112 09:45:32.440" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 27743481, 'wakeups': [27753515, 27763515, 27773515, 27783515, 27793515...</msg>
<status status="PASS" starttime="20201112 09:45:30.333" endtime="20201112 09:45:32.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.444" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 27743481, 'wakeups': [27753515, 27763515, 27773515, 27783515, 27793515...</msg>
<status status="PASS" starttime="20201112 09:45:32.441" endtime="20201112 09:45:32.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:32.445" endtime="20201112 09:45:32.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.325" endtime="20201112 09:45:32.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.320" endtime="20201112 09:45:32.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:32.451" level="INFO">${RESULT} = {'wakeups': [27753515, 27763515, 27773515, 27783515, 27793515, 27803515, 27813515, 27823515, 27833515, 27843515, 27853515, 27863515, 27873515, 27883515, 27893515, 27903515, 27913515, 27923515, 2793351...</msg>
<status status="PASS" starttime="20201112 09:45:32.449" endtime="20201112 09:45:32.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.456" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:32.455" endtime="20201112 09:45:32.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.458" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:32.457" endtime="20201112 09:45:32.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.452" endtime="20201112 09:45:32.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.464" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:45:32.463" endtime="20201112 09:45:32.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.467" level="INFO">VALUE: 27743481</msg>
<status status="PASS" starttime="20201112 09:45:32.466" endtime="20201112 09:45:32.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.460" endtime="20201112 09:45:32.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.474" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:32.472" endtime="20201112 09:45:32.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.476" level="INFO">VALUE: [27753515, 27763515, 27773515, 27783515, 27793515, 27803515, 27813515, 27823515, 27833515, 27843515, 27853515, 27863515, 27873515, 27883515, 27893515, 27903515, 27913515, 27923515, 27933515, 27943515, 27953515, 27963515, 27973515, 27983515, 27993515, 28003515, 28013515, 28023515, 28033515, 28043515, 28053515, 28063515, 28073515, 28083515, 28093515, 28103515, 28113515, 28123515, 28133515, 28143515, 28153515, 28163515, 28173515, 28183515, 28193515, 28203515, 28213515, 28223515, 28233515, 28243515, 28253515, 28263515, 28273515, 28283515, 28293515, 28303515, 28313515, 28323515, 28333515, 28343515, 28353515, 28363515, 28373515, 28383515, 28393515, 28403515, 28413515, 28423515, 28433515, 28443515, 28453515, 28463515, 28473515, 28483515, 28493515, 28503515, 28513515, 28523515, 28533515, 28543515, 28553515, 28563515, 28573515, 28583515, 28593515, 28603515, 28613515, 28623515, 28633515, 28643515, 28653515, 28663515, 28673515, 28683515, 28693515, 28703515, 28713515, 28723515, 28733515, 28743515]</msg>
<status status="PASS" starttime="20201112 09:45:32.475" endtime="20201112 09:45:32.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.468" endtime="20201112 09:45:32.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:32.496" endtime="20201112 09:45:32.840"></status>
</kw>
<msg timestamp="20201112 09:45:32.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039823236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049858625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:32.492" endtime="20201112 09:45:32.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039823236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049858625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:32.849" endtime="20201112 09:45:32.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:32.866" endtime="20201112 09:45:32.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.485" endtime="20201112 09:45:32.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.479" endtime="20201112 09:45:32.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:32.933" level="INFO">${RESULT} = {'time': [0.039823236, 0.049858625, 0.059859764, 0.069860778, 0.079861931, 0.089862931, 0.099864069, 0.109865083, 0.119866236, 0.12986725, 0.139868403, 0.149869403, 0.159870556, 0.169871583, 0.1798727...</msg>
<status status="PASS" starttime="20201112 09:45:32.880" endtime="20201112 09:45:32.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.944" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:45:32.941" endtime="20201112 09:45:32.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.948" level="INFO">VALUE: 0.039823236</msg>
<status status="PASS" starttime="20201112 09:45:32.946" endtime="20201112 09:45:32.949"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.935" endtime="20201112 09:45:32.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.962" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:32.959" endtime="20201112 09:45:32.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.967" level="INFO">VALUE: [0.049858625, 0.059859764, 0.069860778, 0.079861931, 0.089862931, 0.099864069, 0.109865083, 0.119866236, 0.12986725, 0.139868403, 0.149869403, 0.159870556, 0.169871583, 0.17987275, 0.189873764, 0.199874889, 0.209875889, 0.219877042, 0.229878069, 0.239879222, 0.249880222, 0.259881375, 0.269882375, 0.279883542, 0.289884542, 0.299885694, 0.309886736, 0.319887861, 0.329888875, 0.339890028, 0.349891069, 0.359892181, 0.369893194, 0.379894347, 0.389895361, 0.399896569, 0.409897569, 0.419898681, 0.429899694, 0.439900917, 0.449901861, 0.459903014, 0.469904014, 0.479905167, 0.489906181, 0.499907333, 0.509908347, 0.519909514, 0.529910514, 0.539911694, 0.549912681, 0.559913833, 0.569914833, 0.579916, 0.589917014, 0.599918153, 0.609919181, 0.619920319, 0.629921347, 0.639922486, 0.6499235, 0.659924653, 0.669925653, 0.679926806, 0.689927833, 0.699928972, 0.709929986, 0.719931139, 0.729932194, 0.739933333, 0.749934319, 0.759935486, 0.769936486, 0.779937639, 0.789938653, 0.799939806, 0.809940819, 0.819941958, 0.829942972, 0.839944125, 0.849945167, 0.859946292, 0.869947306, 0.879948458, 0.889949472, 0.899950625, 0.909951653, 0.919952847, 0.929953806, 0.939954944, 0.949955958, 0.959957111, 0.969958125, 0.979959278, 0.989960292, 0.999961458, 1.009962458, 1.019963639, 1.029964681, 1.039965778] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:32.964" endtime="20201112 09:45:32.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.952" endtime="20201112 09:45:32.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:32.976" endtime="20201112 09:45:32.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:32.984" endtime="20201112 09:45:33.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.980" endtime="20201112 09:45:33.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.971" endtime="20201112 09:45:33.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.316" endtime="20201112 09:45:33.010"></status>
</kw>
<msg timestamp="20201112 09:45:33.011" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:33.032" endtime="20201112 09:45:35.151"></status>
</kw>
<msg timestamp="20201112 09:45:35.153" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 30438294, 'wakeups': [30448329, 30458328, 30468328, 30478328, 30488328...</msg>
<status status="PASS" starttime="20201112 09:45:33.028" endtime="20201112 09:45:35.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.160" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 30438294, 'wakeups': [30448329, 30458328, 30468328, 30478328, 30488328...</msg>
<status status="PASS" starttime="20201112 09:45:35.155" endtime="20201112 09:45:35.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:35.162" endtime="20201112 09:45:35.166"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:33.021" endtime="20201112 09:45:35.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:33.016" endtime="20201112 09:45:35.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:35.176" level="INFO">${RESULT} = {'wakeups': [30448329, 30458328, 30468328, 30478328, 30488328, 30498328, 30508328, 30518328, 30528328, 30538328, 30548328, 30558328, 30568328, 30578328, 30588328, 30598328, 30608328, 30618328, 3062832...</msg>
<status status="PASS" starttime="20201112 09:45:35.171" endtime="20201112 09:45:35.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.186" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:35.184" endtime="20201112 09:45:35.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.191" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:35.189" endtime="20201112 09:45:35.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.177" endtime="20201112 09:45:35.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.204" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:45:35.201" endtime="20201112 09:45:35.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.208" level="INFO">VALUE: 30438294</msg>
<status status="PASS" starttime="20201112 09:45:35.206" endtime="20201112 09:45:35.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.195" endtime="20201112 09:45:35.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.221" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:35.219" endtime="20201112 09:45:35.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.226" level="INFO">VALUE: [30448329, 30458328, 30468328, 30478328, 30488328, 30498328, 30508328, 30518328, 30528328, 30538328, 30548328, 30558328, 30568328, 30578328, 30588328, 30598328, 30608328, 30618328, 30628328, 30638328, 30648328, 30658328, 30668328, 30678328, 30688328, 30698328, 30708328, 30718328, 30728328, 30738328, 30748328, 30758328, 30768328, 30778328, 30788328, 30798328, 30808328, 30818328, 30828328, 30838328, 30848328, 30858328, 30868328, 30878328, 30888328, 30898328, 30908328, 30918328, 30928328, 30938328, 30948328, 30958328, 30968328, 30978328, 30988328, 30998328, 31008328, 31018328, 31028328, 31038328, 31048328, 31058328, 31068328, 31078328, 31088328, 31098328, 31108328, 31118328, 31128328, 31138328, 31148328, 31158328, 31168328, 31178328, 31188328, 31198328, 31208328, 31218328, 31228328, 31238328, 31248328, 31258328, 31268328, 31278328, 31288328, 31298328, 31308328, 31318328, 31328328, 31338328, 31348328, 31358328, 31368328, 31378328, 31388328, 31398328, 31408328, 31418328, 31428328, 31438328]</msg>
<status status="PASS" starttime="20201112 09:45:35.223" endtime="20201112 09:45:35.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.212" endtime="20201112 09:45:35.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:35.245" endtime="20201112 09:45:35.589"></status>
</kw>
<msg timestamp="20201112 09:45:35.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039014722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049050778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:35.242" endtime="20201112 09:45:35.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039014722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049050778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:35.598" endtime="20201112 09:45:35.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:35.615" endtime="20201112 09:45:35.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.235" endtime="20201112 09:45:35.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.230" endtime="20201112 09:45:35.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:35.644" level="INFO">${RESULT} = {'time': [0.039014722, 0.049050778, 0.059050903, 0.069051917, 0.079053097, 0.089054097, 0.099055208, 0.109056222, 0.119057389, 0.129058375, 0.139059528, 0.149060542, 0.159061694, 0.169062708, 0.179063...</msg>
<status status="PASS" starttime="20201112 09:45:35.621" endtime="20201112 09:45:35.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.649" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:45:35.648" endtime="20201112 09:45:35.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.652" level="INFO">VALUE: 0.039014722</msg>
<status status="PASS" starttime="20201112 09:45:35.651" endtime="20201112 09:45:35.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.645" endtime="20201112 09:45:35.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.658" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:35.657" endtime="20201112 09:45:35.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.661" level="INFO">VALUE: [0.049050778, 0.059050903, 0.069051917, 0.079053097, 0.089054097, 0.099055208, 0.109056222, 0.119057389, 0.129058375, 0.139059528, 0.149060542, 0.159061694, 0.169062708, 0.179063847, 0.189064861, 0.199066014, 0.209067028, 0.219068167, 0.229069181, 0.239070333, 0.249071361, 0.2590725, 0.269073514, 0.279074722, 0.289075708, 0.299076819, 0.309077875, 0.319078972, 0.329079986, 0.339081153, 0.349082153, 0.359083306, 0.369084306, 0.379085458, 0.389086472, 0.399087625, 0.409088639, 0.419089861, 0.429090792, 0.439091958, 0.449092972, 0.459094111, 0.469095125, 0.479096264, 0.489097278, 0.499098444, 0.509099472, 0.519100611, 0.529101611, 0.53910275, 0.549103764, 0.559104917, 0.569105944, 0.579107111, 0.589108097, 0.59910925, 0.60911025, 0.619111403, 0.629112417, 0.639113611, 0.649114597, 0.65911575, 0.669116736, 0.679117889, 0.689118917, 0.699120056, 0.709121069, 0.71912225, 0.729123236, 0.739124389, 0.749125389, 0.759126542, 0.769127569, 0.779128708, 0.789129722, 0.799130875, 0.809131875, 0.819133028, 0.829134042, 0.839135208, 0.849136208, 0.859137361, 0.869138389, 0.879139569, 0.889140556, 0.899141708, 0.909142694, 0.919143847, 0.929144861, 0.939146014, 0.949147028, 0.959148167, 0.969149194, 0.979150347, 0.989151347, 0.9991525, 1.0091535, 1.019154667, 1.029155681, 1.039156861] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:35.659" endtime="20201112 09:45:35.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.653" endtime="20201112 09:45:35.662"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:35.665" endtime="20201112 09:45:35.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:35.669" endtime="20201112 09:45:35.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.667" endtime="20201112 09:45:35.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.663" endtime="20201112 09:45:35.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:33.012" endtime="20201112 09:45:35.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.583" endtime="20201112 09:45:35.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.582" endtime="20201112 09:45:35.691"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:35.694" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:35.704" endtime="20201112 09:45:37.821"></status>
</kw>
<msg timestamp="20201112 09:45:37.822" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33108356, 'wakeups': [33118400, 33128401, 33138401, 33148401, 33158401...</msg>
<status status="PASS" starttime="20201112 09:45:35.702" endtime="20201112 09:45:37.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.829" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33108356, 'wakeups': [33118400, 33128401, 33138401, 33148401, 33158401...</msg>
<status status="PASS" starttime="20201112 09:45:37.824" endtime="20201112 09:45:37.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:37.832" endtime="20201112 09:45:37.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.699" endtime="20201112 09:45:37.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.696" endtime="20201112 09:45:37.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:37.847" level="INFO">${RESULT} = {'wakeups': [33118400, 33128401, 33138401, 33148401, 33158401, 33168401, 33178401, 33188401, 33198401, 33208401, 33218401, 33228401, 33238401, 33248401, 33258401, 33268401, 33278401, 33288401, 3329840...</msg>
<status status="PASS" starttime="20201112 09:45:37.842" endtime="20201112 09:45:37.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.857" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:37.855" endtime="20201112 09:45:37.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.862" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:37.859" endtime="20201112 09:45:37.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:37.848" endtime="20201112 09:45:37.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.874" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:37.872" endtime="20201112 09:45:37.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.879" level="INFO">VALUE: 33108356</msg>
<status status="PASS" starttime="20201112 09:45:37.877" endtime="20201112 09:45:37.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:37.865" endtime="20201112 09:45:37.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.896" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:37.894" endtime="20201112 09:45:37.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.901" level="INFO">VALUE: [33118400, 33128401, 33138401, 33148401, 33158401, 33168401, 33178401, 33188401, 33198401, 33208401, 33218401, 33228401, 33238401, 33248401, 33258401, 33268401, 33278401, 33288401, 33298401, 33308401, 33318401, 33328401, 33338401, 33348401, 33358401, 33368401, 33378401, 33388401, 33398401, 33408401, 33418401, 33428401, 33438401, 33448401, 33458401, 33468401, 33478401, 33488401, 33498401, 33508401, 33518401, 33528401, 33538401, 33548401, 33558401, 33568401, 33578401, 33588401, 33598401, 33608401, 33618401, 33628401, 33638401, 33648401, 33658401, 33668401, 33678401, 33688401, 33698401, 33708401, 33718401, 33728401, 33738401, 33748401, 33758401, 33768401, 33778401, 33788401, 33798401, 33808401, 33818401, 33828401, 33838401, 33848401, 33858401, 33868401, 33878401, 33888401, 33898401, 33908401, 33918401, 33928401, 33938401, 33948401, 33958401, 33968401, 33978401, 33988401, 33998401, 34008401, 34018401, 34028401, 34038401, 34048401, 34058401, 34068401, 34078401, 34088401, 34098401, 34108401]</msg>
<status status="PASS" starttime="20201112 09:45:37.898" endtime="20201112 09:45:37.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:37.882" endtime="20201112 09:45:37.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:37.920" endtime="20201112 09:45:38.262"></status>
</kw>
<msg timestamp="20201112 09:45:38.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024774472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034821014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:37.917" endtime="20201112 09:45:38.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:38.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024774472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034821014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:38.271" endtime="20201112 09:45:38.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:38.288" endtime="20201112 09:45:38.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:37.909" endtime="20201112 09:45:38.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:37.905" endtime="20201112 09:45:38.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:38.350" level="INFO">${RESULT} = {'time': [0.024774472, 0.034821014, 0.044822222, 0.054823222, 0.064824361, 0.074825375, 0.084826528, 0.094827569, 0.104828681, 0.114829708, 0.124830847, 0.134831847, 0.144833014, 0.154834014, 0.164835...</msg>
<status status="PASS" starttime="20201112 09:45:38.297" endtime="20201112 09:45:38.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:38.361" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:38.359" endtime="20201112 09:45:38.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:38.366" level="INFO">VALUE: 0.024774472</msg>
<status status="PASS" starttime="20201112 09:45:38.364" endtime="20201112 09:45:38.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:38.352" endtime="20201112 09:45:38.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:38.380" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:38.377" endtime="20201112 09:45:38.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:38.384" level="INFO">VALUE: [0.034821014, 0.044822222, 0.054823222, 0.064824361, 0.074825375, 0.084826528, 0.094827569, 0.104828681, 0.114829708, 0.124830847, 0.134831847, 0.144833014, 0.154834014, 0.164835167, 0.174836167, 0.184837319, 0.194838333, 0.204839472, 0.214840486, 0.224841639, 0.234842667, 0.244843792, 0.254844806, 0.264845958, 0.274846972, 0.284848111, 0.294849125, 0.304850278, 0.314851292, 0.324852444, 0.334853458, 0.344854597, 0.354855611, 0.364856764, 0.374857778, 0.384858917, 0.394859986, 0.404861097, 0.414862097, 0.424863236, 0.43486425, 0.444865403, 0.454866403, 0.464867569, 0.474868569, 0.484869722, 0.494870736, 0.504871875, 0.514872889, 0.524874042, 0.534875083, 0.544876208, 0.554877208, 0.564878361, 0.574879375, 0.584880542, 0.594881569, 0.604882681, 0.614883708, 0.624884847, 0.634885875, 0.644887014, 0.654888014, 0.664889167, 0.674890181, 0.684891347, 0.694892375, 0.704893514, 0.7148945, 0.724895653, 0.734896681, 0.744897819, 0.754898833, 0.764899972, 0.774901, 0.784902153, 0.794903167, 0.804904361, 0.814905319, 0.824906486, 0.834907486, 0.844908625, 0.854909653, 0.864910806, 0.874911792, 0.884913014, 0.894913958, 0.904915111, 0.914916125, 0.924917278, 0.934918292, 0.944919431, 0.954920472, 0.964921611, 0.974922597, 0.984923764, 0.994924778, 1.004925931, 1.014926931, 1.024928139] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:38.382" endtime="20201112 09:45:38.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:38.370" endtime="20201112 09:45:38.387"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:38.393" endtime="20201112 09:45:38.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:38.403" endtime="20201112 09:45:38.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:38.398" endtime="20201112 09:45:38.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:38.389" endtime="20201112 09:45:38.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.694" endtime="20201112 09:45:38.428"></status>
</kw>
<msg timestamp="20201112 09:45:38.429" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:38.450" endtime="20201112 09:45:40.569"></status>
</kw>
<msg timestamp="20201112 09:45:40.570" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 35856304, 'wakeups': [35866349, 35876349, 35886349, 35896349, 35906349...</msg>
<status status="PASS" starttime="20201112 09:45:38.447" endtime="20201112 09:45:40.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:40.577" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 35856304, 'wakeups': [35866349, 35876349, 35886349, 35896349, 35906349...</msg>
<status status="PASS" starttime="20201112 09:45:40.573" endtime="20201112 09:45:40.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:40.580" endtime="20201112 09:45:40.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:38.439" endtime="20201112 09:45:40.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:38.434" endtime="20201112 09:45:40.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:40.593" level="INFO">${RESULT} = {'wakeups': [35866349, 35876349, 35886349, 35896349, 35906349, 35916349, 35926349, 35936349, 35946349, 35956349, 35966349, 35976349, 35986349, 35996349, 36006349, 36016349, 36026349, 36036349, 3604634...</msg>
<status status="PASS" starttime="20201112 09:45:40.588" endtime="20201112 09:45:40.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:40.603" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:40.601" endtime="20201112 09:45:40.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:40.608" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:40.606" endtime="20201112 09:45:40.609"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:40.595" endtime="20201112 09:45:40.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:40.616" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:40.615" endtime="20201112 09:45:40.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:40.618" level="INFO">VALUE: 35856304</msg>
<status status="PASS" starttime="20201112 09:45:40.617" endtime="20201112 09:45:40.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:40.612" endtime="20201112 09:45:40.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:40.624" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:40.623" endtime="20201112 09:45:40.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:40.627" level="INFO">VALUE: [35866349, 35876349, 35886349, 35896349, 35906349, 35916349, 35926349, 35936349, 35946349, 35956349, 35966349, 35976349, 35986349, 35996349, 36006349, 36016349, 36026349, 36036349, 36046349, 36056349, 36066349, 36076349, 36086349, 36096349, 36106349, 36116349, 36126349, 36136349, 36146349, 36156349, 36166349, 36176349, 36186349, 36196349, 36206349, 36216349, 36226349, 36236349, 36246349, 36256349, 36266349, 36276349, 36286349, 36296349, 36306349, 36316349, 36326349, 36336349, 36346349, 36356349, 36366349, 36376349, 36386349, 36396349, 36406349, 36416349, 36426349, 36436349, 36446349, 36456349, 36466349, 36476349, 36486349, 36496349, 36506349, 36516349, 36526349, 36536349, 36546349, 36556349, 36566349, 36576349, 36586349, 36596349, 36606349, 36616349, 36626349, 36636349, 36646349, 36656349, 36666349, 36676349, 36686349, 36696349, 36706349, 36716349, 36726349, 36736349, 36746349, 36756349, 36766349, 36776349, 36786349, 36796349, 36806349, 36816349, 36826349, 36836349, 36846349, 36856349]</msg>
<status status="PASS" starttime="20201112 09:45:40.625" endtime="20201112 09:45:40.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:40.620" endtime="20201112 09:45:40.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:40.637" endtime="20201112 09:45:40.957"></status>
</kw>
<msg timestamp="20201112 09:45:40.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038682569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048729389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:40.635" endtime="20201112 09:45:40.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:40.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038682569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048729389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:40.966" endtime="20201112 09:45:40.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:40.983" endtime="20201112 09:45:40.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:40.632" endtime="20201112 09:45:40.988"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:40.628" endtime="20201112 09:45:40.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:41.045" level="INFO">${RESULT} = {'time': [0.038682569, 0.048729389, 0.058729611, 0.068730639, 0.078731792, 0.088732806, 0.098733931, 0.108734944, 0.118736083, 0.128737097, 0.13873825, 0.148739264, 0.158740417, 0.168741403, 0.1787425...</msg>
<status status="PASS" starttime="20201112 09:45:40.991" endtime="20201112 09:45:41.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.056" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:41.054" endtime="20201112 09:45:41.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.061" level="INFO">VALUE: 0.038682569</msg>
<status status="PASS" starttime="20201112 09:45:41.058" endtime="20201112 09:45:41.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.047" endtime="20201112 09:45:41.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.074" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:41.072" endtime="20201112 09:45:41.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.079" level="INFO">VALUE: [0.048729389, 0.058729611, 0.068730639, 0.078731792, 0.088732806, 0.098733931, 0.108734944, 0.118736083, 0.128737097, 0.13873825, 0.148739264, 0.158740417, 0.168741403, 0.178742556, 0.188743569, 0.198744708, 0.208745722, 0.218746875, 0.228747875, 0.238749028, 0.248750042, 0.258751194, 0.268752194, 0.278753361, 0.288754361, 0.2987555, 0.308756528, 0.318757681, 0.328758694, 0.338759819, 0.348760833, 0.358762014, 0.368762986, 0.378764139, 0.388765167, 0.398766292, 0.408767333, 0.418768472, 0.428769458, 0.438770611, 0.448771625, 0.458772778, 0.468773778, 0.478774931, 0.488775958, 0.498777111, 0.508778111, 0.51877925, 0.528780264, 0.538781472, 0.548782431, 0.558783569, 0.568784583, 0.578785764, 0.588786736, 0.598787889, 0.608788944, 0.618790056, 0.628791111, 0.638792208, 0.648793278, 0.658794417, 0.668795389, 0.678796528, 0.688797542, 0.698798694, 0.708799722, 0.718800847, 0.728801861, 0.738803028, 0.748804014, 0.758805167, 0.768806194, 0.778807333, 0.788808333, 0.7988095, 0.8088105, 0.818811653, 0.828812653, 0.838813806, 0.848814833, 0.858815972, 0.868816972, 0.878818167, 0.888819194, 0.898820306, 0.908821361, 0.918822444, 0.928823458, 0.938824625, 0.948825625, 0.958826778, 0.968827778, 0.978828931, 0.988829958, 0.998831097, 1.008832125, 1.018833264, 1.028834278, 1.038835403] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:41.077" endtime="20201112 09:45:41.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.064" endtime="20201112 09:45:41.082"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:41.088" endtime="20201112 09:45:41.091"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:41.096" endtime="20201112 09:45:41.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.092" endtime="20201112 09:45:41.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.083" endtime="20201112 09:45:41.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:38.430" endtime="20201112 09:45:41.122"></status>
</kw>
<msg timestamp="20201112 09:45:41.123" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:41.145" endtime="20201112 09:45:43.265"></status>
</kw>
<msg timestamp="20201112 09:45:43.266" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 38551742, 'wakeups': [38561786, 38571787, 38581787, 38591787, 38601787...</msg>
<status status="PASS" starttime="20201112 09:45:41.142" endtime="20201112 09:45:43.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.278" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 38551742, 'wakeups': [38561786, 38571787, 38581787, 38591787, 38601787...</msg>
<status status="PASS" starttime="20201112 09:45:43.268" endtime="20201112 09:45:43.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:43.280" endtime="20201112 09:45:43.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.133" endtime="20201112 09:45:43.286"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.128" endtime="20201112 09:45:43.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:43.294" level="INFO">${RESULT} = {'wakeups': [38561786, 38571787, 38581787, 38591787, 38601787, 38611787, 38621787, 38631787, 38641787, 38651787, 38661787, 38671787, 38681787, 38691787, 38701787, 38711787, 38721787, 38731787, 3874178...</msg>
<status status="PASS" starttime="20201112 09:45:43.289" endtime="20201112 09:45:43.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.304" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:43.302" endtime="20201112 09:45:43.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.309" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:43.307" endtime="20201112 09:45:43.309"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:43.296" endtime="20201112 09:45:43.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.321" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:43.319" endtime="20201112 09:45:43.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.326" level="INFO">VALUE: 38551742</msg>
<status status="PASS" starttime="20201112 09:45:43.324" endtime="20201112 09:45:43.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:43.312" endtime="20201112 09:45:43.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.339" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:43.336" endtime="20201112 09:45:43.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.344" level="INFO">VALUE: [38561786, 38571787, 38581787, 38591787, 38601787, 38611787, 38621787, 38631787, 38641787, 38651787, 38661787, 38671787, 38681787, 38691787, 38701787, 38711787, 38721787, 38731787, 38741787, 38751787, 38761787, 38771787, 38781787, 38791787, 38801787, 38811787, 38821787, 38831787, 38841787, 38851787, 38861787, 38871787, 38881787, 38891787, 38901787, 38911787, 38921787, 38931787, 38941787, 38951787, 38961787, 38971787, 38981787, 38991787, 39001787, 39011787, 39021787, 39031787, 39041787, 39051787, 39061787, 39071787, 39081787, 39091787, 39101787, 39111787, 39121787, 39131787, 39141787, 39151787, 39161787, 39171787, 39181787, 39191787, 39201787, 39211787, 39221787, 39231787, 39241787, 39251787, 39261787, 39271787, 39281787, 39291787, 39301787, 39311787, 39321787, 39331787, 39341787, 39351787, 39361787, 39371787, 39381787, 39391787, 39401787, 39411787, 39421787, 39431787, 39441787, 39451787, 39461787, 39471787, 39481787, 39491787, 39501787, 39511787, 39521787, 39531787, 39541787, 39551787]</msg>
<status status="PASS" starttime="20201112 09:45:43.341" endtime="20201112 09:45:43.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:43.330" endtime="20201112 09:45:43.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:43.363" endtime="20201112 09:45:43.705"></status>
</kw>
<msg timestamp="20201112 09:45:43.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040268903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050315417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:43.360" endtime="20201112 09:45:43.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040268903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050315417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:43.714" endtime="20201112 09:45:43.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:43.731" endtime="20201112 09:45:43.735"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:43.352" endtime="20201112 09:45:43.737"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:43.347" endtime="20201112 09:45:43.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:43.794" level="INFO">${RESULT} = {'time': [0.040268903, 0.050315417, 0.060316639, 0.070317667, 0.080318819, 0.090319833, 0.100320986, 0.110322, 0.120323167, 0.130324167, 0.140325333, 0.150326347, 0.160327486, 0.1703285, 0.180329667, ...</msg>
<status status="PASS" starttime="20201112 09:45:43.740" endtime="20201112 09:45:43.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.806" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:43.803" endtime="20201112 09:45:43.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.810" level="INFO">VALUE: 0.040268903</msg>
<status status="PASS" starttime="20201112 09:45:43.808" endtime="20201112 09:45:43.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:43.797" endtime="20201112 09:45:43.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.824" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:43.822" endtime="20201112 09:45:43.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.828" level="INFO">VALUE: [0.050315417, 0.060316639, 0.070317667, 0.080318819, 0.090319833, 0.100320986, 0.110322, 0.120323167, 0.130324167, 0.140325333, 0.150326347, 0.160327486, 0.1703285, 0.180329667, 0.190330667, 0.200331833, 0.210332833, 0.220334, 0.230335014, 0.240336181, 0.250337181, 0.260338347, 0.270339347, 0.2803405, 0.290341514, 0.300342681, 0.310343681, 0.320344833, 0.330345861, 0.340347014, 0.350348042, 0.36034925, 0.370350194, 0.380351347, 0.390352444, 0.400353528, 0.410354528, 0.420355736, 0.430356736, 0.440357861, 0.450358875, 0.460360028, 0.470361042, 0.480362194, 0.490363208, 0.500364375, 0.510365389, 0.520366542, 0.530367556, 0.540368708, 0.550369736, 0.560370875, 0.570371889, 0.580373056, 0.590374125, 0.600375222, 0.61037625, 0.620377389, 0.630378417, 0.640379583, 0.650380583, 0.660381736, 0.670382764, 0.680383931, 0.690384917, 0.700386083, 0.710387111, 0.720388264, 0.730389264, 0.740390431, 0.750391431, 0.760392583, 0.770393625, 0.780394778, 0.790395778, 0.800396944, 0.810397944, 0.820399111, 0.830400125, 0.840401306, 0.850402306, 0.860403444, 0.870404458, 0.880405653, 0.890406639, 0.900407806, 0.910408806, 0.920409958, 0.930410986, 0.940412139, 0.950413139, 0.960414306, 0.970415319, 0.980416472, 0.9904175, 1.000418639, 1.010419653, 1.020420819, 1.030421861, 1.040422986] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:43.826" endtime="20201112 09:45:43.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:43.814" endtime="20201112 09:45:43.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:43.838" endtime="20201112 09:45:43.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:43.846" endtime="20201112 09:45:43.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:43.842" endtime="20201112 09:45:43.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:43.833" endtime="20201112 09:45:43.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.124" endtime="20201112 09:45:43.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.692" endtime="20201112 09:45:43.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.691" endtime="20201112 09:45:43.873"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:43.879" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:43.902" endtime="20201112 09:45:46.022"></status>
</kw>
<msg timestamp="20201112 09:45:46.023" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41308062, 'wakeups': [41318119, 41328118, 41338118, 41348118, 41358118...</msg>
<status status="PASS" starttime="20201112 09:45:43.898" endtime="20201112 09:45:46.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:46.030" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41308062, 'wakeups': [41318119, 41328118, 41338118, 41348118, 41358118...</msg>
<status status="PASS" starttime="20201112 09:45:46.025" endtime="20201112 09:45:46.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:46.032" endtime="20201112 09:45:46.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:43.891" endtime="20201112 09:45:46.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:43.885" endtime="20201112 09:45:46.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:46.044" level="INFO">${RESULT} = {'wakeups': [41318119, 41328118, 41338118, 41348118, 41358118, 41368118, 41378118, 41388118, 41398118, 41408118, 41418118, 41428118, 41438118, 41448118, 41458118, 41468118, 41478118, 41488118, 4149811...</msg>
<status status="PASS" starttime="20201112 09:45:46.041" endtime="20201112 09:45:46.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:46.049" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:46.048" endtime="20201112 09:45:46.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:46.052" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:46.051" endtime="20201112 09:45:46.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:46.045" endtime="20201112 09:45:46.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:46.058" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:46.057" endtime="20201112 09:45:46.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:46.060" level="INFO">VALUE: 41308062</msg>
<status status="PASS" starttime="20201112 09:45:46.059" endtime="20201112 09:45:46.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:46.053" endtime="20201112 09:45:46.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:46.066" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:46.065" endtime="20201112 09:45:46.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:46.068" level="INFO">VALUE: [41318119, 41328118, 41338118, 41348118, 41358118, 41368118, 41378118, 41388118, 41398118, 41408118, 41418118, 41428118, 41438118, 41448118, 41458118, 41468118, 41478118, 41488118, 41498118, 41508118, 41518118, 41528118, 41538118, 41548118, 41558118, 41568118, 41578118, 41588118, 41598118, 41608118, 41618118, 41628118, 41638118, 41648118, 41658118, 41668118, 41678118, 41688118, 41698118, 41708118, 41718118, 41728118, 41738118, 41748118, 41758118, 41768118, 41778118, 41788118, 41798118, 41808118, 41818118, 41828118, 41838118, 41848118, 41858118, 41868118, 41878118, 41888118, 41898118, 41908118, 41918118, 41928118, 41938118, 41948118, 41958118, 41968118, 41978118, 41988118, 41998118, 42008118, 42018118, 42028118, 42038118, 42048118, 42058118, 42068118, 42078118, 42088118, 42098118, 42108118, 42118118, 42128118, 42138118, 42148118, 42158118, 42168118, 42178118, 42188118, 42198118, 42208118, 42218118, 42228118, 42238118, 42248118, 42258118, 42268118, 42278118, 42288118, 42298118, 42308118]</msg>
<status status="PASS" starttime="20201112 09:45:46.067" endtime="20201112 09:45:46.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:46.062" endtime="20201112 09:45:46.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:46.078" endtime="20201112 09:45:46.371"></status>
</kw>
<msg timestamp="20201112 09:45:46.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047016417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057075194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:46.077" endtime="20201112 09:45:46.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:46.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047016417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057075194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:46.375" endtime="20201112 09:45:46.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:46.383" endtime="20201112 09:45:46.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:46.073" endtime="20201112 09:45:46.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:46.071" endtime="20201112 09:45:46.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:46.410" level="INFO">${RESULT} = {'time': [0.047016417, 0.057075194, 0.067075153, 0.077076194, 0.087077375, 0.097078347, 0.107079486, 0.1170805, 0.127081653, 0.137082681, 0.147083819, 0.157084847, 0.167086, 0.177087, 0.187088167, 0.1...</msg>
<status status="PASS" starttime="20201112 09:45:46.387" endtime="20201112 09:45:46.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:46.416" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:46.415" endtime="20201112 09:45:46.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:46.418" level="INFO">VALUE: 0.047016417</msg>
<status status="PASS" starttime="20201112 09:45:46.417" endtime="20201112 09:45:46.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:46.411" endtime="20201112 09:45:46.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:46.424" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:46.423" endtime="20201112 09:45:46.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:46.427" level="INFO">VALUE: [0.057075194, 0.067075153, 0.077076194, 0.087077375, 0.097078347, 0.107079486, 0.1170805, 0.127081653, 0.137082681, 0.147083819, 0.157084847, 0.167086, 0.177087, 0.187088167, 0.197089181, 0.207090347, 0.217091361, 0.2270925, 0.237093514, 0.247094708, 0.257095694, 0.267096847, 0.277097847, 0.287099, 0.297100014, 0.307101167, 0.317102181, 0.327103347, 0.337104347, 0.347105514, 0.357106542, 0.367107681, 0.377108694, 0.387109847, 0.397110861, 0.407112028, 0.417113028, 0.427114181, 0.437115194, 0.447116403, 0.457117375, 0.467118528, 0.477119542, 0.487120764, 0.49712175, 0.507122889, 0.517123875, 0.527125042, 0.537126056, 0.547127236, 0.557128222, 0.567129375, 0.577130444, 0.587131542, 0.597132597, 0.607133736, 0.617134736, 0.627135889, 0.637136903, 0.647138056, 0.657139069, 0.667140236, 0.677141264, 0.687142417, 0.697143431, 0.707144569, 0.717145583, 0.727146819, 0.737147764, 0.747148917, 0.757149931, 0.767151083, 0.777152097, 0.78715325, 0.797154278, 0.807155431, 0.817156444, 0.827157597, 0.837158611, 0.847159764, 0.857160778, 0.867161931, 0.877162958, 0.887164153, 0.897165125, 0.907166278, 0.917167306, 0.927168458, 0.937169472, 0.947170639, 0.957171639, 0.967172792, 0.977173806, 0.987174972, 0.997175972, 1.007177139, 1.017178153, 1.027179306, 1.037180333, 1.047181472] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:46.425" endtime="20201112 09:45:46.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:46.420" endtime="20201112 09:45:46.428"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:46.431" endtime="20201112 09:45:46.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:46.435" endtime="20201112 09:45:46.455"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:46.433" endtime="20201112 09:45:46.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:46.429" endtime="20201112 09:45:46.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:43.881" endtime="20201112 09:45:46.457"></status>
</kw>
<msg timestamp="20201112 09:45:46.457" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:46.468" endtime="20201112 09:45:48.585"></status>
</kw>
<msg timestamp="20201112 09:45:48.587" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43872243, 'wakeups': [43882299, 43892299, 43902299, 43912299, 43922299...</msg>
<status status="PASS" starttime="20201112 09:45:46.466" endtime="20201112 09:45:48.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:48.594" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43872243, 'wakeups': [43882299, 43892299, 43902299, 43912299, 43922299...</msg>
<status status="PASS" starttime="20201112 09:45:48.589" endtime="20201112 09:45:48.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:48.596" endtime="20201112 09:45:48.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:46.463" endtime="20201112 09:45:48.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:46.459" endtime="20201112 09:45:48.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:48.603" level="INFO">${RESULT} = {'wakeups': [43882299, 43892299, 43902299, 43912299, 43922299, 43932299, 43942299, 43952299, 43962299, 43972299, 43982299, 43992299, 44002299, 44012299, 44022299, 44032299, 44042299, 44052299, 4406229...</msg>
<status status="PASS" starttime="20201112 09:45:48.601" endtime="20201112 09:45:48.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:48.608" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:48.607" endtime="20201112 09:45:48.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:48.611" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:48.609" endtime="20201112 09:45:48.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:48.604" endtime="20201112 09:45:48.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:48.617" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:48.615" endtime="20201112 09:45:48.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:48.619" level="INFO">VALUE: 43872243</msg>
<status status="PASS" starttime="20201112 09:45:48.618" endtime="20201112 09:45:48.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:48.612" endtime="20201112 09:45:48.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:48.625" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:48.624" endtime="20201112 09:45:48.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:48.627" level="INFO">VALUE: [43882299, 43892299, 43902299, 43912299, 43922299, 43932299, 43942299, 43952299, 43962299, 43972299, 43982299, 43992299, 44002299, 44012299, 44022299, 44032299, 44042299, 44052299, 44062299, 44072299, 44082299, 44092299, 44102299, 44112299, 44122299, 44132299, 44142299, 44152299, 44162299, 44172299, 44182299, 44192299, 44202299, 44212299, 44222299, 44232299, 44242299, 44252299, 44262299, 44272299, 44282299, 44292299, 44302299, 44312299, 44322299, 44332299, 44342299, 44352299, 44362299, 44372299, 44382299, 44392299, 44402299, 44412299, 44422299, 44432299, 44442299, 44452299, 44462299, 44472299, 44482299, 44492299, 44502299, 44512299, 44522299, 44532299, 44542299, 44552299, 44562299, 44572299, 44582299, 44592299, 44602299, 44612299, 44622299, 44632299, 44642299, 44652299, 44662299, 44672299, 44682299, 44692299, 44702299, 44712299, 44722299, 44732299, 44742299, 44752299, 44762299, 44772299, 44782299, 44792299, 44802299, 44812299, 44822299, 44832299, 44842299, 44852299, 44862299, 44872299]</msg>
<status status="PASS" starttime="20201112 09:45:48.626" endtime="20201112 09:45:48.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:48.621" endtime="20201112 09:45:48.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:48.641" endtime="20201112 09:45:48.982"></status>
</kw>
<msg timestamp="20201112 09:45:48.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022717403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032775569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:48.639" endtime="20201112 09:45:48.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:49.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022717403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032775569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:48.991" endtime="20201112 09:45:49.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:49.009" endtime="20201112 09:45:49.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:48.635" endtime="20201112 09:45:49.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:48.629" endtime="20201112 09:45:49.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:49.073" level="INFO">${RESULT} = {'time': [0.022717403, 0.032775569, 0.042776472, 0.052777472, 0.062778653, 0.072779653, 0.082780806, 0.092781833, 0.102782958, 0.112784, 0.122785125, 0.132786153, 0.142787319, 0.152788347, 0.162789472...</msg>
<status status="PASS" starttime="20201112 09:45:49.017" endtime="20201112 09:45:49.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:49.084" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:49.081" endtime="20201112 09:45:49.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:49.088" level="INFO">VALUE: 0.022717403</msg>
<status status="PASS" starttime="20201112 09:45:49.086" endtime="20201112 09:45:49.089"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:49.075" endtime="20201112 09:45:49.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:49.102" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:49.100" endtime="20201112 09:45:49.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:49.107" level="INFO">VALUE: [0.032775569, 0.042776472, 0.052777472, 0.062778653, 0.072779653, 0.082780806, 0.092781833, 0.102782958, 0.112784, 0.122785125, 0.132786153, 0.142787319, 0.152788347, 0.162789472, 0.172790472, 0.182791625, 0.192792639, 0.202793792, 0.212794806, 0.222795986, 0.232796958, 0.242798139, 0.252799125, 0.262800292, 0.272801292, 0.282802444, 0.292803458, 0.302804625, 0.312805625, 0.322806778, 0.332807806, 0.342808944, 0.352809958, 0.362811125, 0.372812139, 0.382813319, 0.392814292, 0.402815472, 0.412816472, 0.422817625, 0.432818653, 0.442819792, 0.452820819, 0.462821972, 0.472822972, 0.482824125, 0.492825139, 0.502826306, 0.512827319, 0.522828472, 0.532829472, 0.542830639, 0.552831653, 0.562832806, 0.572833806, 0.582834958, 0.592835972, 0.602837125, 0.612838167, 0.622839306, 0.632840319, 0.642841472, 0.652842486, 0.662843667, 0.672844667, 0.682845806, 0.692846819, 0.702847972, 0.712848986, 0.722850153, 0.732851167, 0.742852306, 0.752853347, 0.762854528, 0.772855528, 0.782856653, 0.792857667, 0.802858819, 0.812859847, 0.822860986, 0.832862, 0.842863167, 0.852864181, 0.862865319, 0.872866347, 0.882867486, 0.8928685, 0.902869667, 0.912870681, 0.922871847, 0.932872889, 0.942874, 0.952875014, 0.962876236, 0.972877181, 0.982878347, 0.992879347, 1.002880528, 1.012881528, 1.022882681] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:49.104" endtime="20201112 09:45:49.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:49.092" endtime="20201112 09:45:49.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:49.116" endtime="20201112 09:45:49.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:49.124" endtime="20201112 09:45:49.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:49.120" endtime="20201112 09:45:49.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:49.111" endtime="20201112 09:45:49.149"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:46.458" endtime="20201112 09:45:49.150"></status>
</kw>
<msg timestamp="20201112 09:45:49.150" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:49.172" endtime="20201112 09:45:51.290"></status>
</kw>
<msg timestamp="20201112 09:45:51.292" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 46577942, 'wakeups': [46587998, 46597998, 46607998, 46617998, 46627998...</msg>
<status status="PASS" starttime="20201112 09:45:49.168" endtime="20201112 09:45:51.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:51.299" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 46577942, 'wakeups': [46587998, 46597998, 46607998, 46617998, 46627998...</msg>
<status status="PASS" starttime="20201112 09:45:51.295" endtime="20201112 09:45:51.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:51.302" endtime="20201112 09:45:51.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:49.161" endtime="20201112 09:45:51.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:49.156" endtime="20201112 09:45:51.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:51.315" level="INFO">${RESULT} = {'wakeups': [46587998, 46597998, 46607998, 46617998, 46627998, 46637998, 46647998, 46657998, 46667998, 46677998, 46687998, 46697998, 46707998, 46717998, 46727998, 46737998, 46747998, 46757998, 4676799...</msg>
<status status="PASS" starttime="20201112 09:45:51.311" endtime="20201112 09:45:51.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:51.326" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:51.323" endtime="20201112 09:45:51.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:51.330" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:51.328" endtime="20201112 09:45:51.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:51.317" endtime="20201112 09:45:51.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:51.343" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:51.341" endtime="20201112 09:45:51.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:51.347" level="INFO">VALUE: 46577942</msg>
<status status="PASS" starttime="20201112 09:45:51.345" endtime="20201112 09:45:51.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:51.334" endtime="20201112 09:45:51.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:51.360" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:51.358" endtime="20201112 09:45:51.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:51.365" level="INFO">VALUE: [46587998, 46597998, 46607998, 46617998, 46627998, 46637998, 46647998, 46657998, 46667998, 46677998, 46687998, 46697998, 46707998, 46717998, 46727998, 46737998, 46747998, 46757998, 46767998, 46777998, 46787998, 46797998, 46807998, 46817998, 46827998, 46837998, 46847998, 46857998, 46867998, 46877998, 46887998, 46897998, 46907998, 46917998, 46927998, 46937998, 46947998, 46957998, 46967998, 46977998, 46987998, 46997998, 47007998, 47017998, 47027998, 47037998, 47047998, 47057998, 47067998, 47077998, 47087998, 47097998, 47107998, 47117998, 47127998, 47137998, 47147998, 47157998, 47167998, 47177998, 47187998, 47197998, 47207998, 47217998, 47227998, 47237998, 47247998, 47257998, 47267998, 47277998, 47287998, 47297998, 47307998, 47317998, 47327998, 47337998, 47347998, 47357998, 47367998, 47377998, 47387998, 47397998, 47407998, 47417998, 47427998, 47437998, 47447998, 47457998, 47467998, 47477998, 47487998, 47497998, 47507998, 47517998, 47527998, 47537998, 47547998, 47557998, 47567998, 47577998]</msg>
<status status="PASS" starttime="20201112 09:45:51.363" endtime="20201112 09:45:51.368"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:51.351" endtime="20201112 09:45:51.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:51.386" endtime="20201112 09:45:51.721"></status>
</kw>
<msg timestamp="20201112 09:45:51.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038778097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048836611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:51.383" endtime="20201112 09:45:51.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:51.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038778097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048836611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:51.725" endtime="20201112 09:45:51.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:51.733" endtime="20201112 09:45:51.735"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:51.376" endtime="20201112 09:45:51.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:51.371" endtime="20201112 09:45:51.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:51.761" level="INFO">${RESULT} = {'time': [0.038778097, 0.048836611, 0.0588375, 0.068838528, 0.078839681, 0.088840694, 0.098841819, 0.108842833, 0.118844, 0.128845, 0.138846153, 0.148847167, 0.158848319, 0.168849417, 0.178850486, 0.1...</msg>
<status status="PASS" starttime="20201112 09:45:51.737" endtime="20201112 09:45:51.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:51.766" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:51.765" endtime="20201112 09:45:51.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:51.768" level="INFO">VALUE: 0.038778097</msg>
<status status="PASS" starttime="20201112 09:45:51.767" endtime="20201112 09:45:51.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:51.762" endtime="20201112 09:45:51.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:51.775" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:51.774" endtime="20201112 09:45:51.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:51.777" level="INFO">VALUE: [0.048836611, 0.0588375, 0.068838528, 0.078839681, 0.088840694, 0.098841819, 0.108842833, 0.118844, 0.128845, 0.138846153, 0.148847167, 0.158848319, 0.168849417, 0.178850486, 0.188851514, 0.198852708, 0.208853667, 0.218854806, 0.228855819, 0.238857028, 0.248857986, 0.258859139, 0.268860167, 0.278861306, 0.288862361, 0.298863472, 0.3088645, 0.318865639, 0.328866653, 0.338867847, 0.348868819, 0.358869972, 0.368871042, 0.378872167, 0.388873153, 0.398874319, 0.408875319, 0.418876486, 0.428877486, 0.438878639, 0.448879639, 0.458880792, 0.468881806, 0.478882972, 0.488883972, 0.498885139, 0.508886139, 0.518887292, 0.528888306, 0.538889528, 0.548890486, 0.558891625, 0.568892639, 0.578893792, 0.588894806, 0.598895958, 0.608896972, 0.618898125, 0.628899139, 0.638900306, 0.648901333, 0.658902472, 0.668903486, 0.678904639, 0.688905653, 0.698906806, 0.708907819, 0.718909028, 0.728910014, 0.738911139, 0.748912167, 0.758913319, 0.768914333, 0.778915472, 0.7889165, 0.798917694, 0.808918653, 0.818919847, 0.828920819, 0.838921986, 0.848922986, 0.858924139, 0.868925153, 0.878926306, 0.888927333, 0.898928486, 0.9089295, 0.918930639, 0.928931653, 0.938932806, 0.948933819, 0.958934986, 0.968935986, 0.978937139, 0.988938194, 0.998939306, 1.008940319, 1.018941486, 1.028942486, 1.038943639] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:51.776" endtime="20201112 09:45:51.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:51.770" endtime="20201112 09:45:51.779"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:51.782" endtime="20201112 09:45:51.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:51.786" endtime="20201112 09:45:51.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:51.784" endtime="20201112 09:45:51.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:51.779" endtime="20201112 09:45:51.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:49.152" endtime="20201112 09:45:51.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:43.876" endtime="20201112 09:45:51.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:43.874" endtime="20201112 09:45:51.807"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:51.810" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:51.821" endtime="20201112 09:45:53.922"></status>
</kw>
<msg timestamp="20201112 09:45:53.923" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 49225634, 'wakeups': [49235703, 49245702, 49255702, 49265702, 49275702...</msg>
<status status="PASS" starttime="20201112 09:45:51.819" endtime="20201112 09:45:53.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:53.926" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 49225634, 'wakeups': [49235703, 49245702, 49255702, 49265702, 49275702...</msg>
<status status="PASS" starttime="20201112 09:45:53.924" endtime="20201112 09:45:53.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:53.927" endtime="20201112 09:45:53.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:51.816" endtime="20201112 09:45:53.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:51.813" endtime="20201112 09:45:53.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:53.933" level="INFO">${RESULT} = {'wakeups': [49235703, 49245702, 49255702, 49265702, 49275702, 49285702, 49295702, 49305702, 49315702, 49325702, 49335702, 49345702, 49355702, 49365702, 49375702, 49385702, 49395702, 49405702, 4941570...</msg>
<status status="PASS" starttime="20201112 09:45:53.931" endtime="20201112 09:45:53.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:53.943" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:53.942" endtime="20201112 09:45:53.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:53.945" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:53.944" endtime="20201112 09:45:53.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:53.939" endtime="20201112 09:45:53.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:53.951" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:53.950" endtime="20201112 09:45:53.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:53.953" level="INFO">VALUE: 49225634</msg>
<status status="PASS" starttime="20201112 09:45:53.952" endtime="20201112 09:45:53.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:53.947" endtime="20201112 09:45:53.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:53.959" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:53.958" endtime="20201112 09:45:53.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:53.962" level="INFO">VALUE: [49235703, 49245702, 49255702, 49265702, 49275702, 49285702, 49295702, 49305702, 49315702, 49325702, 49335702, 49345702, 49355702, 49365702, 49375702, 49385702, 49395702, 49405702, 49415702, 49425702, 49435702, 49445702, 49455702, 49465702, 49475702, 49485702, 49495702, 49505702, 49515702, 49525702, 49535702, 49545702, 49555702, 49565702, 49575702, 49585702, 49595702, 49605702, 49615702, 49625702, 49635702, 49645702, 49655702, 49665702, 49675702, 49685702, 49695702, 49705702, 49715702, 49725702, 49735702, 49745702, 49755702, 49765702, 49775702, 49785702, 49795702, 49805702, 49815702, 49825702, 49835702, 49845702, 49855702, 49865702, 49875702, 49885702, 49895702, 49905702, 49915702, 49925702, 49935702, 49945702, 49955702, 49965702, 49975702, 49985702, 49995702, 50005702, 50015702, 50025702, 50035702, 50045702, 50055702, 50065702, 50075702, 50085702, 50095702, 50105702, 50115702, 50125702, 50135702, 50145702, 50155702, 50165702, 50175702, 50185702, 50195702, 50205702, 50215702, 50225702]</msg>
<status status="PASS" starttime="20201112 09:45:53.961" endtime="20201112 09:45:53.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:53.955" endtime="20201112 09:45:53.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:53.971" endtime="20201112 09:45:54.289"></status>
</kw>
<msg timestamp="20201112 09:45:54.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025820125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035890889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:53.969" endtime="20201112 09:45:54.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025820125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035890889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:54.297" endtime="20201112 09:45:54.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:54.315" endtime="20201112 09:45:54.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:53.966" endtime="20201112 09:45:54.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:53.964" endtime="20201112 09:45:54.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:54.378" level="INFO">${RESULT} = {'time': [0.025820125, 0.035890889, 0.045890958, 0.055891972, 0.065893139, 0.075894208, 0.085895292, 0.095896319, 0.105897458, 0.115898458, 0.125899653, 0.135900639, 0.145901792, 0.155902792, 0.165903...</msg>
<status status="PASS" starttime="20201112 09:45:54.323" endtime="20201112 09:45:54.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.389" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:54.386" endtime="20201112 09:45:54.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.393" level="INFO">VALUE: 0.025820125</msg>
<status status="PASS" starttime="20201112 09:45:54.391" endtime="20201112 09:45:54.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.380" endtime="20201112 09:45:54.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.407" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:54.404" endtime="20201112 09:45:54.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.412" level="INFO">VALUE: [0.035890889, 0.045890958, 0.055891972, 0.065893139, 0.075894208, 0.085895292, 0.095896319, 0.105897458, 0.115898458, 0.125899653, 0.135900639, 0.145901792, 0.155902792, 0.165903958, 0.175904972, 0.185906125, 0.195907125, 0.205908306, 0.215909292, 0.225910458, 0.235911444, 0.245912597, 0.255913611, 0.265914778, 0.275915778, 0.285916931, 0.295917958, 0.305919111, 0.315920111, 0.325921278, 0.335922278, 0.345923486, 0.355924444, 0.365925597, 0.375926625, 0.385927792, 0.395928778, 0.405929986, 0.415930944, 0.425932097, 0.435933139, 0.44593425, 0.455935319, 0.465936431, 0.475937431, 0.485938583, 0.495939597, 0.505940764, 0.515941764, 0.525942944, 0.535943931, 0.545945083, 0.555946097, 0.56594725, 0.575948264, 0.585949444, 0.595950431, 0.605951583, 0.615952597, 0.62595375, 0.635954778, 0.645955917, 0.655956931, 0.665958097, 0.675959097, 0.68596025, 0.695961264, 0.705962417, 0.715963431, 0.725964583, 0.735965611, 0.74596675, 0.755967764, 0.765968931, 0.775969931, 0.785971083, 0.795972167, 0.80597325, 0.815974264, 0.825975431, 0.835976431, 0.845977583, 0.855978597, 0.86597975, 0.875980819, 0.885981931, 0.895982931, 0.905984083, 0.915985097, 0.92598625, 0.935987264, 0.945988417, 0.955989444, 0.965990583, 0.975991625, 0.985992806, 0.995993764, 1.005994931, 1.015995931, 1.025997083] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:54.410" endtime="20201112 09:45:54.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.397" endtime="20201112 09:45:54.415"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:54.421" endtime="20201112 09:45:54.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:54.430" endtime="20201112 09:45:54.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.425" endtime="20201112 09:45:54.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.417" endtime="20201112 09:45:54.455"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:51.811" endtime="20201112 09:45:54.456"></status>
</kw>
<msg timestamp="20201112 09:45:54.456" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:54.477" endtime="20201112 09:45:56.596"></status>
</kw>
<msg timestamp="20201112 09:45:56.598" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51883580, 'wakeups': [51893648, 51903648, 51913648, 51923648, 51933648...</msg>
<status status="PASS" starttime="20201112 09:45:54.474" endtime="20201112 09:45:56.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:56.605" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51883580, 'wakeups': [51893648, 51903648, 51913648, 51923648, 51933648...</msg>
<status status="PASS" starttime="20201112 09:45:56.600" endtime="20201112 09:45:56.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:56.607" endtime="20201112 09:45:56.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.467" endtime="20201112 09:45:56.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.461" endtime="20201112 09:45:56.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:56.621" level="INFO">${RESULT} = {'wakeups': [51893648, 51903648, 51913648, 51923648, 51933648, 51943648, 51953648, 51963648, 51973648, 51983648, 51993648, 52003648, 52013648, 52023648, 52033648, 52043648, 52053648, 52063648, 5207364...</msg>
<status status="PASS" starttime="20201112 09:45:56.616" endtime="20201112 09:45:56.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:56.631" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:56.629" endtime="20201112 09:45:56.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:56.635" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:56.633" endtime="20201112 09:45:56.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:56.622" endtime="20201112 09:45:56.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:56.648" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:56.646" endtime="20201112 09:45:56.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:56.653" level="INFO">VALUE: 51883580</msg>
<status status="PASS" starttime="20201112 09:45:56.651" endtime="20201112 09:45:56.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:56.639" endtime="20201112 09:45:56.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:56.665" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:56.663" endtime="20201112 09:45:56.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:56.673" level="INFO">VALUE: [51893648, 51903648, 51913648, 51923648, 51933648, 51943648, 51953648, 51963648, 51973648, 51983648, 51993648, 52003648, 52013648, 52023648, 52033648, 52043648, 52053648, 52063648, 52073648, 52083648, 52093648, 52103648, 52113648, 52123648, 52133648, 52143648, 52153648, 52163648, 52173648, 52183648, 52193648, 52203648, 52213648, 52223648, 52233648, 52243648, 52253648, 52263648, 52273648, 52283648, 52293648, 52303648, 52313648, 52323648, 52333648, 52343648, 52353648, 52363648, 52373648, 52383648, 52393648, 52403648, 52413648, 52423648, 52433648, 52443648, 52453648, 52463648, 52473648, 52483648, 52493648, 52503648, 52513648, 52523648, 52533648, 52543648, 52553648, 52563648, 52573648, 52583648, 52593648, 52603648, 52613648, 52623648, 52633648, 52643648, 52653648, 52663648, 52673648, 52683648, 52693648, 52703648, 52713648, 52723648, 52733648, 52743648, 52753648, 52763648, 52773648, 52783648, 52793648, 52803648, 52813648, 52823648, 52833648, 52843648, 52853648, 52863648, 52873648, 52883648]</msg>
<status status="PASS" starttime="20201112 09:45:56.668" endtime="20201112 09:45:56.674"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:56.656" endtime="20201112 09:45:56.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:56.692" endtime="20201112 09:45:57.036"></status>
</kw>
<msg timestamp="20201112 09:45:57.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038833542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048904028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:56.689" endtime="20201112 09:45:57.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:57.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038833542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048904028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:57.045" endtime="20201112 09:45:57.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:57.062" endtime="20201112 09:45:57.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:56.682" endtime="20201112 09:45:57.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:56.677" endtime="20201112 09:45:57.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:57.124" level="INFO">${RESULT} = {'time': [0.038833542, 0.048904028, 0.058905056, 0.068906069, 0.078907222, 0.088908236, 0.098909375, 0.108910389, 0.118911542, 0.128912542, 0.138913694, 0.148914722, 0.158915861, 0.168916889, 0.178918...</msg>
<status status="PASS" starttime="20201112 09:45:57.071" endtime="20201112 09:45:57.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:57.135" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:57.132" endtime="20201112 09:45:57.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:57.139" level="INFO">VALUE: 0.038833542</msg>
<status status="PASS" starttime="20201112 09:45:57.137" endtime="20201112 09:45:57.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:57.126" endtime="20201112 09:45:57.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:57.151" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:57.150" endtime="20201112 09:45:57.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:57.153" level="INFO">VALUE: [0.048904028, 0.058905056, 0.068906069, 0.078907222, 0.088908236, 0.098909375, 0.108910389, 0.118911542, 0.128912542, 0.138913694, 0.148914722, 0.158915861, 0.168916889, 0.178918014, 0.188919028, 0.19892025, 0.208921222, 0.218922347, 0.228923361, 0.238924514, 0.248925542, 0.258926667, 0.268927694, 0.278928847, 0.288929847, 0.298931, 0.308932, 0.318933167, 0.328934167, 0.338935319, 0.348936333, 0.358937486, 0.368938514, 0.378939653, 0.388940653, 0.398941806, 0.408942847, 0.418944042, 0.428944986, 0.438946153, 0.448947153, 0.458948319, 0.468949306, 0.478950458, 0.488951472, 0.498952625, 0.508953708, 0.518954847, 0.528955819, 0.538956972, 0.548957986, 0.558959111, 0.568960125, 0.578961319, 0.588962306, 0.598963444, 0.608964458, 0.618965611, 0.628966667, 0.638967778, 0.648968833, 0.658969944, 0.668970972, 0.678972111, 0.688973111, 0.698974264, 0.708975278, 0.718976431, 0.728977472, 0.738978597, 0.748979611, 0.758980778, 0.768981806, 0.778982931, 0.788983944, 0.798985125, 0.808986125, 0.818987292, 0.828988306, 0.838989417, 0.8489905, 0.858991583, 0.868992639, 0.878993764, 0.888994764, 0.898995931, 0.908996931, 0.918998083, 0.928999097, 0.939000278, 0.949001319, 0.959002417, 0.969003417, 0.979004597, 0.989005583, 0.99900675, 1.009007833, 1.019008903, 1.029009917, 1.039011069] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:57.152" endtime="20201112 09:45:57.154"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:57.143" endtime="20201112 09:45:57.154"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:57.157" endtime="20201112 09:45:57.159"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:57.161" endtime="20201112 09:45:57.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:57.159" endtime="20201112 09:45:57.183"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:57.155" endtime="20201112 09:45:57.184"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.457" endtime="20201112 09:45:57.184"></status>
</kw>
<msg timestamp="20201112 09:45:57.184" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:57.194" endtime="20201112 09:45:59.312"></status>
</kw>
<msg timestamp="20201112 09:45:59.313" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 54598890, 'wakeups': [54608958, 54618958, 54628958, 54638958, 54648958...</msg>
<status status="PASS" starttime="20201112 09:45:57.193" endtime="20201112 09:45:59.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.320" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 54598890, 'wakeups': [54608958, 54618958, 54628958, 54638958, 54648958...</msg>
<status status="PASS" starttime="20201112 09:45:59.315" endtime="20201112 09:45:59.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:59.321" endtime="20201112 09:45:59.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:57.189" endtime="20201112 09:45:59.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:57.187" endtime="20201112 09:45:59.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:59.327" level="INFO">${RESULT} = {'wakeups': [54608958, 54618958, 54628958, 54638958, 54648958, 54658958, 54668958, 54678958, 54688958, 54698958, 54708958, 54718958, 54728958, 54738958, 54748958, 54758958, 54768958, 54778958, 5478895...</msg>
<status status="PASS" starttime="20201112 09:45:59.325" endtime="20201112 09:45:59.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.332" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:59.331" endtime="20201112 09:45:59.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.334" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:59.333" endtime="20201112 09:45:59.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.328" endtime="20201112 09:45:59.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.340" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:59.339" endtime="20201112 09:45:59.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.343" level="INFO">VALUE: 54598890</msg>
<status status="PASS" starttime="20201112 09:45:59.342" endtime="20201112 09:45:59.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.336" endtime="20201112 09:45:59.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.350" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:59.348" endtime="20201112 09:45:59.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.352" level="INFO">VALUE: [54608958, 54618958, 54628958, 54638958, 54648958, 54658958, 54668958, 54678958, 54688958, 54698958, 54708958, 54718958, 54728958, 54738958, 54748958, 54758958, 54768958, 54778958, 54788958, 54798958, 54808958, 54818958, 54828958, 54838958, 54848958, 54858958, 54868958, 54878958, 54888958, 54898958, 54908958, 54918958, 54928958, 54938958, 54948958, 54958958, 54968958, 54978958, 54988958, 54998958, 55008958, 55018958, 55028958, 55038958, 55048958, 55058958, 55068958, 55078958, 55088958, 55098958, 55108958, 55118958, 55128958, 55138958, 55148958, 55158958, 55168958, 55178958, 55188958, 55198958, 55208958, 55218958, 55228958, 55238958, 55248958, 55258958, 55268958, 55278958, 55288958, 55298958, 55308958, 55318958, 55328958, 55338958, 55348958, 55358958, 55368958, 55378958, 55388958, 55398958, 55408958, 55418958, 55428958, 55438958, 55448958, 55458958, 55468958, 55478958, 55488958, 55498958, 55508958, 55518958, 55528958, 55538958, 55548958, 55558958, 55568958, 55578958, 55588958, 55598958]</msg>
<status status="PASS" starttime="20201112 09:45:59.351" endtime="20201112 09:45:59.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.345" endtime="20201112 09:45:59.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:59.362" endtime="20201112 09:45:59.703"></status>
</kw>
<msg timestamp="20201112 09:45:59.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022266403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032336875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:59.360" endtime="20201112 09:45:59.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022266403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032336875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:59.717" endtime="20201112 09:45:59.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:59.735" endtime="20201112 09:45:59.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.357" endtime="20201112 09:45:59.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.354" endtime="20201112 09:45:59.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:59.797" level="INFO">${RESULT} = {'time': [0.022266403, 0.032336875, 0.042337917, 0.052338931, 0.062340083, 0.072341083, 0.08234225, 0.092343264, 0.102344417, 0.112345403, 0.122346569, 0.132347569, 0.142348722, 0.152349722, 0.1623509...</msg>
<status status="PASS" starttime="20201112 09:45:59.745" endtime="20201112 09:45:59.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.808" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:59.806" endtime="20201112 09:45:59.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.813" level="INFO">VALUE: 0.022266403</msg>
<status status="PASS" starttime="20201112 09:45:59.810" endtime="20201112 09:45:59.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.799" endtime="20201112 09:45:59.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.826" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:59.824" endtime="20201112 09:45:59.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.831" level="INFO">VALUE: [0.032336875, 0.042337917, 0.052338931, 0.062340083, 0.072341083, 0.08234225, 0.092343264, 0.102344417, 0.112345403, 0.122346569, 0.132347569, 0.142348722, 0.152349722, 0.162350931, 0.172351889, 0.182353042, 0.192354056, 0.202355194, 0.212356208, 0.222357361, 0.232358389, 0.242359514, 0.252360528, 0.262361694, 0.272362694, 0.282363861, 0.292364861, 0.302366014, 0.312367028, 0.322368167, 0.332369194, 0.342370361, 0.352371333, 0.362372486, 0.3723735, 0.382374653, 0.392375681, 0.402376819, 0.412377819, 0.422378972, 0.432379986, 0.442381139, 0.452382153, 0.462383306, 0.472384375, 0.482385458, 0.492386514, 0.502387639, 0.512388639, 0.522389778, 0.532390806, 0.542392014, 0.552392986, 0.562394125, 0.572395139, 0.582396278, 0.592397278, 0.602398431, 0.612399458, 0.622400597, 0.632401611, 0.642402792, 0.652403792, 0.662404958, 0.672405931, 0.682407083, 0.692408111, 0.70240925, 0.712410278, 0.722411417, 0.732412417, 0.742413569, 0.752414639, 0.762415736, 0.77241675, 0.782417903, 0.792418931, 0.802420097, 0.812421083, 0.822422222, 0.832423236, 0.842424389, 0.852425403, 0.862426569, 0.872427569, 0.882428722, 0.892429736, 0.902430889, 0.912431903, 0.922433056, 0.932434069, 0.942435264, 0.952436222, 0.962437375, 0.972438375, 0.982439528, 0.992440542, 1.00244175, 1.012442708, 1.022443903] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:59.829" endtime="20201112 09:45:59.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.816" endtime="20201112 09:45:59.834"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:59.840" endtime="20201112 09:45:59.843"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:59.849" endtime="20201112 09:45:59.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.844" endtime="20201112 09:45:59.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.836" endtime="20201112 09:45:59.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:57.185" endtime="20201112 09:45:59.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:51.809" endtime="20201112 09:45:59.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:51.808" endtime="20201112 09:45:59.875"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:59.881" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:59.902" endtime="20201112 09:46:02.021"></status>
</kw>
<msg timestamp="20201112 09:46:02.022" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 57308211, 'wakeups': [57318291, 57328293, 57338293, 57348293, 57358293...</msg>
<status status="PASS" starttime="20201112 09:45:59.899" endtime="20201112 09:46:02.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:02.030" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 57308211, 'wakeups': [57318291, 57328293, 57338293, 57348293, 57358293...</msg>
<status status="PASS" starttime="20201112 09:46:02.025" endtime="20201112 09:46:02.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:02.033" endtime="20201112 09:46:02.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.892" endtime="20201112 09:46:02.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.886" endtime="20201112 09:46:02.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:02.046" level="INFO">${RESULT} = {'wakeups': [57318291, 57328293, 57338293, 57348293, 57358293, 57368293, 57378293, 57388293, 57398293, 57408293, 57418293, 57428293, 57438293, 57448293, 57458293, 57468293, 57478293, 57488293, 5749829...</msg>
<status status="PASS" starttime="20201112 09:46:02.041" endtime="20201112 09:46:02.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:02.056" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:02.054" endtime="20201112 09:46:02.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:02.061" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:02.059" endtime="20201112 09:46:02.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:02.048" endtime="20201112 09:46:02.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:02.073" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:46:02.071" endtime="20201112 09:46:02.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:02.078" level="INFO">VALUE: 57308211</msg>
<status status="PASS" starttime="20201112 09:46:02.076" endtime="20201112 09:46:02.079"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:02.065" endtime="20201112 09:46:02.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:02.091" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:02.088" endtime="20201112 09:46:02.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:02.096" level="INFO">VALUE: [57318291, 57328293, 57338293, 57348293, 57358293, 57368293, 57378293, 57388293, 57398293, 57408293, 57418293, 57428293, 57438293, 57448293, 57458293, 57468293, 57478293, 57488293, 57498293, 57508293, 57518293, 57528293, 57538293, 57548293, 57558293, 57568293, 57578293, 57588293, 57598293, 57608293, 57618293, 57628293, 57638293, 57648293, 57658293, 57668293, 57678293, 57688293, 57698293, 57708293, 57718293, 57728293, 57738293, 57748293, 57758293, 57768293, 57778293, 57788293, 57798293, 57808293, 57818293, 57828293, 57838293, 57848293, 57858293, 57868293, 57878293, 57888293, 57898293, 57908293, 57918293, 57928293, 57938293, 57948293, 57958293, 57968293, 57978293, 57988293, 57998293, 58008293, 58018293, 58028293, 58038293, 58048293, 58058293, 58068293, 58078293, 58088293, 58098293, 58108293, 58118293, 58128293, 58138293, 58148293, 58158293, 58168293, 58178293, 58188293, 58198293, 58208293, 58218293, 58228293, 58238293, 58248293, 58258293, 58268293, 58278293, 58288293, 58298293, 58308293]</msg>
<status status="PASS" starttime="20201112 09:46:02.093" endtime="20201112 09:46:02.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:02.082" endtime="20201112 09:46:02.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:02.115" endtime="20201112 09:46:02.432"></status>
</kw>
<msg timestamp="20201112 09:46:02.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044787431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054869625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:02.112" endtime="20201112 09:46:02.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:02.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044787431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054869625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:02.436" endtime="20201112 09:46:02.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:02.444" endtime="20201112 09:46:02.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:02.104" endtime="20201112 09:46:02.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:02.099" endtime="20201112 09:46:02.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:02.472" level="INFO">${RESULT} = {'time': [0.044787431, 0.054869625, 0.064872333, 0.074873347, 0.0848745, 0.0948755, 0.104876653, 0.114877667, 0.124878806, 0.134879819, 0.144881014, 0.154881972, 0.164883125, 0.174884153, 0.184885292,...</msg>
<status status="PASS" starttime="20201112 09:46:02.448" endtime="20201112 09:46:02.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:02.478" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:46:02.476" endtime="20201112 09:46:02.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:02.480" level="INFO">VALUE: 0.044787431</msg>
<status status="PASS" starttime="20201112 09:46:02.479" endtime="20201112 09:46:02.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:02.473" endtime="20201112 09:46:02.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:02.486" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:02.485" endtime="20201112 09:46:02.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:02.489" level="INFO">VALUE: [0.054869625, 0.064872333, 0.074873347, 0.0848745, 0.0948755, 0.104876653, 0.114877667, 0.124878806, 0.134879819, 0.144881014, 0.154881972, 0.164883125, 0.174884153, 0.184885292, 0.194886292, 0.204887444, 0.214888472, 0.224889611, 0.234890611, 0.244891792, 0.254892778, 0.264893944, 0.274894944, 0.284896097, 0.294897111, 0.30489825, 0.31489925, 0.324900417, 0.334901417, 0.344902583, 0.354903583, 0.364904778, 0.374905736, 0.384906889, 0.394907889, 0.404909042, 0.414910056, 0.424911208, 0.434912208, 0.444913375, 0.454914389, 0.464915528, 0.474916542, 0.484917722, 0.494918708, 0.504919903, 0.514920875, 0.524922028, 0.534923028, 0.544924167, 0.554925181, 0.564926347, 0.574927347, 0.584928514, 0.594929514, 0.604930653, 0.614931681, 0.624932819, 0.634933833, 0.644934986, 0.654936, 0.664937139, 0.674938153, 0.684939306, 0.694940319, 0.704941486, 0.714942486, 0.724943625, 0.734944639, 0.744945792, 0.754946806, 0.764947958, 0.774948958, 0.784950111, 0.794951139, 0.804952278, 0.814953278, 0.824954431, 0.834955458, 0.844956667, 0.854957611, 0.864958764, 0.874959778, 0.884960917, 0.894961944, 0.904963097, 0.914964139, 0.924965264, 0.934966292, 0.944967417, 0.954968431, 0.964969569, 0.974970583, 0.98497175, 0.994972764, 1.004973889, 1.014974917, 1.024976056, 1.034977069, 1.044978222] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:02.487" endtime="20201112 09:46:02.489"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:02.482" endtime="20201112 09:46:02.490"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:02.493" endtime="20201112 09:46:02.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:02.497" endtime="20201112 09:46:02.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:02.495" endtime="20201112 09:46:02.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:02.491" endtime="20201112 09:46:02.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.882" endtime="20201112 09:46:02.522"></status>
</kw>
<msg timestamp="20201112 09:46:02.523" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:02.544" endtime="20201112 09:46:04.663"></status>
</kw>
<msg timestamp="20201112 09:46:04.665" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59949906, 'wakeups': [59959987, 59969988, 59979988, 59989988, 59999988...</msg>
<status status="PASS" starttime="20201112 09:46:02.541" endtime="20201112 09:46:04.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:04.672" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59949906, 'wakeups': [59959987, 59969988, 59979988, 59989988, 59999988...</msg>
<status status="PASS" starttime="20201112 09:46:04.667" endtime="20201112 09:46:04.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:04.674" endtime="20201112 09:46:04.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:02.533" endtime="20201112 09:46:04.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:02.528" endtime="20201112 09:46:04.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:04.687" level="INFO">${RESULT} = {'wakeups': [59959987, 59969988, 59979988, 59989988, 59999988, 60009988, 60019988, 60029988, 60039988, 60049988, 60059988, 60069988, 60079988, 60089988, 60099988, 60109988, 60119988, 60129988, 6013998...</msg>
<status status="PASS" starttime="20201112 09:46:04.683" endtime="20201112 09:46:04.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:04.697" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:04.695" endtime="20201112 09:46:04.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:04.702" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:04.700" endtime="20201112 09:46:04.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:04.689" endtime="20201112 09:46:04.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:04.722" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:46:04.720" endtime="20201112 09:46:04.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:04.727" level="INFO">VALUE: 59949906</msg>
<status status="PASS" starttime="20201112 09:46:04.724" endtime="20201112 09:46:04.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:04.713" endtime="20201112 09:46:04.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:04.739" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:04.737" endtime="20201112 09:46:04.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:04.747" level="INFO">VALUE: [59959987, 59969988, 59979988, 59989988, 59999988, 60009988, 60019988, 60029988, 60039988, 60049988, 60059988, 60069988, 60079988, 60089988, 60099988, 60109988, 60119988, 60129988, 60139988, 60149988, 60159988, 60169988, 60179988, 60189988, 60199988, 60209988, 60219988, 60229988, 60239988, 60249988, 60259988, 60269988, 60279988, 60289988, 60299988, 60309988, 60319988, 60329988, 60339988, 60349988, 60359988, 60369988, 60379988, 60389988, 60399988, 60409988, 60419988, 60429988, 60439988, 60449988, 60459988, 60469988, 60479988, 60489988, 60499988, 60509988, 60519988, 60529988, 60539988, 60549988, 60559988, 60569988, 60579988, 60589988, 60599988, 60609988, 60619988, 60629988, 60639988, 60649988, 60659988, 60669988, 60679988, 60689988, 60699988, 60709988, 60719988, 60729988, 60739988, 60749988, 60759988, 60769988, 60779988, 60789988, 60799988, 60809988, 60819988, 60829988, 60839988, 60849988, 60859988, 60869988, 60879988, 60889988, 60899988, 60909988, 60919988, 60929988, 60939988, 60949988]</msg>
<status status="PASS" starttime="20201112 09:46:04.742" endtime="20201112 09:46:04.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:04.730" endtime="20201112 09:46:04.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:04.767" endtime="20201112 09:46:05.110"></status>
</kw>
<msg timestamp="20201112 09:46:05.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039168028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049250861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:04.764" endtime="20201112 09:46:05.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:05.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039168028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049250861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:05.119" endtime="20201112 09:46:05.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:05.136" endtime="20201112 09:46:05.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:04.756" endtime="20201112 09:46:05.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:04.751" endtime="20201112 09:46:05.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:05.197" level="INFO">${RESULT} = {'time': [0.039168028, 0.049250861, 0.059252611, 0.069253625, 0.079254764, 0.089255764, 0.099256917, 0.109257931, 0.119259069, 0.129260069, 0.139261236, 0.14926225, 0.159263403, 0.169264389, 0.1792655...</msg>
<status status="PASS" starttime="20201112 09:46:05.144" endtime="20201112 09:46:05.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:05.208" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:46:05.206" endtime="20201112 09:46:05.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:05.213" level="INFO">VALUE: 0.039168028</msg>
<status status="PASS" starttime="20201112 09:46:05.210" endtime="20201112 09:46:05.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:05.199" endtime="20201112 09:46:05.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:05.226" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:05.224" endtime="20201112 09:46:05.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:05.231" level="INFO">VALUE: [0.049250861, 0.059252611, 0.069253625, 0.079254764, 0.089255764, 0.099256917, 0.109257931, 0.119259069, 0.129260069, 0.139261236, 0.14926225, 0.159263403, 0.169264389, 0.179265583, 0.189266556, 0.199267708, 0.209268708, 0.219269875, 0.229270875, 0.239272014, 0.249273028, 0.259274181, 0.269275181, 0.279276333, 0.289277347, 0.299278486, 0.3092795, 0.319280653, 0.329281667, 0.339282806, 0.349283833, 0.359284986, 0.369285986, 0.379287153, 0.389288153, 0.399289306, 0.409290347, 0.419291458, 0.429292458, 0.439293639, 0.449294625, 0.459295806, 0.469296778, 0.479297931, 0.489298958, 0.499300097, 0.509301097, 0.519302333, 0.529303264, 0.539304458, 0.549305431, 0.559306583, 0.569307583, 0.579308736, 0.589309736, 0.599310889, 0.609311903, 0.619313056, 0.629314056, 0.639315236, 0.649316222, 0.659317417, 0.669318375, 0.679319569, 0.689320542, 0.699321722, 0.709322708, 0.719323847, 0.729324861, 0.739326028, 0.749327056, 0.759328167, 0.769329208, 0.779330347, 0.789331347, 0.799332528, 0.809333514, 0.819334681, 0.829335681, 0.839336819, 0.849337819, 0.859338986, 0.869339986, 0.879341153, 0.889342181, 0.899343292, 0.909344319, 0.919345514, 0.929346472, 0.939347639, 0.949348625, 0.959349778, 0.969350806, 0.979351986, 0.989352958, 0.999354097, 1.009355125, 1.019356264, 1.029357264, 1.039358417] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:05.228" endtime="20201112 09:46:05.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:05.216" endtime="20201112 09:46:05.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:05.241" endtime="20201112 09:46:05.243"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:05.249" endtime="20201112 09:46:05.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:05.245" endtime="20201112 09:46:05.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:05.236" endtime="20201112 09:46:05.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:02.524" endtime="20201112 09:46:05.276"></status>
</kw>
<msg timestamp="20201112 09:46:05.277" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:05.298" endtime="20201112 09:46:07.402"></status>
</kw>
<msg timestamp="20201112 09:46:07.403" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 62704225, 'wakeups': [62714305, 62724307, 62734307, 62744307, 62754307...</msg>
<status status="PASS" starttime="20201112 09:46:05.295" endtime="20201112 09:46:07.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.406" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 62704225, 'wakeups': [62714305, 62724307, 62734307, 62744307, 62754307...</msg>
<status status="PASS" starttime="20201112 09:46:07.404" endtime="20201112 09:46:07.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:07.407" endtime="20201112 09:46:07.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:05.288" endtime="20201112 09:46:07.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:05.282" endtime="20201112 09:46:07.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:07.413" level="INFO">${RESULT} = {'wakeups': [62714305, 62724307, 62734307, 62744307, 62754307, 62764307, 62774307, 62784307, 62794307, 62804307, 62814307, 62824307, 62834307, 62844307, 62854307, 62864307, 62874307, 62884307, 6289430...</msg>
<status status="PASS" starttime="20201112 09:46:07.411" endtime="20201112 09:46:07.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.418" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:07.417" endtime="20201112 09:46:07.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.420" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:07.419" endtime="20201112 09:46:07.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.414" endtime="20201112 09:46:07.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.426" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:46:07.425" endtime="20201112 09:46:07.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.428" level="INFO">VALUE: 62704225</msg>
<status status="PASS" starttime="20201112 09:46:07.427" endtime="20201112 09:46:07.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.422" endtime="20201112 09:46:07.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.435" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:07.433" endtime="20201112 09:46:07.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.437" level="INFO">VALUE: [62714305, 62724307, 62734307, 62744307, 62754307, 62764307, 62774307, 62784307, 62794307, 62804307, 62814307, 62824307, 62834307, 62844307, 62854307, 62864307, 62874307, 62884307, 62894307, 62904307, 62914307, 62924307, 62934307, 62944307, 62954307, 62964307, 62974307, 62984307, 62994307, 63004307, 63014307, 63024307, 63034307, 63044307, 63054307, 63064307, 63074307, 63084307, 63094307, 63104307, 63114307, 63124307, 63134307, 63144307, 63154307, 63164307, 63174307, 63184307, 63194307, 63204307, 63214307, 63224307, 63234307, 63244307, 63254307, 63264307, 63274307, 63284307, 63294307, 63304307, 63314307, 63324307, 63334307, 63344307, 63354307, 63364307, 63374307, 63384307, 63394307, 63404307, 63414307, 63424307, 63434307, 63444307, 63454307, 63464307, 63474307, 63484307, 63494307, 63504307, 63514307, 63524307, 63534307, 63544307, 63554307, 63564307, 63574307, 63584307, 63594307, 63604307, 63614307, 63624307, 63634307, 63644307, 63654307, 63664307, 63674307, 63684307, 63694307, 63704307]</msg>
<status status="PASS" starttime="20201112 09:46:07.436" endtime="20201112 09:46:07.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.430" endtime="20201112 09:46:07.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:07.446" endtime="20201112 09:46:07.788"></status>
</kw>
<msg timestamp="20201112 09:46:07.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038937958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049020167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:07.445" endtime="20201112 09:46:07.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038937958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049020167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:07.797" endtime="20201112 09:46:07.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:07.814" endtime="20201112 09:46:07.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.441" endtime="20201112 09:46:07.821"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.439" endtime="20201112 09:46:07.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:07.877" level="INFO">${RESULT} = {'time': [0.038937958, 0.049020167, 0.059022875, 0.069023889, 0.079025042, 0.089026056, 0.099027208, 0.109028208, 0.119029375, 0.129030375, 0.139031556, 0.149032556, 0.159033722, 0.169034722, 0.179035...</msg>
<status status="PASS" starttime="20201112 09:46:07.824" endtime="20201112 09:46:07.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.888" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:46:07.885" endtime="20201112 09:46:07.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.893" level="INFO">VALUE: 0.038937958</msg>
<status status="PASS" starttime="20201112 09:46:07.890" endtime="20201112 09:46:07.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.879" endtime="20201112 09:46:07.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.906" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:07.904" endtime="20201112 09:46:07.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.911" level="INFO">VALUE: [0.049020167, 0.059022875, 0.069023889, 0.079025042, 0.089026056, 0.099027208, 0.109028208, 0.119029375, 0.129030375, 0.139031556, 0.149032556, 0.159033722, 0.169034722, 0.179035861, 0.189036875, 0.199038083, 0.209039042, 0.219040194, 0.229041222, 0.239042375, 0.249043375, 0.259044528, 0.269045556, 0.279046694, 0.289047708, 0.299048861, 0.309049875, 0.319051028, 0.329052056, 0.339053208, 0.349054236, 0.359055361, 0.369056375, 0.379057542, 0.389058542, 0.399059708, 0.409060708, 0.419061875, 0.429062889, 0.439064056, 0.449065069, 0.459066236, 0.469067236, 0.479068389, 0.489069403, 0.499070556, 0.509071569, 0.519072722, 0.529073722, 0.539074875, 0.549075889, 0.559077042, 0.569078056, 0.579079222, 0.589080222, 0.599081444, 0.609082417, 0.619083556, 0.629084569, 0.639085722, 0.649086736, 0.659087931, 0.669088903, 0.679090069, 0.689091083, 0.699092236, 0.709093236, 0.719094389, 0.729095403, 0.739096639, 0.749097569, 0.75909875, 0.76909975, 0.779100903, 0.789101931, 0.799103069, 0.809104097, 0.81910525, 0.82910625, 0.839107417, 0.849108472, 0.859109569, 0.869110611, 0.87911175, 0.889112764, 0.899113944, 0.909114944, 0.919116083, 0.929117097, 0.93911825, 0.949119264, 0.959120444, 0.969121472, 0.979122583, 0.989123597, 0.99912475, 1.009125778, 1.019126944, 1.029127931, 1.039129097] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:07.909" endtime="20201112 09:46:07.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.896" endtime="20201112 09:46:07.913"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:07.920" endtime="20201112 09:46:07.923"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:07.928" endtime="20201112 09:46:07.950"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.924" endtime="20201112 09:46:07.952"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.915" endtime="20201112 09:46:07.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:05.278" endtime="20201112 09:46:07.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.878" endtime="20201112 09:46:07.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.876" endtime="20201112 09:46:07.955"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:46:07.961" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:07.983" endtime="20201112 09:46:10.102"></status>
</kw>
<msg timestamp="20201112 09:46:10.104" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 65388664, 'wakeups': [65398764, 65408764, 65418764, 65428764, 65438764...</msg>
<status status="PASS" starttime="20201112 09:46:07.979" endtime="20201112 09:46:10.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:10.110" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 65388664, 'wakeups': [65398764, 65408764, 65418764, 65428764, 65438764...</msg>
<status status="PASS" starttime="20201112 09:46:10.106" endtime="20201112 09:46:10.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:10.113" endtime="20201112 09:46:10.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.971" endtime="20201112 09:46:10.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.966" endtime="20201112 09:46:10.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:10.128" level="INFO">${RESULT} = {'wakeups': [65398764, 65408764, 65418764, 65428764, 65438764, 65448764, 65458764, 65468764, 65478764, 65488764, 65498764, 65508764, 65518764, 65528764, 65538764, 65548764, 65558764, 65568764, 6557876...</msg>
<status status="PASS" starttime="20201112 09:46:10.123" endtime="20201112 09:46:10.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:10.138" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:10.136" endtime="20201112 09:46:10.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:10.143" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:10.140" endtime="20201112 09:46:10.144"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:10.129" endtime="20201112 09:46:10.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:10.155" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:46:10.153" endtime="20201112 09:46:10.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:10.160" level="INFO">VALUE: 65388664</msg>
<status status="PASS" starttime="20201112 09:46:10.158" endtime="20201112 09:46:10.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:10.147" endtime="20201112 09:46:10.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:10.173" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:10.170" endtime="20201112 09:46:10.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:10.178" level="INFO">VALUE: [65398764, 65408764, 65418764, 65428764, 65438764, 65448764, 65458764, 65468764, 65478764, 65488764, 65498764, 65508764, 65518764, 65528764, 65538764, 65548764, 65558764, 65568764, 65578764, 65588764, 65598764, 65608764, 65618764, 65628764, 65638764, 65648764, 65658764, 65668764, 65678764, 65688764, 65698764, 65708764, 65718764, 65728764, 65738764, 65748764, 65758764, 65768764, 65778764, 65788764, 65798764, 65808764, 65818764, 65828764, 65838764, 65848764, 65858764, 65868764, 65878764, 65888764, 65898764, 65908764, 65918764, 65928764, 65938764, 65948764, 65958764, 65968764, 65978764, 65988764, 65998764, 66008764, 66018764, 66028764, 66038764, 66048764, 66058764, 66068764, 66078764, 66088764, 66098764, 66108764, 66118764, 66128764, 66138764, 66148764, 66158764, 66168764, 66178764, 66188764, 66198764, 66208764, 66218764, 66228764, 66238764, 66248764, 66258764, 66268764, 66278764, 66288764, 66298764, 66308764, 66318764, 66328764, 66338764, 66348764, 66358764, 66368764, 66378764, 66388764]</msg>
<status status="PASS" starttime="20201112 09:46:10.175" endtime="20201112 09:46:10.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:10.164" endtime="20201112 09:46:10.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:10.197" endtime="20201112 09:46:10.529"></status>
</kw>
<msg timestamp="20201112 09:46:10.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045670139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055771861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:10.194" endtime="20201112 09:46:10.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:10.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045670139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055771861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:10.533" endtime="20201112 09:46:10.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:10.541" endtime="20201112 09:46:10.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:10.186" endtime="20201112 09:46:10.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:10.181" endtime="20201112 09:46:10.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:10.570" level="INFO">${RESULT} = {'time': [0.045670139, 0.055771861, 0.065772847, 0.075773861, 0.085775014, 0.095776028, 0.105777194, 0.115778194, 0.125779333, 0.135780347, 0.1457815, 0.155782514, 0.165783667, 0.175784681, 0.18578583...</msg>
<status status="PASS" starttime="20201112 09:46:10.546" endtime="20201112 09:46:10.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:10.575" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:46:10.574" endtime="20201112 09:46:10.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:10.577" level="INFO">VALUE: 0.045670139</msg>
<status status="PASS" starttime="20201112 09:46:10.576" endtime="20201112 09:46:10.578"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:10.571" endtime="20201112 09:46:10.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:10.584" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:10.583" endtime="20201112 09:46:10.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:10.586" level="INFO">VALUE: [0.055771861, 0.065772847, 0.075773861, 0.085775014, 0.095776028, 0.105777194, 0.115778194, 0.125779333, 0.135780347, 0.1457815, 0.155782514, 0.165783667, 0.175784681, 0.185785833, 0.195786847, 0.205788, 0.215789014, 0.225790181, 0.235791167, 0.245792319, 0.255793347, 0.265794486, 0.275795556, 0.285796653, 0.295797667, 0.305798819, 0.315799833, 0.325800986, 0.335802056, 0.345803153, 0.355804167, 0.365805319, 0.375806333, 0.385807486, 0.3958085, 0.405809667, 0.415810667, 0.425811819, 0.435812833, 0.445814014, 0.455815, 0.465816139, 0.475817153, 0.485818306, 0.495819319, 0.505820486, 0.515821486, 0.525822639, 0.535823653, 0.545824806, 0.555825819, 0.565826972, 0.575827986, 0.585829139, 0.595830208, 0.605831306, 0.615832319, 0.625833472, 0.635834542, 0.645835639, 0.655836653, 0.665837806, 0.675838819, 0.685839972, 0.695841, 0.705842167, 0.715843153, 0.725844306, 0.735845319, 0.745846472, 0.755847486, 0.765848639, 0.775849653, 0.785850847, 0.795851833, 0.805852972, 0.815853986, 0.825855139, 0.835856153, 0.845857333, 0.855858333, 0.865859472, 0.875860486, 0.885861653, 0.895862667, 0.905863833, 0.915864819, 0.925865986, 0.935867, 0.945868167, 0.955869153, 0.965870306, 0.975871333, 0.985872472, 0.995873528, 1.005874667, 1.015875722, 1.025876806, 1.035877819, 1.045879] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:10.585" endtime="20201112 09:46:10.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:10.579" endtime="20201112 09:46:10.587"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:10.590" endtime="20201112 09:46:10.592"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:10.594" endtime="20201112 09:46:10.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:10.592" endtime="20201112 09:46:10.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:10.588" endtime="20201112 09:46:10.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.962" endtime="20201112 09:46:10.615"></status>
</kw>
<msg timestamp="20201112 09:46:10.616" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:10.626" endtime="20201112 09:46:12.726"></status>
</kw>
<msg timestamp="20201112 09:46:12.726" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 68029978, 'wakeups': [68040078, 68050078, 68060078, 68070078, 68080078...</msg>
<status status="PASS" starttime="20201112 09:46:10.624" endtime="20201112 09:46:12.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.729" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 68029978, 'wakeups': [68040078, 68050078, 68060078, 68070078, 68080078...</msg>
<status status="PASS" starttime="20201112 09:46:12.727" endtime="20201112 09:46:12.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:12.731" endtime="20201112 09:46:12.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:10.621" endtime="20201112 09:46:12.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:10.618" endtime="20201112 09:46:12.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:12.737" level="INFO">${RESULT} = {'wakeups': [68040078, 68050078, 68060078, 68070078, 68080078, 68090078, 68100078, 68110078, 68120078, 68130078, 68140078, 68150078, 68160078, 68170078, 68180078, 68190078, 68200078, 68210078, 6822007...</msg>
<status status="PASS" starttime="20201112 09:46:12.735" endtime="20201112 09:46:12.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.742" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:12.741" endtime="20201112 09:46:12.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.745" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:12.744" endtime="20201112 09:46:12.745"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.738" endtime="20201112 09:46:12.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.751" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:46:12.750" endtime="20201112 09:46:12.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.754" level="INFO">VALUE: 68029978</msg>
<status status="PASS" starttime="20201112 09:46:12.752" endtime="20201112 09:46:12.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.746" endtime="20201112 09:46:12.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.760" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:12.759" endtime="20201112 09:46:12.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.763" level="INFO">VALUE: [68040078, 68050078, 68060078, 68070078, 68080078, 68090078, 68100078, 68110078, 68120078, 68130078, 68140078, 68150078, 68160078, 68170078, 68180078, 68190078, 68200078, 68210078, 68220078, 68230078, 68240078, 68250078, 68260078, 68270078, 68280078, 68290078, 68300078, 68310078, 68320078, 68330078, 68340078, 68350078, 68360078, 68370078, 68380078, 68390078, 68400078, 68410078, 68420078, 68430078, 68440078, 68450078, 68460078, 68470078, 68480078, 68490078, 68500078, 68510078, 68520078, 68530078, 68540078, 68550078, 68560078, 68570078, 68580078, 68590078, 68600078, 68610078, 68620078, 68630078, 68640078, 68650078, 68660078, 68670078, 68680078, 68690078, 68700078, 68710078, 68720078, 68730078, 68740078, 68750078, 68760078, 68770078, 68780078, 68790078, 68800078, 68810078, 68820078, 68830078, 68840078, 68850078, 68860078, 68870078, 68880078, 68890078, 68900078, 68910078, 68920078, 68930078, 68940078, 68950078, 68960078, 68970078, 68980078, 68990078, 69000078, 69010078, 69020078, 69030078]</msg>
<status status="PASS" starttime="20201112 09:46:12.762" endtime="20201112 09:46:12.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.756" endtime="20201112 09:46:12.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:12.774" endtime="20201112 09:46:13.108"></status>
</kw>
<msg timestamp="20201112 09:46:13.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021876931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031978681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:12.772" endtime="20201112 09:46:13.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:13.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021876931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031978681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:13.117" endtime="20201112 09:46:13.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:13.134" endtime="20201112 09:46:13.138"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.768" endtime="20201112 09:46:13.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.765" endtime="20201112 09:46:13.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:13.195" level="INFO">${RESULT} = {'time': [0.021876931, 0.031978681, 0.041979639, 0.051980653, 0.061981819, 0.071982819, 0.081984, 0.091985, 0.101986139, 0.111987167, 0.121988375, 0.131989319, 0.141990458, 0.151991486, 0.161992625, 0...</msg>
<status status="PASS" starttime="20201112 09:46:13.143" endtime="20201112 09:46:13.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:13.206" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:46:13.204" endtime="20201112 09:46:13.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:13.211" level="INFO">VALUE: 0.021876931</msg>
<status status="PASS" starttime="20201112 09:46:13.209" endtime="20201112 09:46:13.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:13.197" endtime="20201112 09:46:13.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:13.224" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:13.222" endtime="20201112 09:46:13.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:13.230" level="INFO">VALUE: [0.031978681, 0.041979639, 0.051980653, 0.061981819, 0.071982819, 0.081984, 0.091985, 0.101986139, 0.111987167, 0.121988375, 0.131989319, 0.141990458, 0.151991486, 0.161992625, 0.171993625, 0.181994806, 0.191995792, 0.201996958, 0.211997958, 0.221999111, 0.232000139, 0.242001278, 0.252002278, 0.262003431, 0.272004444, 0.282005597, 0.292006625, 0.302007778, 0.312008778, 0.322009958, 0.332010944, 0.342012083, 0.352013153, 0.362014264, 0.372015264, 0.382016417, 0.392017444, 0.402018583, 0.412019639, 0.42202075, 0.43202175, 0.442022903, 0.452023931, 0.462025083, 0.472026083, 0.48202725, 0.49202825, 0.502029403, 0.512030472, 0.522031569, 0.532032569, 0.542033736, 0.55203475, 0.562035889, 0.572036972, 0.582038069, 0.592039069, 0.602040222, 0.612041236, 0.622042389, 0.632043431, 0.642044611, 0.652045569, 0.662046722, 0.67204775, 0.682048903, 0.692049903, 0.702051056, 0.712052069, 0.722053222, 0.732054222, 0.742055375, 0.752056389, 0.762057542, 0.772058569, 0.782059708, 0.792060722, 0.802061917, 0.812062889, 0.822064056, 0.832065056, 0.842066208, 0.852067222, 0.862068361, 0.872069389, 0.882070542, 0.892071542, 0.902072708, 0.912073722, 0.922074861, 0.932075889, 0.942077028, 0.952078083, 0.962079194, 0.972080208, 0.982081375, 0.992082375, 1.002083528, 1.012084542, 1.022085722] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:13.227" endtime="20201112 09:46:13.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:13.215" endtime="20201112 09:46:13.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:13.239" endtime="20201112 09:46:13.242"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:13.248" endtime="20201112 09:46:13.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:13.243" endtime="20201112 09:46:13.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:13.234" endtime="20201112 09:46:13.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:10.616" endtime="20201112 09:46:13.273"></status>
</kw>
<msg timestamp="20201112 09:46:13.274" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:13.297" endtime="20201112 09:46:15.415"></status>
</kw>
<msg timestamp="20201112 09:46:15.417" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 70702423, 'wakeups': [70712521, 70722522, 70732523, 70742523, 70752523...</msg>
<status status="PASS" starttime="20201112 09:46:13.293" endtime="20201112 09:46:15.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:15.424" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 70702423, 'wakeups': [70712521, 70722522, 70732523, 70742523, 70752523...</msg>
<status status="PASS" starttime="20201112 09:46:15.419" endtime="20201112 09:46:15.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:15.426" endtime="20201112 09:46:15.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:13.284" endtime="20201112 09:46:15.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:13.279" endtime="20201112 09:46:15.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:15.439" level="INFO">${RESULT} = {'wakeups': [70712521, 70722522, 70732523, 70742523, 70752523, 70762523, 70772523, 70782523, 70792523, 70802523, 70812523, 70822523, 70832523, 70842523, 70852523, 70862523, 70872523, 70882523, 7089252...</msg>
<status status="PASS" starttime="20201112 09:46:15.435" endtime="20201112 09:46:15.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:15.450" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:15.448" endtime="20201112 09:46:15.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:15.455" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:15.452" endtime="20201112 09:46:15.455"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:15.441" endtime="20201112 09:46:15.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:15.467" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:46:15.465" endtime="20201112 09:46:15.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:15.472" level="INFO">VALUE: 70702423</msg>
<status status="PASS" starttime="20201112 09:46:15.470" endtime="20201112 09:46:15.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:15.458" endtime="20201112 09:46:15.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:15.484" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:15.482" endtime="20201112 09:46:15.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:15.494" level="INFO">VALUE: [70712521, 70722522, 70732523, 70742523, 70752523, 70762523, 70772523, 70782523, 70792523, 70802523, 70812523, 70822523, 70832523, 70842523, 70852523, 70862523, 70872523, 70882523, 70892523, 70902523, 70912523, 70922523, 70932523, 70942523, 70952523, 70962523, 70972523, 70982523, 70992523, 71002523, 71012523, 71022523, 71032523, 71042523, 71052523, 71062523, 71072523, 71082523, 71092523, 71102523, 71112523, 71122523, 71132523, 71142523, 71152523, 71162523, 71172523, 71182523, 71192523, 71202523, 71212523, 71222523, 71232523, 71242523, 71252523, 71262523, 71272523, 71282523, 71292523, 71302523, 71312523, 71322523, 71332523, 71342523, 71352523, 71362523, 71372523, 71382523, 71392523, 71402523, 71412523, 71422523, 71432523, 71442523, 71452523, 71462523, 71472523, 71482523, 71492523, 71502523, 71512523, 71522523, 71532523, 71542523, 71552523, 71562523, 71572523, 71582523, 71592523, 71602523, 71612523, 71622523, 71632523, 71642523, 71652523, 71662523, 71672523, 71682523, 71692523, 71702523]</msg>
<status status="PASS" starttime="20201112 09:46:15.491" endtime="20201112 09:46:15.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:15.476" endtime="20201112 09:46:15.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:15.514" endtime="20201112 09:46:15.855"></status>
</kw>
<msg timestamp="20201112 09:46:15.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040387861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050487278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:15.511" endtime="20201112 09:46:15.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:15.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040387861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050487278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:15.860" endtime="20201112 09:46:15.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:15.868" endtime="20201112 09:46:15.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:15.503" endtime="20201112 09:46:15.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:15.498" endtime="20201112 09:46:15.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:15.896" level="INFO">${RESULT} = {'time': [0.040387861, 0.050487278, 0.060489903, 0.070491917, 0.080493083, 0.090494069, 0.100495236, 0.110496236, 0.120497389, 0.130498417, 0.140499569, 0.150500556, 0.160501722, 0.170502736, 0.180503...</msg>
<status status="PASS" starttime="20201112 09:46:15.872" endtime="20201112 09:46:15.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:15.901" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:46:15.900" endtime="20201112 09:46:15.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:15.903" level="INFO">VALUE: 0.040387861</msg>
<status status="PASS" starttime="20201112 09:46:15.902" endtime="20201112 09:46:15.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:15.897" endtime="20201112 09:46:15.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:15.910" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:15.909" endtime="20201112 09:46:15.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:15.912" level="INFO">VALUE: [0.050487278, 0.060489903, 0.070491917, 0.080493083, 0.090494069, 0.100495236, 0.110496236, 0.120497389, 0.130498417, 0.140499569, 0.150500556, 0.160501722, 0.170502736, 0.180503889, 0.190504889, 0.200506042, 0.210507042, 0.220508194, 0.230509208, 0.240510361, 0.250511389, 0.260512528, 0.270513528, 0.280514681, 0.290515694, 0.300516889, 0.310517861, 0.320519028, 0.330520014, 0.340521181, 0.350522194, 0.360523333, 0.370524361, 0.3805255, 0.390526528, 0.400527667, 0.410528667, 0.420529875, 0.430530833, 0.440531986, 0.450533, 0.460534153, 0.470535181, 0.480536319, 0.490537319, 0.500538472, 0.510539486, 0.520540681, 0.530541653, 0.540542819, 0.550543833, 0.560544972, 0.570546042, 0.580547208, 0.590548153, 0.600549306, 0.610550306, 0.620551472, 0.630552472, 0.640553625, 0.650554639, 0.660555792, 0.670556806, 0.680557972, 0.690558972, 0.700560139, 0.710561125, 0.720562278, 0.730563292, 0.740564444, 0.750565458, 0.760566625, 0.770567625, 0.780568792, 0.790569792, 0.800570944, 0.810571944, 0.820573097, 0.830574111, 0.840575264, 0.850576292, 0.860577458, 0.870578458, 0.880579667, 0.890580611, 0.900581778, 0.910582778, 0.920583931, 0.930584931, 0.940586125, 0.950587097, 0.960588319, 0.970589264, 0.980590417, 0.990591431, 1.000592597, 1.010593611, 1.020594764, 1.03059575, 1.040596903] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:15.911" endtime="20201112 09:46:15.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:15.905" endtime="20201112 09:46:15.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:15.917" endtime="20201112 09:46:15.918"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:15.921" endtime="20201112 09:46:15.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:15.918" endtime="20201112 09:46:15.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:15.914" endtime="20201112 09:46:15.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:13.275" endtime="20201112 09:46:15.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.958" endtime="20201112 09:46:15.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.956" endtime="20201112 09:46:15.943"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:46:15.945" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:15.955" endtime="20201112 09:46:18.074"></status>
</kw>
<msg timestamp="20201112 09:46:18.076" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 73360960, 'wakeups': [73371076, 73381077, 73391077, 73401077, 734110...</msg>
<status status="PASS" starttime="20201112 09:46:15.954" endtime="20201112 09:46:18.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:18.083" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 73360960, 'wakeups': [73371076, 73381077, 73391077, 73401077, 734110...</msg>
<status status="PASS" starttime="20201112 09:46:18.078" endtime="20201112 09:46:18.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:18.085" endtime="20201112 09:46:18.089"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:15.951" endtime="20201112 09:46:18.090"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:15.948" endtime="20201112 09:46:18.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:18.098" level="INFO">${RESULT} = {'wakeups': [73371076, 73381077, 73391077, 73401077, 73411077, 73421077, 73431077, 73441077, 73451077, 73461077, 73471077, 73481077, 73491077, 73501077, 73511077, 73521077, 73531077, 73541077, 7355107...</msg>
<status status="PASS" starttime="20201112 09:46:18.094" endtime="20201112 09:46:18.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:18.108" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:18.106" endtime="20201112 09:46:18.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:18.113" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:18.111" endtime="20201112 09:46:18.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:18.100" endtime="20201112 09:46:18.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:18.126" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:46:18.124" endtime="20201112 09:46:18.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:18.131" level="INFO">VALUE: 73360960</msg>
<status status="PASS" starttime="20201112 09:46:18.128" endtime="20201112 09:46:18.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:18.117" endtime="20201112 09:46:18.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:18.145" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:18.143" endtime="20201112 09:46:18.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:18.150" level="INFO">VALUE: [73371076, 73381077, 73391077, 73401077, 73411077, 73421077, 73431077, 73441077, 73451077, 73461077, 73471077, 73481077, 73491077, 73501077, 73511077, 73521077, 73531077, 73541077, 73551077, 73561077, 73571077, 73581077, 73591077, 73601077, 73611077, 73621077, 73631077, 73641077, 73651077, 73661077, 73671077, 73681077, 73691077, 73701077, 73711077, 73721077, 73731077, 73741077, 73751077, 73761077, 73771077, 73781077, 73791077, 73801077, 73811077, 73821077, 73831077, 73841077, 73851077, 73861077, 73871077, 73881077, 73891077, 73901077, 73911077, 73921077, 73931077, 73941077, 73951077, 73961077, 73971077, 73981077, 73991077, 74001077, 74011077, 74021077, 74031077, 74041077, 74051077, 74061077, 74071077, 74081077, 74091077, 74101077, 74111077, 74121077, 74131077, 74141077, 74151077, 74161077, 74171077, 74181077, 74191077, 74201077, 74211077, 74221077, 74231077, 74241077, 74251077, 74261077, 74271077, 74281077, 74291077, 74301077, 74311077, 74321077, 74331077, 74341077, 74351077, 74361077]</msg>
<status status="PASS" starttime="20201112 09:46:18.147" endtime="20201112 09:46:18.151"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:18.134" endtime="20201112 09:46:18.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:18.170" endtime="20201112 09:46:18.511"></status>
</kw>
<msg timestamp="20201112 09:46:18.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026585917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0367035, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:46:18.166" endtime="20201112 09:46:18.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:18.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026585917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0367035, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:46:18.519" endtime="20201112 09:46:18.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:18.537" endtime="20201112 09:46:18.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:18.159" endtime="20201112 09:46:18.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:18.154" endtime="20201112 09:46:18.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:18.598" level="INFO">${RESULT} = {'time': [0.026585917, 0.0367035, 0.046705375, 0.056706431, 0.066707556, 0.076708556, 0.086709694, 0.096710764, 0.106711917, 0.116712875, 0.126714028, 0.136715097, 0.146716181, 0.156717194, 0.16671833...</msg>
<status status="PASS" starttime="20201112 09:46:18.545" endtime="20201112 09:46:18.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:18.608" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:46:18.606" endtime="20201112 09:46:18.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:18.613" level="INFO">VALUE: 0.026585917</msg>
<status status="PASS" starttime="20201112 09:46:18.611" endtime="20201112 09:46:18.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:18.599" endtime="20201112 09:46:18.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:18.627" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:18.625" endtime="20201112 09:46:18.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:18.632" level="INFO">VALUE: [0.0367035, 0.046705375, 0.056706431, 0.066707556, 0.076708556, 0.086709694, 0.096710764, 0.106711917, 0.116712875, 0.126714028, 0.136715097, 0.146716181, 0.156717194, 0.166718333, 0.176719347, 0.1867205, 0.196721528, 0.206722653, 0.216723681, 0.226724833, 0.236725833, 0.246726972, 0.256727986, 0.266729153, 0.276730153, 0.286731306, 0.296732375, 0.306733458, 0.316734486, 0.326735625, 0.336736625, 0.346737778, 0.356738833, 0.366739944, 0.376740958, 0.386742111, 0.396743125, 0.406744278, 0.416745278, 0.426746444, 0.436747431, 0.446748583, 0.456749597, 0.466750806, 0.476751764, 0.486752917, 0.496753958, 0.506755069, 0.516756083, 0.526757236, 0.53675825, 0.546759389, 0.556760417, 0.566761569, 0.576762583, 0.586763722, 0.596764778, 0.606765875, 0.616766903, 0.626768069, 0.636769056, 0.646770208, 0.656771236, 0.666772375, 0.676773375, 0.686774528, 0.696775542, 0.706776708, 0.716777722, 0.726778861, 0.736779917, 0.746781014, 0.756782042, 0.766783194, 0.776784194, 0.786785361, 0.796786389, 0.8067875, 0.816788514, 0.826789667, 0.836790694, 0.846791847, 0.856792861, 0.866793986, 0.876795, 0.886796194, 0.896797208, 0.906798319, 0.916799333, 0.926800514, 0.936801486, 0.946802639, 0.956803653, 0.966804806, 0.976805833, 0.986806972, 0.996807972, 1.006809181, 1.016810139, 1.026811292] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:18.629" endtime="20201112 09:46:18.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:18.617" endtime="20201112 09:46:18.634"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:18.641" endtime="20201112 09:46:18.643"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:18.651" endtime="20201112 09:46:18.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:18.645" endtime="20201112 09:46:18.674"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:18.636" endtime="20201112 09:46:18.676"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:15.946" endtime="20201112 09:46:18.676"></status>
</kw>
<msg timestamp="20201112 09:46:18.677" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:18.698" endtime="20201112 09:46:20.800"></status>
</kw>
<msg timestamp="20201112 09:46:20.800" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 76103908, 'wakeups': [76114024, 76124025, 76134025, 76144025, 761540...</msg>
<status status="PASS" starttime="20201112 09:46:18.695" endtime="20201112 09:46:20.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:20.807" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 76103908, 'wakeups': [76114024, 76124025, 76134025, 76144025, 761540...</msg>
<status status="PASS" starttime="20201112 09:46:20.801" endtime="20201112 09:46:20.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:20.809" endtime="20201112 09:46:20.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:18.687" endtime="20201112 09:46:20.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:18.682" endtime="20201112 09:46:20.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:20.815" level="INFO">${RESULT} = {'wakeups': [76114024, 76124025, 76134025, 76144025, 76154025, 76164025, 76174025, 76184025, 76194025, 76204025, 76214025, 76224025, 76234025, 76244025, 76254025, 76264025, 76274025, 76284025, 7629402...</msg>
<status status="PASS" starttime="20201112 09:46:20.813" endtime="20201112 09:46:20.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:20.820" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:20.819" endtime="20201112 09:46:20.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:20.822" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:20.821" endtime="20201112 09:46:20.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:20.816" endtime="20201112 09:46:20.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:20.828" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:46:20.827" endtime="20201112 09:46:20.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:20.831" level="INFO">VALUE: 76103908</msg>
<status status="PASS" starttime="20201112 09:46:20.829" endtime="20201112 09:46:20.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:20.824" endtime="20201112 09:46:20.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:20.837" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:20.835" endtime="20201112 09:46:20.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:20.839" level="INFO">VALUE: [76114024, 76124025, 76134025, 76144025, 76154025, 76164025, 76174025, 76184025, 76194025, 76204025, 76214025, 76224025, 76234025, 76244025, 76254025, 76264025, 76274025, 76284025, 76294025, 76304025, 76314025, 76324025, 76334025, 76344025, 76354025, 76364025, 76374025, 76384025, 76394025, 76404025, 76414025, 76424025, 76434025, 76444025, 76454025, 76464025, 76474025, 76484025, 76494025, 76504025, 76514025, 76524025, 76534025, 76544025, 76554025, 76564025, 76574025, 76584025, 76594025, 76604025, 76614025, 76624025, 76634025, 76644025, 76654025, 76664025, 76674025, 76684025, 76694025, 76704025, 76714025, 76724025, 76734025, 76744025, 76754025, 76764025, 76774025, 76784025, 76794025, 76804025, 76814025, 76824025, 76834025, 76844025, 76854025, 76864025, 76874025, 76884025, 76894025, 76904025, 76914025, 76924025, 76934025, 76944025, 76954025, 76964025, 76974025, 76984025, 76994025, 77004025, 77014025, 77024025, 77034025, 77044025, 77054025, 77064025, 77074025, 77084025, 77094025, 77104025]</msg>
<status status="PASS" starttime="20201112 09:46:20.838" endtime="20201112 09:46:20.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:20.832" endtime="20201112 09:46:20.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:20.848" endtime="20201112 09:46:21.164"></status>
</kw>
<msg timestamp="20201112 09:46:21.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038727625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048845181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:20.846" endtime="20201112 09:46:21.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:21.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038727625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048845181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:21.173" endtime="20201112 09:46:21.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:21.190" endtime="20201112 09:46:21.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:20.843" endtime="20201112 09:46:21.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:20.841" endtime="20201112 09:46:21.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:21.254" level="INFO">${RESULT} = {'time': [0.038727625, 0.048845181, 0.058847083, 0.068848083, 0.078849236, 0.08885025, 0.098851403, 0.108852403, 0.118853569, 0.128854597, 0.138855764, 0.148856722, 0.158857889, 0.168858903, 0.1788600...</msg>
<status status="PASS" starttime="20201112 09:46:21.200" endtime="20201112 09:46:21.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:21.266" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:46:21.263" endtime="20201112 09:46:21.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:21.270" level="INFO">VALUE: 0.038727625</msg>
<status status="PASS" starttime="20201112 09:46:21.268" endtime="20201112 09:46:21.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:21.257" endtime="20201112 09:46:21.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:21.284" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:21.282" endtime="20201112 09:46:21.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:21.289" level="INFO">VALUE: [0.048845181, 0.058847083, 0.068848083, 0.078849236, 0.08885025, 0.098851403, 0.108852403, 0.118853569, 0.128854597, 0.138855764, 0.148856722, 0.158857889, 0.168858903, 0.178860042, 0.188861042, 0.198862194, 0.208863194, 0.218864361, 0.228865375, 0.238866514, 0.248867528, 0.258868667, 0.268869722, 0.278870847, 0.288871875, 0.298873, 0.308874042, 0.318875153, 0.328876153, 0.338877306, 0.348878319, 0.358879472, 0.368880472, 0.378881625, 0.388882639, 0.398883806, 0.408884792, 0.418885986, 0.428886972, 0.438888111, 0.448889194, 0.458890278, 0.468891278, 0.478892431, 0.488893458, 0.498894597, 0.508895611, 0.51889675, 0.528897764, 0.538898917, 0.548899917, 0.558901069, 0.568902097, 0.578903236, 0.58890425, 0.598905389, 0.608906417, 0.618907556, 0.628908583, 0.638909722, 0.648910722, 0.658911889, 0.668912903, 0.678914042, 0.688915056, 0.698916222, 0.708917208, 0.718918361, 0.728919375, 0.738920528, 0.748921542, 0.758922681, 0.768923694, 0.778924889, 0.788925861, 0.798927, 0.808928083, 0.818929167, 0.828930194, 0.838931347, 0.848932333, 0.8589335, 0.8689345, 0.878935667, 0.888936667, 0.898937806, 0.908938833, 0.918939972, 0.928940986, 0.938942139, 0.948943139, 0.958944292, 0.968945347, 0.978946514, 0.988947472, 0.998948625, 1.008949625, 1.018950806, 1.028951792, 1.038952944] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:21.286" endtime="20201112 09:46:21.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:21.274" endtime="20201112 09:46:21.291"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:21.298" endtime="20201112 09:46:21.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:21.306" endtime="20201112 09:46:21.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:21.302" endtime="20201112 09:46:21.330"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:21.293" endtime="20201112 09:46:21.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:18.678" endtime="20201112 09:46:21.332"></status>
</kw>
<msg timestamp="20201112 09:46:21.332" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:21.354" endtime="20201112 09:46:23.472"></status>
</kw>
<msg timestamp="20201112 09:46:23.473" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 78759470, 'wakeups': [78769586, 78779587, 78789587, 78799587, 788095...</msg>
<status status="PASS" starttime="20201112 09:46:21.350" endtime="20201112 09:46:23.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:23.480" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 78759470, 'wakeups': [78769586, 78779587, 78789587, 78799587, 788095...</msg>
<status status="PASS" starttime="20201112 09:46:23.476" endtime="20201112 09:46:23.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:23.483" endtime="20201112 09:46:23.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:21.343" endtime="20201112 09:46:23.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:21.338" endtime="20201112 09:46:23.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:23.497" level="INFO">${RESULT} = {'wakeups': [78769586, 78779587, 78789587, 78799587, 78809587, 78819587, 78829587, 78839587, 78849587, 78859587, 78869587, 78879587, 78889587, 78899587, 78909587, 78919587, 78929587, 78939587, 7894958...</msg>
<status status="PASS" starttime="20201112 09:46:23.491" endtime="20201112 09:46:23.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:23.507" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:23.505" endtime="20201112 09:46:23.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:23.512" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:23.510" endtime="20201112 09:46:23.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:23.499" endtime="20201112 09:46:23.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:23.525" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:46:23.523" endtime="20201112 09:46:23.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:23.530" level="INFO">VALUE: 78759470</msg>
<status status="PASS" starttime="20201112 09:46:23.527" endtime="20201112 09:46:23.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:23.516" endtime="20201112 09:46:23.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:23.542" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:23.540" endtime="20201112 09:46:23.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:23.547" level="INFO">VALUE: [78769586, 78779587, 78789587, 78799587, 78809587, 78819587, 78829587, 78839587, 78849587, 78859587, 78869587, 78879587, 78889587, 78899587, 78909587, 78919587, 78929587, 78939587, 78949587, 78959587, 78969587, 78979587, 78989587, 78999587, 79009587, 79019587, 79029587, 79039587, 79049587, 79059587, 79069587, 79079587, 79089587, 79099587, 79109587, 79119587, 79129587, 79139587, 79149587, 79159587, 79169587, 79179587, 79189587, 79199587, 79209587, 79219587, 79229587, 79239587, 79249587, 79259587, 79269587, 79279587, 79289587, 79299587, 79309587, 79319587, 79329587, 79339587, 79349587, 79359587, 79369587, 79379587, 79389587, 79399587, 79409587, 79419587, 79429587, 79439587, 79449587, 79459587, 79469587, 79479587, 79489587, 79499587, 79509587, 79519587, 79529587, 79539587, 79549587, 79559587, 79569587, 79579587, 79589587, 79599587, 79609587, 79619587, 79629587, 79639587, 79649587, 79659587, 79669587, 79679587, 79689587, 79699587, 79709587, 79719587, 79729587, 79739587, 79749587, 79759587]</msg>
<status status="PASS" starttime="20201112 09:46:23.544" endtime="20201112 09:46:23.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:23.533" endtime="20201112 09:46:23.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:23.566" endtime="20201112 09:46:23.906"></status>
</kw>
<msg timestamp="20201112 09:46:23.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038858181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04897575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:46:23.562" endtime="20201112 09:46:23.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:23.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038858181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04897575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:46:23.915" endtime="20201112 09:46:23.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:23.932" endtime="20201112 09:46:23.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:23.555" endtime="20201112 09:46:23.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:23.551" endtime="20201112 09:46:23.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:23.993" level="INFO">${RESULT} = {'time': [0.038858181, 0.04897575, 0.058977639, 0.068978653, 0.078979806, 0.088980861, 0.098981972, 0.108982986, 0.118984194, 0.128985181, 0.138986306, 0.148987319, 0.158988486, 0.168989486, 0.1789906...</msg>
<status status="PASS" starttime="20201112 09:46:23.940" endtime="20201112 09:46:23.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:24.004" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:46:24.002" endtime="20201112 09:46:24.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:24.009" level="INFO">VALUE: 0.038858181</msg>
<status status="PASS" starttime="20201112 09:46:24.007" endtime="20201112 09:46:24.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:23.995" endtime="20201112 09:46:24.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:24.022" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:24.020" endtime="20201112 09:46:24.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:24.027" level="INFO">VALUE: [0.04897575, 0.058977639, 0.068978653, 0.078979806, 0.088980861, 0.098981972, 0.108982986, 0.118984194, 0.128985181, 0.138986306, 0.148987319, 0.158988486, 0.168989486, 0.178990667, 0.188991667, 0.198992806, 0.208993889, 0.218994986, 0.228996, 0.238997167, 0.248998167, 0.258999403, 0.269000347, 0.279001486, 0.289002514, 0.299003667, 0.309004681, 0.319005819, 0.329006833, 0.339008014, 0.349009014, 0.359010181, 0.369011181, 0.379012333, 0.389013347, 0.3990145, 0.409015542, 0.419016667, 0.429017681, 0.439018833, 0.449019847, 0.459021014, 0.469022042, 0.479023222, 0.489024194, 0.499025347, 0.509026375, 0.519027514, 0.529028528, 0.539029694, 0.549030722, 0.559031861, 0.569032875, 0.579034028, 0.589035056, 0.599036194, 0.60903725, 0.619038375, 0.629039389, 0.639040556, 0.649041556, 0.659042764, 0.669043722, 0.679044917, 0.689045903, 0.699047042, 0.709048069, 0.719049208, 0.729050236, 0.739051389, 0.749052417, 0.759053569, 0.769054569, 0.779055722, 0.78905675, 0.799057958, 0.809058917, 0.819060056, 0.829061069, 0.839062236, 0.849063264, 0.859064403, 0.869065431, 0.879066583, 0.889067583, 0.899068736, 0.90906975, 0.919070903, 0.929071917, 0.939073069, 0.949074083, 0.959075264, 0.969076264, 0.979077431, 0.989078431, 0.999079583, 1.009080597, 1.019081764, 1.029082778, 1.039083917] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:24.024" endtime="20201112 09:46:24.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:24.012" endtime="20201112 09:46:24.030"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:24.036" endtime="20201112 09:46:24.039"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:24.045" endtime="20201112 09:46:24.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:24.040" endtime="20201112 09:46:24.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:24.032" endtime="20201112 09:46:24.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:21.334" endtime="20201112 09:46:24.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:15.944" endtime="20201112 09:46:24.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:15.943" endtime="20201112 09:46:24.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:03.347" endtime="20201112 09:46:24.071"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 09:45:03.211" endtime="20201112 09:46:24.074" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:45:00.589" endtime="20201112 09:46:24.082"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased</item>
</metadata>
<status status="PASS" starttime="20201112 09:42:38.355" endtime="20201112 09:46:24.125"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
