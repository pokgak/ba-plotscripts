<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201112 10:13:57.423" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.649" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 10:13:58.665" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 10:14:00.468" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 10:13:58.644" endtime="20201112 10:14:00.469"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.474" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 10:14:00.471" endtime="20201112 10:14:00.475"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.641" endtime="20201112 10:14:00.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:00.481" endtime="20201112 10:14:00.812"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.478" endtime="20201112 10:14:00.814"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.844" endtime="20201112 10:14:00.878"></status>
</kw>
<msg timestamp="20201112 10:14:00.879" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103...</msg>
<status status="PASS" starttime="20201112 10:14:00.841" endtime="20201112 10:14:00.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.886" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103...</msg>
<status status="PASS" starttime="20201112 10:14:00.882" endtime="20201112 10:14:00.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.893" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:00.888" endtime="20201112 10:14:00.893"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:00.835" endtime="20201112 10:14:00.895"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:00.828" endtime="20201112 10:14:00.897"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.826" endtime="20201112 10:14:00.898"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:00.905" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:00.904" endtime="20201112 10:14:00.906"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.899" endtime="20201112 10:14:00.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.824" endtime="20201112 10:14:00.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.822" endtime="20201112 10:14:00.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.909" endtime="20201112 10:14:00.913"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.818" endtime="20201112 10:14:00.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.916" endtime="20201112 10:14:00.919"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.815" endtime="20201112 10:14:00.921"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.637" endtime="20201112 10:14:00.922"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:00.936" endtime="20201112 10:14:00.958"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.932" endtime="20201112 10:14:00.959"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.995" endtime="20201112 10:14:01.019"></status>
</kw>
<msg timestamp="20201112 10:14:01.020" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:00.991" endtime="20201112 10:14:01.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.026" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:01.022" endtime="20201112 10:14:01.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.033" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:01.028" endtime="20201112 10:14:01.033"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:00.984" endtime="20201112 10:14:01.035"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:00.978" endtime="20201112 10:14:01.037"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.974" endtime="20201112 10:14:01.037"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:01.045" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:01.044" endtime="20201112 10:14:01.046"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.039" endtime="20201112 10:14:01.046"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.972" endtime="20201112 10:14:01.047"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.969" endtime="20201112 10:14:01.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.049" endtime="20201112 10:14:01.052"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.965" endtime="20201112 10:14:01.054"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.961" endtime="20201112 10:14:01.055"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.930" endtime="20201112 10:14:01.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.073" endtime="20201112 10:14:01.087"></status>
</kw>
<msg timestamp="20201112 10:14:01.088" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:01.070" endtime="20201112 10:14:01.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.094" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:01.090" endtime="20201112 10:14:01.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.096" endtime="20201112 10:14:01.100"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.063" endtime="20201112 10:14:01.102"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.058" endtime="20201112 10:14:01.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.113" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 10:14:01.111" endtime="20201112 10:14:01.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.118" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 10:14:01.116" endtime="20201112 10:14:01.119"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.105" endtime="20201112 10:14:01.120"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:00.923" endtime="20201112 10:14:01.122" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 10:13:57.684" endtime="20201112 10:14:01.131"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.268" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 10:14:01.283" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 10:14:03.165" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 10:14:01.264" endtime="20201112 10:14:03.166"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.172" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 10:14:03.168" endtime="20201112 10:14:03.172"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.261" endtime="20201112 10:14:03.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:03.178" endtime="20201112 10:14:03.509"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.176" endtime="20201112 10:14:03.510"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.539" endtime="20201112 10:14:03.573"></status>
</kw>
<msg timestamp="20201112 10:14:03.574" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [': This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb...</msg>
<status status="PASS" starttime="20201112 10:14:03.536" endtime="20201112 10:14:03.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.580" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [': This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb...</msg>
<status status="PASS" starttime="20201112 10:14:03.576" endtime="20201112 10:14:03.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.587" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:03.583" endtime="20201112 10:14:03.588"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:03.530" endtime="20201112 10:14:03.590"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:03.525" endtime="20201112 10:14:03.591"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.522" endtime="20201112 10:14:03.592"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:03.600" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:03.598" endtime="20201112 10:14:03.601"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.594" endtime="20201112 10:14:03.601"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.520" endtime="20201112 10:14:03.601"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.518" endtime="20201112 10:14:03.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.603" endtime="20201112 10:14:03.607"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.515" endtime="20201112 10:14:03.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.610" endtime="20201112 10:14:03.614"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.512" endtime="20201112 10:14:03.615"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.258" endtime="20201112 10:14:03.616"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:03.629" endtime="20201112 10:14:03.651"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.626" endtime="20201112 10:14:03.653"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.749" endtime="20201112 10:14:03.773"></status>
</kw>
<msg timestamp="20201112 10:14:03.774" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.744" endtime="20201112 10:14:03.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.781" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.777" endtime="20201112 10:14:03.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.788" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:03.784" endtime="20201112 10:14:03.789"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:03.737" endtime="20201112 10:14:03.791"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:03.731" endtime="20201112 10:14:03.793"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.666" endtime="20201112 10:14:03.793"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:03.801" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:03.800" endtime="20201112 10:14:03.802"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.795" endtime="20201112 10:14:03.803"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.664" endtime="20201112 10:14:03.803"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.663" endtime="20201112 10:14:03.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.805" endtime="20201112 10:14:03.809"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.658" endtime="20201112 10:14:03.810"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.654" endtime="20201112 10:14:03.812"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.623" endtime="20201112 10:14:03.812"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 10:14:03.817" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.838" endtime="20201112 10:14:03.851"></status>
</kw>
<msg timestamp="20201112 10:14:03.852" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.834" endtime="20201112 10:14:03.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.858" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.854" endtime="20201112 10:14:03.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.861" endtime="20201112 10:14:03.866"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.827" endtime="20201112 10:14:03.868"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.822" endtime="20201112 10:14:03.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.887" endtime="20201112 10:14:04.208"></status>
</kw>
<msg timestamp="20201112 10:14:04.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.199139681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.19915225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:03.884" endtime="20201112 10:14:04.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.199139681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.19915225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:04.215" endtime="20201112 10:14:04.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.227" endtime="20201112 10:14:04.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.876" endtime="20201112 10:14:04.233"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.871" endtime="20201112 10:14:04.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.244" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:04.242" endtime="20201112 10:14:04.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.252" level="INFO">VALUE: [{'time': 0.199139681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.19915225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.256899999999006e-05, 'source_diff': 1.256899999999006e-05}, {'time': 0.199159903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999996357e-06, 'source_diff': 7.652999999996357e-06}, {'time': 0.199167833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.929999999989334e-06, 'source_diff': 7.929999999989334e-06}, {'time': 0.199174056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.199179056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0000000000050004e-06, 'source_diff': 5.0000000000050004e-06}, {'time': 0.199193431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4375000000010907e-05, 'source_diff': 1.4375000000010907e-05}, {'time': 0.199205403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1971999999998983e-05, 'source_diff': 1.1971999999998983e-05}, {'time': 0.199207819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4160000000050808e-06, 'source_diff': 2.4160000000050808e-06}, {'time': 0.199223028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.520899999998826e-05, 'source_diff': 1.520899999998826e-05}, {'time': 0.19923325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0222000000004172e-05, 'source_diff': 1.0222000000004172e-05}, {'time': 0.1992445, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999990434e-05, 'source_diff': 1.1249999999990434e-05}, {'time': 0.199258653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4153000000016736e-05, 'source_diff': 1.4153000000016736e-05}, {'time': 0.199263653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0000000000050004e-06, 'source_diff': 5.0000000000050004e-06}, {'time': 0.199270944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.290999999992609e-06, 'source_diff': 7.290999999992609e-06}, {'time': 0.199285528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4583999999984165e-05, 'source_diff': 1.4583999999984165e-05}, {'time': 0.199298861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3333000000004258e-05, 'source_diff': 1.3333000000004258e-05}, {'time': 0.199302014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1530000000057345e-06, 'source_diff': 3.1530000000057345e-06}, {'time': 0.199307403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.388999999994537e-06, 'source_diff': 5.388999999994537e-06}, {'time': 0.199321792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4389000000003538e-05, 'source_diff': 1.4389000000003538e-05}, {'time': 0.199330139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999991889e-06, 'source_diff': 8.346999999991889e-06}, {'time': 0.199340528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.199343028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.500000000016378e-06, 'source_diff': 2.500000000016378e-06}, {'time': 0.199354292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1263999999983065e-05, 'source_diff': 1.1263999999983065e-05}, {'time': 0.1993645, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0208000000011541e-05, 'source_diff': 1.0208000000011541e-05}, {'time': 0.199368319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8189999999882485e-06, 'source_diff': 3.8189999999882485e-06}, {'time': 0.19937075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.431000000024941e-06, 'source_diff': 2.431000000024941e-06}, {'time': 0.199378667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916999999996177e-06, 'source_diff': 7.916999999996177e-06}, {'time': 0.19938725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.582999999978691e-06, 'source_diff': 8.582999999978691e-06}, {'time': 0.199402625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5375000000011907e-05, 'source_diff': 1.5375000000011907e-05}, {'time': 0.1994145, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1874999999994529e-05, 'source_diff': 1.1874999999994529e-05}, {'time': 0.199418458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.199432431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3973000000000457e-05, 'source_diff': 1.3973000000000457e-05}, {'time': 0.199435208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7770000000093553e-06, 'source_diff': 2.7770000000093553e-06}, {'time': 0.199449097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.388899999998916e-05, 'source_diff': 1.388899999998916e-05}, {'time': 0.199461375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2278000000004452e-05, 'source_diff': 1.2278000000004452e-05}, {'time': 0.199475986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.461099999999771e-05, 'source_diff': 1.461099999999771e-05}, {'time': 0.199482222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999992803e-06, 'source_diff': 6.235999999992803e-06}, {'time': 0.199496014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3792000000012461e-05, 'source_diff': 1.3792000000012461e-05}, {'time': 0.199500556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541999999996271e-06, 'source_diff': 4.541999999996271e-06}, {'time': 0.199512847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.229099999999761e-05, 'source_diff': 1.229099999999761e-05}, {'time': 0.199520361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.5140000000140095e-06, 'source_diff': 7.5140000000140095e-06}, {'time': 0.199526389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999912626e-06, 'source_diff': 6.0279999999912626e-06}, {'time': 0.19953725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.199552028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4777999999993074e-05, 'source_diff': 1.4777999999993074e-05}, {'time': 0.199565556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3528000000012641e-05, 'source_diff': 1.3528000000012641e-05}, {'time': 0.199575764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0207999999983786e-05, 'source_diff': 1.0207999999983786e-05}, {'time': 0.199583069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.3050000000129955e-06, 'source_diff': 7.3050000000129955e-06}, {'time': 0.199590986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.916999999996177e-06, 'source_diff': 7.916999999996177e-06}, {'time': 0.19959975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.763999999994443e-06, 'source_diff': 8.763999999994443e-06}]</msg>
<status status="PASS" starttime="20201112 10:14:04.247" endtime="20201112 10:14:04.254"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.235" endtime="20201112 10:14:04.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:04.287" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:14:04.257" endtime="20201112 10:14:04.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.296" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:04.294" endtime="20201112 10:14:04.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.303" level="INFO">VALUE: {'eventsource_diff': [0, 1.256899999999006e-05, 7.652999999996357e-06, 7.929999999989334e-06, 6.2229999999996455e-06, 5.0000000000050004e-06, 1.4375000000010907e-05, 1.1971999999998983e-05, 2.4160000000050808e-06, 1.520899999998826e-05, 1.0222000000004172e-05, 1.1249999999990434e-05, 1.4153000000016736e-05, 5.0000000000050004e-06, 7.290999999992609e-06, 1.4583999999984165e-05, 1.3333000000004258e-05, 3.1530000000057345e-06, 5.388999999994537e-06, 1.4389000000003538e-05, 8.346999999991889e-06, 1.0388999999999537e-05, 2.500000000016378e-06, 1.1263999999983065e-05, 1.0208000000011541e-05, 3.8189999999882485e-06, 2.431000000024941e-06, 7.916999999996177e-06, 8.582999999978691e-06, 1.5375000000011907e-05, 1.1874999999994529e-05, 3.957999999998352e-06, 1.3973000000000457e-05, 2.7770000000093553e-06, 1.388899999998916e-05, 1.2278000000004452e-05, 1.461099999999771e-05, 6.235999999992803e-06, 1.3792000000012461e-05, 4.541999999996271e-06, 1.229099999999761e-05, 7.5140000000140095e-06, 6.0279999999912626e-06, 1.0861000000000898e-05, 1.4777999999993074e-05, 1.3528000000012641e-05, 1.0207999999983786e-05, 7.3050000000129955e-06, 7.916999999996177e-06, 8.763999999994443e-06], 'sourcediff': [0, 1.256899999999006e-05, 7.652999999996357e-06, 7.929999999989334e-06, 6.2229999999996455e-06, 5.0000000000050004e-06, 1.4375000000010907e-05, 1.1971999999998983e-05, 2.4160000000050808e-06, 1.520899999998826e-05, 1.0222000000004172e-05, 1.1249999999990434e-05, 1.4153000000016736e-05, 5.0000000000050004e-06, 7.290999999992609e-06, 1.4583999999984165e-05, 1.3333000000004258e-05, 3.1530000000057345e-06, 5.388999999994537e-06, 1.4389000000003538e-05, 8.346999999991889e-06, 1.0388999999999537e-05, 2.500000000016378e-06, 1.1263999999983065e-05, 1.0208000000011541e-05, 3.8189999999882485e-06, 2.431000000024941e-06, 7.916999999996177e-06, 8.582999999978691e-06, 1.5375000000011907e-05, 1.1874999999994529e-05, 3.957999999998352e-06, 1.3973000000000457e-05, 2.7770000000093553e-06, 1.388899999998916e-05, 1.2278000000004452e-05, 1.461099999999771e-05, 6.235999999992803e-06, 1.3792000000012461e-05, 4.541999999996271e-06, 1.229099999999761e-05, 7.5140000000140095e-06, 6.0279999999912626e-06, 1.0861000000000898e-05, 1.4777999999993074e-05, 1.3528000000012641e-05, 1.0207999999983786e-05, 7.3050000000129955e-06, 7.916999999996177e-06, 8.763999999994443e-06], 'time': [0.199139681, 0.19915225, 0.199159903, 0.199167833, 0.199174056, 0.199179056, 0.199193431, 0.199205403, 0.199207819, 0.199223028, 0.19923325, 0.1992445, 0.199258653, 0.199263653, 0.199270944, 0.199285528, 0.199298861, 0.199302014, 0.199307403, 0.199321792, 0.199330139, 0.199340528, 0.199343028, 0.199354292, 0.1993645, 0.199368319, 0.19937075, 0.199378667, 0.19938725, 0.199402625, 0.1994145, 0.199418458, 0.199432431, 0.199435208, 0.199449097, 0.199461375, 0.199475986, 0.199482222, 0.199496014, 0.199500556, 0.199512847, 0.199520361, 0.199526389, 0.19953725, 0.199552028, 0.199565556, 0.199575764, 0.199583069, 0.199590986, 0.19959975]}</msg>
<status status="PASS" starttime="20201112 10:14:04.299" endtime="20201112 10:14:04.304"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.288" endtime="20201112 10:14:04.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:04.315" level="INFO">${RESULT} = [{'time': 0.19915225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.256899999999006e-05, 'source_diff': 1.256899999999006e-05}, {'time': 0.199167833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:14:04.308" endtime="20201112 10:14:04.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:04.333" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:04.317" endtime="20201112 10:14:04.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.344" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:04.341" endtime="20201112 10:14:04.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.349" level="INFO">VALUE: [1.256899999999006e-05, 7.929999999989334e-06, 5.0000000000050004e-06, 1.1971999999998983e-05, 1.520899999998826e-05, 1.1249999999990434e-05, 5.0000000000050004e-06, 1.4583999999984165e-05, 3.1530000000057345e-06, 1.4389000000003538e-05, 1.0388999999999537e-05, 1.1263999999983065e-05, 3.8189999999882485e-06, 7.916999999996177e-06, 1.5375000000011907e-05, 3.957999999998352e-06, 2.7770000000093553e-06, 1.2278000000004452e-05, 6.235999999992803e-06, 4.541999999996271e-06, 7.5140000000140095e-06, 1.0861000000000898e-05, 1.3528000000012641e-05, 7.3050000000129955e-06, 8.763999999994443e-06]</msg>
<status status="PASS" starttime="20201112 10:14:04.347" endtime="20201112 10:14:04.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.335" endtime="20201112 10:14:04.352"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.358" endtime="20201112 10:14:04.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:04.366" endtime="20201112 10:14:04.388"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.362" endtime="20201112 10:14:04.389"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.354" endtime="20201112 10:14:04.392"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.818" endtime="20201112 10:14:04.392"></status>
</kw>
<msg timestamp="20201112 10:14:04.393" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.412" endtime="20201112 10:14:04.425"></status>
</kw>
<msg timestamp="20201112 10:14:04.427" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.409" endtime="20201112 10:14:04.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.433" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.429" endtime="20201112 10:14:04.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.435" endtime="20201112 10:14:04.439"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.402" endtime="20201112 10:14:04.440"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.397" endtime="20201112 10:14:04.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.458" endtime="20201112 10:14:04.772"></status>
</kw>
<msg timestamp="20201112 10:14:04.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036692694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036704569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:04.455" endtime="20201112 10:14:04.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036692694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036704569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:04.779" endtime="20201112 10:14:04.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.791" endtime="20201112 10:14:04.795"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.448" endtime="20201112 10:14:04.797"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.443" endtime="20201112 10:14:04.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.807" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:04.805" endtime="20201112 10:14:04.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.815" level="INFO">VALUE: [{'time': 0.036692694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036704569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1875000000001468e-05, 'source_diff': 1.1875000000001468e-05}, {'time': 0.036718306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3736999999999777e-05, 'source_diff': 1.3736999999999777e-05}, {'time': 0.036721014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7080000000040405e-06, 'source_diff': 2.7080000000040405e-06}, {'time': 0.036733764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2749999999998873e-05, 'source_diff': 1.2749999999998873e-05}, {'time': 0.036738722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.036741222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4999999999955613e-06, 'source_diff': 2.4999999999955613e-06}, {'time': 0.036749139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.917000000003116e-06, 'source_diff': 7.917000000003116e-06}, {'time': 0.036752472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.333000000001196e-06, 'source_diff': 3.333000000001196e-06}, {'time': 0.036759139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.667000000001866e-06, 'source_diff': 6.667000000001866e-06}, {'time': 0.036774139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999994185e-05, 'source_diff': 1.4999999999994185e-05}, {'time': 0.036778722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.583000000002446e-06, 'source_diff': 4.583000000002446e-06}, {'time': 0.036788514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.792000000001522e-06, 'source_diff': 9.792000000001522e-06}, {'time': 0.036800597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2082999999996069e-05, 'source_diff': 1.2082999999996069e-05}, {'time': 0.036814569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3972000000000984e-05, 'source_diff': 1.3972000000000984e-05}, {'time': 0.036827278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2708999999999637e-05, 'source_diff': 1.2708999999999637e-05}, {'time': 0.036832069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7910000000039865e-06, 'source_diff': 4.7910000000039865e-06}, {'time': 0.036843944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1875000000001468e-05, 'source_diff': 1.1875000000001468e-05}, {'time': 0.036850861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.916999999995177e-06, 'source_diff': 6.916999999995177e-06}, {'time': 0.036856042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.036865819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.777000000002478e-06, 'source_diff': 9.777000000002478e-06}, {'time': 0.036878319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2499999999998623e-05, 'source_diff': 1.2499999999998623e-05}, {'time': 0.036881667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3480000000002397e-06, 'source_diff': 3.3480000000002397e-06}, {'time': 0.036895194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.352699999999929e-05, 'source_diff': 1.352699999999929e-05}, {'time': 0.036897917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.723000000003084e-06, 'source_diff': 2.723000000003084e-06}, {'time': 0.036913347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5429999999996835e-05, 'source_diff': 1.5429999999996835e-05}, {'time': 0.036925417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2070000000002912e-05, 'source_diff': 1.2070000000002912e-05}, {'time': 0.036928125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7079999999971016e-06, 'source_diff': 2.7079999999971016e-06}, {'time': 0.036931667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.036946889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5221999999995295e-05, 'source_diff': 1.5221999999995295e-05}, {'time': 0.036950056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1670000000053045e-06, 'source_diff': 3.1670000000053045e-06}, {'time': 0.036956264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.036969583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.331899999999775e-05, 'source_diff': 1.331899999999775e-05}, {'time': 0.036979194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.036981458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.26400000000182e-06, 'source_diff': 2.26400000000182e-06}, {'time': 0.036994167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2708999999999637e-05, 'source_diff': 1.2708999999999637e-05}, {'time': 0.036998125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.037009583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.037024792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5209000000002137e-05, 'source_diff': 1.5209000000002137e-05}, {'time': 0.037039375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.458299999999857e-05, 'source_diff': 1.458299999999857e-05}, {'time': 0.037050222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.037057708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.037061056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3480000000002397e-06, 'source_diff': 3.3480000000002397e-06}, {'time': 0.037072306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999997373e-05, 'source_diff': 1.1249999999997373e-05}, {'time': 0.037082931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.037095014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2083000000003008e-05, 'source_diff': 1.2083000000003008e-05}, {'time': 0.037098556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.541999999995271e-06, 'source_diff': 3.541999999995271e-06}, {'time': 0.037113139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4583000000005508e-05, 'source_diff': 1.4583000000005508e-05}, {'time': 0.037116903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7639999999963814e-06, 'source_diff': 3.7639999999963814e-06}, {'time': 0.037131292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4389000000003538e-05, 'source_diff': 1.4389000000003538e-05}]</msg>
<status status="PASS" starttime="20201112 10:14:04.810" endtime="20201112 10:14:04.817"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.799" endtime="20201112 10:14:04.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:04.850" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:14:04.821" endtime="20201112 10:14:04.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.860" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:04.857" endtime="20201112 10:14:04.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.868" level="INFO">VALUE: {'eventsource_diff': [0, 1.1875000000001468e-05, 1.3736999999999777e-05, 2.7080000000040405e-06, 1.2749999999998873e-05, 4.957999999999352e-06, 2.4999999999955613e-06, 7.917000000003116e-06, 3.333000000001196e-06, 6.667000000001866e-06, 1.4999999999994185e-05, 4.583000000002446e-06, 9.792000000001522e-06, 1.2082999999996069e-05, 1.3972000000000984e-05, 1.2708999999999637e-05, 4.7910000000039865e-06, 1.1875000000001468e-05, 6.916999999995177e-06, 5.180999999999936e-06, 9.777000000002478e-06, 1.2499999999998623e-05, 3.3480000000002397e-06, 1.352699999999929e-05, 2.723000000003084e-06, 1.5429999999996835e-05, 1.2070000000002912e-05, 2.7079999999971016e-06, 3.54200000000221e-06, 1.5221999999995295e-05, 3.1670000000053045e-06, 6.208000000000602e-06, 1.331899999999775e-05, 9.610999999999648e-06, 2.26400000000182e-06, 1.2708999999999637e-05, 3.957999999998352e-06, 1.1457999999998913e-05, 1.5209000000002137e-05, 1.458299999999857e-05, 1.0847000000001328e-05, 7.486000000000992e-06, 3.3480000000002397e-06, 1.1249999999997373e-05, 1.0625000000000218e-05, 1.2083000000003008e-05, 3.541999999995271e-06, 1.4583000000005508e-05, 3.7639999999963814e-06, 1.4389000000003538e-05], 'sourcediff': [0, 1.1875000000001468e-05, 1.3736999999999777e-05, 2.7080000000040405e-06, 1.2749999999998873e-05, 4.957999999999352e-06, 2.4999999999955613e-06, 7.917000000003116e-06, 3.333000000001196e-06, 6.667000000001866e-06, 1.4999999999994185e-05, 4.583000000002446e-06, 9.792000000001522e-06, 1.2082999999996069e-05, 1.3972000000000984e-05, 1.2708999999999637e-05, 4.7910000000039865e-06, 1.1875000000001468e-05, 6.916999999995177e-06, 5.180999999999936e-06, 9.777000000002478e-06, 1.2499999999998623e-05, 3.3480000000002397e-06, 1.352699999999929e-05, 2.723000000003084e-06, 1.5429999999996835e-05, 1.2070000000002912e-05, 2.7079999999971016e-06, 3.54200000000221e-06, 1.5221999999995295e-05, 3.1670000000053045e-06, 6.208000000000602e-06, 1.331899999999775e-05, 9.610999999999648e-06, 2.26400000000182e-06, 1.2708999999999637e-05, 3.957999999998352e-06, 1.1457999999998913e-05, 1.5209000000002137e-05, 1.458299999999857e-05, 1.0847000000001328e-05, 7.486000000000992e-06, 3.3480000000002397e-06, 1.1249999999997373e-05, 1.0625000000000218e-05, 1.2083000000003008e-05, 3.541999999995271e-06, 1.4583000000005508e-05, 3.7639999999963814e-06, 1.4389000000003538e-05], 'time': [0.036692694, 0.036704569, 0.036718306, 0.036721014, 0.036733764, 0.036738722, 0.036741222, 0.036749139, 0.036752472, 0.036759139, 0.036774139, 0.036778722, 0.036788514, 0.036800597, 0.036814569, 0.036827278, 0.036832069, 0.036843944, 0.036850861, 0.036856042, 0.036865819, 0.036878319, 0.036881667, 0.036895194, 0.036897917, 0.036913347, 0.036925417, 0.036928125, 0.036931667, 0.036946889, 0.036950056, 0.036956264, 0.036969583, 0.036979194, 0.036981458, 0.036994167, 0.036998125, 0.037009583, 0.037024792, 0.037039375, 0.037050222, 0.037057708, 0.037061056, 0.037072306, 0.037082931, 0.037095014, 0.037098556, 0.037113139, 0.037116903, 0.037131292]}</msg>
<status status="PASS" starttime="20201112 10:14:04.862" endtime="20201112 10:14:04.869"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.852" endtime="20201112 10:14:04.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:04.879" level="INFO">${RESULT} = [{'time': 0.036704569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1875000000001468e-05, 'source_diff': 1.1875000000001468e-05}, {'time': 0.036721014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:04.872" endtime="20201112 10:14:04.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:04.898" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:04.881" endtime="20201112 10:14:04.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.909" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:04.906" endtime="20201112 10:14:04.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.914" level="INFO">VALUE: [1.1875000000001468e-05, 2.7080000000040405e-06, 4.957999999999352e-06, 7.917000000003116e-06, 6.667000000001866e-06, 4.583000000002446e-06, 1.2082999999996069e-05, 1.2708999999999637e-05, 1.1875000000001468e-05, 5.180999999999936e-06, 1.2499999999998623e-05, 1.352699999999929e-05, 1.5429999999996835e-05, 2.7079999999971016e-06, 1.5221999999995295e-05, 6.208000000000602e-06, 9.610999999999648e-06, 1.2708999999999637e-05, 1.1457999999998913e-05, 1.458299999999857e-05, 7.486000000000992e-06, 1.1249999999997373e-05, 1.2083000000003008e-05, 1.4583000000005508e-05, 1.4389000000003538e-05]</msg>
<status status="PASS" starttime="20201112 10:14:04.911" endtime="20201112 10:14:04.915"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.900" endtime="20201112 10:14:04.917"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.924" endtime="20201112 10:14:04.926"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:04.932" endtime="20201112 10:14:04.954"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.928" endtime="20201112 10:14:04.956"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.919" endtime="20201112 10:14:04.957"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.394" endtime="20201112 10:14:04.958"></status>
</kw>
<msg timestamp="20201112 10:14:04.958" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.978" endtime="20201112 10:14:04.991"></status>
</kw>
<msg timestamp="20201112 10:14:04.992" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.975" endtime="20201112 10:14:04.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.999" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.995" endtime="20201112 10:14:04.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.001" endtime="20201112 10:14:05.005"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.967" endtime="20201112 10:14:05.006"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.963" endtime="20201112 10:14:05.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.024" endtime="20201112 10:14:05.343"></status>
</kw>
<msg timestamp="20201112 10:14:05.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036698083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036709333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:05.021" endtime="20201112 10:14:05.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036698083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036709333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:05.349" endtime="20201112 10:14:05.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.362" endtime="20201112 10:14:05.365"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.014" endtime="20201112 10:14:05.367"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.009" endtime="20201112 10:14:05.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.378" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:05.376" endtime="20201112 10:14:05.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.386" level="INFO">VALUE: [{'time': 0.036698083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036709333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999997373e-05, 'source_diff': 1.1249999999997373e-05}, {'time': 0.036717278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.945000000002256e-06, 'source_diff': 7.945000000002256e-06}, {'time': 0.036726, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.722000000002672e-06, 'source_diff': 8.722000000002672e-06}, {'time': 0.036736208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0207999999997663e-05, 'source_diff': 1.0207999999997663e-05}, {'time': 0.036748931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2722999999999207e-05, 'source_diff': 1.2722999999999207e-05}, {'time': 0.036754958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.026999999998728e-06, 'source_diff': 6.026999999998728e-06}, {'time': 0.036767472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2514000000005132e-05, 'source_diff': 1.2514000000005132e-05}, {'time': 0.03676975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.277999999994451e-06, 'source_diff': 2.277999999994451e-06}, {'time': 0.036784958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5208000000002664e-05, 'source_diff': 1.5208000000002664e-05}, {'time': 0.03678975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.79200000000346e-06, 'source_diff': 4.79200000000346e-06}, {'time': 0.036797667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916999999996177e-06, 'source_diff': 7.916999999996177e-06}, {'time': 0.036811431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.03681975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.036824958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.0368375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2542000000004272e-05, 'source_diff': 1.2542000000004272e-05}, {'time': 0.036842486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.036853764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1277999999996513e-05, 'source_diff': 1.1277999999996513e-05}, {'time': 0.036857472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7080000000050406e-06, 'source_diff': 3.7080000000050406e-06}, {'time': 0.036868931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1458999999998387e-05, 'source_diff': 1.1458999999998387e-05}, {'time': 0.036880806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1875000000001468e-05, 'source_diff': 1.1875000000001468e-05}, {'time': 0.036891639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0832999999994819e-05, 'source_diff': 1.0832999999994819e-05}, {'time': 0.036900625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.986000000002492e-06, 'source_diff': 8.986000000002492e-06}, {'time': 0.036912472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1847000000002328e-05, 'source_diff': 1.1847000000002328e-05}, {'time': 0.036925806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3333999999996793e-05, 'source_diff': 1.3333999999996793e-05}, {'time': 0.036940403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.459699999999814e-05, 'source_diff': 1.459699999999814e-05}, {'time': 0.036949764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.361000000006336e-06, 'source_diff': 9.361000000006336e-06}, {'time': 0.036964153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4388999999996599e-05, 'source_diff': 1.4388999999996599e-05}, {'time': 0.036971236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0829999999980076e-06, 'source_diff': 7.0829999999980076e-06}, {'time': 0.036981444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0208000000004602e-05, 'source_diff': 1.0208000000004602e-05}, {'time': 0.036988319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999996467e-06, 'source_diff': 6.874999999996467e-06}, {'time': 0.037002486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4167000000002428e-05, 'source_diff': 1.4167000000002428e-05}, {'time': 0.037012278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.792000000001522e-06, 'source_diff': 9.792000000001522e-06}, {'time': 0.03701525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9719999999969215e-06, 'source_diff': 2.9719999999969215e-06}, {'time': 0.037017694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4439999999972817e-06, 'source_diff': 2.4439999999972817e-06}, {'time': 0.037023736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.04200000000471e-06, 'source_diff': 6.04200000000471e-06}, {'time': 0.037033736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.999999999996123e-06, 'source_diff': 9.999999999996123e-06}, {'time': 0.037048958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5222000000002234e-05, 'source_diff': 1.5222000000002234e-05}, {'time': 0.03706125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2291999999997083e-05, 'source_diff': 1.2291999999997083e-05}, {'time': 0.037069375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.125000000004656e-06, 'source_diff': 8.125000000004656e-06}, {'time': 0.037079375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.999999999996123e-06, 'source_diff': 9.999999999996123e-06}, {'time': 0.037089792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0417000000005616e-05, 'source_diff': 1.0417000000005616e-05}, {'time': 0.037098153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.037112083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3929999999995335e-05, 'source_diff': 1.3929999999995335e-05}, {'time': 0.037120847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.037125847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.037131875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.02800000000514e-06, 'source_diff': 6.02800000000514e-06}, {'time': 0.037135208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.333000000001196e-06, 'source_diff': 3.333000000001196e-06}, {'time': 0.037150222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5013999999993755e-05, 'source_diff': 1.5013999999993755e-05}, {'time': 0.037158139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.917000000003116e-06, 'source_diff': 7.917000000003116e-06}]</msg>
<status status="PASS" starttime="20201112 10:14:05.380" endtime="20201112 10:14:05.388"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.370" endtime="20201112 10:14:05.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:05.423" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:14:05.391" endtime="20201112 10:14:05.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.432" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:05.430" endtime="20201112 10:14:05.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.439" level="INFO">VALUE: {'eventsource_diff': [0, 1.1249999999997373e-05, 7.945000000002256e-06, 8.722000000002672e-06, 1.0207999999997663e-05, 1.2722999999999207e-05, 6.026999999998728e-06, 1.2514000000005132e-05, 2.277999999994451e-06, 1.5208000000002664e-05, 4.79200000000346e-06, 7.916999999996177e-06, 1.3763999999999443e-05, 8.318999999999688e-06, 5.207999999999602e-06, 1.2542000000004272e-05, 4.985999999998492e-06, 1.1277999999996513e-05, 3.7080000000050406e-06, 1.1458999999998387e-05, 1.1875000000001468e-05, 1.0832999999994819e-05, 8.986000000002492e-06, 1.1847000000002328e-05, 1.3333999999996793e-05, 1.459699999999814e-05, 9.361000000006336e-06, 1.4388999999996599e-05, 7.0829999999980076e-06, 1.0208000000004602e-05, 6.874999999996467e-06, 1.4167000000002428e-05, 9.792000000001522e-06, 2.9719999999969215e-06, 2.4439999999972817e-06, 6.04200000000471e-06, 9.999999999996123e-06, 1.5222000000002234e-05, 1.2291999999997083e-05, 8.125000000004656e-06, 9.999999999996123e-06, 1.0417000000005616e-05, 8.360999999998397e-06, 1.3929999999995335e-05, 8.764000000001382e-06, 4.9999999999980616e-06, 6.02800000000514e-06, 3.333000000001196e-06, 1.5013999999993755e-05, 7.917000000003116e-06], 'sourcediff': [0, 1.1249999999997373e-05, 7.945000000002256e-06, 8.722000000002672e-06, 1.0207999999997663e-05, 1.2722999999999207e-05, 6.026999999998728e-06, 1.2514000000005132e-05, 2.277999999994451e-06, 1.5208000000002664e-05, 4.79200000000346e-06, 7.916999999996177e-06, 1.3763999999999443e-05, 8.318999999999688e-06, 5.207999999999602e-06, 1.2542000000004272e-05, 4.985999999998492e-06, 1.1277999999996513e-05, 3.7080000000050406e-06, 1.1458999999998387e-05, 1.1875000000001468e-05, 1.0832999999994819e-05, 8.986000000002492e-06, 1.1847000000002328e-05, 1.3333999999996793e-05, 1.459699999999814e-05, 9.361000000006336e-06, 1.4388999999996599e-05, 7.0829999999980076e-06, 1.0208000000004602e-05, 6.874999999996467e-06, 1.4167000000002428e-05, 9.792000000001522e-06, 2.9719999999969215e-06, 2.4439999999972817e-06, 6.04200000000471e-06, 9.999999999996123e-06, 1.5222000000002234e-05, 1.2291999999997083e-05, 8.125000000004656e-06, 9.999999999996123e-06, 1.0417000000005616e-05, 8.360999999998397e-06, 1.3929999999995335e-05, 8.764000000001382e-06, 4.9999999999980616e-06, 6.02800000000514e-06, 3.333000000001196e-06, 1.5013999999993755e-05, 7.917000000003116e-06], 'time': [0.036698083, 0.036709333, 0.036717278, 0.036726, 0.036736208, 0.036748931, 0.036754958, 0.036767472, 0.03676975, 0.036784958, 0.03678975, 0.036797667, 0.036811431, 0.03681975, 0.036824958, 0.0368375, 0.036842486, 0.036853764, 0.036857472, 0.036868931, 0.036880806, 0.036891639, 0.036900625, 0.036912472, 0.036925806, 0.036940403, 0.036949764, 0.036964153, 0.036971236, 0.036981444, 0.036988319, 0.037002486, 0.037012278, 0.03701525, 0.037017694, 0.037023736, 0.037033736, 0.037048958, 0.03706125, 0.037069375, 0.037079375, 0.037089792, 0.037098153, 0.037112083, 0.037120847, 0.037125847, 0.037131875, 0.037135208, 0.037150222, 0.037158139]}</msg>
<status status="PASS" starttime="20201112 10:14:05.435" endtime="20201112 10:14:05.440"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.425" endtime="20201112 10:14:05.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:05.451" level="INFO">${RESULT} = [{'time': 0.036709333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999997373e-05, 'source_diff': 1.1249999999997373e-05}, {'time': 0.036726, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:14:05.444" endtime="20201112 10:14:05.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:05.469" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:05.453" endtime="20201112 10:14:05.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.479" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:05.477" endtime="20201112 10:14:05.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.484" level="INFO">VALUE: [1.1249999999997373e-05, 8.722000000002672e-06, 1.2722999999999207e-05, 1.2514000000005132e-05, 1.5208000000002664e-05, 7.916999999996177e-06, 8.318999999999688e-06, 1.2542000000004272e-05, 1.1277999999996513e-05, 1.1458999999998387e-05, 1.0832999999994819e-05, 1.1847000000002328e-05, 1.459699999999814e-05, 1.4388999999996599e-05, 1.0208000000004602e-05, 1.4167000000002428e-05, 2.9719999999969215e-06, 6.04200000000471e-06, 1.5222000000002234e-05, 8.125000000004656e-06, 1.0417000000005616e-05, 1.3929999999995335e-05, 4.9999999999980616e-06, 3.333000000001196e-06, 7.917000000003116e-06]</msg>
<status status="PASS" starttime="20201112 10:14:05.481" endtime="20201112 10:14:05.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.471" endtime="20201112 10:14:05.487"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.493" endtime="20201112 10:14:05.496"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:05.501" endtime="20201112 10:14:05.523"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.497" endtime="20201112 10:14:05.525"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.489" endtime="20201112 10:14:05.526"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.959" endtime="20201112 10:14:05.527"></status>
</kw>
<msg timestamp="20201112 10:14:05.527" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.547" endtime="20201112 10:14:05.560"></status>
</kw>
<msg timestamp="20201112 10:14:05.561" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:05.543" endtime="20201112 10:14:05.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.567" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:05.563" endtime="20201112 10:14:05.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.569" endtime="20201112 10:14:05.573"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.536" endtime="20201112 10:14:05.575"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.532" endtime="20201112 10:14:05.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.591" endtime="20201112 10:14:05.868"></status>
</kw>
<msg timestamp="20201112 10:14:05.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036222556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036231514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:05.589" endtime="20201112 10:14:05.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036222556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036231514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:05.875" endtime="20201112 10:14:05.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.887" endtime="20201112 10:14:05.893"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.582" endtime="20201112 10:14:05.894"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.577" endtime="20201112 10:14:05.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.905" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:05.903" endtime="20201112 10:14:05.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.913" level="INFO">VALUE: [{'time': 0.036222556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036231514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.957999999996413e-06, 'source_diff': 8.957999999996413e-06}, {'time': 0.036236722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.036251736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5014000000000693e-05, 'source_diff': 1.5014000000000693e-05}, {'time': 0.036257792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.055999999997341e-06, 'source_diff': 6.055999999997341e-06}, {'time': 0.036270722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2930000000001274e-05, 'source_diff': 1.2930000000001274e-05}, {'time': 0.036285069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4347000000004828e-05, 'source_diff': 1.4347000000004828e-05}, {'time': 0.036293833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.763999999994443e-06, 'source_diff': 8.763999999994443e-06}, {'time': 0.036309028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5195000000002568e-05, 'source_diff': 1.5195000000002568e-05}, {'time': 0.036314236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.036323403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.166999999997427e-06, 'source_diff': 9.166999999997427e-06}, {'time': 0.036327167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7640000000033202e-06, 'source_diff': 3.7640000000033202e-06}, {'time': 0.036342569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5401999999997695e-05, 'source_diff': 1.5401999999997695e-05}, {'time': 0.036352792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0223000000003646e-05, 'source_diff': 1.0223000000003646e-05}, {'time': 0.036356736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.943999999998782e-06, 'source_diff': 3.943999999998782e-06}, {'time': 0.036368, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1263999999996943e-05, 'source_diff': 1.1263999999996943e-05}, {'time': 0.036372153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.036384458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2305000000004118e-05, 'source_diff': 1.2305000000004118e-05}, {'time': 0.036399667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5208999999995199e-05, 'source_diff': 1.5208999999995199e-05}, {'time': 0.036410292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.036414917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.036429292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4375000000003968e-05, 'source_diff': 1.4375000000003968e-05}, {'time': 0.036440306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1013999999996693e-05, 'source_diff': 1.1013999999996693e-05}, {'time': 0.036454514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4208000000001664e-05, 'source_diff': 1.4208000000001664e-05}, {'time': 0.036466764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2249999999998373e-05, 'source_diff': 1.2249999999998373e-05}, {'time': 0.036475111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.036478625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5140000000030702e-06, 'source_diff': 3.5140000000030702e-06}, {'time': 0.036481333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7079999999971016e-06, 'source_diff': 2.7079999999971016e-06}, {'time': 0.036489097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.036495722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.036501986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.036516764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4778000000000013e-05, 'source_diff': 1.4778000000000013e-05}, {'time': 0.036527611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.036530097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4859999999959914e-06, 'source_diff': 2.4859999999959914e-06}, {'time': 0.036534681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.58400000000192e-06, 'source_diff': 4.58400000000192e-06}, {'time': 0.036539472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7910000000039865e-06, 'source_diff': 4.7910000000039865e-06}, {'time': 0.036552806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3333999999996793e-05, 'source_diff': 1.3333999999996793e-05}, {'time': 0.036566972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4166000000002954e-05, 'source_diff': 1.4166000000002954e-05}, {'time': 0.036575722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.749999999994873e-06, 'source_diff': 8.749999999994873e-06}, {'time': 0.036579681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.959000000004764e-06, 'source_diff': 3.959000000004764e-06}, {'time': 0.036591139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.036601181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0042000000001772e-05, 'source_diff': 1.0042000000001772e-05}, {'time': 0.036614056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2874999999995529e-05, 'source_diff': 1.2874999999995529e-05}, {'time': 0.036618444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.388000000001002e-06, 'source_diff': 4.388000000001002e-06}, {'time': 0.036626597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.152999999996857e-06, 'source_diff': 8.152999999996857e-06}, {'time': 0.036639722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3125000000002718e-05, 'source_diff': 1.3125000000002718e-05}, {'time': 0.036643875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.036656583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2708000000000164e-05, 'source_diff': 1.2708000000000164e-05}, {'time': 0.036666375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.792000000001522e-06, 'source_diff': 9.792000000001522e-06}, {'time': 0.036669278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}]</msg>
<status status="PASS" starttime="20201112 10:14:05.907" endtime="20201112 10:14:05.915"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.897" endtime="20201112 10:14:05.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:05.949" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:14:05.919" endtime="20201112 10:14:05.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.959" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:05.957" endtime="20201112 10:14:05.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.966" level="INFO">VALUE: {'eventsource_diff': [0, 8.957999999996413e-06, 5.207999999999602e-06, 1.5014000000000693e-05, 6.055999999997341e-06, 1.2930000000001274e-05, 1.4347000000004828e-05, 8.763999999994443e-06, 1.5195000000002568e-05, 5.207999999999602e-06, 9.166999999997427e-06, 3.7640000000033202e-06, 1.5401999999997695e-05, 1.0223000000003646e-05, 3.943999999998782e-06, 1.1263999999996943e-05, 4.152999999999796e-06, 1.2305000000004118e-05, 1.5208999999995199e-05, 1.0625000000000218e-05, 4.625000000001156e-06, 1.4375000000003968e-05, 1.1013999999996693e-05, 1.4208000000001664e-05, 1.2249999999998373e-05, 8.346999999998828e-06, 3.5140000000030702e-06, 2.7079999999971016e-06, 7.764000000000382e-06, 6.625000000003156e-06, 6.2639999999988816e-06, 1.4778000000000013e-05, 1.0847000000001328e-05, 2.4859999999959914e-06, 4.58400000000192e-06, 4.7910000000039865e-06, 1.3333999999996793e-05, 1.4166000000002954e-05, 8.749999999994873e-06, 3.959000000004764e-06, 1.1457999999998913e-05, 1.0042000000001772e-05, 1.2874999999995529e-05, 4.388000000001002e-06, 8.152999999996857e-06, 1.3125000000002718e-05, 4.152999999999796e-06, 1.2708000000000164e-05, 9.792000000001522e-06, 2.9029999999985456e-06], 'sourcediff': [0, 8.957999999996413e-06, 5.207999999999602e-06, 1.5014000000000693e-05, 6.055999999997341e-06, 1.2930000000001274e-05, 1.4347000000004828e-05, 8.763999999994443e-06, 1.5195000000002568e-05, 5.207999999999602e-06, 9.166999999997427e-06, 3.7640000000033202e-06, 1.5401999999997695e-05, 1.0223000000003646e-05, 3.943999999998782e-06, 1.1263999999996943e-05, 4.152999999999796e-06, 1.2305000000004118e-05, 1.5208999999995199e-05, 1.0625000000000218e-05, 4.625000000001156e-06, 1.4375000000003968e-05, 1.1013999999996693e-05, 1.4208000000001664e-05, 1.2249999999998373e-05, 8.346999999998828e-06, 3.5140000000030702e-06, 2.7079999999971016e-06, 7.764000000000382e-06, 6.625000000003156e-06, 6.2639999999988816e-06, 1.4778000000000013e-05, 1.0847000000001328e-05, 2.4859999999959914e-06, 4.58400000000192e-06, 4.7910000000039865e-06, 1.3333999999996793e-05, 1.4166000000002954e-05, 8.749999999994873e-06, 3.959000000004764e-06, 1.1457999999998913e-05, 1.0042000000001772e-05, 1.2874999999995529e-05, 4.388000000001002e-06, 8.152999999996857e-06, 1.3125000000002718e-05, 4.152999999999796e-06, 1.2708000000000164e-05, 9.792000000001522e-06, 2.9029999999985456e-06], 'time': [0.036222556, 0.036231514, 0.036236722, 0.036251736, 0.036257792, 0.036270722, 0.036285069, 0.036293833, 0.036309028, 0.036314236, 0.036323403, 0.036327167, 0.036342569, 0.036352792, 0.036356736, 0.036368, 0.036372153, 0.036384458, 0.036399667, 0.036410292, 0.036414917, 0.036429292, 0.036440306, 0.036454514, 0.036466764, 0.036475111, 0.036478625, 0.036481333, 0.036489097, 0.036495722, 0.036501986, 0.036516764, 0.036527611, 0.036530097, 0.036534681, 0.036539472, 0.036552806, 0.036566972, 0.036575722, 0.036579681, 0.036591139, 0.036601181, 0.036614056, 0.036618444, 0.036626597, 0.036639722, 0.036643875, 0.036656583, 0.036666375, 0.036669278]}</msg>
<status status="PASS" starttime="20201112 10:14:05.961" endtime="20201112 10:14:05.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.951" endtime="20201112 10:14:05.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:05.977" level="INFO">${RESULT} = [{'time': 0.036231514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.957999999996413e-06, 'source_diff': 8.957999999996413e-06}, {'time': 0.036251736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:05.970" endtime="20201112 10:14:05.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:05.996" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:05.979" endtime="20201112 10:14:05.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.006" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:06.004" endtime="20201112 10:14:06.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.011" level="INFO">VALUE: [8.957999999996413e-06, 1.5014000000000693e-05, 1.2930000000001274e-05, 8.763999999994443e-06, 5.207999999999602e-06, 3.7640000000033202e-06, 1.0223000000003646e-05, 1.1263999999996943e-05, 1.2305000000004118e-05, 1.0625000000000218e-05, 1.4375000000003968e-05, 1.4208000000001664e-05, 8.346999999998828e-06, 2.7079999999971016e-06, 6.625000000003156e-06, 1.4778000000000013e-05, 2.4859999999959914e-06, 4.7910000000039865e-06, 1.4166000000002954e-05, 3.959000000004764e-06, 1.0042000000001772e-05, 4.388000000001002e-06, 1.3125000000002718e-05, 1.2708000000000164e-05, 2.9029999999985456e-06]</msg>
<status status="PASS" starttime="20201112 10:14:06.008" endtime="20201112 10:14:06.012"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.997" endtime="20201112 10:14:06.014"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.020" endtime="20201112 10:14:06.023"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:06.029" endtime="20201112 10:14:06.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.024" endtime="20201112 10:14:06.052"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.016" endtime="20201112 10:14:06.053"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.528" endtime="20201112 10:14:06.054"></status>
</kw>
<msg timestamp="20201112 10:14:06.054" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.074" endtime="20201112 10:14:06.087"></status>
</kw>
<msg timestamp="20201112 10:14:06.088" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.071" endtime="20201112 10:14:06.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.094" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.090" endtime="20201112 10:14:06.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.097" endtime="20201112 10:14:06.100"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.063" endtime="20201112 10:14:06.102"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.059" endtime="20201112 10:14:06.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.121" endtime="20201112 10:14:06.434"></status>
</kw>
<msg timestamp="20201112 10:14:06.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036107514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036113139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:06.116" endtime="20201112 10:14:06.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036107514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036113139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:06.440" endtime="20201112 10:14:06.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.453" endtime="20201112 10:14:06.457"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.109" endtime="20201112 10:14:06.458"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.105" endtime="20201112 10:14:06.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.469" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:06.467" endtime="20201112 10:14:06.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.477" level="INFO">VALUE: [{'time': 0.036107514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036113139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.036121042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.902999999996607e-06, 'source_diff': 7.902999999996607e-06}, {'time': 0.036132083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1041000000003298e-05, 'source_diff': 1.1041000000003298e-05}, {'time': 0.036140208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.124999999997717e-06, 'source_diff': 8.124999999997717e-06}, {'time': 0.036154597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4388999999996599e-05, 'source_diff': 1.4388999999996599e-05}, {'time': 0.036165292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0695000000005006e-05, 'source_diff': 1.0695000000005006e-05}, {'time': 0.036169792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4999999999975615e-06, 'source_diff': 4.4999999999975615e-06}, {'time': 0.036172333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5410000000017363e-06, 'source_diff': 2.5410000000017363e-06}, {'time': 0.036185, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2667000000000928e-05, 'source_diff': 1.2667000000000928e-05}, {'time': 0.036188556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.555999999994841e-06, 'source_diff': 3.555999999994841e-06}, {'time': 0.036201042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2486000000005992e-05, 'source_diff': 1.2486000000005992e-05}, {'time': 0.036212292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1249999999997373e-05, 'source_diff': 1.1249999999997373e-05}, {'time': 0.036224611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.231899999999675e-05, 'source_diff': 1.231899999999675e-05}, {'time': 0.036231667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.05600000000528e-06, 'source_diff': 7.05600000000528e-06}, {'time': 0.036238569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.9019999999961335e-06, 'source_diff': 6.9019999999961335e-06}, {'time': 0.036244806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.236999999999215e-06, 'source_diff': 6.236999999999215e-06}, {'time': 0.036255014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0208000000004602e-05, 'source_diff': 1.0208000000004602e-05}, {'time': 0.036264444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.429999999997773e-06, 'source_diff': 9.429999999997773e-06}, {'time': 0.036277722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3277999999998513e-05, 'source_diff': 1.3277999999998513e-05}, {'time': 0.036282319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.036293764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1444999999998817e-05, 'source_diff': 1.1444999999998817e-05}, {'time': 0.036299014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.036305847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.8330000000046964e-06, 'source_diff': 6.8330000000046964e-06}, {'time': 0.036311681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833999999996231e-06, 'source_diff': 5.833999999996231e-06}, {'time': 0.036315028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.036327736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2708000000000164e-05, 'source_diff': 1.2708000000000164e-05}, {'time': 0.036336486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.036344819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.332999999999258e-06, 'source_diff': 8.332999999999258e-06}, {'time': 0.036357542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2722999999999207e-05, 'source_diff': 1.2722999999999207e-05}, {'time': 0.03636275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.036376278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3527999999998763e-05, 'source_diff': 1.3527999999998763e-05}, {'time': 0.036385444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.166000000004892e-06, 'source_diff': 9.166000000004892e-06}, {'time': 0.036391097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.652999999994357e-06, 'source_diff': 5.652999999994357e-06}, {'time': 0.036401486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.036415028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3542000000005272e-05, 'source_diff': 1.3542000000005272e-05}, {'time': 0.036430236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5207999999995725e-05, 'source_diff': 1.5207999999995725e-05}, {'time': 0.036436486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.036446931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0445000000004756e-05, 'source_diff': 1.0445000000004756e-05}, {'time': 0.036450236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3049999999951174e-06, 'source_diff': 3.3049999999951174e-06}, {'time': 0.036454611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.036459403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.79200000000346e-06, 'source_diff': 4.79200000000346e-06}, {'time': 0.036467319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.915999999996703e-06, 'source_diff': 7.915999999996703e-06}, {'time': 0.036480875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3556000000004842e-05, 'source_diff': 1.3556000000004842e-05}, {'time': 0.036487528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.652999999995357e-06, 'source_diff': 6.652999999995357e-06}, {'time': 0.036501292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.036512125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0833000000001758e-05, 'source_diff': 1.0833000000001758e-05}, {'time': 0.036515514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.036524625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.036534625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0000000000003062e-05, 'source_diff': 1.0000000000003062e-05}]</msg>
<status status="PASS" starttime="20201112 10:14:06.471" endtime="20201112 10:14:06.479"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.461" endtime="20201112 10:14:06.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:06.512" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:14:06.482" endtime="20201112 10:14:06.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.521" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:06.519" endtime="20201112 10:14:06.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.528" level="INFO">VALUE: {'eventsource_diff': [0, 5.625000000002156e-06, 7.902999999996607e-06, 1.1041000000003298e-05, 8.124999999997717e-06, 1.4388999999996599e-05, 1.0695000000005006e-05, 4.4999999999975615e-06, 2.5410000000017363e-06, 1.2667000000000928e-05, 3.555999999994841e-06, 1.2486000000005992e-05, 1.1249999999997373e-05, 1.231899999999675e-05, 7.05600000000528e-06, 6.9019999999961335e-06, 6.236999999999215e-06, 1.0208000000004602e-05, 9.429999999997773e-06, 1.3277999999998513e-05, 4.597000000002016e-06, 1.1444999999998817e-05, 5.2499999999983116e-06, 6.8330000000046964e-06, 5.833999999996231e-06, 3.347000000000766e-06, 1.2708000000000164e-05, 8.750000000001812e-06, 8.332999999999258e-06, 1.2722999999999207e-05, 5.207999999999602e-06, 1.3527999999998763e-05, 9.166000000004892e-06, 5.652999999994357e-06, 1.0388999999999537e-05, 1.3542000000005272e-05, 1.5207999999995725e-05, 6.249999999999312e-06, 1.0445000000004756e-05, 3.3049999999951174e-06, 4.375000000000906e-06, 4.79200000000346e-06, 7.915999999996703e-06, 1.3556000000004842e-05, 6.652999999995357e-06, 1.3763999999999443e-05, 1.0833000000001758e-05, 3.3889999999994758e-06, 9.110999999999148e-06, 1.0000000000003062e-05], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 5.625000000002156e-06, 7.902999999996607e-06, 1.1041000000003298e-05, 8.124999999997717e-06, 1.4388999999996599e-05, 1.0695000000005006e-05, 4.4999999999975615e-06, 2.5410000000017363e-06, 1.2667000000000928e-05, 3.555999999994841e-06, 1.2486000000005992e-05, 1.1249999999997373e-05, 1.231899999999675e-05, 7.05600000000528e-06, 6.9019999999961335e-06, 6.236999999999215e-06, 1.0208000000004602e-05, 9.429999999997773e-06, 1.3277999999998513e-05, 4.597000000002016e-06, 1.1444999999998817e-05, 5.2499999999983116e-06, 6.8330000000046964e-06, 5.833999999996231e-06, 3.347000000000766e-06, 1.2708000000000164e-05, 8.750000000001812e-06, 8.332999999999258e-06, 1.2722999999999207e-05, 5.207999999999602e-06, 1.3527999999998763e-05, 9.166000000004892e-06, 5.652999999994357e-06, 1.0388999999999537e-05, 1.3542000000005272e-05, 1.5207999999995725e-05, 6.249999999999312e-06, 1.0445000000004756e-05, 3.3049999999951174e-06, 4.375000000000906e-06, 4.79200000000346e-06, 7.915999999996703e-06, 1.3556000000004842e-05, 6.652999999995357e-06, 1.3763999999999443e-05, 1.0833000000001758e-05, 3.3889999999994758e-06, 9.110999999999148e-06, 1.0000000000003062e-05], 'time': [0.036107514, 0.036113139, 0.036121042, 0.036132083, 0.036140208, 0.036154597, 0.036165292, 0.036169792, 0.036172333, 0.036185, 0.036188556, 0.036201042, 0.036212292, 0.036224611, 0.036231667, 0.036238569, 0.036244806, 0.036255014, 0.036264444, 0.036277722, 0.036282319, 0.036293764, 0.036299014, 0.036305847, 0.036311681, 0.036315028, 0.036327736, 0.036336486, 0.036344819, 0.036357542, 0.03636275, 0.036376278, 0.036385444, 0.036391097, 0.036401486, 0.036415028, 0.036430236, 0.036436486, 0.036446931, 0.036450236, 0.036454611, 0.036459403, 0.036467319, 0.036480875, 0.036487528, 0.036501292, 0.036512125, 0.036515514, 0.036524625, 0.036534625]}</msg>
<status status="PASS" starttime="20201112 10:14:06.524" endtime="20201112 10:14:06.530"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.514" endtime="20201112 10:14:06.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:06.540" level="INFO">${RESULT} = [{'time': 0.036113139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.036132083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:06.533" endtime="20201112 10:14:06.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:06.558" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:06.542" endtime="20201112 10:14:06.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.568" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:06.566" endtime="20201112 10:14:06.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.573" level="INFO">VALUE: [5.625000000002156e-06, 1.1041000000003298e-05, 1.4388999999996599e-05, 4.4999999999975615e-06, 1.2667000000000928e-05, 1.2486000000005992e-05, 1.231899999999675e-05, 6.9019999999961335e-06, 1.0208000000004602e-05, 1.3277999999998513e-05, 1.1444999999998817e-05, 6.8330000000046964e-06, 3.347000000000766e-06, 8.750000000001812e-06, 1.2722999999999207e-05, 1.3527999999998763e-05, 5.652999999994357e-06, 1.3542000000005272e-05, 6.249999999999312e-06, 3.3049999999951174e-06, 4.79200000000346e-06, 1.3556000000004842e-05, 1.3763999999999443e-05, 3.3889999999994758e-06, 1.0000000000003062e-05]</msg>
<status status="PASS" starttime="20201112 10:14:06.571" endtime="20201112 10:14:06.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.560" endtime="20201112 10:14:06.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.582" endtime="20201112 10:14:06.585"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:06.591" endtime="20201112 10:14:06.612"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.586" endtime="20201112 10:14:06.614"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.578" endtime="20201112 10:14:06.615"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.055" endtime="20201112 10:14:06.616"></status>
</kw>
<msg timestamp="20201112 10:14:06.616" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.636" endtime="20201112 10:14:06.649"></status>
</kw>
<msg timestamp="20201112 10:14:06.650" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.632" endtime="20201112 10:14:06.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.656" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.653" endtime="20201112 10:14:06.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.659" endtime="20201112 10:14:06.662"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.625" endtime="20201112 10:14:06.664"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.621" endtime="20201112 10:14:06.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.683" endtime="20201112 10:14:07.001"></status>
</kw>
<msg timestamp="20201112 10:14:07.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035852569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035856472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:06.680" endtime="20201112 10:14:07.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035852569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035856472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.008" endtime="20201112 10:14:07.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.021" endtime="20201112 10:14:07.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.671" endtime="20201112 10:14:07.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.667" endtime="20201112 10:14:07.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.037" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:07.035" endtime="20201112 10:14:07.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.045" level="INFO">VALUE: [{'time': 0.035852569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035856472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.035862514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.041999999997771e-06, 'source_diff': 6.041999999997771e-06}, {'time': 0.035872514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0000000000003062e-05, 'source_diff': 1.0000000000003062e-05}, {'time': 0.035876264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7499999999968114e-06, 'source_diff': 3.7499999999968114e-06}, {'time': 0.035886694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0429999999998774e-05, 'source_diff': 1.0429999999998774e-05}, {'time': 0.035891069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.035894014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9450000000041943e-06, 'source_diff': 2.9450000000041943e-06}, {'time': 0.035898208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.035906903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.694999999996067e-06, 'source_diff': 8.694999999996067e-06}, {'time': 0.03591775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.035920917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1669999999983656e-06, 'source_diff': 3.1669999999983656e-06}, {'time': 0.035929194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.277000000000978e-06, 'source_diff': 8.277000000000978e-06}, {'time': 0.035940653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1459000000005326e-05, 'source_diff': 1.1459000000005326e-05}, {'time': 0.035952111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.035962111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.999999999996123e-06, 'source_diff': 9.999999999996123e-06}, {'time': 0.035969875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.035982319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2444000000000344e-05, 'source_diff': 1.2444000000000344e-05}, {'time': 0.035996292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3973000000000457e-05, 'source_diff': 1.3973000000000457e-05}, {'time': 0.036002361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0689999999974376e-06, 'source_diff': 6.0689999999974376e-06}, {'time': 0.036008375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0140000000055704e-06, 'source_diff': 6.0140000000055704e-06}, {'time': 0.036021917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3541999999998333e-05, 'source_diff': 1.3541999999998333e-05}, {'time': 0.036036292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}, {'time': 0.036050667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4375000000003968e-05, 'source_diff': 1.4375000000003968e-05}, {'time': 0.036065875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5207999999995725e-05, 'source_diff': 1.5207999999995725e-05}, {'time': 0.036073861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.03607775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.036086292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.036098597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2305000000004118e-05, 'source_diff': 1.2305000000004118e-05}, {'time': 0.036101292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6949999999970053e-06, 'source_diff': 2.6949999999970053e-06}, {'time': 0.036113375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2083000000003008e-05, 'source_diff': 1.2083000000003008e-05}, {'time': 0.0361215, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.124999999997717e-06, 'source_diff': 8.124999999997717e-06}, {'time': 0.036133583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2082999999996069e-05, 'source_diff': 1.2082999999996069e-05}, {'time': 0.036148389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4806000000006092e-05, 'source_diff': 1.4806000000006092e-05}, {'time': 0.036154014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.624999999995217e-06, 'source_diff': 5.624999999995217e-06}, {'time': 0.036159222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.036166764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.036181111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4347000000004828e-05, 'source_diff': 1.4347000000004828e-05}, {'time': 0.036190681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.570000000000412e-06, 'source_diff': 9.570000000000412e-06}, {'time': 0.036196722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.040999999998298e-06, 'source_diff': 6.040999999998298e-06}, {'time': 0.036210694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3972000000000984e-05, 'source_diff': 1.3972000000000984e-05}, {'time': 0.036213403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7089999999965753e-06, 'source_diff': 2.7089999999965753e-06}, {'time': 0.036219861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.458000000000852e-06, 'source_diff': 6.458000000000852e-06}, {'time': 0.036228597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.036231514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.036235264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7500000000037503e-06, 'source_diff': 3.7500000000037503e-06}, {'time': 0.036244653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.036254847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0193999999998093e-05, 'source_diff': 1.0193999999998093e-05}, {'time': 0.036258417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.57000000000135e-06, 'source_diff': 3.57000000000135e-06}, {'time': 0.036263819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.402000000001572e-06, 'source_diff': 5.402000000001572e-06}]</msg>
<status status="PASS" starttime="20201112 10:14:07.039" endtime="20201112 10:14:07.047"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.029" endtime="20201112 10:14:07.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:07.082" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:14:07.051" endtime="20201112 10:14:07.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.091" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:07.089" endtime="20201112 10:14:07.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.098" level="INFO">VALUE: {'eventsource_diff': [0, 3.902999999999546e-06, 6.041999999997771e-06, 1.0000000000003062e-05, 3.7499999999968114e-06, 1.0429999999998774e-05, 4.375000000000906e-06, 2.9450000000041943e-06, 4.193999999999032e-06, 8.694999999996067e-06, 1.0847000000001328e-05, 3.1669999999983656e-06, 8.277000000000978e-06, 1.1459000000005326e-05, 1.1457999999998913e-05, 9.999999999996123e-06, 7.764000000000382e-06, 1.2444000000000344e-05, 1.3973000000000457e-05, 6.0689999999974376e-06, 6.0140000000055704e-06, 1.3541999999998333e-05, 1.4374999999997029e-05, 1.4375000000003968e-05, 1.5207999999995725e-05, 7.986000000001492e-06, 3.888999999999976e-06, 8.542000000000272e-06, 1.2305000000004118e-05, 2.6949999999970053e-06, 1.2083000000003008e-05, 8.124999999997717e-06, 1.2082999999996069e-05, 1.4806000000006092e-05, 5.624999999995217e-06, 5.207999999999602e-06, 7.5419999999992715e-06, 1.4347000000004828e-05, 9.570000000000412e-06, 6.040999999998298e-06, 1.3972000000000984e-05, 2.7089999999965753e-06, 6.458000000000852e-06, 8.736000000002242e-06, 2.9169999999981155e-06, 3.7500000000037503e-06, 9.388999999998537e-06, 1.0193999999998093e-05, 3.57000000000135e-06, 5.402000000001572e-06], 'sourcediff': [0, 3.902999999999546e-06, 6.041999999997771e-06, 1.0000000000003062e-05, 3.7499999999968114e-06, 1.0429999999998774e-05, 4.375000000000906e-06, 2.9450000000041943e-06, 4.193999999999032e-06, 8.694999999996067e-06, 1.0847000000001328e-05, 3.1669999999983656e-06, 8.277000000000978e-06, 1.1459000000005326e-05, 1.1457999999998913e-05, 9.999999999996123e-06, 7.764000000000382e-06, 1.2444000000000344e-05, 1.3973000000000457e-05, 6.0689999999974376e-06, 6.0140000000055704e-06, 1.3541999999998333e-05, 1.4374999999997029e-05, 1.4375000000003968e-05, 1.5207999999995725e-05, 7.986000000001492e-06, 3.888999999999976e-06, 8.542000000000272e-06, 1.2305000000004118e-05, 2.6949999999970053e-06, 1.2083000000003008e-05, 8.124999999997717e-06, 1.2082999999996069e-05, 1.4806000000006092e-05, 5.624999999995217e-06, 5.207999999999602e-06, 7.5419999999992715e-06, 1.4347000000004828e-05, 9.570000000000412e-06, 6.040999999998298e-06, 1.3972000000000984e-05, 2.7089999999965753e-06, 6.458000000000852e-06, 8.736000000002242e-06, 2.9169999999981155e-06, 3.7500000000037503e-06, 9.388999999998537e-06, 1.0193999999998093e-05, 3.57000000000135e-06, 5.402000000001572e-06], 'time': [0.035852569, 0.035856472, 0.035862514, 0.035872514, 0.035876264, 0.035886694, 0.035891069, 0.035894014, 0.035898208, 0.035906903, 0.03591775, 0.035920917, 0.035929194, 0.035940653, 0.035952111, 0.035962111, 0.035969875, 0.035982319, 0.035996292, 0.036002361, 0.036008375, 0.036021917, 0.036036292, 0.036050667, 0.036065875, 0.036073861, 0.03607775, 0.036086292, 0.036098597, 0.036101292, 0.036113375, 0.0361215, 0.036133583, 0.036148389, 0.036154014, 0.036159222, 0.036166764, 0.036181111, 0.036190681, 0.036196722, 0.036210694, 0.036213403, 0.036219861, 0.036228597, 0.036231514, 0.036235264, 0.036244653, 0.036254847, 0.036258417, 0.036263819]}</msg>
<status status="PASS" starttime="20201112 10:14:07.094" endtime="20201112 10:14:07.099"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.084" endtime="20201112 10:14:07.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:07.110" level="INFO">${RESULT} = [{'time': 0.035856472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.035872514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:07.103" endtime="20201112 10:14:07.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:07.128" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:07.112" endtime="20201112 10:14:07.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.138" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:07.136" endtime="20201112 10:14:07.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.143" level="INFO">VALUE: [3.902999999999546e-06, 1.0000000000003062e-05, 1.0429999999998774e-05, 2.9450000000041943e-06, 8.694999999996067e-06, 3.1669999999983656e-06, 1.1459000000005326e-05, 9.999999999996123e-06, 1.2444000000000344e-05, 6.0689999999974376e-06, 1.3541999999998333e-05, 1.4375000000003968e-05, 7.986000000001492e-06, 8.542000000000272e-06, 2.6949999999970053e-06, 8.124999999997717e-06, 1.4806000000006092e-05, 5.207999999999602e-06, 1.4347000000004828e-05, 6.040999999998298e-06, 2.7089999999965753e-06, 8.736000000002242e-06, 3.7500000000037503e-06, 1.0193999999998093e-05, 5.402000000001572e-06]</msg>
<status status="PASS" starttime="20201112 10:14:07.141" endtime="20201112 10:14:07.144"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.130" endtime="20201112 10:14:07.146"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.152" endtime="20201112 10:14:07.155"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:07.161" endtime="20201112 10:14:07.182"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.156" endtime="20201112 10:14:07.184"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.148" endtime="20201112 10:14:07.185"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.617" endtime="20201112 10:14:07.186"></status>
</kw>
<msg timestamp="20201112 10:14:07.186" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.206" endtime="20201112 10:14:07.219"></status>
</kw>
<msg timestamp="20201112 10:14:07.220" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.203" endtime="20201112 10:14:07.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.226" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.222" endtime="20201112 10:14:07.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.228" endtime="20201112 10:14:07.232"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.195" endtime="20201112 10:14:07.234"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.191" endtime="20201112 10:14:07.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.253" endtime="20201112 10:14:07.567"></status>
</kw>
<msg timestamp="20201112 10:14:07.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036036333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036051694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.250" endtime="20201112 10:14:07.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036036333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036051694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.573" endtime="20201112 10:14:07.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.586" endtime="20201112 10:14:07.589"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.241" endtime="20201112 10:14:07.591"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.236" endtime="20201112 10:14:07.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.602" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:07.600" endtime="20201112 10:14:07.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.610" level="INFO">VALUE: [{'time': 0.036036333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036051694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5361000000005398e-05, 'source_diff': 1.5361000000005398e-05}, {'time': 0.036059639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.944999999995317e-06, 'source_diff': 7.944999999995317e-06}, {'time': 0.036065875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.036077542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1666999999999927e-05, 'source_diff': 1.1666999999999927e-05}, {'time': 0.036080319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7770000000024164e-06, 'source_diff': 2.7770000000024164e-06}, {'time': 0.036092139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1820000000002662e-05, 'source_diff': 1.1820000000002662e-05}, {'time': 0.036101708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.569000000000938e-06, 'source_diff': 9.569000000000938e-06}, {'time': 0.036113181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1472999999997957e-05, 'source_diff': 1.1472999999997957e-05}, {'time': 0.036122958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.77699999999554e-06, 'source_diff': 9.77699999999554e-06}, {'time': 0.036129222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2640000000058205e-06, 'source_diff': 6.2640000000058205e-06}, {'time': 0.036131972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7499999999958114e-06, 'source_diff': 2.7499999999958114e-06}, {'time': 0.036136917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.036144, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0830000000049465e-06, 'source_diff': 7.0830000000049465e-06}, {'time': 0.036152764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.763999999994443e-06, 'source_diff': 8.763999999994443e-06}, {'time': 0.036162542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.778000000001952e-06, 'source_diff': 9.778000000001952e-06}, {'time': 0.036166097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5550000000023063e-06, 'source_diff': 3.5550000000023063e-06}, {'time': 0.036178181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2083999999995543e-05, 'source_diff': 1.2083999999995543e-05}, {'time': 0.036190472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2291000000004548e-05, 'source_diff': 1.2291000000004548e-05}, {'time': 0.036195875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.036211097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5221999999995295e-05, 'source_diff': 1.5221999999995295e-05}, {'time': 0.036225278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4181000000001998e-05, 'source_diff': 1.4181000000001998e-05}, {'time': 0.036235472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0193999999998093e-05, 'source_diff': 1.0193999999998093e-05}, {'time': 0.036248806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3334000000003732e-05, 'source_diff': 1.3334000000003732e-05}, {'time': 0.036258597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.79099999999511e-06, 'source_diff': 9.79099999999511e-06}, {'time': 0.036269431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0834000000001232e-05, 'source_diff': 1.0834000000001232e-05}, {'time': 0.036283806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4375000000003968e-05, 'source_diff': 1.4375000000003968e-05}, {'time': 0.036292361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.555000000000368e-06, 'source_diff': 8.555000000000368e-06}, {'time': 0.036301931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.570000000000412e-06, 'source_diff': 9.570000000000412e-06}, {'time': 0.036306111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.036314667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.036323819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.151999999998384e-06, 'source_diff': 9.151999999998384e-06}, {'time': 0.036336125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2305999999996653e-05, 'source_diff': 1.2305999999996653e-05}, {'time': 0.036338819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6940000000044706e-06, 'source_diff': 2.6940000000044706e-06}, {'time': 0.036341125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.30600000000053e-06, 'source_diff': 2.30600000000053e-06}, {'time': 0.036350708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.036357778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.069999999997911e-06, 'source_diff': 7.069999999997911e-06}, {'time': 0.036365278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.036372986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.708000000002102e-06, 'source_diff': 7.708000000002102e-06}, {'time': 0.036384653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1666999999999927e-05, 'source_diff': 1.1666999999999927e-05}, {'time': 0.036393403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.749999999994873e-06, 'source_diff': 8.749999999994873e-06}, {'time': 0.036404861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.036413611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.036422569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.958000000003352e-06, 'source_diff': 8.958000000003352e-06}, {'time': 0.036432361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.792000000001522e-06, 'source_diff': 9.792000000001522e-06}, {'time': 0.036435083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7219999999966715e-06, 'source_diff': 2.7219999999966715e-06}, {'time': 0.036444028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.945000000003256e-06, 'source_diff': 8.945000000003256e-06}, {'time': 0.036458819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.479100000000011e-05, 'source_diff': 1.479100000000011e-05}, {'time': 0.036468278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.458999999996387e-06, 'source_diff': 9.458999999996387e-06}, {'time': 0.036480722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2444000000000344e-05, 'source_diff': 1.2444000000000344e-05}]</msg>
<status status="PASS" starttime="20201112 10:14:07.604" endtime="20201112 10:14:07.612"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.594" endtime="20201112 10:14:07.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:07.645" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:14:07.615" endtime="20201112 10:14:07.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.654" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:07.652" endtime="20201112 10:14:07.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.661" level="INFO">VALUE: {'eventsource_diff': [0, 1.5361000000005398e-05, 7.944999999995317e-06, 6.235999999999742e-06, 1.1666999999999927e-05, 2.7770000000024164e-06, 1.1820000000002662e-05, 9.569000000000938e-06, 1.1472999999997957e-05, 9.77699999999554e-06, 6.2640000000058205e-06, 2.7499999999958114e-06, 4.9449999999992555e-06, 7.0830000000049465e-06, 8.763999999994443e-06, 9.778000000001952e-06, 3.5550000000023063e-06, 1.2083999999995543e-05, 1.2291000000004548e-05, 5.403000000001046e-06, 1.5221999999995295e-05, 1.4181000000001998e-05, 1.0193999999998093e-05, 1.3334000000003732e-05, 9.79099999999511e-06, 1.0834000000001232e-05, 1.4375000000003968e-05, 8.555000000000368e-06, 9.570000000000412e-06, 4.179999999999462e-06, 8.555999999999842e-06, 9.151999999998384e-06, 1.2305999999996653e-05, 2.6940000000044706e-06, 2.30600000000053e-06, 9.583000000000508e-06, 7.069999999997911e-06, 7.500000000000562e-06, 7.708000000002102e-06, 1.1666999999999927e-05, 8.749999999994873e-06, 1.1457999999998913e-05, 8.750000000001812e-06, 8.958000000003352e-06, 9.792000000001522e-06, 2.7219999999966715e-06, 8.945000000003256e-06, 1.479100000000011e-05, 9.458999999996387e-06, 1.2444000000000344e-05], 'sourcediff': [0, 1.5361000000005398e-05, 7.944999999995317e-06, 6.235999999999742e-06, 1.1666999999999927e-05, 2.7770000000024164e-06, 1.1820000000002662e-05, 9.569000000000938e-06, 1.1472999999997957e-05, 9.77699999999554e-06, 6.2640000000058205e-06, 2.7499999999958114e-06, 4.9449999999992555e-06, 7.0830000000049465e-06, 8.763999999994443e-06, 9.778000000001952e-06, 3.5550000000023063e-06, 1.2083999999995543e-05, 1.2291000000004548e-05, 5.403000000001046e-06, 1.5221999999995295e-05, 1.4181000000001998e-05, 1.0193999999998093e-05, 1.3334000000003732e-05, 9.79099999999511e-06, 1.0834000000001232e-05, 1.4375000000003968e-05, 8.555000000000368e-06, 9.570000000000412e-06, 4.179999999999462e-06, 8.555999999999842e-06, 9.151999999998384e-06, 1.2305999999996653e-05, 2.6940000000044706e-06, 2.30600000000053e-06, 9.583000000000508e-06, 7.069999999997911e-06, 7.500000000000562e-06, 7.708000000002102e-06, 1.1666999999999927e-05, 8.749999999994873e-06, 1.1457999999998913e-05, 8.750000000001812e-06, 8.958000000003352e-06, 9.792000000001522e-06, 2.7219999999966715e-06, 8.945000000003256e-06, 1.479100000000011e-05, 9.458999999996387e-06, 1.2444000000000344e-05], 'time': [0.036036333, 0.036051694, 0.036059639, 0.036065875, 0.036077542, 0.036080319, 0.036092139, 0.036101708, 0.036113181, 0.036122958, 0.036129222, 0.036131972, 0.036136917, 0.036144, 0.036152764, 0.036162542, 0.036166097, 0.036178181, 0.036190472, 0.036195875, 0.036211097, 0.036225278, 0.036235472, 0.036248806, 0.036258597, 0.036269431, 0.036283806, 0.036292361, 0.036301931, 0.036306111, 0.036314667, 0.036323819, 0.036336125, 0.036338819, 0.036341125, 0.036350708, 0.036357778, 0.036365278, 0.036372986, 0.036384653, 0.036393403, 0.036404861, 0.036413611, 0.036422569, 0.036432361, 0.036435083, 0.036444028, 0.036458819, 0.036468278, 0.036480722]}</msg>
<status status="PASS" starttime="20201112 10:14:07.656" endtime="20201112 10:14:07.662"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.647" endtime="20201112 10:14:07.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:07.673" level="INFO">${RESULT} = [{'time': 0.036051694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5361000000005398e-05, 'source_diff': 1.5361000000005398e-05}, {'time': 0.036065875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:07.665" endtime="20201112 10:14:07.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:07.691" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:07.675" endtime="20201112 10:14:07.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.701" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:07.699" endtime="20201112 10:14:07.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.706" level="INFO">VALUE: [1.5361000000005398e-05, 6.235999999999742e-06, 2.7770000000024164e-06, 9.569000000000938e-06, 9.77699999999554e-06, 2.7499999999958114e-06, 7.0830000000049465e-06, 9.778000000001952e-06, 1.2083999999995543e-05, 5.403000000001046e-06, 1.4181000000001998e-05, 1.3334000000003732e-05, 1.0834000000001232e-05, 8.555000000000368e-06, 4.179999999999462e-06, 9.151999999998384e-06, 2.6940000000044706e-06, 9.583000000000508e-06, 7.500000000000562e-06, 1.1666999999999927e-05, 1.1457999999998913e-05, 8.958000000003352e-06, 2.7219999999966715e-06, 1.479100000000011e-05, 1.2444000000000344e-05]</msg>
<status status="PASS" starttime="20201112 10:14:07.703" endtime="20201112 10:14:07.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.693" endtime="20201112 10:14:07.709"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.715" endtime="20201112 10:14:07.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:07.723" endtime="20201112 10:14:07.745"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.719" endtime="20201112 10:14:07.747"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.711" endtime="20201112 10:14:07.748"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.188" endtime="20201112 10:14:07.749"></status>
</kw>
<msg timestamp="20201112 10:14:07.749" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.769" endtime="20201112 10:14:07.782"></status>
</kw>
<msg timestamp="20201112 10:14:07.783" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.765" endtime="20201112 10:14:07.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.789" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.785" endtime="20201112 10:14:07.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.792" endtime="20201112 10:14:07.795"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.758" endtime="20201112 10:14:07.797"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.754" endtime="20201112 10:14:07.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.816" endtime="20201112 10:14:08.130"></status>
</kw>
<msg timestamp="20201112 10:14:08.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036292931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036300222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.813" endtime="20201112 10:14:08.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036292931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036300222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:08.137" endtime="20201112 10:14:08.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.149" endtime="20201112 10:14:08.153"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.804" endtime="20201112 10:14:08.155"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.799" endtime="20201112 10:14:08.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.166" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:08.164" endtime="20201112 10:14:08.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.174" level="INFO">VALUE: [{'time': 0.036292931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036300222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.290999999999548e-06, 'source_diff': 7.290999999999548e-06}, {'time': 0.036308819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.036324181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5361999999997933e-05, 'source_diff': 1.5361999999997933e-05}, {'time': 0.036331292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000004086e-06, 'source_diff': 7.111000000004086e-06}, {'time': 0.036338556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.036341472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.915999999998642e-06, 'source_diff': 2.915999999998642e-06}, {'time': 0.036351917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0444999999997817e-05, 'source_diff': 1.0444999999997817e-05}, {'time': 0.036366903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4986000000001554e-05, 'source_diff': 1.4986000000001554e-05}, {'time': 0.036378375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.036386917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.036398778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1861000000001898e-05, 'source_diff': 1.1861000000001898e-05}, {'time': 0.036405222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.444000000001282e-06, 'source_diff': 6.444000000001282e-06}, {'time': 0.036420444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5222000000002234e-05, 'source_diff': 1.5222000000002234e-05}, {'time': 0.036425236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791999999996521e-06, 'source_diff': 4.791999999996521e-06}, {'time': 0.036428806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.57000000000135e-06, 'source_diff': 3.57000000000135e-06}, {'time': 0.036432736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.929999999999212e-06, 'source_diff': 3.929999999999212e-06}, {'time': 0.036437319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.583000000002446e-06, 'source_diff': 4.583000000002446e-06}, {'time': 0.036442792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.472999999998895e-06, 'source_diff': 5.472999999998895e-06}, {'time': 0.036448986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.036456903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.916999999996177e-06, 'source_diff': 7.916999999996177e-06}, {'time': 0.036471292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4389000000003538e-05, 'source_diff': 1.4389000000003538e-05}, {'time': 0.036474194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.901999999999072e-06, 'source_diff': 2.901999999999072e-06}, {'time': 0.036481958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.036495875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3916999999995239e-05, 'source_diff': 1.3916999999995239e-05}, {'time': 0.036507333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1458000000005852e-05, 'source_diff': 1.1458000000005852e-05}, {'time': 0.036519611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2277999999997513e-05, 'source_diff': 1.2277999999997513e-05}, {'time': 0.036526083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.036528986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.036543792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4805999999999153e-05, 'source_diff': 1.4805999999999153e-05}, {'time': 0.036558181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4389000000003538e-05, 'source_diff': 1.4389000000003538e-05}, {'time': 0.036568167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.985999999996553e-06, 'source_diff': 9.985999999996553e-06}, {'time': 0.036574014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.847000000003266e-06, 'source_diff': 5.847000000003266e-06}, {'time': 0.036578389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.036582542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.036592542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.999999999996123e-06, 'source_diff': 9.999999999996123e-06}, {'time': 0.036606514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3972000000000984e-05, 'source_diff': 1.3972000000000984e-05}, {'time': 0.036610472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.036623028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2556000000003842e-05, 'source_diff': 1.2556000000003842e-05}, {'time': 0.036637333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.430499999999918e-05, 'source_diff': 1.430499999999918e-05}, {'time': 0.036650486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3153000000001858e-05, 'source_diff': 1.3153000000001858e-05}, {'time': 0.036660486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.999999999996123e-06, 'source_diff': 9.999999999996123e-06}, {'time': 0.036672153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1666999999999927e-05, 'source_diff': 1.1666999999999927e-05}, {'time': 0.036677347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.036686306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.959000000002826e-06, 'source_diff': 8.959000000002826e-06}, {'time': 0.036701097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.479100000000011e-05, 'source_diff': 1.479100000000011e-05}, {'time': 0.036708597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.036719431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0833999999994293e-05, 'source_diff': 1.0833999999994293e-05}, {'time': 0.036722556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1250000000065947e-06, 'source_diff': 3.1250000000065947e-06}, {'time': 0.036737139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.458299999999857e-05, 'source_diff': 1.458299999999857e-05}]</msg>
<status status="PASS" starttime="20201112 10:14:08.168" endtime="20201112 10:14:08.176"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.157" endtime="20201112 10:14:08.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:08.209" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:14:08.179" endtime="20201112 10:14:08.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.218" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:08.216" endtime="20201112 10:14:08.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.225" level="INFO">VALUE: {'eventsource_diff': [0, 7.290999999999548e-06, 8.596999999999078e-06, 1.5361999999997933e-05, 7.111000000004086e-06, 7.263999999999882e-06, 2.915999999998642e-06, 1.0444999999997817e-05, 1.4986000000001554e-05, 1.1471999999998483e-05, 8.542000000000272e-06, 1.1861000000001898e-05, 6.444000000001282e-06, 1.5222000000002234e-05, 4.791999999996521e-06, 3.57000000000135e-06, 3.929999999999212e-06, 4.583000000002446e-06, 5.472999999998895e-06, 6.194000000001032e-06, 7.916999999996177e-06, 1.4389000000003538e-05, 2.901999999999072e-06, 7.764000000000382e-06, 1.3916999999995239e-05, 1.1458000000005852e-05, 1.2277999999997513e-05, 6.472000000000422e-06, 2.9029999999985456e-06, 1.4805999999999153e-05, 1.4389000000003538e-05, 9.985999999996553e-06, 5.847000000003266e-06, 4.375000000000906e-06, 4.152999999999796e-06, 9.999999999996123e-06, 1.3972000000000984e-05, 3.957999999998352e-06, 1.2556000000003842e-05, 1.430499999999918e-05, 1.3153000000001858e-05, 9.999999999996123e-06, 1.1666999999999927e-05, 5.194000000000032e-06, 8.959000000002826e-06, 1.479100000000011e-05, 7.500000000000562e-06, 1.0833999999994293e-05, 3.1250000000065947e-06, 1.458299999999857e-05], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 7.290999999999548e-06, 8.596999999999078e-06, 1.5361999999997933e-05, 7.111000000004086e-06, 7.263999999999882e-06, 2.915999999998642e-06, 1.0444999999997817e-05, 1.4986000000001554e-05, 1.1471999999998483e-05, 8.542000000000272e-06, 1.1861000000001898e-05, 6.444000000001282e-06, 1.5222000000002234e-05, 4.791999999996521e-06, 3.57000000000135e-06, 3.929999999999212e-06, 4.583000000002446e-06, 5.472999999998895e-06, 6.194000000001032e-06, 7.916999999996177e-06, 1.4389000000003538e-05, 2.901999999999072e-06, 7.764000000000382e-06, 1.3916999999995239e-05, 1.1458000000005852e-05, 1.2277999999997513e-05, 6.472000000000422e-06, 2.9029999999985456e-06, 1.4805999999999153e-05, 1.4389000000003538e-05, 9.985999999996553e-06, 5.847000000003266e-06, 4.375000000000906e-06, 4.152999999999796e-06, 9.999999999996123e-06, 1.3972000000000984e-05, 3.957999999998352e-06, 1.2556000000003842e-05, 1.430499999999918e-05, 1.3153000000001858e-05, 9.999999999996123e-06, 1.1666999999999927e-05, 5.194000000000032e-06, 8.959000000002826e-06, 1.479100000000011e-05, 7.500000000000562e-06, 1.0833999999994293e-05, 3.1250000000065947e-06, 1.458299999999857e-05], 'time': [0.036292931, 0.036300222, 0.036308819, 0.036324181, 0.036331292, 0.036338556, 0.036341472, 0.036351917, 0.036366903, 0.036378375, 0.036386917, 0.036398778, 0.036405222, 0.036420444, 0.036425236, 0.036428806, 0.036432736, 0.036437319, 0.036442792, 0.036448986, 0.036456903, 0.036471292, 0.036474194, 0.036481958, 0.036495875, 0.036507333, 0.036519611, 0.036526083, 0.036528986, 0.036543792, 0.036558181, 0.036568167, 0.036574014, 0.036578389, 0.036582542, 0.036592542, 0.036606514, 0.036610472, 0.036623028, 0.036637333, 0.036650486, 0.036660486, 0.036672153, 0.036677347, 0.036686306, 0.036701097, 0.036708597, 0.036719431, 0.036722556, 0.036737139]}</msg>
<status status="PASS" starttime="20201112 10:14:08.221" endtime="20201112 10:14:08.226"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.211" endtime="20201112 10:14:08.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:08.237" level="INFO">${RESULT} = [{'time': 0.036300222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.290999999999548e-06, 'source_diff': 7.290999999999548e-06}, {'time': 0.036324181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:08.229" endtime="20201112 10:14:08.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:08.255" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:08.239" endtime="20201112 10:14:08.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.265" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:08.263" endtime="20201112 10:14:08.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.270" level="INFO">VALUE: [7.290999999999548e-06, 1.5361999999997933e-05, 7.263999999999882e-06, 1.0444999999997817e-05, 1.1471999999998483e-05, 1.1861000000001898e-05, 1.5222000000002234e-05, 3.57000000000135e-06, 4.583000000002446e-06, 6.194000000001032e-06, 1.4389000000003538e-05, 7.764000000000382e-06, 1.1458000000005852e-05, 6.472000000000422e-06, 1.4805999999999153e-05, 9.985999999996553e-06, 4.375000000000906e-06, 9.999999999996123e-06, 3.957999999998352e-06, 1.430499999999918e-05, 9.999999999996123e-06, 5.194000000000032e-06, 1.479100000000011e-05, 1.0833999999994293e-05, 1.458299999999857e-05]</msg>
<status status="PASS" starttime="20201112 10:14:08.267" endtime="20201112 10:14:08.271"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.257" endtime="20201112 10:14:08.273"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.279" endtime="20201112 10:14:08.282"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:08.287" endtime="20201112 10:14:08.309"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.283" endtime="20201112 10:14:08.311"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.275" endtime="20201112 10:14:08.312"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.750" endtime="20201112 10:14:08.313"></status>
</kw>
<msg timestamp="20201112 10:14:08.313" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.333" endtime="20201112 10:14:08.347"></status>
</kw>
<msg timestamp="20201112 10:14:08.348" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:08.329" endtime="20201112 10:14:08.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.354" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:08.350" endtime="20201112 10:14:08.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.357" endtime="20201112 10:14:08.360"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.322" endtime="20201112 10:14:08.362"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.318" endtime="20201112 10:14:08.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.380" endtime="20201112 10:14:08.692"></status>
</kw>
<msg timestamp="20201112 10:14:08.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036187597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036189861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:08.377" endtime="20201112 10:14:08.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036187597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036189861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:08.698" endtime="20201112 10:14:08.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.711" endtime="20201112 10:14:08.714"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.369" endtime="20201112 10:14:08.716"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.365" endtime="20201112 10:14:08.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.727" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:08.725" endtime="20201112 10:14:08.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.735" level="INFO">VALUE: [{'time': 0.036187597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036189861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2639999999948812e-06, 'source_diff': 2.2639999999948812e-06}, {'time': 0.036205278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5417000000003678e-05, 'source_diff': 1.5417000000003678e-05}, {'time': 0.036210917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.036222778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1860999999994959e-05, 'source_diff': 1.1860999999994959e-05}, {'time': 0.036232361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.036240278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.917000000003116e-06, 'source_diff': 7.917000000003116e-06}, {'time': 0.036253833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.355499999999843e-05, 'source_diff': 1.355499999999843e-05}, {'time': 0.036268431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4597999999997613e-05, 'source_diff': 1.4597999999997613e-05}, {'time': 0.036281958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3527000000006228e-05, 'source_diff': 1.3527000000006228e-05}, {'time': 0.036285917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.958999999997825e-06, 'source_diff': 3.958999999997825e-06}, {'time': 0.036290722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8049999999966175e-06, 'source_diff': 4.8049999999966175e-06}, {'time': 0.036299667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.945000000003256e-06, 'source_diff': 8.945000000003256e-06}, {'time': 0.036304042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.036316139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2096999999995639e-05, 'source_diff': 1.2096999999995639e-05}, {'time': 0.036322403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2640000000058205e-06, 'source_diff': 6.2640000000058205e-06}, {'time': 0.036334667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2263999999997943e-05, 'source_diff': 1.2263999999997943e-05}, {'time': 0.036346958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.229099999999761e-05, 'source_diff': 1.229099999999761e-05}, {'time': 0.036349458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.036360292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0834000000001232e-05, 'source_diff': 1.0834000000001232e-05}, {'time': 0.036371764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.036375917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.036379889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.036384042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.036391153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000004086e-06, 'source_diff': 7.111000000004086e-06}, {'time': 0.036398639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.036404264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.624999999995217e-06, 'source_diff': 5.624999999995217e-06}, {'time': 0.036406583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.319000000000626e-06, 'source_diff': 2.319000000000626e-06}, {'time': 0.036419486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2903000000001608e-05, 'source_diff': 1.2903000000001608e-05}, {'time': 0.036423028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.036437389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4360999999997459e-05, 'source_diff': 1.4360999999997459e-05}, {'time': 0.036450528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3139000000002288e-05, 'source_diff': 1.3139000000002288e-05}, {'time': 0.036465931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.540299999999717e-05, 'source_diff': 1.540299999999717e-05}, {'time': 0.036479264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.333299999999732e-05, 'source_diff': 1.333299999999732e-05}, {'time': 0.036494111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4847000000005328e-05, 'source_diff': 1.4847000000005328e-05}, {'time': 0.036498014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.036501597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5829999999945072e-06, 'source_diff': 3.5829999999945072e-06}, {'time': 0.036511625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0028000000002202e-05, 'source_diff': 1.0028000000002202e-05}, {'time': 0.036515111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4860000000039304e-06, 'source_diff': 3.4860000000039304e-06}, {'time': 0.036518431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.319999999994161e-06, 'source_diff': 3.319999999994161e-06}, {'time': 0.036523444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.013000000005097e-06, 'source_diff': 5.013000000005097e-06}, {'time': 0.036532194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.749999999994873e-06, 'source_diff': 8.749999999994873e-06}, {'time': 0.036545958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3764000000006382e-05, 'source_diff': 1.3764000000006382e-05}, {'time': 0.036553236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.036557194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.03656575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.036571986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.036582819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0833000000001758e-05, 'source_diff': 1.0833000000001758e-05}, {'time': 0.036591986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.166999999997427e-06, 'source_diff': 9.166999999997427e-06}, {'time': 0.03659825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}]</msg>
<status status="PASS" starttime="20201112 10:14:08.729" endtime="20201112 10:14:08.743"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.719" endtime="20201112 10:14:08.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:08.780" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:14:08.747" endtime="20201112 10:14:08.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.789" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:08.787" endtime="20201112 10:14:08.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.796" level="INFO">VALUE: {'eventsource_diff': [0, 2.2639999999948812e-06, 1.5417000000003678e-05, 5.639000000001726e-06, 1.1860999999994959e-05, 9.583000000000508e-06, 7.917000000003116e-06, 1.355499999999843e-05, 1.4597999999997613e-05, 1.3527000000006228e-05, 3.958999999997825e-06, 4.8049999999966175e-06, 8.945000000003256e-06, 4.375000000000906e-06, 1.2096999999995639e-05, 6.2640000000058205e-06, 1.2263999999997943e-05, 1.229099999999761e-05, 2.5000000000025002e-06, 1.0834000000001232e-05, 1.1471999999998483e-05, 4.152999999999796e-06, 3.971999999997922e-06, 4.152999999999796e-06, 7.111000000004086e-06, 7.486000000000992e-06, 5.624999999995217e-06, 2.319000000000626e-06, 1.2903000000001608e-05, 3.54200000000221e-06, 1.4360999999997459e-05, 1.3139000000002288e-05, 1.540299999999717e-05, 1.333299999999732e-05, 1.4847000000005328e-05, 3.902999999999546e-06, 3.5829999999945072e-06, 1.0028000000002202e-05, 3.4860000000039304e-06, 3.319999999994161e-06, 5.013000000005097e-06, 8.749999999994873e-06, 1.3764000000006382e-05, 7.2779999999994516e-06, 3.957999999998352e-06, 8.555999999999842e-06, 6.235999999999742e-06, 1.0833000000001758e-05, 9.166999999997427e-06, 6.2639999999988816e-06], 'sourcediff': [0, 2.2639999999948812e-06, 1.5417000000003678e-05, 5.639000000001726e-06, 1.1860999999994959e-05, 9.583000000000508e-06, 7.917000000003116e-06, 1.355499999999843e-05, 1.4597999999997613e-05, 1.3527000000006228e-05, 3.958999999997825e-06, 4.8049999999966175e-06, 8.945000000003256e-06, 4.375000000000906e-06, 1.2096999999995639e-05, 6.2640000000058205e-06, 1.2263999999997943e-05, 1.229099999999761e-05, 2.5000000000025002e-06, 1.0834000000001232e-05, 1.1471999999998483e-05, 4.152999999999796e-06, 3.971999999997922e-06, 4.152999999999796e-06, 7.111000000004086e-06, 7.486000000000992e-06, 5.624999999995217e-06, 2.319000000000626e-06, 1.2903000000001608e-05, 3.54200000000221e-06, 1.4360999999997459e-05, 1.3139000000002288e-05, 1.540299999999717e-05, 1.333299999999732e-05, 1.4847000000005328e-05, 3.902999999999546e-06, 3.5829999999945072e-06, 1.0028000000002202e-05, 3.4860000000039304e-06, 3.319999999994161e-06, 5.013000000005097e-06, 8.749999999994873e-06, 1.3764000000006382e-05, 7.2779999999994516e-06, 3.957999999998352e-06, 8.555999999999842e-06, 6.235999999999742e-06, 1.0833000000001758e-05, 9.166999999997427e-06, 6.2639999999988816e-06], 'time': [0.036187597, 0.036189861, 0.036205278, 0.036210917, 0.036222778, 0.036232361, 0.036240278, 0.036253833, 0.036268431, 0.036281958, 0.036285917, 0.036290722, 0.036299667, 0.036304042, 0.036316139, 0.036322403, 0.036334667, 0.036346958, 0.036349458, 0.036360292, 0.036371764, 0.036375917, 0.036379889, 0.036384042, 0.036391153, 0.036398639, 0.036404264, 0.036406583, 0.036419486, 0.036423028, 0.036437389, 0.036450528, 0.036465931, 0.036479264, 0.036494111, 0.036498014, 0.036501597, 0.036511625, 0.036515111, 0.036518431, 0.036523444, 0.036532194, 0.036545958, 0.036553236, 0.036557194, 0.03656575, 0.036571986, 0.036582819, 0.036591986, 0.03659825]}</msg>
<status status="PASS" starttime="20201112 10:14:08.791" endtime="20201112 10:14:08.797"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.782" endtime="20201112 10:14:08.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:08.808" level="INFO">${RESULT} = [{'time': 0.036189861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2639999999948812e-06, 'source_diff': 2.2639999999948812e-06}, {'time': 0.036210917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:08.800" endtime="20201112 10:14:08.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:08.826" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:08.810" endtime="20201112 10:14:08.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.837" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:08.835" endtime="20201112 10:14:08.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.842" level="INFO">VALUE: [2.2639999999948812e-06, 5.639000000001726e-06, 9.583000000000508e-06, 1.355499999999843e-05, 1.3527000000006228e-05, 4.8049999999966175e-06, 4.375000000000906e-06, 6.2640000000058205e-06, 1.229099999999761e-05, 1.0834000000001232e-05, 4.152999999999796e-06, 4.152999999999796e-06, 7.486000000000992e-06, 2.319000000000626e-06, 3.54200000000221e-06, 1.3139000000002288e-05, 1.333299999999732e-05, 3.902999999999546e-06, 1.0028000000002202e-05, 3.319999999994161e-06, 8.749999999994873e-06, 7.2779999999994516e-06, 8.555999999999842e-06, 1.0833000000001758e-05, 6.2639999999988816e-06]</msg>
<status status="PASS" starttime="20201112 10:14:08.839" endtime="20201112 10:14:08.843"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.828" endtime="20201112 10:14:08.845"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.852" endtime="20201112 10:14:08.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:08.860" endtime="20201112 10:14:08.882"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.856" endtime="20201112 10:14:08.883"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.847" endtime="20201112 10:14:08.885"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.314" endtime="20201112 10:14:08.885"></status>
</kw>
<msg timestamp="20201112 10:14:08.886" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.907" endtime="20201112 10:14:08.920"></status>
</kw>
<msg timestamp="20201112 10:14:08.922" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:08.902" endtime="20201112 10:14:08.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.928" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:08.924" endtime="20201112 10:14:08.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.930" endtime="20201112 10:14:08.934"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.895" endtime="20201112 10:14:08.935"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.891" endtime="20201112 10:14:08.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.954" endtime="20201112 10:14:09.244"></status>
</kw>
<msg timestamp="20201112 10:14:09.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038216264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038220417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:08.951" endtime="20201112 10:14:09.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038216264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038220417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:09.251" endtime="20201112 10:14:09.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.263" endtime="20201112 10:14:09.267"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.943" endtime="20201112 10:14:09.269"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.938" endtime="20201112 10:14:09.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.280" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:09.277" endtime="20201112 10:14:09.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.288" level="INFO">VALUE: [{'time': 0.038216264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038220417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.038228125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.708000000002102e-06, 'source_diff': 7.708000000002102e-06}, {'time': 0.038235014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.888999999996037e-06, 'source_diff': 6.888999999996037e-06}, {'time': 0.038243125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.111000000005086e-06, 'source_diff': 8.111000000005086e-06}, {'time': 0.038246875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7499999999968114e-06, 'source_diff': 3.7499999999968114e-06}, {'time': 0.038258333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.038264597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.038273764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.167000000004366e-06, 'source_diff': 9.167000000004366e-06}, {'time': 0.038283333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.569000000000938e-06, 'source_diff': 9.569000000000938e-06}, {'time': 0.03829875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.541699999999674e-05, 'source_diff': 1.541699999999674e-05}, {'time': 0.038302292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.038312083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.79099999999511e-06, 'source_diff': 9.79099999999511e-06}, {'time': 0.038315861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.77800000000289e-06, 'source_diff': 3.77800000000289e-06}, {'time': 0.038325042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.180999999996997e-06, 'source_diff': 9.180999999996997e-06}, {'time': 0.038327306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.26400000000182e-06, 'source_diff': 2.26400000000182e-06}, {'time': 0.038333556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.038338778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.038346264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.038355028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.038367125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2097000000002578e-05, 'source_diff': 1.2097000000002578e-05}, {'time': 0.038381069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3943999999994905e-05, 'source_diff': 1.3943999999994905e-05}, {'time': 0.038384181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1120000000064985e-06, 'source_diff': 3.1120000000064985e-06}, {'time': 0.038397319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3137999999995875e-05, 'source_diff': 1.3137999999995875e-05}, {'time': 0.038407722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999999107e-05, 'source_diff': 1.0402999999999107e-05}, {'time': 0.038420431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2708999999999637e-05, 'source_diff': 1.2708999999999637e-05}, {'time': 0.038424611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.038430056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.444999999999756e-06, 'source_diff': 5.444999999999756e-06}, {'time': 0.038434847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7910000000039865e-06, 'source_diff': 4.7910000000039865e-06}, {'time': 0.038437722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.038445431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.709000000001576e-06, 'source_diff': 7.709000000001576e-06}, {'time': 0.038460028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.459699999999814e-05, 'source_diff': 1.459699999999814e-05}, {'time': 0.038465861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8329999999967574e-06, 'source_diff': 5.8329999999967574e-06}, {'time': 0.038470861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0000000000050004e-06, 'source_diff': 5.0000000000050004e-06}, {'time': 0.038482347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1485999999998053e-05, 'source_diff': 1.1485999999998053e-05}, {'time': 0.038494833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2485999999999053e-05, 'source_diff': 1.2485999999999053e-05}, {'time': 0.038500861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.038507736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.875000000003406e-06, 'source_diff': 6.875000000003406e-06}, {'time': 0.038514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.038528986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4986000000001554e-05, 'source_diff': 1.4986000000001554e-05}, {'time': 0.038542111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3124999999995779e-05, 'source_diff': 1.3124999999995779e-05}, {'time': 0.038553167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1056000000002342e-05, 'source_diff': 1.1056000000002342e-05}, {'time': 0.0385555, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.333000000000196e-06, 'source_diff': 2.333000000000196e-06}, {'time': 0.03855775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.25000000000225e-06, 'source_diff': 2.25000000000225e-06}, {'time': 0.038568986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1235999999997803e-05, 'source_diff': 1.1235999999997803e-05}, {'time': 0.03858275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.038596083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3333000000004258e-05, 'source_diff': 1.3333000000004258e-05}, {'time': 0.038606708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.038611792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.083999999995481e-06, 'source_diff': 5.083999999995481e-06}, {'time': 0.038621292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.500000000002562e-06, 'source_diff': 9.500000000002562e-06}]</msg>
<status status="PASS" starttime="20201112 10:14:09.282" endtime="20201112 10:14:09.290"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.272" endtime="20201112 10:14:09.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:09.323" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:14:09.293" endtime="20201112 10:14:09.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.332" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:09.330" endtime="20201112 10:14:09.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.339" level="INFO">VALUE: {'eventsource_diff': [0, 4.152999999999796e-06, 7.708000000002102e-06, 6.888999999996037e-06, 8.111000000005086e-06, 3.7499999999968114e-06, 1.1457999999998913e-05, 6.2639999999988816e-06, 9.167000000004366e-06, 9.569000000000938e-06, 1.541699999999674e-05, 3.54200000000221e-06, 9.79099999999511e-06, 3.77800000000289e-06, 9.180999999996997e-06, 2.26400000000182e-06, 6.249999999999312e-06, 5.221999999999172e-06, 7.486000000000992e-06, 8.764000000001382e-06, 1.2097000000002578e-05, 1.3943999999994905e-05, 3.1120000000064985e-06, 1.3137999999995875e-05, 1.0402999999999107e-05, 1.2708999999999637e-05, 4.179999999999462e-06, 5.444999999999756e-06, 4.7910000000039865e-06, 2.874999999999406e-06, 7.709000000001576e-06, 1.459699999999814e-05, 5.8329999999967574e-06, 5.0000000000050004e-06, 1.1485999999998053e-05, 1.2485999999999053e-05, 6.0279999999982015e-06, 6.875000000003406e-06, 6.2639999999988816e-06, 1.4986000000001554e-05, 1.3124999999995779e-05, 1.1056000000002342e-05, 2.333000000000196e-06, 2.25000000000225e-06, 1.1235999999997803e-05, 1.3763999999999443e-05, 1.3333000000004258e-05, 1.0625000000000218e-05, 5.083999999995481e-06, 9.500000000002562e-06], 'sourcediff': [0, 4.152999999999796e-06, 7.708000000002102e-06, 6.888999999996037e-06, 8.111000000005086e-06, 3.7499999999968114e-06, 1.1457999999998913e-05, 6.2639999999988816e-06, 9.167000000004366e-06, 9.569000000000938e-06, 1.541699999999674e-05, 3.54200000000221e-06, 9.79099999999511e-06, 3.77800000000289e-06, 9.180999999996997e-06, 2.26400000000182e-06, 6.249999999999312e-06, 5.221999999999172e-06, 7.486000000000992e-06, 8.764000000001382e-06, 1.2097000000002578e-05, 1.3943999999994905e-05, 3.1120000000064985e-06, 1.3137999999995875e-05, 1.0402999999999107e-05, 1.2708999999999637e-05, 4.179999999999462e-06, 5.444999999999756e-06, 4.7910000000039865e-06, 2.874999999999406e-06, 7.709000000001576e-06, 1.459699999999814e-05, 5.8329999999967574e-06, 5.0000000000050004e-06, 1.1485999999998053e-05, 1.2485999999999053e-05, 6.0279999999982015e-06, 6.875000000003406e-06, 6.2639999999988816e-06, 1.4986000000001554e-05, 1.3124999999995779e-05, 1.1056000000002342e-05, 2.333000000000196e-06, 2.25000000000225e-06, 1.1235999999997803e-05, 1.3763999999999443e-05, 1.3333000000004258e-05, 1.0625000000000218e-05, 5.083999999995481e-06, 9.500000000002562e-06], 'time': [0.038216264, 0.038220417, 0.038228125, 0.038235014, 0.038243125, 0.038246875, 0.038258333, 0.038264597, 0.038273764, 0.038283333, 0.03829875, 0.038302292, 0.038312083, 0.038315861, 0.038325042, 0.038327306, 0.038333556, 0.038338778, 0.038346264, 0.038355028, 0.038367125, 0.038381069, 0.038384181, 0.038397319, 0.038407722, 0.038420431, 0.038424611, 0.038430056, 0.038434847, 0.038437722, 0.038445431, 0.038460028, 0.038465861, 0.038470861, 0.038482347, 0.038494833, 0.038500861, 0.038507736, 0.038514, 0.038528986, 0.038542111, 0.038553167, 0.0385555, 0.03855775, 0.038568986, 0.03858275, 0.038596083, 0.038606708, 0.038611792, 0.038621292]}</msg>
<status status="PASS" starttime="20201112 10:14:09.334" endtime="20201112 10:14:09.340"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.325" endtime="20201112 10:14:09.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:09.351" level="INFO">${RESULT} = [{'time': 0.038220417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.038235014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:09.343" endtime="20201112 10:14:09.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:09.369" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:09.353" endtime="20201112 10:14:09.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.379" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:09.377" endtime="20201112 10:14:09.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.384" level="INFO">VALUE: [4.152999999999796e-06, 6.888999999996037e-06, 3.7499999999968114e-06, 6.2639999999988816e-06, 9.569000000000938e-06, 3.54200000000221e-06, 3.77800000000289e-06, 2.26400000000182e-06, 5.221999999999172e-06, 8.764000000001382e-06, 1.3943999999994905e-05, 1.3137999999995875e-05, 1.2708999999999637e-05, 5.444999999999756e-06, 2.874999999999406e-06, 1.459699999999814e-05, 5.0000000000050004e-06, 1.2485999999999053e-05, 6.875000000003406e-06, 1.4986000000001554e-05, 1.1056000000002342e-05, 2.25000000000225e-06, 1.3763999999999443e-05, 1.0625000000000218e-05, 9.500000000002562e-06]</msg>
<status status="PASS" starttime="20201112 10:14:09.381" endtime="20201112 10:14:09.385"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.371" endtime="20201112 10:14:09.387"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.393" endtime="20201112 10:14:09.396"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:09.402" endtime="20201112 10:14:09.423"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.397" endtime="20201112 10:14:09.425"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.389" endtime="20201112 10:14:09.426"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.887" endtime="20201112 10:14:09.427"></status>
</kw>
<msg timestamp="20201112 10:14:09.428" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.449" endtime="20201112 10:14:09.461"></status>
</kw>
<msg timestamp="20201112 10:14:09.463" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.444" endtime="20201112 10:14:09.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.469" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.465" endtime="20201112 10:14:09.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.471" endtime="20201112 10:14:09.475"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.437" endtime="20201112 10:14:09.476"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.432" endtime="20201112 10:14:09.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.494" endtime="20201112 10:14:09.806"></status>
</kw>
<msg timestamp="20201112 10:14:09.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038031028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038044542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:09.491" endtime="20201112 10:14:09.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038031028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038044542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:09.813" endtime="20201112 10:14:09.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.826" endtime="20201112 10:14:09.829"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.484" endtime="20201112 10:14:09.831"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.479" endtime="20201112 10:14:09.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.842" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:09.839" endtime="20201112 10:14:09.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.850" level="INFO">VALUE: [{'time': 0.038031028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038044542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3513999999999193e-05, 'source_diff': 1.3513999999999193e-05}, {'time': 0.038055167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.038059972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8049999999966175e-06, 'source_diff': 4.8049999999966175e-06}, {'time': 0.038064347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.038071417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.07000000000485e-06, 'source_diff': 7.07000000000485e-06}, {'time': 0.038078083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.665999999995453e-06, 'source_diff': 6.665999999995453e-06}, {'time': 0.038091833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.038105806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3973000000000457e-05, 'source_diff': 1.3973000000000457e-05}, {'time': 0.03810975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.943999999998782e-06, 'source_diff': 3.943999999998782e-06}, {'time': 0.038116208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.458000000000852e-06, 'source_diff': 6.458000000000852e-06}, {'time': 0.038125792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583999999999981e-06, 'source_diff': 9.583999999999981e-06}, {'time': 0.038133931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000004226e-06, 'source_diff': 8.139000000004226e-06}, {'time': 0.038140375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.443999999994343e-06, 'source_diff': 6.443999999994343e-06}, {'time': 0.038143292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9170000000050544e-06, 'source_diff': 2.9170000000050544e-06}, {'time': 0.03814725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.0381535, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.038165583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2083000000003008e-05, 'source_diff': 1.2083000000003008e-05}, {'time': 0.0381785, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2916999999994239e-05, 'source_diff': 1.2916999999994239e-05}, {'time': 0.038191431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2931000000000747e-05, 'source_diff': 1.2931000000000747e-05}, {'time': 0.038196236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8050000000035564e-06, 'source_diff': 4.8050000000035564e-06}, {'time': 0.038202486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.038207069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.583000000002446e-06, 'source_diff': 4.583000000002446e-06}, {'time': 0.038213528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.458999999993387e-06, 'source_diff': 6.458999999993387e-06}, {'time': 0.038223944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0416000000006143e-05, 'source_diff': 1.0416000000006143e-05}, {'time': 0.03823125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.038244972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3722000000000734e-05, 'source_diff': 1.3722000000000734e-05}, {'time': 0.038248764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.791999999995521e-06, 'source_diff': 3.791999999995521e-06}, {'time': 0.038264139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5375000000004968e-05, 'source_diff': 1.5375000000004968e-05}, {'time': 0.038277889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.038285014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.124999999996717e-06, 'source_diff': 7.124999999996717e-06}, {'time': 0.038292278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.038304986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2708000000000164e-05, 'source_diff': 1.2708000000000164e-05}, {'time': 0.038307486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.038313944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.458000000000852e-06, 'source_diff': 6.458000000000852e-06}, {'time': 0.038321236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.038323528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.29200000000096e-06, 'source_diff': 2.29200000000096e-06}, {'time': 0.038336236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2708000000000164e-05, 'source_diff': 1.2708000000000164e-05}, {'time': 0.038347694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.038351653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.958999999997825e-06, 'source_diff': 3.958999999997825e-06}, {'time': 0.038363972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2319000000003688e-05, 'source_diff': 1.2319000000003688e-05}, {'time': 0.038377069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3096999999996639e-05, 'source_diff': 1.3096999999996639e-05}, {'time': 0.038387694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.038390681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.987000000002904e-06, 'source_diff': 2.987000000002904e-06}, {'time': 0.038401236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0554999999995429e-05, 'source_diff': 1.0554999999995429e-05}, {'time': 0.038412292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1056000000002342e-05, 'source_diff': 1.1056000000002342e-05}, {'time': 0.038427083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.479100000000011e-05, 'source_diff': 1.479100000000011e-05}, {'time': 0.038435222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.138999999997287e-06, 'source_diff': 8.138999999997287e-06}, {'time': 0.038442292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.07000000000485e-06, 'source_diff': 7.07000000000485e-06}, {'time': 0.038450625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.332999999999258e-06, 'source_diff': 8.332999999999258e-06}]</msg>
<status status="PASS" starttime="20201112 10:14:09.844" endtime="20201112 10:14:09.852"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.834" endtime="20201112 10:14:09.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:09.885" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:14:09.855" endtime="20201112 10:14:09.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.894" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:09.892" endtime="20201112 10:14:09.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.901" level="INFO">VALUE: {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 1.3513999999999193e-05, 1.0625000000000218e-05, 4.8049999999966175e-06, 4.375000000000906e-06, 7.07000000000485e-06, 6.665999999995453e-06, 1.3749999999999873e-05, 1.3973000000000457e-05, 3.943999999998782e-06, 6.458000000000852e-06, 9.583999999999981e-06, 8.139000000004226e-06, 6.443999999994343e-06, 2.9170000000050544e-06, 3.957999999998352e-06, 6.249999999999312e-06, 1.2083000000003008e-05, 1.2916999999994239e-05, 1.2931000000000747e-05, 4.8050000000035564e-06, 6.249999999999312e-06, 4.583000000002446e-06, 6.458999999993387e-06, 1.0416000000006143e-05, 7.305999999998591e-06, 1.3722000000000734e-05, 3.791999999995521e-06, 1.5375000000004968e-05, 1.3749999999999873e-05, 7.124999999996717e-06, 7.263999999999882e-06, 1.2708000000000164e-05, 2.5000000000025002e-06, 6.458000000000852e-06, 7.2919999999990215e-06, 2.29200000000096e-06, 1.2708000000000164e-05, 1.1457999999998913e-05, 3.958999999997825e-06, 1.2319000000003688e-05, 1.3096999999996639e-05, 1.0625000000000218e-05, 2.987000000002904e-06, 1.0554999999995429e-05, 1.1056000000002342e-05, 1.479100000000011e-05, 8.138999999997287e-06, 7.07000000000485e-06, 8.332999999999258e-06], 'sourcediff': [0, 1.3513999999999193e-05, 1.0625000000000218e-05, 4.8049999999966175e-06, 4.375000000000906e-06, 7.07000000000485e-06, 6.665999999995453e-06, 1.3749999999999873e-05, 1.3973000000000457e-05, 3.943999999998782e-06, 6.458000000000852e-06, 9.583999999999981e-06, 8.139000000004226e-06, 6.443999999994343e-06, 2.9170000000050544e-06, 3.957999999998352e-06, 6.249999999999312e-06, 1.2083000000003008e-05, 1.2916999999994239e-05, 1.2931000000000747e-05, 4.8050000000035564e-06, 6.249999999999312e-06, 4.583000000002446e-06, 6.458999999993387e-06, 1.0416000000006143e-05, 7.305999999998591e-06, 1.3722000000000734e-05, 3.791999999995521e-06, 1.5375000000004968e-05, 1.3749999999999873e-05, 7.124999999996717e-06, 7.263999999999882e-06, 1.2708000000000164e-05, 2.5000000000025002e-06, 6.458000000000852e-06, 7.2919999999990215e-06, 2.29200000000096e-06, 1.2708000000000164e-05, 1.1457999999998913e-05, 3.958999999997825e-06, 1.2319000000003688e-05, 1.3096999999996639e-05, 1.0625000000000218e-05, 2.987000000002904e-06, 1.0554999999995429e-05, 1.1056000000002342e-05, 1.479100000000011e-05, 8.138999999997287e-06, 7.07000000000485e-06, 8.332999999999258e-06], 'time': [0.038031028, 0.038044542, 0.038055167, 0.038059972, 0.038064347, 0.038071417, 0.038078083, 0.038091833, 0.038105806, 0.03810975, 0.038116208, 0.038125792, 0.038133931, 0.038140375, 0.038143292, 0.03814725, 0.0381535, 0.038165583, 0.0381785, 0.038191431, 0.038196236, 0.038202486, 0.038207069, 0.038213528, 0.038223944, 0.03823125, 0.038244972, 0.038248764, 0.038264139, 0.038277889, 0.038285014, 0.038292278, 0.038304986, 0.038307486, 0.038313944, 0.038321236, 0.038323528, 0.038336236, 0.038347694, 0.038351653, 0.038363972, 0.038377069, 0.038387694, 0.038390681, 0.038401236, 0.038412292, 0.038427083, 0.038435222, 0.038442292, 0.038450625]}</msg>
<status status="PASS" starttime="20201112 10:14:09.896" endtime="20201112 10:14:09.902"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.887" endtime="20201112 10:14:09.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:09.913" level="INFO">${RESULT} = [{'time': 0.038044542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3513999999999193e-05, 'source_diff': 1.3513999999999193e-05}, {'time': 0.038059972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:09.905" endtime="20201112 10:14:09.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:09.932" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:09.915" endtime="20201112 10:14:09.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.942" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:09.939" endtime="20201112 10:14:09.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.947" level="INFO">VALUE: [1.3513999999999193e-05, 4.8049999999966175e-06, 7.07000000000485e-06, 1.3749999999999873e-05, 3.943999999998782e-06, 9.583999999999981e-06, 6.443999999994343e-06, 3.957999999998352e-06, 1.2083000000003008e-05, 1.2931000000000747e-05, 6.249999999999312e-06, 6.458999999993387e-06, 7.305999999998591e-06, 3.791999999995521e-06, 1.3749999999999873e-05, 7.263999999999882e-06, 2.5000000000025002e-06, 7.2919999999990215e-06, 1.2708000000000164e-05, 3.958999999997825e-06, 1.3096999999996639e-05, 2.987000000002904e-06, 1.1056000000002342e-05, 8.138999999997287e-06, 8.332999999999258e-06]</msg>
<status status="PASS" starttime="20201112 10:14:09.944" endtime="20201112 10:14:09.948"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.933" endtime="20201112 10:14:09.949"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.956" endtime="20201112 10:14:09.959"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:09.964" endtime="20201112 10:14:09.986"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.960" endtime="20201112 10:14:09.987"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.951" endtime="20201112 10:14:09.989"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.429" endtime="20201112 10:14:09.989"></status>
</kw>
<msg timestamp="20201112 10:14:09.990" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.011" endtime="20201112 10:14:10.024"></status>
</kw>
<msg timestamp="20201112 10:14:10.026" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:10.006" endtime="20201112 10:14:10.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.032" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:10.028" endtime="20201112 10:14:10.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.034" endtime="20201112 10:14:10.038"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.999" endtime="20201112 10:14:10.039"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.994" endtime="20201112 10:14:10.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.058" endtime="20201112 10:14:10.374"></status>
</kw>
<msg timestamp="20201112 10:14:10.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037787694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037798722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:10.054" endtime="20201112 10:14:10.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037787694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037798722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:10.381" endtime="20201112 10:14:10.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.394" endtime="20201112 10:14:10.397"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.047" endtime="20201112 10:14:10.399"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.042" endtime="20201112 10:14:10.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.410" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:10.408" endtime="20201112 10:14:10.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.418" level="INFO">VALUE: [{'time': 0.037787694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037798722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1028000000003202e-05, 'source_diff': 1.1028000000003202e-05}, {'time': 0.03781, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1278000000003452e-05, 'source_diff': 1.1278000000003452e-05}, {'time': 0.037822056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2055999999996403e-05, 'source_diff': 1.2055999999996403e-05}, {'time': 0.037833736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1680000000000024e-05, 'source_diff': 1.1680000000000024e-05}, {'time': 0.037839972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.037855458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5486000000002054e-05, 'source_diff': 1.5486000000002054e-05}, {'time': 0.037863944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.485999999995053e-06, 'source_diff': 8.485999999995053e-06}, {'time': 0.037869972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.02800000000514e-06, 'source_diff': 6.02800000000514e-06}, {'time': 0.037882264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2291999999997083e-05, 'source_diff': 1.2291999999997083e-05}, {'time': 0.037891028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.037900639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.037906472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8329999999967574e-06, 'source_diff': 5.8329999999967574e-06}, {'time': 0.037921458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4986000000001554e-05, 'source_diff': 1.4986000000001554e-05}, {'time': 0.037936028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4569999999998473e-05, 'source_diff': 1.4569999999998473e-05}, {'time': 0.037949153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3125000000002718e-05, 'source_diff': 1.3125000000002718e-05}, {'time': 0.037955417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.037963528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.111000000005086e-06, 'source_diff': 8.111000000005086e-06}, {'time': 0.037967111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5829999999945072e-06, 'source_diff': 3.5829999999945072e-06}, {'time': 0.037970833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7220000000046105e-06, 'source_diff': 3.7220000000046105e-06}, {'time': 0.037978319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.037992931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4611999999997183e-05, 'source_diff': 1.4611999999997183e-05}, {'time': 0.037997333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.038008111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0777999999996013e-05, 'source_diff': 1.0777999999996013e-05}, {'time': 0.038014361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2500000000062506e-06, 'source_diff': 6.2500000000062506e-06}, {'time': 0.038020208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.846999999996327e-06, 'source_diff': 5.846999999996327e-06}, {'time': 0.038030194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.986000000003492e-06, 'source_diff': 9.986000000003492e-06}, {'time': 0.038041056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0861999999993432e-05, 'source_diff': 1.0861999999993432e-05}, {'time': 0.038046264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.208000000006541e-06, 'source_diff': 5.208000000006541e-06}, {'time': 0.038054583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.038063125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.038070417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.03807625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8329999999967574e-06, 'source_diff': 5.8329999999967574e-06}, {'time': 0.038080236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9860000000044304e-06, 'source_diff': 3.9860000000044304e-06}, {'time': 0.03808625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.038097736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1485999999998053e-05, 'source_diff': 1.1485999999998053e-05}, {'time': 0.038108972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1235999999997803e-05, 'source_diff': 1.1235999999997803e-05}, {'time': 0.038118347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.038125208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.861000000003836e-06, 'source_diff': 6.861000000003836e-06}, {'time': 0.038139403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4195000000001567e-05, 'source_diff': 1.4195000000001567e-05}, {'time': 0.038147917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.038155208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.290999999999548e-06, 'source_diff': 7.290999999999548e-06}, {'time': 0.038163958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.749999999994873e-06, 'source_diff': 8.749999999994873e-06}, {'time': 0.038169819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.861000000002836e-06, 'source_diff': 5.861000000002836e-06}, {'time': 0.038185014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5195000000002568e-05, 'source_diff': 1.5195000000002568e-05}, {'time': 0.038200028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5013999999993755e-05, 'source_diff': 1.5013999999993755e-05}, {'time': 0.038206694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.666000000002392e-06, 'source_diff': 6.666000000002392e-06}, {'time': 0.038217931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1236999999997277e-05, 'source_diff': 1.1236999999997277e-05}, {'time': 0.038220431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.038224597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}]</msg>
<status status="PASS" starttime="20201112 10:14:10.412" endtime="20201112 10:14:10.420"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.402" endtime="20201112 10:14:10.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:10.455" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:14:10.423" endtime="20201112 10:14:10.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.464" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:10.462" endtime="20201112 10:14:10.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.471" level="INFO">VALUE: {'eventsource_diff': [0, 1.1028000000003202e-05, 1.1278000000003452e-05, 1.2055999999996403e-05, 1.1680000000000024e-05, 6.235999999999742e-06, 1.5486000000002054e-05, 8.485999999995053e-06, 6.02800000000514e-06, 1.2291999999997083e-05, 8.764000000001382e-06, 9.610999999999648e-06, 5.8329999999967574e-06, 1.4986000000001554e-05, 1.4569999999998473e-05, 1.3125000000002718e-05, 6.2639999999988816e-06, 8.111000000005086e-06, 3.5829999999945072e-06, 3.7220000000046105e-06, 7.486000000000992e-06, 1.4611999999997183e-05, 4.402000000000572e-06, 1.0777999999996013e-05, 6.2500000000062506e-06, 5.846999999996327e-06, 9.986000000003492e-06, 1.0861999999993432e-05, 5.208000000006541e-06, 8.318999999999688e-06, 8.542000000000272e-06, 7.2919999999990215e-06, 5.8329999999967574e-06, 3.9860000000044304e-06, 6.0139999999986316e-06, 1.1485999999998053e-05, 1.1235999999997803e-05, 9.374999999998967e-06, 6.861000000003836e-06, 1.4195000000001567e-05, 8.514000000001132e-06, 7.290999999999548e-06, 8.749999999994873e-06, 5.861000000002836e-06, 1.5195000000002568e-05, 1.5013999999993755e-05, 6.666000000002392e-06, 1.1236999999997277e-05, 2.5000000000025002e-06, 4.165999999999892e-06], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 1.1028000000003202e-05, 1.1278000000003452e-05, 1.2055999999996403e-05, 1.1680000000000024e-05, 6.235999999999742e-06, 1.5486000000002054e-05, 8.485999999995053e-06, 6.02800000000514e-06, 1.2291999999997083e-05, 8.764000000001382e-06, 9.610999999999648e-06, 5.8329999999967574e-06, 1.4986000000001554e-05, 1.4569999999998473e-05, 1.3125000000002718e-05, 6.2639999999988816e-06, 8.111000000005086e-06, 3.5829999999945072e-06, 3.7220000000046105e-06, 7.486000000000992e-06, 1.4611999999997183e-05, 4.402000000000572e-06, 1.0777999999996013e-05, 6.2500000000062506e-06, 5.846999999996327e-06, 9.986000000003492e-06, 1.0861999999993432e-05, 5.208000000006541e-06, 8.318999999999688e-06, 8.542000000000272e-06, 7.2919999999990215e-06, 5.8329999999967574e-06, 3.9860000000044304e-06, 6.0139999999986316e-06, 1.1485999999998053e-05, 1.1235999999997803e-05, 9.374999999998967e-06, 6.861000000003836e-06, 1.4195000000001567e-05, 8.514000000001132e-06, 7.290999999999548e-06, 8.749999999994873e-06, 5.861000000002836e-06, 1.5195000000002568e-05, 1.5013999999993755e-05, 6.666000000002392e-06, 1.1236999999997277e-05, 2.5000000000025002e-06, 4.165999999999892e-06], 'time': [0.037787694, 0.037798722, 0.03781, 0.037822056, 0.037833736, 0.037839972, 0.037855458, 0.037863944, 0.037869972, 0.037882264, 0.037891028, 0.037900639, 0.037906472, 0.037921458, 0.037936028, 0.037949153, 0.037955417, 0.037963528, 0.037967111, 0.037970833, 0.037978319, 0.037992931, 0.037997333, 0.038008111, 0.038014361, 0.038020208, 0.038030194, 0.038041056, 0.038046264, 0.038054583, 0.038063125, 0.038070417, 0.03807625, 0.038080236, 0.03808625, 0.038097736, 0.038108972, 0.038118347, 0.038125208, 0.038139403, 0.038147917, 0.038155208, 0.038163958, 0.038169819, 0.038185014, 0.038200028, 0.038206694, 0.038217931, 0.038220431, 0.038224597]}</msg>
<status status="PASS" starttime="20201112 10:14:10.466" endtime="20201112 10:14:10.472"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.456" endtime="20201112 10:14:10.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:10.482" level="INFO">${RESULT} = [{'time': 0.037798722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1028000000003202e-05, 'source_diff': 1.1028000000003202e-05}, {'time': 0.037822056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:10.475" endtime="20201112 10:14:10.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:10.501" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:10.484" endtime="20201112 10:14:10.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.511" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:10.509" endtime="20201112 10:14:10.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.516" level="INFO">VALUE: [1.1028000000003202e-05, 1.2055999999996403e-05, 6.235999999999742e-06, 8.485999999995053e-06, 1.2291999999997083e-05, 9.610999999999648e-06, 1.4986000000001554e-05, 1.3125000000002718e-05, 8.111000000005086e-06, 3.7220000000046105e-06, 1.4611999999997183e-05, 1.0777999999996013e-05, 5.846999999996327e-06, 1.0861999999993432e-05, 8.318999999999688e-06, 7.2919999999990215e-06, 3.9860000000044304e-06, 1.1485999999998053e-05, 9.374999999998967e-06, 1.4195000000001567e-05, 7.290999999999548e-06, 5.861000000002836e-06, 1.5013999999993755e-05, 1.1236999999997277e-05, 4.165999999999892e-06]</msg>
<status status="PASS" starttime="20201112 10:14:10.513" endtime="20201112 10:14:10.517"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.503" endtime="20201112 10:14:10.519"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.525" endtime="20201112 10:14:10.528"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:10.533" endtime="20201112 10:14:10.555"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.529" endtime="20201112 10:14:10.556"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.520" endtime="20201112 10:14:10.558"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.991" endtime="20201112 10:14:10.559"></status>
</kw>
<msg timestamp="20201112 10:14:10.559" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.580" endtime="20201112 10:14:10.593"></status>
</kw>
<msg timestamp="20201112 10:14:10.594" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:10.575" endtime="20201112 10:14:10.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.601" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:10.597" endtime="20201112 10:14:10.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.603" endtime="20201112 10:14:10.607"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.568" endtime="20201112 10:14:10.608"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.564" endtime="20201112 10:14:10.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.626" endtime="20201112 10:14:10.941"></status>
</kw>
<msg timestamp="20201112 10:14:10.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037646917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037650667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:10.623" endtime="20201112 10:14:10.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037646917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037650667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:10.947" endtime="20201112 10:14:10.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.960" endtime="20201112 10:14:10.964"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.616" endtime="20201112 10:14:10.965"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.611" endtime="20201112 10:14:10.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.976" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:10.974" endtime="20201112 10:14:10.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.984" level="INFO">VALUE: [{'time': 0.037646917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037650667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7499999999968114e-06, 'source_diff': 3.7499999999968114e-06}, {'time': 0.037659847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.180000000004462e-06, 'source_diff': 9.180000000004462e-06}, {'time': 0.037664014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.037673167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.152999999997857e-06, 'source_diff': 9.152999999997857e-06}, {'time': 0.037687806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4638999999996849e-05, 'source_diff': 1.4638999999996849e-05}, {'time': 0.037694639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8330000000046964e-06, 'source_diff': 6.8330000000046964e-06}, {'time': 0.037698181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.541999999995271e-06, 'source_diff': 3.541999999995271e-06}, {'time': 0.037702347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.037709847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.037719653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.037734861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5208000000002664e-05, 'source_diff': 1.5208000000002664e-05}, {'time': 0.037744222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.037747764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.037758806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1041999999995833e-05, 'source_diff': 1.1041999999995833e-05}, {'time': 0.037771097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.229099999999761e-05, 'source_diff': 1.229099999999761e-05}, {'time': 0.037779653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.55600000000678e-06, 'source_diff': 8.55600000000678e-06}, {'time': 0.037794014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4360999999997459e-05, 'source_diff': 1.4360999999997459e-05}, {'time': 0.037805486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.037815736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0250000000003312e-05, 'source_diff': 1.0250000000003312e-05}, {'time': 0.037821736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.037830486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.037837167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.680999999994497e-06, 'source_diff': 6.680999999994497e-06}, {'time': 0.037846958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.791000000002048e-06, 'source_diff': 9.791000000002048e-06}, {'time': 0.037855278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.319999999999161e-06, 'source_diff': 8.319999999999161e-06}, {'time': 0.037857986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7080000000040405e-06, 'source_diff': 2.7080000000040405e-06}, {'time': 0.037867806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819999999993723e-06, 'source_diff': 9.819999999993723e-06}, {'time': 0.037872167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.037876764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.037884861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.037889444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.583000000002446e-06, 'source_diff': 4.583000000002446e-06}, {'time': 0.037900069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.037908194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.124999999997717e-06, 'source_diff': 8.124999999997717e-06}, {'time': 0.037913833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.037928458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4624999999997279e-05, 'source_diff': 1.4624999999997279e-05}, {'time': 0.037941125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2667000000000928e-05, 'source_diff': 1.2667000000000928e-05}, {'time': 0.037949458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.332999999999258e-06, 'source_diff': 8.332999999999258e-06}, {'time': 0.037963625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4167000000002428e-05, 'source_diff': 1.4167000000002428e-05}, {'time': 0.037973208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.037985292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2083999999995543e-05, 'source_diff': 1.2083999999995543e-05}, {'time': 0.037999681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4389000000003538e-05, 'source_diff': 1.4389000000003538e-05}, {'time': 0.03800675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.068999999998438e-06, 'source_diff': 7.068999999998438e-06}, {'time': 0.038020917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4167000000002428e-05, 'source_diff': 1.4167000000002428e-05}, {'time': 0.038025167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2499999999973115e-06, 'source_diff': 4.2499999999973115e-06}, {'time': 0.038036556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1389000000000538e-05, 'source_diff': 1.1389000000000538e-05}, {'time': 0.038049042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2485999999999053e-05, 'source_diff': 1.2485999999999053e-05}, {'time': 0.038053014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9720000000048605e-06, 'source_diff': 3.9720000000048605e-06}, {'time': 0.038064694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1680000000000024e-05, 'source_diff': 1.1680000000000024e-05}, {'time': 0.038078847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4152999999995919e-05, 'source_diff': 1.4152999999995919e-05}, {'time': 0.038086139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}]</msg>
<status status="PASS" starttime="20201112 10:14:10.978" endtime="20201112 10:14:10.986"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.968" endtime="20201112 10:14:10.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:11.019" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:14:10.989" endtime="20201112 10:14:11.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.029" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:11.026" endtime="20201112 10:14:11.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.035" level="INFO">VALUE: {'eventsource_diff': [0, 3.7499999999968114e-06, 9.180000000004462e-06, 4.166999999999366e-06, 9.152999999997857e-06, 1.4638999999996849e-05, 6.8330000000046964e-06, 3.541999999995271e-06, 4.165999999999892e-06, 7.500000000000562e-06, 9.806000000001092e-06, 1.5208000000002664e-05, 9.360999999999398e-06, 3.54200000000221e-06, 1.1041999999995833e-05, 1.229099999999761e-05, 8.55600000000678e-06, 1.4360999999997459e-05, 1.1471999999998483e-05, 1.0250000000003312e-05, 5.999999999999062e-06, 8.750000000001812e-06, 6.680999999994497e-06, 9.791000000002048e-06, 8.319999999999161e-06, 2.7080000000040405e-06, 9.819999999993723e-06, 4.361000000001336e-06, 4.597000000002016e-06, 8.096999999998578e-06, 4.583000000002446e-06, 1.0625000000000218e-05, 8.124999999997717e-06, 5.639000000001726e-06, 1.4624999999997279e-05, 1.2667000000000928e-05, 8.332999999999258e-06, 1.4167000000002428e-05, 9.583000000000508e-06, 1.2083999999995543e-05, 1.4389000000003538e-05, 7.068999999998438e-06, 1.4167000000002428e-05, 4.2499999999973115e-06, 1.1389000000000538e-05, 1.2485999999999053e-05, 3.9720000000048605e-06, 1.1680000000000024e-05, 1.4152999999995919e-05, 7.2919999999990215e-06], 'sourcediff': [0, 3.7499999999968114e-06, 9.180000000004462e-06, 4.166999999999366e-06, 9.152999999997857e-06, 1.4638999999996849e-05, 6.8330000000046964e-06, 3.541999999995271e-06, 4.165999999999892e-06, 7.500000000000562e-06, 9.806000000001092e-06, 1.5208000000002664e-05, 9.360999999999398e-06, 3.54200000000221e-06, 1.1041999999995833e-05, 1.229099999999761e-05, 8.55600000000678e-06, 1.4360999999997459e-05, 1.1471999999998483e-05, 1.0250000000003312e-05, 5.999999999999062e-06, 8.750000000001812e-06, 6.680999999994497e-06, 9.791000000002048e-06, 8.319999999999161e-06, 2.7080000000040405e-06, 9.819999999993723e-06, 4.361000000001336e-06, 4.597000000002016e-06, 8.096999999998578e-06, 4.583000000002446e-06, 1.0625000000000218e-05, 8.124999999997717e-06, 5.639000000001726e-06, 1.4624999999997279e-05, 1.2667000000000928e-05, 8.332999999999258e-06, 1.4167000000002428e-05, 9.583000000000508e-06, 1.2083999999995543e-05, 1.4389000000003538e-05, 7.068999999998438e-06, 1.4167000000002428e-05, 4.2499999999973115e-06, 1.1389000000000538e-05, 1.2485999999999053e-05, 3.9720000000048605e-06, 1.1680000000000024e-05, 1.4152999999995919e-05, 7.2919999999990215e-06], 'time': [0.037646917, 0.037650667, 0.037659847, 0.037664014, 0.037673167, 0.037687806, 0.037694639, 0.037698181, 0.037702347, 0.037709847, 0.037719653, 0.037734861, 0.037744222, 0.037747764, 0.037758806, 0.037771097, 0.037779653, 0.037794014, 0.037805486, 0.037815736, 0.037821736, 0.037830486, 0.037837167, 0.037846958, 0.037855278, 0.037857986, 0.037867806, 0.037872167, 0.037876764, 0.037884861, 0.037889444, 0.037900069, 0.037908194, 0.037913833, 0.037928458, 0.037941125, 0.037949458, 0.037963625, 0.037973208, 0.037985292, 0.037999681, 0.03800675, 0.038020917, 0.038025167, 0.038036556, 0.038049042, 0.038053014, 0.038064694, 0.038078847, 0.038086139]}</msg>
<status status="PASS" starttime="20201112 10:14:11.031" endtime="20201112 10:14:11.037"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.021" endtime="20201112 10:14:11.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:11.047" level="INFO">${RESULT} = [{'time': 0.037650667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7499999999968114e-06, 'source_diff': 3.7499999999968114e-06}, {'time': 0.037664014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:11.040" endtime="20201112 10:14:11.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:11.065" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:11.049" endtime="20201112 10:14:11.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.075" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:11.073" endtime="20201112 10:14:11.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.080" level="INFO">VALUE: [3.7499999999968114e-06, 4.166999999999366e-06, 1.4638999999996849e-05, 3.541999999995271e-06, 7.500000000000562e-06, 1.5208000000002664e-05, 3.54200000000221e-06, 1.229099999999761e-05, 1.4360999999997459e-05, 1.0250000000003312e-05, 8.750000000001812e-06, 9.791000000002048e-06, 2.7080000000040405e-06, 4.361000000001336e-06, 8.096999999998578e-06, 1.0625000000000218e-05, 5.639000000001726e-06, 1.2667000000000928e-05, 1.4167000000002428e-05, 1.2083999999995543e-05, 7.068999999998438e-06, 4.2499999999973115e-06, 1.2485999999999053e-05, 1.1680000000000024e-05, 7.2919999999990215e-06]</msg>
<status status="PASS" starttime="20201112 10:14:11.078" endtime="20201112 10:14:11.082"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.067" endtime="20201112 10:14:11.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.090" endtime="20201112 10:14:11.093"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:11.099" endtime="20201112 10:14:11.121"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.094" endtime="20201112 10:14:11.123"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.085" endtime="20201112 10:14:11.124"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.560" endtime="20201112 10:14:11.125"></status>
</kw>
<msg timestamp="20201112 10:14:11.125" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.146" endtime="20201112 10:14:11.159"></status>
</kw>
<msg timestamp="20201112 10:14:11.161" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:11.142" endtime="20201112 10:14:11.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.167" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:11.163" endtime="20201112 10:14:11.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.169" endtime="20201112 10:14:11.173"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.135" endtime="20201112 10:14:11.174"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.130" endtime="20201112 10:14:11.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.192" endtime="20201112 10:14:11.503"></status>
</kw>
<msg timestamp="20201112 10:14:11.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038133806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038146097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:11.189" endtime="20201112 10:14:11.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038133806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038146097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:11.510" endtime="20201112 10:14:11.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.522" endtime="20201112 10:14:11.526"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.182" endtime="20201112 10:14:11.528"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.177" endtime="20201112 10:14:11.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.538" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:11.536" endtime="20201112 10:14:11.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.546" level="INFO">VALUE: [{'time': 0.038133806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038146097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.229099999999761e-05, 'source_diff': 1.229099999999761e-05}, {'time': 0.038153583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.038163597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0014000000002632e-05, 'source_diff': 1.0014000000002632e-05}, {'time': 0.038169208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.038184222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5013999999993755e-05, 'source_diff': 1.5013999999993755e-05}, {'time': 0.038195278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1056000000002342e-05, 'source_diff': 1.1056000000002342e-05}, {'time': 0.038207139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1861000000001898e-05, 'source_diff': 1.1861000000001898e-05}, {'time': 0.038211514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.038217347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8329999999967574e-06, 'source_diff': 5.8329999999967574e-06}, {'time': 0.038229861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.038235681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8200000000036e-06, 'source_diff': 5.8200000000036e-06}, {'time': 0.038238389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7079999999971016e-06, 'source_diff': 2.7079999999971016e-06}, {'time': 0.038253028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4639000000003788e-05, 'source_diff': 1.4639000000003788e-05}, {'time': 0.038258181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.038273611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5429999999996835e-05, 'source_diff': 1.5429999999996835e-05}, {'time': 0.038289028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5417000000003678e-05, 'source_diff': 1.5417000000003678e-05}, {'time': 0.038300486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.038308611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.124999999997717e-06, 'source_diff': 8.124999999997717e-06}, {'time': 0.038323819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5208000000002664e-05, 'source_diff': 1.5208000000002664e-05}, {'time': 0.038337639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3819999999997723e-05, 'source_diff': 1.3819999999997723e-05}, {'time': 0.038344653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.038349111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.038354875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.038357153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.27800000000139e-06, 'source_diff': 2.27800000000139e-06}, {'time': 0.038364444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.290999999999548e-06, 'source_diff': 7.290999999999548e-06}, {'time': 0.038366972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.038377569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0597000000001078e-05, 'source_diff': 1.0597000000001078e-05}, {'time': 0.038387583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0014000000002632e-05, 'source_diff': 1.0014000000002632e-05}, {'time': 0.038398625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1041999999995833e-05, 'source_diff': 1.1041999999995833e-05}, {'time': 0.038412778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4153000000002858e-05, 'source_diff': 1.4153000000002858e-05}, {'time': 0.038421736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.957999999996413e-06, 'source_diff': 8.957999999996413e-06}, {'time': 0.038427986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.038438208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0222000000004172e-05, 'source_diff': 1.0222000000004172e-05}, {'time': 0.038452181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3973000000000457e-05, 'source_diff': 1.3973000000000457e-05}, {'time': 0.038459042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.860999999996897e-06, 'source_diff': 6.860999999996897e-06}, {'time': 0.038470917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1875000000001468e-05, 'source_diff': 1.1875000000001468e-05}, {'time': 0.038481139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0221999999997233e-05, 'source_diff': 1.0221999999997233e-05}, {'time': 0.038493847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2708000000000164e-05, 'source_diff': 1.2708000000000164e-05}, {'time': 0.038501542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.695000000002006e-06, 'source_diff': 7.695000000002006e-06}, {'time': 0.038512181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.038525292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3111000000003148e-05, 'source_diff': 1.3111000000003148e-05}, {'time': 0.0385405, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5207999999995725e-05, 'source_diff': 1.5207999999995725e-05}, {'time': 0.038548014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.038555292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.038570514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5222000000002234e-05, 'source_diff': 1.5222000000002234e-05}, {'time': 0.038583444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2930000000001274e-05, 'source_diff': 1.2930000000001274e-05}, {'time': 0.038589056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.611999999995121e-06, 'source_diff': 5.611999999995121e-06}, {'time': 0.038597389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.333000000006197e-06, 'source_diff': 8.333000000006197e-06}, {'time': 0.038611153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}]</msg>
<status status="PASS" starttime="20201112 10:14:11.541" endtime="20201112 10:14:11.549"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.530" endtime="20201112 10:14:11.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:11.582" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:14:11.552" endtime="20201112 10:14:11.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.591" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:11.588" endtime="20201112 10:14:11.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.598" level="INFO">VALUE: {'eventsource_diff': [0, 1.229099999999761e-05, 7.486000000000992e-06, 1.0014000000002632e-05, 5.611000000002586e-06, 1.5013999999993755e-05, 1.1056000000002342e-05, 1.1861000000001898e-05, 4.375000000000906e-06, 5.8329999999967574e-06, 1.2513999999998193e-05, 5.8200000000036e-06, 2.7079999999971016e-06, 1.4639000000003788e-05, 5.153000000000796e-06, 1.5429999999996835e-05, 1.5417000000003678e-05, 1.1457999999998913e-05, 8.124999999997717e-06, 1.5208000000002664e-05, 1.3819999999997723e-05, 7.013999999999632e-06, 4.457999999998852e-06, 5.7639999999983815e-06, 2.27800000000139e-06, 7.290999999999548e-06, 2.52800000000164e-06, 1.0597000000001078e-05, 1.0014000000002632e-05, 1.1041999999995833e-05, 1.4153000000002858e-05, 8.957999999996413e-06, 6.249999999999312e-06, 1.0222000000004172e-05, 1.3973000000000457e-05, 6.860999999996897e-06, 1.1875000000001468e-05, 1.0221999999997233e-05, 1.2708000000000164e-05, 7.695000000002006e-06, 1.0638999999999788e-05, 1.3111000000003148e-05, 1.5207999999995725e-05, 7.514000000000132e-06, 7.2779999999994516e-06, 1.5222000000002234e-05, 1.2930000000001274e-05, 5.611999999995121e-06, 8.333000000006197e-06, 1.3763999999999443e-05], 'sourcediff': [0, 1.229099999999761e-05, 7.486000000000992e-06, 1.0014000000002632e-05, 5.611000000002586e-06, 1.5013999999993755e-05, 1.1056000000002342e-05, 1.1861000000001898e-05, 4.375000000000906e-06, 5.8329999999967574e-06, 1.2513999999998193e-05, 5.8200000000036e-06, 2.7079999999971016e-06, 1.4639000000003788e-05, 5.153000000000796e-06, 1.5429999999996835e-05, 1.5417000000003678e-05, 1.1457999999998913e-05, 8.124999999997717e-06, 1.5208000000002664e-05, 1.3819999999997723e-05, 7.013999999999632e-06, 4.457999999998852e-06, 5.7639999999983815e-06, 2.27800000000139e-06, 7.290999999999548e-06, 2.52800000000164e-06, 1.0597000000001078e-05, 1.0014000000002632e-05, 1.1041999999995833e-05, 1.4153000000002858e-05, 8.957999999996413e-06, 6.249999999999312e-06, 1.0222000000004172e-05, 1.3973000000000457e-05, 6.860999999996897e-06, 1.1875000000001468e-05, 1.0221999999997233e-05, 1.2708000000000164e-05, 7.695000000002006e-06, 1.0638999999999788e-05, 1.3111000000003148e-05, 1.5207999999995725e-05, 7.514000000000132e-06, 7.2779999999994516e-06, 1.5222000000002234e-05, 1.2930000000001274e-05, 5.611999999995121e-06, 8.333000000006197e-06, 1.3763999999999443e-05], 'time': [0.038133806, 0.038146097, 0.038153583, 0.038163597, 0.038169208, 0.038184222, 0.038195278, 0.038207139, 0.038211514, 0.038217347, 0.038229861, 0.038235681, 0.038238389, 0.038253028, 0.038258181, 0.038273611, 0.038289028, 0.038300486, 0.038308611, 0.038323819, 0.038337639, 0.038344653, 0.038349111, 0.038354875, 0.038357153, 0.038364444, 0.038366972, 0.038377569, 0.038387583, 0.038398625, 0.038412778, 0.038421736, 0.038427986, 0.038438208, 0.038452181, 0.038459042, 0.038470917, 0.038481139, 0.038493847, 0.038501542, 0.038512181, 0.038525292, 0.0385405, 0.038548014, 0.038555292, 0.038570514, 0.038583444, 0.038589056, 0.038597389, 0.038611153]}</msg>
<status status="PASS" starttime="20201112 10:14:11.593" endtime="20201112 10:14:11.599"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.583" endtime="20201112 10:14:11.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:11.609" level="INFO">${RESULT} = [{'time': 0.038146097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.229099999999761e-05, 'source_diff': 1.229099999999761e-05}, {'time': 0.038163597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:11.602" endtime="20201112 10:14:11.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:11.628" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:11.611" endtime="20201112 10:14:11.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.638" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:11.635" endtime="20201112 10:14:11.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.643" level="INFO">VALUE: [1.229099999999761e-05, 1.0014000000002632e-05, 1.5013999999993755e-05, 1.1861000000001898e-05, 5.8329999999967574e-06, 5.8200000000036e-06, 1.4639000000003788e-05, 1.5429999999996835e-05, 1.1457999999998913e-05, 1.5208000000002664e-05, 7.013999999999632e-06, 5.7639999999983815e-06, 7.290999999999548e-06, 1.0597000000001078e-05, 1.1041999999995833e-05, 8.957999999996413e-06, 1.0222000000004172e-05, 6.860999999996897e-06, 1.0221999999997233e-05, 7.695000000002006e-06, 1.3111000000003148e-05, 7.514000000000132e-06, 1.5222000000002234e-05, 5.611999999995121e-06, 1.3763999999999443e-05]</msg>
<status status="PASS" starttime="20201112 10:14:11.640" endtime="20201112 10:14:11.644"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.629" endtime="20201112 10:14:11.645"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.652" endtime="20201112 10:14:11.654"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:11.660" endtime="20201112 10:14:11.682"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.656" endtime="20201112 10:14:11.683"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.647" endtime="20201112 10:14:11.685"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.126" endtime="20201112 10:14:11.685"></status>
</kw>
<msg timestamp="20201112 10:14:11.686" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.707" endtime="20201112 10:14:11.720"></status>
</kw>
<msg timestamp="20201112 10:14:11.721" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:11.702" endtime="20201112 10:14:11.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.727" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:11.723" endtime="20201112 10:14:11.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.730" endtime="20201112 10:14:11.733"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.695" endtime="20201112 10:14:11.735"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.690" endtime="20201112 10:14:11.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.753" endtime="20201112 10:14:12.065"></status>
</kw>
<msg timestamp="20201112 10:14:12.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037503375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037509208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:11.749" endtime="20201112 10:14:12.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037503375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037509208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:12.071" endtime="20201112 10:14:12.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.084" endtime="20201112 10:14:12.087"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.742" endtime="20201112 10:14:12.089"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.738" endtime="20201112 10:14:12.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.100" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:12.097" endtime="20201112 10:14:12.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.108" level="INFO">VALUE: [{'time': 0.037503375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037509208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.833000000003696e-06, 'source_diff': 5.833000000003696e-06}, {'time': 0.037519639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0430999999998247e-05, 'source_diff': 1.0430999999998247e-05}, {'time': 0.037527125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.037530889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7639999999963814e-06, 'source_diff': 3.7639999999963814e-06}, {'time': 0.037535264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.037542139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.875000000003406e-06, 'source_diff': 6.875000000003406e-06}, {'time': 0.037551306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.166999999997427e-06, 'source_diff': 9.166999999997427e-06}, {'time': 0.037566528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5222000000002234e-05, 'source_diff': 1.5222000000002234e-05}, {'time': 0.037571306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.777999999996951e-06, 'source_diff': 4.777999999996951e-06}, {'time': 0.037586306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000001124e-05, 'source_diff': 1.5000000000001124e-05}, {'time': 0.037596514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0207999999997663e-05, 'source_diff': 1.0207999999997663e-05}, {'time': 0.037606514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0000000000003062e-05, 'source_diff': 1.0000000000003062e-05}, {'time': 0.037615889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.037626097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0207999999997663e-05, 'source_diff': 1.0207999999997663e-05}, {'time': 0.037634028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.931000000002686e-06, 'source_diff': 7.931000000002686e-06}, {'time': 0.03764325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.222000000003172e-06, 'source_diff': 9.222000000003172e-06}, {'time': 0.037656958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3707999999994225e-05, 'source_diff': 1.3707999999994225e-05}, {'time': 0.037668611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1653000000000358e-05, 'source_diff': 1.1653000000000358e-05}, {'time': 0.037678833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0222000000004172e-05, 'source_diff': 1.0222000000004172e-05}, {'time': 0.037693194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4360999999997459e-05, 'source_diff': 1.4360999999997459e-05}, {'time': 0.037700944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.037704444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4999999999965614e-06, 'source_diff': 3.4999999999965614e-06}, {'time': 0.037719875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5431000000003248e-05, 'source_diff': 1.5431000000003248e-05}, {'time': 0.037723403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.037737153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.037745903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.749999999994873e-06, 'source_diff': 8.749999999994873e-06}, {'time': 0.037749444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5410000000027364e-06, 'source_diff': 3.5410000000027364e-06}, {'time': 0.037753194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7499999999968114e-06, 'source_diff': 3.7499999999968114e-06}, {'time': 0.037766319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3125000000002718e-05, 'source_diff': 1.3125000000002718e-05}, {'time': 0.037772986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.667000000001866e-06, 'source_diff': 6.667000000001866e-06}, {'time': 0.03778425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1263999999996943e-05, 'source_diff': 1.1263999999996943e-05}, {'time': 0.037798222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3972000000000984e-05, 'source_diff': 1.3972000000000984e-05}, {'time': 0.037813, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4778000000000013e-05, 'source_diff': 1.4778000000000013e-05}, {'time': 0.037826958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3958000000001414e-05, 'source_diff': 1.3958000000001414e-05}, {'time': 0.037829458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.037836125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.666999999994927e-06, 'source_diff': 6.666999999994927e-06}, {'time': 0.037846556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0431000000005186e-05, 'source_diff': 1.0431000000005186e-05}, {'time': 0.037853625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.068999999998438e-06, 'source_diff': 7.068999999998438e-06}, {'time': 0.037863431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.037876361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2929999999994335e-05, 'source_diff': 1.2929999999994335e-05}, {'time': 0.0378905, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4139000000003288e-05, 'source_diff': 1.4139000000003288e-05}, {'time': 0.037905333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.483299999999882e-05, 'source_diff': 1.483299999999882e-05}, {'time': 0.037910722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.037915931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2089999999990755e-06, 'source_diff': 5.2089999999990755e-06}, {'time': 0.037926139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0207999999997663e-05, 'source_diff': 1.0207999999997663e-05}, {'time': 0.037936764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.037939486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7220000000036104e-06, 'source_diff': 2.7220000000036104e-06}, {'time': 0.037948431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.944999999996317e-06, 'source_diff': 8.944999999996317e-06}, {'time': 0.037960736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2305000000004118e-05, 'source_diff': 1.2305000000004118e-05}]</msg>
<status status="PASS" starttime="20201112 10:14:12.102" endtime="20201112 10:14:12.110"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.092" endtime="20201112 10:14:12.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:12.145" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:14:12.113" endtime="20201112 10:14:12.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.155" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:12.152" endtime="20201112 10:14:12.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.162" level="INFO">VALUE: {'eventsource_diff': [0, 5.833000000003696e-06, 1.0430999999998247e-05, 7.486000000000992e-06, 3.7639999999963814e-06, 4.375000000000906e-06, 6.875000000003406e-06, 9.166999999997427e-06, 1.5222000000002234e-05, 4.777999999996951e-06, 1.5000000000001124e-05, 1.0207999999997663e-05, 1.0000000000003062e-05, 9.374999999998967e-06, 1.0207999999997663e-05, 7.931000000002686e-06, 9.222000000003172e-06, 1.3707999999994225e-05, 1.1653000000000358e-05, 1.0222000000004172e-05, 1.4360999999997459e-05, 7.750000000000812e-06, 3.4999999999965614e-06, 1.5431000000003248e-05, 3.52800000000264e-06, 1.3749999999999873e-05, 8.749999999994873e-06, 3.5410000000027364e-06, 3.7499999999968114e-06, 1.3125000000002718e-05, 6.667000000001866e-06, 1.1263999999996943e-05, 1.3972000000000984e-05, 1.4778000000000013e-05, 1.3958000000001414e-05, 2.5000000000025002e-06, 6.666999999994927e-06, 1.0431000000005186e-05, 7.068999999998438e-06, 9.806000000001092e-06, 1.2929999999994335e-05, 1.4139000000003288e-05, 1.483299999999882e-05, 5.389000000001476e-06, 5.2089999999990755e-06, 1.0207999999997663e-05, 1.0625000000000218e-05, 2.7220000000036104e-06, 8.944999999996317e-06, 1.2305000000004118e-05], 'sourcediff': [0, 5.833000000003696e-06, 1.0430999999998247e-05, 7.486000000000992e-06, 3.7639999999963814e-06, 4.375000000000906e-06, 6.875000000003406e-06, 9.166999999997427e-06, 1.5222000000002234e-05, 4.777999999996951e-06, 1.5000000000001124e-05, 1.0207999999997663e-05, 1.0000000000003062e-05, 9.374999999998967e-06, 1.0207999999997663e-05, 7.931000000002686e-06, 9.222000000003172e-06, 1.3707999999994225e-05, 1.1653000000000358e-05, 1.0222000000004172e-05, 1.4360999999997459e-05, 7.750000000000812e-06, 3.4999999999965614e-06, 1.5431000000003248e-05, 3.52800000000264e-06, 1.3749999999999873e-05, 8.749999999994873e-06, 3.5410000000027364e-06, 3.7499999999968114e-06, 1.3125000000002718e-05, 6.667000000001866e-06, 1.1263999999996943e-05, 1.3972000000000984e-05, 1.4778000000000013e-05, 1.3958000000001414e-05, 2.5000000000025002e-06, 6.666999999994927e-06, 1.0431000000005186e-05, 7.068999999998438e-06, 9.806000000001092e-06, 1.2929999999994335e-05, 1.4139000000003288e-05, 1.483299999999882e-05, 5.389000000001476e-06, 5.2089999999990755e-06, 1.0207999999997663e-05, 1.0625000000000218e-05, 2.7220000000036104e-06, 8.944999999996317e-06, 1.2305000000004118e-05], 'time': [0.037503375, 0.037509208, 0.037519639, 0.037527125, 0.037530889, 0.037535264, 0.037542139, 0.037551306, 0.037566528, 0.037571306, 0.037586306, 0.037596514, 0.037606514, 0.037615889, 0.037626097, 0.037634028, 0.03764325, 0.037656958, 0.037668611, 0.037678833, 0.037693194, 0.037700944, 0.037704444, 0.037719875, 0.037723403, 0.037737153, 0.037745903, 0.037749444, 0.037753194, 0.037766319, 0.037772986, 0.03778425, 0.037798222, 0.037813, 0.037826958, 0.037829458, 0.037836125, 0.037846556, 0.037853625, 0.037863431, 0.037876361, 0.0378905, 0.037905333, 0.037910722, 0.037915931, 0.037926139, 0.037936764, 0.037939486, 0.037948431, 0.037960736]}</msg>
<status status="PASS" starttime="20201112 10:14:12.157" endtime="20201112 10:14:12.163"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.147" endtime="20201112 10:14:12.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:12.174" level="INFO">${RESULT} = [{'time': 0.037509208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.833000000003696e-06, 'source_diff': 5.833000000003696e-06}, {'time': 0.037527125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:12.166" endtime="20201112 10:14:12.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:12.192" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:12.176" endtime="20201112 10:14:12.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.202" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:12.200" endtime="20201112 10:14:12.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.207" level="INFO">VALUE: [5.833000000003696e-06, 7.486000000000992e-06, 4.375000000000906e-06, 9.166999999997427e-06, 4.777999999996951e-06, 1.0207999999997663e-05, 9.374999999998967e-06, 7.931000000002686e-06, 1.3707999999994225e-05, 1.0222000000004172e-05, 7.750000000000812e-06, 1.5431000000003248e-05, 1.3749999999999873e-05, 3.5410000000027364e-06, 1.3125000000002718e-05, 1.1263999999996943e-05, 1.4778000000000013e-05, 2.5000000000025002e-06, 1.0431000000005186e-05, 9.806000000001092e-06, 1.4139000000003288e-05, 5.389000000001476e-06, 1.0207999999997663e-05, 2.7220000000036104e-06, 1.2305000000004118e-05]</msg>
<status status="PASS" starttime="20201112 10:14:12.205" endtime="20201112 10:14:12.208"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.194" endtime="20201112 10:14:12.210"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.216" endtime="20201112 10:14:12.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:12.225" endtime="20201112 10:14:12.246"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.220" endtime="20201112 10:14:12.248"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.212" endtime="20201112 10:14:12.249"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.687" endtime="20201112 10:14:12.250"></status>
</kw>
<msg timestamp="20201112 10:14:12.251" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.272" endtime="20201112 10:14:12.285"></status>
</kw>
<msg timestamp="20201112 10:14:12.286" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:12.267" endtime="20201112 10:14:12.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.293" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:12.288" endtime="20201112 10:14:12.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.295" endtime="20201112 10:14:12.298"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.260" endtime="20201112 10:14:12.300"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.255" endtime="20201112 10:14:12.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.318" endtime="20201112 10:14:12.594"></status>
</kw>
<msg timestamp="20201112 10:14:12.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038012194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038015319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:12.315" endtime="20201112 10:14:12.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038012194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038015319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:12.601" endtime="20201112 10:14:12.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.613" endtime="20201112 10:14:12.617"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.307" endtime="20201112 10:14:12.619"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.303" endtime="20201112 10:14:12.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.629" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:12.627" endtime="20201112 10:14:12.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.637" level="INFO">VALUE: [{'time': 0.038012194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038015319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.038024486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.167000000004366e-06, 'source_diff': 9.167000000004366e-06}, {'time': 0.038037611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3124999999995779e-05, 'source_diff': 1.3124999999995779e-05}, {'time': 0.038050139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2527999999997763e-05, 'source_diff': 1.2527999999997763e-05}, {'time': 0.038058056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.917000000003116e-06, 'source_diff': 7.917000000003116e-06}, {'time': 0.038069083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.102699999999679e-05, 'source_diff': 1.102699999999679e-05}, {'time': 0.03807825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.167000000004366e-06, 'source_diff': 9.167000000004366e-06}, {'time': 0.038088875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.038103681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4805999999999153e-05, 'source_diff': 1.4805999999999153e-05}, {'time': 0.038109292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.038118667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.038122625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.03812825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.038136792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.038140958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.038143458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4999999999955613e-06, 'source_diff': 2.4999999999955613e-06}, {'time': 0.038149097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.038155542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.445000000000756e-06, 'source_diff': 6.445000000000756e-06}, {'time': 0.038162431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.888999999996037e-06, 'source_diff': 6.888999999996037e-06}, {'time': 0.038169708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.276999999999978e-06, 'source_diff': 7.276999999999978e-06}, {'time': 0.038177861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.153000000003796e-06, 'source_diff': 8.153000000003796e-06}, {'time': 0.038183681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.819999999996661e-06, 'source_diff': 5.819999999996661e-06}, {'time': 0.038198889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5208000000002664e-05, 'source_diff': 1.5208000000002664e-05}, {'time': 0.038201181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.29200000000096e-06, 'source_diff': 2.29200000000096e-06}, {'time': 0.038210764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.038225139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}, {'time': 0.038235764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.038248264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2499999999998623e-05, 'source_diff': 1.2499999999998623e-05}, {'time': 0.03825625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.038262431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.038265972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5410000000027364e-06, 'source_diff': 3.5410000000027364e-06}, {'time': 0.038280347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}, {'time': 0.038286389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.041999999997771e-06, 'source_diff': 6.041999999997771e-06}, {'time': 0.038297014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.038306611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.038315361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.038323069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.708000000002102e-06, 'source_diff': 7.708000000002102e-06}, {'time': 0.038334736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1666999999999927e-05, 'source_diff': 1.1666999999999927e-05}, {'time': 0.038345986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999997373e-05, 'source_diff': 1.1249999999997373e-05}, {'time': 0.038353069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0829999999980076e-06, 'source_diff': 7.0829999999980076e-06}, {'time': 0.038359944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.875000000003406e-06, 'source_diff': 6.875000000003406e-06}, {'time': 0.038367917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.973000000001396e-06, 'source_diff': 7.973000000001396e-06}, {'time': 0.038372653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.038387278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4624999999997279e-05, 'source_diff': 1.4624999999997279e-05}, {'time': 0.038398306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1028000000003202e-05, 'source_diff': 1.1028000000003202e-05}, {'time': 0.038412028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3722000000000734e-05, 'source_diff': 1.3722000000000734e-05}, {'time': 0.03841975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.038426417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.666999999994927e-06, 'source_diff': 6.666999999994927e-06}, {'time': 0.038437875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1458000000005852e-05, 'source_diff': 1.1458000000005852e-05}]</msg>
<status status="PASS" starttime="20201112 10:14:12.632" endtime="20201112 10:14:12.640"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.621" endtime="20201112 10:14:12.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:12.673" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:14:12.643" endtime="20201112 10:14:12.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.682" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:12.680" endtime="20201112 10:14:12.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.689" level="INFO">VALUE: {'eventsource_diff': [0, 3.124999999999656e-06, 9.167000000004366e-06, 1.3124999999995779e-05, 1.2527999999997763e-05, 7.917000000003116e-06, 1.102699999999679e-05, 9.167000000004366e-06, 1.0625000000000218e-05, 1.4805999999999153e-05, 5.611000000002586e-06, 9.374999999998967e-06, 3.957999999998352e-06, 5.625000000002156e-06, 8.542000000000272e-06, 4.165999999999892e-06, 2.4999999999955613e-06, 5.639000000001726e-06, 6.445000000000756e-06, 6.888999999996037e-06, 7.276999999999978e-06, 8.153000000003796e-06, 5.819999999996661e-06, 1.5208000000002664e-05, 2.29200000000096e-06, 9.583000000000508e-06, 1.4374999999997029e-05, 1.0625000000000218e-05, 1.2499999999998623e-05, 7.986000000001492e-06, 6.181000000000936e-06, 3.5410000000027364e-06, 1.4374999999997029e-05, 6.041999999997771e-06, 1.0625000000000218e-05, 9.597000000000078e-06, 8.750000000001812e-06, 7.708000000002102e-06, 1.1666999999999927e-05, 1.1249999999997373e-05, 7.0829999999980076e-06, 6.875000000003406e-06, 7.973000000001396e-06, 4.735999999998242e-06, 1.4624999999997279e-05, 1.1028000000003202e-05, 1.3722000000000734e-05, 7.722000000001672e-06, 6.666999999994927e-06, 1.1458000000005852e-05], 'sourcediff': [0, 3.124999999999656e-06, 9.167000000004366e-06, 1.3124999999995779e-05, 1.2527999999997763e-05, 7.917000000003116e-06, 1.102699999999679e-05, 9.167000000004366e-06, 1.0625000000000218e-05, 1.4805999999999153e-05, 5.611000000002586e-06, 9.374999999998967e-06, 3.957999999998352e-06, 5.625000000002156e-06, 8.542000000000272e-06, 4.165999999999892e-06, 2.4999999999955613e-06, 5.639000000001726e-06, 6.445000000000756e-06, 6.888999999996037e-06, 7.276999999999978e-06, 8.153000000003796e-06, 5.819999999996661e-06, 1.5208000000002664e-05, 2.29200000000096e-06, 9.583000000000508e-06, 1.4374999999997029e-05, 1.0625000000000218e-05, 1.2499999999998623e-05, 7.986000000001492e-06, 6.181000000000936e-06, 3.5410000000027364e-06, 1.4374999999997029e-05, 6.041999999997771e-06, 1.0625000000000218e-05, 9.597000000000078e-06, 8.750000000001812e-06, 7.708000000002102e-06, 1.1666999999999927e-05, 1.1249999999997373e-05, 7.0829999999980076e-06, 6.875000000003406e-06, 7.973000000001396e-06, 4.735999999998242e-06, 1.4624999999997279e-05, 1.1028000000003202e-05, 1.3722000000000734e-05, 7.722000000001672e-06, 6.666999999994927e-06, 1.1458000000005852e-05], 'time': [0.038012194, 0.038015319, 0.038024486, 0.038037611, 0.038050139, 0.038058056, 0.038069083, 0.03807825, 0.038088875, 0.038103681, 0.038109292, 0.038118667, 0.038122625, 0.03812825, 0.038136792, 0.038140958, 0.038143458, 0.038149097, 0.038155542, 0.038162431, 0.038169708, 0.038177861, 0.038183681, 0.038198889, 0.038201181, 0.038210764, 0.038225139, 0.038235764, 0.038248264, 0.03825625, 0.038262431, 0.038265972, 0.038280347, 0.038286389, 0.038297014, 0.038306611, 0.038315361, 0.038323069, 0.038334736, 0.038345986, 0.038353069, 0.038359944, 0.038367917, 0.038372653, 0.038387278, 0.038398306, 0.038412028, 0.03841975, 0.038426417, 0.038437875]}</msg>
<status status="PASS" starttime="20201112 10:14:12.684" endtime="20201112 10:14:12.690"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.674" endtime="20201112 10:14:12.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:12.700" level="INFO">${RESULT} = [{'time': 0.038015319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.038037611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:12.693" endtime="20201112 10:14:12.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:12.719" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:12.702" endtime="20201112 10:14:12.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.729" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:12.726" endtime="20201112 10:14:12.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.734" level="INFO">VALUE: [3.124999999999656e-06, 1.3124999999995779e-05, 7.917000000003116e-06, 9.167000000004366e-06, 1.4805999999999153e-05, 9.374999999998967e-06, 5.625000000002156e-06, 4.165999999999892e-06, 5.639000000001726e-06, 6.888999999996037e-06, 8.153000000003796e-06, 1.5208000000002664e-05, 9.583000000000508e-06, 1.0625000000000218e-05, 7.986000000001492e-06, 3.5410000000027364e-06, 6.041999999997771e-06, 9.597000000000078e-06, 7.708000000002102e-06, 1.1249999999997373e-05, 6.875000000003406e-06, 4.735999999998242e-06, 1.1028000000003202e-05, 7.722000000001672e-06, 1.1458000000005852e-05]</msg>
<status status="PASS" starttime="20201112 10:14:12.731" endtime="20201112 10:14:12.735"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.720" endtime="20201112 10:14:12.737"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.743" endtime="20201112 10:14:12.746"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:12.751" endtime="20201112 10:14:12.773"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.747" endtime="20201112 10:14:12.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.738" endtime="20201112 10:14:12.776"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.252" endtime="20201112 10:14:12.777"></status>
</kw>
<msg timestamp="20201112 10:14:12.777" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.798" endtime="20201112 10:14:12.811"></status>
</kw>
<msg timestamp="20201112 10:14:12.812" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:12.793" endtime="20201112 10:14:12.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.818" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:12.814" endtime="20201112 10:14:12.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.820" endtime="20201112 10:14:12.824"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.786" endtime="20201112 10:14:12.825"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.782" endtime="20201112 10:14:12.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.843" endtime="20201112 10:14:13.155"></status>
</kw>
<msg timestamp="20201112 10:14:13.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037635375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037643486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:12.840" endtime="20201112 10:14:13.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037635375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037643486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:13.162" endtime="20201112 10:14:13.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.175" endtime="20201112 10:14:13.179"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.833" endtime="20201112 10:14:13.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.828" endtime="20201112 10:14:13.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.193" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:13.190" endtime="20201112 10:14:13.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.201" level="INFO">VALUE: [{'time': 0.037635375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037643486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.110999999998147e-06, 'source_diff': 8.110999999998147e-06}, {'time': 0.037658514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5028000000000263e-05, 'source_diff': 1.5028000000000263e-05}, {'time': 0.03766725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.037675583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.332999999999258e-06, 'source_diff': 8.332999999999258e-06}, {'time': 0.037687889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2306000000003592e-05, 'source_diff': 1.2306000000003592e-05}, {'time': 0.037692472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.582999999995507e-06, 'source_diff': 4.582999999995507e-06}, {'time': 0.03770375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1278000000003452e-05, 'source_diff': 1.1278000000003452e-05}, {'time': 0.037710625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999996467e-06, 'source_diff': 6.874999999996467e-06}, {'time': 0.037714125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5000000000035003e-06, 'source_diff': 3.5000000000035003e-06}, {'time': 0.037721833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.708000000002102e-06, 'source_diff': 7.708000000002102e-06}, {'time': 0.037735167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3333999999996793e-05, 'source_diff': 1.3333999999996793e-05}, {'time': 0.037745792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.037753514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.037760806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.037768292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.037782667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}, {'time': 0.037790806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.139000000004226e-06, 'source_diff': 8.139000000004226e-06}, {'time': 0.037805861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.505499999999993e-05, 'source_diff': 1.505499999999993e-05}, {'time': 0.037815403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.541999999994333e-06, 'source_diff': 9.541999999994333e-06}, {'time': 0.037826431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1028000000003202e-05, 'source_diff': 1.1028000000003202e-05}, {'time': 0.037840181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.037844347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.037851014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.667000000001866e-06, 'source_diff': 6.667000000001866e-06}, {'time': 0.037865194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4179999999995585e-05, 'source_diff': 1.4179999999995585e-05}, {'time': 0.037871014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8200000000036e-06, 'source_diff': 5.8200000000036e-06}, {'time': 0.037873722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7079999999971016e-06, 'source_diff': 2.7079999999971016e-06}, {'time': 0.037884556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0834000000001232e-05, 'source_diff': 1.0834000000001232e-05}, {'time': 0.037895444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0888000000000564e-05, 'source_diff': 1.0888000000000564e-05}, {'time': 0.037904139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.695000000003006e-06, 'source_diff': 8.695000000003006e-06}, {'time': 0.037914361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0221999999997233e-05, 'source_diff': 1.0221999999997233e-05}, {'time': 0.037920819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.458000000000852e-06, 'source_diff': 6.458000000000852e-06}, {'time': 0.037932694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1875000000001468e-05, 'source_diff': 1.1875000000001468e-05}, {'time': 0.037938944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.037941875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9309999999976855e-06, 'source_diff': 2.9309999999976855e-06}, {'time': 0.037952903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1028000000003202e-05, 'source_diff': 1.1028000000003202e-05}, {'time': 0.037964792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1888999999994099e-05, 'source_diff': 1.1888999999994099e-05}, {'time': 0.037975819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1027000000003728e-05, 'source_diff': 1.1027000000003728e-05}, {'time': 0.037985625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.037993125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.037997694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.568999999995937e-06, 'source_diff': 4.568999999995937e-06}, {'time': 0.038000611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.038013125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2514000000005132e-05, 'source_diff': 1.2514000000005132e-05}, {'time': 0.038023111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.985999999996553e-06, 'source_diff': 9.985999999996553e-06}, {'time': 0.038028736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.038035194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.458000000000852e-06, 'source_diff': 6.458000000000852e-06}, {'time': 0.038039361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.038054167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4805999999999153e-05, 'source_diff': 1.4805999999999153e-05}, {'time': 0.038065847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1680000000000024e-05, 'source_diff': 1.1680000000000024e-05}, {'time': 0.038070222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}]</msg>
<status status="PASS" starttime="20201112 10:14:13.195" endtime="20201112 10:14:13.203"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.184" endtime="20201112 10:14:13.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:13.236" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:14:13.206" endtime="20201112 10:14:13.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.245" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:13.243" endtime="20201112 10:14:13.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.252" level="INFO">VALUE: {'eventsource_diff': [0, 8.110999999998147e-06, 1.5028000000000263e-05, 8.736000000002242e-06, 8.332999999999258e-06, 1.2306000000003592e-05, 4.582999999995507e-06, 1.1278000000003452e-05, 6.874999999996467e-06, 3.5000000000035003e-06, 7.708000000002102e-06, 1.3333999999996793e-05, 1.0625000000000218e-05, 7.722000000001672e-06, 7.2919999999990215e-06, 7.486000000000992e-06, 1.4374999999997029e-05, 8.139000000004226e-06, 1.505499999999993e-05, 9.541999999994333e-06, 1.1028000000003202e-05, 1.3749999999999873e-05, 4.165999999999892e-06, 6.667000000001866e-06, 1.4179999999995585e-05, 5.8200000000036e-06, 2.7079999999971016e-06, 1.0834000000001232e-05, 1.0888000000000564e-05, 8.695000000003006e-06, 1.0221999999997233e-05, 6.458000000000852e-06, 1.1875000000001468e-05, 6.249999999999312e-06, 2.9309999999976855e-06, 1.1028000000003202e-05, 1.1888999999994099e-05, 1.1027000000003728e-05, 9.806000000001092e-06, 7.500000000000562e-06, 4.568999999995937e-06, 2.9169999999981155e-06, 1.2514000000005132e-05, 9.985999999996553e-06, 5.625000000002156e-06, 6.458000000000852e-06, 4.166999999999366e-06, 1.4805999999999153e-05, 1.1680000000000024e-05, 4.375000000000906e-06], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 8.110999999998147e-06, 1.5028000000000263e-05, 8.736000000002242e-06, 8.332999999999258e-06, 1.2306000000003592e-05, 4.582999999995507e-06, 1.1278000000003452e-05, 6.874999999996467e-06, 3.5000000000035003e-06, 7.708000000002102e-06, 1.3333999999996793e-05, 1.0625000000000218e-05, 7.722000000001672e-06, 7.2919999999990215e-06, 7.486000000000992e-06, 1.4374999999997029e-05, 8.139000000004226e-06, 1.505499999999993e-05, 9.541999999994333e-06, 1.1028000000003202e-05, 1.3749999999999873e-05, 4.165999999999892e-06, 6.667000000001866e-06, 1.4179999999995585e-05, 5.8200000000036e-06, 2.7079999999971016e-06, 1.0834000000001232e-05, 1.0888000000000564e-05, 8.695000000003006e-06, 1.0221999999997233e-05, 6.458000000000852e-06, 1.1875000000001468e-05, 6.249999999999312e-06, 2.9309999999976855e-06, 1.1028000000003202e-05, 1.1888999999994099e-05, 1.1027000000003728e-05, 9.806000000001092e-06, 7.500000000000562e-06, 4.568999999995937e-06, 2.9169999999981155e-06, 1.2514000000005132e-05, 9.985999999996553e-06, 5.625000000002156e-06, 6.458000000000852e-06, 4.166999999999366e-06, 1.4805999999999153e-05, 1.1680000000000024e-05, 4.375000000000906e-06], 'time': [0.037635375, 0.037643486, 0.037658514, 0.03766725, 0.037675583, 0.037687889, 0.037692472, 0.03770375, 0.037710625, 0.037714125, 0.037721833, 0.037735167, 0.037745792, 0.037753514, 0.037760806, 0.037768292, 0.037782667, 0.037790806, 0.037805861, 0.037815403, 0.037826431, 0.037840181, 0.037844347, 0.037851014, 0.037865194, 0.037871014, 0.037873722, 0.037884556, 0.037895444, 0.037904139, 0.037914361, 0.037920819, 0.037932694, 0.037938944, 0.037941875, 0.037952903, 0.037964792, 0.037975819, 0.037985625, 0.037993125, 0.037997694, 0.038000611, 0.038013125, 0.038023111, 0.038028736, 0.038035194, 0.038039361, 0.038054167, 0.038065847, 0.038070222]}</msg>
<status status="PASS" starttime="20201112 10:14:13.247" endtime="20201112 10:14:13.253"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.238" endtime="20201112 10:14:13.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:13.264" level="INFO">${RESULT} = [{'time': 0.037643486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.110999999998147e-06, 'source_diff': 8.110999999998147e-06}, {'time': 0.03766725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:14:13.257" endtime="20201112 10:14:13.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:13.282" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:13.266" endtime="20201112 10:14:13.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.292" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:13.290" endtime="20201112 10:14:13.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.297" level="INFO">VALUE: [8.110999999998147e-06, 8.736000000002242e-06, 1.2306000000003592e-05, 1.1278000000003452e-05, 3.5000000000035003e-06, 1.3333999999996793e-05, 7.722000000001672e-06, 7.486000000000992e-06, 8.139000000004226e-06, 9.541999999994333e-06, 1.3749999999999873e-05, 6.667000000001866e-06, 5.8200000000036e-06, 1.0834000000001232e-05, 8.695000000003006e-06, 6.458000000000852e-06, 6.249999999999312e-06, 1.1028000000003202e-05, 1.1027000000003728e-05, 7.500000000000562e-06, 2.9169999999981155e-06, 9.985999999996553e-06, 6.458000000000852e-06, 1.4805999999999153e-05, 4.375000000000906e-06]</msg>
<status status="PASS" starttime="20201112 10:14:13.295" endtime="20201112 10:14:13.299"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.284" endtime="20201112 10:14:13.300"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.306" endtime="20201112 10:14:13.309"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:13.315" endtime="20201112 10:14:13.336"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.310" endtime="20201112 10:14:13.338"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.302" endtime="20201112 10:14:13.339"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.778" endtime="20201112 10:14:13.340"></status>
</kw>
<msg timestamp="20201112 10:14:13.340" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.361" endtime="20201112 10:14:13.374"></status>
</kw>
<msg timestamp="20201112 10:14:13.376" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.357" endtime="20201112 10:14:13.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.382" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.378" endtime="20201112 10:14:13.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.384" endtime="20201112 10:14:13.388"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.349" endtime="20201112 10:14:13.389"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.345" endtime="20201112 10:14:13.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.407" endtime="20201112 10:14:13.721"></status>
</kw>
<msg timestamp="20201112 10:14:13.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037577986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037585083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:13.404" endtime="20201112 10:14:13.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037577986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037585083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:13.728" endtime="20201112 10:14:13.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.741" endtime="20201112 10:14:13.744"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.397" endtime="20201112 10:14:13.746"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.392" endtime="20201112 10:14:13.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.757" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:13.754" endtime="20201112 10:14:13.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.765" level="INFO">VALUE: [{'time': 0.037577986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037585083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0969999999975775e-06, 'source_diff': 7.0969999999975775e-06}, {'time': 0.037594458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.037607792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3334000000003732e-05, 'source_diff': 1.3334000000003732e-05}, {'time': 0.037615903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.110999999998147e-06, 'source_diff': 8.110999999998147e-06}, {'time': 0.037630278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4375000000003968e-05, 'source_diff': 1.4375000000003968e-05}, {'time': 0.037639028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.749999999994873e-06, 'source_diff': 8.749999999994873e-06}, {'time': 0.037647986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.958000000003352e-06, 'source_diff': 8.958000000003352e-06}, {'time': 0.037652597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.037660708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.110999999998147e-06, 'source_diff': 8.110999999998147e-06}, {'time': 0.037671333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.037676542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2089999999990755e-06, 'source_diff': 5.2089999999990755e-06}, {'time': 0.037685306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.037694486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.179999999997523e-06, 'source_diff': 9.179999999997523e-06}, {'time': 0.037699889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.037710083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0193999999998093e-05, 'source_diff': 1.0193999999998093e-05}, {'time': 0.037713208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.037721778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.569999999999411e-06, 'source_diff': 8.569999999999411e-06}, {'time': 0.037734875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3097000000003578e-05, 'source_diff': 1.3097000000003578e-05}, {'time': 0.037747403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2527999999997763e-05, 'source_diff': 1.2527999999997763e-05}, {'time': 0.037758833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1429999999999774e-05, 'source_diff': 1.1429999999999774e-05}, {'time': 0.037767583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.037781153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3569999999997473e-05, 'source_diff': 1.3569999999997473e-05}, {'time': 0.037789681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.037795306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.037802208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.9019999999961335e-06, 'source_diff': 6.9019999999961335e-06}, {'time': 0.037807389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.037819056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1666999999999927e-05, 'source_diff': 1.1666999999999927e-05}, {'time': 0.037826375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3190000000056266e-06, 'source_diff': 7.3190000000056266e-06}, {'time': 0.037830931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.555999999995841e-06, 'source_diff': 4.555999999995841e-06}, {'time': 0.037833431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.037845306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1875000000001468e-05, 'source_diff': 1.1875000000001468e-05}, {'time': 0.037854264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.957999999996413e-06, 'source_diff': 8.957999999996413e-06}, {'time': 0.037867389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3125000000002718e-05, 'source_diff': 1.3125000000002718e-05}, {'time': 0.037879264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1875000000001468e-05, 'source_diff': 1.1875000000001468e-05}, {'time': 0.037888014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.749999999994873e-06, 'source_diff': 8.749999999994873e-06}, {'time': 0.037890931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9170000000050544e-06, 'source_diff': 2.9170000000050544e-06}, {'time': 0.037898639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.707999999995163e-06, 'source_diff': 7.707999999995163e-06}, {'time': 0.037914083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5444000000003344e-05, 'source_diff': 1.5444000000003344e-05}, {'time': 0.037919708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.037922611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.037924958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.037932639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680999999995497e-06, 'source_diff': 7.680999999995497e-06}, {'time': 0.037944278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1639000000000788e-05, 'source_diff': 1.1639000000000788e-05}, {'time': 0.037953861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.037956375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.037959278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.037972403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3125000000002718e-05, 'source_diff': 1.3125000000002718e-05}, {'time': 0.037976597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.037989069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2471999999999483e-05, 'source_diff': 1.2471999999999483e-05}]</msg>
<status status="PASS" starttime="20201112 10:14:13.759" endtime="20201112 10:14:13.780"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.748" endtime="20201112 10:14:13.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:13.815" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:14:13.783" endtime="20201112 10:14:13.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.824" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:13.822" endtime="20201112 10:14:13.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.831" level="INFO">VALUE: {'eventsource_diff': [0, 7.0969999999975775e-06, 9.374999999998967e-06, 1.3334000000003732e-05, 8.110999999998147e-06, 1.4375000000003968e-05, 8.749999999994873e-06, 8.958000000003352e-06, 4.611000000001586e-06, 8.110999999998147e-06, 1.0625000000000218e-05, 5.2089999999990755e-06, 8.764000000001382e-06, 9.179999999997523e-06, 5.403000000001046e-06, 1.0193999999998093e-05, 3.124999999999656e-06, 8.569999999999411e-06, 1.3097000000003578e-05, 1.2527999999997763e-05, 1.1429999999999774e-05, 8.750000000001812e-06, 1.3569999999997473e-05, 8.528000000000702e-06, 5.625000000002156e-06, 6.9019999999961335e-06, 5.180999999999936e-06, 1.1666999999999927e-05, 7.3190000000056266e-06, 4.555999999995841e-06, 2.5000000000025002e-06, 1.1875000000001468e-05, 8.957999999996413e-06, 1.3125000000002718e-05, 1.1875000000001468e-05, 8.749999999994873e-06, 2.9170000000050544e-06, 7.707999999995163e-06, 1.5444000000003344e-05, 5.625000000002156e-06, 2.9029999999985456e-06, 2.346999999999766e-06, 7.680999999995497e-06, 1.1639000000000788e-05, 9.583000000000508e-06, 2.51400000000207e-06, 2.9029999999985456e-06, 1.3125000000002718e-05, 4.193999999999032e-06, 1.2471999999999483e-05], 'sourcediff': [0, 7.0969999999975775e-06, 9.374999999998967e-06, 1.3334000000003732e-05, 8.110999999998147e-06, 1.4375000000003968e-05, 8.749999999994873e-06, 8.958000000003352e-06, 4.611000000001586e-06, 8.110999999998147e-06, 1.0625000000000218e-05, 5.2089999999990755e-06, 8.764000000001382e-06, 9.179999999997523e-06, 5.403000000001046e-06, 1.0193999999998093e-05, 3.124999999999656e-06, 8.569999999999411e-06, 1.3097000000003578e-05, 1.2527999999997763e-05, 1.1429999999999774e-05, 8.750000000001812e-06, 1.3569999999997473e-05, 8.528000000000702e-06, 5.625000000002156e-06, 6.9019999999961335e-06, 5.180999999999936e-06, 1.1666999999999927e-05, 7.3190000000056266e-06, 4.555999999995841e-06, 2.5000000000025002e-06, 1.1875000000001468e-05, 8.957999999996413e-06, 1.3125000000002718e-05, 1.1875000000001468e-05, 8.749999999994873e-06, 2.9170000000050544e-06, 7.707999999995163e-06, 1.5444000000003344e-05, 5.625000000002156e-06, 2.9029999999985456e-06, 2.346999999999766e-06, 7.680999999995497e-06, 1.1639000000000788e-05, 9.583000000000508e-06, 2.51400000000207e-06, 2.9029999999985456e-06, 1.3125000000002718e-05, 4.193999999999032e-06, 1.2471999999999483e-05], 'time': [0.037577986, 0.037585083, 0.037594458, 0.037607792, 0.037615903, 0.037630278, 0.037639028, 0.037647986, 0.037652597, 0.037660708, 0.037671333, 0.037676542, 0.037685306, 0.037694486, 0.037699889, 0.037710083, 0.037713208, 0.037721778, 0.037734875, 0.037747403, 0.037758833, 0.037767583, 0.037781153, 0.037789681, 0.037795306, 0.037802208, 0.037807389, 0.037819056, 0.037826375, 0.037830931, 0.037833431, 0.037845306, 0.037854264, 0.037867389, 0.037879264, 0.037888014, 0.037890931, 0.037898639, 0.037914083, 0.037919708, 0.037922611, 0.037924958, 0.037932639, 0.037944278, 0.037953861, 0.037956375, 0.037959278, 0.037972403, 0.037976597, 0.037989069]}</msg>
<status status="PASS" starttime="20201112 10:14:13.826" endtime="20201112 10:14:13.832"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.817" endtime="20201112 10:14:13.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:13.843" level="INFO">${RESULT} = [{'time': 0.037585083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0969999999975775e-06, 'source_diff': 7.0969999999975775e-06}, {'time': 0.037607792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:13.835" endtime="20201112 10:14:13.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:13.861" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:13.845" endtime="20201112 10:14:13.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.872" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:13.869" endtime="20201112 10:14:13.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.876" level="INFO">VALUE: [7.0969999999975775e-06, 1.3334000000003732e-05, 1.4375000000003968e-05, 8.958000000003352e-06, 8.110999999998147e-06, 5.2089999999990755e-06, 9.179999999997523e-06, 1.0193999999998093e-05, 8.569999999999411e-06, 1.2527999999997763e-05, 8.750000000001812e-06, 8.528000000000702e-06, 6.9019999999961335e-06, 1.1666999999999927e-05, 4.555999999995841e-06, 1.1875000000001468e-05, 1.3125000000002718e-05, 8.749999999994873e-06, 7.707999999995163e-06, 5.625000000002156e-06, 2.346999999999766e-06, 1.1639000000000788e-05, 2.51400000000207e-06, 1.3125000000002718e-05, 1.2471999999999483e-05]</msg>
<status status="PASS" starttime="20201112 10:14:13.874" endtime="20201112 10:14:13.878"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.863" endtime="20201112 10:14:13.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.886" endtime="20201112 10:14:13.888"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:13.894" endtime="20201112 10:14:13.915"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.889" endtime="20201112 10:14:13.917"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.881" endtime="20201112 10:14:13.918"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.342" endtime="20201112 10:14:13.919"></status>
</kw>
<msg timestamp="20201112 10:14:13.920" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.941" endtime="20201112 10:14:13.954"></status>
</kw>
<msg timestamp="20201112 10:14:13.955" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.936" endtime="20201112 10:14:13.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.961" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.957" endtime="20201112 10:14:13.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.963" endtime="20201112 10:14:13.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.929" endtime="20201112 10:14:13.968"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.924" endtime="20201112 10:14:13.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.986" endtime="20201112 10:14:14.302"></status>
</kw>
<msg timestamp="20201112 10:14:14.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037795264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037810264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:13.983" endtime="20201112 10:14:14.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037795264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037810264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:14.308" endtime="20201112 10:14:14.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.321" endtime="20201112 10:14:14.324"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.976" endtime="20201112 10:14:14.326"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.971" endtime="20201112 10:14:14.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.337" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:14.335" endtime="20201112 10:14:14.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.345" level="INFO">VALUE: [{'time': 0.037795264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037810264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000001124e-05, 'source_diff': 1.5000000000001124e-05}, {'time': 0.037821764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1499999999997623e-05, 'source_diff': 1.1499999999997623e-05}, {'time': 0.037837139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.537499999999803e-05, 'source_diff': 1.537499999999803e-05}, {'time': 0.037846514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.037855056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.037870264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5208000000002664e-05, 'source_diff': 1.5208000000002664e-05}, {'time': 0.037879875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.037885264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.037887972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7079999999971016e-06, 'source_diff': 2.7079999999971016e-06}, {'time': 0.037896514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.037905514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.000000000002062e-06, 'source_diff': 9.000000000002062e-06}, {'time': 0.037910056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999996271e-06, 'source_diff': 4.541999999996271e-06}, {'time': 0.037920903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.037934028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3125000000002718e-05, 'source_diff': 1.3125000000002718e-05}, {'time': 0.037937569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5409999999957975e-06, 'source_diff': 3.5409999999957975e-06}, {'time': 0.037948403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0834000000001232e-05, 'source_diff': 1.0834000000001232e-05}, {'time': 0.037955917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.037969861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3944000000001844e-05, 'source_diff': 1.3944000000001844e-05}, {'time': 0.037985111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5250000000001374e-05, 'source_diff': 1.5250000000001374e-05}, {'time': 0.038000486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.537499999999803e-05, 'source_diff': 1.537499999999803e-05}, {'time': 0.038015708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5222000000002234e-05, 'source_diff': 1.5222000000002234e-05}, {'time': 0.038028819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3110999999996209e-05, 'source_diff': 1.3110999999996209e-05}, {'time': 0.038036944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.125000000004656e-06, 'source_diff': 8.125000000004656e-06}, {'time': 0.038045083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.138999999997287e-06, 'source_diff': 8.138999999997287e-06}, {'time': 0.038058639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3555999999997903e-05, 'source_diff': 1.3555999999997903e-05}, {'time': 0.038071125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2485999999999053e-05, 'source_diff': 1.2485999999999053e-05}, {'time': 0.038082583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1458000000005852e-05, 'source_diff': 1.1458000000005852e-05}, {'time': 0.038096125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3541999999998333e-05, 'source_diff': 1.3541999999998333e-05}, {'time': 0.038105292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.166999999997427e-06, 'source_diff': 9.166999999997427e-06}, {'time': 0.038112167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.875000000003406e-06, 'source_diff': 6.875000000003406e-06}, {'time': 0.038118417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.038129681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1263999999996943e-05, 'source_diff': 1.1263999999996943e-05}, {'time': 0.038138431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.038147583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.151999999998384e-06, 'source_diff': 9.151999999998384e-06}, {'time': 0.038149875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.29200000000096e-06, 'source_diff': 2.29200000000096e-06}, {'time': 0.038152583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7079999999971016e-06, 'source_diff': 2.7079999999971016e-06}, {'time': 0.038155722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1390000000061646e-06, 'source_diff': 3.1390000000061646e-06}, {'time': 0.038160292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.569999999995411e-06, 'source_diff': 4.569999999995411e-06}, {'time': 0.038174681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4389000000003538e-05, 'source_diff': 1.4389000000003538e-05}, {'time': 0.038181556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999996467e-06, 'source_diff': 6.874999999996467e-06}, {'time': 0.038184056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.038197597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.354099999999886e-05, 'source_diff': 1.354099999999886e-05}, {'time': 0.038207389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.792000000001522e-06, 'source_diff': 9.792000000001522e-06}, {'time': 0.038209889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4999999999955613e-06, 'source_diff': 2.4999999999955613e-06}, {'time': 0.038212194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.305000000001056e-06, 'source_diff': 2.305000000001056e-06}, {'time': 0.038226347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4153000000002858e-05, 'source_diff': 1.4153000000002858e-05}, {'time': 0.038239681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3333999999996793e-05, 'source_diff': 1.3333999999996793e-05}, {'time': 0.038248431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.038255722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.290999999999548e-06, 'source_diff': 7.290999999999548e-06}]</msg>
<status status="PASS" starttime="20201112 10:14:14.339" endtime="20201112 10:14:14.347"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.329" endtime="20201112 10:14:14.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:14.380" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:14:14.350" endtime="20201112 10:14:14.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.389" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:14.387" endtime="20201112 10:14:14.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.396" level="INFO">VALUE: {'eventsource_diff': [0, 1.5000000000001124e-05, 1.1499999999997623e-05, 1.537499999999803e-05, 9.374999999998967e-06, 8.542000000000272e-06, 1.5208000000002664e-05, 9.610999999999648e-06, 5.389000000001476e-06, 2.7079999999971016e-06, 8.542000000000272e-06, 9.000000000002062e-06, 4.541999999996271e-06, 1.0847000000001328e-05, 1.3125000000002718e-05, 3.5409999999957975e-06, 1.0834000000001232e-05, 7.514000000000132e-06, 1.3944000000001844e-05, 1.5250000000001374e-05, 1.537499999999803e-05, 1.5222000000002234e-05, 1.3110999999996209e-05, 8.125000000004656e-06, 8.138999999997287e-06, 1.3555999999997903e-05, 1.2485999999999053e-05, 1.1458000000005852e-05, 1.3541999999998333e-05, 9.166999999997427e-06, 6.875000000003406e-06, 6.249999999999312e-06, 1.1263999999996943e-05, 8.750000000001812e-06, 9.151999999998384e-06, 2.29200000000096e-06, 2.7079999999971016e-06, 3.1390000000061646e-06, 4.569999999995411e-06, 1.4389000000003538e-05, 6.874999999996467e-06, 2.5000000000025002e-06, 1.354099999999886e-05, 9.792000000001522e-06, 2.4999999999955613e-06, 2.305000000001056e-06, 1.4153000000002858e-05, 1.3333999999996793e-05, 8.750000000001812e-06, 7.290999999999548e-06], 'sourcediff': [0, 1.5000000000001124e-05, 1.1499999999997623e-05, 1.537499999999803e-05, 9.374999999998967e-06, 8.542000000000272e-06, 1.5208000000002664e-05, 9.610999999999648e-06, 5.389000000001476e-06, 2.7079999999971016e-06, 8.542000000000272e-06, 9.000000000002062e-06, 4.541999999996271e-06, 1.0847000000001328e-05, 1.3125000000002718e-05, 3.5409999999957975e-06, 1.0834000000001232e-05, 7.514000000000132e-06, 1.3944000000001844e-05, 1.5250000000001374e-05, 1.537499999999803e-05, 1.5222000000002234e-05, 1.3110999999996209e-05, 8.125000000004656e-06, 8.138999999997287e-06, 1.3555999999997903e-05, 1.2485999999999053e-05, 1.1458000000005852e-05, 1.3541999999998333e-05, 9.166999999997427e-06, 6.875000000003406e-06, 6.249999999999312e-06, 1.1263999999996943e-05, 8.750000000001812e-06, 9.151999999998384e-06, 2.29200000000096e-06, 2.7079999999971016e-06, 3.1390000000061646e-06, 4.569999999995411e-06, 1.4389000000003538e-05, 6.874999999996467e-06, 2.5000000000025002e-06, 1.354099999999886e-05, 9.792000000001522e-06, 2.4999999999955613e-06, 2.305000000001056e-06, 1.4153000000002858e-05, 1.3333999999996793e-05, 8.750000000001812e-06, 7.290999999999548e-06], 'time': [0.037795264, 0.037810264, 0.037821764, 0.037837139, 0.037846514, 0.037855056, 0.037870264, 0.037879875, 0.037885264, 0.037887972, 0.037896514, 0.037905514, 0.037910056, 0.037920903, 0.037934028, 0.037937569, 0.037948403, 0.037955917, 0.037969861, 0.037985111, 0.038000486, 0.038015708, 0.038028819, 0.038036944, 0.038045083, 0.038058639, 0.038071125, 0.038082583, 0.038096125, 0.038105292, 0.038112167, 0.038118417, 0.038129681, 0.038138431, 0.038147583, 0.038149875, 0.038152583, 0.038155722, 0.038160292, 0.038174681, 0.038181556, 0.038184056, 0.038197597, 0.038207389, 0.038209889, 0.038212194, 0.038226347, 0.038239681, 0.038248431, 0.038255722]}</msg>
<status status="PASS" starttime="20201112 10:14:14.392" endtime="20201112 10:14:14.398"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.382" endtime="20201112 10:14:14.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:14.408" level="INFO">${RESULT} = [{'time': 0.037810264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000001124e-05, 'source_diff': 1.5000000000001124e-05}, {'time': 0.037837139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:14.401" endtime="20201112 10:14:14.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:14.426" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:14.410" endtime="20201112 10:14:14.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.437" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:14.434" endtime="20201112 10:14:14.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.442" level="INFO">VALUE: [1.5000000000001124e-05, 1.537499999999803e-05, 8.542000000000272e-06, 9.610999999999648e-06, 2.7079999999971016e-06, 9.000000000002062e-06, 1.0847000000001328e-05, 3.5409999999957975e-06, 7.514000000000132e-06, 1.5250000000001374e-05, 1.5222000000002234e-05, 8.125000000004656e-06, 1.3555999999997903e-05, 1.1458000000005852e-05, 9.166999999997427e-06, 6.249999999999312e-06, 8.750000000001812e-06, 2.29200000000096e-06, 3.1390000000061646e-06, 1.4389000000003538e-05, 2.5000000000025002e-06, 9.792000000001522e-06, 2.305000000001056e-06, 1.3333999999996793e-05, 7.290999999999548e-06]</msg>
<status status="PASS" starttime="20201112 10:14:14.439" endtime="20201112 10:14:14.443"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.428" endtime="20201112 10:14:14.444"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.451" endtime="20201112 10:14:14.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:14.459" endtime="20201112 10:14:14.480"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.455" endtime="20201112 10:14:14.482"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.446" endtime="20201112 10:14:14.484"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.921" endtime="20201112 10:14:14.484"></status>
</kw>
<msg timestamp="20201112 10:14:14.485" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.506" endtime="20201112 10:14:14.519"></status>
</kw>
<msg timestamp="20201112 10:14:14.520" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:14.501" endtime="20201112 10:14:14.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.526" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:14.522" endtime="20201112 10:14:14.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.529" endtime="20201112 10:14:14.532"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.494" endtime="20201112 10:14:14.534"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.489" endtime="20201112 10:14:14.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.552" endtime="20201112 10:14:14.867"></status>
</kw>
<msg timestamp="20201112 10:14:14.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037652083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037662722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:14.548" endtime="20201112 10:14:14.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037652083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037662722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:14.874" endtime="20201112 10:14:14.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.886" endtime="20201112 10:14:14.890"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.541" endtime="20201112 10:14:14.892"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.537" endtime="20201112 10:14:14.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.902" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:14:14.900" endtime="20201112 10:14:14.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.910" level="INFO">VALUE: [{'time': 0.037652083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037662722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.037676681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3958999999993948e-05, 'source_diff': 1.3958999999993948e-05}, {'time': 0.037688153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1472000000005422e-05, 'source_diff': 1.1472000000005422e-05}, {'time': 0.037696889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.735999999995303e-06, 'source_diff': 8.735999999995303e-06}, {'time': 0.037702514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.037716903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4389000000003538e-05, 'source_diff': 1.4389000000003538e-05}, {'time': 0.037731903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999994185e-05, 'source_diff': 1.4999999999994185e-05}, {'time': 0.037736944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0410000000042365e-06, 'source_diff': 5.0410000000042365e-06}, {'time': 0.037739611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.037744181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.57000000000235e-06, 'source_diff': 4.57000000000235e-06}, {'time': 0.037758556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}, {'time': 0.037764597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.040999999998298e-06, 'source_diff': 6.040999999998298e-06}, {'time': 0.037777514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2917000000001178e-05, 'source_diff': 1.2917000000001178e-05}, {'time': 0.037785431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.917000000003116e-06, 'source_diff': 7.917000000003116e-06}, {'time': 0.037790847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.416000000001142e-06, 'source_diff': 5.416000000001142e-06}, {'time': 0.037795431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.583999999994981e-06, 'source_diff': 4.583999999994981e-06}, {'time': 0.037797931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.037805444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.513000000000658e-06, 'source_diff': 7.513000000000658e-06}, {'time': 0.037814, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.037820444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.444000000001282e-06, 'source_diff': 6.444000000001282e-06}, {'time': 0.037835653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5208999999995199e-05, 'source_diff': 1.5208999999995199e-05}, {'time': 0.037837944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2910000000014863e-06, 'source_diff': 2.2910000000014863e-06}, {'time': 0.037848597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0652999999999357e-05, 'source_diff': 1.0652999999999357e-05}, {'time': 0.037851069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4720000000033604e-06, 'source_diff': 2.4720000000033604e-06}, {'time': 0.037865028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3959000000000887e-05, 'source_diff': 1.3959000000000887e-05}, {'time': 0.037868361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.333000000001196e-06, 'source_diff': 3.333000000001196e-06}, {'time': 0.037880236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1874999999994529e-05, 'source_diff': 1.1874999999994529e-05}, {'time': 0.037885444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.037888431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.987000000002904e-06, 'source_diff': 2.987000000002904e-06}, {'time': 0.037902764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.433299999999832e-05, 'source_diff': 1.433299999999832e-05}, {'time': 0.037906069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3050000000020563e-06, 'source_diff': 3.3050000000020563e-06}, {'time': 0.037914611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.037925444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0833000000001758e-05, 'source_diff': 1.0833000000001758e-05}, {'time': 0.037928792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3480000000002397e-06, 'source_diff': 3.3480000000002397e-06}, {'time': 0.037932125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3329999999942572e-06, 'source_diff': 3.3329999999942572e-06}, {'time': 0.03794525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3125000000002718e-05, 'source_diff': 1.3125000000002718e-05}, {'time': 0.037948375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.037958583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0207999999997663e-05, 'source_diff': 1.0207999999997663e-05}, {'time': 0.037972764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4181000000001998e-05, 'source_diff': 1.4181000000001998e-05}, {'time': 0.037978583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8190000000041264e-06, 'source_diff': 5.8190000000041264e-06}, {'time': 0.037987958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.037996306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.347999999998301e-06, 'source_diff': 8.347999999998301e-06}, {'time': 0.038002972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.666000000002392e-06, 'source_diff': 6.666000000002392e-06}, {'time': 0.038009833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.860999999996897e-06, 'source_diff': 6.860999999996897e-06}, {'time': 0.038018167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.333999999998731e-06, 'source_diff': 8.333999999998731e-06}, {'time': 0.038025458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.290999999999548e-06, 'source_diff': 7.290999999999548e-06}, {'time': 0.038037958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2499999999998623e-05, 'source_diff': 1.2499999999998623e-05}, {'time': 0.03804525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.29200000000596e-06, 'source_diff': 7.29200000000596e-06}, {'time': 0.038051097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.846999999996327e-06, 'source_diff': 5.846999999996327e-06}]</msg>
<status status="PASS" starttime="20201112 10:14:14.905" endtime="20201112 10:14:14.913"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.894" endtime="20201112 10:14:14.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:14:14.945" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:14:14.916" endtime="20201112 10:14:14.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.955" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:14:14.952" endtime="20201112 10:14:14.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.962" level="INFO">VALUE: {'eventsource_diff': [0, 1.0638999999999788e-05, 1.3958999999993948e-05, 1.1472000000005422e-05, 8.735999999995303e-06, 5.625000000002156e-06, 1.4389000000003538e-05, 1.4999999999994185e-05, 5.0410000000042365e-06, 2.6669999999978655e-06, 4.57000000000235e-06, 1.4374999999997029e-05, 6.040999999998298e-06, 1.2917000000001178e-05, 7.917000000003116e-06, 5.416000000001142e-06, 4.583999999994981e-06, 2.5000000000025002e-06, 7.513000000000658e-06, 8.555999999999842e-06, 6.444000000001282e-06, 1.5208999999995199e-05, 2.2910000000014863e-06, 1.0652999999999357e-05, 2.4720000000033604e-06, 1.3959000000000887e-05, 3.333000000001196e-06, 1.1874999999994529e-05, 5.207999999999602e-06, 2.987000000002904e-06, 1.433299999999832e-05, 3.3050000000020563e-06, 8.542000000000272e-06, 1.0833000000001758e-05, 3.3480000000002397e-06, 3.3329999999942572e-06, 1.3125000000002718e-05, 3.124999999999656e-06, 1.0207999999997663e-05, 1.4181000000001998e-05, 5.8190000000041264e-06, 9.374999999998967e-06, 8.347999999998301e-06, 6.666000000002392e-06, 6.860999999996897e-06, 8.333999999998731e-06, 7.290999999999548e-06, 1.2499999999998623e-05, 7.29200000000596e-06, 5.846999999996327e-06], 'sourcediff': [0, 1.0638999999999788e-05, 1.3958999999993948e-05, 1.1472000000005422e-05, 8.735999999995303e-06, 5.625000000002156e-06, 1.4389000000003538e-05, 1.4999999999994185e-05, 5.0410000000042365e-06, 2.6669999999978655e-06, 4.57000000000235e-06, 1.4374999999997029e-05, 6.040999999998298e-06, 1.2917000000001178e-05, 7.917000000003116e-06, 5.416000000001142e-06, 4.583999999994981e-06, 2.5000000000025002e-06, 7.513000000000658e-06, 8.555999999999842e-06, 6.444000000001282e-06, 1.5208999999995199e-05, 2.2910000000014863e-06, 1.0652999999999357e-05, 2.4720000000033604e-06, 1.3959000000000887e-05, 3.333000000001196e-06, 1.1874999999994529e-05, 5.207999999999602e-06, 2.987000000002904e-06, 1.433299999999832e-05, 3.3050000000020563e-06, 8.542000000000272e-06, 1.0833000000001758e-05, 3.3480000000002397e-06, 3.3329999999942572e-06, 1.3125000000002718e-05, 3.124999999999656e-06, 1.0207999999997663e-05, 1.4181000000001998e-05, 5.8190000000041264e-06, 9.374999999998967e-06, 8.347999999998301e-06, 6.666000000002392e-06, 6.860999999996897e-06, 8.333999999998731e-06, 7.290999999999548e-06, 1.2499999999998623e-05, 7.29200000000596e-06, 5.846999999996327e-06], 'time': [0.037652083, 0.037662722, 0.037676681, 0.037688153, 0.037696889, 0.037702514, 0.037716903, 0.037731903, 0.037736944, 0.037739611, 0.037744181, 0.037758556, 0.037764597, 0.037777514, 0.037785431, 0.037790847, 0.037795431, 0.037797931, 0.037805444, 0.037814, 0.037820444, 0.037835653, 0.037837944, 0.037848597, 0.037851069, 0.037865028, 0.037868361, 0.037880236, 0.037885444, 0.037888431, 0.037902764, 0.037906069, 0.037914611, 0.037925444, 0.037928792, 0.037932125, 0.03794525, 0.037948375, 0.037958583, 0.037972764, 0.037978583, 0.037987958, 0.037996306, 0.038002972, 0.038009833, 0.038018167, 0.038025458, 0.038037958, 0.03804525, 0.038051097]}</msg>
<status status="PASS" starttime="20201112 10:14:14.957" endtime="20201112 10:14:14.963"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.947" endtime="20201112 10:14:14.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:14.973" level="INFO">${RESULT} = [{'time': 0.037662722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.037688153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:14.966" endtime="20201112 10:14:14.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:14.992" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:14.975" endtime="20201112 10:14:14.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.002" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:14:14.999" endtime="20201112 10:14:15.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.007" level="INFO">VALUE: [1.0638999999999788e-05, 1.1472000000005422e-05, 5.625000000002156e-06, 1.4999999999994185e-05, 2.6669999999978655e-06, 1.4374999999997029e-05, 1.2917000000001178e-05, 5.416000000001142e-06, 2.5000000000025002e-06, 8.555999999999842e-06, 1.5208999999995199e-05, 1.0652999999999357e-05, 1.3959000000000887e-05, 1.1874999999994529e-05, 2.987000000002904e-06, 3.3050000000020563e-06, 1.0833000000001758e-05, 3.3329999999942572e-06, 3.124999999999656e-06, 1.4181000000001998e-05, 9.374999999998967e-06, 6.666000000002392e-06, 8.333999999998731e-06, 1.2499999999998623e-05, 5.846999999996327e-06]</msg>
<status status="PASS" starttime="20201112 10:14:15.004" endtime="20201112 10:14:15.008"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.993" endtime="20201112 10:14:15.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.016" endtime="20201112 10:14:15.018"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:15.024" endtime="20201112 10:14:15.046"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.020" endtime="20201112 10:14:15.047"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.011" endtime="20201112 10:14:15.049"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.486" endtime="20201112 10:14:15.049"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.815" endtime="20201112 10:14:15.050"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:15.060" endtime="20201112 10:14:15.082"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.056" endtime="20201112 10:14:15.084"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.053" endtime="20201112 10:14:15.084"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:03.617" endtime="20201112 10:14:15.085" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:15.103" endtime="20201112 10:14:15.124"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.099" endtime="20201112 10:14:15.126"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.160" endtime="20201112 10:14:15.185"></status>
</kw>
<msg timestamp="20201112 10:14:15.186" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.157" endtime="20201112 10:14:15.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.193" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.188" endtime="20201112 10:14:15.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.199" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:15.195" endtime="20201112 10:14:15.200"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:15.150" endtime="20201112 10:14:15.202"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:15.144" endtime="20201112 10:14:15.203"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.141" endtime="20201112 10:14:15.204"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:15.212" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:15.210" endtime="20201112 10:14:15.213"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.206" endtime="20201112 10:14:15.213"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.139" endtime="20201112 10:14:15.213"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.137" endtime="20201112 10:14:15.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.215" endtime="20201112 10:14:15.218"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.134" endtime="20201112 10:14:15.220"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.127" endtime="20201112 10:14:15.222"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.096" endtime="20201112 10:14:15.222"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 10:14:15.227" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.248" endtime="20201112 10:14:15.263"></status>
</kw>
<msg timestamp="20201112 10:14:15.265" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.244" endtime="20201112 10:14:15.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.271" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.267" endtime="20201112 10:14:15.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.273" endtime="20201112 10:14:15.277"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.236" endtime="20201112 10:14:15.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.232" endtime="20201112 10:14:15.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.298" endtime="20201112 10:14:15.646"></status>
</kw>
<msg timestamp="20201112 10:14:15.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137780694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.137782319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:15.295" endtime="20201112 10:14:15.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137780694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.137782319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:15.656" endtime="20201112 10:14:15.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.674" endtime="20201112 10:14:15.678"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.288" endtime="20201112 10:14:15.680"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.281" endtime="20201112 10:14:15.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:15.692" level="INFO">${RESULT} = [{'time': 0.137782319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.624999999977339e-06, 'source_diff': 1.624999999977339e-06}, {'time': 0.137786792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:15.683" endtime="20201112 10:14:15.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:15.724" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:15.694" endtime="20201112 10:14:15.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.734" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:15.732" endtime="20201112 10:14:15.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.740" level="INFO">VALUE: [1.624999999977339e-06, 1.6250000000050946e-06, 1.6250000000050946e-06, 1.6250000000050946e-06, 1.6250000000050946e-06, 1.6250000000050946e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999903566e-06, 1.5970000000198326e-06, 1.6250000000050946e-06, 1.6250000000050946e-06, 1.6670000000107432e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6949999999960053e-06, 1.6530000000181122e-06, 1.6250000000050946e-06, 1.6670000000107432e-06, 1.6250000000050946e-06, 1.5979999999915506e-06, 1.6250000000050946e-06, 1.6529999999903566e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6670000000107432e-06, 1.6250000000050946e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6529999999903566e-06, 1.6389999999977256e-06, 1.6110000000124636e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6950000000237608e-06]</msg>
<status status="PASS" starttime="20201112 10:14:15.737" endtime="20201112 10:14:15.741"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.726" endtime="20201112 10:14:15.742"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.748" endtime="20201112 10:14:15.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:15.757" endtime="20201112 10:14:15.778"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.752" endtime="20201112 10:14:15.780"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.744" endtime="20201112 10:14:15.781"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.228" endtime="20201112 10:14:15.782"></status>
</kw>
<msg timestamp="20201112 10:14:15.783" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.803" endtime="20201112 10:14:15.816"></status>
</kw>
<msg timestamp="20201112 10:14:15.816" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.799" endtime="20201112 10:14:15.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.819" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.817" endtime="20201112 10:14:15.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.820" endtime="20201112 10:14:15.822"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.792" endtime="20201112 10:14:15.823"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.788" endtime="20201112 10:14:15.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.831" endtime="20201112 10:14:16.117"></status>
</kw>
<msg timestamp="20201112 10:14:16.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03797825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037979889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:15.830" endtime="20201112 10:14:16.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03797825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037979889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:16.122" endtime="20201112 10:14:16.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.130" endtime="20201112 10:14:16.132"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.826" endtime="20201112 10:14:16.133"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.824" endtime="20201112 10:14:16.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:16.138" level="INFO">${RESULT} = [{'time': 0.037979889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6390000000046645e-06, 'source_diff': 1.6390000000046645e-06}, {'time': 0.037993583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:16.134" endtime="20201112 10:14:16.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:16.152" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:16.139" endtime="20201112 10:14:16.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.157" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:16.156" endtime="20201112 10:14:16.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.159" level="INFO">VALUE: [1.6390000000046645e-06, 1.6939999999965316e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1.6670000000038043e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6380000000051909e-06, 1.6109999999985858e-06, 1.6810000000033742e-06, 1.6529999999972955e-06, 1.5969999999990159e-06, 1.6250000000050946e-06, 1.6530000000042344e-06, 1.5970000000059548e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6669999999968654e-06, 1.6519999999978219e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.5699999999993497e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6250000000050946e-06, 1.5979999999984895e-06, 1.6390000000046645e-06, 1.6669999999968654e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6380000000051909e-06, 1.637999999998252e-06, 1.6250000000050946e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6250000000050946e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201112 10:14:16.158" endtime="20201112 10:14:16.160"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.153" endtime="20201112 10:14:16.160"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.163" endtime="20201112 10:14:16.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:16.168" endtime="20201112 10:14:16.187"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.166" endtime="20201112 10:14:16.188"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.161" endtime="20201112 10:14:16.189"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.784" endtime="20201112 10:14:16.189"></status>
</kw>
<msg timestamp="20201112 10:14:16.189" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.198" endtime="20201112 10:14:16.211"></status>
</kw>
<msg timestamp="20201112 10:14:16.211" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:16.197" endtime="20201112 10:14:16.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.214" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:16.212" endtime="20201112 10:14:16.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.215" endtime="20201112 10:14:16.217"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.193" endtime="20201112 10:14:16.218"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.191" endtime="20201112 10:14:16.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.236" endtime="20201112 10:14:16.576"></status>
</kw>
<msg timestamp="20201112 10:14:16.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021515292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021516931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:16.233" endtime="20201112 10:14:16.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021515292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021516931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:16.585" endtime="20201112 10:14:16.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.604" endtime="20201112 10:14:16.608"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.226" endtime="20201112 10:14:16.609"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.221" endtime="20201112 10:14:16.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:16.621" level="INFO">${RESULT} = [{'time': 0.021516931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.021533292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:16.612" endtime="20201112 10:14:16.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:16.652" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:16.623" endtime="20201112 10:14:16.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.662" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:16.660" endtime="20201112 10:14:16.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.667" level="INFO">VALUE: [1.639000000001195e-06, 1.6389999999977256e-06, 1.5559999999997798e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.5969999999990159e-06, 1.6119999999980594e-06, 1.582999999999446e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.6809999999999048e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6380000000017214e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.5969999999990159e-06, 1.6389999999977256e-06, 1.5410000000007362e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.637999999998252e-06, 1.6250000000016251e-06, 1.6809999999999048e-06, 1.6249999999981557e-06, 1.6250000000016251e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6109999999985858e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.707999999999571e-06, 1.6250000000016251e-06]</msg>
<status status="PASS" starttime="20201112 10:14:16.664" endtime="20201112 10:14:16.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.654" endtime="20201112 10:14:16.671"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.677" endtime="20201112 10:14:16.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:16.685" endtime="20201112 10:14:16.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.681" endtime="20201112 10:14:16.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.672" endtime="20201112 10:14:16.710"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.190" endtime="20201112 10:14:16.711"></status>
</kw>
<msg timestamp="20201112 10:14:16.711" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.731" endtime="20201112 10:14:16.747"></status>
</kw>
<msg timestamp="20201112 10:14:16.748" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:16.727" endtime="20201112 10:14:16.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.754" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:16.750" endtime="20201112 10:14:16.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.756" endtime="20201112 10:14:16.760"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.720" endtime="20201112 10:14:16.762"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.716" endtime="20201112 10:14:16.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.780" endtime="20201112 10:14:17.126"></status>
</kw>
<msg timestamp="20201112 10:14:17.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037962431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037964069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:16.776" endtime="20201112 10:14:17.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037962431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037964069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:17.135" endtime="20201112 10:14:17.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.154" endtime="20201112 10:14:17.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.769" endtime="20201112 10:14:17.159"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.764" endtime="20201112 10:14:17.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:17.171" level="INFO">${RESULT} = [{'time': 0.037964069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6380000000051909e-06, 'source_diff': 1.6380000000051909e-06}, {'time': 0.037967917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:17.162" endtime="20201112 10:14:17.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:17.203" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:17.173" endtime="20201112 10:14:17.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.213" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:17.211" endtime="20201112 10:14:17.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.219" level="INFO">VALUE: [1.6380000000051909e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6809999999964353e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.5839999999989196e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6520000000047608e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.5550000000003061e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6529999999972955e-06, 1.5410000000007362e-06, 1.5969999999990159e-06, 1.6519999999978219e-06, 1.6530000000042344e-06, 1.5969999999990159e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6669999999968654e-06, 1.6390000000046645e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.5840000000058585e-06, 1.5969999999990159e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201112 10:14:17.215" endtime="20201112 10:14:17.220"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.205" endtime="20201112 10:14:17.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.228" endtime="20201112 10:14:17.231"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:17.236" endtime="20201112 10:14:17.258"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.232" endtime="20201112 10:14:17.260"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.224" endtime="20201112 10:14:17.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.712" endtime="20201112 10:14:17.262"></status>
</kw>
<msg timestamp="20201112 10:14:17.262" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.282" endtime="20201112 10:14:17.297"></status>
</kw>
<msg timestamp="20201112 10:14:17.298" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:17.278" endtime="20201112 10:14:17.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.304" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:17.300" endtime="20201112 10:14:17.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.307" endtime="20201112 10:14:17.311"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.271" endtime="20201112 10:14:17.313"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.267" endtime="20201112 10:14:17.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.331" endtime="20201112 10:14:17.678"></status>
</kw>
<msg timestamp="20201112 10:14:17.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037383694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037385375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:17.328" endtime="20201112 10:14:17.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037383694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037385375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:17.688" endtime="20201112 10:14:17.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.706" endtime="20201112 10:14:17.710"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.320" endtime="20201112 10:14:17.712"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.315" endtime="20201112 10:14:17.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:17.724" level="INFO">${RESULT} = [{'time': 0.037385375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999964353e-06, 'source_diff': 1.6809999999964353e-06}, {'time': 0.037393542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:17.715" endtime="20201112 10:14:17.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:17.758" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:17.726" endtime="20201112 10:14:17.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.768" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:17.765" endtime="20201112 10:14:17.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.773" level="INFO">VALUE: [1.6809999999964353e-06, 1.5420000000002099e-06, 1.6799999999969617e-06, 1.6390000000046645e-06, 1.6109999999985858e-06, 1.6669999999968654e-06, 1.6109999999985858e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.568999999999876e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6109999999985858e-06, 1.6390000000046645e-06, 1.6119999999980594e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.6800000000039006e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6250000000050946e-06, 1.6529999999972955e-06, 1.6119999999980594e-06, 1.6670000000038043e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.582999999999446e-06, 1.6249999999981557e-06, 1.637999999998252e-06]</msg>
<status status="PASS" starttime="20201112 10:14:17.770" endtime="20201112 10:14:17.775"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.759" endtime="20201112 10:14:17.777"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.783" endtime="20201112 10:14:17.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:17.791" endtime="20201112 10:14:17.813"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.787" endtime="20201112 10:14:17.815"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.778" endtime="20201112 10:14:17.816"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.263" endtime="20201112 10:14:17.817"></status>
</kw>
<msg timestamp="20201112 10:14:17.817" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.837" endtime="20201112 10:14:17.851"></status>
</kw>
<msg timestamp="20201112 10:14:17.853" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:17.833" endtime="20201112 10:14:17.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.858" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:17.855" endtime="20201112 10:14:17.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.861" endtime="20201112 10:14:17.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.826" endtime="20201112 10:14:17.866"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.822" endtime="20201112 10:14:17.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.884" endtime="20201112 10:14:18.229"></status>
</kw>
<msg timestamp="20201112 10:14:18.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037389833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037391472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:17.881" endtime="20201112 10:14:18.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037389833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037391472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:18.238" endtime="20201112 10:14:18.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.257" endtime="20201112 10:14:18.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.873" endtime="20201112 10:14:18.263"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.869" endtime="20201112 10:14:18.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:18.275" level="INFO">${RESULT} = [{'time': 0.037391472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6390000000046645e-06, 'source_diff': 1.6390000000046645e-06}, {'time': 0.037405764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:18.266" endtime="20201112 10:14:18.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:18.308" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:18.277" endtime="20201112 10:14:18.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.318" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:18.316" endtime="20201112 10:14:18.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.323" level="INFO">VALUE: [1.6390000000046645e-06, 1.5699999999993497e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6250000000050946e-06, 1.6109999999985858e-06, 1.6670000000038043e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.6119999999980594e-06, 1.6390000000046645e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.5410000000007362e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6119999999980594e-06, 1.6249999999981557e-06, 1.6800000000039006e-06, 1.6109999999985858e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.5979999999984895e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.6390000000046645e-06, 1.637999999998252e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6249999999981557e-06]</msg>
<status status="PASS" starttime="20201112 10:14:18.320" endtime="20201112 10:14:18.325"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.310" endtime="20201112 10:14:18.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.333" endtime="20201112 10:14:18.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:18.342" endtime="20201112 10:14:18.364"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.337" endtime="20201112 10:14:18.366"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.329" endtime="20201112 10:14:18.367"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.818" endtime="20201112 10:14:18.368"></status>
</kw>
<msg timestamp="20201112 10:14:18.368" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.389" endtime="20201112 10:14:18.405"></status>
</kw>
<msg timestamp="20201112 10:14:18.406" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:18.386" endtime="20201112 10:14:18.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.413" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:18.408" endtime="20201112 10:14:18.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.415" endtime="20201112 10:14:18.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.378" endtime="20201112 10:14:18.420"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.373" endtime="20201112 10:14:18.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.439" endtime="20201112 10:14:18.780"></status>
</kw>
<msg timestamp="20201112 10:14:18.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039592694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039594361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:18.435" endtime="20201112 10:14:18.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039592694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039594361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:18.789" endtime="20201112 10:14:18.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.808" endtime="20201112 10:14:18.812"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.428" endtime="20201112 10:14:18.814"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.423" endtime="20201112 10:14:18.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:18.826" level="INFO">${RESULT} = [{'time': 0.039594361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000038043e-06, 'source_diff': 1.6670000000038043e-06}, {'time': 0.039598389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:18.817" endtime="20201112 10:14:18.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:18.858" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:18.828" endtime="20201112 10:14:18.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.870" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:18.867" endtime="20201112 10:14:18.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.875" level="INFO">VALUE: [1.6670000000038043e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6110000000055247e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6110000000055247e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.637999999998252e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6659999999973918e-06, 1.5969999999990159e-06, 1.5839999999989196e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.5969999999990159e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6519999999978219e-06, 1.6250000000050946e-06, 1.6519999999978219e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6250000000050946e-06, 1.6250000000050946e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6250000000050946e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.5839999999989196e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.5830000000063849e-06]</msg>
<status status="PASS" starttime="20201112 10:14:18.872" endtime="20201112 10:14:18.942"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.860" endtime="20201112 10:14:18.944"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.951" endtime="20201112 10:14:18.954"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:18.960" endtime="20201112 10:14:18.982"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.955" endtime="20201112 10:14:18.984"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.946" endtime="20201112 10:14:18.986"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.370" endtime="20201112 10:14:18.986"></status>
</kw>
<msg timestamp="20201112 10:14:18.987" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.008" endtime="20201112 10:14:19.024"></status>
</kw>
<msg timestamp="20201112 10:14:19.025" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:19.005" endtime="20201112 10:14:19.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.032" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:19.027" endtime="20201112 10:14:19.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.034" endtime="20201112 10:14:19.038"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.997" endtime="20201112 10:14:19.040"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.992" endtime="20201112 10:14:19.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.059" endtime="20201112 10:14:19.423"></status>
</kw>
<msg timestamp="20201112 10:14:19.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040533736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040535361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:19.056" endtime="20201112 10:14:19.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040533736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040535361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:19.432" endtime="20201112 10:14:19.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.452" endtime="20201112 10:14:19.455"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.048" endtime="20201112 10:14:19.456"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.043" endtime="20201112 10:14:19.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:19.462" level="INFO">${RESULT} = [{'time': 0.040535361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.040540056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:19.458" endtime="20201112 10:14:19.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:19.476" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:19.463" endtime="20201112 10:14:19.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.481" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:19.480" endtime="20201112 10:14:19.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.484" level="INFO">VALUE: [1.6249999999981557e-06, 1.6119999999980594e-06, 1.6389999999977256e-06, 1.6519999999978219e-06, 1.6250000000050946e-06, 1.582999999999446e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6109999999985858e-06, 1.6529999999972955e-06, 1.6119999999980594e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6380000000051909e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6119999999980594e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6670000000038043e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.5700000000062886e-06, 1.6800000000039006e-06, 1.6109999999985858e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6530000000042344e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201112 10:14:19.482" endtime="20201112 10:14:19.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.477" endtime="20201112 10:14:19.486"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.489" endtime="20201112 10:14:19.490"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:19.493" endtime="20201112 10:14:19.512"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.491" endtime="20201112 10:14:19.513"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.486" endtime="20201112 10:14:19.513"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.988" endtime="20201112 10:14:19.514"></status>
</kw>
<msg timestamp="20201112 10:14:19.514" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.523" endtime="20201112 10:14:19.534"></status>
</kw>
<msg timestamp="20201112 10:14:19.535" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:19.522" endtime="20201112 10:14:19.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.538" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:19.536" endtime="20201112 10:14:19.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.539" endtime="20201112 10:14:19.541"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.518" endtime="20201112 10:14:19.542"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.516" endtime="20201112 10:14:19.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.550" endtime="20201112 10:14:19.879"></status>
</kw>
<msg timestamp="20201112 10:14:19.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021677903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021679542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:19.548" endtime="20201112 10:14:19.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021677903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021679542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:19.889" endtime="20201112 10:14:19.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.908" endtime="20201112 10:14:19.911"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.545" endtime="20201112 10:14:19.913"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.543" endtime="20201112 10:14:19.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:19.925" level="INFO">${RESULT} = [{'time': 0.021679542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.021686931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:19.916" endtime="20201112 10:14:19.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:19.958" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:19.927" endtime="20201112 10:14:19.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.968" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:19.966" endtime="20201112 10:14:19.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.973" level="INFO">VALUE: [1.639000000001195e-06, 1.6119999999980594e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.584000000002389e-06, 1.6529999999972955e-06, 1.6250000000016251e-06, 1.5839999999989196e-06, 1.6249999999981557e-06, 1.6809999999999048e-06, 1.6389999999977256e-06, 1.5550000000003061e-06, 1.6109999999985858e-06, 1.6800000000004311e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.6120000000015289e-06, 1.6670000000003349e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6949999999994747e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6670000000003349e-06, 1.6389999999977256e-06, 1.6249999999981557e-06]</msg>
<status status="PASS" starttime="20201112 10:14:19.970" endtime="20201112 10:14:19.975"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.960" endtime="20201112 10:14:19.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.983" endtime="20201112 10:14:19.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:19.992" endtime="20201112 10:14:20.014"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.988" endtime="20201112 10:14:20.016"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.978" endtime="20201112 10:14:20.017"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.514" endtime="20201112 10:14:20.018"></status>
</kw>
<msg timestamp="20201112 10:14:20.018" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.038" endtime="20201112 10:14:20.053"></status>
</kw>
<msg timestamp="20201112 10:14:20.054" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:20.034" endtime="20201112 10:14:20.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.060" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:20.056" endtime="20201112 10:14:20.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.062" endtime="20201112 10:14:20.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.027" endtime="20201112 10:14:20.068"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.023" endtime="20201112 10:14:20.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.085" endtime="20201112 10:14:20.419"></status>
</kw>
<msg timestamp="20201112 10:14:20.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037374125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037375764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:20.082" endtime="20201112 10:14:20.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037374125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037375764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:20.429" endtime="20201112 10:14:20.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.448" endtime="20201112 10:14:20.452"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.075" endtime="20201112 10:14:20.454"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.070" endtime="20201112 10:14:20.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:20.466" level="INFO">${RESULT} = [{'time': 0.037375764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.037381042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:20.457" endtime="20201112 10:14:20.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:20.497" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:20.468" endtime="20201112 10:14:20.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.507" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:20.505" endtime="20201112 10:14:20.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.512" level="INFO">VALUE: [1.6389999999977256e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.5410000000007362e-06, 1.6119999999980594e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6520000000047608e-06, 1.6390000000046645e-06, 1.637999999998252e-06, 1.6250000000050946e-06, 1.6390000000046645e-06, 1.6250000000050946e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6519999999978219e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6659999999973918e-06, 1.5970000000059548e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6810000000033742e-06, 1.568999999999876e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.582999999999446e-06, 1.6110000000055247e-06, 1.6670000000038043e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6110000000055247e-06, 1.6529999999972955e-06, 1.6519999999978219e-06]</msg>
<status status="PASS" starttime="20201112 10:14:20.509" endtime="20201112 10:14:20.514"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.499" endtime="20201112 10:14:20.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.522" endtime="20201112 10:14:20.524"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:20.530" endtime="20201112 10:14:20.552"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.526" endtime="20201112 10:14:20.553"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.517" endtime="20201112 10:14:20.555"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.019" endtime="20201112 10:14:20.556"></status>
</kw>
<msg timestamp="20201112 10:14:20.556" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.577" endtime="20201112 10:14:20.592"></status>
</kw>
<msg timestamp="20201112 10:14:20.593" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:20.574" endtime="20201112 10:14:20.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.599" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:20.595" endtime="20201112 10:14:20.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.602" endtime="20201112 10:14:20.605"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.567" endtime="20201112 10:14:20.607"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.560" endtime="20201112 10:14:20.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.625" endtime="20201112 10:14:20.959"></status>
</kw>
<msg timestamp="20201112 10:14:20.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038812806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038814417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:20.622" endtime="20201112 10:14:20.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038812806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038814417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:20.969" endtime="20201112 10:14:20.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.988" endtime="20201112 10:14:20.992"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.614" endtime="20201112 10:14:20.993"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.610" endtime="20201112 10:14:20.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:21.005" level="INFO">${RESULT} = [{'time': 0.038814417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.038822639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:20.996" endtime="20201112 10:14:21.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:21.036" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:21.007" endtime="20201112 10:14:21.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.046" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:21.044" endtime="20201112 10:14:21.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.052" level="INFO">VALUE: [1.6109999999985858e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.5969999999990159e-06, 1.6949999999960053e-06, 1.5969999999990159e-06, 1.6250000000050946e-06, 1.6109999999985858e-06, 1.6530000000042344e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6119999999980594e-06, 1.6949999999960053e-06, 1.6519999999978219e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.5969999999990159e-06, 1.6389999999977256e-06, 1.5969999999990159e-06, 1.582999999999446e-06, 1.6390000000046645e-06, 1.6250000000050946e-06, 1.6250000000050946e-06, 1.6109999999985858e-06, 1.6250000000050946e-06, 1.6939999999965316e-06, 1.6250000000050946e-06, 1.6950000000029442e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.568999999999876e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6249999999981557e-06]</msg>
<status status="PASS" starttime="20201112 10:14:21.049" endtime="20201112 10:14:21.053"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.038" endtime="20201112 10:14:21.055"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.061" endtime="20201112 10:14:21.064"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:21.069" endtime="20201112 10:14:21.091"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.065" endtime="20201112 10:14:21.093"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.057" endtime="20201112 10:14:21.094"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.557" endtime="20201112 10:14:21.095"></status>
</kw>
<msg timestamp="20201112 10:14:21.095" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.115" endtime="20201112 10:14:21.131"></status>
</kw>
<msg timestamp="20201112 10:14:21.132" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.111" endtime="20201112 10:14:21.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.139" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.135" endtime="20201112 10:14:21.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.141" endtime="20201112 10:14:21.145"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.104" endtime="20201112 10:14:21.146"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.100" endtime="20201112 10:14:21.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.164" endtime="20201112 10:14:21.508"></status>
</kw>
<msg timestamp="20201112 10:14:21.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038644722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038646347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:21.161" endtime="20201112 10:14:21.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038644722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038646347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:21.518" endtime="20201112 10:14:21.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.537" endtime="20201112 10:14:21.541"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.154" endtime="20201112 10:14:21.542"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.149" endtime="20201112 10:14:21.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:21.555" level="INFO">${RESULT} = [{'time': 0.038646347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.038659569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:21.545" endtime="20201112 10:14:21.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:21.586" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:21.557" endtime="20201112 10:14:21.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.596" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:21.593" endtime="20201112 10:14:21.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.601" level="INFO">VALUE: [1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6109999999985858e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6520000000047608e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6110000000055247e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6110000000055247e-06, 1.6529999999972955e-06, 1.6939999999965316e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6949999999960053e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6110000000055247e-06, 1.6249999999981557e-06, 1.6660000000043307e-06]</msg>
<status status="PASS" starttime="20201112 10:14:21.598" endtime="20201112 10:14:21.603"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.587" endtime="20201112 10:14:21.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.611" endtime="20201112 10:14:21.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:21.619" endtime="20201112 10:14:21.640"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.614" endtime="20201112 10:14:21.642"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.606" endtime="20201112 10:14:21.643"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.096" endtime="20201112 10:14:21.644"></status>
</kw>
<msg timestamp="20201112 10:14:21.645" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.664" endtime="20201112 10:14:21.679"></status>
</kw>
<msg timestamp="20201112 10:14:21.680" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.661" endtime="20201112 10:14:21.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.686" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.682" endtime="20201112 10:14:21.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.688" endtime="20201112 10:14:21.692"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.654" endtime="20201112 10:14:21.694"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.649" endtime="20201112 10:14:21.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.713" endtime="20201112 10:14:22.047"></status>
</kw>
<msg timestamp="20201112 10:14:22.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037008806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037010444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:21.710" endtime="20201112 10:14:22.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037008806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037010444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:22.056" endtime="20201112 10:14:22.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.075" endtime="20201112 10:14:22.079"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.701" endtime="20201112 10:14:22.080"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.696" endtime="20201112 10:14:22.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:22.092" level="INFO">${RESULT} = [{'time': 0.037010444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6380000000051909e-06, 'source_diff': 1.6380000000051909e-06}, {'time': 0.037016167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:22.083" endtime="20201112 10:14:22.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:22.125" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:22.094" endtime="20201112 10:14:22.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.135" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:22.133" endtime="20201112 10:14:22.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.141" level="INFO">VALUE: [1.6380000000051909e-06, 1.6250000000050946e-06, 1.709000000002514e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6250000000050946e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6119999999980594e-06, 1.6249999999981557e-06, 1.6119999999980594e-06, 1.6390000000046645e-06, 1.6110000000055247e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.582999999999446e-06, 1.5969999999990159e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6799999999969617e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.5970000000059548e-06, 1.6940000000034705e-06, 1.6389999999977256e-06, 1.5969999999990159e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.5970000000059548e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6249999999981557e-06]</msg>
<status status="PASS" starttime="20201112 10:14:22.137" endtime="20201112 10:14:22.142"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.127" endtime="20201112 10:14:22.144"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.150" endtime="20201112 10:14:22.153"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:22.158" endtime="20201112 10:14:22.179"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.154" endtime="20201112 10:14:22.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.145" endtime="20201112 10:14:22.183"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.646" endtime="20201112 10:14:22.183"></status>
</kw>
<msg timestamp="20201112 10:14:22.184" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.203" endtime="20201112 10:14:22.218"></status>
</kw>
<msg timestamp="20201112 10:14:22.219" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:22.200" endtime="20201112 10:14:22.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.226" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:22.222" endtime="20201112 10:14:22.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.228" endtime="20201112 10:14:22.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.193" endtime="20201112 10:14:22.233"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.188" endtime="20201112 10:14:22.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.251" endtime="20201112 10:14:22.585"></status>
</kw>
<msg timestamp="20201112 10:14:22.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037373819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037375389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:22.247" endtime="20201112 10:14:22.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037373819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037375389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:22.595" endtime="20201112 10:14:22.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.613" endtime="20201112 10:14:22.617"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.240" endtime="20201112 10:14:22.619"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.236" endtime="20201112 10:14:22.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:22.631" level="INFO">${RESULT} = [{'time': 0.037375389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.037379264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:22.622" endtime="20201112 10:14:22.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:22.662" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:22.633" endtime="20201112 10:14:22.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.672" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:22.669" endtime="20201112 10:14:22.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.677" level="INFO">VALUE: [1.5699999999993497e-06, 1.6250000000050946e-06, 1.5979999999984895e-06, 1.5979999999984895e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6380000000051909e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.582999999999446e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6250000000050946e-06, 1.7089999999955752e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6119999999980594e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.5980000000054284e-06, 1.6109999999985858e-06, 1.6390000000046645e-06, 1.6110000000055247e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6670000000038043e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6249999999981557e-06]</msg>
<status status="PASS" starttime="20201112 10:14:22.674" endtime="20201112 10:14:22.678"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.663" endtime="20201112 10:14:22.680"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.686" endtime="20201112 10:14:22.689"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:22.695" endtime="20201112 10:14:22.716"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.690" endtime="20201112 10:14:22.718"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.682" endtime="20201112 10:14:22.719"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.185" endtime="20201112 10:14:22.720"></status>
</kw>
<msg timestamp="20201112 10:14:22.720" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.740" endtime="20201112 10:14:22.754"></status>
</kw>
<msg timestamp="20201112 10:14:22.756" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:22.737" endtime="20201112 10:14:22.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.762" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:22.758" endtime="20201112 10:14:22.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.764" endtime="20201112 10:14:22.768"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.729" endtime="20201112 10:14:22.769"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.725" endtime="20201112 10:14:22.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.787" endtime="20201112 10:14:23.087"></status>
</kw>
<msg timestamp="20201112 10:14:23.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037164486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037166111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:22.784" endtime="20201112 10:14:23.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037164486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037166111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:23.097" endtime="20201112 10:14:23.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.116" endtime="20201112 10:14:23.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.777" endtime="20201112 10:14:23.121"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.772" endtime="20201112 10:14:23.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:23.133" level="INFO">${RESULT} = [{'time': 0.037166111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000050946e-06, 'source_diff': 1.6250000000050946e-06}, {'time': 0.037179569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:23.124" endtime="20201112 10:14:23.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:23.164" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:23.135" endtime="20201112 10:14:23.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.174" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:23.172" endtime="20201112 10:14:23.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.180" level="INFO">VALUE: [1.6250000000050946e-06, 1.6380000000051909e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.6950000000029442e-06, 1.6380000000051909e-06, 1.582999999999446e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6940000000034705e-06, 1.6389999999977256e-06, 1.7220000000026103e-06, 1.6390000000046645e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6809999999964353e-06, 1.582999999999446e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6800000000039006e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6940000000034705e-06, 1.6110000000055247e-06, 1.637999999998252e-06]</msg>
<status status="PASS" starttime="20201112 10:14:23.177" endtime="20201112 10:14:23.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.166" endtime="20201112 10:14:23.183"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.189" endtime="20201112 10:14:23.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:23.197" endtime="20201112 10:14:23.219"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.193" endtime="20201112 10:14:23.220"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.185" endtime="20201112 10:14:23.222"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.721" endtime="20201112 10:14:23.223"></status>
</kw>
<msg timestamp="20201112 10:14:23.223" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.243" endtime="20201112 10:14:23.257"></status>
</kw>
<msg timestamp="20201112 10:14:23.259" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:23.239" endtime="20201112 10:14:23.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.265" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:23.261" endtime="20201112 10:14:23.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.267" endtime="20201112 10:14:23.271"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.232" endtime="20201112 10:14:23.272"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.227" endtime="20201112 10:14:23.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.290" endtime="20201112 10:14:23.623"></status>
</kw>
<msg timestamp="20201112 10:14:23.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037134625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037136264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:23.287" endtime="20201112 10:14:23.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037134625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037136264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:23.632" endtime="20201112 10:14:23.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.651" endtime="20201112 10:14:23.656"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.280" endtime="20201112 10:14:23.658"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.275" endtime="20201112 10:14:23.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:23.670" level="INFO">${RESULT} = [{'time': 0.037136264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6390000000046645e-06, 'source_diff': 1.6390000000046645e-06}, {'time': 0.037145319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:23.661" endtime="20201112 10:14:23.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:23.701" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:23.672" endtime="20201112 10:14:23.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.711" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:23.709" endtime="20201112 10:14:23.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.716" level="INFO">VALUE: [1.6390000000046645e-06, 1.6250000000050946e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1.6120000000049983e-06, 1.6389999999977256e-06, 1.5839999999989196e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6380000000051909e-06, 1.6390000000046645e-06, 1.6939999999965316e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6519999999978219e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6940000000034705e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.568999999999876e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6249999999981557e-06]</msg>
<status status="PASS" starttime="20201112 10:14:23.713" endtime="20201112 10:14:23.718"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.703" endtime="20201112 10:14:23.719"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.726" endtime="20201112 10:14:23.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:23.734" endtime="20201112 10:14:23.755"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.730" endtime="20201112 10:14:23.757"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.721" endtime="20201112 10:14:23.759"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.224" endtime="20201112 10:14:23.759"></status>
</kw>
<msg timestamp="20201112 10:14:23.760" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.780" endtime="20201112 10:14:23.795"></status>
</kw>
<msg timestamp="20201112 10:14:23.796" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:23.776" endtime="20201112 10:14:23.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.802" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:23.798" endtime="20201112 10:14:23.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.804" endtime="20201112 10:14:23.808"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.769" endtime="20201112 10:14:23.809"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.764" endtime="20201112 10:14:23.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.827" endtime="20201112 10:14:24.162"></status>
</kw>
<msg timestamp="20201112 10:14:24.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037433333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037434958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:23.824" endtime="20201112 10:14:24.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037433333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037434958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:24.171" endtime="20201112 10:14:24.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.190" endtime="20201112 10:14:24.195"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.817" endtime="20201112 10:14:24.197"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.812" endtime="20201112 10:14:24.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:24.209" level="INFO">${RESULT} = [{'time': 0.037434958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.037440681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:24.200" endtime="20201112 10:14:24.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:24.242" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:24.211" endtime="20201112 10:14:24.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.252" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:24.250" endtime="20201112 10:14:24.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.258" level="INFO">VALUE: [1.6249999999981557e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.582999999999446e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.6529999999972955e-06, 1.6669999999968654e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.5550000000003061e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6939999999965316e-06, 1.5969999999990159e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6390000000046645e-06, 1.6530000000042344e-06, 1.6390000000046645e-06, 1.6109999999985858e-06, 1.5839999999989196e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6659999999973918e-06, 1.6529999999972955e-06, 1.6109999999985858e-06, 1.6110000000055247e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6530000000042344e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.5969999999990159e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.568999999999876e-06, 1.6389999999977256e-06, 1.6530000000042344e-06]</msg>
<status status="PASS" starttime="20201112 10:14:24.255" endtime="20201112 10:14:24.259"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.244" endtime="20201112 10:14:24.261"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.267" endtime="20201112 10:14:24.270"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:24.275" endtime="20201112 10:14:24.297"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.271" endtime="20201112 10:14:24.299"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.263" endtime="20201112 10:14:24.300"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.761" endtime="20201112 10:14:24.301"></status>
</kw>
<msg timestamp="20201112 10:14:24.301" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.321" endtime="20201112 10:14:24.336"></status>
</kw>
<msg timestamp="20201112 10:14:24.337" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:24.317" endtime="20201112 10:14:24.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.343" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:24.339" endtime="20201112 10:14:24.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.345" endtime="20201112 10:14:24.349"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.310" endtime="20201112 10:14:24.351"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.306" endtime="20201112 10:14:24.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.368" endtime="20201112 10:14:24.701"></status>
</kw>
<msg timestamp="20201112 10:14:24.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037140875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0371425, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:24.365" endtime="20201112 10:14:24.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037140875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0371425, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:24.710" endtime="20201112 10:14:24.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.729" endtime="20201112 10:14:24.733"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.358" endtime="20201112 10:14:24.734"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.353" endtime="20201112 10:14:24.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:24.746" level="INFO">${RESULT} = [{'time': 0.0371425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000050946e-06, 'source_diff': 1.6250000000050946e-06}, {'time': 0.037151361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:24.737" endtime="20201112 10:14:24.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:24.778" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:24.748" endtime="20201112 10:14:24.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.788" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:24.786" endtime="20201112 10:14:24.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.794" level="INFO">VALUE: [1.6250000000050946e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6250000000050946e-06, 1.6940000000034705e-06, 1.6659999999973918e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.582999999999446e-06, 1.6249999999981557e-06, 1.6530000000042344e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6110000000055247e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6670000000038043e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.5969999999990159e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6940000000034705e-06, 1.6249999999981557e-06, 1.5839999999989196e-06, 1.6390000000046645e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201112 10:14:24.791" endtime="20201112 10:14:24.795"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.780" endtime="20201112 10:14:24.797"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.803" endtime="20201112 10:14:24.806"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:24.812" endtime="20201112 10:14:24.833"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.807" endtime="20201112 10:14:24.835"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.799" endtime="20201112 10:14:24.836"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.302" endtime="20201112 10:14:24.837"></status>
</kw>
<msg timestamp="20201112 10:14:24.837" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.857" endtime="20201112 10:14:24.872"></status>
</kw>
<msg timestamp="20201112 10:14:24.873" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:24.853" endtime="20201112 10:14:24.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.879" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:24.875" endtime="20201112 10:14:24.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.881" endtime="20201112 10:14:24.885"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.846" endtime="20201112 10:14:24.887"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.842" endtime="20201112 10:14:24.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.904" endtime="20201112 10:14:25.237"></status>
</kw>
<msg timestamp="20201112 10:14:25.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037085792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037087403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:24.901" endtime="20201112 10:14:25.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037085792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037087403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:25.247" endtime="20201112 10:14:25.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.266" endtime="20201112 10:14:25.269"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.894" endtime="20201112 10:14:25.271"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.889" endtime="20201112 10:14:25.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:25.283" level="INFO">${RESULT} = [{'time': 0.037087403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.037097097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:25.274" endtime="20201112 10:14:25.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:25.315" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:25.285" endtime="20201112 10:14:25.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.325" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:25.323" endtime="20201112 10:14:25.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.331" level="INFO">VALUE: [1.6109999999985858e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6250000000050946e-06, 1.5559999999997798e-06, 1.6109999999985858e-06, 1.6390000000046645e-06, 1.7080000000030404e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.6389999999977256e-06, 1.6380000000051909e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.7080000000030404e-06, 1.6110000000055247e-06, 1.6950000000029442e-06, 1.6249999999981557e-06, 1.6669999999968654e-06, 1.6389999999977256e-06, 1.5969999999990159e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.5969999999990159e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.5969999999990159e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6520000000047608e-06, 1.6249999999981557e-06, 1.6119999999980594e-06]</msg>
<status status="PASS" starttime="20201112 10:14:25.328" endtime="20201112 10:14:25.332"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.317" endtime="20201112 10:14:25.334"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.340" endtime="20201112 10:14:25.343"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:25.348" endtime="20201112 10:14:25.370"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.344" endtime="20201112 10:14:25.371"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.336" endtime="20201112 10:14:25.373"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.838" endtime="20201112 10:14:25.374"></status>
</kw>
<msg timestamp="20201112 10:14:25.374" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.393" endtime="20201112 10:14:25.408"></status>
</kw>
<msg timestamp="20201112 10:14:25.409" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.390" endtime="20201112 10:14:25.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.415" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.411" endtime="20201112 10:14:25.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.417" endtime="20201112 10:14:25.421"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.383" endtime="20201112 10:14:25.423"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.378" endtime="20201112 10:14:25.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.440" endtime="20201112 10:14:25.777"></status>
</kw>
<msg timestamp="20201112 10:14:25.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036967986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036969625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:25.437" endtime="20201112 10:14:25.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036967986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036969625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:25.786" endtime="20201112 10:14:25.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.805" endtime="20201112 10:14:25.808"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.430" endtime="20201112 10:14:25.810"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.425" endtime="20201112 10:14:25.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:25.822" level="INFO">${RESULT} = [{'time': 0.036969625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.036981014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:25.813" endtime="20201112 10:14:25.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:25.854" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:25.824" endtime="20201112 10:14:25.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.864" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:14:25.862" endtime="20201112 10:14:25.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.870" level="INFO">VALUE: [1.6389999999977256e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.6810000000033742e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6669999999968654e-06, 1.6390000000046645e-06, 1.5550000000003061e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6390000000046645e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6669999999968654e-06, 1.6250000000050946e-06, 1.5550000000003061e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6249999999981557e-06, 1.582999999999446e-06, 1.6390000000046645e-06, 1.6659999999973918e-06, 1.5980000000054284e-06, 1.568999999999876e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6800000000039006e-06, 1.6389999999977256e-06, 1.568999999999876e-06, 1.6249999999981557e-06, 1.6530000000042344e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6390000000046645e-06]</msg>
<status status="PASS" starttime="20201112 10:14:25.867" endtime="20201112 10:14:25.871"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.856" endtime="20201112 10:14:25.873"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.879" endtime="20201112 10:14:25.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:25.887" endtime="20201112 10:14:25.909"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.883" endtime="20201112 10:14:25.911"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.875" endtime="20201112 10:14:25.912"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.375" endtime="20201112 10:14:25.913"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.225" endtime="20201112 10:14:25.913"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:25.924" endtime="20201112 10:14:25.945"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.919" endtime="20201112 10:14:25.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.917" endtime="20201112 10:14:25.948"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:15.090" endtime="20201112 10:14:25.949" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:25.966" endtime="20201112 10:14:25.988"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.963" endtime="20201112 10:14:25.989"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.022" endtime="20201112 10:14:26.047"></status>
</kw>
<msg timestamp="20201112 10:14:26.048" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:26.019" endtime="20201112 10:14:26.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.054" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:26.050" endtime="20201112 10:14:26.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.061" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:26.057" endtime="20201112 10:14:26.061"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:26.012" endtime="20201112 10:14:26.063"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:26.006" endtime="20201112 10:14:26.065"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.003" endtime="20201112 10:14:26.066"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:26.075" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:26.074" endtime="20201112 10:14:26.076"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.067" endtime="20201112 10:14:26.076"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.001" endtime="20201112 10:14:26.077"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.999" endtime="20201112 10:14:26.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.079" endtime="20201112 10:14:26.082"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.995" endtime="20201112 10:14:26.084"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.991" endtime="20201112 10:14:26.085"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.960" endtime="20201112 10:14:26.086"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.109" endtime="20201112 10:14:26.132"></status>
</kw>
<msg timestamp="20201112 10:14:26.133" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:26.105" endtime="20201112 10:14:26.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.140" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:26.136" endtime="20201112 10:14:26.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.142" endtime="20201112 10:14:26.146"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.098" endtime="20201112 10:14:26.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.092" endtime="20201112 10:14:26.149"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.153" endtime="20201112 10:14:26.158"></status>
</kw>
<msg timestamp="20201112 10:14:26.159" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 10:14:26.150" endtime="20201112 10:14:26.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.169" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:14:26.166" endtime="20201112 10:14:26.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.173" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:14:26.171" endtime="20201112 10:14:26.174"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.160" endtime="20201112 10:14:26.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.185" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:14:26.182" endtime="20201112 10:14:26.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.189" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:14:26.187" endtime="20201112 10:14:26.190"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.177" endtime="20201112 10:14:26.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.208" endtime="20201112 10:14:26.534"></status>
</kw>
<msg timestamp="20201112 10:14:26.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136631722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136635375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:26.204" endtime="20201112 10:14:26.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136631722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136635375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:26.543" endtime="20201112 10:14:26.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.562" endtime="20201112 10:14:26.565"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.197" endtime="20201112 10:14:26.567"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.193" endtime="20201112 10:14:26.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:26.579" level="INFO">${RESULT} = [{'time': 0.136635375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.652999999992357e-06, 'source_diff': 3.652999999992357e-06}, {'time': 0.136652514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:26.570" endtime="20201112 10:14:26.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:26.613" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:26.581" endtime="20201112 10:14:26.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.624" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 10:14:26.622" endtime="20201112 10:14:26.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.630" level="INFO">VALUE: [3.652999999992357e-06, 3.7499999999968114e-06, 3.762999999989969e-06, 3.666999999984988e-06, 3.7499999999968114e-06, 3.7360000000041804e-06, 3.7499999999968114e-06, 3.7499999999968114e-06, 3.7499999999968114e-06, 3.7499999999968114e-06, 3.7499999999968114e-06, 3.707999999991163e-06, 3.7499999999968114e-06, 3.721999999983794e-06, 3.7630000000177244e-06, 3.7229999999832675e-06, 3.7360000000041804e-06, 3.764000000017198e-06, 3.7499999999968114e-06, 3.7360000000041804e-06, 3.7360000000041804e-06, 3.723000000011023e-06, 3.7499999999968114e-06, 3.7499999999968114e-06, 3.7360000000041804e-06, 3.7639999999894425e-06, 3.820000000015478e-06, 3.750000000024567e-06, 3.7360000000041804e-06, 3.805999999995091e-06, 3.7499999999968114e-06, 3.7499999999968114e-06, 3.7360000000041804e-06, 3.7769999999826e-06, 3.7499999999968114e-06, 3.7499999999968114e-06, 3.735999999976425e-06, 3.7360000000041804e-06, 3.7360000000041804e-06, 3.7499999999968114e-06, 3.721999999983794e-06, 3.737000000003654e-06, 3.721999999983794e-06, 3.7360000000041804e-06, 3.7499999999968114e-06, 3.7499999999968114e-06, 3.7229999999832675e-06, 3.7499999999968114e-06, 3.7770000000103554e-06, 3.7499999999968114e-06]</msg>
<status status="PASS" starttime="20201112 10:14:26.627" endtime="20201112 10:14:26.631"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.615" endtime="20201112 10:14:26.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.639" endtime="20201112 10:14:26.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:26.648" endtime="20201112 10:14:26.670"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.644" endtime="20201112 10:14:26.672"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.635" endtime="20201112 10:14:26.673"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.087" endtime="20201112 10:14:26.674"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:25.953" endtime="20201112 10:14:26.676" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:26.694" endtime="20201112 10:14:26.715"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.690" endtime="20201112 10:14:26.717"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.750" endtime="20201112 10:14:26.774"></status>
</kw>
<msg timestamp="20201112 10:14:26.775" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:26.746" endtime="20201112 10:14:26.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.782" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:26.777" endtime="20201112 10:14:26.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.788" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:26.784" endtime="20201112 10:14:26.789"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:26.739" endtime="20201112 10:14:26.791"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:26.733" endtime="20201112 10:14:26.792"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.730" endtime="20201112 10:14:26.793"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:26.800" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:26.799" endtime="20201112 10:14:26.801"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.795" endtime="20201112 10:14:26.802"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.728" endtime="20201112 10:14:26.802"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.727" endtime="20201112 10:14:26.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.804" endtime="20201112 10:14:26.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.723" endtime="20201112 10:14:26.809"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.718" endtime="20201112 10:14:26.811"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.687" endtime="20201112 10:14:26.811"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.837" endtime="20201112 10:14:26.903"></status>
</kw>
<msg timestamp="20201112 10:14:26.904" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:26.833" endtime="20201112 10:14:26.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.910" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:26.906" endtime="20201112 10:14:26.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.913" endtime="20201112 10:14:26.916"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.826" endtime="20201112 10:14:26.918"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.818" endtime="20201112 10:14:26.919"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.924" endtime="20201112 10:14:26.928"></status>
</kw>
<msg timestamp="20201112 10:14:26.929" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 10:14:26.921" endtime="20201112 10:14:26.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.939" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:14:26.937" endtime="20201112 10:14:26.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.944" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:14:26.942" endtime="20201112 10:14:26.944"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.931" endtime="20201112 10:14:26.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.955" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:14:26.953" endtime="20201112 10:14:26.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.960" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:14:26.958" endtime="20201112 10:14:26.961"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.947" endtime="20201112 10:14:26.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.979" endtime="20201112 10:14:27.322"></status>
</kw>
<msg timestamp="20201112 10:14:27.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137114528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.137145403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:26.976" endtime="20201112 10:14:27.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137114528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.137145403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:27.331" endtime="20201112 10:14:27.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.349" endtime="20201112 10:14:27.353"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.968" endtime="20201112 10:14:27.354"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.963" endtime="20201112 10:14:27.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:27.366" level="INFO">${RESULT} = [{'time': 0.137145403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0874999999985775e-05, 'source_diff': 3.0874999999985775e-05}, {'time': 0.138016917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:27.357" endtime="20201112 10:14:27.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:27.397" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:27.368" endtime="20201112 10:14:27.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.409" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 10:14:27.407" endtime="20201112 10:14:27.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.416" level="INFO">VALUE: [3.0874999999985775e-05, 3.0916999999991424e-05, 6.140300000001542e-05, 3.090299999999879e-05, 3.0834000000007356e-05, 3.0916999999991424e-05, 3.0916999999991424e-05, 3.083300000000788e-05, 3.088900000000616e-05, 3.087500000001353e-05, 3.091700000001918e-05, 3.088900000000616e-05, 3.0820000000014725e-05, 3.0888999999978406e-05, 3.090299999999879e-05, 3.090199999999932e-05, 3.090299999999879e-05, 3.088900000000616e-05, 3.0874999999985775e-05, 3.090199999999932e-05, 3.091599999999195e-05, 3.094400000000497e-05, 3.0860999999993144e-05, 3.090199999999932e-05, 3.090299999999879e-05, 3.088800000000669e-05, 3.0874999999985775e-05, 3.084700000000051e-05, 3.088900000000616e-05, 3.090199999999932e-05, 3.088900000000616e-05, 3.0888999999978406e-05, 3.090299999999879e-05, 3.088900000000616e-05, 3.091599999999195e-05, 3.0874999999985775e-05, 3.090299999999879e-05, 3.0888999999978406e-05, 3.0874999999985775e-05, 3.08610000000209e-05, 3.088900000000616e-05, 3.088900000000616e-05, 3.088900000000616e-05, 3.090299999999879e-05, 3.097199999999023e-05, 3.090300000002655e-05, 3.091700000001918e-05, 3.0874999999985775e-05, 3.088900000000616e-05, 3.092999999998458e-05]</msg>
<status status="PASS" starttime="20201112 10:14:27.412" endtime="20201112 10:14:27.417"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.400" endtime="20201112 10:14:27.418"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.425" endtime="20201112 10:14:27.427"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:27.433" endtime="20201112 10:14:27.454"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.429" endtime="20201112 10:14:27.456"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.420" endtime="20201112 10:14:27.458"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.813" endtime="20201112 10:14:27.458"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:26.681" endtime="20201112 10:14:27.460" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:27.478" endtime="20201112 10:14:27.499"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.474" endtime="20201112 10:14:27.501"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.534" endtime="20201112 10:14:27.559"></status>
</kw>
<msg timestamp="20201112 10:14:27.560" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.531" endtime="20201112 10:14:27.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.566" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.562" endtime="20201112 10:14:27.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.573" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:27.569" endtime="20201112 10:14:27.574"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:27.523" endtime="20201112 10:14:27.575"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:27.517" endtime="20201112 10:14:27.577"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.514" endtime="20201112 10:14:27.578"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:27.585" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:27.584" endtime="20201112 10:14:27.586"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.579" endtime="20201112 10:14:27.586"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.513" endtime="20201112 10:14:27.587"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.511" endtime="20201112 10:14:27.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.589" endtime="20201112 10:14:27.593"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.507" endtime="20201112 10:14:27.594"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.502" endtime="20201112 10:14:27.596"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.471" endtime="20201112 10:14:27.596"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.621" endtime="20201112 10:14:27.803"></status>
</kw>
<msg timestamp="20201112 10:14:27.804" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.618" endtime="20201112 10:14:27.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.810" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.806" endtime="20201112 10:14:27.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.813" endtime="20201112 10:14:27.816"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.609" endtime="20201112 10:14:27.818"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.603" endtime="20201112 10:14:27.819"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.824" endtime="20201112 10:14:27.828"></status>
</kw>
<msg timestamp="20201112 10:14:27.829" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 10:14:27.821" endtime="20201112 10:14:27.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.839" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:14:27.837" endtime="20201112 10:14:27.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.844" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:14:27.841" endtime="20201112 10:14:27.844"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.831" endtime="20201112 10:14:27.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.855" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:14:27.853" endtime="20201112 10:14:27.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.860" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:14:27.858" endtime="20201112 10:14:27.861"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.847" endtime="20201112 10:14:27.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.878" endtime="20201112 10:14:28.218"></status>
</kw>
<msg timestamp="20201112 10:14:28.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.139357125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.139416444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:27.875" endtime="20201112 10:14:28.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.139357125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.139416444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:28.227" endtime="20201112 10:14:28.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.245" endtime="20201112 10:14:28.249"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.868" endtime="20201112 10:14:28.251"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.863" endtime="20201112 10:14:28.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:28.263" level="INFO">${RESULT} = [{'time': 0.139416444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.931900000000212e-05, 'source_diff': 5.931900000000212e-05}, {'time': 0.142659528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:28.254" endtime="20201112 10:14:28.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:28.295" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:28.266" endtime="20201112 10:14:28.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.306" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 10:14:28.304" endtime="20201112 10:14:28.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.311" level="INFO">VALUE: [5.931900000000212e-05, 5.877800000000932e-05, 5.8749999999996305e-05, 5.872300000001052e-05, 5.88190000000155e-05, 5.8736000000003674e-05, 5.8749999999996305e-05, 5.8749999999996305e-05, 5.873599999997592e-05, 5.8736000000003674e-05, 5.870800000001841e-05, 5.8763999999988936e-05, 5.870800000001841e-05, 5.8749999999996305e-05, 5.8680000000005395e-05, 5.8709000000017886e-05, 5.875000000002406e-05, 5.876299999998946e-05, 5.875000000002406e-05, 5.8736000000003674e-05, 5.8749999999996305e-05, 5.8736000000003674e-05, 5.8763999999988936e-05, 5.8749999999996305e-05, 5.8749999999996305e-05, 5.872199999998329e-05, 5.883300000000813e-05, 5.88340000000076e-05, 5.876400000001669e-05, 5.8763999999988936e-05, 5.8709000000017886e-05, 5.872199999998329e-05, 5.8749999999996305e-05, 5.8749999999996305e-05, 5.8736000000003674e-05, 5.872299999998276e-05, 5.8763999999988936e-05, 5.8736000000003674e-05, 5.8736000000003674e-05, 5.8749999999996305e-05, 5.87370000000309e-05, 5.868100000000487e-05, 5.876400000004445e-05, 5.8653000000019606e-05, 5.8749999999996305e-05, 5.872200000001104e-05, 5.8749999999996305e-05, 5.872299999998276e-05, 5.8749999999996305e-05, 5.87370000000309e-05]</msg>
<status status="PASS" starttime="20201112 10:14:28.308" endtime="20201112 10:14:28.312"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.296" endtime="20201112 10:14:28.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.320" endtime="20201112 10:14:28.323"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:28.328" endtime="20201112 10:14:28.351"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.324" endtime="20201112 10:14:28.353"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.315" endtime="20201112 10:14:28.354"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.598" endtime="20201112 10:14:28.355"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:27.465" endtime="20201112 10:14:28.357" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:28.375" endtime="20201112 10:14:28.396"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.371" endtime="20201112 10:14:28.398"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.431" endtime="20201112 10:14:28.455"></status>
</kw>
<msg timestamp="20201112 10:14:28.456" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.427" endtime="20201112 10:14:28.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.463" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.458" endtime="20201112 10:14:28.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.469" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:28.465" endtime="20201112 10:14:28.470"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:28.420" endtime="20201112 10:14:28.472"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:28.414" endtime="20201112 10:14:28.473"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.411" endtime="20201112 10:14:28.474"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:28.482" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:28.481" endtime="20201112 10:14:28.483"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.476" endtime="20201112 10:14:28.483"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.410" endtime="20201112 10:14:28.484"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.408" endtime="20201112 10:14:28.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.486" endtime="20201112 10:14:28.489"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.404" endtime="20201112 10:14:28.491"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.399" endtime="20201112 10:14:28.492"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.368" endtime="20201112 10:14:28.493"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.517" endtime="20201112 10:14:28.541"></status>
</kw>
<msg timestamp="20201112 10:14:28.542" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.512" endtime="20201112 10:14:28.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.548" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.544" endtime="20201112 10:14:28.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.551" endtime="20201112 10:14:28.555"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.505" endtime="20201112 10:14:28.556"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.499" endtime="20201112 10:14:28.558"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.562" endtime="20201112 10:14:28.567"></status>
</kw>
<msg timestamp="20201112 10:14:28.568" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 10:14:28.559" endtime="20201112 10:14:28.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.578" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:14:28.575" endtime="20201112 10:14:28.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.582" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:14:28.580" endtime="20201112 10:14:28.583"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.569" endtime="20201112 10:14:28.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.594" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:14:28.591" endtime="20201112 10:14:28.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.598" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:14:28.596" endtime="20201112 10:14:28.599"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.585" endtime="20201112 10:14:28.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.616" endtime="20201112 10:14:28.961"></status>
</kw>
<msg timestamp="20201112 10:14:28.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136444736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136445611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:28.613" endtime="20201112 10:14:28.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136444736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136445611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:28.971" endtime="20201112 10:14:28.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.990" endtime="20201112 10:14:28.994"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.606" endtime="20201112 10:14:28.995"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.601" endtime="20201112 10:14:28.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:29.007" level="INFO">${RESULT} = [{'time': 0.136445611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.749999999835278e-07, 'source_diff': 8.749999999835278e-07}, {'time': 0.136455347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:28.998" endtime="20201112 10:14:29.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:29.041" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:29.009" endtime="20201112 10:14:29.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.053" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 10:14:29.050" endtime="20201112 10:14:29.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.058" level="INFO">VALUE: [8.749999999835278e-07, 8.609999999908968e-07, 8.749999999835278e-07, 8.609999999908968e-07, 8.469999999982658e-07, 8.609999999908968e-07, 8.330000000056348e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.609999999908968e-07, 9.169999999891765e-07, 8.609999999908968e-07, 8.330000000056348e-07, 9.159999999897028e-07, 9.300000000100894e-07, 8.619999999903705e-07, 8.750000000112834e-07, 8.609999999908968e-07, 8.609999999908968e-07, 8.62000000018126e-07, 8.610000000186524e-07, 8.469999999982658e-07, 8.609999999908968e-07, 8.749999999835278e-07, 8.609999999908968e-07, 8.609999999908968e-07, 8.610000000186524e-07, 8.609999999908968e-07, 8.479999999977395e-07, 8.750000000112834e-07, 8.619999999903705e-07, 9.300000000100894e-07, 8.889999999761589e-07, 8.619999999903705e-07, 8.750000000112834e-07, 8.619999999903705e-07, 8.609999999908968e-07, 8.469999999982658e-07, 9.169999999891765e-07, 8.610000000186524e-07, 8.329999999778792e-07, 8.479999999977395e-07, 8.750000000112834e-07, 8.890000000039144e-07, 8.48000000025495e-07, 8.469999999982658e-07, 9.019999999970718e-07, 8.609999999908968e-07, 8.609999999908968e-07, 8.610000000186524e-07]</msg>
<status status="PASS" starttime="20201112 10:14:29.055" endtime="20201112 10:14:29.059"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.043" endtime="20201112 10:14:29.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.067" endtime="20201112 10:14:29.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:29.075" endtime="20201112 10:14:29.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.070" endtime="20201112 10:14:29.098"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.062" endtime="20201112 10:14:29.099"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.494" endtime="20201112 10:14:29.100"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:28.362" endtime="20201112 10:14:29.102" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:29.120" endtime="20201112 10:14:29.143"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.116" endtime="20201112 10:14:29.145"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.178" endtime="20201112 10:14:29.202"></status>
</kw>
<msg timestamp="20201112 10:14:29.203" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.174" endtime="20201112 10:14:29.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.209" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.205" endtime="20201112 10:14:29.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.223" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:29.212" endtime="20201112 10:14:29.224"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:29.167" endtime="20201112 10:14:29.226"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:29.161" endtime="20201112 10:14:29.227"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.158" endtime="20201112 10:14:29.228"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:29.236" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:29.235" endtime="20201112 10:14:29.237"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.230" endtime="20201112 10:14:29.238"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.157" endtime="20201112 10:14:29.238"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.155" endtime="20201112 10:14:29.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.240" endtime="20201112 10:14:29.244"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.151" endtime="20201112 10:14:29.246"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.147" endtime="20201112 10:14:29.247"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.114" endtime="20201112 10:14:29.247"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.270" endtime="20201112 10:14:29.337"></status>
</kw>
<msg timestamp="20201112 10:14:29.339" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.267" endtime="20201112 10:14:29.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.345" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.341" endtime="20201112 10:14:29.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.347" endtime="20201112 10:14:29.351"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.260" endtime="20201112 10:14:29.352"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.254" endtime="20201112 10:14:29.354"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.358" endtime="20201112 10:14:29.363"></status>
</kw>
<msg timestamp="20201112 10:14:29.364" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 10:14:29.355" endtime="20201112 10:14:29.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.376" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:14:29.372" endtime="20201112 10:14:29.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.380" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:14:29.378" endtime="20201112 10:14:29.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.366" endtime="20201112 10:14:29.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.392" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:14:29.390" endtime="20201112 10:14:29.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.396" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:14:29.394" endtime="20201112 10:14:29.397"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.384" endtime="20201112 10:14:29.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.415" endtime="20201112 10:14:29.759"></status>
</kw>
<msg timestamp="20201112 10:14:29.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143224653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143235681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:29.412" endtime="20201112 10:14:29.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143224653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143235681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:29.769" endtime="20201112 10:14:29.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.788" endtime="20201112 10:14:29.792"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.405" endtime="20201112 10:14:29.793"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.400" endtime="20201112 10:14:29.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:29.805" level="INFO">${RESULT} = [{'time': 0.143235681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1027999999996263e-05, 'source_diff': 1.1027999999996263e-05}, {'time': 0.144106681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:29.796" endtime="20201112 10:14:29.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:29.836" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:29.807" endtime="20201112 10:14:29.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.848" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 10:14:29.845" endtime="20201112 10:14:29.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.853" level="INFO">VALUE: [1.1027999999996263e-05, 1.1013999999975876e-05, 1.1014000000003632e-05, 1.1014000000003632e-05, 1.1027999999996263e-05, 1.1014000000003632e-05, 1.1027999999996263e-05, 1.1027999999996263e-05, 1.0999999999983245e-05, 1.1041999999988894e-05, 1.1027999999996263e-05, 1.1027999999996263e-05, 1.1014000000003632e-05, 1.104200000001665e-05, 1.1027999999996263e-05, 1.104200000001665e-05, 1.1041999999988894e-05, 1.104200000001665e-05, 1.1041999999988894e-05, 1.1027999999996263e-05, 1.1069000000002438e-05, 1.1012999999976403e-05, 1.1082999999995069e-05, 1.1014000000003632e-05, 1.1041999999988894e-05, 1.1014000000003632e-05, 1.1028000000024019e-05, 1.1028000000024019e-05, 1.1014000000003632e-05, 1.1014000000003632e-05, 1.1014000000003632e-05, 1.1027999999996263e-05, 1.1027999999996263e-05, 1.104200000001665e-05, 1.0959000000004826e-05, 1.0972999999997457e-05, 1.1027999999996263e-05, 1.1027999999996263e-05, 1.1083999999994543e-05, 1.1014000000003632e-05, 1.1027999999996263e-05, 1.102699999999679e-05, 1.0985999999990614e-05, 1.102699999999679e-05, 1.1028000000024019e-05, 1.1041000000017176e-05, 1.1027000000024545e-05, 1.104200000001665e-05, 1.1014000000003632e-05, 1.1027999999996263e-05]</msg>
<status status="PASS" starttime="20201112 10:14:29.850" endtime="20201112 10:14:29.854"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.838" endtime="20201112 10:14:29.856"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.862" endtime="20201112 10:14:29.865"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:29.870" endtime="20201112 10:14:29.892"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.866" endtime="20201112 10:14:29.894"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.858" endtime="20201112 10:14:29.895"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.249" endtime="20201112 10:14:29.896"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:29.107" endtime="20201112 10:14:29.898" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:29.916" endtime="20201112 10:14:29.937"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.912" endtime="20201112 10:14:29.939"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.973" endtime="20201112 10:14:29.997"></status>
</kw>
<msg timestamp="20201112 10:14:29.998" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.970" endtime="20201112 10:14:29.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.006" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:30.001" endtime="20201112 10:14:30.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.012" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:30.008" endtime="20201112 10:14:30.013"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:29.963" endtime="20201112 10:14:30.015"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:29.957" endtime="20201112 10:14:30.016"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.954" endtime="20201112 10:14:30.017"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:30.025" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:30.023" endtime="20201112 10:14:30.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.019" endtime="20201112 10:14:30.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.952" endtime="20201112 10:14:30.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.949" endtime="20201112 10:14:30.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.028" endtime="20201112 10:14:30.032"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.945" endtime="20201112 10:14:30.033"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.940" endtime="20201112 10:14:30.035"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.909" endtime="20201112 10:14:30.035"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.058" endtime="20201112 10:14:30.242"></status>
</kw>
<msg timestamp="20201112 10:14:30.243" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:30.055" endtime="20201112 10:14:30.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.249" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:30.245" endtime="20201112 10:14:30.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.252" endtime="20201112 10:14:30.256"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.048" endtime="20201112 10:14:30.257"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.042" endtime="20201112 10:14:30.259"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.263" endtime="20201112 10:14:30.268"></status>
</kw>
<msg timestamp="20201112 10:14:30.269" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 10:14:30.260" endtime="20201112 10:14:30.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.279" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:14:30.277" endtime="20201112 10:14:30.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.283" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:14:30.281" endtime="20201112 10:14:30.284"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.270" endtime="20201112 10:14:30.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.295" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:14:30.293" endtime="20201112 10:14:30.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.300" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:14:30.298" endtime="20201112 10:14:30.301"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.287" endtime="20201112 10:14:30.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.321" endtime="20201112 10:14:30.661"></status>
</kw>
<msg timestamp="20201112 10:14:30.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.1393255, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.139346944, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:30.317" endtime="20201112 10:14:30.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.1393255, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.139346944, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:30.670" endtime="20201112 10:14:30.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.687" endtime="20201112 10:14:30.691"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.308" endtime="20201112 10:14:30.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.303" endtime="20201112 10:14:30.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:30.705" level="INFO">${RESULT} = [{'time': 0.139346944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1444000000009344e-05, 'source_diff': 2.1444000000009344e-05}, {'time': 0.142552778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:30.696" endtime="20201112 10:14:30.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:30.736" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:30.707" endtime="20201112 10:14:30.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.747" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 10:14:30.745" endtime="20201112 10:14:30.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.752" level="INFO">VALUE: [2.1444000000009344e-05, 2.1444999999981063e-05, 2.149999999997987e-05, 2.144399999998159e-05, 2.1444999999981063e-05, 2.144399999998159e-05, 2.138900000001054e-05, 2.1514000000000255e-05, 2.1431000000016187e-05, 2.1472000000022362e-05, 2.1458000000001975e-05, 2.1445000000008818e-05, 2.1445000000008818e-05, 2.147299999999408e-05, 2.145900000000145e-05, 2.1458000000001975e-05, 2.1445000000008818e-05, 7.766700000000348e-05, 2.147299999999408e-05, 2.1445000000008818e-05, 2.14169999999958e-05, 2.144399999998159e-05, 2.1445000000008818e-05, 2.145900000000145e-05, 2.145799999997422e-05, 2.1487000000014467e-05, 2.144399999998159e-05, 2.143099999998843e-05, 2.1417000000023556e-05, 2.1444000000009344e-05, 2.1445000000008818e-05, 2.145900000000145e-05, 2.143099999998843e-05, 2.145900000000145e-05, 2.1458000000001975e-05, 2.144399999998159e-05, 2.143000000004447e-05, 2.1431000000016187e-05, 2.1431000000016187e-05, 2.145900000000145e-05, 2.144399999998159e-05, 2.1415999999996327e-05, 2.145900000000145e-05, 2.145799999997422e-05, 2.1429999999988958e-05, 2.1445000000008818e-05, 2.145800000002973e-05, 2.144399999998159e-05, 2.145799999997422e-05, 2.145799999997422e-05]</msg>
<status status="PASS" starttime="20201112 10:14:30.749" endtime="20201112 10:14:30.753"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.738" endtime="20201112 10:14:30.755"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.761" endtime="20201112 10:14:30.764"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:30.769" endtime="20201112 10:14:30.791"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.765" endtime="20201112 10:14:30.793"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.757" endtime="20201112 10:14:30.794"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.037" endtime="20201112 10:14:30.795"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:29.903" endtime="20201112 10:14:30.797" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 10:14:01.149" endtime="20201112 10:14:30.818"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.986" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 10:14:31.001" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 10:14:32.922" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 10:14:30.982" endtime="20201112 10:14:32.924"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.929" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 10:14:32.926" endtime="20201112 10:14:32.930"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.980" endtime="20201112 10:14:32.932"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:32.936" endtime="20201112 10:14:33.262"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.933" endtime="20201112 10:14:33.264"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.293" endtime="20201112 10:14:33.328"></status>
</kw>
<msg timestamp="20201112 10:14:33.329" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f...</msg>
<status status="PASS" starttime="20201112 10:14:33.290" endtime="20201112 10:14:33.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.335" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f...</msg>
<status status="PASS" starttime="20201112 10:14:33.331" endtime="20201112 10:14:33.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.342" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:33.338" endtime="20201112 10:14:33.343"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:33.284" endtime="20201112 10:14:33.345"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:33.278" endtime="20201112 10:14:33.346"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.276" endtime="20201112 10:14:33.347"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:33.355" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:33.353" endtime="20201112 10:14:33.355"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.349" endtime="20201112 10:14:33.356"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.274" endtime="20201112 10:14:33.356"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.272" endtime="20201112 10:14:33.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.358" endtime="20201112 10:14:33.362"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.269" endtime="20201112 10:14:33.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.365" endtime="20201112 10:14:33.368"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.266" endtime="20201112 10:14:33.370"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.977" endtime="20201112 10:14:33.371"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:33.387" endtime="20201112 10:14:33.409"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.381" endtime="20201112 10:14:33.411"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.443" endtime="20201112 10:14:33.467"></status>
</kw>
<msg timestamp="20201112 10:14:33.469" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:33.440" endtime="20201112 10:14:33.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.475" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:33.471" endtime="20201112 10:14:33.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.482" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:33.478" endtime="20201112 10:14:33.483"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:33.433" endtime="20201112 10:14:33.485"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:33.426" endtime="20201112 10:14:33.486"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.424" endtime="20201112 10:14:33.487"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:33.495" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:33.493" endtime="20201112 10:14:33.496"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.489" endtime="20201112 10:14:33.496"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.422" endtime="20201112 10:14:33.496"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.420" endtime="20201112 10:14:33.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.498" endtime="20201112 10:14:33.502"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.416" endtime="20201112 10:14:33.503"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.412" endtime="20201112 10:14:33.505"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.378" endtime="20201112 10:14:33.505"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.531" endtime="20201112 10:14:33.548"></status>
</kw>
<msg timestamp="20201112 10:14:33.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:33.527" endtime="20201112 10:14:33.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:33.551" endtime="20201112 10:14:33.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.558" endtime="20201112 10:14:33.561"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.520" endtime="20201112 10:14:33.563"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.514" endtime="20201112 10:14:33.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.583" endtime="20201112 10:14:33.918"></status>
</kw>
<msg timestamp="20201112 10:14:33.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136635403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136637875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:33.579" endtime="20201112 10:14:33.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136635403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136637875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:33.922" endtime="20201112 10:14:33.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.933" endtime="20201112 10:14:33.937"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.570" endtime="20201112 10:14:33.938"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.565" endtime="20201112 10:14:33.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:33.950" level="INFO">${RESULT} = [{'time': 0.136637875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4720000000033604e-06, 'source_diff': 2.4720000000033604e-06}, {'time': 0.136652819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:33.941" endtime="20201112 10:14:33.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:33.981" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:33.952" endtime="20201112 10:14:33.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.993" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 10:14:33.991" endtime="20201112 10:14:33.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.998" level="INFO">VALUE: [2.4720000000033604e-06, 2.4440000000180984e-06, 2.471999999975605e-06, 2.943999999976965e-06, 2.9450000000041943e-06, 2.929999999984334e-06, 2.4720000000033604e-06, 3.4589999999834475e-06, 3.443999999991343e-06, 2.4720000000033604e-06, 2.9589999999968253e-06, 2.874999999985528e-06, 2.4720000000033604e-06, 2.9860000000103692e-06, 2.9589999999968253e-06, 2.4580000000107294e-06, 2.4580000000107294e-06, 2.901999999999072e-06, 2.4299999999977118e-06, 2.9729999999894563e-06, 2.4449999999898164e-06, 2.9589999999968253e-06, 3.443999999991343e-06, 2.457999999982974e-06, 2.9579999999973516e-06, 3.4449999999908165e-06, 3.4720000000043605e-06, 2.9440000000047206e-06, 2.4580000000107294e-06, 2.4580000000107294e-06, 3.4589999999834475e-06, 2.9579999999973516e-06, 2.9579999999973516e-06, 3.486000000024747e-06, 3.0139999999956313e-06, 2.4580000000107294e-06, 2.416999999976799e-06, 2.9440000000047206e-06, 2.9450000000041943e-06, 2.4449999999898164e-06, 2.9589999999968253e-06, 2.4449999999898164e-06, 2.9720000000177382e-06, 2.9310000000115632e-06, 2.3749999999989058e-06, 2.4589999999824474e-06, 2.9579999999973516e-06, 2.4580000000107294e-06, 2.9440000000047206e-06, 2.4449999999898164e-06]</msg>
<status status="PASS" starttime="20201112 10:14:33.995" endtime="20201112 10:14:33.999"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.983" endtime="20201112 10:14:34.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.007" endtime="20201112 10:14:34.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:34.016" endtime="20201112 10:14:34.037"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.011" endtime="20201112 10:14:34.039"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.003" endtime="20201112 10:14:34.040"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.510" endtime="20201112 10:14:34.041"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.509" endtime="20201112 10:14:34.041"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.064" endtime="20201112 10:14:34.081"></status>
</kw>
<msg timestamp="20201112 10:14:34.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.060" endtime="20201112 10:14:34.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.085" endtime="20201112 10:14:34.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.091" endtime="20201112 10:14:34.095"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.053" endtime="20201112 10:14:34.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.047" endtime="20201112 10:14:34.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.114" endtime="20201112 10:14:34.452"></status>
</kw>
<msg timestamp="20201112 10:14:34.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04121825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041222125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:34.111" endtime="20201112 10:14:34.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04121825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041222125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:34.461" endtime="20201112 10:14:34.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.480" endtime="20201112 10:14:34.484"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.104" endtime="20201112 10:14:34.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.099" endtime="20201112 10:14:34.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:34.497" level="INFO">${RESULT} = [{'time': 0.041222125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.041238458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:34.488" endtime="20201112 10:14:34.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:34.535" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:34.506" endtime="20201112 10:14:34.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.546" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 10:14:34.544" endtime="20201112 10:14:34.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.551" level="INFO">VALUE: [3.875000000000406e-06, 4.443999999999282e-06, 3.9449999999982555e-06, 3.4579999999978517e-06, 4.457999999998852e-06, 3.943999999998782e-06, 3.4309999999981855e-06, 3.958000000005291e-06, 3.4590000000042642e-06, 3.4450000000046943e-06, 3.929999999999212e-06, 3.4440000000052207e-06, 3.4719999999974216e-06, 3.9310000000056244e-06, 3.959000000004764e-06, 4.443999999999282e-06, 3.943999999998782e-06, 3.9720000000048605e-06, 3.4450000000046943e-06, 3.5279999999957012e-06, 3.4719999999974216e-06, 3.4590000000042642e-06, 3.4450000000046943e-06, 3.4589999999973253e-06, 3.4579999999978517e-06, 3.4580000000047906e-06, 3.944000000005721e-06, 3.4729999999968952e-06, 3.4589999999973253e-06, 3.971999999997922e-06, 4.000000000004e-06, 3.429999999998712e-06, 3.944000000005721e-06, 4.458999999998325e-06, 3.4589999999973253e-06, 3.4579999999978517e-06, 3.9309999999986855e-06, 3.4589999999973253e-06, 3.957999999998352e-06, 4.444000000006221e-06, 3.9310000000056244e-06, 3.415999999999142e-06, 3.929999999999212e-06, 3.4310000000051244e-06, 3.4580000000047906e-06, 3.945000000005194e-06, 3.4450000000046943e-06, 3.4719999999974216e-06, 4.4449999999987555e-06, 3.4720000000043605e-06]</msg>
<status status="PASS" starttime="20201112 10:14:34.548" endtime="20201112 10:14:34.552"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.537" endtime="20201112 10:14:34.554"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.560" endtime="20201112 10:14:34.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:34.568" endtime="20201112 10:14:34.589"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.564" endtime="20201112 10:14:34.591"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.555" endtime="20201112 10:14:34.593"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.043" endtime="20201112 10:14:34.593"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.042" endtime="20201112 10:14:34.594"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.616" endtime="20201112 10:14:34.634"></status>
</kw>
<msg timestamp="20201112 10:14:34.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.613" endtime="20201112 10:14:34.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.637" endtime="20201112 10:14:34.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.643" endtime="20201112 10:14:34.647"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.606" endtime="20201112 10:14:34.648"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.600" endtime="20201112 10:14:34.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.666" endtime="20201112 10:14:35.004"></status>
</kw>
<msg timestamp="20201112 10:14:35.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041185944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041190361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:34.663" endtime="20201112 10:14:35.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041185944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041190361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:35.013" endtime="20201112 10:14:35.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.032" endtime="20201112 10:14:35.036"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.656" endtime="20201112 10:14:35.038"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.651" endtime="20201112 10:14:35.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:35.050" level="INFO">${RESULT} = [{'time': 0.041190361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.041206569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:35.041" endtime="20201112 10:14:35.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:35.080" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:35.052" endtime="20201112 10:14:35.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.091" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 10:14:35.089" endtime="20201112 10:14:35.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.097" level="INFO">VALUE: [4.416999999999616e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.443999999999282e-06, 4.458999999998325e-06, 4.458000000005791e-06, 4.971999999998922e-06, 4.416999999999616e-06, 4.9449999999992555e-06, 4.402000000000572e-06, 4.457999999998852e-06, 4.916000000000642e-06, 4.430999999999186e-06, 4.458999999998325e-06, 4.985999999998492e-06, 4.416999999999616e-06, 4.943999999999782e-06, 4.917000000000116e-06, 4.930000000000212e-06, 4.458999999998325e-06, 4.540999999996798e-06, 4.9589999999988255e-06, 4.972000000005861e-06, 4.5000000000045e-06, 4.471999999998422e-06, 4.4860000000049305e-06, 4.527999999996701e-06, 4.985999999998492e-06, 4.9449999999992555e-06, 4.429999999999712e-06, 4.375000000000906e-06, 4.4449999999987555e-06, 4.473000000004834e-06, 4.903000000000546e-06, 4.513999999997131e-06, 4.957999999999352e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.459000000005264e-06, 5.471999999999422e-06, 4.374999999993967e-06, 4.443999999999282e-06, 4.9589999999988255e-06, 4.444000000006221e-06, 4.930000000000212e-06, 4.971999999998922e-06, 4.903000000000546e-06, 4.9449999999992555e-06, 4.9589999999988255e-06]</msg>
<status status="PASS" starttime="20201112 10:14:35.094" endtime="20201112 10:14:35.097"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.082" endtime="20201112 10:14:35.099"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.105" endtime="20201112 10:14:35.108"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:35.113" endtime="20201112 10:14:35.135"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.109" endtime="20201112 10:14:35.137"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.101" endtime="20201112 10:14:35.138"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.596" endtime="20201112 10:14:35.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.595" endtime="20201112 10:14:35.139"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.162" endtime="20201112 10:14:35.180"></status>
</kw>
<msg timestamp="20201112 10:14:35.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:35.158" endtime="20201112 10:14:35.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:35.183" endtime="20201112 10:14:35.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.189" endtime="20201112 10:14:35.193"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.151" endtime="20201112 10:14:35.195"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.145" endtime="20201112 10:14:35.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.212" endtime="20201112 10:14:35.543"></status>
</kw>
<msg timestamp="20201112 10:14:35.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041634236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041640708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:35.209" endtime="20201112 10:14:35.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041634236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041640708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:35.553" endtime="20201112 10:14:35.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.572" endtime="20201112 10:14:35.576"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.202" endtime="20201112 10:14:35.577"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.197" endtime="20201112 10:14:35.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:35.589" level="INFO">${RESULT} = [{'time': 0.041640708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.041655611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:35.580" endtime="20201112 10:14:35.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:35.621" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:35.591" endtime="20201112 10:14:35.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.632" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 10:14:35.630" endtime="20201112 10:14:35.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.637" level="INFO">VALUE: [6.472000000000422e-06, 5.944000000000782e-06, 5.4589999999993255e-06, 6.444000000001282e-06, 5.985999999999492e-06, 5.930000000001212e-06, 5.444999999999756e-06, 5.444000000000282e-06, 5.4589999999993255e-06, 5.957999999993413e-06, 5.930000000001212e-06, 5.931000000000686e-06, 5.931000000000686e-06, 5.375000000001906e-06, 6.458000000000852e-06, 5.444999999999756e-06, 5.999999999999062e-06, 5.444999999999756e-06, 5.958000000000352e-06, 5.4589999999993255e-06, 5.444000000000282e-06, 5.4589999999993255e-06, 5.931000000000686e-06, 5.945000000000256e-06, 5.958000000000352e-06, 5.51400000000507e-06, 5.4589999999993255e-06, 6.471999999993483e-06, 5.958000000000352e-06, 5.444000000000282e-06, 5.971999999999922e-06, 6.0279999999982015e-06, 6.444000000001282e-06, 5.444999999999756e-06, 5.444000000000282e-06, 5.958000000000352e-06, 5.944000000000782e-06, 5.403000000001046e-06, 5.417000000000616e-06, 6.04200000000471e-06, 5.443999999993343e-06, 5.958000000000352e-06, 5.431000000000186e-06, 5.457999999999852e-06, 5.971999999999922e-06, 5.931000000000686e-06, 5.945000000000256e-06, 5.958000000000352e-06, 5.5000000000055005e-06, 5.930000000001212e-06]</msg>
<status status="PASS" starttime="20201112 10:14:35.634" endtime="20201112 10:14:35.638"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.623" endtime="20201112 10:14:35.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.646" endtime="20201112 10:14:35.649"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:35.654" endtime="20201112 10:14:35.676"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.650" endtime="20201112 10:14:35.677"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.642" endtime="20201112 10:14:35.679"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.141" endtime="20201112 10:14:35.679"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.140" endtime="20201112 10:14:35.680"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.702" endtime="20201112 10:14:35.720"></status>
</kw>
<msg timestamp="20201112 10:14:35.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:35.699" endtime="20201112 10:14:35.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:35.724" endtime="20201112 10:14:35.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.730" endtime="20201112 10:14:35.733"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.692" endtime="20201112 10:14:35.735"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.686" endtime="20201112 10:14:35.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.754" endtime="20201112 10:14:36.088"></status>
</kw>
<msg timestamp="20201112 10:14:36.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041250889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041257333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:35.750" endtime="20201112 10:14:36.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041250889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041257333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:36.097" endtime="20201112 10:14:36.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.116" endtime="20201112 10:14:36.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.742" endtime="20201112 10:14:36.121"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.738" endtime="20201112 10:14:36.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:36.133" level="INFO">${RESULT} = [{'time': 0.041257333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.444000000001282e-06, 'source_diff': 6.444000000001282e-06}, {'time': 0.041269444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:36.124" endtime="20201112 10:14:36.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:36.167" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:36.135" endtime="20201112 10:14:36.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.177" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 10:14:36.175" endtime="20201112 10:14:36.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.183" level="INFO">VALUE: [6.444000000001282e-06, 6.472000000000422e-06, 6.945000000001256e-06, 6.9730000000003955e-06, 6.972000000000922e-06, 6.458000000000852e-06, 6.472000000000422e-06, 6.444000000001282e-06, 6.417000000001616e-06, 6.431000000001186e-06, 6.472000000000422e-06, 6.445000000000756e-06, 6.972000000000922e-06, 6.458000000000852e-06, 6.958000000001352e-06, 6.972000000000922e-06, 6.959000000000826e-06, 7.0280000000061404e-06, 6.445000000000756e-06, 6.499999999999562e-06, 6.458000000000852e-06, 6.972000000000922e-06, 6.445000000000756e-06, 7.402999999996107e-06, 6.931000000001686e-06, 6.457999999993913e-06, 6.485999999999992e-06, 6.458000000000852e-06, 6.444000000001282e-06, 6.472000000000422e-06, 6.459000000000326e-06, 6.458000000000852e-06, 6.903000000002546e-06, 6.458000000000852e-06, 6.444000000001282e-06, 6.472000000000422e-06, 6.945000000001256e-06, 6.944000000001782e-06, 6.401999999995633e-06, 6.444000000001282e-06, 6.958000000001352e-06, 6.916000000002642e-06, 6.972000000000922e-06, 6.458000000000852e-06, 6.445000000000756e-06, 6.444000000001282e-06, 6.916999999995177e-06, 6.945000000001256e-06, 6.945000000001256e-06, 6.943999999994843e-06]</msg>
<status status="PASS" starttime="20201112 10:14:36.180" endtime="20201112 10:14:36.184"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.168" endtime="20201112 10:14:36.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.191" endtime="20201112 10:14:36.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:36.200" endtime="20201112 10:14:36.221"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.195" endtime="20201112 10:14:36.223"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.187" endtime="20201112 10:14:36.224"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.682" endtime="20201112 10:14:36.225"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.681" endtime="20201112 10:14:36.225"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.248" endtime="20201112 10:14:36.265"></status>
</kw>
<msg timestamp="20201112 10:14:36.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.244" endtime="20201112 10:14:36.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.269" endtime="20201112 10:14:36.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.275" endtime="20201112 10:14:36.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.237" endtime="20201112 10:14:36.281"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.232" endtime="20201112 10:14:36.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.299" endtime="20201112 10:14:36.631"></status>
</kw>
<msg timestamp="20201112 10:14:36.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041246986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041254444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:36.295" endtime="20201112 10:14:36.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041246986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041254444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:36.640" endtime="20201112 10:14:36.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.659" endtime="20201112 10:14:36.663"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.288" endtime="20201112 10:14:36.664"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.284" endtime="20201112 10:14:36.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:36.676" level="INFO">${RESULT} = [{'time': 0.041254444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.041266347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:36.667" endtime="20201112 10:14:36.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:36.708" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:36.678" endtime="20201112 10:14:36.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.719" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 10:14:36.717" endtime="20201112 10:14:36.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.724" level="INFO">VALUE: [7.458000000001852e-06, 7.944000000002782e-06, 7.944000000002782e-06, 7.945000000002256e-06, 7.430000000002712e-06, 7.430000000002712e-06, 7.458000000001852e-06, 8.486000000001992e-06, 7.445000000001756e-06, 7.486000000000992e-06, 7.945000000002256e-06, 7.944000000002782e-06, 7.944000000002782e-06, 7.403000000003046e-06, 7.471999999994483e-06, 7.959000000001826e-06, 7.458000000001852e-06, 7.445000000001756e-06, 7.958000000002352e-06, 8.014000000000632e-06, 7.958000000002352e-06, 7.457999999994913e-06, 7.431000000002186e-06, 7.958000000002352e-06, 7.458999999994387e-06, 7.375000000003906e-06, 7.915999999996703e-06, 7.458000000001852e-06, 7.443999999995343e-06, 7.444000000002282e-06, 7.945000000002256e-06, 7.944000000002782e-06, 7.945000000002256e-06, 7.931000000002686e-06, 7.457999999994913e-06, 7.958000000002352e-06, 7.389000000003476e-06, 7.472000000001422e-06, 7.429999999995773e-06, 7.957999999995413e-06, 7.958000000002352e-06, 7.459000000001326e-06, 7.375000000003906e-06, 7.444999999994817e-06, 7.930999999995747e-06, 7.443999999995343e-06, 7.416999999995677e-06, 7.971999999994983e-06, 7.458000000001852e-06, 7.500000000000562e-06]</msg>
<status status="PASS" starttime="20201112 10:14:36.721" endtime="20201112 10:14:36.725"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.710" endtime="20201112 10:14:36.727"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.733" endtime="20201112 10:14:36.736"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:36.741" endtime="20201112 10:14:36.763"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.737" endtime="20201112 10:14:36.764"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.728" endtime="20201112 10:14:36.766"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.227" endtime="20201112 10:14:36.766"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.226" endtime="20201112 10:14:36.767"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.789" endtime="20201112 10:14:36.808"></status>
</kw>
<msg timestamp="20201112 10:14:36.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.786" endtime="20201112 10:14:36.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.811" endtime="20201112 10:14:36.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.817" endtime="20201112 10:14:36.821"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.779" endtime="20201112 10:14:36.823"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.773" endtime="20201112 10:14:36.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.840" endtime="20201112 10:14:37.171"></status>
</kw>
<msg timestamp="20201112 10:14:37.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042130986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042139917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:36.837" endtime="20201112 10:14:37.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042130986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042139917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:37.175" endtime="20201112 10:14:37.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.184" endtime="20201112 10:14:37.186"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.830" endtime="20201112 10:14:37.186"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.825" endtime="20201112 10:14:37.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:37.192" level="INFO">${RESULT} = [{'time': 0.042139917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.930999999996747e-06, 'source_diff': 8.930999999996747e-06}, {'time': 0.042163778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:37.188" endtime="20201112 10:14:37.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:37.206" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:37.193" endtime="20201112 10:14:37.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.212" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 10:14:37.210" endtime="20201112 10:14:37.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.214" level="INFO">VALUE: [8.930999999996747e-06, 8.444999999995817e-06, 9.458999999996387e-06, 8.375000000004906e-06, 8.457999999995913e-06, 8.417000000003616e-06, 8.972000000002922e-06, 8.416999999996677e-06, 8.430999999996247e-06, 9.472999999995957e-06, 8.444000000003282e-06, 8.472000000002422e-06, 8.944000000003782e-06, 8.931000000003686e-06, 9.514000000002132e-06, 8.943999999996843e-06, 8.457999999995913e-06, 8.943999999996843e-06, 8.957999999996413e-06, 8.430000000003712e-06, 8.471999999995483e-06, 8.874999999998467e-06, 8.958999999995887e-06, 8.443999999996343e-06, 8.443999999996343e-06, 8.930000000004212e-06, 8.916000000004642e-06, 9.457999999996913e-06, 9.458000000003852e-06, 8.388999999997537e-06, 8.458000000002852e-06, 8.943999999996843e-06, 8.957999999996413e-06, 8.972000000002922e-06, 8.958000000003352e-06, 8.444999999995817e-06, 8.957999999996413e-06, 8.444000000003282e-06, 8.916999999997177e-06, 8.444999999995817e-06, 8.444000000003282e-06, 8.473000000001896e-06, 9.444000000004282e-06, 8.945000000003256e-06, 8.944999999996317e-06, 8.444999999995817e-06, 8.943999999996843e-06, 9.472000000003422e-06, 8.486000000001992e-06, 8.458000000002852e-06]</msg>
<status status="PASS" starttime="20201112 10:14:37.213" endtime="20201112 10:14:37.215"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.207" endtime="20201112 10:14:37.215"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.218" endtime="20201112 10:14:37.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:37.222" endtime="20201112 10:14:37.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.220" endtime="20201112 10:14:37.242"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.216" endtime="20201112 10:14:37.243"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.769" endtime="20201112 10:14:37.243"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.768" endtime="20201112 10:14:37.243"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.254" endtime="20201112 10:14:37.269"></status>
</kw>
<msg timestamp="20201112 10:14:37.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:37.253" endtime="20201112 10:14:37.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:37.271" endtime="20201112 10:14:37.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.274" endtime="20201112 10:14:37.276"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.249" endtime="20201112 10:14:37.276"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.247" endtime="20201112 10:14:37.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.285" endtime="20201112 10:14:37.605"></status>
</kw>
<msg timestamp="20201112 10:14:37.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024715472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024724931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:37.283" endtime="20201112 10:14:37.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024715472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024724931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:37.614" endtime="20201112 10:14:37.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.633" endtime="20201112 10:14:37.636"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.280" endtime="20201112 10:14:37.638"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.278" endtime="20201112 10:14:37.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:37.650" level="INFO">${RESULT} = [{'time': 0.024724931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.458999999999856e-06, 'source_diff': 9.458999999999856e-06}, {'time': 0.024741694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:37.641" endtime="20201112 10:14:37.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:37.681" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:37.652" endtime="20201112 10:14:37.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.692" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 10:14:37.689" endtime="20201112 10:14:37.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.698" level="INFO">VALUE: [9.458999999999856e-06, 9.444000000000813e-06, 9.458000000000383e-06, 9.931000000001217e-06, 9.429999999997773e-06, 9.957999999997413e-06, 9.944000000001313e-06, 9.958000000000883e-06, 9.945000000000787e-06, 9.445000000000286e-06, 9.458999999999856e-06, 9.931000000001217e-06, 9.458999999999856e-06, 9.957999999997413e-06, 9.957999999997413e-06, 9.430000000001243e-06, 1.0473000000000426e-05, 1.0445000000001287e-05, 9.445000000000286e-06, 9.457999999996913e-06, 9.458000000000383e-06, 9.445000000000286e-06, 9.972000000000453e-06, 9.471999999999953e-06, 9.958000000000883e-06, 9.402999999998107e-06, 9.959000000000356e-06, 9.444000000000813e-06, 9.944000000001313e-06, 9.444000000000813e-06, 9.416000000001673e-06, 9.958000000000883e-06, 9.458999999999856e-06, 9.444000000000813e-06, 9.944000000001313e-06, 9.931000000001217e-06, 9.943999999997843e-06, 9.958000000000883e-06, 9.485999999999523e-06, 9.959000000000356e-06, 9.958000000000883e-06, 9.943999999997843e-06, 9.957999999997413e-06, 9.958000000000883e-06, 9.959000000000356e-06, 9.486999999998996e-06, 9.485999999999523e-06, 9.931000000001217e-06, 9.958000000000883e-06, 9.431000000000717e-06]</msg>
<status status="PASS" starttime="20201112 10:14:37.694" endtime="20201112 10:14:37.699"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.683" endtime="20201112 10:14:37.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.707" endtime="20201112 10:14:37.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:37.716" endtime="20201112 10:14:37.737"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.712" endtime="20201112 10:14:37.739"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.703" endtime="20201112 10:14:37.741"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.244" endtime="20201112 10:14:37.741"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.244" endtime="20201112 10:14:37.742"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.764" endtime="20201112 10:14:37.781"></status>
</kw>
<msg timestamp="20201112 10:14:37.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:37.761" endtime="20201112 10:14:37.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:37.784" endtime="20201112 10:14:37.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.791" endtime="20201112 10:14:37.794"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.754" endtime="20201112 10:14:37.796"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.748" endtime="20201112 10:14:37.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.814" endtime="20201112 10:14:38.148"></status>
</kw>
<msg timestamp="20201112 10:14:38.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041154333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041165292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:37.810" endtime="20201112 10:14:38.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041154333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041165292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:38.157" endtime="20201112 10:14:38.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.176" endtime="20201112 10:14:38.179"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.803" endtime="20201112 10:14:38.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.799" endtime="20201112 10:14:38.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:38.193" level="INFO">${RESULT} = [{'time': 0.041165292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0958999999997887e-05, 'source_diff': 1.0958999999997887e-05}, {'time': 0.041178542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:38.184" endtime="20201112 10:14:38.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:38.225" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:38.195" endtime="20201112 10:14:38.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.236" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 10:14:38.234" endtime="20201112 10:14:38.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.241" level="INFO">VALUE: [1.0958999999997887e-05, 1.0958999999997887e-05, 1.0444999999997817e-05, 1.0457999999997913e-05, 1.0985999999997553e-05, 1.0443999999998343e-05, 1.1443999999999344e-05, 1.1443999999999344e-05, 1.1444999999998817e-05, 1.1471999999998483e-05, 1.0915999999999704e-05, 1.0944999999998317e-05, 1.0957999999998413e-05, 1.0902999999999607e-05, 1.0971999999997983e-05, 1.0445000000004756e-05, 1.0958999999997887e-05, 1.0458999999997387e-05, 1.0443999999998343e-05, 1.0444999999997817e-05, 1.0458999999997387e-05, 1.0944000000005782e-05, 1.0957999999998413e-05, 1.1000000000004062e-05, 1.0943999999998844e-05, 1.0444999999997817e-05, 1.1457999999998913e-05, 1.0457999999997913e-05, 1.0944999999998317e-05, 1.0457999999997913e-05, 1.0957999999998413e-05, 1.0902000000000134e-05, 1.0444999999997817e-05, 1.0485999999997053e-05, 1.0458000000004852e-05, 1.0957999999998413e-05, 1.0443999999998343e-05, 1.0943999999998844e-05, 1.0472000000004422e-05, 1.0402999999999107e-05, 1.1430999999999247e-05, 1.0930999999998747e-05, 1.0388000000000064e-05, 1.0443999999998343e-05, 1.0958000000005352e-05, 1.0443999999998343e-05, 1.0930999999998747e-05, 1.1443999999999344e-05, 1.0444000000005282e-05, 1.0944999999998317e-05]</msg>
<status status="PASS" starttime="20201112 10:14:38.238" endtime="20201112 10:14:38.243"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.227" endtime="20201112 10:14:38.244"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.251" endtime="20201112 10:14:38.255"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:38.260" endtime="20201112 10:14:38.282"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.256" endtime="20201112 10:14:38.284"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.246" endtime="20201112 10:14:38.285"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.744" endtime="20201112 10:14:38.286"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.742" endtime="20201112 10:14:38.286"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.308" endtime="20201112 10:14:38.326"></status>
</kw>
<msg timestamp="20201112 10:14:38.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.305" endtime="20201112 10:14:38.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.329" endtime="20201112 10:14:38.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.336" endtime="20201112 10:14:38.339"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.298" endtime="20201112 10:14:38.341"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.292" endtime="20201112 10:14:38.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.359" endtime="20201112 10:14:38.693"></status>
</kw>
<msg timestamp="20201112 10:14:38.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041499139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041511097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:38.355" endtime="20201112 10:14:38.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041499139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041511097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:38.703" endtime="20201112 10:14:38.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.721" endtime="20201112 10:14:38.725"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.348" endtime="20201112 10:14:38.727"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.344" endtime="20201112 10:14:38.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:38.738" level="INFO">${RESULT} = [{'time': 0.041511097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1957999999999414e-05, 'source_diff': 1.1957999999999414e-05}, {'time': 0.041527194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:38.730" endtime="20201112 10:14:38.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:38.769" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:38.741" endtime="20201112 10:14:38.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.780" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 10:14:38.778" endtime="20201112 10:14:38.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.786" level="INFO">VALUE: [1.1957999999999414e-05, 1.1916000000000704e-05, 1.1971999999998983e-05, 1.1443999999999344e-05, 1.1959000000005826e-05, 1.1943999999999844e-05, 1.1458999999998387e-05, 1.1943999999999844e-05, 1.1943999999999844e-05, 1.1443999999999344e-05, 1.1403000000000107e-05, 1.1458000000005852e-05, 1.1930000000000274e-05, 1.1444999999998817e-05, 1.1958999999998887e-05, 1.1473000000004896e-05, 1.1957999999999414e-05, 1.1972999999998457e-05, 1.1429999999999774e-05, 1.1930999999999747e-05, 1.1930000000000274e-05, 1.1971999999998983e-05, 1.1943999999999844e-05, 1.1930000000000274e-05, 1.1444999999998817e-05, 1.1416000000000204e-05, 1.1916000000000704e-05, 1.1430999999999247e-05, 1.2458999999999387e-05, 1.1957999999999414e-05, 1.2457999999999914e-05, 1.2431000000000247e-05, 1.1958999999998887e-05, 1.1958000000006352e-05, 1.1444999999998817e-05, 1.1443999999999344e-05, 1.1971999999998983e-05, 1.1458999999998387e-05, 1.1444000000006282e-05, 1.1860999999994959e-05, 1.1958999999998887e-05, 1.1958999999998887e-05, 1.2013999999997693e-05, 1.1472999999997957e-05, 1.1943999999999844e-05, 1.1944999999999317e-05, 1.1930000000000274e-05, 1.1416999999999677e-05, 1.1959000000005826e-05, 1.1431000000006186e-05]</msg>
<status status="PASS" starttime="20201112 10:14:38.783" endtime="20201112 10:14:38.787"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.771" endtime="20201112 10:14:38.789"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.795" endtime="20201112 10:14:38.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:38.803" endtime="20201112 10:14:38.825"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.799" endtime="20201112 10:14:38.827"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.791" endtime="20201112 10:14:38.828"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.288" endtime="20201112 10:14:38.829"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.287" endtime="20201112 10:14:38.829"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.853" endtime="20201112 10:14:38.872"></status>
</kw>
<msg timestamp="20201112 10:14:38.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.850" endtime="20201112 10:14:38.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.875" endtime="20201112 10:14:38.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.881" endtime="20201112 10:14:38.885"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.843" endtime="20201112 10:14:38.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.835" endtime="20201112 10:14:38.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.904" endtime="20201112 10:14:39.237"></status>
</kw>
<msg timestamp="20201112 10:14:39.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043038472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043050917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:38.901" endtime="20201112 10:14:39.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043038472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043050917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:39.246" endtime="20201112 10:14:39.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.265" endtime="20201112 10:14:39.269"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.894" endtime="20201112 10:14:39.270"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.889" endtime="20201112 10:14:39.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:39.282" level="INFO">${RESULT} = [{'time': 0.043050917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2444999999999817e-05, 'source_diff': 1.2444999999999817e-05}, {'time': 0.043076917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:39.273" endtime="20201112 10:14:39.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:39.313" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:39.284" endtime="20201112 10:14:39.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.324" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 10:14:39.322" endtime="20201112 10:14:39.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.329" level="INFO">VALUE: [1.2444999999999817e-05, 1.2458999999999387e-05, 1.2431000000000247e-05, 1.2958000000000414e-05, 1.3000000000006062e-05, 1.2930000000001274e-05, 1.2944000000000844e-05, 1.2388999999994599e-05, 1.2916000000001704e-05, 1.2999999999999123e-05, 1.2958999999999887e-05, 1.2944000000000844e-05, 1.2945000000000317e-05, 1.2457999999999914e-05, 1.2444000000000344e-05, 1.3013999999998693e-05, 1.2944000000000844e-05, 1.2444000000000344e-05, 1.2444000000000344e-05, 1.2930000000001274e-05, 1.3444000000001344e-05, 1.2444999999999817e-05, 1.2457999999999914e-05, 1.2513999999998193e-05, 1.2985999999999553e-05, 1.2457999999999914e-05, 1.3431000000001247e-05, 1.2958000000000414e-05, 1.2944000000000844e-05, 1.2945000000000317e-05, 1.2930000000001274e-05, 1.2944000000000844e-05, 1.2917000000001178e-05, 1.2444000000000344e-05, 1.2944000000000844e-05, 1.2444000000000344e-05, 1.2945000000000317e-05, 1.2958999999999887e-05, 1.2457999999999914e-05, 1.3458000000000914e-05, 1.2471999999999483e-05, 1.2903000000001608e-05, 1.2417000000000677e-05, 1.2945000000000317e-05, 1.2499999999998623e-05, 1.2958000000000414e-05, 1.3013999999998693e-05, 1.2971999999999984e-05, 1.2931000000000747e-05, 1.2945000000000317e-05]</msg>
<status status="PASS" starttime="20201112 10:14:39.326" endtime="20201112 10:14:39.331"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.315" endtime="20201112 10:14:39.333"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.339" endtime="20201112 10:14:39.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:39.347" endtime="20201112 10:14:39.368"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.343" endtime="20201112 10:14:39.370"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.334" endtime="20201112 10:14:39.372"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.831" endtime="20201112 10:14:39.372"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.830" endtime="20201112 10:14:39.373"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.395" endtime="20201112 10:14:39.414"></status>
</kw>
<msg timestamp="20201112 10:14:39.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.392" endtime="20201112 10:14:39.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.417" endtime="20201112 10:14:39.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.424" endtime="20201112 10:14:39.427"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.385" endtime="20201112 10:14:39.429"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.379" endtime="20201112 10:14:39.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.447" endtime="20201112 10:14:39.779"></status>
</kw>
<msg timestamp="20201112 10:14:39.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042732778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04274675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:39.443" endtime="20201112 10:14:39.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042732778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04274675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:39.788" endtime="20201112 10:14:39.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.807" endtime="20201112 10:14:39.811"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.436" endtime="20201112 10:14:39.812"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.432" endtime="20201112 10:14:39.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:39.824" level="INFO">${RESULT} = [{'time': 0.04274675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3972000000000984e-05, 'source_diff': 1.3972000000000984e-05}, {'time': 0.04277175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:39.815" endtime="20201112 10:14:39.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:39.855" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:39.826" endtime="20201112 10:14:39.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.866" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 10:14:39.864" endtime="20201112 10:14:39.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.871" level="INFO">VALUE: [1.3972000000000984e-05, 1.3971999999994045e-05, 1.3931000000001748e-05, 1.3944000000001844e-05, 1.4472000000001484e-05, 1.3431000000001247e-05, 1.3459000000000387e-05, 1.352699999999929e-05, 1.3973000000000457e-05, 1.3959000000000887e-05, 1.4429999999995835e-05, 1.3945000000001317e-05, 1.3445000000000817e-05, 1.3931000000001748e-05, 1.3472999999999957e-05, 1.3930000000002274e-05, 1.3459000000000387e-05, 1.3972000000000984e-05, 1.3443999999994405e-05, 1.3444000000001344e-05, 1.3444999999993879e-05, 1.3417000000001678e-05, 1.3457999999993975e-05, 1.3472000000000484e-05, 1.3430000000001774e-05, 1.3472999999999957e-05, 1.3944000000001844e-05, 1.3931000000001748e-05, 1.3959000000000887e-05, 1.3444000000001344e-05, 1.3472000000000484e-05, 1.3958000000001414e-05, 1.3944000000001844e-05, 1.4459000000001387e-05, 1.3959000000000887e-05, 1.3458000000000914e-05, 1.3472999999999957e-05, 1.3972000000000984e-05, 1.3944000000001844e-05, 1.3931000000001748e-05, 1.3458000000000914e-05, 1.3459000000000387e-05, 1.3458000000000914e-05, 1.3945000000001317e-05, 1.3971999999994045e-05, 1.3945000000001317e-05, 1.3472999999999957e-05, 1.3444000000001344e-05, 1.3945000000001317e-05, 1.3472999999999957e-05]</msg>
<status status="PASS" starttime="20201112 10:14:39.868" endtime="20201112 10:14:39.873"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.857" endtime="20201112 10:14:39.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.881" endtime="20201112 10:14:39.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:39.889" endtime="20201112 10:14:39.911"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.885" endtime="20201112 10:14:39.912"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.876" endtime="20201112 10:14:39.914"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.375" endtime="20201112 10:14:39.914"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.374" endtime="20201112 10:14:39.915"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.937" endtime="20201112 10:14:39.956"></status>
</kw>
<msg timestamp="20201112 10:14:39.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.934" endtime="20201112 10:14:39.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.959" endtime="20201112 10:14:39.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.965" endtime="20201112 10:14:39.969"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.927" endtime="20201112 10:14:39.971"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.921" endtime="20201112 10:14:39.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.990" endtime="20201112 10:14:40.323"></status>
</kw>
<msg timestamp="20201112 10:14:40.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041856389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041871333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:39.987" endtime="20201112 10:14:40.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041856389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041871333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:40.333" endtime="20201112 10:14:40.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.351" endtime="20201112 10:14:40.355"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.978" endtime="20201112 10:14:40.357"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.974" endtime="20201112 10:14:40.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:40.369" level="INFO">${RESULT} = [{'time': 0.041871333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4943999999995905e-05, 'source_diff': 1.4943999999995905e-05}, {'time': 0.041890542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:40.360" endtime="20201112 10:14:40.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:40.401" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:40.371" endtime="20201112 10:14:40.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.412" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 10:14:40.410" endtime="20201112 10:14:40.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.417" level="INFO">VALUE: [1.4943999999995905e-05, 1.5431000000003248e-05, 1.4445000000001817e-05, 1.4944999999995379e-05, 1.4943999999995905e-05, 1.4459000000001387e-05, 1.504100000000036e-05, 1.4472000000001484e-05, 1.4958000000002414e-05, 1.4458000000001914e-05, 1.5458000000002914e-05, 1.4500000000000624e-05, 1.4958000000002414e-05, 1.5458000000002914e-05, 1.4971999999995045e-05, 1.4443999999995405e-05, 1.4458000000001914e-05, 1.4486999999993588e-05, 1.4943999999995905e-05, 1.4444999999994879e-05, 1.4957999999995475e-05, 1.4458000000001914e-05, 1.5458000000002914e-05, 1.4957999999995475e-05, 1.4943999999995905e-05, 1.4957999999995475e-05, 1.4500000000000624e-05, 1.4457999999994975e-05, 1.4431000000002248e-05, 1.4958000000002414e-05, 1.4444999999994879e-05, 1.5389000000004538e-05, 1.4459000000001387e-05, 1.4457999999994975e-05, 1.4444999999994879e-05, 1.4458000000001914e-05, 1.4444000000002344e-05, 1.4874999999997529e-05, 1.4444000000002344e-05, 1.4945000000002318e-05, 1.4457999999994975e-05, 1.4930999999995809e-05, 1.4930999999995809e-05, 1.4874999999997529e-05, 1.4459000000001387e-05, 1.4458000000001914e-05, 1.4917000000003178e-05, 1.4417000000002678e-05, 1.4903000000003608e-05, 1.4472000000001484e-05]</msg>
<status status="PASS" starttime="20201112 10:14:40.414" endtime="20201112 10:14:40.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.403" endtime="20201112 10:14:40.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.427" endtime="20201112 10:14:40.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:40.435" endtime="20201112 10:14:40.456"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.431" endtime="20201112 10:14:40.458"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.422" endtime="20201112 10:14:40.460"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.917" endtime="20201112 10:14:40.460"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.916" endtime="20201112 10:14:40.461"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.483" endtime="20201112 10:14:40.501"></status>
</kw>
<msg timestamp="20201112 10:14:40.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.480" endtime="20201112 10:14:40.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.504" endtime="20201112 10:14:40.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.510" endtime="20201112 10:14:40.514"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.473" endtime="20201112 10:14:40.516"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.467" endtime="20201112 10:14:40.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.534" endtime="20201112 10:14:40.830"></status>
</kw>
<msg timestamp="20201112 10:14:40.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041180319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041195778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:40.530" endtime="20201112 10:14:40.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041180319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041195778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:40.840" endtime="20201112 10:14:40.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.858" endtime="20201112 10:14:40.862"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.523" endtime="20201112 10:14:40.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.518" endtime="20201112 10:14:40.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:40.876" level="INFO">${RESULT} = [{'time': 0.041195778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5459000000002387e-05, 'source_diff': 1.5459000000002387e-05}, {'time': 0.041224014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:40.867" endtime="20201112 10:14:40.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:40.906" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:40.878" endtime="20201112 10:14:40.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.917" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 10:14:40.915" endtime="20201112 10:14:40.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.923" level="INFO">VALUE: [1.5459000000002387e-05, 1.5945000000003318e-05, 1.537499999999803e-05, 1.594499999999638e-05, 1.5457999999995975e-05, 1.5945000000003318e-05, 1.5958000000003414e-05, 1.597299999999552e-05, 1.5458000000002914e-05, 1.5431000000003248e-05, 1.5443999999996405e-05, 1.5957999999996475e-05, 1.5500000000001624e-05, 1.5443999999996405e-05, 1.5944000000003844e-05, 1.5444000000003344e-05, 1.5417000000003678e-05, 1.5458000000002914e-05, 1.5958000000003414e-05, 1.5958000000003414e-05, 1.6443999999997405e-05, 1.5943999999996905e-05, 1.5443999999996405e-05, 1.5958000000003414e-05, 1.5958000000003414e-05, 1.5458000000002914e-05, 1.5445000000002818e-05, 1.5485999999995115e-05, 1.5929999999997335e-05, 1.5943999999996905e-05, 1.5958000000003414e-05, 1.5958000000003414e-05, 1.5943999999996905e-05, 1.597299999999552e-05, 1.5972000000002984e-05, 1.5972000000002984e-05, 1.5958000000003414e-05, 1.5958000000003414e-05, 1.5459000000002387e-05, 1.5986000000002554e-05, 1.5471999999995545e-05, 1.5957999999996475e-05, 1.5972000000002984e-05, 1.544499999999588e-05, 1.5473000000001957e-05, 1.594499999999638e-05, 1.593099999999681e-05, 1.5500000000001624e-05, 1.594499999999638e-05, 1.5903000000004608e-05]</msg>
<status status="PASS" starttime="20201112 10:14:40.919" endtime="20201112 10:14:40.924"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.908" endtime="20201112 10:14:40.926"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.932" endtime="20201112 10:14:40.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:40.940" endtime="20201112 10:14:40.962"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.936" endtime="20201112 10:14:40.964"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.928" endtime="20201112 10:14:40.965"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.463" endtime="20201112 10:14:40.966"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.462" endtime="20201112 10:14:40.966"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.988" endtime="20201112 10:14:41.007"></status>
</kw>
<msg timestamp="20201112 10:14:41.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.985" endtime="20201112 10:14:41.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.010" endtime="20201112 10:14:41.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.016" endtime="20201112 10:14:41.020"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.978" endtime="20201112 10:14:41.022"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.972" endtime="20201112 10:14:41.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.039" endtime="20201112 10:14:41.377"></status>
</kw>
<msg timestamp="20201112 10:14:41.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041311528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041329042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.036" endtime="20201112 10:14:41.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041311528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041329042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.387" endtime="20201112 10:14:41.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.406" endtime="20201112 10:14:41.409"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.029" endtime="20201112 10:14:41.411"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.024" endtime="20201112 10:14:41.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:41.423" level="INFO">${RESULT} = [{'time': 0.041329042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7514000000003194e-05, 'source_diff': 1.7514000000003194e-05}, {'time': 0.04135175, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 10:14:41.414" endtime="20201112 10:14:41.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:41.454" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:41.425" endtime="20201112 10:14:41.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.465" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 10:14:41.462" endtime="20201112 10:14:41.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.470" level="INFO">VALUE: [1.7514000000003194e-05, 1.6943999999997905e-05, 1.6417000000004678e-05, 1.644499999999688e-05, 1.6445000000003818e-05, 1.6527999999994825e-05, 1.741699999999874e-05, 1.6472000000003484e-05, 1.6972000000003984e-05, 1.7514000000003194e-05, 1.6945000000004318e-05, 1.6458000000003914e-05, 1.6945000000004318e-05, 1.691699999999824e-05, 1.6459000000003388e-05, 1.6445000000003818e-05, 1.6959000000003888e-05, 1.6929999999998335e-05, 1.6457999999996975e-05, 1.6957999999997475e-05, 1.6471999999996545e-05, 1.7471999999997545e-05, 1.7457999999997975e-05, 1.6457999999996975e-05, 1.6457999999996975e-05, 1.6957999999997475e-05, 1.6445000000003818e-05, 1.6445000000003818e-05, 1.6430000000004774e-05, 1.6945000000004318e-05, 1.6972000000003984e-05, 1.6943999999997905e-05, 1.6973000000003458e-05, 1.7499999999996685e-05, 1.6985999999996615e-05, 1.640299999999817e-05, 1.744499999999788e-05, 1.6431000000004248e-05, 1.6972000000003984e-05, 1.6973000000003458e-05, 1.7431000000005248e-05, 1.6445000000003818e-05, 1.645899999999645e-05, 1.6445000000003818e-05, 1.695899999999695e-05, 1.6958000000004414e-05, 1.694499999999738e-05, 1.6471999999996545e-05, 1.694499999999738e-05, 1.6945000000004318e-05]</msg>
<status status="PASS" starttime="20201112 10:14:41.467" endtime="20201112 10:14:41.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.456" endtime="20201112 10:14:41.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.479" endtime="20201112 10:14:41.482"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:41.487" endtime="20201112 10:14:41.509"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.483" endtime="20201112 10:14:41.511"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.475" endtime="20201112 10:14:41.512"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.968" endtime="20201112 10:14:41.513"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.967" endtime="20201112 10:14:41.513"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.536" endtime="20201112 10:14:41.553"></status>
</kw>
<msg timestamp="20201112 10:14:41.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.532" endtime="20201112 10:14:41.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.557" endtime="20201112 10:14:41.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.563" endtime="20201112 10:14:41.567"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.525" endtime="20201112 10:14:41.568"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.519" endtime="20201112 10:14:41.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.586" endtime="20201112 10:14:41.921"></status>
</kw>
<msg timestamp="20201112 10:14:41.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041389389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041407347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.583" endtime="20201112 10:14:41.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041389389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041407347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.931" endtime="20201112 10:14:41.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.949" endtime="20201112 10:14:41.955"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.576" endtime="20201112 10:14:41.956"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.571" endtime="20201112 10:14:41.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:41.968" level="INFO">${RESULT} = [{'time': 0.041407347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7957999999998475e-05, 'source_diff': 1.7957999999998475e-05}, {'time': 0.041428417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:41.959" endtime="20201112 10:14:41.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:41.999" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:41.970" endtime="20201112 10:14:41.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.010" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 10:14:42.008" endtime="20201112 10:14:42.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.015" level="INFO">VALUE: [1.7957999999998475e-05, 1.7959000000004888e-05, 1.794499999999838e-05, 1.7457999999997975e-05, 1.7944000000005844e-05, 1.794499999999838e-05, 1.7971999999998045e-05, 1.7957999999998475e-05, 1.802699999999685e-05, 1.7457999999997975e-05, 1.7485999999997115e-05, 1.7458000000004914e-05, 1.7985999999997615e-05, 1.7485999999997115e-05, 1.7430000000005774e-05, 1.7957999999998475e-05, 1.7445000000004818e-05, 1.7457999999997975e-05, 1.7457999999997975e-05, 1.7957999999998475e-05, 1.7971999999998045e-05, 1.7972000000004984e-05, 1.7943999999998905e-05, 1.794499999999838e-05, 1.741699999999874e-05, 1.7431000000005248e-05, 1.7957999999998475e-05, 1.7972000000004984e-05, 1.744499999999788e-05, 1.744499999999788e-05, 1.7443999999998405e-05, 1.7471999999997545e-05, 1.7971999999998045e-05, 1.7943999999998905e-05, 1.8459000000005388e-05, 1.7957999999998475e-05, 1.744499999999788e-05, 1.73889999999996e-05, 1.845899999999845e-05, 1.7444000000005344e-05, 1.795899999999795e-05, 1.7957999999998475e-05, 1.7444000000005344e-05, 1.7971999999998045e-05, 1.745899999999745e-05, 1.795899999999795e-05, 1.7513999999996255e-05, 1.7971999999998045e-05, 1.7443999999998405e-05, 1.7473000000003958e-05]</msg>
<status status="PASS" starttime="20201112 10:14:42.012" endtime="20201112 10:14:42.017"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.001" endtime="20201112 10:14:42.019"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.025" endtime="20201112 10:14:42.027"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:42.033" endtime="20201112 10:14:42.055"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.029" endtime="20201112 10:14:42.056"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.020" endtime="20201112 10:14:42.058"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.515" endtime="20201112 10:14:42.058"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.514" endtime="20201112 10:14:42.059"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.081" endtime="20201112 10:14:42.100"></status>
</kw>
<msg timestamp="20201112 10:14:42.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.078" endtime="20201112 10:14:42.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.103" endtime="20201112 10:14:42.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.109" endtime="20201112 10:14:42.113"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.071" endtime="20201112 10:14:42.115"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.065" endtime="20201112 10:14:42.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.132" endtime="20201112 10:14:42.467"></status>
</kw>
<msg timestamp="20201112 10:14:42.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041326125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041345083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:42.129" endtime="20201112 10:14:42.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041326125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041345083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:42.477" endtime="20201112 10:14:42.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.495" endtime="20201112 10:14:42.501"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.122" endtime="20201112 10:14:42.502"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.117" endtime="20201112 10:14:42.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:42.514" level="INFO">${RESULT} = [{'time': 0.041345083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8957999999999475e-05, 'source_diff': 1.8957999999999475e-05}, {'time': 0.041372194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:42.505" endtime="20201112 10:14:42.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:42.547" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:42.516" endtime="20201112 10:14:42.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.558" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 10:14:42.556" endtime="20201112 10:14:42.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.564" level="INFO">VALUE: [1.8957999999999475e-05, 1.8985999999998615e-05, 1.887500000000153e-05, 1.8957999999999475e-05, 1.8943999999999905e-05, 1.8485999999998115e-05, 1.8443999999999405e-05, 1.8943999999999905e-05, 1.88890000000011e-05, 1.847299999999802e-05, 1.8457999999998975e-05, 1.8457999999998975e-05, 1.8458000000005914e-05, 1.8457999999998975e-05, 1.8443999999999405e-05, 1.8457999999998975e-05, 1.897299999999852e-05, 1.8443999999999405e-05, 1.9471999999999545e-05, 1.9457999999999975e-05, 1.9042000000003834e-05, 1.895899999999895e-05, 1.8945000000006318e-05, 1.844499999999888e-05, 1.83890000000006e-05, 1.845899999999845e-05, 1.9527999999997825e-05, 1.8943999999999905e-05, 1.894499999999938e-05, 1.8471999999998545e-05, 1.8971999999999045e-05, 1.843099999999931e-05, 1.8971999999999045e-05, 1.8943999999999905e-05, 1.8943999999999905e-05, 1.8943999999999905e-05, 1.895899999999895e-05, 1.894499999999938e-05, 1.8541999999996395e-05, 1.843099999999931e-05, 1.845899999999845e-05, 1.894499999999938e-05, 1.8429999999999835e-05, 1.944499999999988e-05, 1.8957999999999475e-05, 1.8985999999998615e-05, 1.844499999999888e-05, 1.844499999999888e-05, 1.947299999999902e-05, 1.8457999999998975e-05]</msg>
<status status="PASS" starttime="20201112 10:14:42.561" endtime="20201112 10:14:42.565"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.549" endtime="20201112 10:14:42.567"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.573" endtime="20201112 10:14:42.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:42.581" endtime="20201112 10:14:42.603"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.577" endtime="20201112 10:14:42.605"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.569" endtime="20201112 10:14:42.606"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.061" endtime="20201112 10:14:42.607"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.060" endtime="20201112 10:14:42.607"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.629" endtime="20201112 10:14:42.648"></status>
</kw>
<msg timestamp="20201112 10:14:42.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.626" endtime="20201112 10:14:42.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.651" endtime="20201112 10:14:42.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.657" endtime="20201112 10:14:42.661"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.619" endtime="20201112 10:14:42.662"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.613" endtime="20201112 10:14:42.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.680" endtime="20201112 10:14:43.012"></status>
</kw>
<msg timestamp="20201112 10:14:43.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041837236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041857208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:42.677" endtime="20201112 10:14:43.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041837236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041857208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.022" endtime="20201112 10:14:43.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.041" endtime="20201112 10:14:43.044"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.670" endtime="20201112 10:14:43.046"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.665" endtime="20201112 10:14:43.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:43.058" level="INFO">${RESULT} = [{'time': 0.041857208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9972000000000045e-05, 'source_diff': 1.9972000000000045e-05}, {'time': 0.041884264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:43.049" endtime="20201112 10:14:43.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:43.090" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:43.060" endtime="20201112 10:14:43.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.101" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 10:14:43.098" endtime="20201112 10:14:43.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.106" level="INFO">VALUE: [1.9972000000000045e-05, 1.9985999999999615e-05, 1.9485999999999115e-05, 1.986100000000296e-05, 1.995899999999995e-05, 1.9459000000006388e-05, 1.9430000000000835e-05, 1.9958000000000475e-05, 1.943100000000031e-05, 1.9972000000000045e-05, 1.9930000000001336e-05, 1.9944000000000905e-05, 1.9444000000000405e-05, 1.9944000000000905e-05, 1.944499999999988e-05, 1.9444000000000405e-05, 1.9916000000001766e-05, 1.9513999999998255e-05, 1.995899999999995e-05, 1.9444000000000405e-05, 1.944499999999988e-05, 1.9430000000000835e-05, 1.9457999999999975e-05, 1.9457999999999975e-05, 1.945899999999945e-05, 1.9958000000000475e-05, 1.9972000000000045e-05, 2.044500000000088e-05, 1.945899999999945e-05, 1.9444000000000405e-05, 1.941700000000074e-05, 2.0472000000000545e-05, 1.994500000000038e-05, 1.9958000000000475e-05, 1.9972000000000045e-05, 1.995899999999995e-05, 1.945899999999945e-05, 1.9957999999993536e-05, 1.991700000000124e-05, 2.0457999999994037e-05, 1.994500000000038e-05, 1.9445000000006818e-05, 1.9513999999998255e-05, 1.944499999999988e-05, 1.9471999999999545e-05, 1.945899999999945e-05, 1.994500000000038e-05, 1.9972000000000045e-05, 1.9958000000000475e-05, 1.945899999999945e-05]</msg>
<status status="PASS" starttime="20201112 10:14:43.103" endtime="20201112 10:14:43.107"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.092" endtime="20201112 10:14:43.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.115" endtime="20201112 10:14:43.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:43.124" endtime="20201112 10:14:43.145"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.119" endtime="20201112 10:14:43.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.111" endtime="20201112 10:14:43.148"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.609" endtime="20201112 10:14:43.149"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.608" endtime="20201112 10:14:43.149"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.172" endtime="20201112 10:14:43.191"></status>
</kw>
<msg timestamp="20201112 10:14:43.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.168" endtime="20201112 10:14:43.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.194" endtime="20201112 10:14:43.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.200" endtime="20201112 10:14:43.204"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.161" endtime="20201112 10:14:43.206"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.156" endtime="20201112 10:14:43.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.225" endtime="20201112 10:14:43.560"></status>
</kw>
<msg timestamp="20201112 10:14:43.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041334681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041359194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.221" endtime="20201112 10:14:43.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041334681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041359194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.570" endtime="20201112 10:14:43.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.588" endtime="20201112 10:14:43.592"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.214" endtime="20201112 10:14:43.594"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.209" endtime="20201112 10:14:43.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:43.606" level="INFO">${RESULT} = [{'time': 0.041359194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4513000000003782e-05, 'source_diff': 2.4513000000003782e-05}, {'time': 0.041402167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:43.597" endtime="20201112 10:14:43.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:43.638" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:43.608" endtime="20201112 10:14:43.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.649" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 10:14:43.646" endtime="20201112 10:14:43.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.654" level="INFO">VALUE: [2.4513000000003782e-05, 2.44169999999988e-05, 2.493099999999887e-05, 2.5014000000003755e-05, 2.406900000000156e-05, 2.484700000000145e-05, 2.4236000000003866e-05, 2.486100000000102e-05, 2.5026999999996913e-05, 2.4792000000002645e-05, 2.488900000000016e-05, 2.4401999999999757e-05, 2.486100000000102e-05, 2.455500000000249e-05, 2.4264000000003005e-05, 2.490299999999973e-05, 2.4514000000003255e-05, 2.49169999999993e-05, 2.4486000000004116e-05, 2.4207999999997787e-05, 2.5013999999996817e-05, 2.4236000000003866e-05, 2.4292000000002145e-05, 2.433300000000138e-05, 2.4320000000001285e-05, 2.490300000000667e-05, 2.490299999999973e-05, 2.498699999999715e-05, 2.4902000000000257e-05, 2.4250000000003435e-05, 2.4514000000003255e-05, 2.4250000000003435e-05, 2.412499999999984e-05, 2.4665999999999577e-05, 2.42369999999964e-05, 2.413899999999941e-05, 2.465299999999948e-05, 2.4276999999996163e-05, 2.4874999999993652e-05, 2.4068999999994622e-05, 2.4568999999995123e-05, 2.4957999999998537e-05, 2.49169999999993e-05, 2.465300000000642e-05, 2.4902000000000257e-05, 2.406900000000156e-05, 2.4264000000003005e-05, 2.40970000000007e-05, 2.4679999999999147e-05, 2.4208000000004726e-05]</msg>
<status status="PASS" starttime="20201112 10:14:43.651" endtime="20201112 10:14:43.655"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.640" endtime="20201112 10:14:43.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.664" endtime="20201112 10:14:43.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:43.672" endtime="20201112 10:14:43.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.667" endtime="20201112 10:14:43.695"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.659" endtime="20201112 10:14:43.696"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.151" endtime="20201112 10:14:43.697"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.150" endtime="20201112 10:14:43.697"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.720" endtime="20201112 10:14:43.739"></status>
</kw>
<msg timestamp="20201112 10:14:43.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.717" endtime="20201112 10:14:43.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.742" endtime="20201112 10:14:43.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.748" endtime="20201112 10:14:43.752"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.709" endtime="20201112 10:14:43.754"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.704" endtime="20201112 10:14:43.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.772" endtime="20201112 10:14:44.097"></status>
</kw>
<msg timestamp="20201112 10:14:44.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041367444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041392944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.768" endtime="20201112 10:14:44.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041367444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041392944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:44.101" endtime="20201112 10:14:44.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.109" endtime="20201112 10:14:44.111"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.761" endtime="20201112 10:14:44.112"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.756" endtime="20201112 10:14:44.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:44.117" level="INFO">${RESULT} = [{'time': 0.041392944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5499999999997747e-05, 'source_diff': 2.5499999999997747e-05}, {'time': 0.041432958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:44.113" endtime="20201112 10:14:44.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:44.132" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:44.118" endtime="20201112 10:14:44.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.137" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 10:14:44.136" endtime="20201112 10:14:44.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.139" level="INFO">VALUE: [2.5499999999997747e-05, 2.5818999999996373e-05, 2.5499999999997747e-05, 2.5985999999998677e-05, 2.5693999999999717e-05, 2.581900000000331e-05, 2.5999999999998247e-05, 2.5443999999999467e-05, 2.5429999999999897e-05, 2.5652999999993542e-05, 2.5792000000003645e-05, 2.6041999999996956e-05, 2.543099999999937e-05, 2.5485999999998177e-05, 2.5499999999997747e-05, 2.6056000000003465e-05, 2.586100000000202e-05, 2.594499999999944e-05, 2.588900000000116e-05, 2.5834000000002355e-05, 2.5985999999998677e-05, 2.5235999999997927e-05, 2.512500000000084e-05, 2.5735999999998427e-05, 2.594499999999944e-05, 2.5499999999997747e-05, 2.506900000000256e-05, 2.558300000000263e-05, 2.5250000000004436e-05, 2.5540999999996983e-05, 2.50970000000017e-05, 2.516700000000649e-05, 2.5902000000001257e-05, 2.5554999999996553e-05, 2.504100000000342e-05, 2.5000000000004186e-05, 2.5249999999997497e-05, 2.5277999999996636e-05, 2.5222000000005296e-05, 2.5292000000003145e-05, 2.569499999999919e-05, 2.505500000000299e-05, 2.50970000000017e-05, 2.5820000000002785e-05, 2.5555999999996026e-05, 2.50970000000017e-05, 2.515299999999998e-05, 2.590300000000073e-05, 2.515299999999998e-05, 2.558300000000263e-05]</msg>
<status status="PASS" starttime="20201112 10:14:44.138" endtime="20201112 10:14:44.140"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.133" endtime="20201112 10:14:44.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.144" endtime="20201112 10:14:44.145"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:44.148" endtime="20201112 10:14:44.168"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.146" endtime="20201112 10:14:44.170"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.142" endtime="20201112 10:14:44.172"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.699" endtime="20201112 10:14:44.173"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.698" endtime="20201112 10:14:44.173"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.195" endtime="20201112 10:14:44.215"></status>
</kw>
<msg timestamp="20201112 10:14:44.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.192" endtime="20201112 10:14:44.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.218" endtime="20201112 10:14:44.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.224" endtime="20201112 10:14:44.228"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.185" endtime="20201112 10:14:44.229"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.179" endtime="20201112 10:14:44.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.247" endtime="20201112 10:14:44.581"></status>
</kw>
<msg timestamp="20201112 10:14:44.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041520056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041546153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:44.244" endtime="20201112 10:14:44.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041520056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041546153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:44.591" endtime="20201112 10:14:44.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.609" endtime="20201112 10:14:44.613"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.237" endtime="20201112 10:14:44.615"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.232" endtime="20201112 10:14:44.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:44.627" level="INFO">${RESULT} = [{'time': 0.041546153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.60970000000027e-05, 'source_diff': 2.60970000000027e-05}, {'time': 0.041579153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:44.618" endtime="20201112 10:14:44.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:44.660" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:44.629" endtime="20201112 10:14:44.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.671" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 10:14:44.669" endtime="20201112 10:14:44.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.676" level="INFO">VALUE: [2.60970000000027e-05, 2.6320000000003285e-05, 2.6277999999997637e-05, 2.7013999999998817e-05, 2.6471999999999607e-05, 2.598699999999815e-05, 2.622299999999883e-05, 2.6276999999998163e-05, 2.6999999999999247e-05, 2.642999999999396e-05, 2.6235999999998927e-05, 2.634700000000295e-05, 2.6360999999995582e-05, 2.6402000000001757e-05, 2.631900000000381e-05, 2.6972000000000107e-05, 2.6471999999999607e-05, 2.687500000000259e-05, 2.64170000000008e-05, 2.6778000000005076e-05, 2.7027999999998387e-05, 2.605500000000399e-05, 2.6708000000000287e-05, 2.6250000000005436e-05, 2.6943999999994028e-05, 2.6485999999999177e-05, 2.6846999999996513e-05, 2.69170000000013e-05, 2.6084000000002605e-05, 2.6874999999995652e-05, 2.6528000000004825e-05, 2.6791999999997707e-05, 2.6291999999997206e-05, 2.6111999999994806e-05, 2.6749999999998997e-05, 2.694500000000044e-05, 2.6513999999998317e-05, 2.6902000000002257e-05, 2.6430000000000897e-05, 2.6304999999997303e-05, 2.6485999999999177e-05, 2.7013999999998817e-05, 2.6527999999997887e-05, 2.658300000000363e-05, 2.6944000000000967e-05, 2.6846999999996513e-05, 2.6624999999995402e-05, 2.611100000000227e-05, 2.6778000000005076e-05, 2.6930000000001397e-05]</msg>
<status status="PASS" starttime="20201112 10:14:44.673" endtime="20201112 10:14:44.678"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.662" endtime="20201112 10:14:44.680"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.686" endtime="20201112 10:14:44.688"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:44.694" endtime="20201112 10:14:44.715"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.690" endtime="20201112 10:14:44.717"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.681" endtime="20201112 10:14:44.719"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.175" endtime="20201112 10:14:44.719"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.174" endtime="20201112 10:14:44.719"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.742" endtime="20201112 10:14:44.761"></status>
</kw>
<msg timestamp="20201112 10:14:44.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.739" endtime="20201112 10:14:44.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.764" endtime="20201112 10:14:44.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.770" endtime="20201112 10:14:44.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.732" endtime="20201112 10:14:44.776"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.726" endtime="20201112 10:14:44.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.793" endtime="20201112 10:14:45.126"></status>
</kw>
<msg timestamp="20201112 10:14:45.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041413931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041441917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:44.790" endtime="20201112 10:14:45.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041413931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041441917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.136" endtime="20201112 10:14:45.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.155" endtime="20201112 10:14:45.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.783" endtime="20201112 10:14:45.160"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.778" endtime="20201112 10:14:45.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:45.172" level="INFO">${RESULT} = [{'time': 0.041441917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7986000000000677e-05, 'source_diff': 2.7986000000000677e-05}, {'time': 0.041484944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:45.163" endtime="20201112 10:14:45.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:45.203" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:45.174" endtime="20201112 10:14:45.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.215" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 10:14:45.212" endtime="20201112 10:14:45.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.221" level="INFO">VALUE: [2.7986000000000677e-05, 2.7180000000001647e-05, 2.788900000000316e-05, 2.788900000000316e-05, 2.7291999999998207e-05, 2.7096999999996763e-05, 2.715199999999557e-05, 2.7582999999997693e-05, 2.7624999999996402e-05, 2.7860999999997083e-05, 2.7208000000000787e-05, 2.7290999999998733e-05, 2.7986000000000677e-05, 2.8013999999999817e-05, 2.7582999999997693e-05, 2.7986000000000677e-05, 2.8026999999999913e-05, 2.758300000000463e-05, 2.7472000000000607e-05, 2.7554999999998553e-05, 2.7819000000005312e-05, 2.7930000000002397e-05, 2.7472000000000607e-05, 2.783300000000488e-05, 2.7263999999999067e-05, 2.7360999999996582e-05, 2.7916999999995362e-05, 2.79170000000023e-05, 2.715300000000198e-05, 2.7722000000000857e-05, 2.7263999999999067e-05, 2.7735999999993488e-05, 2.7833999999997416e-05, 2.716700000000155e-05, 2.743100000000137e-05, 2.7499999999999747e-05, 2.736100000000352e-05, 2.7347999999996486e-05, 2.7486000000000177e-05, 2.7319999999997346e-05, 2.7776999999999663e-05, 2.7194000000001217e-05, 2.7763999999999567e-05, 2.7082999999997193e-05, 2.737500000000309e-05, 2.8000000000000247e-05, 2.792999999999546e-05, 2.7332999999997443e-05, 2.7860999999997083e-05, 2.7527999999998887e-05]</msg>
<status status="PASS" starttime="20201112 10:14:45.218" endtime="20201112 10:14:45.230"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.205" endtime="20201112 10:14:45.232"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.238" endtime="20201112 10:14:45.241"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:45.246" endtime="20201112 10:14:45.268"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.242" endtime="20201112 10:14:45.269"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.234" endtime="20201112 10:14:45.271"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.722" endtime="20201112 10:14:45.272"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.721" endtime="20201112 10:14:45.272"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.295" endtime="20201112 10:14:45.315"></status>
</kw>
<msg timestamp="20201112 10:14:45.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.292" endtime="20201112 10:14:45.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.318" endtime="20201112 10:14:45.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.324" endtime="20201112 10:14:45.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.284" endtime="20201112 10:14:45.330"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.278" endtime="20201112 10:14:45.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.348" endtime="20201112 10:14:45.682"></status>
</kw>
<msg timestamp="20201112 10:14:45.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042643903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042672306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.344" endtime="20201112 10:14:45.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042643903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042672306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.691" endtime="20201112 10:14:45.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.710" endtime="20201112 10:14:45.714"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.337" endtime="20201112 10:14:45.715"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.333" endtime="20201112 10:14:45.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:45.727" level="INFO">${RESULT} = [{'time': 0.042672306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.840300000000323e-05, 'source_diff': 2.840300000000323e-05}, {'time': 0.042719306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:45.718" endtime="20201112 10:14:45.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:45.758" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:45.729" endtime="20201112 10:14:45.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.769" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 10:14:45.767" endtime="20201112 10:14:45.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.775" level="INFO">VALUE: [2.840300000000323e-05, 2.8430999999995432e-05, 2.8597999999997736e-05, 2.8541999999999457e-05, 2.812500000000384e-05, 2.8027999999999387e-05, 2.8514000000000317e-05, 2.869399999999578e-05, 2.8540999999999983e-05, 2.8486000000001177e-05, 2.8264000000000067e-05, 2.8860999999998083e-05, 2.8568999999999123e-05, 2.8596999999998263e-05, 2.8902999999996792e-05, 2.8236000000000927e-05, 2.8514000000000317e-05, 2.8972000000002107e-05, 2.8888999999997222e-05, 2.8264000000000067e-05, 2.816700000000255e-05, 2.9014000000000817e-05, 2.8735999999994488e-05, 2.8541999999999457e-05, 2.844500000000194e-05, 2.8624999999997403e-05, 2.8500000000000747e-05, 2.8527999999999887e-05, 2.8333999999997916e-05, 2.8097999999997236e-05, 2.813900000000341e-05, 2.8750000000000997e-05, 2.887500000000459e-05, 2.8319999999998346e-05, 2.9000000000001247e-05, 2.890199999999732e-05, 2.9028000000000387e-05, 2.888900000000416e-05, 2.8958000000002537e-05, 2.8860999999998083e-05, 2.8068999999998623e-05, 2.8694000000002717e-05, 2.842999999999596e-05, 2.861100000000477e-05, 2.8708000000002287e-05, 2.84170000000028e-05, 2.8374999999997152e-05, 2.8986000000001677e-05, 2.8264000000000067e-05, 2.8430999999995432e-05]</msg>
<status status="PASS" starttime="20201112 10:14:45.772" endtime="20201112 10:14:45.778"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.760" endtime="20201112 10:14:45.780"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.786" endtime="20201112 10:14:45.789"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:45.794" endtime="20201112 10:14:45.815"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.790" endtime="20201112 10:14:45.817"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.781" endtime="20201112 10:14:45.819"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.274" endtime="20201112 10:14:45.819"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.273" endtime="20201112 10:14:45.820"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.842" endtime="20201112 10:14:45.862"></status>
</kw>
<msg timestamp="20201112 10:14:45.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.839" endtime="20201112 10:14:45.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.865" endtime="20201112 10:14:45.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.871" endtime="20201112 10:14:45.875"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.832" endtime="20201112 10:14:45.876"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.826" endtime="20201112 10:14:45.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.894" endtime="20201112 10:14:46.229"></status>
</kw>
<msg timestamp="20201112 10:14:46.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041511972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041541806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.891" endtime="20201112 10:14:46.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041511972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041541806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.238" endtime="20201112 10:14:46.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.257" endtime="20201112 10:14:46.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.884" endtime="20201112 10:14:46.262"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.879" endtime="20201112 10:14:46.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:46.274" level="INFO">${RESULT} = [{'time': 0.041541806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9833999999999417e-05, 'source_diff': 2.9833999999999417e-05}, {'time': 0.041577806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:46.265" endtime="20201112 10:14:46.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:46.305" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:46.276" endtime="20201112 10:14:46.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.316" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 10:14:46.314" endtime="20201112 10:14:46.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.322" level="INFO">VALUE: [2.9833999999999417e-05, 2.99170000000043e-05, 2.9916000000004828e-05, 2.9541000000000983e-05, 2.9264000000001067e-05, 2.941599999999739e-05, 2.9430000000003897e-05, 2.9027000000000913e-05, 2.9860999999999083e-05, 2.9305000000000303e-05, 2.9138999999997472e-05, 2.9638999999997973e-05, 2.9972000000003107e-05, 2.9916999999997362e-05, 2.9596999999999263e-05, 2.993100000000387e-05, 2.9666999999997112e-05, 2.968100000000362e-05, 2.9083999999998666e-05, 3.0027999999994448e-05, 2.995900000000301e-05, 2.9847999999998986e-05, 2.938900000000466e-05, 2.9792000000000707e-05, 2.9888000000005688e-05, 2.9680000000004148e-05, 3.0012999999995404e-05, 2.994500000000344e-05, 2.9292000000000207e-05, 2.9277000000001163e-05, 2.9096999999998763e-05, 2.919399999999628e-05, 2.9791000000001233e-05, 2.9472000000002607e-05, 2.9485999999995238e-05, 2.9235999999994988e-05, 2.9236000000001927e-05, 2.9138999999997472e-05, 2.9542000000000457e-05, 2.9832999999999943e-05, 2.9236000000001927e-05, 2.9652999999997542e-05, 2.9569000000000123e-05, 3.0028000000001387e-05, 2.917999999999671e-05, 2.9944999999996502e-05, 2.9041999999999957e-05, 2.9652999999997542e-05, 2.9166999999996612e-05, 2.965300000000448e-05]</msg>
<status status="PASS" starttime="20201112 10:14:46.319" endtime="20201112 10:14:46.324"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.307" endtime="20201112 10:14:46.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.332" endtime="20201112 10:14:46.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:46.342" endtime="20201112 10:14:46.364"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.338" endtime="20201112 10:14:46.366"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.327" endtime="20201112 10:14:46.367"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.822" endtime="20201112 10:14:46.368"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.821" endtime="20201112 10:14:46.368"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.391" endtime="20201112 10:14:46.411"></status>
</kw>
<msg timestamp="20201112 10:14:46.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.388" endtime="20201112 10:14:46.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.414" endtime="20201112 10:14:46.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.420" endtime="20201112 10:14:46.424"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.381" endtime="20201112 10:14:46.426"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.375" endtime="20201112 10:14:46.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.443" endtime="20201112 10:14:46.777"></status>
</kw>
<msg timestamp="20201112 10:14:46.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041746625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041777569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.440" endtime="20201112 10:14:46.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041746625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041777569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.786" endtime="20201112 10:14:46.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.805" endtime="20201112 10:14:46.809"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.433" endtime="20201112 10:14:46.811"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.428" endtime="20201112 10:14:46.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:46.822" level="INFO">${RESULT} = [{'time': 0.041777569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.094399999999803e-05, 'source_diff': 3.094399999999803e-05}, {'time': 0.041818569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:46.814" endtime="20201112 10:14:46.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:46.855" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:46.825" endtime="20201112 10:14:46.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.866" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 10:14:46.864" endtime="20201112 10:14:46.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.872" level="INFO">VALUE: [3.094399999999803e-05, 3.055500000000155e-05, 3.058300000000069e-05, 3.015199999999857e-05, 3.015199999999857e-05, 3.0790999999995294e-05, 3.073600000000343e-05, 3.092999999999846e-05, 3.0040999999994544e-05, 3.0041000000001483e-05, 3.0333000000000443e-05, 3.102800000000239e-05, 3.0402999999998293e-05, 3.0041999999994018e-05, 3.047199999999667e-05, 3.0042000000000957e-05, 3.07779999999952e-05, 3.016700000000455e-05, 3.0250000000002497e-05, 3.073600000000343e-05, 3.098599999999674e-05, 3.0360999999999583e-05, 3.088899999999922e-05, 3.0750000000003e-05, 3.0166999999997612e-05, 3.016599999999814e-05, 3.019399999999728e-05, 3.0319999999993408e-05, 3.0319000000000873e-05, 3.0486000000003177e-05, 3.0790999999995294e-05, 3.091599999999889e-05, 3.063899999999897e-05, 3.015199999999857e-05, 3.0750000000003e-05, 3.063900000000591e-05, 3.011100000000627e-05, 3.0360999999999583e-05, 3.098599999999674e-05, 3.073599999999649e-05, 3.0430999999997432e-05, 3.0430999999997432e-05, 3.088899999999922e-05, 3.011100000000627e-05, 3.0278000000001637e-05, 3.088899999999922e-05, 3.018100000000412e-05, 3.0292000000001207e-05, 3.023599999999599e-05, 3.052799999999495e-05]</msg>
<status status="PASS" starttime="20201112 10:14:46.868" endtime="20201112 10:14:46.873"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.857" endtime="20201112 10:14:46.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.881" endtime="20201112 10:14:46.884"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:46.889" endtime="20201112 10:14:46.912"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.885" endtime="20201112 10:14:46.914"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.876" endtime="20201112 10:14:46.915"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.371" endtime="20201112 10:14:46.916"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.369" endtime="20201112 10:14:46.916"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.939" endtime="20201112 10:14:46.959"></status>
</kw>
<msg timestamp="20201112 10:14:46.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.936" endtime="20201112 10:14:46.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.962" endtime="20201112 10:14:46.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.969" endtime="20201112 10:14:46.972"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.928" endtime="20201112 10:14:46.974"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.923" endtime="20201112 10:14:46.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.992" endtime="20201112 10:14:47.332"></status>
</kw>
<msg timestamp="20201112 10:14:47.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043149056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043180986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.988" endtime="20201112 10:14:47.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043149056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043180986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:47.341" endtime="20201112 10:14:47.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.360" endtime="20201112 10:14:47.364"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.981" endtime="20201112 10:14:47.365"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.977" endtime="20201112 10:14:47.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:47.378" level="INFO">${RESULT} = [{'time': 0.043180986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.192999999999946e-05, 'source_diff': 3.192999999999946e-05}, {'time': 0.043228972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:47.369" endtime="20201112 10:14:47.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:47.398" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:47.380" endtime="20201112 10:14:47.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.404" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 10:14:47.403" endtime="20201112 10:14:47.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.406" level="INFO">VALUE: [3.192999999999946e-05, 3.152799999999595e-05, 3.169399999999878e-05, 3.126400000000307e-05, 3.170799999999835e-05, 3.118099999999818e-05, 3.117999999999871e-05, 3.138899999999972e-05, 3.1098000000000237e-05, 3.187500000000065e-05, 3.165300000000648e-05, 3.198600000000468e-05, 3.168100000000562e-05, 3.150000000000375e-05, 3.191699999999936e-05, 3.141699999999886e-05, 3.148699999999671e-05, 3.149999999999681e-05, 3.10700000000011e-05, 3.200000000000425e-05, 3.108400000000067e-05, 3.16250000000004e-05, 3.11249999999999e-05, 3.120799999999785e-05, 3.1262999999996655e-05, 3.137500000000015e-05, 3.150000000000375e-05, 3.115199999999957e-05, 3.201399999999688e-05, 3.166599999999964e-05, 3.149999999999681e-05, 3.144399999999853e-05, 3.190299999999979e-05, 3.159700000000126e-05, 3.166699999999911e-05, 3.152799999999595e-05, 3.173599999999749e-05, 3.16250000000004e-05, 3.197199999999817e-05, 3.111100000000033e-05, 3.104200000000196e-05, 3.202800000000339e-05, 3.143099999999843e-05, 3.188900000000022e-05, 3.1598000000000737e-05, 3.140199999999982e-05, 3.11249999999999e-05, 3.147200000000461e-05, 3.173699999999696e-05, 3.15700000000016e-05]</msg>
<status status="PASS" starttime="20201112 10:14:47.405" endtime="20201112 10:14:47.407"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.399" endtime="20201112 10:14:47.408"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.411" endtime="20201112 10:14:47.412"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:47.415" endtime="20201112 10:14:47.434"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.413" endtime="20201112 10:14:47.435"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.409" endtime="20201112 10:14:47.436"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.918" endtime="20201112 10:14:47.436"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.917" endtime="20201112 10:14:47.436"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.447" endtime="20201112 10:14:47.463"></status>
</kw>
<msg timestamp="20201112 10:14:47.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.446" endtime="20201112 10:14:47.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.465" endtime="20201112 10:14:47.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.468" endtime="20201112 10:14:47.470"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.442" endtime="20201112 10:14:47.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.439" endtime="20201112 10:14:47.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.479" endtime="20201112 10:14:47.793"></status>
</kw>
<msg timestamp="20201112 10:14:47.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025317847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025350528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:47.477" endtime="20201112 10:14:47.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025317847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025350528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:47.802" endtime="20201112 10:14:47.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.821" endtime="20201112 10:14:47.825"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.474" endtime="20201112 10:14:47.826"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.472" endtime="20201112 10:14:47.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:47.838" level="INFO">${RESULT} = [{'time': 0.025350528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.268099999999968e-05, 'source_diff': 3.268099999999968e-05}, {'time': 0.025389556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:47.829" endtime="20201112 10:14:47.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:47.869" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:47.840" endtime="20201112 10:14:47.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.880" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 10:14:47.878" endtime="20201112 10:14:47.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.885" level="INFO">VALUE: [3.268099999999968e-05, 3.273700000000143e-05, 3.222299999999789e-05, 3.3055000000000584e-05, 3.286200000000156e-05, 3.268000000000021e-05, 3.290199999999785e-05, 3.247200000000214e-05, 3.265200000000107e-05, 3.197200000000164e-05, 3.240300000000029e-05, 3.266700000000011e-05, 3.263900000000097e-05, 3.2277000000000694e-05, 3.2846999999999044e-05, 3.290300000000079e-05, 3.241699999999986e-05, 3.204199999999949e-05, 3.2596999999998794e-05, 3.268000000000021e-05, 3.29310000000034e-05, 3.230600000000278e-05, 3.201400000000035e-05, 3.298600000000221e-05, 3.283300000000294e-05, 3.263900000000097e-05, 3.259700000000226e-05, 3.206999999999863e-05, 3.2777000000001194e-05, 3.248599999999824e-05, 3.29449999999995e-05, 3.2262999999997655e-05, 3.286200000000156e-05, 3.2444999999999e-05, 3.2541000000000514e-05, 3.266600000000064e-05, 3.2068999999999154e-05, 3.223600000000146e-05, 3.223599999999799e-05, 3.2360999999998113e-05, 3.294400000000003e-05, 3.283300000000294e-05, 3.268000000000021e-05, 3.238900000000072e-05, 3.222199999999842e-05, 3.2138999999997e-05, 3.26250000000014e-05, 3.252800000000042e-05, 3.227800000000017e-05, 3.265299999999707e-05]</msg>
<status status="PASS" starttime="20201112 10:14:47.882" endtime="20201112 10:14:47.887"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.871" endtime="20201112 10:14:47.888"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.895" endtime="20201112 10:14:47.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:47.903" endtime="20201112 10:14:47.924"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.898" endtime="20201112 10:14:47.926"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.890" endtime="20201112 10:14:47.927"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.437" endtime="20201112 10:14:47.928"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.436" endtime="20201112 10:14:47.928"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.951" endtime="20201112 10:14:47.970"></status>
</kw>
<msg timestamp="20201112 10:14:47.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.948" endtime="20201112 10:14:47.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.973" endtime="20201112 10:14:47.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.980" endtime="20201112 10:14:47.985"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.941" endtime="20201112 10:14:47.987"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.935" endtime="20201112 10:14:47.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.005" endtime="20201112 10:14:48.338"></status>
</kw>
<msg timestamp="20201112 10:14:48.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042017958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042051167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.001" endtime="20201112 10:14:48.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042017958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042051167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.348" endtime="20201112 10:14:48.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.366" endtime="20201112 10:14:48.370"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.994" endtime="20201112 10:14:48.372"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.989" endtime="20201112 10:14:48.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:48.383" level="INFO">${RESULT} = [{'time': 0.042051167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.320899999999932e-05, 'source_diff': 3.320899999999932e-05}, {'time': 0.042091153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:48.375" endtime="20201112 10:14:48.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:48.414" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:48.385" endtime="20201112 10:14:48.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.426" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 10:14:48.423" endtime="20201112 10:14:48.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.432" level="INFO">VALUE: [3.320899999999932e-05, 3.306999999999616e-05, 3.323599999999899e-05, 3.359800000000274e-05, 3.3304999999997364e-05, 3.3445e-05, 3.298700000000515e-05, 3.341600000000139e-05, 3.390300000000179e-05, 3.370899999999982e-05, 3.356900000000412e-05, 3.341600000000139e-05, 3.337500000000215e-05, 3.369400000000078e-05, 3.341700000000086e-05, 3.3054999999997114e-05, 3.386100000000308e-05, 3.369400000000078e-05, 3.368100000000068e-05, 3.376400000000557e-05, 3.368100000000068e-05, 3.3527000000005414e-05, 3.322199999999942e-05, 3.343100000000043e-05, 3.399999999999931e-05, 3.393100000000093e-05, 3.316600000000114e-05, 3.391599999999495e-05, 3.341600000000139e-05, 3.366700000000111e-05, 3.402799999999845e-05, 3.343100000000043e-05, 3.366700000000111e-05, 3.395900000000007e-05, 3.3290999999997795e-05, 3.348599999999924e-05, 3.370800000000035e-05, 3.363900000000197e-05, 3.368000000000121e-05, 3.309700000000276e-05, 3.343000000000096e-05, 3.324999999999856e-05, 3.3805000000004803e-05, 3.330599999999684e-05, 3.329199999999727e-05, 3.399999999999931e-05, 3.402799999999845e-05, 3.3555000000004553e-05, 3.373599999999949e-05, 3.349999999999881e-05]</msg>
<status status="PASS" starttime="20201112 10:14:48.428" endtime="20201112 10:14:48.433"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.416" endtime="20201112 10:14:48.435"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.441" endtime="20201112 10:14:48.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:48.449" endtime="20201112 10:14:48.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.445" endtime="20201112 10:14:48.473"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.436" endtime="20201112 10:14:48.474"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.931" endtime="20201112 10:14:48.475"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.929" endtime="20201112 10:14:48.475"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.498" endtime="20201112 10:14:48.517"></status>
</kw>
<msg timestamp="20201112 10:14:48.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:48.494" endtime="20201112 10:14:48.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:48.520" endtime="20201112 10:14:48.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.526" endtime="20201112 10:14:48.530"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.487" endtime="20201112 10:14:48.532"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.482" endtime="20201112 10:14:48.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.551" endtime="20201112 10:14:48.901"></status>
</kw>
<msg timestamp="20201112 10:14:48.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041539833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041574347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.548" endtime="20201112 10:14:48.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041539833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041574347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.911" endtime="20201112 10:14:48.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.930" endtime="20201112 10:14:48.935"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.539" endtime="20201112 10:14:48.936"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.534" endtime="20201112 10:14:48.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:48.948" level="INFO">${RESULT} = [{'time': 0.041574347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.451399999999938e-05, 'source_diff': 3.451399999999938e-05}, {'time': 0.041618333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:48.939" endtime="20201112 10:14:48.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:48.981" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:48.950" endtime="20201112 10:14:48.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.992" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 10:14:48.990" endtime="20201112 10:14:48.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.998" level="INFO">VALUE: [3.451399999999938e-05, 3.440200000000282e-05, 3.415199999999563e-05, 3.416700000000161e-05, 3.458300000000469e-05, 3.423599999999999e-05, 3.42779999999987e-05, 3.448600000000024e-05, 3.44580000000011e-05, 3.431900000000487e-05, 3.502799999999945e-05, 3.443100000000143e-05, 3.466700000000211e-05, 3.500000000000031e-05, 3.466700000000211e-05, 3.415300000000204e-05, 3.447200000000067e-05, 3.4124999999995964e-05, 3.4790999999999295e-05, 3.455600000000503e-05, 3.4860999999997144e-05, 3.431999999999741e-05, 3.449999999999981e-05, 3.490200000000332e-05, 3.429199999999827e-05, 3.472200000000092e-05, 3.441700000000186e-05, 3.441600000000239e-05, 3.475000000000006e-05, 3.477800000000614e-05, 3.4596999999997324e-05, 3.420800000000085e-05, 3.440300000000229e-05, 3.461100000000383e-05, 3.449999999999981e-05, 3.448600000000024e-05, 3.4332999999997504e-05, 3.424999999999956e-05, 3.4124999999995964e-05, 3.4652999999995604e-05, 3.408300000000419e-05, 3.482000000000485e-05, 3.411100000000333e-05, 3.419500000000075e-05, 3.466700000000211e-05, 3.473699999999996e-05, 3.4096999999996824e-05, 3.404199999999802e-05, 3.495900000000107e-05, 3.424999999999956e-05]</msg>
<status status="PASS" starttime="20201112 10:14:48.995" endtime="20201112 10:14:48.999"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.983" endtime="20201112 10:14:49.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.007" endtime="20201112 10:14:49.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:49.016" endtime="20201112 10:14:49.038"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.011" endtime="20201112 10:14:49.039"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.003" endtime="20201112 10:14:49.041"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.477" endtime="20201112 10:14:49.042"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.476" endtime="20201112 10:14:49.042"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.065" endtime="20201112 10:14:49.085"></status>
</kw>
<msg timestamp="20201112 10:14:49.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.062" endtime="20201112 10:14:49.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.089" endtime="20201112 10:14:49.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.096" endtime="20201112 10:14:49.101"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.054" endtime="20201112 10:14:49.103"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.048" endtime="20201112 10:14:49.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.122" endtime="20201112 10:14:49.463"></status>
</kw>
<msg timestamp="20201112 10:14:49.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043096556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043132625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:49.119" endtime="20201112 10:14:49.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043096556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043132625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:49.473" endtime="20201112 10:14:49.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.491" endtime="20201112 10:14:49.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.112" endtime="20201112 10:14:49.497"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.107" endtime="20201112 10:14:49.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:49.511" level="INFO">${RESULT} = [{'time': 0.043132625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6068999999999685e-05, 'source_diff': 3.6068999999999685e-05}, {'time': 0.043175569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:49.501" endtime="20201112 10:14:49.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:49.542" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:49.513" endtime="20201112 10:14:49.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.553" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 10:14:49.551" endtime="20201112 10:14:49.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.558" level="INFO">VALUE: [3.6068999999999685e-05, 3.549999999999387e-05, 3.600000000000131e-05, 3.5888999999997284e-05, 3.601400000000088e-05, 3.5902999999996854e-05, 3.508399999999773e-05, 3.544400000000253e-05, 3.588900000000422e-05, 3.5388999999996784e-05, 3.565300000000354e-05, 3.576400000000063e-05, 3.5304999999999365e-05, 3.554199999999952e-05, 3.51250000000039e-05, 3.576400000000063e-05, 3.5068999999998685e-05, 3.60979999999983e-05, 3.5069000000005623e-05, 3.5110999999997394e-05, 3.54580000000021e-05, 3.504199999999902e-05, 3.533399999999798e-05, 3.5096999999997824e-05, 3.579199999999977e-05, 3.576400000000063e-05, 3.565300000000354e-05, 3.522200000000142e-05, 3.551400000000038e-05, 3.516700000000261e-05, 3.550000000000081e-05, 3.572200000000192e-05, 3.573600000000149e-05, 3.5541000000000045e-05, 3.5610999999997894e-05, 3.523599999999405e-05, 3.554199999999952e-05, 3.593000000000346e-05, 3.502799999999945e-05, 3.569400000000278e-05, 3.5208999999994384e-05, 3.529199999999927e-05, 3.519500000000175e-05, 3.5652999999996604e-05, 3.5332999999998504e-05, 3.59450000000025e-05, 3.601400000000088e-05, 3.531999999999841e-05, 3.523700000000046e-05, 3.556999999999866e-05]</msg>
<status status="PASS" starttime="20201112 10:14:49.555" endtime="20201112 10:14:49.560"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.544" endtime="20201112 10:14:49.562"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.568" endtime="20201112 10:14:49.571"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:49.576" endtime="20201112 10:14:49.597"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.572" endtime="20201112 10:14:49.599"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.563" endtime="20201112 10:14:49.601"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.044" endtime="20201112 10:14:49.602"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.043" endtime="20201112 10:14:49.602"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.624" endtime="20201112 10:14:49.643"></status>
</kw>
<msg timestamp="20201112 10:14:49.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.621" endtime="20201112 10:14:49.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.647" endtime="20201112 10:14:49.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.653" endtime="20201112 10:14:49.657"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.614" endtime="20201112 10:14:49.658"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.608" endtime="20201112 10:14:49.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.676" endtime="20201112 10:14:50.012"></status>
</kw>
<msg timestamp="20201112 10:14:50.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041385153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041422181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:49.673" endtime="20201112 10:14:50.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041385153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041422181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.021" endtime="20201112 10:14:50.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.040" endtime="20201112 10:14:50.044"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.666" endtime="20201112 10:14:50.045"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.661" endtime="20201112 10:14:50.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:50.057" level="INFO">${RESULT} = [{'time': 0.041422181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.702800000000145e-05, 'source_diff': 3.702800000000145e-05}, {'time': 0.041469208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:50.048" endtime="20201112 10:14:50.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:50.088" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:50.059" endtime="20201112 10:14:50.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.099" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 10:14:50.097" endtime="20201112 10:14:50.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.104" level="INFO">VALUE: [3.702800000000145e-05, 3.6610999999998894e-05, 3.622300000000189e-05, 3.6874999999998714e-05, 3.623599999999505e-05, 3.692999999999752e-05, 3.626400000000113e-05, 3.6346999999999074e-05, 3.694399999999709e-05, 3.648600000000224e-05, 3.66659999999977e-05, 3.6318999999999935e-05, 3.649999999999487e-05, 3.661100000000583e-05, 3.666700000000411e-05, 3.604200000000002e-05, 3.687500000000565e-05, 3.697200000000317e-05, 3.6166999999996674e-05, 3.6680999999996744e-05, 3.66659999999977e-05, 3.6430999999996494e-05, 3.6276999999994286e-05, 3.656999999999966e-05, 3.6458999999995634e-05, 3.6263000000001655e-05, 3.6888999999998284e-05, 3.637500000000515e-05, 3.626399999999419e-05, 3.622199999999548e-05, 3.6666999999997174e-05, 3.6582999999999755e-05, 3.625000000000156e-05, 3.651399999999444e-05, 3.647200000000267e-05, 3.6610999999998894e-05, 3.6888999999998284e-05, 3.650000000000181e-05, 3.655600000000009e-05, 3.702800000000145e-05, 3.62780000000007e-05, 3.690300000000479e-05, 3.6318999999999935e-05, 3.654200000000052e-05, 3.627799999999376e-05, 3.67780000000012e-05, 3.650000000000181e-05, 3.681999999999991e-05, 3.681999999999991e-05, 3.6138999999997534e-05]</msg>
<status status="PASS" starttime="20201112 10:14:50.101" endtime="20201112 10:14:50.106"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.090" endtime="20201112 10:14:50.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.114" endtime="20201112 10:14:50.116"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:50.122" endtime="20201112 10:14:50.144"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.118" endtime="20201112 10:14:50.145"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.109" endtime="20201112 10:14:50.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.604" endtime="20201112 10:14:50.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.603" endtime="20201112 10:14:50.148"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.170" endtime="20201112 10:14:50.190"></status>
</kw>
<msg timestamp="20201112 10:14:50.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.167" endtime="20201112 10:14:50.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.193" endtime="20201112 10:14:50.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.199" endtime="20201112 10:14:50.203"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.160" endtime="20201112 10:14:50.205"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.154" endtime="20201112 10:14:50.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.222" endtime="20201112 10:14:50.557"></status>
</kw>
<msg timestamp="20201112 10:14:50.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041406, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041443722, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:50.219" endtime="20201112 10:14:50.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041406, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041443722, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:50.566" endtime="20201112 10:14:50.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.585" endtime="20201112 10:14:50.590"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.212" endtime="20201112 10:14:50.592"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.207" endtime="20201112 10:14:50.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:50.604" level="INFO">${RESULT} = [{'time': 0.041443722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.772200000000392e-05, 'source_diff': 3.772200000000392e-05}, {'time': 0.041496708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:50.595" endtime="20201112 10:14:50.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:50.634" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:50.606" endtime="20201112 10:14:50.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.645" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 10:14:50.643" endtime="20201112 10:14:50.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.651" level="INFO">VALUE: [3.772200000000392e-05, 3.7569000000001185e-05, 3.740300000000529e-05, 3.76659999999987e-05, 3.7597000000000325e-05, 3.726399999999519e-05, 3.7666999999998174e-05, 3.726399999999519e-05, 3.793100000000493e-05, 3.7430999999997494e-05, 3.7666999999998174e-05, 3.765300000000554e-05, 3.791700000000536e-05, 3.730600000000084e-05, 3.774999999999612e-05, 3.74859999999963e-05, 3.701400000000188e-05, 3.750000000000281e-05, 3.79859999999968e-05, 3.7902999999998854e-05, 3.7847000000000575e-05, 3.7541000000002045e-05, 3.769400000000478e-05, 3.791599999999895e-05, 3.7582999999993816e-05, 3.7638999999999034e-05, 3.801399999999594e-05, 3.752800000000195e-05, 3.801399999999594e-05, 3.7319000000000935e-05, 3.719400000000428e-05, 3.7152999999998104e-05, 3.800000000000331e-05, 3.776400000000263e-05, 3.798600000000374e-05, 3.750000000000281e-05, 3.719500000000375e-05, 3.75979999999998e-05, 3.7374999999999214e-05, 3.702800000000145e-05, 3.74859999999963e-05, 3.7847000000000575e-05, 3.798700000000321e-05, 3.715300000000504e-05, 3.790300000000579e-05, 3.76659999999987e-05, 3.726400000000213e-05, 3.74859999999963e-05, 3.751400000000238e-05, 3.720799999999691e-05]</msg>
<status status="PASS" starttime="20201112 10:14:50.647" endtime="20201112 10:14:50.657"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.636" endtime="20201112 10:14:50.659"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.666" endtime="20201112 10:14:50.668"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:50.674" endtime="20201112 10:14:50.695"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.670" endtime="20201112 10:14:50.697"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.661" endtime="20201112 10:14:50.699"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.150" endtime="20201112 10:14:50.699"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.149" endtime="20201112 10:14:50.700"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.722" endtime="20201112 10:14:50.742"></status>
</kw>
<msg timestamp="20201112 10:14:50.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.719" endtime="20201112 10:14:50.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.745" endtime="20201112 10:14:50.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.751" endtime="20201112 10:14:50.755"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.712" endtime="20201112 10:14:50.757"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.706" endtime="20201112 10:14:50.758"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.774" endtime="20201112 10:14:51.091"></status>
</kw>
<msg timestamp="20201112 10:14:51.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041332917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041371611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.771" endtime="20201112 10:14:51.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041332917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041371611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:51.100" endtime="20201112 10:14:51.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.119" endtime="20201112 10:14:51.124"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.764" endtime="20201112 10:14:51.126"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.759" endtime="20201112 10:14:51.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:51.138" level="INFO">${RESULT} = [{'time': 0.041371611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.869400000000578e-05, 'source_diff': 3.869400000000578e-05}, {'time': 0.041417597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:51.129" endtime="20201112 10:14:51.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:51.171" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:51.140" endtime="20201112 10:14:51.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.182" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 10:14:51.180" endtime="20201112 10:14:51.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.187" level="INFO">VALUE: [3.869400000000578e-05, 3.8055000000002115e-05, 3.865200000000013e-05, 3.817999999999877e-05, 3.8875000000000715e-05, 3.872199999999798e-05, 3.8639000000000034e-05, 3.8804999999995926e-05, 3.8097000000000825e-05, 3.850000000000381e-05, 3.902799999999651e-05, 3.8818999999995496e-05, 3.869399999999884e-05, 3.823599999999705e-05, 3.8472999999997204e-05, 3.849999999999687e-05, 3.8458999999997634e-05, 3.8889000000000284e-05, 3.856999999999472e-05, 3.888800000000081e-05, 3.8180999999998244e-05, 3.8666999999999174e-05, 3.900000000000431e-05, 3.8611000000000895e-05, 3.8819000000002435e-05, 3.8069000000001685e-05, 3.8305000000002365e-05, 3.8388999999999784e-05, 3.8444999999998064e-05, 3.840300000000629e-05, 3.802800000000245e-05, 3.847199999999773e-05, 3.844400000000553e-05, 3.8166999999998674e-05, 3.823599999999705e-05, 3.8889000000000284e-05, 3.8833000000002005e-05, 3.808400000000073e-05, 3.8416999999998924e-05, 3.8916999999999424e-05, 3.85980000000008e-05, 3.902800000000345e-05, 3.8694999999998314e-05, 3.8790999999996356e-05, 3.890200000000038e-05, 3.8791000000003295e-05, 3.865200000000013e-05, 3.850000000000381e-05, 3.894399999999909e-05, 3.8875000000000715e-05]</msg>
<status status="PASS" starttime="20201112 10:14:51.184" endtime="20201112 10:14:51.189"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.173" endtime="20201112 10:14:51.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.197" endtime="20201112 10:14:51.199"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:51.205" endtime="20201112 10:14:51.226"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.201" endtime="20201112 10:14:51.228"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.192" endtime="20201112 10:14:51.230"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.702" endtime="20201112 10:14:51.230"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.700" endtime="20201112 10:14:51.231"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.253" endtime="20201112 10:14:51.272"></status>
</kw>
<msg timestamp="20201112 10:14:51.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.250" endtime="20201112 10:14:51.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.276" endtime="20201112 10:14:51.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.282" endtime="20201112 10:14:51.286"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.243" endtime="20201112 10:14:51.287"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.237" endtime="20201112 10:14:51.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.305" endtime="20201112 10:14:51.638"></status>
</kw>
<msg timestamp="20201112 10:14:51.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041564764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041604194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:51.302" endtime="20201112 10:14:51.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041564764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041604194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:51.647" endtime="20201112 10:14:51.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.666" endtime="20201112 10:14:51.670"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.295" endtime="20201112 10:14:51.671"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.290" endtime="20201112 10:14:51.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:51.683" level="INFO">${RESULT} = [{'time': 0.041604194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.943000000000002e-05, 'source_diff': 3.943000000000002e-05}, {'time': 0.041650208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:51.674" endtime="20201112 10:14:51.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:51.715" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:51.685" endtime="20201112 10:14:51.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.726" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 10:14:51.724" endtime="20201112 10:14:51.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.731" level="INFO">VALUE: [3.943000000000002e-05, 3.9875000000001715e-05, 3.997199999999923e-05, 3.9903000000000854e-05, 3.950000000000481e-05, 3.9889000000001285e-05, 3.902800000000345e-05, 3.954199999999658e-05, 3.9903000000000854e-05, 3.9819000000003435e-05, 3.9069000000002685e-05, 3.919399999999934e-05, 3.973599999999855e-05, 3.976399999999769e-05, 3.950000000000481e-05, 3.980600000000334e-05, 3.999999999999837e-05, 3.907000000000216e-05, 3.9903000000000854e-05, 3.9180999999999244e-05, 3.904199999999608e-05, 3.9111000000001395e-05, 3.944399999999959e-05, 3.9554999999996676e-05, 3.993000000000052e-05, 3.943000000000002e-05, 3.9416999999999924e-05, 3.96660000000007e-05, 3.923600000000499e-05, 3.999999999999837e-05, 3.9846999999995636e-05, 4.0110999999995456e-05, 3.970799999999941e-05, 3.933400000000198e-05, 3.9875000000001715e-05, 3.923599999999805e-05, 3.957000000000266e-05, 4.004199999999708e-05, 3.9708999999998884e-05, 3.927799999999676e-05, 3.958399999999529e-05, 3.92780000000037e-05, 3.906999999999522e-05, 3.9540999999997106e-05, 3.9277000000004225e-05, 3.920799999999891e-05, 3.9874999999994776e-05, 3.990200000000138e-05, 3.926400000000413e-05, 4.001400000000488e-05]</msg>
<status status="PASS" starttime="20201112 10:14:51.728" endtime="20201112 10:14:51.733"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.717" endtime="20201112 10:14:51.735"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.741" endtime="20201112 10:14:51.744"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:51.749" endtime="20201112 10:14:51.771"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.745" endtime="20201112 10:14:51.772"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.736" endtime="20201112 10:14:51.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.233" endtime="20201112 10:14:51.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.232" endtime="20201112 10:14:51.775"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.797" endtime="20201112 10:14:51.816"></status>
</kw>
<msg timestamp="20201112 10:14:51.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.794" endtime="20201112 10:14:51.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.820" endtime="20201112 10:14:51.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.826" endtime="20201112 10:14:51.830"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.787" endtime="20201112 10:14:51.831"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.781" endtime="20201112 10:14:51.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.849" endtime="20201112 10:14:52.182"></status>
</kw>
<msg timestamp="20201112 10:14:52.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041254208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041295222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:51.846" endtime="20201112 10:14:52.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041254208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041295222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:52.191" endtime="20201112 10:14:52.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.209" endtime="20201112 10:14:52.213"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.839" endtime="20201112 10:14:52.215"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.834" endtime="20201112 10:14:52.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:52.227" level="INFO">${RESULT} = [{'time': 0.041295222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.101399999999894e-05, 'source_diff': 4.101399999999894e-05}, {'time': 0.041351236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:52.218" endtime="20201112 10:14:52.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:52.259" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:52.229" endtime="20201112 10:14:52.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.270" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 10:14:52.268" endtime="20201112 10:14:52.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.275" level="INFO">VALUE: [4.101399999999894e-05, 4.0361000000002645e-05, 4.102799999999851e-05, 4.023599999999905e-05, 4.0097000000002825e-05, 4.0361000000002645e-05, 4.049999999999887e-05, 4.051399999999844e-05, 4.0445000000000064e-05, 4.008400000000273e-05, 4.057000000000366e-05, 4.023599999999905e-05, 4.018000000000077e-05, 4.091600000000195e-05, 4.073599999999955e-05, 4.074999999999912e-05, 4.0360999999995706e-05, 4.069400000000084e-05, 4.0181000000000244e-05, 4.0917000000001424e-05, 4.0903000000001855e-05, 4.099999999999937e-05, 4.050000000000581e-05, 4.0068999999996746e-05, 4.026399999999819e-05, 4.0875000000002715e-05, 4.0153000000001104e-05, 4.030600000000384e-05, 4.0596999999996386e-05, 4.009799999999536e-05, 4.032000000000341e-05, 4.047199999999973e-05, 4.102799999999851e-05, 4.0695000000000314e-05, 4.0903000000001855e-05, 4.047199999999973e-05, 4.0097000000002825e-05, 4.041600000000145e-05, 4.0139000000001535e-05, 4.0111000000002395e-05, 4.024999999999862e-05, 4.095800000000066e-05, 4.073599999999955e-05, 4.0903000000001855e-05, 4.0555000000004615e-05, 4.0833000000004005e-05, 4.0931000000000994e-05, 4.079199999999783e-05, 4.0181000000000244e-05, 4.0417000000000924e-05]</msg>
<status status="PASS" starttime="20201112 10:14:52.272" endtime="20201112 10:14:52.277"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.261" endtime="20201112 10:14:52.278"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.285" endtime="20201112 10:14:52.287"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:52.293" endtime="20201112 10:14:52.315"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.289" endtime="20201112 10:14:52.316"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.280" endtime="20201112 10:14:52.318"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.777" endtime="20201112 10:14:52.318"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.776" endtime="20201112 10:14:52.319"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.341" endtime="20201112 10:14:52.361"></status>
</kw>
<msg timestamp="20201112 10:14:52.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.338" endtime="20201112 10:14:52.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.364" endtime="20201112 10:14:52.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.370" endtime="20201112 10:14:52.374"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.331" endtime="20201112 10:14:52.376"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.325" endtime="20201112 10:14:52.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.394" endtime="20201112 10:14:52.727"></status>
</kw>
<msg timestamp="20201112 10:14:52.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041622833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041664583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:52.390" endtime="20201112 10:14:52.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041622833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041664583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:52.737" endtime="20201112 10:14:52.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.755" endtime="20201112 10:14:52.759"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.383" endtime="20201112 10:14:52.761"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.378" endtime="20201112 10:14:52.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:52.773" level="INFO">${RESULT} = [{'time': 0.041664583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.175000000000012e-05, 'source_diff': 4.175000000000012e-05}, {'time': 0.041717611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:52.764" endtime="20201112 10:14:52.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:52.805" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:52.775" endtime="20201112 10:14:52.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.815" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 10:14:52.813" endtime="20201112 10:14:52.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.821" level="INFO">VALUE: [4.175000000000012e-05, 4.168000000000227e-05, 4.197200000000123e-05, 4.1903000000002855e-05, 4.173600000000055e-05, 4.1124999999996026e-05, 4.129200000000527e-05, 4.1110999999996456e-05, 4.12780000000057e-05, 4.173600000000055e-05, 4.2111000000004395e-05, 4.124999999999962e-05, 4.120800000000091e-05, 4.123600000000005e-05, 4.183400000000448e-05, 4.155599999999815e-05, 4.1596999999997386e-05, 4.201399999999994e-05, 4.200000000000037e-05, 4.1846999999997636e-05, 4.1847000000004575e-05, 4.165200000000313e-05, 4.1653000000002605e-05, 4.1181000000001244e-05, 4.1833000000005005e-05, 4.17780000000062e-05, 4.14860000000003e-05, 4.130600000000484e-05, 4.1167000000001674e-05, 4.194399999999515e-05, 4.1333000000004505e-05, 4.102799999999851e-05, 4.1653000000002605e-05, 4.125000000000656e-05, 4.1666999999995236e-05, 4.175000000000012e-05, 4.1153000000002105e-05, 4.134799999999661e-05, 4.1582999999997816e-05, 4.1554999999998676e-05, 4.19860000000008e-05, 4.1639000000003035e-05, 4.140200000000288e-05, 4.1082999999997316e-05, 4.166599999999576e-05, 4.1681000000001744e-05, 4.143000000000202e-05, 4.14860000000003e-05, 4.1416999999994986e-05, 4.123600000000005e-05]</msg>
<status status="PASS" starttime="20201112 10:14:52.818" endtime="20201112 10:14:52.822"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.806" endtime="20201112 10:14:52.824"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.830" endtime="20201112 10:14:52.833"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:52.838" endtime="20201112 10:14:52.860"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.834" endtime="20201112 10:14:52.862"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.826" endtime="20201112 10:14:52.863"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.321" endtime="20201112 10:14:52.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.320" endtime="20201112 10:14:52.864"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.887" endtime="20201112 10:14:52.906"></status>
</kw>
<msg timestamp="20201112 10:14:52.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.883" endtime="20201112 10:14:52.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.910" endtime="20201112 10:14:52.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.916" endtime="20201112 10:14:52.920"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.876" endtime="20201112 10:14:52.921"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.870" endtime="20201112 10:14:52.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.939" endtime="20201112 10:14:53.275"></status>
</kw>
<msg timestamp="20201112 10:14:53.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041565875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041608292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:52.936" endtime="20201112 10:14:53.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041565875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041608292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:53.284" endtime="20201112 10:14:53.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.303" endtime="20201112 10:14:53.307"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.929" endtime="20201112 10:14:53.308"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.924" endtime="20201112 10:14:53.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:53.320" level="INFO">${RESULT} = [{'time': 0.041608292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2416999999995986e-05, 'source_diff': 4.2416999999995986e-05}, {'time': 0.041658264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:53.311" endtime="20201112 10:14:53.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:53.354" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:53.322" endtime="20201112 10:14:53.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.365" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 10:14:53.362" endtime="20201112 10:14:53.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.370" level="INFO">VALUE: [4.2416999999995986e-05, 4.202799999999951e-05, 4.2597000000005325e-05, 4.2902999999996916e-05, 4.2152999999996166e-05, 4.2723000000001454e-05, 4.281999999999897e-05, 4.2874999999997776e-05, 4.252800000000001e-05, 4.2874999999997776e-05, 4.294399999999615e-05, 4.293000000000352e-05, 4.2290999999999856e-05, 4.294400000000309e-05, 4.297200000000223e-05, 4.275000000000112e-05, 4.2902999999996916e-05, 4.3055000000000176e-05, 4.2723000000001454e-05, 4.2846999999998636e-05, 4.2138999999996596e-05, 4.2959000000002134e-05, 4.2167000000002675e-05, 4.2737000000001024e-05, 4.2666999999996236e-05, 4.2652999999996666e-05, 4.2167000000002675e-05, 4.265199999999719e-05, 4.2417000000002925e-05, 4.226300000000072e-05, 4.30269999999941e-05, 4.218000000000277e-05, 4.2554999999999676e-05, 4.2832999999999066e-05, 4.251400000000044e-05, 4.2332999999998566e-05, 4.2832999999999066e-05, 4.2833000000006005e-05, 4.21939999999954e-05, 4.251400000000044e-05, 4.244400000000259e-05, 4.2304999999999426e-05, 4.2667000000003175e-05, 4.24860000000013e-05, 4.2986999999994335e-05, 4.2889000000004285e-05, 4.298599999999486e-05, 4.213799999999712e-05, 4.2110999999997456e-05, 4.294400000000309e-05]</msg>
<status status="PASS" starttime="20201112 10:14:53.367" endtime="20201112 10:14:53.372"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.356" endtime="20201112 10:14:53.373"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.379" endtime="20201112 10:14:53.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:53.388" endtime="20201112 10:14:53.409"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.383" endtime="20201112 10:14:53.411"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.375" endtime="20201112 10:14:53.412"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.866" endtime="20201112 10:14:53.413"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.865" endtime="20201112 10:14:53.413"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.436" endtime="20201112 10:14:53.455"></status>
</kw>
<msg timestamp="20201112 10:14:53.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.432" endtime="20201112 10:14:53.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.458" endtime="20201112 10:14:53.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.464" endtime="20201112 10:14:53.468"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.425" endtime="20201112 10:14:53.470"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.419" endtime="20201112 10:14:53.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.487" endtime="20201112 10:14:53.826"></status>
</kw>
<msg timestamp="20201112 10:14:53.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041217694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041261125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:53.484" endtime="20201112 10:14:53.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041217694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041261125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:53.835" endtime="20201112 10:14:53.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.854" endtime="20201112 10:14:53.858"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.477" endtime="20201112 10:14:53.859"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.472" endtime="20201112 10:14:53.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:53.871" level="INFO">${RESULT} = [{'time': 0.041261125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3431000000003495e-05, 'source_diff': 4.3431000000003495e-05}, {'time': 0.041316167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:53.862" endtime="20201112 10:14:53.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:53.902" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:53.873" endtime="20201112 10:14:53.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.914" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 10:14:53.911" endtime="20201112 10:14:53.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.920" level="INFO">VALUE: [4.3431000000003495e-05, 4.3973000000002704e-05, 4.404100000000161e-05, 4.3917000000004425e-05, 4.3167000000003675e-05, 4.379200000000083e-05, 4.375000000000212e-05, 4.331999999999947e-05, 4.326400000000119e-05, 4.404200000000108e-05, 4.327799999999382e-05, 4.3152999999997166e-05, 4.3318999999999996e-05, 4.379100000000136e-05, 4.379100000000136e-05, 4.347200000000273e-05, 4.404100000000161e-05, 4.3068999999999746e-05, 4.345799999999622e-05, 4.3417000000003925e-05, 4.323599999999511e-05, 4.352800000000101e-05, 4.379200000000083e-05, 4.375000000000212e-05, 4.3389000000004785e-05, 4.304200000000008e-05, 4.342999999999708e-05, 4.351400000000144e-05, 4.404200000000108e-05, 4.3737000000002024e-05, 4.3291000000000857e-05, 4.336199999999818e-05, 4.386199999999868e-05, 4.315199999999769e-05, 4.373600000000255e-05, 4.3346999999999136e-05, 4.315199999999769e-05, 4.3153000000004105e-05, 4.3667000000004175e-05, 4.3708999999995946e-05, 4.3583000000006755e-05, 4.38060000000004e-05, 4.306999999999922e-05, 4.3068999999999746e-05, 4.3082999999999316e-05, 4.397199999999629e-05, 4.3417000000003925e-05, 4.375000000000212e-05, 4.3610999999998956e-05, 4.404200000000108e-05]</msg>
<status status="PASS" starttime="20201112 10:14:53.917" endtime="20201112 10:14:53.921"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.904" endtime="20201112 10:14:53.923"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.929" endtime="20201112 10:14:53.932"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:53.937" endtime="20201112 10:14:53.959"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.933" endtime="20201112 10:14:53.961"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.925" endtime="20201112 10:14:53.963"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.415" endtime="20201112 10:14:53.963"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.414" endtime="20201112 10:14:53.964"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.986" endtime="20201112 10:14:54.006"></status>
</kw>
<msg timestamp="20201112 10:14:54.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.983" endtime="20201112 10:14:54.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.010" endtime="20201112 10:14:54.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.016" endtime="20201112 10:14:54.019"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.975" endtime="20201112 10:14:54.021"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.970" endtime="20201112 10:14:54.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.039" endtime="20201112 10:14:54.348"></status>
</kw>
<msg timestamp="20201112 10:14:54.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041860375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041904986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:54.035" endtime="20201112 10:14:54.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041860375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041904986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:54.352" endtime="20201112 10:14:54.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.360" endtime="20201112 10:14:54.362"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.028" endtime="20201112 10:14:54.363"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.024" endtime="20201112 10:14:54.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:54.369" level="INFO">${RESULT} = [{'time': 0.041904986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4610999999999956e-05, 'source_diff': 4.4610999999999956e-05}, {'time': 0.041960972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:54.364" endtime="20201112 10:14:54.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:54.394" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:54.370" endtime="20201112 10:14:54.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.405" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 10:14:54.402" endtime="20201112 10:14:54.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.410" level="INFO">VALUE: [4.4610999999999956e-05, 4.4110999999999456e-05, 4.4055000000001177e-05, 4.4319000000000996e-05, 4.4624999999999526e-05, 4.4166999999997736e-05, 4.499999999999643e-05, 4.405600000000065e-05, 4.4416999999997986e-05, 4.473600000000355e-05, 4.48060000000014e-05, 4.432000000000047e-05, 4.4902999999998916e-05, 4.415200000000563e-05, 4.4402999999998416e-05, 4.416599999999826e-05, 4.404100000000161e-05, 4.476399999999575e-05, 4.4319000000000996e-05, 4.442999999999808e-05, 4.41660000000052e-05, 4.475000000000312e-05, 4.4874999999999776e-05, 4.480500000000193e-05, 4.447199999999679e-05, 4.4708999999996946e-05, 4.4652999999998666e-05, 4.500000000000337e-05, 4.477799999999532e-05, 4.4888999999999346e-05, 4.434799999999961e-05, 4.4110999999999456e-05, 4.4403000000005355e-05, 4.4152999999998166e-05, 4.450000000000287e-05, 4.454100000000211e-05, 4.4624999999999526e-05, 4.4361000000006645e-05, 4.4083000000000316e-05, 4.4083000000000316e-05, 4.502800000000251e-05, 4.4653000000005605e-05, 4.482000000000097e-05, 4.4847000000000636e-05, 4.445799999999722e-05, 4.399999999999543e-05, 4.4153000000005105e-05, 4.4666999999998236e-05, 4.449999999999593e-05, 4.479199999999489e-05]</msg>
<status status="PASS" starttime="20201112 10:14:54.407" endtime="20201112 10:14:54.413"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.396" endtime="20201112 10:14:54.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.421" endtime="20201112 10:14:54.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:54.429" endtime="20201112 10:14:54.451"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.425" endtime="20201112 10:14:54.452"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.416" endtime="20201112 10:14:54.454"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.966" endtime="20201112 10:14:54.454"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.964" endtime="20201112 10:14:54.455"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.477" endtime="20201112 10:14:54.496"></status>
</kw>
<msg timestamp="20201112 10:14:54.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.474" endtime="20201112 10:14:54.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.499" endtime="20201112 10:14:54.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.506" endtime="20201112 10:14:54.509"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.467" endtime="20201112 10:14:54.511"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.461" endtime="20201112 10:14:54.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.529" endtime="20201112 10:14:54.876"></status>
</kw>
<msg timestamp="20201112 10:14:54.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041368444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041414153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:54.525" endtime="20201112 10:14:54.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041368444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041414153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:54.885" endtime="20201112 10:14:54.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.904" endtime="20201112 10:14:54.908"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.518" endtime="20201112 10:14:54.909"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.514" endtime="20201112 10:14:54.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:54.921" level="INFO">${RESULT} = [{'time': 0.041414153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5709000000004885e-05, 'source_diff': 4.5709000000004885e-05}, {'time': 0.041473111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:54.912" endtime="20201112 10:14:54.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:54.952" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:54.923" endtime="20201112 10:14:54.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.963" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 10:14:54.961" endtime="20201112 10:14:54.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.968" level="INFO">VALUE: [4.5709000000004885e-05, 4.542999999999908e-05, 4.555500000000268e-05, 4.602799999999657e-05, 4.5930999999999056e-05, 4.5666999999999236e-05, 4.525000000000362e-05, 4.5097000000000886e-05, 4.507000000000122e-05, 4.552800000000301e-05, 4.5597000000001386e-05, 4.5902999999999916e-05, 4.5166999999998736e-05, 4.563800000000062e-05, 4.599999999999743e-05, 4.516599999999926e-05, 4.5902999999999916e-05, 4.504100000000261e-05, 4.577800000000326e-05, 4.552700000000354e-05, 4.5138999999999596e-05, 4.56939999999989e-05, 4.579100000000336e-05, 4.520800000000491e-05, 4.526399999999625e-05, 4.554200000000258e-05, 4.598599999999786e-05, 4.5833000000002067e-05, 4.529200000000233e-05, 4.5639000000000096e-05, 4.5708999999997946e-05, 4.565200000000019e-05, 4.566599999999976e-05, 4.5666999999999236e-05, 4.592999999999958e-05, 4.55139999999965e-05, 4.577700000000379e-05, 4.5125000000000026e-05, 4.515199999999969e-05, 4.5902999999999916e-05, 4.5902999999999916e-05, 4.522199999999754e-05, 4.580500000000293e-05, 4.5361000000000706e-05, 4.604200000000308e-05, 4.548599999999736e-05, 4.5125000000000026e-05, 4.5611000000000956e-05, 4.5958999999998196e-05, 4.507000000000122e-05]</msg>
<status status="PASS" starttime="20201112 10:14:54.965" endtime="20201112 10:14:54.970"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.954" endtime="20201112 10:14:54.971"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.978" endtime="20201112 10:14:54.982"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:54.987" endtime="20201112 10:14:55.009"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.983" endtime="20201112 10:14:55.011"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.973" endtime="20201112 10:14:55.012"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.457" endtime="20201112 10:14:55.013"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.456" endtime="20201112 10:14:55.013"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.036" endtime="20201112 10:14:55.056"></status>
</kw>
<msg timestamp="20201112 10:14:55.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:55.032" endtime="20201112 10:14:55.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:55.059" endtime="20201112 10:14:55.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.065" endtime="20201112 10:14:55.069"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.025" endtime="20201112 10:14:55.071"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.020" endtime="20201112 10:14:55.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.088" endtime="20201112 10:14:55.429"></status>
</kw>
<msg timestamp="20201112 10:14:55.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0417815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041828417, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:55.085" endtime="20201112 10:14:55.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0417815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041828417, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:55.438" endtime="20201112 10:14:55.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.457" endtime="20201112 10:14:55.461"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.078" endtime="20201112 10:14:55.462"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.074" endtime="20201112 10:14:55.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:55.474" level="INFO">${RESULT} = [{'time': 0.041828417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6917000000000486e-05, 'source_diff': 4.6917000000000486e-05}, {'time': 0.041892389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:55.465" endtime="20201112 10:14:55.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:55.505" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:55.476" endtime="20201112 10:14:55.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.516" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 10:14:55.514" endtime="20201112 10:14:55.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.521" level="INFO">VALUE: [4.6917000000000486e-05, 4.6847000000002637e-05, 4.6917000000000486e-05, 4.605599999999571e-05, 4.6347000000002136e-05, 4.608399999999485e-05, 4.6445000000006065e-05, 4.6653000000000666e-05, 4.661099999999502e-05, 4.623599999999811e-05, 4.644399999999965e-05, 4.6847000000002637e-05, 4.6139000000000596e-05, 4.622200000000548e-05, 4.612499999999409e-05, 4.6416999999999986e-05, 4.6847000000002637e-05, 4.6083000000002317e-05, 4.655500000000368e-05, 4.695799999999972e-05, 4.629199999999639e-05, 4.655599999999621e-05, 4.674999999999818e-05, 4.645799999999922e-05, 4.674999999999818e-05, 4.623599999999811e-05, 4.6903000000000916e-05, 4.629200000000333e-05, 4.644399999999965e-05, 4.6153000000000166e-05, 4.6847000000002637e-05, 4.654099999999717e-05, 4.677799999999732e-05, 4.6083000000002317e-05, 4.66939999999999e-05, 4.6111000000001456e-05, 4.691600000000101e-05, 4.623599999999811e-05, 4.698599999999886e-05, 4.605499999999624e-05, 4.6166999999999736e-05, 4.6680999999999806e-05, 4.651400000000444e-05, 4.627799999999682e-05, 4.665299999999373e-05, 4.65139999999975e-05, 4.676399999999775e-05, 4.657000000000272e-05, 4.6416999999999986e-05, 4.608399999999485e-05]</msg>
<status status="PASS" starttime="20201112 10:14:55.518" endtime="20201112 10:14:55.523"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.507" endtime="20201112 10:14:55.525"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.531" endtime="20201112 10:14:55.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:55.539" endtime="20201112 10:14:55.564"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.535" endtime="20201112 10:14:55.566"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.526" endtime="20201112 10:14:55.567"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.015" endtime="20201112 10:14:55.568"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.014" endtime="20201112 10:14:55.568"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.590" endtime="20201112 10:14:55.610"></status>
</kw>
<msg timestamp="20201112 10:14:55.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:55.587" endtime="20201112 10:14:55.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:55.613" endtime="20201112 10:14:55.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.619" endtime="20201112 10:14:55.623"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.580" endtime="20201112 10:14:55.625"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.574" endtime="20201112 10:14:55.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.642" endtime="20201112 10:14:55.978"></status>
</kw>
<msg timestamp="20201112 10:14:55.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041512097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041559861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:55.639" endtime="20201112 10:14:55.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041512097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041559861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:55.987" endtime="20201112 10:14:56.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.006" endtime="20201112 10:14:56.009"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.632" endtime="20201112 10:14:56.011"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.627" endtime="20201112 10:14:56.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:56.023" level="INFO">${RESULT} = [{'time': 0.041559861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.776399999999875e-05, 'source_diff': 4.776399999999875e-05}, {'time': 0.041623819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:56.014" endtime="20201112 10:14:56.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:56.054" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:56.025" endtime="20201112 10:14:56.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.065" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 10:14:56.063" endtime="20201112 10:14:56.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.070" level="INFO">VALUE: [4.776399999999875e-05, 4.708299999999638e-05, 4.747199999999979e-05, 4.768000000000133e-05, 4.741600000000151e-05, 4.705499999999724e-05, 4.7181000000000306e-05, 4.774999999999918e-05, 4.722199999999954e-05, 4.7708999999999946e-05, 4.759799999999592e-05, 4.7903000000001916e-05, 4.78469999999967e-05, 4.729200000000433e-05, 4.7737000000006025e-05, 4.7653000000001666e-05, 4.75139999999985e-05, 4.805499999999824e-05, 4.7736999999999086e-05, 4.734799999999567e-05, 4.7625000000002526e-05, 4.786099999999627e-05, 4.724999999999868e-05, 4.755600000000415e-05, 4.755500000000468e-05, 4.783299999999713e-05, 4.7903000000001916e-05, 4.7389000000001846e-05, 4.7375000000002276e-05, 4.7097000000002887e-05, 4.749999999999893e-05, 4.763899999999516e-05, 4.7722999999999516e-05, 4.750000000000587e-05, 4.729200000000433e-05, 4.732000000000347e-05, 4.7945000000000626e-05, 4.715200000000169e-05, 4.765200000000219e-05, 4.793000000000158e-05, 4.741600000000151e-05, 4.7013999999998e-05, 4.747199999999979e-05, 4.708300000000332e-05, 4.720799999999997e-05, 4.7639000000002096e-05, 4.752800000000501e-05, 4.7153000000001166e-05, 4.8013999999999e-05, 4.7943999999994213e-05]</msg>
<status status="PASS" starttime="20201112 10:14:56.067" endtime="20201112 10:14:56.078"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.056" endtime="20201112 10:14:56.079"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.086" endtime="20201112 10:14:56.089"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:56.094" endtime="20201112 10:14:56.116"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.090" endtime="20201112 10:14:56.117"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.081" endtime="20201112 10:14:56.119"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.570" endtime="20201112 10:14:56.119"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.569" endtime="20201112 10:14:56.120"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.144" endtime="20201112 10:14:56.164"></status>
</kw>
<msg timestamp="20201112 10:14:56.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.141" endtime="20201112 10:14:56.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.167" endtime="20201112 10:14:56.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.174" endtime="20201112 10:14:56.178"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.133" endtime="20201112 10:14:56.179"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.126" endtime="20201112 10:14:56.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.197" endtime="20201112 10:14:56.530"></status>
</kw>
<msg timestamp="20201112 10:14:56.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043326403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043374764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:56.194" endtime="20201112 10:14:56.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043326403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043374764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:56.539" endtime="20201112 10:14:56.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.558" endtime="20201112 10:14:56.561"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.186" endtime="20201112 10:14:56.563"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.182" endtime="20201112 10:14:56.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:56.575" level="INFO">${RESULT} = [{'time': 0.043374764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8361000000003707e-05, 'source_diff': 4.8361000000003707e-05}, {'time': 0.043430764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:56.566" endtime="20201112 10:14:56.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:56.606" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:56.577" endtime="20201112 10:14:56.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.617" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 10:14:56.614" endtime="20201112 10:14:56.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.622" level="INFO">VALUE: [4.8361000000003707e-05, 4.891699999999555e-05, 4.876399999999975e-05, 4.823600000000011e-05, 4.8445000000001126e-05, 4.849999999999993e-05, 4.8459000000000696e-05, 4.8417000000001986e-05, 4.866600000000276e-05, 4.888899999999641e-05, 4.844400000000165e-05, 4.841600000000251e-05, 4.823600000000011e-05, 4.8013999999999e-05, 4.8193999999994463e-05, 4.890299999999598e-05, 4.8417000000001986e-05, 4.806999999999728e-05, 4.875000000000018e-05, 4.880599999999846e-05, 4.895800000000172e-05, 4.8903000000002916e-05, 4.848600000000036e-05, 4.874999999999324e-05, 4.8653000000002666e-05, 4.81940000000014e-05, 4.849999999999993e-05, 4.8401999999996004e-05, 4.8417000000001986e-05, 4.841600000000251e-05, 4.86669999999953e-05, 4.8903000000002916e-05, 4.86940000000019e-05, 4.811099999999652e-05, 4.8153000000002166e-05, 4.883299999999813e-05, 4.886099999999727e-05, 4.806899999999781e-05, 4.834700000000414e-05, 4.812499999999609e-05, 4.8181000000001306e-05, 4.8459000000000696e-05, 4.808399999999685e-05, 4.884799999999717e-05, 4.870899999999401e-05, 4.8151999999995754e-05, 4.849999999999993e-05, 4.8153000000002166e-05, 4.8151999999995754e-05, 4.844400000000165e-05]</msg>
<status status="PASS" starttime="20201112 10:14:56.619" endtime="20201112 10:14:56.624"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.608" endtime="20201112 10:14:56.625"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.632" endtime="20201112 10:14:56.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:56.640" endtime="20201112 10:14:56.661"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.636" endtime="20201112 10:14:56.663"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.627" endtime="20201112 10:14:56.665"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.122" endtime="20201112 10:14:56.665"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.121" endtime="20201112 10:14:56.666"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.688" endtime="20201112 10:14:56.709"></status>
</kw>
<msg timestamp="20201112 10:14:56.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.685" endtime="20201112 10:14:56.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.712" endtime="20201112 10:14:56.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.719" endtime="20201112 10:14:56.725"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.677" endtime="20201112 10:14:56.726"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.672" endtime="20201112 10:14:56.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.744" endtime="20201112 10:14:57.091"></status>
</kw>
<msg timestamp="20201112 10:14:57.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042036333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042085375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:56.741" endtime="20201112 10:14:57.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042036333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042085375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:57.101" endtime="20201112 10:14:57.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.119" endtime="20201112 10:14:57.123"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.734" endtime="20201112 10:14:57.125"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.729" endtime="20201112 10:14:57.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:57.137" level="INFO">${RESULT} = [{'time': 0.042085375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.904199999999914e-05, 'source_diff': 4.904199999999914e-05}, {'time': 0.042144389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:57.128" endtime="20201112 10:14:57.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:57.168" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:57.139" endtime="20201112 10:14:57.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.179" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 10:14:57.177" endtime="20201112 10:14:57.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.184" level="INFO">VALUE: [4.904199999999914e-05, 4.976400000000075e-05, 4.9931000000003056e-05, 4.941699999999605e-05, 4.941699999999605e-05, 4.908399999999785e-05, 4.91669999999958e-05, 4.941699999999605e-05, 4.98469999999987e-05, 4.9401999999997004e-05, 4.954199999999964e-05, 4.984700000000564e-05, 4.9957999999995784e-05, 4.923600000000111e-05, 4.947200000000179e-05, 4.990299999999698e-05, 4.96669999999963e-05, 4.925000000000068e-05, 4.927799999999982e-05, 4.952800000000007e-05, 4.987499999999784e-05, 4.9167000000002736e-05, 4.997200000000229e-05, 5.002800000000057e-05, 4.909699999999795e-05, 4.940299999999648e-05, 4.9415999999996574e-05, 4.941600000000351e-05, 5.000000000000143e-05, 4.9915999999997074e-05, 4.998600000000186e-05, 4.975000000000118e-05, 4.974999999999424e-05, 4.9471999999994853e-05, 4.933299999999863e-05, 4.9903000000003916e-05, 4.902799999999957e-05, 4.9403000000003416e-05, 4.925000000000068e-05, 4.980499999999999e-05, 4.9707999999995534e-05, 5.006899999999981e-05, 4.9195000000001876e-05, 4.9125000000004027e-05, 4.955599999999921e-05, 4.952800000000007e-05, 4.990200000000444e-05, 4.981899999999956e-05, 4.9679999999996394e-05, 4.90270000000001e-05]</msg>
<status status="PASS" starttime="20201112 10:14:57.181" endtime="20201112 10:14:57.186"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.170" endtime="20201112 10:14:57.187"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.194" endtime="20201112 10:14:57.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:57.202" endtime="20201112 10:14:57.224"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.198" endtime="20201112 10:14:57.226"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.189" endtime="20201112 10:14:57.227"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.668" endtime="20201112 10:14:57.228"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.666" endtime="20201112 10:14:57.228"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.250" endtime="20201112 10:14:57.271"></status>
</kw>
<msg timestamp="20201112 10:14:57.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:57.247" endtime="20201112 10:14:57.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:57.274" endtime="20201112 10:14:57.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.281" endtime="20201112 10:14:57.284"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.240" endtime="20201112 10:14:57.286"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.234" endtime="20201112 10:14:57.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.306" endtime="20201112 10:14:57.641"></status>
</kw>
<msg timestamp="20201112 10:14:57.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041743181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041793375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:57.302" endtime="20201112 10:14:57.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041743181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041793375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:57.645" endtime="20201112 10:14:57.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.654" endtime="20201112 10:14:57.656"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.293" endtime="20201112 10:14:57.656"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.289" endtime="20201112 10:14:57.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:57.662" level="INFO">${RESULT} = [{'time': 0.041793375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.01940000000034e-05, 'source_diff': 5.01940000000034e-05}, {'time': 0.041851389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:57.658" endtime="20201112 10:14:57.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:57.675" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:57.663" endtime="20201112 10:14:57.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.681" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 10:14:57.680" endtime="20201112 10:14:57.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.683" level="INFO">VALUE: [5.01940000000034e-05, 5.006999999999928e-05, 5.022200000000254e-05, 5.070800000000347e-05, 5.077800000000132e-05, 5.052800000000107e-05, 5.059699999999945e-05, 5.107000000000028e-05, 5.012499999999809e-05, 5.024999999999474e-05, 5.005500000000024e-05, 5.100000000000243e-05, 5.074999999999524e-05, 5.009699999999895e-05, 5.098600000000286e-05, 5.029200000000039e-05, 5.008299999999938e-05, 5.056900000000031e-05, 5.033299999999963e-05, 5.063899999999816e-05, 5.029200000000039e-05, 5.027800000000082e-05, 5.065299999999773e-05, 5.0903000000004917e-05, 5.040299999999748e-05, 5.0665999999997824e-05, 5.0431000000003556e-05, 5.0179999999996894e-05, 5.079200000000089e-05, 5.0167000000003736e-05, 5.065299999999773e-05, 5.056900000000031e-05, 5.025000000000168e-05, 5.0693999999996964e-05, 5.079200000000089e-05, 5.0957999999996784e-05, 5.058299999999988e-05, 5.079200000000089e-05, 5.1014000000002e-05, 5.020800000000297e-05, 5.073600000000261e-05, 5.026400000000125e-05, 5.073600000000261e-05, 5.102799999999463e-05, 5.0945000000003626e-05, 5.0429999999997144e-05, 5.077799999999438e-05, 5.08469999999997e-05, 5.058300000000682e-05, 5.044400000000365e-05]</msg>
<status status="PASS" starttime="20201112 10:14:57.682" endtime="20201112 10:14:57.684"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.676" endtime="20201112 10:14:57.685"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.688" endtime="20201112 10:14:57.689"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:57.692" endtime="20201112 10:14:57.711"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.690" endtime="20201112 10:14:57.712"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.686" endtime="20201112 10:14:57.713"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.230" endtime="20201112 10:14:57.713"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.229" endtime="20201112 10:14:57.713"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.724" endtime="20201112 10:14:57.741"></status>
</kw>
<msg timestamp="20201112 10:14:57.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:57.722" endtime="20201112 10:14:57.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:57.743" endtime="20201112 10:14:57.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.746" endtime="20201112 10:14:57.748"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.719" endtime="20201112 10:14:57.748"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.716" endtime="20201112 10:14:57.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.757" endtime="20201112 10:14:58.093"></status>
</kw>
<msg timestamp="20201112 10:14:58.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024794069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024845569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:57.755" endtime="20201112 10:14:58.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024794069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024845569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:58.103" endtime="20201112 10:14:58.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.121" endtime="20201112 10:14:58.125"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.752" endtime="20201112 10:14:58.127"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.750" endtime="20201112 10:14:58.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:58.139" level="INFO">${RESULT} = [{'time': 0.024845569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.150000000000293e-05, 'source_diff': 5.150000000000293e-05}, {'time': 0.024906625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:58.130" endtime="20201112 10:14:58.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:58.169" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:58.141" endtime="20201112 10:14:58.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.180" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 10:14:58.178" endtime="20201112 10:14:58.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.185" level="INFO">VALUE: [5.150000000000293e-05, 5.116700000000127e-05, 5.1666000000002293e-05, 5.125000000000268e-05, 5.11530000000017e-05, 5.147200000000032e-05, 5.111099999999952e-05, 5.174999999999971e-05, 5.122200000000007e-05, 5.162499999999959e-05, 5.129199999999792e-05, 5.144500000000066e-05, 5.1915999999999074e-05, 5.168099999999787e-05, 5.158400000000035e-05, 5.148599999999989e-05, 5.172200000000057e-05, 5.129099999999845e-05, 5.1415999999998574e-05, 5.159700000000045e-05, 5.181900000000156e-05, 5.144400000000118e-05, 5.162499999999959e-05, 5.123600000000311e-05, 5.168000000000186e-05, 5.140300000000195e-05, 5.191700000000202e-05, 5.165299999999873e-05, 5.158300000000088e-05, 5.168100000000134e-05, 5.144500000000066e-05, 5.104200000000114e-05, 5.18340000000006e-05, 5.127799999999835e-05, 5.14729999999998e-05, 5.113899999999866e-05, 5.173600000000014e-05, 5.173600000000014e-05, 5.172200000000057e-05, 5.16669999999983e-05, 5.12080000000005e-05, 5.204199999999867e-05, 5.13470000000002e-05, 5.199999999999996e-05, 5.182000000000103e-05, 5.14729999999998e-05, 5.12080000000005e-05, 5.180600000000146e-05, 5.173600000000014e-05, 5.1387999999999434e-05]</msg>
<status status="PASS" starttime="20201112 10:14:58.182" endtime="20201112 10:14:58.187"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.171" endtime="20201112 10:14:58.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.195" endtime="20201112 10:14:58.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:58.203" endtime="20201112 10:14:58.224"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.198" endtime="20201112 10:14:58.226"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.190" endtime="20201112 10:14:58.228"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.714" endtime="20201112 10:14:58.228"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.713" endtime="20201112 10:14:58.229"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.251" endtime="20201112 10:14:58.272"></status>
</kw>
<msg timestamp="20201112 10:14:58.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:58.248" endtime="20201112 10:14:58.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:58.275" endtime="20201112 10:14:58.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.282" endtime="20201112 10:14:58.285"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.241" endtime="20201112 10:14:58.287"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.235" endtime="20201112 10:14:58.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.305" endtime="20201112 10:14:58.640"></status>
</kw>
<msg timestamp="20201112 10:14:58.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041650556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041703069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:58.301" endtime="20201112 10:14:58.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041650556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041703069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:58.650" endtime="20201112 10:14:58.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.668" endtime="20201112 10:14:58.672"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.294" endtime="20201112 10:14:58.674"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.289" endtime="20201112 10:14:58.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:58.685" level="INFO">${RESULT} = [{'time': 0.041703069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.251300000000403e-05, 'source_diff': 5.251300000000403e-05}, {'time': 0.041768069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:58.677" endtime="20201112 10:14:58.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:58.716" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:58.687" endtime="20201112 10:14:58.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.727" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 10:14:58.725" endtime="20201112 10:14:58.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.732" level="INFO">VALUE: [5.251300000000403e-05, 5.2485999999997424e-05, 5.2151999999999754e-05, 5.259800000000092e-05, 5.302799999999663e-05, 5.23470000000012e-05, 5.211100000000052e-05, 5.2457999999998284e-05, 5.204100000000267e-05, 5.2763999999996813e-05, 5.211100000000052e-05, 5.265299999999973e-05, 5.2263999999996313e-05, 5.2721999999998104e-05, 5.283299999999519e-05, 5.2735999999997674e-05, 5.229100000000292e-05, 5.284699999999476e-05, 5.219499999999794e-05, 5.237500000000034e-05, 5.212500000000009e-05, 5.284800000000117e-05, 5.294499999999869e-05, 5.226400000000325e-05, 5.294400000000615e-05, 5.28470000000017e-05, 5.261100000000102e-05, 5.238899999999991e-05, 5.206900000000181e-05, 5.25419999999957e-05, 5.302799999999663e-05, 5.2957999999998784e-05, 5.26669999999993e-05, 5.243099999999862e-05, 5.230600000000196e-05, 5.21669999999988e-05, 5.227799999999588e-05, 5.290299999999998e-05, 5.209800000000042e-05, 5.2999999999997494e-05, 5.231900000000206e-05, 5.2249999999996743e-05, 5.25140000000035e-05, 5.26940000000059e-05, 5.2707999999998534e-05, 5.225000000000368e-05, 5.227800000000282e-05, 5.218099999999837e-05, 5.2749999999997244e-05, 5.3013999999997063e-05]</msg>
<status status="PASS" starttime="20201112 10:14:58.729" endtime="20201112 10:14:58.734"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.718" endtime="20201112 10:14:58.735"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.742" endtime="20201112 10:14:58.745"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:58.751" endtime="20201112 10:14:58.773"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.746" endtime="20201112 10:14:58.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.737" endtime="20201112 10:14:58.776"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.231" endtime="20201112 10:14:58.777"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.229" endtime="20201112 10:14:58.777"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.800" endtime="20201112 10:14:58.821"></status>
</kw>
<msg timestamp="20201112 10:14:58.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:58.796" endtime="20201112 10:14:58.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:58.824" endtime="20201112 10:14:58.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.830" endtime="20201112 10:14:58.834"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.789" endtime="20201112 10:14:58.835"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.784" endtime="20201112 10:14:58.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.853" endtime="20201112 10:14:59.189"></status>
</kw>
<msg timestamp="20201112 10:14:59.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042469806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042523681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:58.850" endtime="20201112 10:14:59.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042469806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042523681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:59.199" endtime="20201112 10:14:59.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.217" endtime="20201112 10:14:59.222"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.843" endtime="20201112 10:14:59.224"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.838" endtime="20201112 10:14:59.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:59.236" level="INFO">${RESULT} = [{'time': 0.042523681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.387500000000184e-05, 'source_diff': 5.387500000000184e-05}, {'time': 0.042593667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:59.227" endtime="20201112 10:14:59.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:59.267" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:59.238" endtime="20201112 10:14:59.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.278" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 10:14:59.275" endtime="20201112 10:14:59.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.283" level="INFO">VALUE: [5.387500000000184e-05, 5.35140000000045e-05, 5.352800000000407e-05, 5.330499999999655e-05, 5.3402000000001004e-05, 5.3485999999998424e-05, 5.352699999999766e-05, 5.3235999999998174e-05, 5.330499999999655e-05, 5.3707999999999534e-05, 5.35549999999968e-05, 5.311100000000152e-05, 5.3777999999997383e-05, 5.3721999999999104e-05, 5.359800000000192e-05, 5.322299999999808e-05, 5.340300000000048e-05, 5.3263999999997313e-05, 5.3973000000005766e-05, 5.356999999999584e-05, 5.387500000000184e-05, 5.308299999999544e-05, 5.3221999999998604e-05, 5.3666000000000824e-05, 5.304100000000367e-05, 5.3763999999997814e-05, 5.338900000000091e-05, 5.3777999999997383e-05, 5.386099999999533e-05, 5.330600000000296e-05, 5.40419999999972e-05, 5.358299999999594e-05, 5.331999999999559e-05, 5.372299999999858e-05, 5.391700000000055e-05, 5.344499999999919e-05, 5.327800000000382e-05, 5.3237000000004586e-05, 5.372299999999858e-05, 5.387500000000184e-05, 5.3431000000006557e-05, 5.3471999999998854e-05, 5.3166000000000324e-05, 5.308300000000238e-05, 5.3680000000000394e-05, 5.375000000000518e-05, 5.393100000000012e-05, 5.356999999999584e-05, 5.3277999999996883e-05, 5.315300000000023e-05]</msg>
<status status="PASS" starttime="20201112 10:14:59.280" endtime="20201112 10:14:59.285"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.269" endtime="20201112 10:14:59.286"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.293" endtime="20201112 10:14:59.296"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:59.302" endtime="20201112 10:14:59.324"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.297" endtime="20201112 10:14:59.325"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.288" endtime="20201112 10:14:59.327"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.779" endtime="20201112 10:14:59.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.778" endtime="20201112 10:14:59.328"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.350" endtime="20201112 10:14:59.371"></status>
</kw>
<msg timestamp="20201112 10:14:59.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:59.347" endtime="20201112 10:14:59.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:59.374" endtime="20201112 10:14:59.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.380" endtime="20201112 10:14:59.384"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.340" endtime="20201112 10:14:59.385"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.334" endtime="20201112 10:14:59.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.403" endtime="20201112 10:14:59.749"></status>
</kw>
<msg timestamp="20201112 10:14:59.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041851264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041905542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:59.400" endtime="20201112 10:14:59.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041851264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041905542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:59.758" endtime="20201112 10:14:59.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.777" endtime="20201112 10:14:59.782"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.393" endtime="20201112 10:14:59.784"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.388" endtime="20201112 10:14:59.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:59.796" level="INFO">${RESULT} = [{'time': 0.041905542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4277999999997883e-05, 'source_diff': 5.4277999999997883e-05}, {'time': 0.041974556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:59.787" endtime="20201112 10:14:59.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:59.828" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:59.799" endtime="20201112 10:14:59.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.839" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 10:14:59.836" endtime="20201112 10:14:59.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.844" level="INFO">VALUE: [5.4277999999997883e-05, 5.476400000000575e-05, 5.454200000000464e-05, 5.4916000000002074e-05, 5.431999999999659e-05, 5.4485999999999424e-05, 5.4444000000000714e-05, 5.488899999999547e-05, 5.4430000000001144e-05, 5.454099999999823e-05, 5.412500000000209e-05, 5.5041999999998203e-05, 5.4471999999999854e-05, 5.46670000000013e-05, 5.432000000000353e-05, 5.429200000000439e-05, 5.4999999999999494e-05, 5.418100000000037e-05, 5.4235999999999174e-05, 5.408399999999591e-05, 5.504100000000567e-05, 5.459700000000345e-05, 5.447200000000679e-05, 5.450000000000593e-05, 5.4013999999998064e-05, 5.4458000000000284e-05, 5.4722000000000104e-05, 5.409699999999601e-05, 5.4458000000000284e-05, 5.4263999999998314e-05, 5.452800000000507e-05, 5.469500000000044e-05, 5.480599999999752e-05, 5.465300000000173e-05, 5.441700000000105e-05, 5.4444000000000714e-05, 5.4958000000000784e-05, 5.4930000000001644e-05, 5.4430000000001144e-05, 5.493100000000112e-05, 5.409699999999601e-05, 5.4151999999994815e-05, 5.4499999999998994e-05, 5.405600000000371e-05, 5.491699999999461e-05, 5.5013999999999064e-05, 5.4485999999999424e-05, 5.5014000000006e-05, 5.48749999999959e-05, 5.427800000000482e-05]</msg>
<status status="PASS" starttime="20201112 10:14:59.841" endtime="20201112 10:14:59.846"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.830" endtime="20201112 10:14:59.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.854" endtime="20201112 10:14:59.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:59.862" endtime="20201112 10:14:59.884"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.858" endtime="20201112 10:14:59.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.849" endtime="20201112 10:14:59.887"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.330" endtime="20201112 10:14:59.888"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.329" endtime="20201112 10:14:59.888"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.910" endtime="20201112 10:14:59.931"></status>
</kw>
<msg timestamp="20201112 10:14:59.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:59.907" endtime="20201112 10:14:59.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:59.934" endtime="20201112 10:14:59.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.940" endtime="20201112 10:14:59.944"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.900" endtime="20201112 10:14:59.946"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.894" endtime="20201112 10:14:59.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.963" endtime="20201112 10:15:00.303"></status>
</kw>
<msg timestamp="20201112 10:15:00.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041609861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041664917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:59.960" endtime="20201112 10:15:00.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041609861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041664917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:00.313" endtime="20201112 10:15:00.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.332" endtime="20201112 10:15:00.339"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.953" endtime="20201112 10:15:00.341"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.948" endtime="20201112 10:15:00.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:00.352" level="INFO">${RESULT} = [{'time': 0.041664917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.505600000000471e-05, 'source_diff': 5.505600000000471e-05}, {'time': 0.041737958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:00.344" endtime="20201112 10:15:00.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:00.383" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:00.354" endtime="20201112 10:15:00.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.394" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 10:15:00.391" endtime="20201112 10:15:00.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.399" level="INFO">VALUE: [5.505600000000471e-05, 5.5236000000000174e-05, 5.584799999999723e-05, 5.547300000000033e-05, 5.513900000000266e-05, 5.554099999999923e-05, 5.556899999999837e-05, 5.5277999999998884e-05, 5.509699999999701e-05, 5.586099999999733e-05, 5.5458000000001284e-05, 5.586099999999733e-05, 5.541700000000205e-05, 5.586100000000427e-05, 5.5291999999998453e-05, 5.5416000000002574e-05, 5.557000000000478e-05, 5.544500000000119e-05, 5.5277999999998884e-05, 5.579099999999948e-05, 5.579200000000589e-05, 5.55549999999988e-05, 5.5972000000001354e-05, 5.5679999999995455e-05, 5.50549999999983e-05, 5.563899999999622e-05, 5.53470000000042e-05, 5.536099999999683e-05, 5.5444000000001714e-05, 5.526400000000625e-05, 5.543100000000162e-05, 5.531900000000506e-05, 5.5416000000002574e-05, 5.534799999999673e-05, 5.566699999999536e-05, 5.566699999999536e-05, 5.526299999999984e-05, 5.5915999999996135e-05, 5.6000000000000494e-05, 5.504099999999873e-05, 5.509699999999701e-05, 5.5986000000000924e-05, 5.556899999999837e-05, 5.5666000000002824e-05, 5.5194999999994e-05, 5.502800000000557e-05, 5.5805999999998523e-05, 5.588900000000341e-05, 5.53470000000042e-05, 5.5972000000001354e-05]</msg>
<status status="PASS" starttime="20201112 10:15:00.396" endtime="20201112 10:15:00.400"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.385" endtime="20201112 10:15:00.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.408" endtime="20201112 10:15:00.411"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:00.417" endtime="20201112 10:15:00.438"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.412" endtime="20201112 10:15:00.440"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.404" endtime="20201112 10:15:00.441"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.890" endtime="20201112 10:15:00.442"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.889" endtime="20201112 10:15:00.442"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.465" endtime="20201112 10:15:00.485"></status>
</kw>
<msg timestamp="20201112 10:15:00.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.461" endtime="20201112 10:15:00.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.488" endtime="20201112 10:15:00.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.495" endtime="20201112 10:15:00.498"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.454" endtime="20201112 10:15:00.500"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.449" endtime="20201112 10:15:00.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.518" endtime="20201112 10:15:00.851"></status>
</kw>
<msg timestamp="20201112 10:15:00.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041337042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041393903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:00.515" endtime="20201112 10:15:00.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041337042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041393903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:00.861" endtime="20201112 10:15:00.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.879" endtime="20201112 10:15:00.885"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.507" endtime="20201112 10:15:00.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.503" endtime="20201112 10:15:00.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:00.898" level="INFO">${RESULT} = [{'time': 0.041393903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.686100000000527e-05, 'source_diff': 5.686100000000527e-05}, {'time': 0.041468889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:00.889" endtime="20201112 10:15:00.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:00.929" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:00.901" endtime="20201112 10:15:00.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.940" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 10:15:00.938" endtime="20201112 10:15:00.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.945" level="INFO">VALUE: [5.686100000000527e-05, 5.686100000000527e-05, 5.637500000000434e-05, 5.6791999999999954e-05, 5.683299999999919e-05, 5.658399999999841e-05, 5.607000000000528e-05, 5.6208000000002034e-05, 5.6486000000001424e-05, 5.608299999999844e-05, 5.608299999999844e-05, 5.6472000000001854e-05, 5.6277999999999884e-05, 5.6291999999999454e-05, 5.66670000000033e-05, 5.6250000000000744e-05, 5.659700000000545e-05, 5.641700000000305e-05, 5.665300000000373e-05, 5.605600000000571e-05, 5.6014000000000064e-05, 5.647300000000133e-05, 5.611099999999758e-05, 5.6736000000001674e-05, 5.668100000000287e-05, 5.708299999999944e-05, 5.7014000000001064e-05, 5.6208000000002034e-05, 5.6722000000002104e-05, 5.6679999999996455e-05, 5.619500000000194e-05, 5.6569999999998843e-05, 5.658300000000588e-05, 5.7042000000000204e-05, 5.7014000000001064e-05, 5.6541999999999704e-05, 5.6221999999994665e-05, 5.632000000000553e-05, 5.6791999999999954e-05, 5.6458000000002284e-05, 5.6694000000002964e-05, 5.6165999999996385e-05, 5.616699999999586e-05, 5.6500000000000994e-05, 5.6486000000001424e-05, 5.6500000000000994e-05, 5.665299999999679e-05, 5.641699999999611e-05, 5.6401999999997066e-05, 5.612499999999715e-05]</msg>
<status status="PASS" starttime="20201112 10:15:00.942" endtime="20201112 10:15:00.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.931" endtime="20201112 10:15:00.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.955" endtime="20201112 10:15:00.957"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:00.963" endtime="20201112 10:15:00.985"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.959" endtime="20201112 10:15:00.986"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.950" endtime="20201112 10:15:00.988"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.444" endtime="20201112 10:15:00.988"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.443" endtime="20201112 10:15:00.989"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.011" endtime="20201112 10:15:01.032"></status>
</kw>
<msg timestamp="20201112 10:15:01.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:01.008" endtime="20201112 10:15:01.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:01.036" endtime="20201112 10:15:01.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.042" endtime="20201112 10:15:01.045"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.001" endtime="20201112 10:15:01.047"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.995" endtime="20201112 10:15:01.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.059" endtime="20201112 10:15:01.386"></status>
</kw>
<msg timestamp="20201112 10:15:01.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041864681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041922417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:01.057" endtime="20201112 10:15:01.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041864681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041922417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:01.395" endtime="20201112 10:15:01.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.414" endtime="20201112 10:15:01.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.054" endtime="20201112 10:15:01.421"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.050" endtime="20201112 10:15:01.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:01.433" level="INFO">${RESULT} = [{'time': 0.041922417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7735999999995735e-05, 'source_diff': 5.7735999999995735e-05}, {'time': 0.041998417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:01.424" endtime="20201112 10:15:01.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:01.463" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:01.435" endtime="20201112 10:15:01.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.474" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 10:15:01.472" endtime="20201112 10:15:01.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.480" level="INFO">VALUE: [5.7735999999995735e-05, 5.743100000000362e-05, 5.7042000000000204e-05, 5.7208000000003034e-05, 5.7887999999998996e-05, 5.7750000000002244e-05, 5.754100000000123e-05, 5.7401999999998066e-05, 5.765300000000473e-05, 5.7986000000002924e-05, 5.7499999999995055e-05, 5.738899999999797e-05, 5.71670000000038e-05, 5.7972000000003354e-05, 5.783300000000019e-05, 5.7986000000002924e-05, 5.78749999999989e-05, 5.745899999999582e-05, 5.765299999999779e-05, 5.7750000000002244e-05, 5.7250000000001744e-05, 5.7278000000000884e-05, 5.788899999999847e-05, 5.781900000000062e-05, 5.7693999999997025e-05, 5.7999999999995555e-05, 5.7944000000004214e-05, 5.779100000000148e-05, 5.791700000000455e-05, 5.7499999999995055e-05, 5.7527999999994195e-05, 5.711100000000552e-05, 5.7749999999995305e-05, 5.795900000000326e-05, 5.7292000000000454e-05, 5.7750000000002244e-05, 5.720899999999557e-05, 5.719500000000294e-05, 5.7401999999998066e-05, 5.7901999999998566e-05, 5.758299999999994e-05, 5.784699999999976e-05, 5.756900000000037e-05, 5.7929999999997706e-05, 5.7986000000002924e-05, 5.7236000000002174e-05, 5.7736000000002674e-05, 5.7250000000001744e-05, 5.7042000000000204e-05, 5.744500000000319e-05]</msg>
<status status="PASS" starttime="20201112 10:15:01.477" endtime="20201112 10:15:01.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.465" endtime="20201112 10:15:01.496"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.503" endtime="20201112 10:15:01.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:01.511" endtime="20201112 10:15:01.533"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.507" endtime="20201112 10:15:01.535"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.498" endtime="20201112 10:15:01.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.991" endtime="20201112 10:15:01.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.990" endtime="20201112 10:15:01.537"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.559" endtime="20201112 10:15:01.581"></status>
</kw>
<msg timestamp="20201112 10:15:01.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:01.556" endtime="20201112 10:15:01.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:01.584" endtime="20201112 10:15:01.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.590" endtime="20201112 10:15:01.594"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.549" endtime="20201112 10:15:01.596"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.543" endtime="20201112 10:15:01.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.613" endtime="20201112 10:15:01.956"></status>
</kw>
<msg timestamp="20201112 10:15:01.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042090306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042148375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:01.610" endtime="20201112 10:15:01.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042090306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042148375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:01.966" endtime="20201112 10:15:01.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.987" endtime="20201112 10:15:01.993"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.603" endtime="20201112 10:15:01.995"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.598" endtime="20201112 10:15:01.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:02.010" level="INFO">${RESULT} = [{'time': 0.042148375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.806900000000087e-05, 'source_diff': 5.806900000000087e-05}, {'time': 0.042214375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:01.999" endtime="20201112 10:15:02.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:02.046" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:02.012" endtime="20201112 10:15:02.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.059" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 10:15:02.056" endtime="20201112 10:15:02.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.066" level="INFO">VALUE: [5.806900000000087e-05, 5.841699999999811e-05, 5.818099999999743e-05, 5.8777999999995445e-05, 5.8083999999999913e-05, 5.8750000000003244e-05, 5.8985999999996985e-05, 5.859699999999357e-05, 5.8151999999998816e-05, 5.8166000000005325e-05, 5.8986000000003924e-05, 5.8791999999995015e-05, 5.881900000000162e-05, 5.890299999999904e-05, 5.8415999999998636e-05, 5.8042000000001204e-05, 5.888899999999947e-05, 5.8806000000001524e-05, 5.813899999999872e-05, 5.8236000000003174e-05, 5.844499999999725e-05, 5.8542000000001704e-05, 5.8915999999999136e-05, 5.8778000000002384e-05, 5.868099999999793e-05, 5.8542000000001704e-05, 5.877699999999597e-05, 5.908300000000144e-05, 5.836099999999983e-05, 5.8707999999997595e-05, 5.8250000000002744e-05, 5.865299999999879e-05, 5.9013999999996125e-05, 5.891700000000555e-05, 5.840299999999854e-05, 5.8514000000002564e-05, 5.8249999999995805e-05, 5.863899999999922e-05, 5.8151999999998816e-05, 5.8042000000001204e-05, 5.8500000000002994e-05, 5.9027999999995695e-05, 5.855499999999486e-05, 5.8736000000003674e-05, 5.8500000000002994e-05, 5.8763999999995875e-05, 5.813899999999872e-05, 5.836099999999983e-05, 5.8985999999996985e-05, 5.8999999999996555e-05]</msg>
<status status="PASS" starttime="20201112 10:15:02.062" endtime="20201112 10:15:02.068"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.049" endtime="20201112 10:15:02.069"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.077" endtime="20201112 10:15:02.080"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:02.086" endtime="20201112 10:15:02.109"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.082" endtime="20201112 10:15:02.111"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.071" endtime="20201112 10:15:02.112"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.539" endtime="20201112 10:15:02.113"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.538" endtime="20201112 10:15:02.113"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.136" endtime="20201112 10:15:02.156"></status>
</kw>
<msg timestamp="20201112 10:15:02.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.132" endtime="20201112 10:15:02.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.159" endtime="20201112 10:15:02.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.166" endtime="20201112 10:15:02.169"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.125" endtime="20201112 10:15:02.171"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.119" endtime="20201112 10:15:02.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.189" endtime="20201112 10:15:02.530"></status>
</kw>
<msg timestamp="20201112 10:15:02.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042008431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042067861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:02.186" endtime="20201112 10:15:02.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042008431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042067861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:02.540" endtime="20201112 10:15:02.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.558" endtime="20201112 10:15:02.566"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.178" endtime="20201112 10:15:02.567"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.174" endtime="20201112 10:15:02.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:02.579" level="INFO">${RESULT} = [{'time': 0.042067861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9429999999999206e-05, 'source_diff': 5.9429999999999206e-05}, {'time': 0.042141875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:02.570" endtime="20201112 10:15:02.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:02.610" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:02.581" endtime="20201112 10:15:02.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.620" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 10:15:02.618" endtime="20201112 10:15:02.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.626" level="INFO">VALUE: [5.9429999999999206e-05, 5.983300000000219e-05, 5.9235999999997235e-05, 5.9277999999995945e-05, 5.9542000000002704e-05, 5.9278000000002884e-05, 5.987499999999396e-05, 5.9735999999997735e-05, 5.9084000000000914e-05, 5.9598000000000984e-05, 5.994499999999875e-05, 5.984700000000176e-05, 5.908300000000144e-05, 5.906900000000187e-05, 5.9277999999995945e-05, 5.940299999999954e-05, 5.93750000000004e-05, 5.9305999999995085e-05, 5.9957999999998846e-05, 5.915299999999929e-05, 5.9027999999995695e-05, 5.963900000000022e-05, 5.970900000000501e-05, 5.968100000000587e-05, 5.9402000000000066e-05, 5.9819999999995155e-05, 5.934700000000126e-05, 5.961100000000108e-05, 5.963900000000022e-05, 5.934700000000126e-05, 6.0041999999996265e-05, 5.909700000000101e-05, 5.956899999999543e-05, 5.962500000000065e-05, 5.9528000000003134e-05, 5.9221999999997665e-05, 5.922300000000408e-05, 5.990300000000004e-05, 5.9806000000002524e-05, 5.916699999999886e-05, 5.9457999999998346e-05, 5.91670000000058e-05, 5.9916000000000136e-05, 5.936100000000083e-05, 5.904100000000273e-05, 5.933300000000169e-05, 5.9443999999998776e-05, 5.991699999999961e-05, 5.9236000000004174e-05, 5.933300000000169e-05]</msg>
<status status="PASS" starttime="20201112 10:15:02.623" endtime="20201112 10:15:02.627"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.611" endtime="20201112 10:15:02.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.635" endtime="20201112 10:15:02.638"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:02.643" endtime="20201112 10:15:02.665"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.639" endtime="20201112 10:15:02.667"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.631" endtime="20201112 10:15:02.668"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.115" endtime="20201112 10:15:02.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.114" endtime="20201112 10:15:02.669"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.692" endtime="20201112 10:15:02.712"></status>
</kw>
<msg timestamp="20201112 10:15:02.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.688" endtime="20201112 10:15:02.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.716" endtime="20201112 10:15:02.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.722" endtime="20201112 10:15:02.726"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.681" endtime="20201112 10:15:02.727"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.676" endtime="20201112 10:15:02.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.745" endtime="20201112 10:15:03.091"></status>
</kw>
<msg timestamp="20201112 10:15:03.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041741042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041801153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:02.742" endtime="20201112 10:15:03.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041741042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041801153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:03.100" endtime="20201112 10:15:03.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.119" endtime="20201112 10:15:03.124"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.735" endtime="20201112 10:15:03.126"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.730" endtime="20201112 10:15:03.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:03.138" level="INFO">${RESULT} = [{'time': 0.041801153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.011100000000158e-05, 'source_diff': 6.011100000000158e-05}, {'time': 0.041877125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:03.129" endtime="20201112 10:15:03.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:03.168" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:03.140" endtime="20201112 10:15:03.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.179" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 10:15:03.177" endtime="20201112 10:15:03.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.185" level="INFO">VALUE: [6.011100000000158e-05, 6.0778000000004384e-05, 6.015300000000029e-05, 6.097299999999889e-05, 6.0264000000004314e-05, 6.065299999999385e-05, 6.0305999999996085e-05, 6.1000000000005494e-05, 6.0528000000004134e-05, 6.0513999999997625e-05, 6.03750000000014e-05, 6.0499999999998055e-05, 6.031900000000312e-05, 6.0166000000000386e-05, 6.0221999999998665e-05, 6.084699999999582e-05, 6.006900000000287e-05, 6.0957999999999846e-05, 6.1013999999998125e-05, 6.038900000000097e-05, 6.06949999999995e-05, 6.065300000000079e-05, 6.0764000000004814e-05, 6.04029999999936e-05, 6.0443999999999776e-05, 6.0041999999996265e-05, 6.0430000000000206e-05, 6.016699999999986e-05, 6.005499999999636e-05, 6.013900000000072e-05, 6.031899999999618e-05, 6.084699999999582e-05, 6.0042000000003204e-05, 6.0971999999999416e-05, 6.0056000000002774e-05, 6.083299999999625e-05, 6.0485999999998485e-05, 6.0277999999996945e-05, 6.0777999999997445e-05, 6.063900000000122e-05, 6.040300000000054e-05, 6.02629999999979e-05, 6.051300000000509e-05, 6.0499999999998055e-05, 6.009700000000201e-05, 6.08750000000019e-05, 6.06949999999995e-05, 6.084700000000276e-05, 6.093100000000018e-05, 6.027699999999747e-05]</msg>
<status status="PASS" starttime="20201112 10:15:03.182" endtime="20201112 10:15:03.186"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.170" endtime="20201112 10:15:03.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.194" endtime="20201112 10:15:03.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:03.202" endtime="20201112 10:15:03.224"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.198" endtime="20201112 10:15:03.226"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.189" endtime="20201112 10:15:03.227"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.671" endtime="20201112 10:15:03.228"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.670" endtime="20201112 10:15:03.228"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.251" endtime="20201112 10:15:03.272"></status>
</kw>
<msg timestamp="20201112 10:15:03.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:03.247" endtime="20201112 10:15:03.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:03.275" endtime="20201112 10:15:03.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.281" endtime="20201112 10:15:03.285"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.240" endtime="20201112 10:15:03.286"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.234" endtime="20201112 10:15:03.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.304" endtime="20201112 10:15:03.649"></status>
</kw>
<msg timestamp="20201112 10:15:03.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0415995, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041661278, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:03.301" endtime="20201112 10:15:03.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0415995, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041661278, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:03.658" endtime="20201112 10:15:03.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.677" endtime="20201112 10:15:03.682"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.294" endtime="20201112 10:15:03.684"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.289" endtime="20201112 10:15:03.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:03.696" level="INFO">${RESULT} = [{'time': 0.041661278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.177800000000538e-05, 'source_diff': 6.177800000000538e-05}, {'time': 0.041736278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:03.687" endtime="20201112 10:15:03.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:03.726" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:03.698" endtime="20201112 10:15:03.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.737" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 10:15:03.735" endtime="20201112 10:15:03.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.743" level="INFO">VALUE: [6.177800000000538e-05, 6.165300000000179e-05, 6.197200000000042e-05, 6.152699999999872e-05, 6.12629999999989e-05, 6.116599999999445e-05, 6.123599999999924e-05, 6.123599999999924e-05, 6.151399999999863e-05, 6.123600000000617e-05, 6.17080000000006e-05, 6.140300000000154e-05, 6.168100000000093e-05, 6.166700000000136e-05, 6.191700000000161e-05, 6.13200000000036e-05, 6.14029999999946e-05, 6.181999999999716e-05, 6.173599999999974e-05, 6.198599999999999e-05, 6.108399999999597e-05, 6.179099999999854e-05, 6.145800000000035e-05, 6.123599999999924e-05, 6.105499999999736e-05, 6.123599999999924e-05, 6.148599999999949e-05, 6.147199999999992e-05, 6.191700000000161e-05, 6.116700000000086e-05, 6.165300000000179e-05, 6.14300000000012e-05, 6.134700000000326e-05, 6.172299999999964e-05, 6.162500000000265e-05, 6.143100000000068e-05, 6.12499999999988e-05, 6.183299999999725e-05, 6.144400000000078e-05, 6.179199999999802e-05, 6.155499999999786e-05, 6.119400000000053e-05, 6.115300000000129e-05, 6.149999999999906e-05, 6.158300000000394e-05, 6.154199999999777e-05, 6.195900000000032e-05, 6.109799999999554e-05, 6.133400000000316e-05, 6.161100000000308e-05]</msg>
<status status="PASS" starttime="20201112 10:15:03.739" endtime="20201112 10:15:03.744"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.728" endtime="20201112 10:15:03.746"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.752" endtime="20201112 10:15:03.755"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:03.760" endtime="20201112 10:15:03.782"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.756" endtime="20201112 10:15:03.784"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.747" endtime="20201112 10:15:03.785"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.230" endtime="20201112 10:15:03.786"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.229" endtime="20201112 10:15:03.786"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.809" endtime="20201112 10:15:03.829"></status>
</kw>
<msg timestamp="20201112 10:15:03.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:03.805" endtime="20201112 10:15:03.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:03.833" endtime="20201112 10:15:03.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.839" endtime="20201112 10:15:03.843"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.798" endtime="20201112 10:15:03.844"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.793" endtime="20201112 10:15:03.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.862" endtime="20201112 10:15:04.208"></status>
</kw>
<msg timestamp="20201112 10:15:04.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041537181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041599278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:03.859" endtime="20201112 10:15:04.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041537181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041599278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:04.217" endtime="20201112 10:15:04.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.236" endtime="20201112 10:15:04.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.852" endtime="20201112 10:15:04.243"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.847" endtime="20201112 10:15:04.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:04.255" level="INFO">${RESULT} = [{'time': 0.041599278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.209700000000401e-05, 'source_diff': 6.209700000000401e-05}, {'time': 0.04168025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:15:04.246" endtime="20201112 10:15:04.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:04.286" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:04.257" endtime="20201112 10:15:04.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.296" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 10:15:04.294" endtime="20201112 10:15:04.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.302" level="INFO">VALUE: [6.209700000000401e-05, 6.218100000000143e-05, 6.230599999999809e-05, 6.30279999999997e-05, 6.27500000000003e-05, 6.284700000000476e-05, 6.223600000000024e-05, 6.297299999999395e-05, 6.222300000000014e-05, 6.213900000000272e-05, 6.223600000000024e-05, 6.222200000000067e-05, 6.211100000000358e-05, 6.261099999999714e-05, 6.244399999999484e-05, 6.279099999999954e-05, 6.243100000000168e-05, 6.297200000000142e-05, 6.291699999999567e-05, 6.205599999999784e-05, 6.218000000000196e-05, 6.306899999999893e-05, 6.248600000000049e-05, 6.26950000000015e-05, 6.27080000000016e-05, 6.295800000000185e-05, 6.2582999999998e-05, 6.216600000000239e-05, 6.2582999999998e-05, 6.297200000000142e-05, 6.223600000000024e-05, 6.283399999999773e-05, 6.229199999999852e-05, 6.20420000000052e-05, 6.222200000000067e-05, 6.265200000000332e-05, 6.215199999999588e-05, 6.212500000000315e-05, 6.291700000000261e-05, 6.254100000000623e-05, 6.280499999999911e-05, 6.283299999999825e-05, 6.281899999999868e-05, 6.218100000000143e-05, 6.265299999999585e-05, 6.291700000000261e-05, 6.247200000000092e-05, 6.218100000000143e-05, 6.262499999999671e-05, 6.205599999999784e-05]</msg>
<status status="PASS" starttime="20201112 10:15:04.299" endtime="20201112 10:15:04.303"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.287" endtime="20201112 10:15:04.305"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.311" endtime="20201112 10:15:04.314"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:04.319" endtime="20201112 10:15:04.341"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.315" endtime="20201112 10:15:04.343"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.307" endtime="20201112 10:15:04.344"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.788" endtime="20201112 10:15:04.345"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.787" endtime="20201112 10:15:04.345"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.368" endtime="20201112 10:15:04.389"></status>
</kw>
<msg timestamp="20201112 10:15:04.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.364" endtime="20201112 10:15:04.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.392" endtime="20201112 10:15:04.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.396" endtime="20201112 10:15:04.398"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.357" endtime="20201112 10:15:04.398"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.352" endtime="20201112 10:15:04.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.407" endtime="20201112 10:15:04.714"></status>
</kw>
<msg timestamp="20201112 10:15:04.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041616194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041679667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:04.405" endtime="20201112 10:15:04.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041616194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041679667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:04.724" endtime="20201112 10:15:04.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.742" endtime="20201112 10:15:04.749"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.402" endtime="20201112 10:15:04.751"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.400" endtime="20201112 10:15:04.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:04.763" level="INFO">${RESULT} = [{'time': 0.041679667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.347299999999445e-05, 'source_diff': 6.347299999999445e-05}, {'time': 0.041758681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:04.754" endtime="20201112 10:15:04.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:04.793" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:04.765" endtime="20201112 10:15:04.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.804" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 10:15:04.802" endtime="20201112 10:15:04.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.809" level="INFO">VALUE: [6.347299999999445e-05, 6.316699999999592e-05, 6.308399999999798e-05, 6.365300000000379e-05, 6.304199999999927e-05, 6.318100000000243e-05, 6.316600000000339e-05, 6.391600000000414e-05, 6.388900000000447e-05, 6.329100000000004e-05, 6.317999999999602e-05, 6.400000000000156e-05, 6.306900000000587e-05, 6.40280000000007e-05, 6.32500000000008e-05, 6.384699999999882e-05, 6.393100000000318e-05, 6.318099999999549e-05, 6.376400000000088e-05, 6.390300000000404e-05, 6.392999999999677e-05, 6.341699999999617e-05, 6.341600000000364e-05, 6.37080000000026e-05, 6.317999999999602e-05, 6.322200000000167e-05, 6.37500000000013e-05, 6.366699999999642e-05, 6.3582999999999e-05, 6.344400000000278e-05, 6.315199999999688e-05, 6.386099999999839e-05, 6.381999999999916e-05, 6.333299999999875e-05, 6.348700000000096e-05, 6.370900000000207e-05, 6.313899999999678e-05, 6.351400000000063e-05, 6.391700000000361e-05, 6.326400000000038e-05, 6.355499999999986e-05, 6.363899999999728e-05, 6.387499999999796e-05, 6.32500000000008e-05, 6.348600000000149e-05, 6.345800000000235e-05, 6.341699999999617e-05, 6.393100000000318e-05, 6.315299999999635e-05, 6.323600000000124e-05]</msg>
<status status="PASS" starttime="20201112 10:15:04.806" endtime="20201112 10:15:04.811"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.795" endtime="20201112 10:15:04.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.819" endtime="20201112 10:15:04.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:04.827" endtime="20201112 10:15:04.848"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.823" endtime="20201112 10:15:04.850"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.814" endtime="20201112 10:15:04.852"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.347" endtime="20201112 10:15:04.852"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.346" endtime="20201112 10:15:04.853"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.875" endtime="20201112 10:15:04.896"></status>
</kw>
<msg timestamp="20201112 10:15:04.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.872" endtime="20201112 10:15:04.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.900" endtime="20201112 10:15:04.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.906" endtime="20201112 10:15:04.909"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.865" endtime="20201112 10:15:04.911"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.859" endtime="20201112 10:15:04.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.929" endtime="20201112 10:15:05.263"></status>
</kw>
<msg timestamp="20201112 10:15:05.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041771792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041836153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:04.926" endtime="20201112 10:15:05.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041771792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041836153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:05.272" endtime="20201112 10:15:05.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.291" endtime="20201112 10:15:05.296"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.918" endtime="20201112 10:15:05.297"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.914" endtime="20201112 10:15:05.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:05.309" level="INFO">${RESULT} = [{'time': 0.041836153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.436099999999889e-05, 'source_diff': 6.436099999999889e-05}, {'time': 0.041911139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:05.300" endtime="20201112 10:15:05.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:05.340" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:05.311" endtime="20201112 10:15:05.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.351" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 10:15:05.348" endtime="20201112 10:15:05.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.356" level="INFO">VALUE: [6.436099999999889e-05, 6.498600000000299e-05, 6.448599999999555e-05, 6.483399999999973e-05, 6.491699999999767e-05, 6.42359999999953e-05, 6.409699999999907e-05, 6.427700000000147e-05, 6.44300000000042e-05, 6.47909999999946e-05, 6.430500000000061e-05, 6.479200000000102e-05, 6.45280000000012e-05, 6.423600000000224e-05, 6.497200000000342e-05, 6.466699999999742e-05, 6.426400000000138e-05, 6.431999999999966e-05, 6.493099999999724e-05, 6.472200000000317e-05, 6.493100000000418e-05, 6.408399999999898e-05, 6.445800000000335e-05, 6.40829999999995e-05, 6.448600000000249e-05, 6.468000000000446e-05, 6.479100000000154e-05, 6.452799999999426e-05, 6.426400000000138e-05, 6.468099999999699e-05, 6.451400000000163e-05, 6.441699999999717e-05, 6.415299999999735e-05, 6.430600000000009e-05, 6.466599999999795e-05, 6.476400000000188e-05, 6.466600000000489e-05, 6.482000000000016e-05, 6.483299999999331e-05, 6.455500000000086e-05, 6.40829999999995e-05, 6.452799999999426e-05, 6.415299999999735e-05, 6.416700000000386e-05, 6.448600000000249e-05, 6.404200000000027e-05, 6.409699999999907e-05, 6.407000000000634e-05, 6.473600000000274e-05, 6.431999999999966e-05]</msg>
<status status="PASS" starttime="20201112 10:15:05.353" endtime="20201112 10:15:05.358"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.342" endtime="20201112 10:15:05.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.366" endtime="20201112 10:15:05.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:05.374" endtime="20201112 10:15:05.395"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.369" endtime="20201112 10:15:05.397"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.361" endtime="20201112 10:15:05.398"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.855" endtime="20201112 10:15:05.399"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.854" endtime="20201112 10:15:05.399"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.422" endtime="20201112 10:15:05.443"></status>
</kw>
<msg timestamp="20201112 10:15:05.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:05.418" endtime="20201112 10:15:05.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:05.446" endtime="20201112 10:15:05.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.452" endtime="20201112 10:15:05.456"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.411" endtime="20201112 10:15:05.458"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.406" endtime="20201112 10:15:05.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.475" endtime="20201112 10:15:05.810"></status>
</kw>
<msg timestamp="20201112 10:15:05.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04170725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041772722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:05.472" endtime="20201112 10:15:05.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04170725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041772722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:05.819" endtime="20201112 10:15:05.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.838" endtime="20201112 10:15:05.843"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.465" endtime="20201112 10:15:05.845"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.460" endtime="20201112 10:15:05.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:05.857" level="INFO">${RESULT} = [{'time': 0.041772722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.547199999999698e-05, 'source_diff': 6.547199999999698e-05}, {'time': 0.041846722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:05.848" endtime="20201112 10:15:05.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:05.887" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:05.859" endtime="20201112 10:15:05.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.898" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 10:15:05.896" endtime="20201112 10:15:05.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.904" level="INFO">VALUE: [6.547199999999698e-05, 6.544400000000478e-05, 6.581900000000168e-05, 6.60280000000027e-05, 6.511099999999964e-05, 6.584700000000082e-05, 6.570899999999713e-05, 6.573700000000321e-05, 6.52080000000041e-05, 6.566699999999842e-05, 6.590199999999963e-05, 6.516599999999845e-05, 6.54159999999987e-05, 6.593099999999824e-05, 6.577700000000297e-05, 6.524999999999587e-05, 6.57500000000033e-05, 6.577800000000245e-05, 6.577800000000245e-05, 6.583300000000125e-05, 6.568099999999799e-05, 6.541699999999817e-05, 6.53620000000063e-05, 6.518100000000443e-05, 6.572199999999723e-05, 6.505500000000136e-05, 6.598600000000399e-05, 6.556900000000143e-05, 6.57500000000033e-05, 6.592999999999877e-05, 6.600000000000356e-05, 6.577800000000245e-05, 6.565299999999885e-05, 6.572199999999723e-05, 6.593099999999824e-05, 6.54029999999986e-05, 6.505600000000084e-05, 6.523600000000324e-05, 6.555600000000134e-05, 6.52359999999963e-05, 6.590199999999963e-05, 6.59159999999992e-05, 6.565299999999885e-05, 6.541600000000564e-05, 6.602799999999576e-05, 6.529200000000152e-05, 6.526400000000238e-05, 6.586100000000039e-05, 6.604199999999533e-05, 6.591699999999867e-05]</msg>
<status status="PASS" starttime="20201112 10:15:05.901" endtime="20201112 10:15:05.905"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.889" endtime="20201112 10:15:05.907"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.913" endtime="20201112 10:15:05.916"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:05.922" endtime="20201112 10:15:05.943"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.917" endtime="20201112 10:15:05.945"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.909" endtime="20201112 10:15:05.946"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.402" endtime="20201112 10:15:05.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.400" endtime="20201112 10:15:05.947"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.969" endtime="20201112 10:15:05.990"></status>
</kw>
<msg timestamp="20201112 10:15:05.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:05.966" endtime="20201112 10:15:05.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:05.994" endtime="20201112 10:15:05.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.000" endtime="20201112 10:15:06.004"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.959" endtime="20201112 10:15:06.006"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.954" endtime="20201112 10:15:06.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.025" endtime="20201112 10:15:06.357"></status>
</kw>
<msg timestamp="20201112 10:15:06.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041331806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04139825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:06.021" endtime="20201112 10:15:06.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041331806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04139825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:06.367" endtime="20201112 10:15:06.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.385" endtime="20201112 10:15:06.391"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.014" endtime="20201112 10:15:06.392"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.008" endtime="20201112 10:15:06.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:06.404" level="INFO">${RESULT} = [{'time': 0.04139825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.644399999999884e-05, 'source_diff': 6.644399999999884e-05}, {'time': 0.041472264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:15:06.395" endtime="20201112 10:15:06.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:06.435" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:06.406" endtime="20201112 10:15:06.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.445" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 10:15:06.443" endtime="20201112 10:15:06.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.451" level="INFO">VALUE: [6.644399999999884e-05, 6.668099999999899e-05, 6.650000000000406e-05, 6.648699999999702e-05, 6.608400000000098e-05, 6.609700000000107e-05, 6.648599999999755e-05, 6.693099999999924e-05, 6.698599999999805e-05, 6.62359999999973e-05, 6.674999999999737e-05, 6.609700000000107e-05, 6.630500000000261e-05, 6.670799999999866e-05, 6.699999999999762e-05, 6.679200000000302e-05, 6.659700000000157e-05, 6.62500000000038e-05, 6.661100000000114e-05, 6.691699999999967e-05, 6.69160000000002e-05, 6.650000000000406e-05, 6.704099999999685e-05, 6.684699999999488e-05, 6.624999999999687e-05, 6.654100000000329e-05, 6.667999999999952e-05, 6.609700000000107e-05, 6.624999999999687e-05, 6.636100000000089e-05, 6.669399999999909e-05, 6.655600000000234e-05, 6.676400000000388e-05, 6.616699999999892e-05, 6.701399999999719e-05, 6.694499999999881e-05, 6.612500000000021e-05, 6.626400000000338e-05, 6.669399999999909e-05, 6.652799999999626e-05, 6.62359999999973e-05, 6.695799999999891e-05, 6.630600000000209e-05, 6.701400000000413e-05, 6.649999999999712e-05, 6.60830000000015e-05, 6.676400000000388e-05, 6.64029999999996e-05, 6.655600000000234e-05, 6.659800000000105e-05]</msg>
<status status="PASS" starttime="20201112 10:15:06.448" endtime="20201112 10:15:06.452"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.436" endtime="20201112 10:15:06.454"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.460" endtime="20201112 10:15:06.463"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:06.468" endtime="20201112 10:15:06.490"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.464" endtime="20201112 10:15:06.492"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.456" endtime="20201112 10:15:06.493"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.949" endtime="20201112 10:15:06.494"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.948" endtime="20201112 10:15:06.494"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.516" endtime="20201112 10:15:06.538"></status>
</kw>
<msg timestamp="20201112 10:15:06.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.513" endtime="20201112 10:15:06.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.541" endtime="20201112 10:15:06.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.547" endtime="20201112 10:15:06.551"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.506" endtime="20201112 10:15:06.552"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.500" endtime="20201112 10:15:06.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.570" endtime="20201112 10:15:06.902"></status>
</kw>
<msg timestamp="20201112 10:15:06.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041513542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041580792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.567" endtime="20201112 10:15:06.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041513542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041580792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.911" endtime="20201112 10:15:06.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.930" endtime="20201112 10:15:06.937"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.560" endtime="20201112 10:15:06.939"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.555" endtime="20201112 10:15:06.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:06.950" level="INFO">${RESULT} = [{'time': 0.041580792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.724999999999787e-05, 'source_diff': 6.724999999999787e-05}, {'time': 0.041655792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:06.942" endtime="20201112 10:15:06.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:06.981" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:06.952" endtime="20201112 10:15:06.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.992" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 10:15:06.989" endtime="20201112 10:15:06.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.997" level="INFO">VALUE: [6.724999999999787e-05, 6.727799999999701e-05, 6.75700000000029e-05, 6.712499999999427e-05, 6.74160000000007e-05, 6.75280000000042e-05, 6.765300000000085e-05, 6.793100000000024e-05, 6.754199999999683e-05, 6.738900000000103e-05, 6.716699999999992e-05, 6.709700000000207e-05, 6.709700000000207e-05, 6.729199999999658e-05, 6.737500000000146e-05, 6.769499999999956e-05, 6.776299999999846e-05, 6.72909999999971e-05, 6.744399999999984e-05, 6.751400000000463e-05, 6.79160000000012e-05, 6.730599999999615e-05, 6.77500000000053e-05, 6.736100000000189e-05, 6.802799999999776e-05, 6.768099999999999e-05, 6.732000000000266e-05, 6.800000000000556e-05, 6.70979999999946e-05, 6.750000000000506e-05, 6.797199999999948e-05, 6.708400000000198e-05, 6.727699999999753e-05, 6.787500000000196e-05, 6.794400000000034e-05, 6.734700000000232e-05, 6.730600000000309e-05, 6.730500000000361e-05, 6.794400000000034e-05, 6.791700000000067e-05, 6.723699999999777e-05, 6.794499999999981e-05, 6.75700000000029e-05, 6.745899999999888e-05, 6.755600000000334e-05, 6.699999999999762e-05, 6.726399999999744e-05, 6.718000000000002e-05, 6.773600000000574e-05, 6.77909999999976e-05]</msg>
<status status="PASS" starttime="20201112 10:15:06.994" endtime="20201112 10:15:07.005"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.983" endtime="20201112 10:15:07.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.013" endtime="20201112 10:15:07.016"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:07.021" endtime="20201112 10:15:07.043"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.017" endtime="20201112 10:15:07.045"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.008" endtime="20201112 10:15:07.046"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.496" endtime="20201112 10:15:07.047"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.495" endtime="20201112 10:15:07.048"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.071" endtime="20201112 10:15:07.092"></status>
</kw>
<msg timestamp="20201112 10:15:07.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:07.068" endtime="20201112 10:15:07.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:07.096" endtime="20201112 10:15:07.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.102" endtime="20201112 10:15:07.106"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.060" endtime="20201112 10:15:07.107"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.054" endtime="20201112 10:15:07.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.125" endtime="20201112 10:15:07.458"></status>
</kw>
<msg timestamp="20201112 10:15:07.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043798875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043867069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:07.122" endtime="20201112 10:15:07.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043798875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043867069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:07.467" endtime="20201112 10:15:07.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.486" endtime="20201112 10:15:07.491"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.115" endtime="20201112 10:15:07.493"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.110" endtime="20201112 10:15:07.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:07.505" level="INFO">${RESULT} = [{'time': 0.043867069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.819400000000059e-05, 'source_diff': 6.819400000000059e-05}, {'time': 0.043942069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:07.496" endtime="20201112 10:15:07.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:07.535" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:07.507" endtime="20201112 10:15:07.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.546" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 10:15:07.544" endtime="20201112 10:15:07.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.552" level="INFO">VALUE: [6.819400000000059e-05, 6.827699999999853e-05, 6.819400000000059e-05, 6.816700000000092e-05, 6.804100000000479e-05, 6.866700000000142e-05, 6.858299999999706e-05, 6.84030000000016e-05, 6.837500000000246e-05, 6.880600000000459e-05, 6.898600000000005e-05, 6.844500000000031e-05, 6.899999999999962e-05, 6.852799999999826e-05, 6.895800000000091e-05, 6.805499999999742e-05, 6.826400000000538e-05, 6.872200000000023e-05, 6.809700000000307e-05, 6.829200000000452e-05, 6.837499999999552e-05, 6.868099999999405e-05, 6.895900000000038e-05, 6.82229999999992e-05, 6.850000000000606e-05, 6.900000000000656e-05, 6.844500000000031e-05, 6.809800000000255e-05, 6.820800000000016e-05, 6.815300000000135e-05, 6.901399999999919e-05, 6.863900000000228e-05, 6.8583000000004e-05, 6.886100000000339e-05, 6.827800000000495e-05, 6.879200000000502e-05, 6.876399999999894e-05, 6.866700000000142e-05, 6.869399999999415e-05, 6.831900000000418e-05, 6.886099999999645e-05, 6.838800000000256e-05, 6.87909999999986e-05, 6.851299999999921e-05, 6.848599999999955e-05, 6.901399999999919e-05, 6.809699999999613e-05, 6.89439999999944e-05, 6.801399999999819e-05, 6.898600000000005e-05]</msg>
<status status="PASS" starttime="20201112 10:15:07.549" endtime="20201112 10:15:07.553"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.537" endtime="20201112 10:15:07.555"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.561" endtime="20201112 10:15:07.564"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:07.569" endtime="20201112 10:15:07.591"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.565" endtime="20201112 10:15:07.592"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.557" endtime="20201112 10:15:07.594"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.050" endtime="20201112 10:15:07.595"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.048" endtime="20201112 10:15:07.595"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.617" endtime="20201112 10:15:07.639"></status>
</kw>
<msg timestamp="20201112 10:15:07.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:07.614" endtime="20201112 10:15:07.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:07.642" endtime="20201112 10:15:07.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.648" endtime="20201112 10:15:07.652"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.607" endtime="20201112 10:15:07.653"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.601" endtime="20201112 10:15:07.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.671" endtime="20201112 10:15:07.980"></status>
</kw>
<msg timestamp="20201112 10:15:07.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041425792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041495319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:07.668" endtime="20201112 10:15:07.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041425792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041495319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:07.984" endtime="20201112 10:15:07.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.993" endtime="20201112 10:15:07.995"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.661" endtime="20201112 10:15:07.996"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.656" endtime="20201112 10:15:07.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:08.002" level="INFO">${RESULT} = [{'time': 0.041495319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.952699999999978e-05, 'source_diff': 6.952699999999978e-05}, {'time': 0.041573333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:07.997" endtime="20201112 10:15:08.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:08.015" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:08.003" endtime="20201112 10:15:08.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.020" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 10:15:08.019" endtime="20201112 10:15:08.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.023" level="INFO">VALUE: [6.952699999999978e-05, 6.987499999999702e-05, 6.919400000000159e-05, 6.909699999999713e-05, 6.931899999999824e-05, 6.92360000000003e-05, 6.952799999999926e-05, 6.92360000000003e-05, 6.983299999999831e-05, 6.950000000000012e-05, 6.965300000000285e-05, 6.92360000000003e-05, 6.950000000000012e-05, 6.91109999999967e-05, 6.979199999999908e-05, 6.995800000000191e-05, 6.916599999999551e-05, 6.995800000000191e-05, 6.937499999999652e-05, 7.000000000000062e-05, 6.945800000000141e-05, 6.965300000000285e-05, 6.986100000000439e-05, 6.912500000000321e-05, 6.991699999999573e-05, 6.959699999999763e-05, 6.966700000000242e-05, 6.938799999999662e-05, 6.931899999999824e-05, 6.951300000000021e-05, 6.955499999999892e-05, 6.995800000000191e-05, 6.948600000000055e-05, 6.987500000000396e-05, 6.951399999999969e-05, 6.998600000000105e-05, 6.972200000000123e-05, 6.966700000000242e-05, 6.913900000000278e-05, 6.998700000000052e-05, 6.970799999999472e-05, 6.966700000000242e-05, 6.908299999999756e-05, 6.906899999999799e-05, 6.926399999999944e-05, 6.976399999999994e-05, 6.912500000000321e-05, 6.962500000000371e-05, 6.970800000000166e-05, 6.924999999999987e-05]</msg>
<status status="PASS" starttime="20201112 10:15:08.022" endtime="20201112 10:15:08.024"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.016" endtime="20201112 10:15:08.025"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.028" endtime="20201112 10:15:08.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:08.032" endtime="20201112 10:15:08.053"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.029" endtime="20201112 10:15:08.054"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.025" endtime="20201112 10:15:08.056"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.597" endtime="20201112 10:15:08.056"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.596" endtime="20201112 10:15:08.057"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.079" endtime="20201112 10:15:08.101"></status>
</kw>
<msg timestamp="20201112 10:15:08.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.076" endtime="20201112 10:15:08.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.105" endtime="20201112 10:15:08.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.111" endtime="20201112 10:15:08.115"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.069" endtime="20201112 10:15:08.117"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.063" endtime="20201112 10:15:08.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.135" endtime="20201112 10:15:08.468"></status>
</kw>
<msg timestamp="20201112 10:15:08.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042450597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042521014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:08.132" endtime="20201112 10:15:08.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042450597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042521014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:08.478" endtime="20201112 10:15:08.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.496" endtime="20201112 10:15:08.502"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.124" endtime="20201112 10:15:08.503"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.119" endtime="20201112 10:15:08.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:08.515" level="INFO">${RESULT} = [{'time': 0.042521014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.041700000000317e-05, 'source_diff': 7.041700000000317e-05}, {'time': 0.042603958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:08.506" endtime="20201112 10:15:08.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:08.546" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:08.517" endtime="20201112 10:15:08.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.556" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 10:15:08.554" endtime="20201112 10:15:08.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.562" level="INFO">VALUE: [7.041700000000317e-05, 7.005499999999942e-05, 7.091599999999726e-05, 7.093100000000324e-05, 7.05559999999994e-05, 7.09309999999963e-05, 7.048600000000155e-05, 7.002799999999976e-05, 7.016599999999651e-05, 7.065299999999691e-05, 7.094400000000334e-05, 7.00559999999989e-05, 7.097200000000248e-05, 7.009699999999813e-05, 7.072200000000223e-05, 7.086099999999845e-05, 7.104100000000085e-05, 7.079200000000008e-05, 7.031899999999924e-05, 7.031899999999924e-05, 7.031999999999872e-05, 7.006999999999847e-05, 7.045900000000188e-05, 7.07360000000018e-05, 7.055499999999992e-05, 7.083400000000573e-05, 7.104100000000085e-05, 7.033299999999881e-05, 7.084699999999888e-05, 7.033299999999881e-05, 7.050000000000112e-05, 7.077800000000051e-05, 7.069399999999615e-05, 7.100000000000162e-05, 7.05559999999994e-05, 7.098600000000205e-05, 7.104200000000033e-05, 7.026400000000044e-05, 7.025000000000087e-05, 7.045799999999547e-05, 7.038900000000403e-05, 7.020800000000216e-05, 7.066599999999701e-05, 7.001400000000019e-05, 7.101400000000119e-05, 7.100000000000162e-05, 7.041700000000317e-05, 7.00700000000054e-05, 7.052800000000026e-05, 7.09030000000041e-05]</msg>
<status status="PASS" starttime="20201112 10:15:08.559" endtime="20201112 10:15:08.563"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.548" endtime="20201112 10:15:08.565"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.571" endtime="20201112 10:15:08.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:08.580" endtime="20201112 10:15:08.601"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.575" endtime="20201112 10:15:08.603"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.567" endtime="20201112 10:15:08.604"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.059" endtime="20201112 10:15:08.605"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.058" endtime="20201112 10:15:08.605"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.628" endtime="20201112 10:15:08.649"></status>
</kw>
<msg timestamp="20201112 10:15:08.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.625" endtime="20201112 10:15:08.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.653" endtime="20201112 10:15:08.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.659" endtime="20201112 10:15:08.663"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.617" endtime="20201112 10:15:08.664"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.612" endtime="20201112 10:15:08.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.682" endtime="20201112 10:15:09.019"></status>
</kw>
<msg timestamp="20201112 10:15:09.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041966708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042038083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:08.679" endtime="20201112 10:15:09.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041966708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042038083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:09.029" endtime="20201112 10:15:09.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.047" endtime="20201112 10:15:09.055"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.672" endtime="20201112 10:15:09.056"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.667" endtime="20201112 10:15:09.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:09.068" level="INFO">${RESULT} = [{'time': 0.042038083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.137499999999852e-05, 'source_diff': 7.137499999999852e-05}, {'time': 0.042118097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:09.059" endtime="20201112 10:15:09.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:09.099" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:09.070" endtime="20201112 10:15:09.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.110" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 10:15:09.108" endtime="20201112 10:15:09.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.116" level="INFO">VALUE: [7.137499999999852e-05, 7.165299999999791e-05, 7.165299999999791e-05, 7.11109999999987e-05, 7.143000000000427e-05, 7.116599999999751e-05, 7.116599999999751e-05, 7.17360000000028e-05, 7.176400000000194e-05, 7.191700000000467e-05, 7.168100000000399e-05, 7.123599999999536e-05, 7.202800000000176e-05, 7.129200000000058e-05, 7.138899999999809e-05, 7.193100000000424e-05, 7.158399999999954e-05, 7.138899999999809e-05, 7.169399999999715e-05, 7.158300000000006e-05, 7.12910000000011e-05, 7.116600000000445e-05, 7.116599999999751e-05, 7.179200000000108e-05, 7.15560000000004e-05, 7.122200000000273e-05, 7.115299999999741e-05, 7.201400000000219e-05, 7.148600000000255e-05, 7.118099999999655e-05, 7.168100000000399e-05, 7.12360000000023e-05, 7.140299999999766e-05, 7.142999999999733e-05, 7.202799999999482e-05, 7.165299999999791e-05, 7.184699999999988e-05, 7.175000000000237e-05, 7.152800000000126e-05, 7.16109999999992e-05, 7.120799999999622e-05, 7.115299999999741e-05, 7.104200000000033e-05, 7.200000000000262e-05, 7.154200000000083e-05, 7.126300000000196e-05, 7.131900000000024e-05, 7.138899999999809e-05, 7.159699999999963e-05, 7.155500000000092e-05]</msg>
<status status="PASS" starttime="20201112 10:15:09.112" endtime="20201112 10:15:09.117"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.101" endtime="20201112 10:15:09.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.126" endtime="20201112 10:15:09.129"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:09.135" endtime="20201112 10:15:09.157"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.130" endtime="20201112 10:15:09.159"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.121" endtime="20201112 10:15:09.161"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.607" endtime="20201112 10:15:09.161"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.606" endtime="20201112 10:15:09.162"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.187" endtime="20201112 10:15:09.208"></status>
</kw>
<msg timestamp="20201112 10:15:09.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:09.184" endtime="20201112 10:15:09.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:09.211" endtime="20201112 10:15:09.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.218" endtime="20201112 10:15:09.221"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.176" endtime="20201112 10:15:09.223"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.169" endtime="20201112 10:15:09.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.241" endtime="20201112 10:15:09.580"></status>
</kw>
<msg timestamp="20201112 10:15:09.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045360861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045433542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:09.238" endtime="20201112 10:15:09.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045360861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045433542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:09.589" endtime="20201112 10:15:09.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.608" endtime="20201112 10:15:09.613"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.230" endtime="20201112 10:15:09.615"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.226" endtime="20201112 10:15:09.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:09.627" level="INFO">${RESULT} = [{'time': 0.045433542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.268099999999805e-05, 'source_diff': 7.268099999999805e-05}, {'time': 0.045524514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:09.618" endtime="20201112 10:15:09.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:09.657" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:09.629" endtime="20201112 10:15:09.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.668" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 10:15:09.666" endtime="20201112 10:15:09.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.674" level="INFO">VALUE: [7.268099999999805e-05, 7.284700000000088e-05, 7.212499999999927e-05, 7.283400000000079e-05, 7.263899999999934e-05, 7.224999999999593e-05, 7.276299999999652e-05, 7.287500000000002e-05, 7.304099999999591e-05, 7.218000000000502e-05, 7.290299999999916e-05, 7.280499999999523e-05, 7.25690000000015e-05, 7.258300000000106e-05, 7.213900000000578e-05, 7.286100000000045e-05, 7.216699999999798e-05, 7.266699999999848e-05, 7.227800000000201e-05, 7.242999999999833e-05, 7.280500000000217e-05, 7.301300000000371e-05, 7.219399999999765e-05, 7.229200000000158e-05, 7.29309999999983e-05, 7.304099999999591e-05, 7.250000000000312e-05, 7.284700000000088e-05, 7.213899999999884e-05, 7.209700000000013e-05, 7.279200000000208e-05, 7.269500000000456e-05, 7.209799999999961e-05, 7.270899999999719e-05, 7.205599999999396e-05, 7.281900000000174e-05, 7.266599999999901e-05, 7.273599999999686e-05, 7.22910000000021e-05, 7.29439999999984e-05, 7.249999999999618e-05, 7.245899999999694e-05, 7.229200000000158e-05, 7.22639999999955e-05, 7.236099999999995e-05, 7.249999999999618e-05, 7.247199999999704e-05, 7.268000000000552e-05, 7.218000000000502e-05, 7.230500000000167e-05]</msg>
<status status="PASS" starttime="20201112 10:15:09.670" endtime="20201112 10:15:09.675"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.659" endtime="20201112 10:15:09.677"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.683" endtime="20201112 10:15:09.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:09.691" endtime="20201112 10:15:09.713"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.687" endtime="20201112 10:15:09.714"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.678" endtime="20201112 10:15:09.716"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.164" endtime="20201112 10:15:09.717"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.163" endtime="20201112 10:15:09.717"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.739" endtime="20201112 10:15:09.761"></status>
</kw>
<msg timestamp="20201112 10:15:09.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:09.736" endtime="20201112 10:15:09.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:09.764" endtime="20201112 10:15:09.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.771" endtime="20201112 10:15:09.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.729" endtime="20201112 10:15:09.776"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.723" endtime="20201112 10:15:09.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.794" endtime="20201112 10:15:10.128"></status>
</kw>
<msg timestamp="20201112 10:15:10.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041587556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041660653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:09.791" endtime="20201112 10:15:10.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041587556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041660653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:10.137" endtime="20201112 10:15:10.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.156" endtime="20201112 10:15:10.162"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.784" endtime="20201112 10:15:10.163"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.779" endtime="20201112 10:15:10.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:10.176" level="INFO">${RESULT} = [{'time': 0.041660653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.309700000000113e-05, 'source_diff': 7.309700000000113e-05}, {'time': 0.041751681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:10.167" endtime="20201112 10:15:10.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:10.207" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:10.178" endtime="20201112 10:15:10.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.218" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 10:15:10.216" endtime="20201112 10:15:10.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.223" level="INFO">VALUE: [7.309700000000113e-05, 7.372299999999776e-05, 7.329200000000258e-05, 7.316699999999898e-05, 7.401299999999778e-05, 7.386099999999451e-05, 7.33189999999953e-05, 7.342999999999933e-05, 7.388900000000059e-05, 7.37360000000048e-05, 7.368099999999905e-05, 7.39439999999994e-05, 7.374999999999743e-05, 7.395899999999844e-05, 7.329199999999564e-05, 7.366600000000001e-05, 7.32639999999965e-05, 7.369399999999915e-05, 7.375000000000437e-05, 7.350000000000412e-05, 7.345799999999847e-05, 7.340299999999966e-05, 7.375000000000437e-05, 7.3763999999997e-05, 7.315299999999941e-05, 7.327700000000353e-05, 7.326300000000396e-05, 7.322299999999726e-05, 7.359700000000163e-05, 7.366600000000001e-05, 7.390200000000069e-05, 7.320799999999822e-05, 7.327700000000353e-05, 7.375000000000437e-05, 7.367999999999958e-05, 7.391699999999973e-05, 7.365299999999991e-05, 7.374999999999743e-05, 7.400000000000462e-05, 7.358400000000154e-05, 7.384800000000136e-05, 7.394499999999887e-05, 7.390300000000016e-05, 7.315199999999994e-05, 7.359700000000163e-05, 7.351300000000421e-05, 7.377700000000403e-05, 7.334699999999444e-05, 7.379200000000308e-05, 7.354200000000283e-05]</msg>
<status status="PASS" starttime="20201112 10:15:10.220" endtime="20201112 10:15:10.225"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.209" endtime="20201112 10:15:10.226"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.233" endtime="20201112 10:15:10.235"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:10.241" endtime="20201112 10:15:10.262"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.237" endtime="20201112 10:15:10.264"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.228" endtime="20201112 10:15:10.266"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.719" endtime="20201112 10:15:10.266"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.718" endtime="20201112 10:15:10.267"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.289" endtime="20201112 10:15:10.310"></status>
</kw>
<msg timestamp="20201112 10:15:10.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.286" endtime="20201112 10:15:10.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.313" endtime="20201112 10:15:10.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.319" endtime="20201112 10:15:10.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.279" endtime="20201112 10:15:10.325"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.273" endtime="20201112 10:15:10.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.343" endtime="20201112 10:15:10.675"></status>
</kw>
<msg timestamp="20201112 10:15:10.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041395528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041470208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:10.339" endtime="20201112 10:15:10.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041395528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041470208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:10.684" endtime="20201112 10:15:10.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.702" endtime="20201112 10:15:10.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.332" endtime="20201112 10:15:10.709"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.327" endtime="20201112 10:15:10.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:10.721" level="INFO">${RESULT} = [{'time': 0.041470208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.468000000000058e-05, 'source_diff': 7.468000000000058e-05}, {'time': 0.041559167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:10.712" endtime="20201112 10:15:10.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:10.752" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:10.723" endtime="20201112 10:15:10.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.763" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 10:15:10.760" endtime="20201112 10:15:10.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.768" level="INFO">VALUE: [7.468000000000058e-05, 7.416699999999998e-05, 7.46519999999945e-05, 7.498599999999911e-05, 7.437499999999458e-05, 7.47769999999981e-05, 7.42910000000041e-05, 7.427800000000401e-05, 7.44169999999933e-05, 7.480599999999671e-05, 7.499999999999868e-05, 7.402800000000376e-05, 7.463900000000134e-05, 7.430599999999621e-05, 7.466600000000101e-05, 7.466600000000101e-05, 7.441600000000076e-05, 7.448599999999861e-05, 7.422199999999879e-05, 7.491700000000073e-05, 7.499999999999868e-05, 7.498599999999911e-05, 7.416699999999998e-05, 7.491700000000073e-05, 7.4763999999998e-05, 7.454200000000383e-05, 7.427799999999707e-05, 7.466599999999407e-05, 7.425000000000487e-05, 7.440300000000066e-05, 7.476299999999853e-05, 7.408300000000256e-05, 7.430500000000367e-05, 7.458300000000306e-05, 7.473599999999886e-05, 7.499999999999868e-05, 7.451299999999828e-05, 7.499999999999868e-05, 7.454200000000383e-05, 7.412500000000127e-05, 7.415300000000041e-05, 7.443000000000033e-05, 7.405500000000342e-05, 7.397200000000548e-05, 7.422199999999879e-05, 7.427799999999707e-05, 7.440299999999372e-05, 7.466700000000048e-05, 7.508299999999662e-05, 7.437500000000152e-05]</msg>
<status status="PASS" starttime="20201112 10:15:10.765" endtime="20201112 10:15:10.770"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.754" endtime="20201112 10:15:10.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.777" endtime="20201112 10:15:10.780"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:10.786" endtime="20201112 10:15:10.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.782" endtime="20201112 10:15:10.809"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.773" endtime="20201112 10:15:10.811"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.269" endtime="20201112 10:15:10.811"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.267" endtime="20201112 10:15:10.812"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.834" endtime="20201112 10:15:10.856"></status>
</kw>
<msg timestamp="20201112 10:15:10.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.831" endtime="20201112 10:15:10.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.859" endtime="20201112 10:15:10.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.865" endtime="20201112 10:15:10.869"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.824" endtime="20201112 10:15:10.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.818" endtime="20201112 10:15:10.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.888" endtime="20201112 10:15:11.221"></status>
</kw>
<msg timestamp="20201112 10:15:11.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041695847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041771292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:10.885" endtime="20201112 10:15:11.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041695847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041771292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:11.231" endtime="20201112 10:15:11.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.249" endtime="20201112 10:15:11.257"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.878" endtime="20201112 10:15:11.258"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.873" endtime="20201112 10:15:11.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:11.270" level="INFO">${RESULT} = [{'time': 0.041771292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.544500000000037e-05, 'source_diff': 7.544500000000037e-05}, {'time': 0.041859333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:11.261" endtime="20201112 10:15:11.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:11.287" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:11.272" endtime="20201112 10:15:11.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.292" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 10:15:11.291" endtime="20201112 10:15:11.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.295" level="INFO">VALUE: [7.544500000000037e-05, 7.569400000000115e-05, 7.58890000000026e-05, 7.518000000000108e-05, 7.530600000000415e-05, 7.577799999999857e-05, 7.55969999999967e-05, 7.569500000000062e-05, 7.547200000000004e-05, 7.57769999999991e-05, 7.58890000000026e-05, 7.566700000000148e-05, 7.522199999999979e-05, 7.522199999999979e-05, 7.587499999999608e-05, 7.570900000000019e-05, 7.565300000000191e-05, 7.526299999999903e-05, 7.537500000000252e-05, 7.515200000000194e-05, 7.504100000000485e-05, 7.602800000000576e-05, 7.554199999999789e-05, 7.573599999999986e-05, 7.540300000000166e-05, 7.554200000000483e-05, 7.590299999999522e-05, 7.551399999999875e-05, 7.518100000000055e-05, 7.529199999999764e-05, 7.534700000000338e-05, 7.515299999999447e-05, 7.505500000000442e-05, 7.522199999999979e-05, 7.566699999999454e-05, 7.527799999999807e-05, 7.566700000000148e-05, 7.570900000000019e-05, 7.540300000000166e-05, 7.599999999999968e-05, 7.595900000000044e-05, 7.526400000000544e-05, 7.565300000000191e-05, 7.534699999999644e-05, 7.590299999999522e-05, 7.529099999999816e-05, 7.551399999999875e-05, 7.565299999999497e-05, 7.598600000000011e-05, 7.566700000000148e-05]</msg>
<status status="PASS" starttime="20201112 10:15:11.293" endtime="20201112 10:15:11.296"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.288" endtime="20201112 10:15:11.296"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.299" endtime="20201112 10:15:11.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:11.303" endtime="20201112 10:15:11.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.301" endtime="20201112 10:15:11.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.297" endtime="20201112 10:15:11.324"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.814" endtime="20201112 10:15:11.324"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.813" endtime="20201112 10:15:11.325"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.335" endtime="20201112 10:15:11.353"></status>
</kw>
<msg timestamp="20201112 10:15:11.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:11.334" endtime="20201112 10:15:11.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:11.354" endtime="20201112 10:15:11.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.357" endtime="20201112 10:15:11.359"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.330" endtime="20201112 10:15:11.360"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.328" endtime="20201112 10:15:11.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.368" endtime="20201112 10:15:11.698"></status>
</kw>
<msg timestamp="20201112 10:15:11.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02445775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024534347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:11.366" endtime="20201112 10:15:11.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02445775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024534347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:11.707" endtime="20201112 10:15:11.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.726" endtime="20201112 10:15:11.731"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.363" endtime="20201112 10:15:11.733"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.361" endtime="20201112 10:15:11.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:11.745" level="INFO">${RESULT} = [{'time': 0.024534347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.659700000000116e-05, 'source_diff': 7.659700000000116e-05}, {'time': 0.024621361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:11.736" endtime="20201112 10:15:11.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:11.775" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:11.747" endtime="20201112 10:15:11.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.786" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 10:15:11.784" endtime="20201112 10:15:11.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.791" level="INFO">VALUE: [7.659700000000116e-05, 7.6764e-05, 7.690300000000316e-05, 7.609700000000066e-05, 7.616700000000198e-05, 7.675000000000043e-05, 7.648600000000061e-05, 7.673600000000086e-05, 7.64449999999979e-05, 7.692999999999936e-05, 7.686099999999751e-05, 7.67770000000001e-05, 7.67770000000001e-05, 7.615299999999894e-05, 7.658299999999812e-05, 7.704200000000286e-05, 7.699999999999721e-05, 7.666699999999901e-05, 7.683299999999837e-05, 7.641699999999876e-05, 7.700000000000068e-05, 7.665199999999997e-05, 7.652799999999932e-05, 7.61249999999998e-05, 7.633299999999787e-05, 7.64440000000019e-05, 7.654199999999889e-05, 7.611100000000023e-05, 7.704200000000286e-05, 7.629199999999864e-05, 7.64029999999992e-05, 7.648600000000061e-05, 7.691699999999926e-05, 7.677799999999957e-05, 7.641600000000276e-05, 7.680499999999923e-05, 7.679099999999967e-05, 7.655500000000245e-05, 7.633299999999787e-05, 7.615299999999894e-05, 7.6764e-05, 7.60969999999972e-05, 7.661100000000073e-05, 7.633300000000134e-05, 7.668100000000205e-05, 7.648699999999661e-05, 7.6764e-05, 7.701400000000025e-05, 7.62639999999995e-05, 7.661100000000073e-05]</msg>
<status status="PASS" starttime="20201112 10:15:11.788" endtime="20201112 10:15:11.793"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.777" endtime="20201112 10:15:11.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.801" endtime="20201112 10:15:11.803"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:11.809" endtime="20201112 10:15:11.831"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.805" endtime="20201112 10:15:11.832"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.796" endtime="20201112 10:15:11.834"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.326" endtime="20201112 10:15:11.834"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.325" endtime="20201112 10:15:11.835"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.857" endtime="20201112 10:15:11.879"></status>
</kw>
<msg timestamp="20201112 10:15:11.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:11.854" endtime="20201112 10:15:11.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:11.882" endtime="20201112 10:15:11.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.889" endtime="20201112 10:15:11.892"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.847" endtime="20201112 10:15:11.894"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.841" endtime="20201112 10:15:11.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.912" endtime="20201112 10:15:12.244"></status>
</kw>
<msg timestamp="20201112 10:15:12.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041411778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041489125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:11.908" endtime="20201112 10:15:12.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041411778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041489125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:12.254" endtime="20201112 10:15:12.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.273" endtime="20201112 10:15:12.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.901" endtime="20201112 10:15:12.280"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.897" endtime="20201112 10:15:12.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:12.292" level="INFO">${RESULT} = [{'time': 0.041489125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.734699999999844e-05, 'source_diff': 7.734699999999844e-05}, {'time': 0.041583153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:12.283" endtime="20201112 10:15:12.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:12.323" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:12.294" endtime="20201112 10:15:12.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.334" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 10:15:12.332" endtime="20201112 10:15:12.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.339" level="INFO">VALUE: [7.734699999999844e-05, 7.754199999999989e-05, 7.768099999999611e-05, 7.709799999999767e-05, 7.788799999999818e-05, 7.726300000000103e-05, 7.725000000000093e-05, 7.756899999999955e-05, 7.783299999999937e-05, 7.769400000000315e-05, 7.798600000000211e-05, 7.740299999999672e-05, 7.75969999999987e-05, 7.798600000000211e-05, 7.802800000000082e-05, 7.740299999999672e-05, 7.786199999999799e-05, 7.769400000000315e-05, 7.755599999999946e-05, 7.734699999999844e-05, 7.748600000000161e-05, 7.792999999999689e-05, 7.725000000000093e-05, 7.75969999999987e-05, 7.79169999999968e-05, 7.701400000000025e-05, 7.798600000000211e-05, 7.765300000000391e-05, 7.744500000000237e-05, 7.723600000000136e-05, 7.74169999999963e-05, 7.741599999999682e-05, 7.75969999999987e-05, 7.7069000000006e-05, 7.72770000000006e-05, 7.711099999999776e-05, 7.772300000000176e-05, 7.718100000000255e-05, 7.791700000000373e-05, 7.779200000000014e-05, 7.788899999999765e-05, 7.790300000000416e-05, 7.727800000000007e-05, 7.713799999999743e-05, 7.731999999999878e-05, 7.750000000000118e-05, 7.804100000000092e-05, 7.741600000000376e-05, 7.729199999999964e-05, 7.72640000000005e-05]</msg>
<status status="PASS" starttime="20201112 10:15:12.336" endtime="20201112 10:15:12.347"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.325" endtime="20201112 10:15:12.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.356" endtime="20201112 10:15:12.358"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:12.364" endtime="20201112 10:15:12.385"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.359" endtime="20201112 10:15:12.387"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.351" endtime="20201112 10:15:12.389"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.837" endtime="20201112 10:15:12.389"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.836" endtime="20201112 10:15:12.390"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.412" endtime="20201112 10:15:12.433"></status>
</kw>
<msg timestamp="20201112 10:15:12.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.409" endtime="20201112 10:15:12.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.437" endtime="20201112 10:15:12.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.443" endtime="20201112 10:15:12.447"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.402" endtime="20201112 10:15:12.448"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.396" endtime="20201112 10:15:12.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.466" endtime="20201112 10:15:12.799"></status>
</kw>
<msg timestamp="20201112 10:15:12.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041271806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041349889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:12.463" endtime="20201112 10:15:12.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041271806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041349889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:12.808" endtime="20201112 10:15:12.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.827" endtime="20201112 10:15:12.832"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.456" endtime="20201112 10:15:12.834"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.451" endtime="20201112 10:15:12.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:12.846" level="INFO">${RESULT} = [{'time': 0.041349889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.808299999999962e-05, 'source_diff': 7.808299999999962e-05}, {'time': 0.041438889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:12.837" endtime="20201112 10:15:12.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:12.876" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:12.848" endtime="20201112 10:15:12.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.887" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 10:15:12.885" endtime="20201112 10:15:12.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.893" level="INFO">VALUE: [7.808299999999962e-05, 7.893099999999736e-05, 7.815300000000441e-05, 7.867999999999764e-05, 7.882000000000028e-05, 7.898600000000311e-05, 7.873600000000286e-05, 7.82770000000016e-05, 7.870800000000372e-05, 7.89169999999978e-05, 7.86389999999984e-05, 7.900000000000268e-05, 7.868100000000405e-05, 7.89169999999978e-05, 7.8764000000002e-05, 7.873600000000286e-05, 7.834799999999892e-05, 7.806999999999953e-05, 7.898599999999617e-05, 7.872300000000276e-05, 7.816600000000451e-05, 7.886100000000645e-05, 7.838899999999815e-05, 7.816700000000398e-05, 7.850000000000218e-05, 7.873600000000286e-05, 7.855600000000046e-05, 7.822200000000279e-05, 7.89589999999965e-05, 7.822300000000226e-05, 7.825000000000193e-05, 7.850000000000218e-05, 7.866599999999807e-05, 7.848599999999567e-05, 7.820800000000322e-05, 7.825000000000193e-05, 7.842999999999739e-05, 7.808299999999962e-05, 7.8764000000002e-05, 7.866699999999754e-05, 7.905600000000096e-05, 7.825000000000193e-05, 7.836099999999901e-05, 7.816700000000398e-05, 7.834799999999892e-05, 7.875000000000243e-05, 7.88190000000008e-05, 7.850000000000218e-05, 7.8764000000002e-05, 7.883300000000037e-05]</msg>
<status status="PASS" starttime="20201112 10:15:12.889" endtime="20201112 10:15:12.894"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.878" endtime="20201112 10:15:12.896"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.902" endtime="20201112 10:15:12.905"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:12.910" endtime="20201112 10:15:12.932"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.906" endtime="20201112 10:15:12.933"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.898" endtime="20201112 10:15:12.935"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.392" endtime="20201112 10:15:12.936"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.391" endtime="20201112 10:15:12.936"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.958" endtime="20201112 10:15:12.980"></status>
</kw>
<msg timestamp="20201112 10:15:12.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.955" endtime="20201112 10:15:12.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.983" endtime="20201112 10:15:12.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.989" endtime="20201112 10:15:12.993"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.948" endtime="20201112 10:15:12.994"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.942" endtime="20201112 10:15:12.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.012" endtime="20201112 10:15:13.347"></status>
</kw>
<msg timestamp="20201112 10:15:13.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041326569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041405778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.009" endtime="20201112 10:15:13.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041326569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041405778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.357" endtime="20201112 10:15:13.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.375" endtime="20201112 10:15:13.382"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.002" endtime="20201112 10:15:13.384"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.997" endtime="20201112 10:15:13.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:13.396" level="INFO">${RESULT} = [{'time': 0.041405778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.920899999999675e-05, 'source_diff': 7.920899999999675e-05}, {'time': 0.041503861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:13.387" endtime="20201112 10:15:13.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:13.426" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:13.398" endtime="20201112 10:15:13.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.437" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 10:15:13.435" endtime="20201112 10:15:13.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.442" level="INFO">VALUE: [7.920899999999675e-05, 7.929200000000164e-05, 7.905600000000096e-05, 7.948599999999667e-05, 7.924999999999599e-05, 7.970799999999778e-05, 7.945799999999753e-05, 7.92640000000025e-05, 7.950000000000318e-05, 7.915300000000541e-05, 7.965300000000591e-05, 7.980599999999477e-05, 7.954200000000189e-05, 7.969500000000462e-05, 7.90840000000001e-05, 7.973599999999692e-05, 7.94719999999971e-05, 7.97919999999952e-05, 7.933300000000088e-05, 7.968000000000558e-05, 7.924999999999599e-05, 7.942999999999839e-05, 7.966700000000548e-05, 7.90970000000002e-05, 7.911099999999976e-05, 7.987500000000008e-05, 7.952799999999538e-05, 7.990300000000616e-05, 7.907000000000053e-05, 7.925000000000293e-05, 7.991599999999932e-05, 8.000000000000368e-05, 7.951400000000275e-05, 7.933300000000088e-05, 7.965299999999897e-05, 7.95970000000007e-05, 7.98190000000018e-05, 7.983300000000138e-05, 7.966699999999854e-05, 7.97919999999952e-05, 7.906899999999412e-05, 7.980600000000171e-05, 7.955499999999505e-05, 7.93049999999948e-05, 8.004200000000239e-05, 7.9151999999999e-05, 7.998599999999717e-05, 7.925000000000293e-05, 7.930600000000121e-05, 7.988899999999965e-05]</msg>
<status status="PASS" starttime="20201112 10:15:13.439" endtime="20201112 10:15:13.444"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.428" endtime="20201112 10:15:13.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.452" endtime="20201112 10:15:13.454"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:13.460" endtime="20201112 10:15:13.481"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.456" endtime="20201112 10:15:13.483"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.447" endtime="20201112 10:15:13.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.938" endtime="20201112 10:15:13.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.937" endtime="20201112 10:15:13.486"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.508" endtime="20201112 10:15:13.530"></status>
</kw>
<msg timestamp="20201112 10:15:13.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:13.505" endtime="20201112 10:15:13.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:13.534" endtime="20201112 10:15:13.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.540" endtime="20201112 10:15:13.544"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.498" endtime="20201112 10:15:13.545"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.492" endtime="20201112 10:15:13.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.563" endtime="20201112 10:15:13.896"></status>
</kw>
<msg timestamp="20201112 10:15:13.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041429944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041510361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.559" endtime="20201112 10:15:13.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041429944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041510361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.905" endtime="20201112 10:15:13.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.924" endtime="20201112 10:15:13.929"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.552" endtime="20201112 10:15:13.931"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.548" endtime="20201112 10:15:13.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:13.943" level="INFO">${RESULT} = [{'time': 0.041510361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.04169999999993e-05, 'source_diff': 8.04169999999993e-05}, {'time': 0.041600347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:13.934" endtime="20201112 10:15:13.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:13.973" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:13.945" endtime="20201112 10:15:13.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.984" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 10:15:13.982" endtime="20201112 10:15:13.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.989" level="INFO">VALUE: [8.04169999999993e-05, 8.05970000000017e-05, 8.042999999999939e-05, 8.083299999999544e-05, 8.073599999999792e-05, 8.012500000000033e-05, 8.087499999999415e-05, 8.048599999999767e-05, 8.076399999999706e-05, 8.040299999999972e-05, 8.004199999999545e-05, 8.075000000000443e-05, 8.006900000000206e-05, 8.079100000000367e-05, 8.040299999999972e-05, 8.03469999999945e-05, 8.098599999999817e-05, 8.038900000000015e-05, 8.086100000000151e-05, 8.015299999999947e-05, 8.0458999999998e-05, 8.006899999999512e-05, 8.034800000000092e-05, 8.020800000000522e-05, 8.016599999999957e-05, 8.05970000000017e-05, 8.06390000000004e-05, 8.030500000000274e-05, 8.065299999999997e-05, 8.052799999999638e-05, 8.029200000000264e-05, 8.086100000000151e-05, 8.07919999999962e-05, 8.050000000000418e-05, 8.104200000000339e-05, 8.016599999999957e-05, 8.048599999999767e-05, 8.029100000000317e-05, 8.079200000000314e-05, 8.029100000000317e-05, 8.062500000000083e-05, 8.067999999999964e-05, 8.073599999999792e-05, 8.005600000000196e-05, 8.098700000000458e-05, 8.016599999999957e-05, 8.04169999999993e-05, 8.002800000000282e-05, 8.076299999999759e-05, 8.104100000000392e-05]</msg>
<status status="PASS" starttime="20201112 10:15:13.986" endtime="20201112 10:15:13.991"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.975" endtime="20201112 10:15:13.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.999" endtime="20201112 10:15:14.002"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:14.007" endtime="20201112 10:15:14.029"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.003" endtime="20201112 10:15:14.030"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.994" endtime="20201112 10:15:14.032"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.488" endtime="20201112 10:15:14.033"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.486" endtime="20201112 10:15:14.033"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.055" endtime="20201112 10:15:14.076"></status>
</kw>
<msg timestamp="20201112 10:15:14.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:14.052" endtime="20201112 10:15:14.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:14.080" endtime="20201112 10:15:14.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.086" endtime="20201112 10:15:14.090"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.045" endtime="20201112 10:15:14.091"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.039" endtime="20201112 10:15:14.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.109" endtime="20201112 10:15:14.443"></status>
</kw>
<msg timestamp="20201112 10:15:14.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041295444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041377056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:14.106" endtime="20201112 10:15:14.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041295444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041377056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:14.452" endtime="20201112 10:15:14.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.471" endtime="20201112 10:15:14.476"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.099" endtime="20201112 10:15:14.478"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.094" endtime="20201112 10:15:14.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:14.490" level="INFO">${RESULT} = [{'time': 0.041377056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.161200000000174e-05, 'source_diff': 8.161200000000174e-05}, {'time': 0.041468056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:14.481" endtime="20201112 10:15:14.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:14.520" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:14.492" endtime="20201112 10:15:14.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.531" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 10:15:14.529" endtime="20201112 10:15:14.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.537" level="INFO">VALUE: [8.161200000000174e-05, 8.183400000000285e-05, 8.16520000000015e-05, 8.166700000000054e-05, 8.166599999999413e-05, 8.168000000000064e-05, 8.159699999999576e-05, 8.115300000000047e-05, 8.166700000000054e-05, 8.1846999999996e-05, 8.204199999999745e-05, 8.144499999999943e-05, 8.169400000000021e-05, 8.118000000000014e-05, 8.154199999999695e-05, 8.188900000000165e-05, 8.148599999999867e-05, 8.116700000000004e-05, 8.200000000000568e-05, 8.174999999999849e-05, 8.137500000000158e-05, 8.115300000000047e-05, 8.191600000000132e-05, 8.140300000000072e-05, 8.149999999999824e-05, 8.124999999999799e-05, 8.16390000000014e-05, 8.207000000000353e-05, 8.13469999999955e-05, 8.10970000000022e-05, 8.119399999999971e-05, 8.170899999999925e-05, 8.181999999999634e-05, 8.165299999999404e-05, 8.180599999999677e-05, 8.14170000000003e-05, 8.155600000000346e-05, 8.129100000000417e-05, 8.111100000000177e-05, 8.126399999999756e-05, 8.130500000000374e-05, 8.143099999999986e-05, 8.104099999999698e-05, 8.202799999999788e-05, 8.19170000000008e-05, 8.175000000000543e-05, 8.116700000000004e-05, 8.1846999999996e-05, 8.106999999999559e-05, 8.133400000000235e-05]</msg>
<status status="PASS" starttime="20201112 10:15:14.534" endtime="20201112 10:15:14.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.522" endtime="20201112 10:15:14.540"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.546" endtime="20201112 10:15:14.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:14.554" endtime="20201112 10:15:14.576"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.550" endtime="20201112 10:15:14.577"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.542" endtime="20201112 10:15:14.579"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.035" endtime="20201112 10:15:14.579"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.034" endtime="20201112 10:15:14.580"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.602" endtime="20201112 10:15:14.622"></status>
</kw>
<msg timestamp="20201112 10:15:14.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:14.599" endtime="20201112 10:15:14.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:14.623" endtime="20201112 10:15:14.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.626" endtime="20201112 10:15:14.628"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.592" endtime="20201112 10:15:14.629"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.586" endtime="20201112 10:15:14.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.637" endtime="20201112 10:15:14.922"></status>
</kw>
<msg timestamp="20201112 10:15:14.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041267486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041350014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:14.636" endtime="20201112 10:15:14.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041267486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041350014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:14.926" endtime="20201112 10:15:14.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.935" endtime="20201112 10:15:14.937"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.632" endtime="20201112 10:15:14.938"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.630" endtime="20201112 10:15:14.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:14.944" level="INFO">${RESULT} = [{'time': 0.041350014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.252799999999838e-05, 'source_diff': 8.252799999999838e-05}, {'time': 0.041445014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:14.939" endtime="20201112 10:15:14.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:14.957" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:14.945" endtime="20201112 10:15:14.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.962" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 10:15:14.961" endtime="20201112 10:15:14.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.965" level="INFO">VALUE: [8.252799999999838e-05, 8.286100000000352e-05, 8.280599999999777e-05, 8.277799999999863e-05, 8.251399999999881e-05, 8.301399999999931e-05, 8.273599999999992e-05, 8.224999999999899e-05, 8.234700000000345e-05, 8.288899999999572e-05, 8.255599999999752e-05, 8.223599999999942e-05, 8.215300000000147e-05, 8.230500000000474e-05, 8.24720000000001e-05, 8.229200000000464e-05, 8.244500000000043e-05, 8.241600000000182e-05, 8.22919999999977e-05, 8.259799999999623e-05, 8.244500000000043e-05, 8.248599999999967e-05, 8.244400000000096e-05, 8.243100000000086e-05, 8.304199999999845e-05, 8.291600000000232e-05, 8.22640000000055e-05, 8.276399999999906e-05, 8.257000000000403e-05, 8.274999999999949e-05, 8.247199999999316e-05, 8.25840000000036e-05, 8.205600000000396e-05, 8.268000000000164e-05, 8.298600000000017e-05, 8.258299999999719e-05, 8.226399999999856e-05, 8.206900000000406e-05, 8.29170000000018e-05, 8.227799999999813e-05, 8.211100000000277e-05, 8.304200000000539e-05, 8.261099999999633e-05, 8.255600000000446e-05, 8.28190000000048e-05, 8.270900000000025e-05, 8.224999999999899e-05, 8.222199999999985e-05, 8.218000000000114e-05, 8.241600000000182e-05]</msg>
<status status="PASS" starttime="20201112 10:15:14.964" endtime="20201112 10:15:14.966"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.958" endtime="20201112 10:15:14.967"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.969" endtime="20201112 10:15:14.971"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:14.974" endtime="20201112 10:15:14.993"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.972" endtime="20201112 10:15:14.994"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.967" endtime="20201112 10:15:14.994"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.582" endtime="20201112 10:15:14.995"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.581" endtime="20201112 10:15:14.995"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.005" endtime="20201112 10:15:15.025"></status>
</kw>
<msg timestamp="20201112 10:15:15.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:15.004" endtime="20201112 10:15:15.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:15.029" endtime="20201112 10:15:15.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.035" endtime="20201112 10:15:15.038"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.001" endtime="20201112 10:15:15.040"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.998" endtime="20201112 10:15:15.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.058" endtime="20201112 10:15:15.393"></status>
</kw>
<msg timestamp="20201112 10:15:15.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024464292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024547778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:15.055" endtime="20201112 10:15:15.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024464292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024547778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:15.403" endtime="20201112 10:15:15.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.422" endtime="20201112 10:15:15.429"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.047" endtime="20201112 10:15:15.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.043" endtime="20201112 10:15:15.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:15.442" level="INFO">${RESULT} = [{'time': 0.024547778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.348600000000067e-05, 'source_diff': 8.348600000000067e-05}, {'time': 0.024645792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:15.433" endtime="20201112 10:15:15.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:15.473" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:15.444" endtime="20201112 10:15:15.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.483" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 10:15:15.481" endtime="20201112 10:15:15.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.489" level="INFO">VALUE: [8.348600000000067e-05, 8.340299999999926e-05, 8.368000000000264e-05, 8.305599999999802e-05, 8.399999999999727e-05, 8.388900000000019e-05, 8.309699999999726e-05, 8.404099999999998e-05, 8.31659999999991e-05, 8.3152999999999e-05, 8.36529999999995e-05, 8.350000000000024e-05, 8.3846999999998e-05, 8.304199999999845e-05, 8.370900000000125e-05, 8.31659999999991e-05, 8.400000000000074e-05, 8.341599999999935e-05, 8.305500000000202e-05, 8.375000000000049e-05, 8.341599999999935e-05, 8.372200000000135e-05, 8.405599999999902e-05, 8.336100000000055e-05, 8.391699999999933e-05, 8.363899999999994e-05, 8.345899999999754e-05, 8.30980000000002e-05, 8.366700000000254e-05, 8.390200000000028e-05, 8.401400000000031e-05, 8.31110000000003e-05, 8.317999999999867e-05, 8.347199999999763e-05, 8.370800000000178e-05, 8.380600000000224e-05, 8.375000000000049e-05, 8.368100000000211e-05, 8.330599999999827e-05, 8.401400000000031e-05, 8.39720000000016e-05, 8.356899999999862e-05, 8.379099999999973e-05, 8.362500000000037e-05, 8.372200000000135e-05, 8.31110000000003e-05, 8.352799999999938e-05, 8.348600000000067e-05, 8.39720000000016e-05, 8.332000000000131e-05]</msg>
<status status="PASS" starttime="20201112 10:15:15.486" endtime="20201112 10:15:15.490"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.474" endtime="20201112 10:15:15.492"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.498" endtime="20201112 10:15:15.501"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:15.506" endtime="20201112 10:15:15.528"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.502" endtime="20201112 10:15:15.529"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.494" endtime="20201112 10:15:15.531"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.996" endtime="20201112 10:15:15.532"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.995" endtime="20201112 10:15:15.532"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.554" endtime="20201112 10:15:15.576"></status>
</kw>
<msg timestamp="20201112 10:15:15.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:15.551" endtime="20201112 10:15:15.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:15.579" endtime="20201112 10:15:15.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.585" endtime="20201112 10:15:15.589"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.544" endtime="20201112 10:15:15.591"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.538" endtime="20201112 10:15:15.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.608" endtime="20201112 10:15:15.941"></status>
</kw>
<msg timestamp="20201112 10:15:15.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041381861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041466944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:15.605" endtime="20201112 10:15:15.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041381861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041466944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:15.950" endtime="20201112 10:15:15.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.969" endtime="20201112 10:15:15.974"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.598" endtime="20201112 10:15:15.976"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.593" endtime="20201112 10:15:15.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:15.988" level="INFO">${RESULT} = [{'time': 0.041466944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.508299999999969e-05, 'source_diff': 8.508299999999969e-05}, {'time': 0.041560931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:15.979" endtime="20201112 10:15:15.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:16.018" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:15.990" endtime="20201112 10:15:16.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.029" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 10:15:16.027" endtime="20201112 10:15:16.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.035" level="INFO">VALUE: [8.508299999999969e-05, 8.443100000000286e-05, 8.477800000000063e-05, 8.468100000000311e-05, 8.504100000000098e-05, 8.469500000000268e-05, 8.425000000000099e-05, 8.454199999999995e-05, 8.46249999999979e-05, 8.465299999999704e-05, 8.463899999999747e-05, 8.502800000000088e-05, 8.441599999999688e-05, 8.41390000000039e-05, 8.498599999999523e-05, 8.483299999999944e-05, 8.408299999999869e-05, 8.461099999999833e-05, 8.488899999999772e-05, 8.476399999999412e-05, 8.44449999999955e-05, 8.4152000000004e-05, 8.443000000000339e-05, 8.48050000000003e-05, 8.463899999999747e-05, 8.472200000000235e-05, 8.443100000000286e-05, 8.431999999999884e-05, 8.46669999999966e-05, 8.423599999999448e-05, 8.434700000000545e-05, 8.475000000000149e-05, 8.40970000000052e-05, 8.44449999999955e-05, 8.487500000000509e-05, 8.426400000000056e-05, 8.429100000000023e-05, 8.470800000000278e-05, 8.500000000000174e-05, 8.425000000000099e-05, 8.433299999999894e-05, 8.463899999999747e-05, 8.43469999999985e-05, 8.488899999999772e-05, 8.472299999999489e-05, 8.490299999999729e-05, 8.466599999999713e-05, 8.450000000000124e-05, 8.438899999999722e-05, 8.423600000000142e-05]</msg>
<status status="PASS" starttime="20201112 10:15:16.031" endtime="20201112 10:15:16.036"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.020" endtime="20201112 10:15:16.038"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.044" endtime="20201112 10:15:16.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:16.052" endtime="20201112 10:15:16.074"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.048" endtime="20201112 10:15:16.075"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.039" endtime="20201112 10:15:16.077"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.534" endtime="20201112 10:15:16.077"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.533" endtime="20201112 10:15:16.078"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.100" endtime="20201112 10:15:16.122"></status>
</kw>
<msg timestamp="20201112 10:15:16.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:16.097" endtime="20201112 10:15:16.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:16.125" endtime="20201112 10:15:16.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.132" endtime="20201112 10:15:16.135"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.090" endtime="20201112 10:15:16.137"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.084" endtime="20201112 10:15:16.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.155" endtime="20201112 10:15:16.490"></status>
</kw>
<msg timestamp="20201112 10:15:16.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041363708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041448931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:16.151" endtime="20201112 10:15:16.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041363708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041448931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:16.499" endtime="20201112 10:15:16.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.518" endtime="20201112 10:15:16.523"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.144" endtime="20201112 10:15:16.525"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.139" endtime="20201112 10:15:16.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:16.537" level="INFO">${RESULT} = [{'time': 0.041448931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.522300000000232e-05, 'source_diff': 8.522300000000232e-05}, {'time': 0.041550014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:16.528" endtime="20201112 10:15:16.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:16.567" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:16.539" endtime="20201112 10:15:16.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.578" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 10:15:16.576" endtime="20201112 10:15:16.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.584" level="INFO">VALUE: [8.522300000000232e-05, 8.607000000000059e-05, 8.586099999999958e-05, 8.545799999999659e-05, 8.550000000000224e-05, 8.531900000000037e-05, 8.576399999999512e-05, 8.524999999999505e-05, 8.573600000000292e-05, 8.604199999999451e-05, 8.593099999999743e-05, 8.540299999999779e-05, 8.59869999999957e-05, 8.601400000000231e-05, 8.604200000000145e-05, 8.598600000000317e-05, 8.598600000000317e-05, 8.525000000000199e-05, 8.516700000000405e-05, 8.57920000000012e-05, 8.566700000000455e-05, 8.552800000000138e-05, 8.573599999999598e-05, 8.523600000000242e-05, 8.504200000000045e-05, 8.534799999999898e-05, 8.56799999999977e-05, 8.562500000000584e-05, 8.573600000000292e-05, 8.511099999999883e-05, 8.526399999999462e-05, 8.554200000000095e-05, 8.573599999999598e-05, 8.577800000000163e-05, 8.590299999999829e-05, 8.511099999999883e-05, 8.554200000000095e-05, 8.590299999999829e-05, 8.533299999999994e-05, 8.576299999999565e-05, 8.542999999999745e-05, 8.519399999999677e-05, 8.554200000000095e-05, 8.538899999999822e-05, 8.509699999999926e-05, 8.523600000000242e-05, 8.605600000000102e-05, 8.548600000000267e-05, 8.531999999999984e-05, 8.544500000000343e-05]</msg>
<status status="PASS" starttime="20201112 10:15:16.581" endtime="20201112 10:15:16.585"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.569" endtime="20201112 10:15:16.587"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.593" endtime="20201112 10:15:16.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:16.601" endtime="20201112 10:15:16.623"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.597" endtime="20201112 10:15:16.625"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.589" endtime="20201112 10:15:16.626"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.080" endtime="20201112 10:15:16.627"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.079" endtime="20201112 10:15:16.627"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.649" endtime="20201112 10:15:16.671"></status>
</kw>
<msg timestamp="20201112 10:15:16.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:16.646" endtime="20201112 10:15:16.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:16.675" endtime="20201112 10:15:16.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.681" endtime="20201112 10:15:16.684"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.639" endtime="20201112 10:15:16.686"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.633" endtime="20201112 10:15:16.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.704" endtime="20201112 10:15:17.036"></status>
</kw>
<msg timestamp="20201112 10:15:17.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041521139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041607667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:16.701" endtime="20201112 10:15:17.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041521139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041607667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:17.046" endtime="20201112 10:15:17.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.065" endtime="20201112 10:15:17.070"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.693" endtime="20201112 10:15:17.072"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.689" endtime="20201112 10:15:17.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:17.083" level="INFO">${RESULT} = [{'time': 0.041607667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.652800000000238e-05, 'source_diff': 8.652800000000238e-05}, {'time': 0.041706653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:17.075" endtime="20201112 10:15:17.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:17.114" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:17.085" endtime="20201112 10:15:17.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.125" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 10:15:17.123" endtime="20201112 10:15:17.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.130" level="INFO">VALUE: [8.652800000000238e-05, 8.690300000000623e-05, 8.698700000000364e-05, 8.677799999999569e-05, 8.670799999999784e-05, 8.665199999999956e-05, 8.611100000000677e-05, 8.693000000000589e-05, 8.652800000000238e-05, 8.609700000000026e-05, 8.669499999999775e-05, 8.674999999999655e-05, 8.679199999999526e-05, 8.618099999999768e-05, 8.669399999999827e-05, 8.633400000000041e-05, 8.606900000000112e-05, 8.626400000000256e-05, 8.623599999999648e-05, 8.669399999999827e-05, 8.64999999999963e-05, 8.625000000000299e-05, 8.693100000000537e-05, 8.641599999999888e-05, 8.63199999999939e-05, 8.609700000000026e-05, 8.676299999999665e-05, 8.637499999999965e-05, 8.609700000000026e-05, 8.695800000000503e-05, 8.608300000000069e-05, 8.636100000000008e-05, 8.691699999999886e-05, 8.630600000000127e-05, 8.665299999999904e-05, 8.655599999999458e-05, 8.625000000000299e-05, 8.66249999999999e-05, 8.627800000000213e-05, 8.626399999999562e-05, 8.629099999999529e-05, 8.675000000000349e-05, 8.606900000000112e-05, 8.687500000000015e-05, 8.627799999999519e-05, 8.61249999999994e-05, 8.652800000000238e-05, 8.615300000000548e-05, 8.655600000000152e-05, 8.643099999999793e-05]</msg>
<status status="PASS" starttime="20201112 10:15:17.127" endtime="20201112 10:15:17.132"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.116" endtime="20201112 10:15:17.133"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.140" endtime="20201112 10:15:17.142"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:17.148" endtime="20201112 10:15:17.169"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.143" endtime="20201112 10:15:17.171"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.135" endtime="20201112 10:15:17.172"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.629" endtime="20201112 10:15:17.173"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.628" endtime="20201112 10:15:17.173"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.196" endtime="20201112 10:15:17.218"></status>
</kw>
<msg timestamp="20201112 10:15:17.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:17.193" endtime="20201112 10:15:17.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:17.221" endtime="20201112 10:15:17.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.227" endtime="20201112 10:15:17.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.185" endtime="20201112 10:15:17.233"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.180" endtime="20201112 10:15:17.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.250" endtime="20201112 10:15:17.587"></status>
</kw>
<msg timestamp="20201112 10:15:17.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041390083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041477431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:17.247" endtime="20201112 10:15:17.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041390083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041477431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:17.596" endtime="20201112 10:15:17.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.615" endtime="20201112 10:15:17.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.240" endtime="20201112 10:15:17.624"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.235" endtime="20201112 10:15:17.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:17.635" level="INFO">${RESULT} = [{'time': 0.041477431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.734800000000098e-05, 'source_diff': 8.734800000000098e-05}, {'time': 0.041580431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:17.627" endtime="20201112 10:15:17.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:17.740" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:17.637" endtime="20201112 10:15:17.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.751" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 10:15:17.749" endtime="20201112 10:15:17.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.757" level="INFO">VALUE: [8.734800000000098e-05, 8.715299999999954e-05, 8.727700000000366e-05, 8.774999999999755e-05, 8.715200000000006e-05, 8.741599999999988e-05, 8.744400000000596e-05, 8.745799999999859e-05, 8.776400000000406e-05, 8.801399999999737e-05, 8.727800000000313e-05, 8.780600000000277e-05, 8.72920000000027e-05, 8.723600000000442e-05, 8.711100000000083e-05, 8.71250000000004e-05, 8.716700000000605e-05, 8.741699999999936e-05, 8.750000000000424e-05, 8.783300000000244e-05, 8.737500000000065e-05, 8.74999999999973e-05, 8.798599999999823e-05, 8.768099999999918e-05, 8.751400000000381e-05, 8.715299999999954e-05, 8.740200000000031e-05, 8.754099999999654e-05, 8.758300000000219e-05, 8.770799999999884e-05, 8.758299999999525e-05, 8.71669999999991e-05, 8.77920000000032e-05, 8.71669999999991e-05, 8.755600000000252e-05, 8.774999999999755e-05, 8.705500000000255e-05, 8.792999999999995e-05, 8.726400000000356e-05, 8.775000000000449e-05, 8.73470000000015e-05, 8.779199999999626e-05, 8.708300000000169e-05, 8.711100000000083e-05, 8.788899999999378e-05, 8.72920000000027e-05, 8.761100000000133e-05, 8.716599999999963e-05, 8.772199999999841e-05, 8.76669999999996e-05]</msg>
<status status="PASS" starttime="20201112 10:15:17.754" endtime="20201112 10:15:17.763"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.742" endtime="20201112 10:15:17.765"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.772" endtime="20201112 10:15:17.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:17.780" endtime="20201112 10:15:17.801"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.775" endtime="20201112 10:15:17.803"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.767" endtime="20201112 10:15:17.804"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.176" endtime="20201112 10:15:17.805"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.174" endtime="20201112 10:15:17.805"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.829" endtime="20201112 10:15:17.851"></status>
</kw>
<msg timestamp="20201112 10:15:17.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:17.824" endtime="20201112 10:15:17.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:17.855" endtime="20201112 10:15:17.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.861" endtime="20201112 10:15:17.865"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.817" endtime="20201112 10:15:17.866"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.812" endtime="20201112 10:15:17.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.884" endtime="20201112 10:15:18.216"></status>
</kw>
<msg timestamp="20201112 10:15:18.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042802458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042890903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:17.881" endtime="20201112 10:15:18.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042802458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042890903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:18.225" endtime="20201112 10:15:18.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.244" endtime="20201112 10:15:18.248"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.874" endtime="20201112 10:15:18.249"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.869" endtime="20201112 10:15:18.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:18.260" level="INFO">${RESULT} = [{'time': 0.042890903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.84449999999995e-05, 'source_diff': 8.84449999999995e-05}, {'time': 0.042991903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:18.252" endtime="20201112 10:15:18.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:18.274" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:18.261" endtime="20201112 10:15:18.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.279" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 10:15:18.278" endtime="20201112 10:15:18.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.282" level="INFO">VALUE: [8.84449999999995e-05, 8.805599999999608e-05, 8.802799999999694e-05, 8.886099999999564e-05, 8.808299999999575e-05, 8.823599999999848e-05, 8.806900000000312e-05, 8.820799999999934e-05, 8.893000000000095e-05, 8.88199999999964e-05, 8.876399999999812e-05, 8.815300000000054e-05, 8.851399999999787e-05, 8.8945e-05, 8.840200000000131e-05, 8.859800000000223e-05, 8.852699999999797e-05, 8.851399999999787e-05, 8.894400000000052e-05, 8.81800000000002e-05, 8.847199999999916e-05, 8.829199999999676e-05, 8.824999999999805e-05, 8.904199999999751e-05, 8.873599999999898e-05, 8.845899999999907e-05, 8.884800000000248e-05, 8.829099999999729e-05, 8.884699999999607e-05, 8.847199999999916e-05, 8.854100000000448e-05, 8.840300000000079e-05, 8.858300000000319e-05, 8.845799999999959e-05, 8.829199999999676e-05, 8.86670000000006e-05, 8.832000000000284e-05, 8.840200000000131e-05, 8.874999999999855e-05, 8.866600000000113e-05, 8.843000000000045e-05, 8.854100000000448e-05, 8.851400000000481e-05, 8.886100000000258e-05, 8.861099999999539e-05, 8.897199999999966e-05, 8.879199999999726e-05, 8.833399999999547e-05, 8.84449999999995e-05, 8.906899999999718e-05]</msg>
<status status="PASS" starttime="20201112 10:15:18.280" endtime="20201112 10:15:18.283"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.275" endtime="20201112 10:15:18.283"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.286" endtime="20201112 10:15:18.288"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:18.290" endtime="20201112 10:15:18.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.288" endtime="20201112 10:15:18.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.284" endtime="20201112 10:15:18.311"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.807" endtime="20201112 10:15:18.311"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.806" endtime="20201112 10:15:18.312"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.322" endtime="20201112 10:15:18.342"></status>
</kw>
<msg timestamp="20201112 10:15:18.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:18.320" endtime="20201112 10:15:18.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:18.343" endtime="20201112 10:15:18.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.346" endtime="20201112 10:15:18.348"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.317" endtime="20201112 10:15:18.349"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.315" endtime="20201112 10:15:18.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.357" endtime="20201112 10:15:18.691"></status>
</kw>
<msg timestamp="20201112 10:15:18.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025135542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025224986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:18.356" endtime="20201112 10:15:18.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025135542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025224986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:18.700" endtime="20201112 10:15:18.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.719" endtime="20201112 10:15:18.723"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.352" endtime="20201112 10:15:18.724"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.350" endtime="20201112 10:15:18.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:18.736" level="INFO">${RESULT} = [{'time': 0.025224986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.944400000000102e-05, 'source_diff': 8.944400000000102e-05}, {'time': 0.025332, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 10:15:18.727" endtime="20201112 10:15:18.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:18.767" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:18.738" endtime="20201112 10:15:18.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.778" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 10:15:18.776" endtime="20201112 10:15:18.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.783" level="INFO">VALUE: [8.944400000000102e-05, 8.924999999999905e-05, 8.945800000000059e-05, 8.966699999999814e-05, 8.98060000000013e-05, 8.926399999999862e-05, 8.966699999999814e-05, 8.955499999999811e-05, 8.96519999999991e-05, 8.991700000000186e-05, 8.976399999999912e-05, 8.99999999999998e-05, 8.970900000000032e-05, 8.98190000000014e-05, 9.002799999999894e-05, 8.987499999999968e-05, 8.938899999999875e-05, 8.919500000000025e-05, 8.973599999999998e-05, 8.99999999999998e-05, 8.99999999999998e-05, 8.990299999999882e-05, 8.983300000000097e-05, 8.976399999999912e-05, 8.918099999999721e-05, 8.99999999999998e-05, 8.984699999999707e-05, 8.911099999999936e-05, 8.943099999999746e-05, 8.924999999999905e-05, 8.945800000000059e-05, 8.994399999999805e-05, 8.970800000000084e-05, 8.904099999999804e-05, 8.99999999999998e-05, 8.943100000000093e-05, 8.94999999999993e-05, 8.940300000000179e-05, 8.951399999999887e-05, 8.909799999999926e-05, 8.93190000000009e-05, 8.959799999999976e-05, 8.937499999999918e-05, 8.923599999999948e-05, 8.980599999999783e-05, 8.945800000000059e-05, 8.965300000000204e-05, 8.96670000000016e-05, 8.948599999999973e-05, 8.99999999999998e-05]</msg>
<status status="PASS" starttime="20201112 10:15:18.780" endtime="20201112 10:15:18.785"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.769" endtime="20201112 10:15:18.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.793" endtime="20201112 10:15:18.795"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:18.801" endtime="20201112 10:15:18.822"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.797" endtime="20201112 10:15:18.824"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.788" endtime="20201112 10:15:18.826"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.313" endtime="20201112 10:15:18.826"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.312" endtime="20201112 10:15:18.827"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.849" endtime="20201112 10:15:18.871"></status>
</kw>
<msg timestamp="20201112 10:15:18.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:18.846" endtime="20201112 10:15:18.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:18.874" endtime="20201112 10:15:18.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.881" endtime="20201112 10:15:18.884"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.838" endtime="20201112 10:15:18.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.833" endtime="20201112 10:15:18.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.905" endtime="20201112 10:15:19.240"></status>
</kw>
<msg timestamp="20201112 10:15:19.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041267625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041358028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:18.902" endtime="20201112 10:15:19.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041267625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041358028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:19.249" endtime="20201112 10:15:19.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.268" endtime="20201112 10:15:19.272"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.893" endtime="20201112 10:15:19.274"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.889" endtime="20201112 10:15:19.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:19.286" level="INFO">${RESULT} = [{'time': 0.041358028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.040299999999585e-05, 'source_diff': 9.040299999999585e-05}, {'time': 0.041466056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:19.277" endtime="20201112 10:15:19.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:19.316" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:19.288" endtime="20201112 10:15:19.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.327" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 10:15:19.325" endtime="20201112 10:15:19.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.333" level="INFO">VALUE: [9.040299999999585e-05, 9.093100000000243e-05, 9.038900000000322e-05, 9.045899999999413e-05, 9.065300000000304e-05, 9.079199999999926e-05, 9.077799999999969e-05, 9.016600000000263e-05, 9.026399999999962e-05, 9.073600000000098e-05, 9.033300000000494e-05, 9.065300000000304e-05, 9.06529999999961e-05, 9.019500000000125e-05, 9.10000000000008e-05, 9.005599999999808e-05, 9.074999999999361e-05, 9.051399999999987e-05, 9.022200000000091e-05, 9.029099999999929e-05, 9.020800000000134e-05, 9.081899999999893e-05, 9.025000000000005e-05, 9.036099999999714e-05, 9.06670000000026e-05, 9.08329999999985e-05, 9.08199999999984e-05, 9.068099999999524e-05, 9.094400000000252e-05, 9.026399999999962e-05, 9.052799999999944e-05, 9.108399999999822e-05, 9.008299999999775e-05, 9.048600000000073e-05, 9.009699999999732e-05, 9.065300000000304e-05, 9.051399999999987e-05, 9.06670000000026e-05, 9.101400000000037e-05, 9.104199999999951e-05, 9.074999999999361e-05, 9.045799999999465e-05, 9.0332999999998e-05, 9.027799999999919e-05, 9.061099999999739e-05, 9.070800000000184e-05, 9.084699999999807e-05, 9.008299999999775e-05, 9.086099999999764e-05, 9.070900000000132e-05]</msg>
<status status="PASS" starttime="20201112 10:15:19.329" endtime="20201112 10:15:19.334"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.318" endtime="20201112 10:15:19.336"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.342" endtime="20201112 10:15:19.345"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:19.350" endtime="20201112 10:15:19.372"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.346" endtime="20201112 10:15:19.374"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.337" endtime="20201112 10:15:19.375"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.829" endtime="20201112 10:15:19.376"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.827" endtime="20201112 10:15:19.376"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.398" endtime="20201112 10:15:19.421"></status>
</kw>
<msg timestamp="20201112 10:15:19.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:19.395" endtime="20201112 10:15:19.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:19.424" endtime="20201112 10:15:19.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.430" endtime="20201112 10:15:19.434"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.388" endtime="20201112 10:15:19.436"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.382" endtime="20201112 10:15:19.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.454" endtime="20201112 10:15:19.790"></status>
</kw>
<msg timestamp="20201112 10:15:19.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041268583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041360319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:19.450" endtime="20201112 10:15:19.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041268583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041360319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:19.799" endtime="20201112 10:15:19.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.818" endtime="20201112 10:15:19.822"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.443" endtime="20201112 10:15:19.823"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.438" endtime="20201112 10:15:19.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:19.835" level="INFO">${RESULT} = [{'time': 0.041360319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.173600000000198e-05, 'source_diff': 9.173600000000198e-05}, {'time': 0.041465278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:19.826" endtime="20201112 10:15:19.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:19.868" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:19.837" endtime="20201112 10:15:19.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.879" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 10:15:19.877" endtime="20201112 10:15:19.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.884" level="INFO">VALUE: [9.173600000000198e-05, 9.123600000000148e-05, 9.179200000000026e-05, 9.188900000000472e-05, 9.18199999999994e-05, 9.169499999999581e-05, 9.172199999999547e-05, 9.158399999999872e-05, 9.116600000000363e-05, 9.151400000000087e-05, 9.125000000000105e-05, 9.127800000000019e-05, 9.193100000000343e-05, 9.193099999999649e-05, 9.123600000000148e-05, 9.126300000000115e-05, 9.18199999999994e-05, 9.123600000000148e-05, 9.173700000000146e-05, 9.129100000000029e-05, 9.166600000000413e-05, 9.143100000000293e-05, 9.129099999999335e-05, 9.111199999999736e-05, 9.126400000000062e-05, 9.184699999999907e-05, 9.148600000000173e-05, 9.188899999999778e-05, 9.176400000000112e-05, 9.143000000000345e-05, 9.18329999999995e-05, 9.163900000000447e-05, 9.16670000000036e-05, 9.162499999999796e-05, 9.15000000000013e-05, 9.141700000000336e-05, 9.199999999999486e-05, 9.188900000000472e-05, 9.19729999999952e-05, 9.155599999999958e-05, 9.187499999999821e-05, 9.191600000000438e-05, 9.127800000000019e-05, 9.136100000000508e-05, 9.112499999999746e-05, 9.175000000000155e-05, 9.109800000000473e-05, 9.169500000000275e-05, 9.168099999999624e-05, 9.105599999999908e-05]</msg>
<status status="PASS" starttime="20201112 10:15:19.881" endtime="20201112 10:15:19.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.870" endtime="20201112 10:15:19.887"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.894" endtime="20201112 10:15:19.896"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:19.902" endtime="20201112 10:15:19.923"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.897" endtime="20201112 10:15:19.925"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.889" endtime="20201112 10:15:19.927"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.378" endtime="20201112 10:15:19.927"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.377" endtime="20201112 10:15:19.928"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.950" endtime="20201112 10:15:19.972"></status>
</kw>
<msg timestamp="20201112 10:15:19.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:19.947" endtime="20201112 10:15:19.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:19.975" endtime="20201112 10:15:19.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.982" endtime="20201112 10:15:19.985"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.939" endtime="20201112 10:15:19.987"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.934" endtime="20201112 10:15:19.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.005" endtime="20201112 10:15:20.340"></status>
</kw>
<msg timestamp="20201112 10:15:20.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041738847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041831056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:20.002" endtime="20201112 10:15:20.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041738847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041831056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:20.350" endtime="20201112 10:15:20.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.368" endtime="20201112 10:15:20.372"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.995" endtime="20201112 10:15:20.374"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.989" endtime="20201112 10:15:20.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:20.386" level="INFO">${RESULT} = [{'time': 0.041831056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.220899999999588e-05, 'source_diff': 9.220899999999588e-05}, {'time': 0.041932069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:20.377" endtime="20201112 10:15:20.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:20.416" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:20.388" endtime="20201112 10:15:20.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.427" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 10:15:20.425" endtime="20201112 10:15:20.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.432" level="INFO">VALUE: [9.220899999999588e-05, 9.223600000000248e-05, 9.301400000000237e-05, 9.234699999999957e-05, 9.287499999999921e-05, 9.229100000000129e-05, 9.230500000000086e-05, 9.273600000000298e-05, 9.284700000000007e-05, 9.225000000000205e-05, 9.225000000000205e-05, 9.263899999999853e-05, 9.227800000000119e-05, 9.204100000000104e-05, 9.208299999999975e-05, 9.277800000000169e-05, 9.227800000000119e-05, 9.307000000000065e-05, 9.281900000000093e-05, 9.244399999999708e-05, 9.234699999999957e-05, 9.273599999999604e-05, 9.230600000000033e-05, 9.288899999999878e-05, 9.301299999999596e-05, 9.2333e-05, 9.258300000000025e-05, 9.287499999999921e-05, 9.294399999999758e-05, 9.26529999999981e-05, 9.258300000000025e-05, 9.21250000000054e-05, 9.219499999999631e-05, 9.272299999999595e-05, 9.270900000000332e-05, 9.249999999999536e-05, 9.227699999999478e-05, 9.227800000000119e-05, 9.275000000000255e-05, 9.269399999999733e-05, 9.26529999999981e-05, 9.202800000000094e-05, 9.226400000000162e-05, 9.208399999999922e-05, 9.280600000000083e-05, 9.212499999999846e-05, 9.225000000000205e-05, 9.287499999999921e-05, 9.275000000000255e-05, 9.294399999999758e-05]</msg>
<status status="PASS" starttime="20201112 10:15:20.429" endtime="20201112 10:15:20.434"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.418" endtime="20201112 10:15:20.435"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.442" endtime="20201112 10:15:20.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:20.450" endtime="20201112 10:15:20.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.446" endtime="20201112 10:15:20.473"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.437" endtime="20201112 10:15:20.475"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.930" endtime="20201112 10:15:20.475"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.928" endtime="20201112 10:15:20.476"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.498" endtime="20201112 10:15:20.520"></status>
</kw>
<msg timestamp="20201112 10:15:20.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:20.495" endtime="20201112 10:15:20.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:20.524" endtime="20201112 10:15:20.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.530" endtime="20201112 10:15:20.534"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.488" endtime="20201112 10:15:20.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.482" endtime="20201112 10:15:20.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.555" endtime="20201112 10:15:20.889"></status>
</kw>
<msg timestamp="20201112 10:15:20.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041588444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041681986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:20.551" endtime="20201112 10:15:20.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041588444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041681986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:20.899" endtime="20201112 10:15:20.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.918" endtime="20201112 10:15:20.923"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.544" endtime="20201112 10:15:20.925"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.539" endtime="20201112 10:15:20.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:20.936" level="INFO">${RESULT} = [{'time': 0.041681986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.354199999999507e-05, 'source_diff': 9.354199999999507e-05}, {'time': 0.041781972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:20.928" endtime="20201112 10:15:20.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:20.967" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:20.938" endtime="20201112 10:15:20.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.978" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 10:15:20.976" endtime="20201112 10:15:20.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.983" level="INFO">VALUE: [9.354199999999507e-05, 9.309700000000032e-05, 9.319399999999783e-05, 9.34859999999968e-05, 9.377799999999575e-05, 9.355600000000158e-05, 9.329200000000176e-05, 9.391699999999892e-05, 9.329100000000229e-05, 9.309699999999338e-05, 9.37079999999979e-05, 9.326400000000262e-05, 9.330500000000186e-05, 9.331899999999449e-05, 9.352800000000244e-05, 9.305600000000108e-05, 9.36529999999991e-05, 9.380600000000183e-05, 9.379199999999532e-05, 9.391599999999944e-05, 9.373600000000398e-05, 9.3333000000001e-05, 9.359700000000082e-05, 9.369399999999833e-05, 9.361100000000039e-05, 9.391699999999892e-05, 9.31529999999986e-05, 9.329200000000176e-05, 9.394399999999858e-05, 9.355500000000211e-05, 9.363899999999953e-05, 9.309700000000032e-05, 9.373599999999704e-05, 9.379099999999585e-05, 9.341699999999842e-05, 9.337499999999971e-05, 9.319499999999731e-05, 9.341699999999842e-05, 9.305600000000108e-05, 9.394499999999806e-05, 9.405600000000208e-05, 9.334800000000004e-05, 9.3333000000001e-05, 9.343099999999799e-05, 9.334700000000057e-05, 9.374999999999661e-05, 9.401399999999643e-05, 9.333299999999406e-05, 9.399999999999686e-05, 9.368099999999824e-05]</msg>
<status status="PASS" starttime="20201112 10:15:20.980" endtime="20201112 10:15:20.985"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.969" endtime="20201112 10:15:20.986"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.993" endtime="20201112 10:15:20.995"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:21.001" endtime="20201112 10:15:21.022"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.996" endtime="20201112 10:15:21.024"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.988" endtime="20201112 10:15:21.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.478" endtime="20201112 10:15:21.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.477" endtime="20201112 10:15:21.027"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.049" endtime="20201112 10:15:21.073"></status>
</kw>
<msg timestamp="20201112 10:15:21.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:21.046" endtime="20201112 10:15:21.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:21.076" endtime="20201112 10:15:21.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.082" endtime="20201112 10:15:21.086"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.038" endtime="20201112 10:15:21.088"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.033" endtime="20201112 10:15:21.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.105" endtime="20201112 10:15:21.439"></status>
</kw>
<msg timestamp="20201112 10:15:21.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041382167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0414765, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:21.102" endtime="20201112 10:15:21.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041382167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0414765, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:21.449" endtime="20201112 10:15:21.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.467" endtime="20201112 10:15:21.473"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.095" endtime="20201112 10:15:21.474"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.090" endtime="20201112 10:15:21.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:21.486" level="INFO">${RESULT} = [{'time': 0.0414765, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.4333000000002e-05, 'source_diff': 9.4333000000002e-05}, {'time': 0.041581486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.4...</msg>
<status status="PASS" starttime="20201112 10:15:21.477" endtime="20201112 10:15:21.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:21.517" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:21.488" endtime="20201112 10:15:21.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.528" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 10:15:21.525" endtime="20201112 10:15:21.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.533" level="INFO">VALUE: [9.4333000000002e-05, 9.430500000000286e-05, 9.474999999999761e-05, 9.45000000000043e-05, 9.407000000000165e-05, 9.412500000000046e-05, 9.501399999999743e-05, 9.433400000000147e-05, 9.505600000000308e-05, 9.488900000000078e-05, 9.411100000000089e-05, 9.487500000000121e-05, 9.433299999999506e-05, 9.44859999999978e-05, 9.44859999999978e-05, 9.49729999999982e-05, 9.43609999999942e-05, 9.424999999999711e-05, 9.46530000000001e-05, 9.41800000000062e-05, 9.474999999999761e-05, 9.490300000000035e-05, 9.474999999999761e-05, 9.430600000000233e-05, 9.459699999999488e-05, 9.406999999999471e-05, 9.409800000000079e-05, 9.4945000000006e-05, 9.41659999999997e-05, 9.404199999999557e-05, 9.434700000000157e-05, 9.406899999999524e-05, 9.481900000000293e-05, 9.419500000000525e-05, 9.451399999999693e-05, 9.436200000000061e-05, 9.423600000000448e-05, 9.495899999999863e-05, 9.447200000000516e-05, 9.441599999999994e-05, 9.441599999999994e-05, 9.405500000000261e-05, 9.424999999999711e-05, 9.456900000000268e-05, 9.436100000000114e-05, 9.475000000000455e-05, 9.487500000000121e-05, 9.476400000000412e-05, 9.412500000000046e-05, 9.495900000000557e-05]</msg>
<status status="PASS" starttime="20201112 10:15:21.530" endtime="20201112 10:15:21.534"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.519" endtime="20201112 10:15:21.536"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.542" endtime="20201112 10:15:21.545"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:21.551" endtime="20201112 10:15:21.572"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.546" endtime="20201112 10:15:21.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.538" endtime="20201112 10:15:21.576"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.029" endtime="20201112 10:15:21.576"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.027" endtime="20201112 10:15:21.577"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.600" endtime="20201112 10:15:21.620"></status>
</kw>
<msg timestamp="20201112 10:15:21.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:21.597" endtime="20201112 10:15:21.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:21.622" endtime="20201112 10:15:21.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.625" endtime="20201112 10:15:21.626"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.590" endtime="20201112 10:15:21.627"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.584" endtime="20201112 10:15:21.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.636" endtime="20201112 10:15:21.924"></status>
</kw>
<msg timestamp="20201112 10:15:21.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041780431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041876097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:21.634" endtime="20201112 10:15:21.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041780431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041876097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:21.934" endtime="20201112 10:15:21.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.952" endtime="20201112 10:15:21.958"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.631" endtime="20201112 10:15:21.959"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.628" endtime="20201112 10:15:21.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:21.971" level="INFO">${RESULT} = [{'time': 0.041876097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.56660000000012e-05, 'source_diff': 9.56660000000012e-05}, {'time': 0.041984125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:21.962" endtime="20201112 10:15:21.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:22.004" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:21.973" endtime="20201112 10:15:22.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.015" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 10:15:22.013" endtime="20201112 10:15:22.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.020" level="INFO">VALUE: [9.56660000000012e-05, 9.593100000000049e-05, 9.548600000000573e-05, 9.518000000000026e-05, 9.580499999999742e-05, 9.501399999999743e-05, 9.531999999999596e-05, 9.522299999999845e-05, 9.56530000000011e-05, 9.531999999999596e-05, 9.53059999999964e-05, 9.543000000000051e-05, 9.601399999999843e-05, 9.601400000000537e-05, 9.569400000000033e-05, 9.601399999999843e-05, 9.569400000000033e-05, 9.54729999999987e-05, 9.522300000000539e-05, 9.583400000000297e-05, 9.537500000000171e-05, 9.531999999999596e-05, 9.533299999999606e-05, 9.599999999999886e-05, 9.569499999999981e-05, 9.519399999999983e-05, 9.60000000000058e-05, 9.57079999999999e-05, 9.54859999999988e-05, 9.569499999999981e-05, 9.526399999999768e-05, 9.55000000000053e-05, 9.561100000000239e-05, 9.572199999999947e-05, 9.508300000000275e-05, 9.524999999999811e-05, 9.527800000000419e-05, 9.524999999999811e-05, 9.577800000000469e-05, 9.531999999999596e-05, 9.563900000000153e-05, 9.505600000000308e-05, 9.526299999999821e-05, 9.572199999999947e-05, 9.527799999999725e-05, 9.531900000000343e-05, 9.53609999999952e-05, 9.527799999999725e-05, 9.516699999999323e-05, 9.527799999999725e-05]</msg>
<status status="PASS" starttime="20201112 10:15:22.017" endtime="20201112 10:15:22.022"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.006" endtime="20201112 10:15:22.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.030" endtime="20201112 10:15:22.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:22.038" endtime="20201112 10:15:22.059"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.034" endtime="20201112 10:15:22.061"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.025" endtime="20201112 10:15:22.062"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.579" endtime="20201112 10:15:22.063"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.578" endtime="20201112 10:15:22.063"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.086" endtime="20201112 10:15:22.108"></status>
</kw>
<msg timestamp="20201112 10:15:22.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:22.082" endtime="20201112 10:15:22.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:22.112" endtime="20201112 10:15:22.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.118" endtime="20201112 10:15:22.122"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.075" endtime="20201112 10:15:22.123"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.070" endtime="20201112 10:15:22.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.141" endtime="20201112 10:15:22.475"></status>
</kw>
<msg timestamp="20201112 10:15:22.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041307653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041403944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:22.138" endtime="20201112 10:15:22.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041307653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041403944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:22.484" endtime="20201112 10:15:22.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.503" endtime="20201112 10:15:22.507"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.131" endtime="20201112 10:15:22.508"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.126" endtime="20201112 10:15:22.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:22.520" level="INFO">${RESULT} = [{'time': 0.041403944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.629099999999835e-05, 'source_diff': 9.629099999999835e-05}, {'time': 0.041511958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:22.511" endtime="20201112 10:15:22.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:22.553" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:22.523" endtime="20201112 10:15:22.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.564" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 10:15:22.561" endtime="20201112 10:15:22.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.569" level="INFO">VALUE: [9.629099999999835e-05, 9.668000000000176e-05, 9.661100000000339e-05, 9.699999999999986e-05, 9.641700000000142e-05, 9.626399999999868e-05, 9.633399999999653e-05, 9.651399999999893e-05, 9.624999999999911e-05, 9.607000000000365e-05, 9.680499999999842e-05, 9.699999999999986e-05, 9.674999999999961e-05, 9.688899999999584e-05, 9.670799999999397e-05, 9.638900000000228e-05, 9.655599999999764e-05, 9.673600000000004e-05, 9.64729999999997e-05, 9.679200000000526e-05, 9.7027999999999e-05, 9.67080000000009e-05, 9.699999999999986e-05, 9.657000000000415e-05, 9.7027999999999e-05, 9.63609999999962e-05, 9.683299999999756e-05, 9.688899999999584e-05, 9.620899999999988e-05, 9.669500000000081e-05, 9.633399999999653e-05, 9.634700000000357e-05, 9.676399999999918e-05, 9.668000000000176e-05, 9.608299999999681e-05, 9.668000000000176e-05, 9.673600000000004e-05, 9.643100000000099e-05, 9.7027999999999e-05, 9.676399999999918e-05, 9.686100000000364e-05, 9.623699999999902e-05, 9.62080000000004e-05, 9.701399999999943e-05, 9.66530000000021e-05, 9.659699999999688e-05, 9.694399999999465e-05, 9.684699999999713e-05, 9.661099999999645e-05, 9.608399999999628e-05]</msg>
<status status="PASS" starttime="20201112 10:15:22.566" endtime="20201112 10:15:22.570"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.555" endtime="20201112 10:15:22.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.578" endtime="20201112 10:15:22.581"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:22.586" endtime="20201112 10:15:22.608"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.582" endtime="20201112 10:15:22.610"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.574" endtime="20201112 10:15:22.612"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.066" endtime="20201112 10:15:22.612"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.064" endtime="20201112 10:15:22.613"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.636" endtime="20201112 10:15:22.659"></status>
</kw>
<msg timestamp="20201112 10:15:22.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:22.633" endtime="20201112 10:15:22.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:22.663" endtime="20201112 10:15:22.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.669" endtime="20201112 10:15:22.673"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.625" endtime="20201112 10:15:22.674"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.619" endtime="20201112 10:15:22.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.692" endtime="20201112 10:15:23.025"></status>
</kw>
<msg timestamp="20201112 10:15:23.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043311875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043409361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:22.689" endtime="20201112 10:15:23.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043311875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043409361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:23.034" endtime="20201112 10:15:23.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.053" endtime="20201112 10:15:23.057"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.682" endtime="20201112 10:15:23.058"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.677" endtime="20201112 10:15:23.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:23.070" level="INFO">${RESULT} = [{'time': 0.043409361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.74860000000008e-05, 'source_diff': 9.74860000000008e-05}, {'time': 0.043520347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:23.061" endtime="20201112 10:15:23.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:23.102" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:23.072" endtime="20201112 10:15:23.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.113" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 10:15:23.111" endtime="20201112 10:15:23.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.119" level="INFO">VALUE: [9.74860000000008e-05, 9.740300000000285e-05, 9.727799999999925e-05, 9.725000000000011e-05, 9.793100000000249e-05, 9.783299999999856e-05, 9.711100000000389e-05, 9.706999999999771e-05, 9.756899999999874e-05, 9.722200000000097e-05, 9.801400000000043e-05, 9.769400000000233e-05, 9.734700000000457e-05, 9.775000000000061e-05, 9.76939999999954e-05, 9.800000000000086e-05, 9.766700000000267e-05, 9.726399999999968e-05, 9.741699999999548e-05, 9.800000000000086e-05, 9.726399999999968e-05, 9.706899999999824e-05, 9.800000000000086e-05, 9.706999999999771e-05, 9.761099999999745e-05, 9.722200000000097e-05, 9.769500000000181e-05, 9.767999999999583e-05, 9.750000000000036e-05, 9.788899999999684e-05, 9.719400000000183e-05, 9.727799999999925e-05, 9.78609999999977e-05, 9.709699999999738e-05, 9.772199999999454e-05, 9.723600000000054e-05, 9.725000000000011e-05, 9.727799999999925e-05, 9.726399999999968e-05, 9.795900000000163e-05, 9.765299999999616e-05, 9.717999999999533e-05, 9.725000000000011e-05, 9.788899999999684e-05, 9.740299999999591e-05, 9.71530000000026e-05, 9.779199999999932e-05, 9.781999999999846e-05, 9.750000000000036e-05, 9.716700000000217e-05]</msg>
<status status="PASS" starttime="20201112 10:15:23.115" endtime="20201112 10:15:23.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.104" endtime="20201112 10:15:23.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.128" endtime="20201112 10:15:23.131"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:23.136" endtime="20201112 10:15:23.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.132" endtime="20201112 10:15:23.159"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.123" endtime="20201112 10:15:23.161"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.615" endtime="20201112 10:15:23.162"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.614" endtime="20201112 10:15:23.162"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.184" endtime="20201112 10:15:23.206"></status>
</kw>
<msg timestamp="20201112 10:15:23.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:23.181" endtime="20201112 10:15:23.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:23.210" endtime="20201112 10:15:23.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.216" endtime="20201112 10:15:23.220"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.174" endtime="20201112 10:15:23.221"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.168" endtime="20201112 10:15:23.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.239" endtime="20201112 10:15:23.574"></status>
</kw>
<msg timestamp="20201112 10:15:23.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041402583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041501097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:23.236" endtime="20201112 10:15:23.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041402583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041501097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:23.583" endtime="20201112 10:15:23.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.602" endtime="20201112 10:15:23.606"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.229" endtime="20201112 10:15:23.607"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.224" endtime="20201112 10:15:23.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:23.619" level="INFO">${RESULT} = [{'time': 0.041501097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.851400000000093e-05, 'source_diff': 9.851400000000093e-05}, {'time': 0.041617153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:23.610" endtime="20201112 10:15:23.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:23.652" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:23.621" endtime="20201112 10:15:23.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.663" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 10:15:23.661" endtime="20201112 10:15:23.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.669" level="INFO">VALUE: [9.851400000000093e-05, 9.895899999999569e-05, 9.830499999999992e-05, 9.84860000000018e-05, 9.829199999999982e-05, 9.86939999999964e-05, 9.813899999999709e-05, 9.868100000000324e-05, 9.818100000000274e-05, 9.840199999999744e-05, 9.850000000000136e-05, 9.830499999999992e-05, 9.86530000000041e-05, 9.862500000000496e-05, 9.852799999999357e-05, 9.81809999999958e-05, 9.83059999999994e-05, 9.83059999999994e-05, 9.876400000000118e-05, 9.816699999999623e-05, 9.823600000000154e-05, 9.875000000000161e-05, 9.840300000000385e-05, 9.829100000000035e-05, 9.874999999999468e-05, 9.866699999999673e-05, 9.866699999999673e-05, 9.81530000000036e-05, 9.816599999999676e-05, 9.875000000000161e-05, 9.805599999999914e-05, 9.87080000000029e-05, 9.884699999999913e-05, 9.859699999999888e-05, 9.895799999999622e-05, 9.851400000000093e-05, 9.838899999999734e-05, 9.88059999999999e-05, 9.901400000000143e-05, 9.893100000000349e-05, 9.87359999999951e-05, 9.891600000000444e-05, 9.809699999999838e-05, 9.858299999999931e-05, 9.82359999999946e-05, 9.808300000000575e-05, 9.816700000000317e-05, 9.893099999999655e-05, 9.808399999999828e-05, 9.808399999999828e-05]</msg>
<status status="PASS" starttime="20201112 10:15:23.666" endtime="20201112 10:15:23.670"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.654" endtime="20201112 10:15:23.672"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.678" endtime="20201112 10:15:23.681"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:23.687" endtime="20201112 10:15:23.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.682" endtime="20201112 10:15:23.710"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.674" endtime="20201112 10:15:23.711"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.164" endtime="20201112 10:15:23.712"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.163" endtime="20201112 10:15:23.712"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.735" endtime="20201112 10:15:23.758"></status>
</kw>
<msg timestamp="20201112 10:15:23.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:23.732" endtime="20201112 10:15:23.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:23.761" endtime="20201112 10:15:23.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.767" endtime="20201112 10:15:23.771"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.724" endtime="20201112 10:15:23.773"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.719" endtime="20201112 10:15:23.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.790" endtime="20201112 10:15:24.125"></status>
</kw>
<msg timestamp="20201112 10:15:24.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041703986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041803403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:23.787" endtime="20201112 10:15:24.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041703986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041803403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:24.134" endtime="20201112 10:15:24.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.153" endtime="20201112 10:15:24.157"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.780" endtime="20201112 10:15:24.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.775" endtime="20201112 10:15:24.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:24.170" level="INFO">${RESULT} = [{'time': 0.041803403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.941700000000442e-05, 'source_diff': 9.941700000000442e-05}, {'time': 0.041914403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:24.161" endtime="20201112 10:15:24.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:24.203" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:24.172" endtime="20201112 10:15:24.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.214" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 10:15:24.212" endtime="20201112 10:15:24.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.220" level="INFO">VALUE: [9.941700000000442e-05, 9.994500000000406e-05, 9.918100000000374e-05, 9.905600000000014e-05, 9.976399999999525e-05, 9.987499999999927e-05, 9.997199999999679e-05, 9.991699999999798e-05, 9.929100000000135e-05, 9.965299999999816e-05, 9.918100000000374e-05, 9.991699999999798e-05, 9.945800000000365e-05, 9.96809999999973e-05, 9.959699999999988e-05, 9.916599999999776e-05, 9.990299999999841e-05, 9.916599999999776e-05, 0.00010000000000000286, 9.994399999999765e-05, 9.99860000000033e-05, 9.920799999999647e-05, 9.926299999999527e-05, 9.909799999999885e-05, 9.940299999999791e-05, 9.99860000000033e-05, 9.958300000000031e-05, 9.937499999999877e-05, 9.938899999999834e-05, 9.994399999999765e-05, 9.975000000000261e-05, 9.950000000000236e-05, 9.987499999999927e-05, 9.92359999999956e-05, 9.925000000000211e-05, 9.929200000000082e-05, 9.934699999999963e-05, 9.92080000000034e-05, 9.927800000000125e-05, 9.970799999999697e-05, 9.930500000000092e-05, 9.981900000000099e-05, 0.00010001400000000243, 9.994500000000406e-05, 9.912499999999852e-05, 0.00010005499999999473, 9.906900000000024e-05, 9.937499999999877e-05, 9.952799999999457e-05, 9.990299999999841e-05]</msg>
<status status="PASS" starttime="20201112 10:15:24.216" endtime="20201112 10:15:24.221"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.205" endtime="20201112 10:15:24.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.229" endtime="20201112 10:15:24.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:24.237" endtime="20201112 10:15:24.259"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.233" endtime="20201112 10:15:24.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.224" endtime="20201112 10:15:24.262"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.714" endtime="20201112 10:15:24.263"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.713" endtime="20201112 10:15:24.263"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.285" endtime="20201112 10:15:24.308"></status>
</kw>
<msg timestamp="20201112 10:15:24.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:24.282" endtime="20201112 10:15:24.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:24.311" endtime="20201112 10:15:24.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.317" endtime="20201112 10:15:24.321"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.275" endtime="20201112 10:15:24.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.269" endtime="20201112 10:15:24.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.340" endtime="20201112 10:15:24.672"></status>
</kw>
<msg timestamp="20201112 10:15:24.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041607514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041708111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:24.337" endtime="20201112 10:15:24.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041607514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041708111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:24.682" endtime="20201112 10:15:24.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.701" endtime="20201112 10:15:24.705"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.330" endtime="20201112 10:15:24.706"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.325" endtime="20201112 10:15:24.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:24.718" level="INFO">${RESULT} = [{'time': 0.041708111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010059700000000088, 'source_diff': 0.00010059700000000088}, {'time': 0.041824125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:24.709" endtime="20201112 10:15:24.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:24.749" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:24.720" endtime="20201112 10:15:24.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.761" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 10:15:24.757" endtime="20201112 10:15:24.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.766" level="INFO">VALUE: [0.00010059700000000088, 0.00010079199999999539, 0.00010061100000000045, 0.00010016700000000517, 0.00010083400000000103, 0.00010026300000000321, 0.00010065199999999969, 0.00010075000000000361, 0.00010077699999999634, 0.0001005280000000025, 0.00010095799999999822, 0.00010040300000000585, 0.00010040299999999891, 0.00010043100000000499, 0.00010066599999999926, 0.0001007359999999971, 0.00010044499999999762, 0.0001008610000000007, 0.00010048599999999686, 0.00010072199999999754, 0.00010037499999999977, 0.0001006809999999983, 0.00010009700000000038, 0.00010063899999999959, 0.00010022199999999704, 0.0001008480000000006, 0.00010091600000000644, 0.00010049999999999643, 0.00010015199999999919, 0.0001010139999999965, 0.00010031900000000149, 0.00010033300000000106, 0.00010031900000000149, 0.00010029200000000182, 0.00010029199999999489, 0.00010073699999999658, 0.00010080499999999548, 0.00010029100000000235, 0.0001003610000000002, 0.0001008060000000019, 0.00010025000000000311, 0.0001003610000000002, 0.00010061099999999351, 0.00010094499999999812, 0.00010050000000000336, 0.00010016699999999823, 0.00010094399999999865, 0.00010026399999999575, 0.00010072200000000447, 0.00010061099999999351]</msg>
<status status="PASS" starttime="20201112 10:15:24.763" endtime="20201112 10:15:24.768"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.751" endtime="20201112 10:15:24.769"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.776" endtime="20201112 10:15:24.778"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:24.784" endtime="20201112 10:15:24.805"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.779" endtime="20201112 10:15:24.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.771" endtime="20201112 10:15:24.809"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.265" endtime="20201112 10:15:24.809"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.264" endtime="20201112 10:15:24.810"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.832" endtime="20201112 10:15:24.855"></status>
</kw>
<msg timestamp="20201112 10:15:24.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:24.829" endtime="20201112 10:15:24.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:24.858" endtime="20201112 10:15:24.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.864" endtime="20201112 10:15:24.868"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.822" endtime="20201112 10:15:24.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.816" endtime="20201112 10:15:24.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.887" endtime="20201112 10:15:25.208"></status>
</kw>
<msg timestamp="20201112 10:15:25.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041557569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041658708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:24.884" endtime="20201112 10:15:25.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041557569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041658708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:25.212" endtime="20201112 10:15:25.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.221" endtime="20201112 10:15:25.223"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.877" endtime="20201112 10:15:25.223"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.872" endtime="20201112 10:15:25.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:25.229" level="INFO">${RESULT} = [{'time': 0.041658708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010113900000000009, 'source_diff': 0.00010113900000000009}, {'time': 0.041765694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:25.225" endtime="20201112 10:15:25.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:25.242" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:25.230" endtime="20201112 10:15:25.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.248" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 10:15:25.247" endtime="20201112 10:15:25.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.250" level="INFO">VALUE: [0.00010113900000000009, 0.00010116599999999976, 0.00010130499999999598, 0.0001012359999999976, 0.00010180500000000342, 0.0001011809999999988, 0.00010107000000000171, 0.00010188900000000084, 0.00010166699999999973, 0.00010105600000000214, 0.0001019160000000005, 0.000101416, 0.00010159700000000188, 0.00010148599999999786, 0.00010108299999999487, 0.00010111100000000095, 0.0001018610000000017, 0.00010109700000000138, 0.00010111100000000095, 0.00010112500000000052, 0.0001017359999999981, 0.00010187499999999433, 0.00010162500000000102, 0.00010126400000000368, 0.00010150000000000436, 0.0001018610000000017, 0.00010172199999999854, 0.00010183300000000256, 0.00010162500000000102, 0.00010154199999999614, 0.00010122200000000497, 0.00010123600000000454, 0.0001018889999999939, 0.00010166699999999973, 0.00010177799999999682, 0.00010193099999999955, 0.00010108300000000181, 0.00010190300000000041, 0.0001018480000000016, 0.0001018480000000016, 0.00010137500000000077, 0.00010193000000000008, 0.0001010689999999953, 0.00010131900000000249, 0.00010165300000000016, 0.00010191699999999998, 0.00010145799999999872, 0.00010176400000000418, 0.00010137500000000077, 0.00010129199999999589]</msg>
<status status="PASS" starttime="20201112 10:15:25.249" endtime="20201112 10:15:25.252"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.243" endtime="20201112 10:15:25.252"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.256" endtime="20201112 10:15:25.257"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:25.259" endtime="20201112 10:15:25.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.257" endtime="20201112 10:15:25.280"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.253" endtime="20201112 10:15:25.280"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.812" endtime="20201112 10:15:25.281"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.811" endtime="20201112 10:15:25.281"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.291" endtime="20201112 10:15:25.312"></status>
</kw>
<msg timestamp="20201112 10:15:25.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:25.290" endtime="20201112 10:15:25.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:25.313" endtime="20201112 10:15:25.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.316" endtime="20201112 10:15:25.318"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.286" endtime="20201112 10:15:25.319"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.284" endtime="20201112 10:15:25.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.327" endtime="20201112 10:15:25.654"></status>
</kw>
<msg timestamp="20201112 10:15:25.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024455333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024558361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:25.326" endtime="20201112 10:15:25.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024455333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024558361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:25.663" endtime="20201112 10:15:25.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.682" endtime="20201112 10:15:25.686"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.322" endtime="20201112 10:15:25.687"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.320" endtime="20201112 10:15:25.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:25.699" level="INFO">${RESULT} = [{'time': 0.024558361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010302800000000154, 'source_diff': 0.00010302800000000154}, {'time': 0.024676389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:25.690" endtime="20201112 10:15:25.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:25.730" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:25.701" endtime="20201112 10:15:25.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.742" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 10:15:25.739" endtime="20201112 10:15:25.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.747" level="INFO">VALUE: [0.00010302800000000154, 0.00010215300000000066, 0.00010249999999999843, 0.00010301299999999902, 0.00010259800000000235, 0.00010274999999999868, 0.00010266600000000126, 0.00010229100000000088, 0.00010226400000000122, 0.00010252799999999757, 0.0001025550000000007, 0.00010291700000000098, 0.00010288900000000184, 0.00010236099999999873, 0.00010284699999999966, 0.00010294500000000012, 0.00010215200000000119, 0.00010240300000000091, 0.00010295800000000022, 0.0001027359999999991, 0.00010211099999999848, 0.0001022220000000025, 0.00010248599999999886, 0.00010238900000000134, 0.00010263900000000159, 0.00010279199999999739, 0.0001025420000000006, 0.00010274999999999868, 0.0001026940000000004, 0.00010266600000000126, 0.0001025550000000007, 0.00010284699999999966, 0.00010287500000000227, 0.00010205599999999967, 0.00010206999999999924, 0.00010227800000000078, 0.00010258399999999931, 0.00010225000000000165, 0.00010247200000000276, 0.00010218000000000033, 0.00010266700000000073, 0.00010216700000000023, 0.00010225000000000165, 0.00010266700000000073, 0.00010213799999999815, 0.0001027359999999991, 0.0001020420000000001, 0.00010218000000000033, 0.00010243000000000058, 0.00010281899999999705]</msg>
<status status="PASS" starttime="20201112 10:15:25.744" endtime="20201112 10:15:25.748"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.732" endtime="20201112 10:15:25.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.756" endtime="20201112 10:15:25.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:25.766" endtime="20201112 10:15:25.787"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.762" endtime="20201112 10:15:25.789"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.752" endtime="20201112 10:15:25.791"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.282" endtime="20201112 10:15:25.791"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.281" endtime="20201112 10:15:25.792"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.814" endtime="20201112 10:15:25.836"></status>
</kw>
<msg timestamp="20201112 10:15:25.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:25.811" endtime="20201112 10:15:25.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:25.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:25.839" endtime="20201112 10:15:25.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.846" endtime="20201112 10:15:25.849"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.803" endtime="20201112 10:15:25.851"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.798" endtime="20201112 10:15:25.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:25.869" endtime="20201112 10:15:26.202"></status>
</kw>
<msg timestamp="20201112 10:15:26.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041319431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041423306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:25.865" endtime="20201112 10:15:26.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041319431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041423306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:26.212" endtime="20201112 10:15:26.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.230" endtime="20201112 10:15:26.233"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.858" endtime="20201112 10:15:26.235"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.854" endtime="20201112 10:15:26.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:26.247" level="INFO">${RESULT} = [{'time': 0.041423306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010387500000000327, 'source_diff': 0.00010387500000000327}, {'time': 0.041544319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:26.238" endtime="20201112 10:15:26.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:26.279" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:26.249" endtime="20201112 10:15:26.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.290" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 10:15:26.288" endtime="20201112 10:15:26.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.295" level="INFO">VALUE: [0.00010387500000000327, 0.00010368000000000183, 0.00010330500000000492, 0.00010380500000000542, 0.00010354200000000507, 0.00010363899999999565, 0.00010308299999999687, 0.00010348599999999986, 0.00010352799999999857, 0.00010343100000000105, 0.00010380599999999796, 0.00010318000000000133, 0.00010305499999999773, 0.00010377799999999882, 0.00010324999999999918, 0.00010329199999999789, 0.00010340300000000191, 0.00010391700000000198, 0.00010320800000000047, 0.00010368000000000183, 0.00010358399999999685, 0.00010394399999999471, 0.00010341700000000148, 0.00010390299999999547, 0.00010390300000000241, 0.00010359699999999694, 0.00010326399999999875, 0.00010395900000000069, 0.00010330599999999746, 0.00010352799999999857, 0.00010373699999999958, 0.00010312500000000252, 0.00010379100000000585, 0.00010395800000000122, 0.00010358300000000431, 0.00010345800000000072, 0.00010398600000000036, 0.00010349999999999943, 0.00010318000000000133, 0.00010349999999999943, 0.00010308400000000328, 0.00010383300000000456, 0.00010306900000000424, 0.00010337499999999583, 0.00010309699999999644, 0.00010365299999999522, 0.0001036810000000013, 0.00010363800000000312, 0.00010391700000000198, 0.00010366599999999532]</msg>
<status status="PASS" starttime="20201112 10:15:26.292" endtime="20201112 10:15:26.297"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.281" endtime="20201112 10:15:26.298"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.305" endtime="20201112 10:15:26.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:26.313" endtime="20201112 10:15:26.336"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.309" endtime="20201112 10:15:26.338"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.300" endtime="20201112 10:15:26.339"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.794" endtime="20201112 10:15:26.340"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:25.792" endtime="20201112 10:15:26.340"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.362" endtime="20201112 10:15:26.385"></status>
</kw>
<msg timestamp="20201112 10:15:26.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:26.359" endtime="20201112 10:15:26.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:26.388" endtime="20201112 10:15:26.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.395" endtime="20201112 10:15:26.398"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.352" endtime="20201112 10:15:26.400"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.346" endtime="20201112 10:15:26.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.418" endtime="20201112 10:15:26.751"></status>
</kw>
<msg timestamp="20201112 10:15:26.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042768125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042872833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:26.414" endtime="20201112 10:15:26.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042768125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042872833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:26.761" endtime="20201112 10:15:26.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.779" endtime="20201112 10:15:26.783"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.407" endtime="20201112 10:15:26.785"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.403" endtime="20201112 10:15:26.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:26.796" level="INFO">${RESULT} = [{'time': 0.042872833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010470800000000197, 'source_diff': 0.00010470800000000197}, {'time': 0.042993847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:26.788" endtime="20201112 10:15:26.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:26.826" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:26.798" endtime="20201112 10:15:26.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.837" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 10:15:26.835" endtime="20201112 10:15:26.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.842" level="INFO">VALUE: [0.00010470800000000197, 0.00010493000000000308, 0.0001050140000000005, 0.00010447200000000129, 0.00010490299999999647, 0.00010469500000000187, 0.00010441700000000248, 0.00010408399999999735, 0.00010487500000000427, 0.00010467999999999589, 0.00010500000000000093, 0.00010491599999999657, 0.00010459699999999794, 0.00010412499999999658, 0.00010500000000000093, 0.00010476400000000025, 0.00010497300000000126, 0.00010491700000000298, 0.00010468099999999536, 0.0001049160000000035, 0.00010430499999999898, 0.00010447200000000129, 0.00010432000000000496, 0.0001046810000000023, 0.000104514, 0.0001047219999999946, 0.00010466699999999579, 0.00010427799999999932, 0.000104514, 0.0001050140000000005, 0.00010429100000000635, 0.00010412500000000352, 0.00010490300000000341, 0.00010441700000000248, 0.00010404199999999864, 0.0001041810000000018, 0.00010501299999999408, 0.00010493099999999561, 0.00010443099999999511, 0.00010409699999999744, 0.0001046940000000024, 0.00010481899999999905, 0.00010481899999999905, 0.0001048339999999981, 0.00010413900000000309, 0.00010476400000000025, 0.00010468099999999536, 0.00010483400000000503, 0.00010447200000000129, 0.00010426399999999975]</msg>
<status status="PASS" starttime="20201112 10:15:26.839" endtime="20201112 10:15:26.844"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.828" endtime="20201112 10:15:26.846"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.852" endtime="20201112 10:15:26.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:26.860" endtime="20201112 10:15:26.882"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.856" endtime="20201112 10:15:26.883"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.847" endtime="20201112 10:15:26.885"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.342" endtime="20201112 10:15:26.885"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.341" endtime="20201112 10:15:26.886"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.910" endtime="20201112 10:15:26.933"></status>
</kw>
<msg timestamp="20201112 10:15:26.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:26.906" endtime="20201112 10:15:26.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:26.936" endtime="20201112 10:15:26.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.943" endtime="20201112 10:15:26.946"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.899" endtime="20201112 10:15:26.948"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.892" endtime="20201112 10:15:26.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.965" endtime="20201112 10:15:27.299"></status>
</kw>
<msg timestamp="20201112 10:15:27.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043103306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043208847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:26.962" endtime="20201112 10:15:27.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043103306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043208847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:27.308" endtime="20201112 10:15:27.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.326" endtime="20201112 10:15:27.330"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.955" endtime="20201112 10:15:27.332"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.950" endtime="20201112 10:15:27.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:27.343" level="INFO">${RESULT} = [{'time': 0.043208847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010554100000000066, 'source_diff': 0.00010554100000000066}, {'time': 0.043332847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:27.335" endtime="20201112 10:15:27.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:27.374" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:27.345" endtime="20201112 10:15:27.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.385" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 10:15:27.382" endtime="20201112 10:15:27.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.390" level="INFO">VALUE: [0.00010554100000000066, 0.00010525000000000118, 0.00010526400000000075, 0.00010605599999999327, 0.00010587499999999833, 0.00010591700000000398, 0.00010580599999999996, 0.00010543100000000305, 0.00010592999999999714, 0.00010601399999999456, 0.00010549999999999449, 0.00010516699999999629, 0.00010558299999999937, 0.00010586099999999876, 0.00010594499999999618, 0.00010548699999999439, 0.00010593100000000355, 0.00010568000000000383, 0.00010567999999999689, 0.00010576400000000125, 0.00010541599999999707, 0.00010540299999999697, 0.00010604100000000116, 0.00010526400000000075, 0.00010579200000000039, 0.00010540299999999697, 0.00010536099999999826, 0.00010581900000000005, 0.00010524999999999424, 0.00010584699999999919, 0.00010591599999999757, 0.00010550000000000143, 0.00010602800000000107, 0.00010573599999999517, 0.00010534799999999817, 0.00010565299999999722, 0.00010552800000000057, 0.00010551300000000152, 0.00010569399999999646, 0.0001051810000000028, 0.00010591700000000398, 0.00010516699999999629, 0.00010554200000000014, 0.00010591700000000398, 0.00010530499999999998, 0.00010508400000000528, 0.00010595800000000322, 0.00010525000000000118, 0.00010518000000000333, 0.00010509699999999844]</msg>
<status status="PASS" starttime="20201112 10:15:27.387" endtime="20201112 10:15:27.391"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.375" endtime="20201112 10:15:27.393"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.399" endtime="20201112 10:15:27.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:27.407" endtime="20201112 10:15:27.429"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.403" endtime="20201112 10:15:27.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.395" endtime="20201112 10:15:27.432"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.888" endtime="20201112 10:15:27.433"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.887" endtime="20201112 10:15:27.433"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.507" endtime="20201112 10:15:27.433"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:27.444" endtime="20201112 10:15:27.465"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.440" endtime="20201112 10:15:27.467"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.437" endtime="20201112 10:15:27.468"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:33.372" endtime="20201112 10:15:27.469" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:27.488" endtime="20201112 10:15:27.509"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.484" endtime="20201112 10:15:27.511"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.545" endtime="20201112 10:15:27.569"></status>
</kw>
<msg timestamp="20201112 10:15:27.570" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:27.542" endtime="20201112 10:15:27.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.577" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:27.573" endtime="20201112 10:15:27.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.583" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:15:27.579" endtime="20201112 10:15:27.584"></status>
</kw>
<status status="FAIL" starttime="20201112 10:15:27.535" endtime="20201112 10:15:27.586"></status>
</kw>
<status status="FAIL" starttime="20201112 10:15:27.529" endtime="20201112 10:15:27.587"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.526" endtime="20201112 10:15:27.588"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:15:27.596" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:15:27.594" endtime="20201112 10:15:27.597"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.590" endtime="20201112 10:15:27.597"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.524" endtime="20201112 10:15:27.597"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.522" endtime="20201112 10:15:27.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.599" endtime="20201112 10:15:27.603"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.517" endtime="20201112 10:15:27.604"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.512" endtime="20201112 10:15:27.606"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.481" endtime="20201112 10:15:27.606"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.632" endtime="20201112 10:15:27.651"></status>
</kw>
<msg timestamp="20201112 10:15:27.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:27.629" endtime="20201112 10:15:27.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:27.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:27.654" endtime="20201112 10:15:27.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.660" endtime="20201112 10:15:27.664"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.621" endtime="20201112 10:15:27.665"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.615" endtime="20201112 10:15:27.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:27.685" endtime="20201112 10:15:28.027"></status>
</kw>
<msg timestamp="20201112 10:15:28.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138267708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138273764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:27.680" endtime="20201112 10:15:28.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138267708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138273764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:28.037" endtime="20201112 10:15:28.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.056" endtime="20201112 10:15:28.059"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.673" endtime="20201112 10:15:28.061"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.668" endtime="20201112 10:15:28.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:28.073" level="INFO">${RESULT} = [{'time': 0.138273764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.05600000000428e-06, 'source_diff': 6.05600000000428e-06}, {'time': 0.138289375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:28.064" endtime="20201112 10:15:28.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:28.104" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:28.075" endtime="20201112 10:15:28.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.115" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 10:15:28.112" endtime="20201112 10:15:28.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.120" level="INFO">VALUE: [6.05600000000428e-06, 5.666999999986988e-06, 6.124999999995717e-06, 5.625000000009095e-06, 5.166000000000892e-06, 5.124999999994717e-06, 5.139000000015104e-06, 5.167000000000366e-06, 5.124999999994717e-06, 5.124999999994717e-06, 5.138999999987348e-06, 5.639000000001726e-06, 5.0689999999964375e-06, 5.139000000015104e-06, 5.625000000009095e-06, 5.610999999988708e-06, 5.624999999981339e-06, 5.111000000002086e-06, 6.179999999994523e-06, 5.124999999994717e-06, 6.124999999995717e-06, 5.125000000022473e-06, 5.138999999987348e-06, 5.596999999996077e-06, 5.124999999994717e-06, 5.153000000007735e-06, 5.138999999987348e-06, 5.139000000015104e-06, 5.610999999988708e-06, 5.639000000001726e-06, 5.610999999988708e-06, 5.138999999987348e-06, 5.153000000007735e-06, 5.625000000009095e-06, 6.13800000001663e-06, 6.124999999995717e-06, 6.151999999981506e-06, 5.639000000001726e-06, 5.625000000009095e-06, 5.639000000001726e-06, 5.639000000001726e-06, 6.124999999995717e-06, 5.179999999993523e-06, 5.610999999988708e-06, 5.625000000009095e-06, 5.153000000007735e-06, 6.125000000023473e-06, 5.111000000002086e-06, 5.639000000001726e-06, 5.639000000001726e-06]</msg>
<status status="PASS" starttime="20201112 10:15:28.117" endtime="20201112 10:15:28.121"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.106" endtime="20201112 10:15:28.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.129" endtime="20201112 10:15:28.131"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:28.137" endtime="20201112 10:15:28.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.133" endtime="20201112 10:15:28.160"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.124" endtime="20201112 10:15:28.162"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.611" endtime="20201112 10:15:28.172"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.610" endtime="20201112 10:15:28.172"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.195" endtime="20201112 10:15:28.213"></status>
</kw>
<msg timestamp="20201112 10:15:28.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:28.192" endtime="20201112 10:15:28.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:28.216" endtime="20201112 10:15:28.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.222" endtime="20201112 10:15:28.226"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.185" endtime="20201112 10:15:28.228"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.179" endtime="20201112 10:15:28.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.245" endtime="20201112 10:15:28.579"></status>
</kw>
<msg timestamp="20201112 10:15:28.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051509528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051515653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:28.242" endtime="20201112 10:15:28.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051509528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051515653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:28.586" endtime="20201112 10:15:28.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.594" endtime="20201112 10:15:28.596"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.235" endtime="20201112 10:15:28.597"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.230" endtime="20201112 10:15:28.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:28.602" level="INFO">${RESULT} = [{'time': 0.051515653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.125000000002656e-06, 'source_diff': 6.125000000002656e-06}, {'time': 0.051530722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:28.598" endtime="20201112 10:15:28.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:28.617" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:28.603" endtime="20201112 10:15:28.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.622" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 10:15:28.621" endtime="20201112 10:15:28.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.625" level="INFO">VALUE: [6.125000000002656e-06, 6.153000000001796e-06, 6.611999999996121e-06, 7.11200000000356e-06, 7.139000000003226e-06, 6.153000000001796e-06, 6.153000000001796e-06, 6.625000000003156e-06, 6.624999999996217e-06, 6.139000000002226e-06, 6.611000000003586e-06, 6.124999999995717e-06, 6.625000000003156e-06, 6.153000000001796e-06, 6.5969999999970774e-06, 6.624999999996217e-06, 6.639000000002726e-06, 6.568999999997938e-06, 7.124999999996717e-06, 6.110999999996147e-06, 6.125000000002656e-06, 7.1519999999963835e-06, 6.0689999999974376e-06, 7.153000000002796e-06, 7.179999999995523e-06, 6.625000000003156e-06, 6.138999999995287e-06, 6.667000000001866e-06, 6.111000000003086e-06, 6.125000000002656e-06, 6.639000000002726e-06, 6.638999999995787e-06, 6.125000000002656e-06, 6.625000000003156e-06, 6.638999999995787e-06, 6.139000000002226e-06, 6.125000000002656e-06, 6.554999999998368e-06, 6.610999999996647e-06, 6.139000000002226e-06, 6.125000000002656e-06, 6.624999999996217e-06, 6.124999999995717e-06, 6.139000000002226e-06, 6.124999999995717e-06, 6.139000000002226e-06, 6.624999999996217e-06, 6.124999999995717e-06, 6.625000000003156e-06, 6.111000000003086e-06]</msg>
<status status="PASS" starttime="20201112 10:15:28.623" endtime="20201112 10:15:28.625"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.618" endtime="20201112 10:15:28.626"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.629" endtime="20201112 10:15:28.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:28.633" endtime="20201112 10:15:28.653"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.631" endtime="20201112 10:15:28.654"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.627" endtime="20201112 10:15:28.654"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.174" endtime="20201112 10:15:28.655"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.173" endtime="20201112 10:15:28.655"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.665" endtime="20201112 10:15:28.680"></status>
</kw>
<msg timestamp="20201112 10:15:28.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:28.664" endtime="20201112 10:15:28.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:28.682" endtime="20201112 10:15:28.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.684" endtime="20201112 10:15:28.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.660" endtime="20201112 10:15:28.690"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.658" endtime="20201112 10:15:28.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.707" endtime="20201112 10:15:29.045"></status>
</kw>
<msg timestamp="20201112 10:15:29.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024344833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024352958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:28.704" endtime="20201112 10:15:29.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024344833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024352958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:29.056" endtime="20201112 10:15:29.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.074" endtime="20201112 10:15:29.078"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.697" endtime="20201112 10:15:29.080"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.692" endtime="20201112 10:15:29.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:29.092" level="INFO">${RESULT} = [{'time': 0.024352958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.125000000001187e-06, 'source_diff': 8.125000000001187e-06}, {'time': 0.024366708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:29.083" endtime="20201112 10:15:29.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:29.124" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:29.094" endtime="20201112 10:15:29.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.135" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 10:15:29.132" endtime="20201112 10:15:29.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.140" level="INFO">VALUE: [8.125000000001187e-06, 7.138999999999757e-06, 7.652999999999827e-06, 7.611000000001117e-06, 7.625000000000687e-06, 7.624999999997217e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.639000000000257e-06, 7.625000000000687e-06, 8.110999999998147e-06, 7.639000000000257e-06, 7.624999999997217e-06, 7.138999999999757e-06, 7.625000000000687e-06, 7.638999999996787e-06, 7.639000000000257e-06, 7.639000000000257e-06, 7.125000000000187e-06, 7.6109999999976474e-06, 7.625000000000687e-06, 7.125000000000187e-06, 7.138999999999757e-06, 7.138000000000283e-06, 7.084000000000951e-06, 7.1379999999968136e-06, 7.611000000001117e-06, 7.125000000000187e-06, 7.625000000000687e-06, 7.194000000002032e-06, 7.124999999996717e-06, 7.1529999999993266e-06, 7.125000000000187e-06, 7.639000000000257e-06, 7.583999999997981e-06, 7.624999999997217e-06, 7.138999999999757e-06, 7.138999999999757e-06, 7.097000000001047e-06, 7.625000000000687e-06, 7.125000000000187e-06, 7.611000000001117e-06, 7.1120000000000905e-06, 7.584000000001451e-06, 7.695000000002006e-06, 7.555999999998841e-06, 7.653000000003296e-06, 7.568999999998938e-06, 7.625000000000687e-06, 7.125000000000187e-06]</msg>
<status status="PASS" starttime="20201112 10:15:29.137" endtime="20201112 10:15:29.142"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.126" endtime="20201112 10:15:29.143"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.150" endtime="20201112 10:15:29.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:29.158" endtime="20201112 10:15:29.179"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.154" endtime="20201112 10:15:29.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.145" endtime="20201112 10:15:29.182"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.656" endtime="20201112 10:15:29.183"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.655" endtime="20201112 10:15:29.183"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.206" endtime="20201112 10:15:29.224"></status>
</kw>
<msg timestamp="20201112 10:15:29.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:29.203" endtime="20201112 10:15:29.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:29.227" endtime="20201112 10:15:29.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.234" endtime="20201112 10:15:29.239"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.196" endtime="20201112 10:15:29.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.190" endtime="20201112 10:15:29.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.260" endtime="20201112 10:15:29.593"></status>
</kw>
<msg timestamp="20201112 10:15:29.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041795611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041804722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:29.257" endtime="20201112 10:15:29.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041795611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041804722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:29.603" endtime="20201112 10:15:29.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.622" endtime="20201112 10:15:29.625"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.249" endtime="20201112 10:15:29.627"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.244" endtime="20201112 10:15:29.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:29.639" level="INFO">${RESULT} = [{'time': 0.041804722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.041817389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:29.630" endtime="20201112 10:15:29.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:29.671" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:29.641" endtime="20201112 10:15:29.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.682" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 10:15:29.680" endtime="20201112 10:15:29.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.687" level="INFO">VALUE: [9.110999999999148e-06, 8.111000000005086e-06, 8.124999999997717e-06, 8.125000000004656e-06, 8.639000000004726e-06, 8.096999999998578e-06, 8.637999999998314e-06, 8.138000000004753e-06, 8.110999999998147e-06, 8.624999999998217e-06, 8.153000000003796e-06, 8.652999999997357e-06, 9.124999999998717e-06, 8.665999999997454e-06, 8.083999999998481e-06, 8.611000000005586e-06, 8.138999999997287e-06, 8.582999999999508e-06, 8.153000000003796e-06, 8.569999999999411e-06, 8.638999999997787e-06, 8.652999999997357e-06, 8.153000000003796e-06, 8.138999999997287e-06, 8.152999999996857e-06, 8.638999999997787e-06, 8.610999999998648e-06, 8.624999999998217e-06, 8.137999999997814e-06, 8.624999999998217e-06, 8.625000000005156e-06, 8.111000000005086e-06, 8.054999999999868e-06, 8.139000000004226e-06, 8.639000000004726e-06, 8.125000000004656e-06, 8.110999999998147e-06, 8.624999999998217e-06, 8.638999999997787e-06, 8.139000000004226e-06, 8.624999999998217e-06, 8.709000000002576e-06, 8.638000000005253e-06, 8.624999999998217e-06, 8.624999999998217e-06, 8.624999999998217e-06, 8.638999999997787e-06, 8.138999999997287e-06, 8.624999999998217e-06, 8.138999999997287e-06]</msg>
<status status="PASS" starttime="20201112 10:15:29.684" endtime="20201112 10:15:29.689"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.673" endtime="20201112 10:15:29.690"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.697" endtime="20201112 10:15:29.699"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:29.705" endtime="20201112 10:15:29.726"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.701" endtime="20201112 10:15:29.728"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.692" endtime="20201112 10:15:29.729"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.185" endtime="20201112 10:15:29.730"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.184" endtime="20201112 10:15:29.731"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.754" endtime="20201112 10:15:29.772"></status>
</kw>
<msg timestamp="20201112 10:15:29.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:29.750" endtime="20201112 10:15:29.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:29.775" endtime="20201112 10:15:29.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.781" endtime="20201112 10:15:29.785"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.743" endtime="20201112 10:15:29.787"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.737" endtime="20201112 10:15:29.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.804" endtime="20201112 10:15:30.139"></status>
</kw>
<msg timestamp="20201112 10:15:30.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042370972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042380139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:29.801" endtime="20201112 10:15:30.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042370972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042380139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:30.148" endtime="20201112 10:15:30.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.167" endtime="20201112 10:15:30.171"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.794" endtime="20201112 10:15:30.173"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.789" endtime="20201112 10:15:30.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:30.185" level="INFO">${RESULT} = [{'time': 0.042380139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.166999999997427e-06, 'source_diff': 9.166999999997427e-06}, {'time': 0.042393958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:30.176" endtime="20201112 10:15:30.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:30.217" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:30.187" endtime="20201112 10:15:30.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.228" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 10:15:30.225" endtime="20201112 10:15:30.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.233" level="INFO">VALUE: [9.166999999997427e-06, 9.083000000000008e-06, 1.0083000000001008e-05, 9.624999999999218e-06, 9.110999999999148e-06, 9.680999999997497e-06, 9.124999999998717e-06, 9.624999999999218e-06, 9.152999999997857e-06, 9.124999999998717e-06, 9.637999999999314e-06, 9.139000000005226e-06, 9.124999999998717e-06, 9.139000000005226e-06, 9.624999999999218e-06, 9.638999999998787e-06, 9.638999999998787e-06, 9.667000000004866e-06, 9.138999999998287e-06, 9.624999999999218e-06, 9.152999999997857e-06, 9.124999999998717e-06, 9.152999999997857e-06, 1.0124999999999718e-05, 9.125000000005656e-06, 9.110999999999148e-06, 9.083000000000008e-06, 9.638999999998787e-06, 9.610999999999648e-06, 9.610999999999648e-06, 9.639000000005726e-06, 9.153000000004796e-06, 9.638999999998787e-06, 9.597000000000078e-06, 9.096999999999578e-06, 9.624999999999218e-06, 9.096999999999578e-06, 9.583999999999981e-06, 9.624999999999218e-06, 9.139000000005226e-06, 9.583000000000508e-06, 9.165999999997954e-06, 9.638999999998787e-06, 9.611999999999121e-06, 9.652999999998357e-06, 9.624999999999218e-06, 9.153000000004796e-06, 9.639000000005726e-06, 9.069000000000438e-06, 9.638999999998787e-06]</msg>
<status status="PASS" starttime="20201112 10:15:30.230" endtime="20201112 10:15:30.234"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.218" endtime="20201112 10:15:30.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.242" endtime="20201112 10:15:30.245"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:30.251" endtime="20201112 10:15:30.272"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.246" endtime="20201112 10:15:30.274"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.238" endtime="20201112 10:15:30.275"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.733" endtime="20201112 10:15:30.276"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.732" endtime="20201112 10:15:30.276"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.299" endtime="20201112 10:15:30.316"></status>
</kw>
<msg timestamp="20201112 10:15:30.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:30.295" endtime="20201112 10:15:30.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:30.320" endtime="20201112 10:15:30.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.326" endtime="20201112 10:15:30.330"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.288" endtime="20201112 10:15:30.331"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.283" endtime="20201112 10:15:30.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.349" endtime="20201112 10:15:30.684"></status>
</kw>
<msg timestamp="20201112 10:15:30.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041539472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041550083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:30.346" endtime="20201112 10:15:30.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041539472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041550083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:30.693" endtime="20201112 10:15:30.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.712" endtime="20201112 10:15:30.716"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.339" endtime="20201112 10:15:30.717"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.334" endtime="20201112 10:15:30.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:30.729" level="INFO">${RESULT} = [{'time': 0.041550083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0611000000000648e-05, 'source_diff': 1.0611000000000648e-05}, {'time': 0.041567222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:30.721" endtime="20201112 10:15:30.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:30.762" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:30.732" endtime="20201112 10:15:30.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.774" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 10:15:30.771" endtime="20201112 10:15:30.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.780" level="INFO">VALUE: [1.0611000000000648e-05, 1.1111000000001148e-05, 1.0124999999999718e-05, 1.0166999999998427e-05, 1.0570000000001412e-05, 1.0111000000000148e-05, 1.0638999999999788e-05, 1.0625000000000218e-05, 1.0625000000000218e-05, 1.0638000000000314e-05, 1.0653000000006296e-05, 1.0611000000000648e-05, 1.0638999999999788e-05, 1.0625000000000218e-05, 1.0625000000000218e-05, 1.0083000000001008e-05, 1.0152999999998857e-05, 1.0638999999999788e-05, 1.0638999999999788e-05, 1.0625000000000218e-05, 1.0111000000000148e-05, 1.0151999999999384e-05, 1.0638999999999788e-05, 1.0625000000000218e-05, 1.0638000000000314e-05, 1.0124999999999718e-05, 1.0638999999999788e-05, 1.0138999999999287e-05, 1.0610999999993709e-05, 1.0139000000006226e-05, 1.0639000000006726e-05, 1.0638999999999788e-05, 1.1139000000000288e-05, 1.0625000000000218e-05, 1.0124999999999718e-05, 1.0611000000000648e-05, 1.0139000000006226e-05, 1.0651999999999884e-05, 1.0625000000000218e-05, 1.0693999999998594e-05, 1.0139000000006226e-05, 1.0625000000000218e-05, 1.1124999999993779e-05, 1.0612000000000121e-05, 1.0097000000000578e-05, 1.0638999999999788e-05, 1.0638999999999788e-05, 1.0638000000000314e-05, 1.0138999999999287e-05, 1.0625000000000218e-05]</msg>
<status status="PASS" starttime="20201112 10:15:30.777" endtime="20201112 10:15:30.781"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.764" endtime="20201112 10:15:30.783"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.789" endtime="20201112 10:15:30.792"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:30.797" endtime="20201112 10:15:30.819"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.793" endtime="20201112 10:15:30.821"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.785" endtime="20201112 10:15:30.822"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.278" endtime="20201112 10:15:30.823"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.277" endtime="20201112 10:15:30.823"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.845" endtime="20201112 10:15:30.863"></status>
</kw>
<msg timestamp="20201112 10:15:30.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:30.842" endtime="20201112 10:15:30.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:30.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:30.867" endtime="20201112 10:15:30.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.873" endtime="20201112 10:15:30.876"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.835" endtime="20201112 10:15:30.878"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.829" endtime="20201112 10:15:30.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:30.896" endtime="20201112 10:15:31.230"></status>
</kw>
<msg timestamp="20201112 10:15:31.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04163575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041646889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:30.893" endtime="20201112 10:15:31.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04163575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041646889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:31.240" endtime="20201112 10:15:31.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.259" endtime="20201112 10:15:31.264"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.885" endtime="20201112 10:15:31.266"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.881" endtime="20201112 10:15:31.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:31.278" level="INFO">${RESULT} = [{'time': 0.041646889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1139000000000288e-05, 'source_diff': 1.1139000000000288e-05}, {'time': 0.041668861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:31.269" endtime="20201112 10:15:31.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:31.310" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:31.280" endtime="20201112 10:15:31.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.321" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 10:15:31.318" endtime="20201112 10:15:31.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.326" level="INFO">VALUE: [1.1139000000000288e-05, 1.1666999999999927e-05, 1.1625000000001218e-05, 1.1639000000000788e-05, 1.1625000000001218e-05, 1.2139000000001288e-05, 1.1611000000001648e-05, 1.2097000000002578e-05, 1.1598000000001552e-05, 1.1125000000000718e-05, 1.1097000000001578e-05, 1.2084000000002482e-05, 1.1125000000000718e-05, 1.1139000000000288e-05, 1.1139000000000288e-05, 1.1625000000001218e-05, 1.1139000000000288e-05, 1.1639000000000788e-05, 1.1139000000000288e-05, 1.1152999999999857e-05, 1.1125000000000718e-05, 1.1125000000000718e-05, 1.1610999999994709e-05, 1.1193999999999094e-05, 1.1612000000001121e-05, 1.1125000000000718e-05, 1.1111000000001148e-05, 1.1611000000001648e-05, 1.1624999999994279e-05, 1.1110999999994209e-05, 1.1611000000001648e-05, 1.1111000000001148e-05, 1.1152000000000384e-05, 1.1111000000001148e-05, 1.1639000000000788e-05, 1.1055000000002868e-05, 1.1639000000000788e-05, 1.1639000000000788e-05, 1.1166999999999427e-05, 1.2125000000001718e-05, 1.1152999999999857e-05, 1.1125000000000718e-05, 1.1653000000000358e-05, 1.1624999999994279e-05, 1.1680999999999497e-05, 1.1653000000000358e-05, 1.1707999999999164e-05, 1.1583999999995043e-05, 1.1639000000000788e-05, 1.1111000000001148e-05]</msg>
<status status="PASS" starttime="20201112 10:15:31.323" endtime="20201112 10:15:31.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.312" endtime="20201112 10:15:31.329"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.336" endtime="20201112 10:15:31.340"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:31.345" endtime="20201112 10:15:31.367"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.341" endtime="20201112 10:15:31.368"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.331" endtime="20201112 10:15:31.370"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.825" endtime="20201112 10:15:31.371"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:30.824" endtime="20201112 10:15:31.371"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.393" endtime="20201112 10:15:31.412"></status>
</kw>
<msg timestamp="20201112 10:15:31.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:31.390" endtime="20201112 10:15:31.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:31.415" endtime="20201112 10:15:31.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.421" endtime="20201112 10:15:31.425"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.383" endtime="20201112 10:15:31.426"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.377" endtime="20201112 10:15:31.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.444" endtime="20201112 10:15:31.778"></status>
</kw>
<msg timestamp="20201112 10:15:31.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041579833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041592486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:31.441" endtime="20201112 10:15:31.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041579833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041592486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:31.787" endtime="20201112 10:15:31.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.806" endtime="20201112 10:15:31.810"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.434" endtime="20201112 10:15:31.812"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.429" endtime="20201112 10:15:31.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:31.824" level="INFO">${RESULT} = [{'time': 0.041592486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2653000000001358e-05, 'source_diff': 1.2653000000001358e-05}, {'time': 0.041616208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:31.815" endtime="20201112 10:15:31.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:31.855" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:31.826" endtime="20201112 10:15:31.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.866" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 10:15:31.863" endtime="20201112 10:15:31.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.871" level="INFO">VALUE: [1.2653000000001358e-05, 1.2139000000001288e-05, 1.2069000000003438e-05, 1.2165999999994015e-05, 1.2138000000001814e-05, 1.2624999999995279e-05, 1.3139000000002288e-05, 1.2125000000001718e-05, 1.2125000000001718e-05, 1.2139000000001288e-05, 1.3124999999995779e-05, 1.2639000000001788e-05, 1.2570000000003412e-05, 1.2639000000001788e-05, 1.2124999999994779e-05, 1.2153000000000858e-05, 1.2625000000002218e-05, 1.2694000000000594e-05, 1.2639000000001788e-05, 1.2125000000001718e-05, 1.2152999999993919e-05, 1.2653000000001358e-05, 1.2125000000001718e-05, 1.2667000000000928e-05, 1.2625000000002218e-05, 1.2624999999995279e-05, 1.2153000000000858e-05, 1.2653000000001358e-05, 1.2653000000001358e-05, 1.2637999999995375e-05, 1.2153000000000858e-05, 1.2639000000001788e-05, 1.2152000000001384e-05, 1.2111000000002148e-05, 1.2111000000002148e-05, 1.2125000000001718e-05, 1.2653000000001358e-05, 1.2139000000001288e-05, 1.2653000000001358e-05, 1.2639000000001788e-05, 1.2583000000003508e-05, 1.2639000000001788e-05, 1.2125000000001718e-05, 1.2125000000001718e-05, 1.2624999999995279e-05, 1.2652999999994419e-05, 1.3111000000003148e-05, 1.2625000000002218e-05, 1.2624999999995279e-05, 1.2639000000001788e-05]</msg>
<status status="PASS" starttime="20201112 10:15:31.868" endtime="20201112 10:15:31.872"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.857" endtime="20201112 10:15:31.874"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.880" endtime="20201112 10:15:31.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:31.888" endtime="20201112 10:15:31.910"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.884" endtime="20201112 10:15:31.912"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.876" endtime="20201112 10:15:31.913"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.373" endtime="20201112 10:15:31.914"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.372" endtime="20201112 10:15:31.914"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.931" endtime="20201112 10:15:31.947"></status>
</kw>
<msg timestamp="20201112 10:15:31.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:31.929" endtime="20201112 10:15:31.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:31.948" endtime="20201112 10:15:31.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.951" endtime="20201112 10:15:31.953"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.925" endtime="20201112 10:15:31.954"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.920" endtime="20201112 10:15:31.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.962" endtime="20201112 10:15:32.286"></status>
</kw>
<msg timestamp="20201112 10:15:32.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034393569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034406681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:31.961" endtime="20201112 10:15:32.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034393569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034406681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:32.295" endtime="20201112 10:15:32.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.314" endtime="20201112 10:15:32.318"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.957" endtime="20201112 10:15:32.320"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.955" endtime="20201112 10:15:32.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:32.332" level="INFO">${RESULT} = [{'time': 0.034406681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3112000000002622e-05, 'source_diff': 1.3112000000002622e-05}, {'time': 0.034423611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:32.323" endtime="20201112 10:15:32.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:32.363" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:32.334" endtime="20201112 10:15:32.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.374" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 10:15:32.371" endtime="20201112 10:15:32.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.379" level="INFO">VALUE: [1.3112000000002622e-05, 1.3639000000002788e-05, 1.3152000000002384e-05, 1.3639000000002788e-05, 1.3083999999996543e-05, 1.4138999999996349e-05, 1.3152999999994919e-05, 1.3625000000003218e-05, 1.30689999999975e-05, 1.409699999999764e-05, 1.3625000000003218e-05, 1.3124999999995779e-05, 1.3625000000003218e-05, 1.3125000000002718e-05, 1.3639000000002788e-05, 1.4125000000003718e-05, 1.3153000000001858e-05, 1.358299999999757e-05, 1.3653000000002358e-05, 1.3639000000002788e-05, 1.3596999999997139e-05, 1.3597000000004078e-05, 1.3568999999998e-05, 1.3653000000002358e-05, 1.3125000000002718e-05, 1.3111000000003148e-05, 1.3639000000002788e-05, 1.3653000000002358e-05, 1.3624999999996279e-05, 1.3625000000003218e-05, 1.3153000000001858e-05, 1.3638999999995849e-05, 1.4138000000003814e-05, 1.3611000000003648e-05, 1.3625000000003218e-05, 1.4152000000003384e-05, 1.3110999999996209e-05, 1.3124999999995779e-05, 1.3125000000002718e-05, 1.358299999999757e-05, 1.3639000000002788e-05, 1.3638999999995849e-05, 1.3139000000002288e-05, 1.3652999999995419e-05, 1.4125000000003718e-05, 1.3111000000003148e-05, 1.3138000000002814e-05, 1.3625000000003218e-05, 1.3111000000003148e-05, 1.4195000000001567e-05]</msg>
<status status="PASS" starttime="20201112 10:15:32.376" endtime="20201112 10:15:32.380"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.365" endtime="20201112 10:15:32.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.388" endtime="20201112 10:15:32.391"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:32.397" endtime="20201112 10:15:32.418"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.392" endtime="20201112 10:15:32.420"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.384" endtime="20201112 10:15:32.421"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.916" endtime="20201112 10:15:32.422"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.915" endtime="20201112 10:15:32.422"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.445" endtime="20201112 10:15:32.464"></status>
</kw>
<msg timestamp="20201112 10:15:32.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:32.441" endtime="20201112 10:15:32.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:32.467" endtime="20201112 10:15:32.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.473" endtime="20201112 10:15:32.477"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.434" endtime="20201112 10:15:32.479"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.429" endtime="20201112 10:15:32.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.497" endtime="20201112 10:15:32.830"></status>
</kw>
<msg timestamp="20201112 10:15:32.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042862125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042876708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:32.493" endtime="20201112 10:15:32.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042862125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042876708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:32.840" endtime="20201112 10:15:32.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.859" endtime="20201112 10:15:32.863"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.486" endtime="20201112 10:15:32.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.482" endtime="20201112 10:15:32.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:32.876" level="INFO">${RESULT} = [{'time': 0.042876708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.458299999999857e-05, 'source_diff': 1.458299999999857e-05}, {'time': 0.042900667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:32.867" endtime="20201112 10:15:32.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:32.909" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:32.878" endtime="20201112 10:15:32.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.920" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 10:15:32.918" endtime="20201112 10:15:32.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.925" level="INFO">VALUE: [1.458299999999857e-05, 1.4611000000004648e-05, 1.405499999999893e-05, 1.5125000000004718e-05, 1.4624999999997279e-05, 1.4611000000004648e-05, 1.4625000000004218e-05, 1.4637999999997375e-05, 1.4666999999995989e-05, 1.5124999999997779e-05, 1.5124999999997779e-05, 1.458299999999857e-05, 1.4139000000003288e-05, 1.4624999999997279e-05, 1.4124999999996779e-05, 1.4611000000004648e-05, 1.4111000000004148e-05, 1.4624999999997279e-05, 1.4597000000005078e-05, 1.5153000000003858e-05, 1.4624999999997279e-05, 1.4695000000002068e-05, 1.4138999999996349e-05, 1.461099999999771e-05, 1.4638999999996849e-05, 1.4638999999996849e-05, 1.4179999999995585e-05, 1.4625000000004218e-05, 1.4180999999995059e-05, 1.4125000000003718e-05, 1.4638999999996849e-05, 1.5097000000005578e-05, 1.4625000000004218e-05, 1.4125000000003718e-05, 1.4639000000003788e-05, 1.4110999999997209e-05, 1.4166999999995489e-05, 1.4124999999996779e-05, 1.4637999999997375e-05, 1.4639000000003788e-05, 1.4125000000003718e-05, 1.4680000000003024e-05, 1.4638999999996849e-05, 1.4125000000003718e-05, 1.4166999999995489e-05, 1.4152999999995919e-05, 1.4681000000002498e-05, 1.5124999999997779e-05, 1.4195000000001567e-05, 1.4069999999997973e-05]</msg>
<status status="PASS" starttime="20201112 10:15:32.922" endtime="20201112 10:15:32.927"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.911" endtime="20201112 10:15:32.928"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.935" endtime="20201112 10:15:32.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:32.943" endtime="20201112 10:15:32.965"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.939" endtime="20201112 10:15:32.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.930" endtime="20201112 10:15:32.968"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.424" endtime="20201112 10:15:32.969"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.423" endtime="20201112 10:15:32.969"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.993" endtime="20201112 10:15:33.012"></status>
</kw>
<msg timestamp="20201112 10:15:33.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:32.989" endtime="20201112 10:15:33.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:33.015" endtime="20201112 10:15:33.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.021" endtime="20201112 10:15:33.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.982" endtime="20201112 10:15:33.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.976" endtime="20201112 10:15:33.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.046" endtime="20201112 10:15:33.382"></status>
</kw>
<msg timestamp="20201112 10:15:33.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043287792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043302917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:33.043" endtime="20201112 10:15:33.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043287792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043302917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:33.391" endtime="20201112 10:15:33.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.410" endtime="20201112 10:15:33.414"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.034" endtime="20201112 10:15:33.415"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.029" endtime="20201112 10:15:33.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:33.427" level="INFO">${RESULT} = [{'time': 0.043302917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5125000000004718e-05, 'source_diff': 1.5125000000004718e-05}, {'time': 0.043321764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:33.418" endtime="20201112 10:15:33.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:33.458" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:33.429" endtime="20201112 10:15:33.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.469" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 10:15:33.467" endtime="20201112 10:15:33.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.474" level="INFO">VALUE: [1.5125000000004718e-05, 1.5152999999996919e-05, 1.562499999999828e-05, 1.612499999999878e-05, 1.5125000000004718e-05, 1.5138999999997349e-05, 1.5125000000004718e-05, 1.562499999999828e-05, 1.511099999999821e-05, 1.563899999999785e-05, 1.563899999999785e-05, 1.5124999999997779e-05, 1.5139000000004288e-05, 1.563899999999785e-05, 1.5124999999997779e-05, 1.5153000000003858e-05, 1.561099999999871e-05, 1.5125000000004718e-05, 1.5124999999997779e-05, 1.5124999999997779e-05, 1.5138999999997349e-05, 1.6153000000004858e-05, 1.5124999999997779e-05, 1.5124999999997779e-05, 1.563899999999785e-05, 1.5569e-05, 1.565299999999742e-05, 1.562499999999828e-05, 1.5153000000003858e-05, 1.568099999999656e-05, 1.5138999999997349e-05, 1.615299999999792e-05, 1.609699999999964e-05, 1.5625000000005218e-05, 1.562499999999828e-05, 1.5124999999997779e-05, 1.5167000000003428e-05, 1.5138999999997349e-05, 1.5124999999997779e-05, 1.5653000000004358e-05, 1.5139000000004288e-05, 1.5151999999997445e-05, 1.566699999999699e-05, 1.5680000000004024e-05, 1.561099999999871e-05, 1.562499999999828e-05, 1.5125000000004718e-05, 1.5084000000005482e-05, 1.565299999999742e-05, 1.5139000000004288e-05]</msg>
<status status="PASS" starttime="20201112 10:15:33.471" endtime="20201112 10:15:33.481"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.460" endtime="20201112 10:15:33.483"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.489" endtime="20201112 10:15:33.492"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:33.498" endtime="20201112 10:15:33.519"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.493" endtime="20201112 10:15:33.521"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.485" endtime="20201112 10:15:33.522"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.971" endtime="20201112 10:15:33.523"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.970" endtime="20201112 10:15:33.523"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.546" endtime="20201112 10:15:33.564"></status>
</kw>
<msg timestamp="20201112 10:15:33.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:33.542" endtime="20201112 10:15:33.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:33.568" endtime="20201112 10:15:33.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.574" endtime="20201112 10:15:33.578"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.535" endtime="20201112 10:15:33.579"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.530" endtime="20201112 10:15:33.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.597" endtime="20201112 10:15:33.931"></status>
</kw>
<msg timestamp="20201112 10:15:33.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041941125, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:15:33.594" endtime="20201112 10:15:33.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041941125, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:15:33.941" endtime="20201112 10:15:33.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.960" endtime="20201112 10:15:33.964"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.587" endtime="20201112 10:15:33.965"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.582" endtime="20201112 10:15:33.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:33.977" level="INFO">${RESULT} = [{'time': 0.041941125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6125000000005718e-05, 'source_diff': 1.6125000000005718e-05}, {'time': 0.041967292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:33.968" endtime="20201112 10:15:33.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:34.009" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:33.979" endtime="20201112 10:15:34.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.020" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 10:15:34.018" endtime="20201112 10:15:34.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.026" level="INFO">VALUE: [1.6125000000005718e-05, 1.6639000000005788e-05, 1.663899999999885e-05, 1.6637999999999376e-05, 1.662499999999928e-05, 1.612499999999878e-05, 1.6637999999999376e-05, 1.6137999999998875e-05, 1.663899999999885e-05, 1.711100000000021e-05, 1.6151999999998445e-05, 1.663899999999885e-05, 1.663899999999885e-05, 1.6195000000003568e-05, 1.669499999999713e-05, 1.663899999999885e-05, 1.662499999999928e-05, 1.662499999999928e-05, 1.6221999999996295e-05, 1.6652000000005884e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.662499999999928e-05, 1.613899999999835e-05, 1.6083999999999543e-05, 1.6139000000005288e-05, 1.663899999999885e-05, 1.612499999999878e-05, 1.662499999999928e-05, 1.6125000000005718e-05, 1.663899999999885e-05, 1.662499999999928e-05, 1.6138000000005814e-05, 1.665299999999842e-05, 1.6151999999998445e-05, 1.663899999999885e-05, 1.663899999999885e-05, 1.662499999999928e-05, 1.613899999999835e-05, 1.665299999999842e-05, 1.6651999999998945e-05, 1.613899999999835e-05, 1.6139000000005288e-05, 1.6639000000005788e-05, 1.711100000000021e-05, 1.611099999999921e-05, 1.663899999999885e-05, 1.609699999999964e-05, 1.663899999999885e-05, 1.662499999999928e-05]</msg>
<status status="PASS" starttime="20201112 10:15:34.022" endtime="20201112 10:15:34.027"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.011" endtime="20201112 10:15:34.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.035" endtime="20201112 10:15:34.038"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:34.043" endtime="20201112 10:15:34.065"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.039" endtime="20201112 10:15:34.067"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.031" endtime="20201112 10:15:34.068"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.525" endtime="20201112 10:15:34.069"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.524" endtime="20201112 10:15:34.069"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.092" endtime="20201112 10:15:34.111"></status>
</kw>
<msg timestamp="20201112 10:15:34.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:34.088" endtime="20201112 10:15:34.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:34.114" endtime="20201112 10:15:34.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.120" endtime="20201112 10:15:34.124"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.081" endtime="20201112 10:15:34.125"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.075" endtime="20201112 10:15:34.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.143" endtime="20201112 10:15:34.477"></status>
</kw>
<msg timestamp="20201112 10:15:34.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041837722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041855403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:34.140" endtime="20201112 10:15:34.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041837722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041855403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:34.487" endtime="20201112 10:15:34.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.506" endtime="20201112 10:15:34.509"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.133" endtime="20201112 10:15:34.511"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.128" endtime="20201112 10:15:34.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:34.523" level="INFO">${RESULT} = [{'time': 0.041855403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.768099999999856e-05, 'source_diff': 1.768099999999856e-05}, {'time': 0.041887653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:34.514" endtime="20201112 10:15:34.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:34.554" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:34.525" endtime="20201112 10:15:34.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.565" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 10:15:34.562" endtime="20201112 10:15:34.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.570" level="INFO">VALUE: [1.768099999999856e-05, 1.7083999999993604e-05, 1.7612000000000183e-05, 1.7139000000006288e-05, 1.763899999999985e-05, 1.7139000000006288e-05, 1.713899999999935e-05, 1.713899999999935e-05, 1.763899999999985e-05, 1.712499999999978e-05, 1.818099999999906e-05, 1.761100000000071e-05, 1.711100000000021e-05, 1.762499999999334e-05, 1.713899999999935e-05, 1.763899999999985e-05, 2.27770000000016e-05, 1.712499999999978e-05, 1.713899999999935e-05, 1.7139000000006288e-05, 1.761100000000071e-05, 1.711100000000021e-05, 1.712499999999978e-05, 1.712499999999978e-05, 1.7137999999999876e-05, 1.713899999999935e-05, 1.713899999999935e-05, 1.7179999999998585e-05, 1.762500000000028e-05, 1.7179999999998585e-05, 1.763899999999985e-05, 1.762500000000028e-05, 1.715299999999892e-05, 1.7151999999999445e-05, 1.715299999999892e-05, 1.716699999999849e-05, 1.713899999999935e-05, 1.715299999999892e-05, 1.763899999999985e-05, 1.713899999999935e-05, 1.7056000000001403e-05, 1.815299999999992e-05, 1.761100000000071e-05, 1.766699999999899e-05, 1.711100000000021e-05, 1.762500000000028e-05, 1.762500000000028e-05, 1.712499999999978e-05, 1.762500000000028e-05, 1.765299999999942e-05]</msg>
<status status="PASS" starttime="20201112 10:15:34.567" endtime="20201112 10:15:34.572"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.556" endtime="20201112 10:15:34.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.580" endtime="20201112 10:15:34.583"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:34.588" endtime="20201112 10:15:34.610"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.584" endtime="20201112 10:15:34.611"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.575" endtime="20201112 10:15:34.613"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.071" endtime="20201112 10:15:34.614"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.070" endtime="20201112 10:15:34.614"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.636" endtime="20201112 10:15:34.654"></status>
</kw>
<msg timestamp="20201112 10:15:34.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:34.633" endtime="20201112 10:15:34.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:34.657" endtime="20201112 10:15:34.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.664" endtime="20201112 10:15:34.667"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.626" endtime="20201112 10:15:34.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.620" endtime="20201112 10:15:34.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.687" endtime="20201112 10:15:35.023"></status>
</kw>
<msg timestamp="20201112 10:15:35.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041388347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0414065, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:34.684" endtime="20201112 10:15:35.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041388347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0414065, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:15:35.032" endtime="20201112 10:15:35.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.052" endtime="20201112 10:15:35.057"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.676" endtime="20201112 10:15:35.059"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.672" endtime="20201112 10:15:35.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:35.071" level="INFO">${RESULT} = [{'time': 0.0414065, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.815299999999992e-05, 'source_diff': 1.815299999999992e-05}, {'time': 0.041433819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:35.062" endtime="20201112 10:15:35.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:35.104" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:35.073" endtime="20201112 10:15:35.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.115" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 10:15:35.113" endtime="20201112 10:15:35.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.120" level="INFO">VALUE: [1.815299999999992e-05, 1.8207999999998725e-05, 1.863900000000085e-05, 1.8638000000001376e-05, 1.815299999999992e-05, 1.815299999999992e-05, 1.812500000000078e-05, 1.813900000000035e-05, 1.9180000000000585e-05, 1.8222000000005234e-05, 1.862499999999434e-05, 1.912499999999484e-05, 1.863900000000085e-05, 1.862500000000128e-05, 1.861100000000171e-05, 1.808300000000207e-05, 1.8584000000002043e-05, 1.911100000000221e-05, 1.859700000000214e-05, 1.915300000000092e-05, 1.813900000000035e-05, 1.865300000000042e-05, 1.862499999999434e-05, 1.813899999999341e-05, 1.863900000000085e-05, 1.8193999999999155e-05, 1.862499999999434e-05, 1.813900000000035e-05, 1.861100000000171e-05, 1.815299999999992e-05, 1.913899999999441e-05, 1.862499999999434e-05, 1.811100000000121e-05, 1.818099999999906e-05, 1.8180000000006524e-05, 1.863900000000085e-05, 1.85969999999952e-05, 1.863900000000085e-05, 1.8652000000000946e-05, 1.811100000000121e-05, 1.909700000000264e-05, 1.813900000000035e-05, 1.812500000000078e-05, 1.863900000000085e-05, 1.812500000000078e-05, 1.862500000000128e-05, 1.862500000000128e-05, 1.863900000000085e-05, 1.862499999999434e-05, 1.8179999999999585e-05]</msg>
<status status="PASS" starttime="20201112 10:15:35.117" endtime="20201112 10:15:35.122"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.106" endtime="20201112 10:15:35.124"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.130" endtime="20201112 10:15:35.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:35.138" endtime="20201112 10:15:35.159"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.134" endtime="20201112 10:15:35.161"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.125" endtime="20201112 10:15:35.163"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.616" endtime="20201112 10:15:35.163"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.615" endtime="20201112 10:15:35.164"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.186" endtime="20201112 10:15:35.204"></status>
</kw>
<msg timestamp="20201112 10:15:35.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:35.183" endtime="20201112 10:15:35.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:35.208" endtime="20201112 10:15:35.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.214" endtime="20201112 10:15:35.218"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.176" endtime="20201112 10:15:35.219"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.170" endtime="20201112 10:15:35.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.237" endtime="20201112 10:15:35.554"></status>
</kw>
<msg timestamp="20201112 10:15:35.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041435792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041454931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:35.234" endtime="20201112 10:15:35.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041435792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041454931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:35.563" endtime="20201112 10:15:35.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.582" endtime="20201112 10:15:35.585"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.227" endtime="20201112 10:15:35.587"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.222" endtime="20201112 10:15:35.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:35.599" level="INFO">${RESULT} = [{'time': 0.041454931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.913900000000135e-05, 'source_diff': 1.913900000000135e-05}, {'time': 0.041478333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:35.590" endtime="20201112 10:15:35.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:35.631" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:35.601" endtime="20201112 10:15:35.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.642" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 10:15:35.640" endtime="20201112 10:15:35.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.647" level="INFO">VALUE: [1.913900000000135e-05, 2.013900000000235e-05, 1.912500000000178e-05, 1.912500000000178e-05, 1.913900000000135e-05, 1.962500000000228e-05, 1.963899999999491e-05, 2.013900000000235e-05, 1.962500000000228e-05, 1.963900000000185e-05, 1.962500000000228e-05, 1.959700000000314e-05, 1.965300000000142e-05, 2.012499999999584e-05, 1.912500000000178e-05, 1.915300000000092e-05, 1.963899999999491e-05, 1.912500000000178e-05, 1.9152000000001446e-05, 1.909700000000264e-05, 1.911099999999527e-05, 1.912500000000178e-05, 1.9651999999995007e-05, 1.9151999999994507e-05, 1.962500000000228e-05, 1.962499999999534e-05, 1.962500000000228e-05, 1.965300000000142e-05, 1.963900000000185e-05, 1.962500000000228e-05, 1.962500000000228e-05, 1.961099999999577e-05, 1.912500000000178e-05, 1.968100000000056e-05, 1.963900000000185e-05, 1.912500000000178e-05, 1.963899999999491e-05, 1.961100000000271e-05, 1.9637999999995437e-05, 1.913900000000135e-05, 1.912500000000178e-05, 1.912500000000178e-05, 1.912500000000178e-05, 1.9166000000001016e-05, 1.968100000000056e-05, 1.9652000000001946e-05, 1.9638000000002376e-05, 1.962500000000228e-05, 1.962499999999534e-05, 1.913900000000135e-05]</msg>
<status status="PASS" starttime="20201112 10:15:35.644" endtime="20201112 10:15:35.649"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.633" endtime="20201112 10:15:35.650"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.657" endtime="20201112 10:15:35.659"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:35.665" endtime="20201112 10:15:35.686"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.661" endtime="20201112 10:15:35.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.652" endtime="20201112 10:15:35.689"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.166" endtime="20201112 10:15:35.690"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.165" endtime="20201112 10:15:35.691"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.713" endtime="20201112 10:15:35.732"></status>
</kw>
<msg timestamp="20201112 10:15:35.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:35.710" endtime="20201112 10:15:35.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:35.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:35.735" endtime="20201112 10:15:35.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.741" endtime="20201112 10:15:35.745"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.703" endtime="20201112 10:15:35.747"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.697" endtime="20201112 10:15:35.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:35.765" endtime="20201112 10:15:36.100"></status>
</kw>
<msg timestamp="20201112 10:15:36.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041967486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041987597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:35.761" endtime="20201112 10:15:36.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041967486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041987597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:36.109" endtime="20201112 10:15:36.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.128" endtime="20201112 10:15:36.132"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.754" endtime="20201112 10:15:36.134"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.749" endtime="20201112 10:15:36.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:36.145" level="INFO">${RESULT} = [{'time': 0.041987597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.011100000000321e-05, 'source_diff': 2.011100000000321e-05}, {'time': 0.042020875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:36.136" endtime="20201112 10:15:36.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:36.177" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:36.147" endtime="20201112 10:15:36.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.188" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 10:15:36.186" endtime="20201112 10:15:36.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.194" level="INFO">VALUE: [2.011100000000321e-05, 2.062499999999634e-05, 2.062499999999634e-05, 2.063900000000285e-05, 2.013900000000235e-05, 2.113900000000335e-05, 2.062499999999634e-05, 2.062500000000328e-05, 2.011100000000321e-05, 2.063899999999591e-05, 2.012499999999584e-05, 2.118100000000206e-05, 2.062499999999634e-05, 2.0708000000001225e-05, 2.062500000000328e-05, 2.009700000000364e-05, 2.111100000000421e-05, 2.062499999999634e-05, 2.062500000000328e-05, 2.0651999999996007e-05, 2.062500000000328e-05, 2.063900000000285e-05, 2.0680000000002086e-05, 2.062500000000328e-05, 2.065300000000242e-05, 2.016700000000149e-05, 2.061100000000371e-05, 2.013900000000235e-05, 2.013899999999541e-05, 2.018100000000106e-05, 2.062499999999634e-05, 2.013900000000235e-05, 2.063900000000285e-05, 2.061099999999677e-05, 2.062500000000328e-05, 2.062500000000328e-05, 2.062500000000328e-05, 2.013900000000235e-05, 2.115299999999598e-05, 2.063900000000285e-05, 2.063899999999591e-05, 2.013900000000235e-05, 2.068100000000156e-05, 2.063900000000285e-05, 2.0679999999995147e-05, 2.062499999999634e-05, 2.015299999999498e-05, 2.063900000000285e-05, 2.012499999999584e-05, 2.0165999999995077e-05]</msg>
<status status="PASS" starttime="20201112 10:15:36.191" endtime="20201112 10:15:36.195"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.179" endtime="20201112 10:15:36.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.203" endtime="20201112 10:15:36.206"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:36.211" endtime="20201112 10:15:36.233"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.207" endtime="20201112 10:15:36.235"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.199" endtime="20201112 10:15:36.236"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.693" endtime="20201112 10:15:36.237"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:35.692" endtime="20201112 10:15:36.237"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.260" endtime="20201112 10:15:36.279"></status>
</kw>
<msg timestamp="20201112 10:15:36.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:36.256" endtime="20201112 10:15:36.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:36.282" endtime="20201112 10:15:36.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.289" endtime="20201112 10:15:36.292"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.249" endtime="20201112 10:15:36.294"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.243" endtime="20201112 10:15:36.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.312" endtime="20201112 10:15:36.647"></status>
</kw>
<msg timestamp="20201112 10:15:36.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042244056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042266194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:36.308" endtime="20201112 10:15:36.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042244056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042266194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:36.656" endtime="20201112 10:15:36.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.675" endtime="20201112 10:15:36.679"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.301" endtime="20201112 10:15:36.681"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.297" endtime="20201112 10:15:36.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:36.693" level="INFO">${RESULT} = [{'time': 0.042266194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2137999999997937e-05, 'source_diff': 2.2137999999997937e-05}, {'time': 0.042295875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:36.684" endtime="20201112 10:15:36.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:36.725" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:36.695" endtime="20201112 10:15:36.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.736" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 10:15:36.733" endtime="20201112 10:15:36.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.741" level="INFO">VALUE: [2.2137999999997937e-05, 2.162499999999734e-05, 2.113899999999641e-05, 2.113900000000335e-05, 2.112500000000378e-05, 2.218099999999612e-05, 2.112499999999684e-05, 2.112499999999684e-05, 2.163899999999691e-05, 2.113899999999641e-05, 2.111100000000421e-05, 2.112499999999684e-05, 2.165299999999648e-05, 2.162500000000428e-05, 2.162499999999734e-05, 2.163899999999691e-05, 2.165300000000342e-05, 2.165300000000342e-05, 2.163900000000385e-05, 2.115300000000292e-05, 2.162500000000428e-05, 2.215299999999698e-05, 2.113900000000335e-05, 2.162500000000428e-05, 2.15969999999982e-05, 2.162500000000428e-05, 2.212499999999784e-05, 2.163900000000385e-05, 2.112499999999684e-05, 2.158299999999863e-05, 2.162499999999734e-05, 2.162499999999734e-05, 2.112499999999684e-05, 2.163899999999691e-05, 2.213899999999741e-05, 2.112499999999684e-05, 2.15969999999982e-05, 2.112499999999684e-05, 2.209700000000564e-05, 2.1652000000003946e-05, 2.1137999999996937e-05, 2.1637999999997437e-05, 2.1666000000003516e-05, 2.163899999999691e-05, 2.162499999999734e-05, 2.162500000000428e-05, 2.161099999999777e-05, 2.1694000000002656e-05, 2.163900000000385e-05, 2.162499999999734e-05]</msg>
<status status="PASS" starttime="20201112 10:15:36.738" endtime="20201112 10:15:36.742"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.727" endtime="20201112 10:15:36.744"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.750" endtime="20201112 10:15:36.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:36.758" endtime="20201112 10:15:36.780"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.754" endtime="20201112 10:15:36.782"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.746" endtime="20201112 10:15:36.783"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.239" endtime="20201112 10:15:36.784"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.238" endtime="20201112 10:15:36.784"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.807" endtime="20201112 10:15:36.825"></status>
</kw>
<msg timestamp="20201112 10:15:36.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:36.803" endtime="20201112 10:15:36.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:36.828" endtime="20201112 10:15:36.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.835" endtime="20201112 10:15:36.838"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.796" endtime="20201112 10:15:36.840"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.791" endtime="20201112 10:15:36.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.857" endtime="20201112 10:15:37.193"></status>
</kw>
<msg timestamp="20201112 10:15:37.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041658819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041680944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:36.854" endtime="20201112 10:15:37.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041658819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041680944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:37.203" endtime="20201112 10:15:37.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.222" endtime="20201112 10:15:37.226"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.847" endtime="20201112 10:15:37.227"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.843" endtime="20201112 10:15:37.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:37.239" level="INFO">${RESULT} = [{'time': 0.041680944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.212499999999784e-05, 'source_diff': 2.212499999999784e-05}, {'time': 0.041710944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:37.230" endtime="20201112 10:15:37.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:37.273" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:37.241" endtime="20201112 10:15:37.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.284" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 10:15:37.282" endtime="20201112 10:15:37.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.289" level="INFO">VALUE: [2.212499999999784e-05, 2.2137999999997937e-05, 2.213899999999741e-05, 2.211099999999827e-05, 2.212499999999784e-05, 2.213899999999741e-05, 2.265299999999748e-05, 2.265300000000442e-05, 2.3208000000003726e-05, 2.212499999999784e-05, 2.25969999999992e-05, 2.212499999999784e-05, 2.268099999999662e-05, 2.262499999999834e-05, 2.262499999999834e-05, 2.262499999999834e-05, 2.215300000000392e-05, 2.263900000000485e-05, 2.313899999999841e-05, 2.213900000000435e-05, 2.263900000000485e-05, 2.263900000000485e-05, 2.212500000000478e-05, 2.213900000000435e-05, 2.311099999999927e-05, 2.263900000000485e-05, 2.265300000000442e-05, 2.311099999999927e-05, 2.212499999999784e-05, 2.265299999999748e-05, 2.313899999999841e-05, 2.261099999999877e-05, 2.215300000000392e-05, 2.266700000000399e-05, 2.262499999999834e-05, 2.262499999999834e-05, 2.263899999999791e-05, 2.215299999999698e-05, 2.2584000000006044e-05, 2.2651999999998007e-05, 2.3111999999998745e-05, 2.3152000000005446e-05, 2.262499999999834e-05, 2.265299999999748e-05, 2.20969999999987e-05, 2.269499999999619e-05, 2.211099999999827e-05, 2.263900000000485e-05, 2.212500000000478e-05, 2.263900000000485e-05]</msg>
<status status="PASS" starttime="20201112 10:15:37.286" endtime="20201112 10:15:37.291"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.275" endtime="20201112 10:15:37.292"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.299" endtime="20201112 10:15:37.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:37.307" endtime="20201112 10:15:37.329"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.303" endtime="20201112 10:15:37.330"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.294" endtime="20201112 10:15:37.332"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.786" endtime="20201112 10:15:37.333"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.785" endtime="20201112 10:15:37.333"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.355" endtime="20201112 10:15:37.374"></status>
</kw>
<msg timestamp="20201112 10:15:37.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:37.352" endtime="20201112 10:15:37.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:37.378" endtime="20201112 10:15:37.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.384" endtime="20201112 10:15:37.388"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.345" endtime="20201112 10:15:37.389"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.339" endtime="20201112 10:15:37.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.407" endtime="20201112 10:15:37.744"></status>
</kw>
<msg timestamp="20201112 10:15:37.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041864292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041897722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:37.404" endtime="20201112 10:15:37.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041864292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041897722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:37.754" endtime="20201112 10:15:37.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.772" endtime="20201112 10:15:37.776"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.397" endtime="20201112 10:15:37.778"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.392" endtime="20201112 10:15:37.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:37.790" level="INFO">${RESULT} = [{'time': 0.041897722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.343000000000096e-05, 'source_diff': 3.343000000000096e-05}, {'time': 0.041944722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:37.781" endtime="20201112 10:15:37.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:37.821" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:37.792" endtime="20201112 10:15:37.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.833" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 10:15:37.830" endtime="20201112 10:15:37.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.838" level="INFO">VALUE: [3.343000000000096e-05, 3.2888999999994284e-05, 3.313900000000147e-05, 3.2750000000005e-05, 3.29579999999996e-05, 3.316700000000061e-05, 3.344400000000053e-05, 3.326399999999813e-05, 3.306900000000362e-05, 3.352799999999795e-05, 3.359700000000326e-05, 3.318100000000018e-05, 3.347299999999914e-05, 3.286100000000208e-05, 3.3012999999998405e-05, 3.3638999999995034e-05, 3.316600000000114e-05, 3.297299999999864e-05, 3.355599999999709e-05, 3.320899999999932e-05, 3.3346999999996074e-05, 3.3054999999997114e-05, 3.297200000000611e-05, 3.297199999999917e-05, 3.349999999999881e-05, 3.283300000000294e-05, 3.302799999999745e-05, 3.293000000000046e-05, 3.3096999999995824e-05, 3.348599999999924e-05, 3.3374999999995214e-05, 3.3138999999994534e-05, 3.351399999999838e-05, 3.3638999999995034e-05, 3.368100000000068e-05, 3.27779999999972e-05, 3.272199999999892e-05, 3.297199999999917e-05, 3.291600000000089e-05, 3.288900000000122e-05, 3.359700000000326e-05, 3.326399999999813e-05, 3.3138999999994534e-05, 3.355600000000403e-05, 3.284800000000199e-05, 3.330599999999684e-05, 3.349999999999881e-05, 3.305599999999659e-05, 3.349999999999881e-05, 3.3318999999996934e-05]</msg>
<status status="PASS" starttime="20201112 10:15:37.835" endtime="20201112 10:15:37.840"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.823" endtime="20201112 10:15:37.842"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.848" endtime="20201112 10:15:37.851"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:37.856" endtime="20201112 10:15:37.878"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.852" endtime="20201112 10:15:37.879"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.843" endtime="20201112 10:15:37.881"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.335" endtime="20201112 10:15:37.882"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.334" endtime="20201112 10:15:37.882"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.904" endtime="20201112 10:15:37.924"></status>
</kw>
<msg timestamp="20201112 10:15:37.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:37.901" endtime="20201112 10:15:37.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:37.927" endtime="20201112 10:15:37.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.933" endtime="20201112 10:15:37.937"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.894" endtime="20201112 10:15:37.939"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.888" endtime="20201112 10:15:37.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.956" endtime="20201112 10:15:38.289"></status>
</kw>
<msg timestamp="20201112 10:15:38.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041683583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041717806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:37.953" endtime="20201112 10:15:38.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041683583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041717806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:38.299" endtime="20201112 10:15:38.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.318" endtime="20201112 10:15:38.322"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.946" endtime="20201112 10:15:38.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.941" endtime="20201112 10:15:38.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:38.335" level="INFO">${RESULT} = [{'time': 0.041717806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.422299999999989e-05, 'source_diff': 3.422299999999989e-05}, {'time': 0.041754806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:38.326" endtime="20201112 10:15:38.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:38.366" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:38.337" endtime="20201112 10:15:38.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.377" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 10:15:38.375" endtime="20201112 10:15:38.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.382" level="INFO">VALUE: [3.422299999999989e-05, 3.436199999999612e-05, 3.390200000000232e-05, 3.461100000000383e-05, 3.380599999999734e-05, 3.391600000000189e-05, 3.413799999999606e-05, 3.3818999999997434e-05, 3.37779999999982e-05, 3.3790999999998295e-05, 3.3818999999997434e-05, 3.438900000000272e-05, 3.402799999999845e-05, 3.381900000000437e-05, 3.437500000000315e-05, 3.422200000000042e-05, 3.3804999999997865e-05, 3.404199999999802e-05, 3.4680999999994744e-05, 3.443100000000143e-05, 3.390300000000179e-05, 3.401399999999888e-05, 3.455599999999809e-05, 3.431999999999741e-05, 3.466700000000211e-05, 3.422200000000042e-05, 3.452799999999895e-05, 3.455600000000503e-05, 3.405599999999759e-05, 3.4445000000001e-05, 3.4166999999994674e-05, 3.448600000000024e-05, 3.4304999999998365e-05, 3.370800000000035e-05, 3.4110999999996394e-05, 3.444400000000153e-05, 3.438900000000272e-05, 3.401399999999888e-05, 3.424999999999956e-05, 3.444400000000153e-05, 3.448600000000024e-05, 3.377800000000514e-05, 3.467999999999527e-05, 3.459700000000426e-05, 3.455599999999809e-05, 3.393100000000093e-05, 3.423599999999999e-05, 3.379200000000471e-05, 3.372199999999992e-05, 3.444400000000153e-05]</msg>
<status status="PASS" starttime="20201112 10:15:38.379" endtime="20201112 10:15:38.385"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.368" endtime="20201112 10:15:38.387"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.393" endtime="20201112 10:15:38.396"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:38.401" endtime="20201112 10:15:38.421"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.397" endtime="20201112 10:15:38.422"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.388" endtime="20201112 10:15:38.422"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.884" endtime="20201112 10:15:38.423"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.883" endtime="20201112 10:15:38.423"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.433" endtime="20201112 10:15:38.450"></status>
</kw>
<msg timestamp="20201112 10:15:38.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:38.432" endtime="20201112 10:15:38.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:38.451" endtime="20201112 10:15:38.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.454" endtime="20201112 10:15:38.456"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.428" endtime="20201112 10:15:38.457"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.426" endtime="20201112 10:15:38.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.465" endtime="20201112 10:15:38.792"></status>
</kw>
<msg timestamp="20201112 10:15:38.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024594472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024629264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:38.464" endtime="20201112 10:15:38.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024594472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024629264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:38.801" endtime="20201112 10:15:38.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.820" endtime="20201112 10:15:38.824"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.460" endtime="20201112 10:15:38.826"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.458" endtime="20201112 10:15:38.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:38.837" level="INFO">${RESULT} = [{'time': 0.024629264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.479200000000224e-05, 'source_diff': 3.479200000000224e-05}, {'time': 0.024676292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:38.828" endtime="20201112 10:15:38.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:38.868" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:38.840" endtime="20201112 10:15:38.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.879" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 10:15:38.877" endtime="20201112 10:15:38.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.885" level="INFO">VALUE: [3.479200000000224e-05, 3.5360999999997644e-05, 3.4888999999999754e-05, 3.4847000000001044e-05, 3.473600000000049e-05, 3.534800000000102e-05, 3.518100000000218e-05, 3.5152999999999573e-05, 3.530599999999884e-05, 3.523599999999752e-05, 3.51520000000001e-05, 3.490199999999985e-05, 3.5611000000001364e-05, 3.4776999999999725e-05, 3.5360999999997644e-05, 3.552799999999995e-05, 3.473599999999702e-05, 3.476399999999963e-05, 3.5139000000000004e-05, 3.4804999999998865e-05, 3.523600000000099e-05, 3.517999999999924e-05, 3.490300000000279e-05, 3.5082999999998254e-05, 3.5082999999998254e-05, 3.531999999999841e-05, 3.493099999999846e-05, 3.572199999999845e-05, 3.551400000000038e-05, 3.5375000000000684e-05, 3.544399999999906e-05, 3.472300000000039e-05, 3.472300000000039e-05, 3.479199999999877e-05, 3.49450000000015e-05, 3.493099999999846e-05, 3.549999999999734e-05, 3.568099999999921e-05, 3.5653000000000074e-05, 3.5527000000000475e-05, 3.5569000000002654e-05, 3.476399999999963e-05, 3.555599999999909e-05, 3.498600000000074e-05, 3.5402999999999823e-05, 3.52779999999997e-05, 3.494399999999856e-05, 3.5639000000000504e-05, 3.533399999999798e-05, 3.479199999999877e-05]</msg>
<status status="PASS" starttime="20201112 10:15:38.882" endtime="20201112 10:15:38.892"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.870" endtime="20201112 10:15:38.895"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.902" endtime="20201112 10:15:38.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:38.912" endtime="20201112 10:15:38.935"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.907" endtime="20201112 10:15:38.937"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.897" endtime="20201112 10:15:38.938"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.424" endtime="20201112 10:15:38.939"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.423" endtime="20201112 10:15:38.939"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.964" endtime="20201112 10:15:38.984"></status>
</kw>
<msg timestamp="20201112 10:15:38.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:38.960" endtime="20201112 10:15:38.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:38.987" endtime="20201112 10:15:38.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.994" endtime="20201112 10:15:38.998"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.952" endtime="20201112 10:15:38.999"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.946" endtime="20201112 10:15:39.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.019" endtime="20201112 10:15:39.395"></status>
</kw>
<msg timestamp="20201112 10:15:39.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04519375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045229931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:39.016" endtime="20201112 10:15:39.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:39.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04519375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045229931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:39.405" endtime="20201112 10:15:39.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.425" endtime="20201112 10:15:39.429"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.008" endtime="20201112 10:15:39.430"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.003" endtime="20201112 10:15:39.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:39.443" level="INFO">${RESULT} = [{'time': 0.045229931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.618100000000318e-05, 'source_diff': 3.618100000000318e-05}, {'time': 0.045271931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:39.433" endtime="20201112 10:15:39.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:39.476" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:39.445" endtime="20201112 10:15:39.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:39.488" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 10:15:39.485" endtime="20201112 10:15:39.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:39.494" level="INFO">VALUE: [3.618100000000318e-05, 3.601400000000088e-05, 3.591600000000389e-05, 3.6555000000000615e-05, 3.598600000000174e-05, 3.669399999999684e-05, 3.5944999999995564e-05, 3.6055000000000115e-05, 3.590300000000379e-05, 3.6666999999997174e-05, 3.645799999999616e-05, 3.602800000000045e-05, 3.6596999999999325e-05, 3.638800000000525e-05, 3.6360999999998644e-05, 3.576400000000063e-05, 3.5846999999998574e-05, 3.579199999999977e-05, 3.651400000000138e-05, 3.655600000000009e-05, 3.605599999999959e-05, 3.584700000000551e-05, 3.606999999999916e-05, 3.6430999999996494e-05, 3.645900000000257e-05, 3.64580000000031e-05, 3.6180999999996244e-05, 3.647300000000214e-05, 3.59859999999948e-05, 3.6388999999997784e-05, 3.6096999999998824e-05, 3.6082999999999255e-05, 3.572200000000192e-05, 3.5846999999998574e-05, 3.594399999999609e-05, 3.622199999999548e-05, 3.613900000000447e-05, 3.586100000000508e-05, 3.6110999999998394e-05, 3.615300000000404e-05, 3.64580000000031e-05, 3.62780000000007e-05, 3.613900000000447e-05, 3.654200000000052e-05, 3.648600000000224e-05, 3.640300000000429e-05, 3.655600000000009e-05, 3.6388999999997784e-05, 3.652800000000095e-05, 3.634799999999855e-05]</msg>
<status status="PASS" starttime="20201112 10:15:39.490" endtime="20201112 10:15:39.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.478" endtime="20201112 10:15:39.497"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.504" endtime="20201112 10:15:39.507"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:39.513" endtime="20201112 10:15:39.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.508" endtime="20201112 10:15:39.540"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.499" endtime="20201112 10:15:39.542"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.941" endtime="20201112 10:15:39.543"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.940" endtime="20201112 10:15:39.543"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.567" endtime="20201112 10:15:39.588"></status>
</kw>
<msg timestamp="20201112 10:15:39.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:39.564" endtime="20201112 10:15:39.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:39.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:39.592" endtime="20201112 10:15:39.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.598" endtime="20201112 10:15:39.602"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.556" endtime="20201112 10:15:39.604"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.550" endtime="20201112 10:15:39.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.623" endtime="20201112 10:15:39.957"></status>
</kw>
<msg timestamp="20201112 10:15:39.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045160681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045197375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:39.619" endtime="20201112 10:15:39.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:39.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045160681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045197375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:39.966" endtime="20201112 10:15:39.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.985" endtime="20201112 10:15:39.989"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.612" endtime="20201112 10:15:39.990"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.607" endtime="20201112 10:15:39.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:40.002" level="INFO">${RESULT} = [{'time': 0.045197375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.669399999999684e-05, 'source_diff': 3.669399999999684e-05}, {'time': 0.045238389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:39.993" endtime="20201112 10:15:40.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:40.033" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:40.004" endtime="20201112 10:15:40.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:40.044" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 10:15:40.042" endtime="20201112 10:15:40.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:40.049" level="INFO">VALUE: [3.669399999999684e-05, 3.731999999999347e-05, 3.7694999999997314e-05, 3.74859999999963e-05, 3.732000000000041e-05, 3.752800000000195e-05, 3.722200000000342e-05, 3.743100000000443e-05, 3.693100000000393e-05, 3.752799999999501e-05, 3.7458999999996634e-05, 3.7166999999997674e-05, 3.7222999999995954e-05, 3.723700000000246e-05, 3.748600000000324e-05, 3.7124999999998964e-05, 3.770800000000435e-05, 3.751400000000238e-05, 3.7097000000006763e-05, 3.704200000000102e-05, 3.7068999999993746e-05, 3.6874999999998714e-05, 3.6888999999998284e-05, 3.7610999999999895e-05, 3.702799999999451e-05, 3.702800000000145e-05, 3.6916999999997424e-05, 3.690300000000479e-05, 3.6902999999997854e-05, 3.7388999999998784e-05, 3.7402999999998354e-05, 3.752799999999501e-05, 3.7138999999998534e-05, 3.7610999999999895e-05, 3.751400000000238e-05, 3.7152999999998104e-05, 3.7597000000000325e-05, 3.7305000000001365e-05, 3.715199999999863e-05, 3.6805000000000865e-05, 3.7583000000000755e-05, 3.743100000000443e-05, 3.725000000000256e-05, 3.6888999999998284e-05, 3.7360999999999644e-05, 3.6791000000001295e-05, 3.675000000000206e-05, 3.752799999999501e-05, 3.7638999999999034e-05, 3.726400000000213e-05]</msg>
<status status="PASS" starttime="20201112 10:15:40.046" endtime="20201112 10:15:40.051"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.035" endtime="20201112 10:15:40.053"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.059" endtime="20201112 10:15:40.061"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:40.067" endtime="20201112 10:15:40.088"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.063" endtime="20201112 10:15:40.090"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.054" endtime="20201112 10:15:40.092"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.545" endtime="20201112 10:15:40.092"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.544" endtime="20201112 10:15:40.093"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.117" endtime="20201112 10:15:40.136"></status>
</kw>
<msg timestamp="20201112 10:15:40.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:40.113" endtime="20201112 10:15:40.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:40.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:40.140" endtime="20201112 10:15:40.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.146" endtime="20201112 10:15:40.150"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.106" endtime="20201112 10:15:40.151"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.099" endtime="20201112 10:15:40.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.169" endtime="20201112 10:15:40.503"></status>
</kw>
<msg timestamp="20201112 10:15:40.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043052319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043090764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:40.166" endtime="20201112 10:15:40.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:40.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043052319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043090764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:40.513" endtime="20201112 10:15:40.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.532" endtime="20201112 10:15:40.535"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.159" endtime="20201112 10:15:40.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.154" endtime="20201112 10:15:40.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:40.549" level="INFO">${RESULT} = [{'time': 0.043090764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8444999999998064e-05, 'source_diff': 3.8444999999998064e-05}, {'time': 0.043132806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:40.540" endtime="20201112 10:15:40.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:40.580" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:40.551" endtime="20201112 10:15:40.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:40.591" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 10:15:40.588" endtime="20201112 10:15:40.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:40.596" level="INFO">VALUE: [3.8444999999998064e-05, 3.834800000000055e-05, 3.8402999999999354e-05, 3.847199999999773e-05, 3.8347000000001075e-05, 3.82780000000027e-05, 3.8375000000000214e-05, 3.80980000000003e-05, 3.7777000000002725e-05, 3.84580000000051e-05, 3.7833000000001005e-05, 3.8333000000001505e-05, 3.8276999999996286e-05, 3.840300000000629e-05, 3.847199999999773e-05, 3.845799999999816e-05, 3.8597000000001325e-05, 3.8625000000000465e-05, 3.817999999999877e-05, 3.808400000000073e-05, 3.772200000000392e-05, 3.802800000000245e-05, 3.847199999999773e-05, 3.8124999999999964e-05, 3.797200000000417e-05, 3.8332999999994566e-05, 3.7902999999998854e-05, 3.851400000000338e-05, 3.776400000000263e-05, 3.8361000000000645e-05, 3.811199999999987e-05, 3.804200000000202e-05, 3.8610999999993956e-05, 3.851400000000338e-05, 3.855600000000209e-05, 3.847199999999773e-05, 3.865200000000013e-05, 3.797200000000417e-05, 3.7902999999998854e-05, 3.8055000000002115e-05, 3.8583000000001755e-05, 3.7888999999999284e-05, 3.8375000000000214e-05, 3.847199999999773e-05, 3.7930999999997994e-05, 3.800000000000331e-05, 3.847199999999773e-05, 3.779200000000177e-05, 3.8625000000000465e-05, 3.843100000000543e-05]</msg>
<status status="PASS" starttime="20201112 10:15:40.593" endtime="20201112 10:15:40.598"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.582" endtime="20201112 10:15:40.599"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.606" endtime="20201112 10:15:40.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:40.614" endtime="20201112 10:15:40.635"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.609" endtime="20201112 10:15:40.637"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.601" endtime="20201112 10:15:40.638"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.095" endtime="20201112 10:15:40.639"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.094" endtime="20201112 10:15:40.639"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.662" endtime="20201112 10:15:40.681"></status>
</kw>
<msg timestamp="20201112 10:15:40.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:40.659" endtime="20201112 10:15:40.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:40.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:40.685" endtime="20201112 10:15:40.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.691" endtime="20201112 10:15:40.696"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.652" endtime="20201112 10:15:40.698"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.646" endtime="20201112 10:15:40.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:40.716" endtime="20201112 10:15:41.050"></status>
</kw>
<msg timestamp="20201112 10:15:41.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041608875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041648194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:40.712" endtime="20201112 10:15:41.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041608875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041648194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:41.059" endtime="20201112 10:15:41.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.078" endtime="20201112 10:15:41.082"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.705" endtime="20201112 10:15:41.083"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.701" endtime="20201112 10:15:41.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:41.095" level="INFO">${RESULT} = [{'time': 0.041648194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9319000000002935e-05, 'source_diff': 3.9319000000002935e-05}, {'time': 0.041702194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:41.086" endtime="20201112 10:15:41.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:41.126" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:41.097" endtime="20201112 10:15:41.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.137" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 10:15:41.135" endtime="20201112 10:15:41.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.142" level="INFO">VALUE: [3.9319000000002935e-05, 3.8846999999994636e-05, 3.9653000000000604e-05, 3.929200000000327e-05, 3.951399999999744e-05, 3.897200000000517e-05, 3.923599999999805e-05, 3.899999999999737e-05, 3.947200000000567e-05, 3.9568999999996246e-05, 3.9054999999996176e-05, 3.9389000000000784e-05, 3.905599999999565e-05, 3.9694999999999314e-05, 3.92780000000037e-05, 3.9124999999994026e-05, 3.922199999999848e-05, 3.9597000000002325e-05, 3.870900000000482e-05, 3.884799999999411e-05, 3.9430999999999494e-05, 3.890200000000038e-05, 3.875000000000406e-05, 3.9068999999995746e-05, 3.932000000000241e-05, 3.8833000000002005e-05, 3.9361000000001645e-05, 3.94859999999983e-05, 3.9319000000002935e-05, 3.9403000000000354e-05, 3.9304999999996426e-05, 3.9055000000003115e-05, 3.8916999999999424e-05, 3.949999999999787e-05, 3.920799999999891e-05, 3.9290999999996856e-05, 3.8916999999999424e-05, 3.952800000000395e-05, 3.9332999999995566e-05, 3.9026999999997036e-05, 3.870900000000482e-05, 3.87780000000032e-05, 3.897199999999823e-05, 3.8736999999997024e-05, 3.9486999999997774e-05, 3.8861000000001145e-05, 3.9416999999999924e-05, 3.9319000000002935e-05, 3.9375000000001215e-05, 3.9610999999994956e-05]</msg>
<status status="PASS" starttime="20201112 10:15:41.139" endtime="20201112 10:15:41.144"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.128" endtime="20201112 10:15:41.146"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.152" endtime="20201112 10:15:41.155"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:41.160" endtime="20201112 10:15:41.182"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.156" endtime="20201112 10:15:41.184"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.147" endtime="20201112 10:15:41.185"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.642" endtime="20201112 10:15:41.186"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:40.640" endtime="20201112 10:15:41.186"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.208" endtime="20201112 10:15:41.228"></status>
</kw>
<msg timestamp="20201112 10:15:41.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:41.205" endtime="20201112 10:15:41.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:41.232" endtime="20201112 10:15:41.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.238" endtime="20201112 10:15:41.242"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.198" endtime="20201112 10:15:41.244"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.192" endtime="20201112 10:15:41.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.264" endtime="20201112 10:15:41.598"></status>
</kw>
<msg timestamp="20201112 10:15:41.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041920292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041960931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:41.261" endtime="20201112 10:15:41.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041920292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041960931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:41.608" endtime="20201112 10:15:41.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.627" endtime="20201112 10:15:41.631"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.252" endtime="20201112 10:15:41.632"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.247" endtime="20201112 10:15:41.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:41.644" level="INFO">${RESULT} = [{'time': 0.041960931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0639000000002035e-05, 'source_diff': 4.0639000000002035e-05}, {'time': 0.042015917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:41.635" endtime="20201112 10:15:41.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:41.675" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:41.646" endtime="20201112 10:15:41.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.686" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 10:15:41.683" endtime="20201112 10:15:41.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.691" level="INFO">VALUE: [4.0639000000002035e-05, 4.0681000000000744e-05, 4.0681000000000744e-05, 3.9889000000001285e-05, 4.0319000000003935e-05, 3.9763000000005155e-05, 3.980600000000334e-05, 4.0333000000003505e-05, 4.0332999999996566e-05, 4.000000000000531e-05, 4.047199999999973e-05, 4.0139000000001535e-05, 4.0417000000000924e-05, 3.9846999999995636e-05, 3.997199999999923e-05, 3.9903000000000854e-05, 3.995799999999966e-05, 3.970799999999941e-05, 4.0611000000002895e-05, 4.0445000000000064e-05, 4.0708999999999884e-05, 4.0097000000002825e-05, 4.0097000000002825e-05, 4.001399999999794e-05, 4.0596999999996386e-05, 4.0431000000000494e-05, 4.005599999999665e-05, 4.05980000000028e-05, 4.023599999999905e-05, 4.03059999999969e-05, 4.0639000000002035e-05, 4.0526999999998536e-05, 4.068000000000127e-05, 3.972199999999898e-05, 4.0569000000004185e-05, 4.002799999999751e-05, 3.9847000000002575e-05, 3.9833000000003005e-05, 4.043000000000102e-05, 4.0568999999997246e-05, 4.047199999999973e-05, 3.9902999999993916e-05, 4.0096999999995886e-05, 4.0583000000003755e-05, 4.0139000000001535e-05, 4.029200000000427e-05, 4.033400000000298e-05, 4.0458999999999634e-05, 3.982000000000291e-05, 4.0653000000001605e-05]</msg>
<status status="PASS" starttime="20201112 10:15:41.688" endtime="20201112 10:15:41.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.677" endtime="20201112 10:15:41.694"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.701" endtime="20201112 10:15:41.703"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:41.709" endtime="20201112 10:15:41.730"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.704" endtime="20201112 10:15:41.732"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.696" endtime="20201112 10:15:41.733"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.188" endtime="20201112 10:15:41.734"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.187" endtime="20201112 10:15:41.734"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.749" endtime="20201112 10:15:41.766"></status>
</kw>
<msg timestamp="20201112 10:15:41.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:41.747" endtime="20201112 10:15:41.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:41.767" endtime="20201112 10:15:41.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.770" endtime="20201112 10:15:41.772"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.744" endtime="20201112 10:15:41.773"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.741" endtime="20201112 10:15:41.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.781" endtime="20201112 10:15:42.069"></status>
</kw>
<msg timestamp="20201112 10:15:42.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032323222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032364514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:41.779" endtime="20201112 10:15:42.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032323222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032364514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:42.073" endtime="20201112 10:15:42.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.082" endtime="20201112 10:15:42.083"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.776" endtime="20201112 10:15:42.084"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.774" endtime="20201112 10:15:42.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:42.090" level="INFO">${RESULT} = [{'time': 0.032364514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.129199999999833e-05, 'source_diff': 4.129199999999833e-05}, {'time': 0.032416528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:42.086" endtime="20201112 10:15:42.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:42.103" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:42.091" endtime="20201112 10:15:42.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.108" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 10:15:42.107" endtime="20201112 10:15:42.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.111" level="INFO">VALUE: [4.129199999999833e-05, 4.101399999999894e-05, 4.097200000000023e-05, 4.102800000000545e-05, 4.091600000000195e-05, 4.101399999999894e-05, 4.151399999999944e-05, 4.141599999999551e-05, 4.165200000000313e-05, 4.1262999999999717e-05, 4.068000000000127e-05, 4.1375000000003215e-05, 4.1097000000003825e-05, 4.1153000000002105e-05, 4.091600000000195e-05, 4.1596999999997386e-05, 4.104199999999808e-05, 4.126400000000613e-05, 4.107000000000416e-05, 4.0889000000002285e-05, 4.1652999999995666e-05, 4.1681000000001744e-05, 4.077799999999826e-05, 4.1445000000001064e-05, 4.126399999999919e-05, 4.0903000000001855e-05, 4.0847000000003575e-05, 4.1611000000003895e-05, 4.0889000000002285e-05, 4.124999999999962e-05, 4.16660000000027e-05, 4.1318999999997996e-05, 4.1554999999998676e-05, 4.16939999999949e-05, 4.070800000000041e-05, 4.1054999999998176e-05, 4.116599999999526e-05, 4.122200000000048e-05, 4.09859999999998e-05, 4.1554999999998676e-05, 4.0903000000001855e-05, 4.126399999999919e-05, 4.1096999999996886e-05, 4.107000000000416e-05, 4.1360999999996706e-05, 4.127799999999876e-05, 4.155599999999815e-05, 4.0945000000000564e-05, 4.14860000000003e-05, 4.1431000000001494e-05]</msg>
<status status="PASS" starttime="20201112 10:15:42.110" endtime="20201112 10:15:42.112"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.104" endtime="20201112 10:15:42.113"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.116" endtime="20201112 10:15:42.117"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:42.119" endtime="20201112 10:15:42.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.117" endtime="20201112 10:15:42.140"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.113" endtime="20201112 10:15:42.140"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.736" endtime="20201112 10:15:42.141"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.735" endtime="20201112 10:15:42.141"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.151" endtime="20201112 10:15:42.169"></status>
</kw>
<msg timestamp="20201112 10:15:42.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:42.150" endtime="20201112 10:15:42.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:42.171" endtime="20201112 10:15:42.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.174" endtime="20201112 10:15:42.175"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.146" endtime="20201112 10:15:42.176"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.144" endtime="20201112 10:15:42.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.185" endtime="20201112 10:15:42.493"></status>
</kw>
<msg timestamp="20201112 10:15:42.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024625486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024667306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:42.183" endtime="20201112 10:15:42.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024625486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024667306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:42.502" endtime="20201112 10:15:42.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.521" endtime="20201112 10:15:42.525"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.180" endtime="20201112 10:15:42.527"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.177" endtime="20201112 10:15:42.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:42.538" level="INFO">${RESULT} = [{'time': 0.024667306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.182000000000144e-05, 'source_diff': 4.182000000000144e-05}, {'time': 0.024719306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:42.530" endtime="20201112 10:15:42.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:42.569" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:42.541" endtime="20201112 10:15:42.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.580" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 10:15:42.578" endtime="20201112 10:15:42.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.586" level="INFO">VALUE: [4.182000000000144e-05, 4.2487000000000774e-05, 4.227799999999976e-05, 4.2473000000001204e-05, 4.2347000000001606e-05, 4.2290999999999856e-05, 4.172200000000098e-05, 4.2347000000001606e-05, 4.227799999999976e-05, 4.175000000000012e-05, 4.2082999999998316e-05, 4.219399999999887e-05, 4.227799999999976e-05, 4.2416999999999455e-05, 4.242999999999955e-05, 4.244399999999912e-05, 4.2596999999998386e-05, 4.2653000000000135e-05, 4.251400000000044e-05, 4.1832999999998066e-05, 4.2195000000001814e-05, 4.194399999999862e-05, 4.26799999999998e-05, 4.2431000000002494e-05, 4.1888999999999815e-05, 4.1958999999997665e-05, 4.205599999999865e-05, 4.2569000000002716e-05, 4.2318999999998996e-05, 4.216599999999973e-05, 4.2596999999998386e-05, 4.227800000000323e-05, 4.2318999999998996e-05, 4.2610999999997956e-05, 4.2402999999999885e-05, 4.2096999999997886e-05, 4.2139000000000065e-05, 4.1902999999999385e-05, 4.2333000000002036e-05, 4.1902999999999385e-05, 4.2027000000000037e-05, 4.18059999999984e-05, 4.23059999999989e-05, 4.1959000000001134e-05, 4.2445000000002064e-05, 4.2597000000001856e-05, 4.2389000000000315e-05, 4.1944999999998095e-05, 4.2082999999998316e-05, 4.174999999999665e-05]</msg>
<status status="PASS" starttime="20201112 10:15:42.582" endtime="20201112 10:15:42.587"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.571" endtime="20201112 10:15:42.589"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.595" endtime="20201112 10:15:42.598"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:42.603" endtime="20201112 10:15:42.625"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.599" endtime="20201112 10:15:42.626"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.590" endtime="20201112 10:15:42.628"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.142" endtime="20201112 10:15:42.628"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.141" endtime="20201112 10:15:42.629"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.651" endtime="20201112 10:15:42.671"></status>
</kw>
<msg timestamp="20201112 10:15:42.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:42.648" endtime="20201112 10:15:42.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:42.674" endtime="20201112 10:15:42.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.680" endtime="20201112 10:15:42.684"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.641" endtime="20201112 10:15:42.685"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.635" endtime="20201112 10:15:42.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.703" endtime="20201112 10:15:43.036"></status>
</kw>
<msg timestamp="20201112 10:15:43.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041755542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041798542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:42.700" endtime="20201112 10:15:43.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041755542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041798542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:43.046" endtime="20201112 10:15:43.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.065" endtime="20201112 10:15:43.070"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.693" endtime="20201112 10:15:43.072"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.688" endtime="20201112 10:15:43.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:43.084" level="INFO">${RESULT} = [{'time': 0.041798542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.300000000000137e-05, 'source_diff': 4.300000000000137e-05}, {'time': 0.041846556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:43.075" endtime="20201112 10:15:43.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:43.115" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:43.086" endtime="20201112 10:15:43.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.126" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 10:15:43.123" endtime="20201112 10:15:43.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.131" level="INFO">VALUE: [4.300000000000137e-05, 4.3695000000003315e-05, 4.327800000000076e-05, 4.359799999999886e-05, 4.3318999999999996e-05, 4.3596999999999386e-05, 4.3318999999999996e-05, 4.318000000000377e-05, 4.3667000000004175e-05, 4.348599999999536e-05, 4.3194999999995876e-05, 4.347200000000273e-05, 4.3332999999999566e-05, 4.270800000000241e-05, 4.302800000000051e-05, 4.323600000000205e-05, 4.304199999999314e-05, 4.3180999999996306e-05, 4.3346999999999136e-05, 4.281999999999897e-05, 4.300000000000137e-05, 4.283399999999854e-05, 4.2917000000003425e-05, 4.3167000000003675e-05, 4.345799999999622e-05, 4.3639000000005035e-05, 4.3610999999998956e-05, 4.340200000000488e-05, 4.3596999999999386e-05, 4.318000000000377e-05, 4.350000000000187e-05, 4.3360999999998706e-05, 4.3624999999998526e-05, 4.272199999999504e-05, 4.3639000000005035e-05, 4.2804999999999926e-05, 4.354199999999364e-05, 4.2945000000002564e-05, 4.344399999999665e-05, 4.3346999999999136e-05, 4.297200000000223e-05, 4.3610999999998956e-05, 4.354200000000058e-05, 4.3346999999999136e-05, 4.283399999999854e-05, 4.276400000000069e-05, 4.3082999999999316e-05, 4.273599999999461e-05, 4.3068999999999746e-05, 4.349999999999493e-05]</msg>
<status status="PASS" starttime="20201112 10:15:43.128" endtime="20201112 10:15:43.133"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.116" endtime="20201112 10:15:43.134"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.141" endtime="20201112 10:15:43.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:43.149" endtime="20201112 10:15:43.170"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.144" endtime="20201112 10:15:43.172"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.136" endtime="20201112 10:15:43.173"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.631" endtime="20201112 10:15:43.174"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.630" endtime="20201112 10:15:43.174"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.197" endtime="20201112 10:15:43.216"></status>
</kw>
<msg timestamp="20201112 10:15:43.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:43.193" endtime="20201112 10:15:43.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:43.219" endtime="20201112 10:15:43.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.226" endtime="20201112 10:15:43.229"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.186" endtime="20201112 10:15:43.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.181" endtime="20201112 10:15:43.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.249" endtime="20201112 10:15:43.583"></status>
</kw>
<msg timestamp="20201112 10:15:43.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041383583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041427417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:43.246" endtime="20201112 10:15:43.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041383583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041427417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:43.593" endtime="20201112 10:15:43.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.611" endtime="20201112 10:15:43.617"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.238" endtime="20201112 10:15:43.618"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.234" endtime="20201112 10:15:43.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:43.630" level="INFO">${RESULT} = [{'time': 0.041427417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.383399999999954e-05, 'source_diff': 4.383399999999954e-05}, {'time': 0.041483431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:43.621" endtime="20201112 10:15:43.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:43.661" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:43.632" endtime="20201112 10:15:43.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.672" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 10:15:43.669" endtime="20201112 10:15:43.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.677" level="INFO">VALUE: [4.383399999999954e-05, 4.461199999999943e-05, 4.434799999999961e-05, 4.4388999999998846e-05, 4.426300000000272e-05, 4.455600000000115e-05, 4.423600000000305e-05, 4.377799999999432e-05, 4.454100000000211e-05, 4.401400000000194e-05, 4.426400000000219e-05, 4.4624999999999526e-05, 4.4319000000000996e-05, 4.4681000000004745e-05, 4.4388999999998846e-05, 4.4444999999997126e-05, 4.3860999999999206e-05, 4.4083000000000316e-05, 4.4152999999998166e-05, 4.3930999999997056e-05, 4.379200000000083e-05, 4.429100000000186e-05, 4.411199999999893e-05, 4.41660000000052e-05, 4.433400000000004e-05, 4.451400000000244e-05, 4.417999999999783e-05, 4.44860000000033e-05, 4.392999999999758e-05, 4.394399999999715e-05, 4.444399999999765e-05, 4.3805000000000927e-05, 4.4347000000000136e-05, 4.44860000000033e-05, 4.3846999999999636e-05, 4.4166999999997736e-05, 4.4347000000000136e-05, 4.4166999999997736e-05, 4.381999999999997e-05, 4.3846999999999636e-05, 4.4360999999999706e-05, 4.383399999999954e-05, 4.408399999999979e-05, 4.4459000000003635e-05, 4.432000000000047e-05, 4.4638999999999096e-05, 4.373600000000255e-05, 4.379100000000136e-05, 4.445799999999722e-05, 4.406899999999381e-05]</msg>
<status status="PASS" starttime="20201112 10:15:43.674" endtime="20201112 10:15:43.679"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.663" endtime="20201112 10:15:43.680"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.687" endtime="20201112 10:15:43.689"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:43.695" endtime="20201112 10:15:43.716"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.691" endtime="20201112 10:15:43.718"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.682" endtime="20201112 10:15:43.719"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.176" endtime="20201112 10:15:43.720"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.175" endtime="20201112 10:15:43.721"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.743" endtime="20201112 10:15:43.764"></status>
</kw>
<msg timestamp="20201112 10:15:43.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:43.740" endtime="20201112 10:15:43.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:43.767" endtime="20201112 10:15:43.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.774" endtime="20201112 10:15:43.777"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.733" endtime="20201112 10:15:43.779"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.727" endtime="20201112 10:15:43.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.797" endtime="20201112 10:15:44.129"></status>
</kw>
<msg timestamp="20201112 10:15:44.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041741111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041786597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:43.794" endtime="20201112 10:15:44.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041741111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041786597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:44.138" endtime="20201112 10:15:44.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.157" endtime="20201112 10:15:44.165"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.786" endtime="20201112 10:15:44.166"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.782" endtime="20201112 10:15:44.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:44.178" level="INFO">${RESULT} = [{'time': 0.041786597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.54860000000043e-05, 'source_diff': 4.54860000000043e-05}, {'time': 0.041842542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:44.169" endtime="20201112 10:15:44.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:44.209" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:44.180" endtime="20201112 10:15:44.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.219" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 10:15:44.217" endtime="20201112 10:15:44.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.225" level="INFO">VALUE: [4.54860000000043e-05, 4.5167000000005675e-05, 4.4944999999997626e-05, 4.5195000000004815e-05, 4.532000000000147e-05, 4.4722999999996516e-05, 4.536099999999377e-05, 4.5597000000001386e-05, 4.488799999999987e-05, 4.495800000000466e-05, 4.5152999999999166e-05, 4.5361000000000706e-05, 4.479099999999542e-05, 4.4874999999999776e-05, 4.5069000000001747e-05, 4.549999999999693e-05, 4.5319000000001997e-05, 4.482000000000097e-05, 4.4888999999999346e-05, 4.547199999999779e-05, 4.5375000000000276e-05, 4.527800000000276e-05, 4.5389000000006785e-05, 4.486199999999968e-05, 4.4722999999996516e-05, 4.530500000000243e-05, 4.526400000000319e-05, 4.515199999999969e-05, 4.473600000000355e-05, 4.5611000000000956e-05, 4.473599999999661e-05, 4.544399999999865e-05, 4.54860000000043e-05, 4.479199999999489e-05, 4.547199999999779e-05, 4.5347000000001136e-05, 4.49860000000038e-05, 4.570799999999847e-05, 4.5097000000000886e-05, 4.5388999999999846e-05, 4.5444999999998126e-05, 4.473599999999661e-05, 4.4916999999998486e-05, 4.4959000000004135e-05, 4.473599999999661e-05, 4.483400000000054e-05, 4.501400000000294e-05, 4.495799999999772e-05, 4.5138999999999596e-05, 4.488799999999987e-05]</msg>
<status status="PASS" starttime="20201112 10:15:44.222" endtime="20201112 10:15:44.234"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.211" endtime="20201112 10:15:44.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.242" endtime="20201112 10:15:44.244"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:44.250" endtime="20201112 10:15:44.272"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.246" endtime="20201112 10:15:44.273"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.237" endtime="20201112 10:15:44.275"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.723" endtime="20201112 10:15:44.275"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:43.721" endtime="20201112 10:15:44.276"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.298" endtime="20201112 10:15:44.318"></status>
</kw>
<msg timestamp="20201112 10:15:44.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:44.295" endtime="20201112 10:15:44.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:44.321" endtime="20201112 10:15:44.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.328" endtime="20201112 10:15:44.332"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.288" endtime="20201112 10:15:44.334"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.282" endtime="20201112 10:15:44.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.352" endtime="20201112 10:15:44.686"></status>
</kw>
<msg timestamp="20201112 10:15:44.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041611292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041657153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:44.349" endtime="20201112 10:15:44.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041611292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041657153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:44.696" endtime="20201112 10:15:44.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.715" endtime="20201112 10:15:44.721"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.342" endtime="20201112 10:15:44.722"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.337" endtime="20201112 10:15:44.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:44.734" level="INFO">${RESULT} = [{'time': 0.041657153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5861000000001206e-05, 'source_diff': 4.5861000000001206e-05}, {'time': 0.041710083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:44.725" endtime="20201112 10:15:44.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:44.765" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:44.737" endtime="20201112 10:15:44.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.776" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 10:15:44.774" endtime="20201112 10:15:44.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.781" level="INFO">VALUE: [4.5861000000001206e-05, 4.6611000000001956e-05, 4.648599999999836e-05, 4.58190000000025e-05, 4.6361000000001706e-05, 4.605499999999624e-05, 4.5861000000001206e-05, 4.6125000000001026e-05, 4.6166999999999736e-05, 4.5861000000001206e-05, 4.612499999999409e-05, 4.6139000000000596e-05, 4.6430999999999556e-05, 4.600000000000437e-05, 4.649999999999793e-05, 4.5889000000000346e-05, 4.6153000000000166e-05, 4.606900000000275e-05, 4.655600000000315e-05, 4.620799999999897e-05, 4.592999999999958e-05, 4.6679999999993393e-05, 4.66939999999999e-05, 4.5875000000000776e-05, 4.573599999999761e-05, 4.6083000000002317e-05, 4.5902999999999916e-05, 4.648599999999836e-05, 4.599999999999743e-05, 4.644399999999965e-05, 4.6153000000000166e-05, 4.63339999999951e-05, 4.6597000000002387e-05, 4.654199999999664e-05, 4.6153000000000166e-05, 4.572199999999804e-05, 4.657000000000272e-05, 4.636199999999424e-05, 4.5930999999999056e-05, 4.6625000000001526e-05, 4.573599999999761e-05, 4.6639000000001096e-05, 4.615200000000069e-05, 4.656999999999578e-05, 4.576400000000369e-05, 4.6083000000002317e-05, 4.630499999999649e-05, 4.66939999999999e-05, 4.6347000000002136e-05, 4.627799999999682e-05]</msg>
<status status="PASS" starttime="20201112 10:15:44.778" endtime="20201112 10:15:44.783"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.767" endtime="20201112 10:15:44.785"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.791" endtime="20201112 10:15:44.794"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:44.799" endtime="20201112 10:15:44.821"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.795" endtime="20201112 10:15:44.823"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.786" endtime="20201112 10:15:44.824"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.278" endtime="20201112 10:15:44.825"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.277" endtime="20201112 10:15:44.825"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.847" endtime="20201112 10:15:44.868"></status>
</kw>
<msg timestamp="20201112 10:15:44.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:44.844" endtime="20201112 10:15:44.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:44.871" endtime="20201112 10:15:44.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.877" endtime="20201112 10:15:44.881"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.837" endtime="20201112 10:15:44.883"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.831" endtime="20201112 10:15:44.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.900" endtime="20201112 10:15:45.246"></status>
</kw>
<msg timestamp="20201112 10:15:45.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041858792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041905542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:44.897" endtime="20201112 10:15:45.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:45.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041858792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041905542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:45.256" endtime="20201112 10:15:45.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.275" endtime="20201112 10:15:45.280"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.890" endtime="20201112 10:15:45.282"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.885" endtime="20201112 10:15:45.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:45.294" level="INFO">${RESULT} = [{'time': 0.041905542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.674999999999818e-05, 'source_diff': 4.674999999999818e-05}, {'time': 0.041954556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:45.285" endtime="20201112 10:15:45.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:45.324" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:45.296" endtime="20201112 10:15:45.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:45.335" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 10:15:45.333" endtime="20201112 10:15:45.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:45.340" level="INFO">VALUE: [4.674999999999818e-05, 4.677799999999732e-05, 4.7458999999999696e-05, 4.762499999999559e-05, 4.674999999999818e-05, 4.6887999999994934e-05, 4.723599999999911e-05, 4.763899999999516e-05, 4.736099999999577e-05, 4.75139999999985e-05, 4.724999999999868e-05, 4.761099999999602e-05, 4.752799999999807e-05, 4.727799999999782e-05, 4.68060000000034e-05, 4.699999999999843e-05, 4.755599999999721e-05, 4.677799999999732e-05, 4.751400000000544e-05, 4.7667000000001236e-05, 4.7389000000001846e-05, 4.683400000000254e-05, 4.7653000000001666e-05, 4.700000000000537e-05, 4.743000000000108e-05, 4.683300000000307e-05, 4.738800000000237e-05, 4.7013999999998e-05, 4.7125000000002026e-05, 4.748599999999936e-05, 4.7013999999998e-05, 4.697200000000623e-05, 4.7139000000001596e-05, 4.758300000000382e-05, 4.7181000000000306e-05, 4.695799999999972e-05, 4.6917000000000486e-05, 4.698599999999886e-05, 4.7695000000000376e-05, 4.7361000000002706e-05, 4.752799999999807e-05, 4.684799999999517e-05, 4.736200000000218e-05, 4.7013999999998e-05, 4.709699999999595e-05, 4.676299999999828e-05, 4.726300000000572e-05, 4.716600000000126e-05, 4.705499999999724e-05, 4.677799999999732e-05]</msg>
<status status="PASS" starttime="20201112 10:15:45.337" endtime="20201112 10:15:45.342"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.326" endtime="20201112 10:15:45.343"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.350" endtime="20201112 10:15:45.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:45.359" endtime="20201112 10:15:45.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.354" endtime="20201112 10:15:45.382"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.345" endtime="20201112 10:15:45.384"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.827" endtime="20201112 10:15:45.385"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.826" endtime="20201112 10:15:45.385"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.407" endtime="20201112 10:15:45.428"></status>
</kw>
<msg timestamp="20201112 10:15:45.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:45.404" endtime="20201112 10:15:45.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:45.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:45.432" endtime="20201112 10:15:45.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.438" endtime="20201112 10:15:45.442"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.397" endtime="20201112 10:15:45.443"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.391" endtime="20201112 10:15:45.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.461" endtime="20201112 10:15:45.763"></status>
</kw>
<msg timestamp="20201112 10:15:45.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042204778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042252903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:45.458" endtime="20201112 10:15:45.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:45.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042204778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042252903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:45.768" endtime="20201112 10:15:45.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.776" endtime="20201112 10:15:45.779"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.450" endtime="20201112 10:15:45.780"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.446" endtime="20201112 10:15:45.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:45.785" level="INFO">${RESULT} = [{'time': 0.042252903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8125000000003026e-05, 'source_diff': 4.8125000000003026e-05}, {'time': 0.042305903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:45.781" endtime="20201112 10:15:45.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:45.812" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:45.786" endtime="20201112 10:15:45.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:45.823" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 10:15:45.820" endtime="20201112 10:15:45.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:45.828" level="INFO">VALUE: [4.8125000000003026e-05, 4.78469999999967e-05, 4.797200000000029e-05, 4.8153000000002166e-05, 4.8473000000000266e-05, 4.8125000000003026e-05, 4.8361000000003707e-05, 4.856900000000525e-05, 4.804099999999867e-05, 4.86940000000019e-05, 4.7875000000002776e-05, 4.856900000000525e-05, 4.806900000000475e-05, 4.797200000000029e-05, 4.7708999999999946e-05, 4.772200000000004e-05, 4.795800000000072e-05, 4.822200000000054e-05, 4.848600000000036e-05, 4.856999999999778e-05, 4.826399999999925e-05, 4.8209000000000446e-05, 4.7889000000002346e-05, 4.801300000000647e-05, 4.7931000000001056e-05, 4.85139999999995e-05, 4.806899999999781e-05, 4.809800000000336e-05, 4.773599999999961e-05, 4.7861000000003207e-05, 4.806899999999781e-05, 4.849999999999993e-05, 4.8417000000001986e-05, 4.8639000000003096e-05, 4.781899999999756e-05, 4.855500000000568e-05, 4.7917000000001486e-05, 4.845800000000122e-05, 4.819499999999394e-05, 4.823600000000011e-05, 4.783299999999713e-05, 4.790200000000244e-05, 4.8681000000001806e-05, 4.811099999999652e-05, 4.824999999999968e-05, 4.8223000000000016e-05, 4.797200000000029e-05, 4.815200000000269e-05, 4.86940000000019e-05, 4.804099999999867e-05]</msg>
<status status="PASS" starttime="20201112 10:15:45.825" endtime="20201112 10:15:45.829"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.814" endtime="20201112 10:15:45.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.837" endtime="20201112 10:15:45.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:45.846" endtime="20201112 10:15:45.867"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.841" endtime="20201112 10:15:45.869"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.833" endtime="20201112 10:15:45.871"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.387" endtime="20201112 10:15:45.871"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.386" endtime="20201112 10:15:45.872"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.894" endtime="20201112 10:15:45.914"></status>
</kw>
<msg timestamp="20201112 10:15:45.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:45.891" endtime="20201112 10:15:45.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:45.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:45.917" endtime="20201112 10:15:45.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.924" endtime="20201112 10:15:45.927"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.884" endtime="20201112 10:15:45.929"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.878" endtime="20201112 10:15:45.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:45.947" endtime="20201112 10:15:46.280"></status>
</kw>
<msg timestamp="20201112 10:15:46.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041666639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041715333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:45.943" endtime="20201112 10:15:46.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041666639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041715333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:46.290" endtime="20201112 10:15:46.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.308" endtime="20201112 10:15:46.316"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.936" endtime="20201112 10:15:46.317"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.932" endtime="20201112 10:15:46.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:46.329" level="INFO">${RESULT} = [{'time': 0.041715333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86940000000019e-05, 'source_diff': 4.86940000000019e-05}, {'time': 0.041768361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:46.320" endtime="20201112 10:15:46.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:46.360" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:46.331" endtime="20201112 10:15:46.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.371" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 10:15:46.368" endtime="20201112 10:15:46.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.376" level="INFO">VALUE: [4.86940000000019e-05, 4.891699999999555e-05, 4.954100000000017e-05, 4.9639000000004097e-05, 4.95140000000005e-05, 4.9139000000003596e-05, 4.9639000000004097e-05, 4.9403000000003416e-05, 4.9445000000002126e-05, 4.918099999999537e-05, 4.962499999999759e-05, 4.8723000000000516e-05, 4.9014e-05, 4.9473000000001266e-05, 4.934799999999767e-05, 4.8723000000000516e-05, 4.943099999999562e-05, 4.884700000000464e-05, 4.898599999999392e-05, 4.937499999999734e-05, 4.913899999999666e-05, 4.956900000000625e-05, 4.8903000000002916e-05, 4.947200000000179e-05, 4.954199999999964e-05, 4.948600000000136e-05, 4.875000000000018e-05, 4.872200000000104e-05, 4.8889000000003346e-05, 4.881999999999803e-05, 4.93469999999982e-05, 4.9639000000004097e-05, 4.969499999999544e-05, 4.904199999999914e-05, 4.934700000000514e-05, 4.911099999999752e-05, 4.8973000000000766e-05, 4.898600000000086e-05, 4.95270000000006e-05, 4.9139000000003596e-05, 4.873600000000061e-05, 4.88469999999977e-05, 4.93469999999982e-05, 4.876399999999975e-05, 4.959699999999845e-05, 4.933299999999863e-05, 4.95140000000005e-05, 4.897199999999435e-05, 4.938899999999691e-05, 4.9681000000002806e-05]</msg>
<status status="PASS" starttime="20201112 10:15:46.373" endtime="20201112 10:15:46.377"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.362" endtime="20201112 10:15:46.379"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.386" endtime="20201112 10:15:46.388"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:46.394" endtime="20201112 10:15:46.416"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.390" endtime="20201112 10:15:46.418"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.381" endtime="20201112 10:15:46.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.874" endtime="20201112 10:15:46.420"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:45.872" endtime="20201112 10:15:46.420"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.443" endtime="20201112 10:15:46.463"></status>
</kw>
<msg timestamp="20201112 10:15:46.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:46.440" endtime="20201112 10:15:46.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:46.467" endtime="20201112 10:15:46.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.473" endtime="20201112 10:15:46.477"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.432" endtime="20201112 10:15:46.478"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.427" endtime="20201112 10:15:46.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.496" endtime="20201112 10:15:46.830"></status>
</kw>
<msg timestamp="20201112 10:15:46.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041919972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041970014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:46.493" endtime="20201112 10:15:46.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041919972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041970014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:46.840" endtime="20201112 10:15:46.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.859" endtime="20201112 10:15:46.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.486" endtime="20201112 10:15:46.866"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.481" endtime="20201112 10:15:46.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:46.878" level="INFO">${RESULT} = [{'time': 0.041970014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.004200000000014e-05, 'source_diff': 5.004200000000014e-05}, {'time': 0.042034042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:46.868" endtime="20201112 10:15:46.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:46.908" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:46.880" endtime="20201112 10:15:46.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.919" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 10:15:46.917" endtime="20201112 10:15:46.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.924" level="INFO">VALUE: [5.004200000000014e-05, 5.005599999999971e-05, 4.993099999999612e-05, 4.979100000000042e-05, 5.037499999999834e-05, 5.059799999999892e-05, 5.008299999999938e-05, 4.998600000000186e-05, 5.059699999999945e-05, 4.990200000000444e-05, 5.027800000000082e-05, 4.972200000000204e-05, 5.040299999999748e-05, 5.03469999999992e-05, 4.986100000000521e-05, 5.054200000000064e-05, 4.9709000000001946e-05, 4.977800000000032e-05, 5.029199999999345e-05, 4.98339999999986e-05, 4.9959000000002196e-05, 4.98469999999987e-05, 5.0153000000004166e-05, 4.9723000000001516e-05, 5.0237000000001586e-05, 5.034799999999867e-05, 5.011099999999852e-05, 5.0693999999996964e-05, 5.0429999999997144e-05, 5.026400000000125e-05, 5.0014000000001e-05, 5.056899999999337e-05, 5.0179999999996894e-05, 5.013899999999766e-05, 5.0429999999997144e-05, 5.0153000000004166e-05, 5.05140000000015e-05, 5.0485999999995423e-05, 5.002800000000057e-05, 5.05140000000015e-05, 5.03339999999991e-05, 4.993099999999612e-05, 5.0681000000003806e-05, 5.008399999999885e-05, 5.055600000000021e-05, 5.061099999999902e-05, 5.015200000000469e-05, 5.027700000000135e-05, 5.06940000000039e-05, 5.038899999999791e-05]</msg>
<status status="PASS" starttime="20201112 10:15:46.921" endtime="20201112 10:15:46.926"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.910" endtime="20201112 10:15:46.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.934" endtime="20201112 10:15:46.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:46.942" endtime="20201112 10:15:46.964"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.938" endtime="20201112 10:15:46.965"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.929" endtime="20201112 10:15:46.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.423" endtime="20201112 10:15:46.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.421" endtime="20201112 10:15:46.968"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.991" endtime="20201112 10:15:47.011"></status>
</kw>
<msg timestamp="20201112 10:15:47.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:46.988" endtime="20201112 10:15:47.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:47.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:47.014" endtime="20201112 10:15:47.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:47.021" endtime="20201112 10:15:47.024"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.980" endtime="20201112 10:15:47.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.975" endtime="20201112 10:15:47.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:47.044" endtime="20201112 10:15:47.379"></status>
</kw>
<msg timestamp="20201112 10:15:47.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042163972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042214667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:47.040" endtime="20201112 10:15:47.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:47.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042163972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042214667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:47.388" endtime="20201112 10:15:47.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:47.407" endtime="20201112 10:15:47.412"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.033" endtime="20201112 10:15:47.414"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.029" endtime="20201112 10:15:47.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:47.426" level="INFO">${RESULT} = [{'time': 0.042214667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.069499999999644e-05, 'source_diff': 5.069499999999644e-05}, {'time': 0.042271625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:47.417" endtime="20201112 10:15:47.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:47.458" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:47.428" endtime="20201112 10:15:47.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:47.468" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 10:15:47.466" endtime="20201112 10:15:47.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:47.474" level="INFO">VALUE: [5.069499999999644e-05, 5.1443999999997714e-05, 5.159700000000045e-05, 5.108300000000038e-05, 5.086099999999927e-05, 5.145800000000422e-05, 5.159700000000045e-05, 5.1695000000004376e-05, 5.140299999999848e-05, 5.151399999999556e-05, 5.118099999999737e-05, 5.109699999999995e-05, 5.127700000000235e-05, 5.148600000000336e-05, 5.148600000000336e-05, 5.151299999999609e-05, 5.133300000000063e-05, 5.088900000000535e-05, 5.148600000000336e-05, 5.077800000000132e-05, 5.144499999999719e-05, 5.143099999999762e-05, 5.0957999999996784e-05, 5.129200000000139e-05, 5.090299999999798e-05, 5.079200000000089e-05, 5.08469999999997e-05, 5.088899999999841e-05, 5.161100000000002e-05, 5.113899999999866e-05, 5.11669999999978e-05, 5.118099999999737e-05, 5.126300000000278e-05, 5.133300000000063e-05, 5.136099999999977e-05, 5.087499999999884e-05, 5.123600000000311e-05, 5.0957999999996784e-05, 5.0903000000004917e-05, 5.152800000000207e-05, 5.082000000000003e-05, 5.138899999999891e-05, 5.105600000000071e-05, 5.0721999999996104e-05, 5.15140000000025e-05, 5.105600000000071e-05, 5.111099999999952e-05, 5.157000000000078e-05, 5.152800000000207e-05, 5.1473000000003266e-05]</msg>
<status status="PASS" starttime="20201112 10:15:47.471" endtime="20201112 10:15:47.475"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.459" endtime="20201112 10:15:47.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:47.483" endtime="20201112 10:15:47.486"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:47.492" endtime="20201112 10:15:47.513"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.487" endtime="20201112 10:15:47.515"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.479" endtime="20201112 10:15:47.516"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.970" endtime="20201112 10:15:47.517"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.969" endtime="20201112 10:15:47.517"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:47.540" endtime="20201112 10:15:47.561"></status>
</kw>
<msg timestamp="20201112 10:15:47.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:47.537" endtime="20201112 10:15:47.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:47.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:47.564" endtime="20201112 10:15:47.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:47.570" endtime="20201112 10:15:47.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.530" endtime="20201112 10:15:47.575"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.524" endtime="20201112 10:15:47.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:47.593" endtime="20201112 10:15:47.928"></status>
</kw>
<msg timestamp="20201112 10:15:47.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042003889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042056222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:47.590" endtime="20201112 10:15:47.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:47.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042003889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042056222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:47.938" endtime="20201112 10:15:47.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:47.956" endtime="20201112 10:15:47.962"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.583" endtime="20201112 10:15:47.963"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.578" endtime="20201112 10:15:47.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:47.975" level="INFO">${RESULT} = [{'time': 0.042056222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.233299999999469e-05, 'source_diff': 5.233299999999469e-05}, {'time': 0.042110222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:47.966" endtime="20201112 10:15:47.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:48.006" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:47.977" endtime="20201112 10:15:48.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.017" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 10:15:48.015" endtime="20201112 10:15:48.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.022" level="INFO">VALUE: [5.233299999999469e-05, 5.173600000000361e-05, 5.18470000000007e-05, 5.2499999999996994e-05, 5.202800000000257e-05, 5.2014000000003e-05, 5.21669999999988e-05, 5.227799999999588e-05, 5.200000000000343e-05, 5.261100000000102e-05, 5.268099999999887e-05, 5.230599999999502e-05, 5.2249999999996743e-05, 5.206999999999434e-05, 5.205599999999477e-05, 5.180500000000199e-05, 5.236100000000077e-05, 5.175000000000318e-05, 5.2499999999996994e-05, 5.188899999999941e-05, 5.248600000000436e-05, 5.173600000000361e-05, 5.1943999999998214e-05, 5.206999999999434e-05, 5.18470000000007e-05, 5.238899999999991e-05, 5.187499999999984e-05, 5.1721999999997104e-05, 5.258300000000188e-05, 5.2151999999999754e-05, 5.236200000000024e-05, 5.1973000000003766e-05, 5.226400000000325e-05, 5.176400000000275e-05, 5.2193999999998464e-05, 5.233300000000163e-05, 5.2679999999999394e-05, 5.21940000000054e-05, 5.215299999999923e-05, 5.234699999999426e-05, 5.234800000000067e-05, 5.25549999999958e-05, 5.16669999999983e-05, 5.237500000000034e-05, 5.197200000000429e-05, 5.270899999999801e-05, 5.229199999999545e-05, 5.18470000000007e-05, 5.2471999999997854e-05, 5.265299999999973e-05]</msg>
<status status="PASS" starttime="20201112 10:15:48.019" endtime="20201112 10:15:48.024"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.008" endtime="20201112 10:15:48.025"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.032" endtime="20201112 10:15:48.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:48.040" endtime="20201112 10:15:48.061"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.035" endtime="20201112 10:15:48.063"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.027" endtime="20201112 10:15:48.064"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.520" endtime="20201112 10:15:48.065"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:47.518" endtime="20201112 10:15:48.065"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.088" endtime="20201112 10:15:48.108"></status>
</kw>
<msg timestamp="20201112 10:15:48.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:48.085" endtime="20201112 10:15:48.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:48.112" endtime="20201112 10:15:48.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.118" endtime="20201112 10:15:48.122"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.077" endtime="20201112 10:15:48.123"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.072" endtime="20201112 10:15:48.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.141" endtime="20201112 10:15:48.477"></status>
</kw>
<msg timestamp="20201112 10:15:48.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041548278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041601278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:48.138" endtime="20201112 10:15:48.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041548278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041601278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:48.487" endtime="20201112 10:15:48.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.505" endtime="20201112 10:15:48.513"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.131" endtime="20201112 10:15:48.514"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.126" endtime="20201112 10:15:48.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:48.526" level="INFO">${RESULT} = [{'time': 0.041601278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2999999999997494e-05, 'source_diff': 5.2999999999997494e-05}, {'time': 0.041668278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:48.517" endtime="20201112 10:15:48.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:48.557" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:48.528" endtime="20201112 10:15:48.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.568" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 10:15:48.566" endtime="20201112 10:15:48.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.573" level="INFO">VALUE: [5.2999999999997494e-05, 5.355600000000321e-05, 5.368099999999987e-05, 5.3457999999999284e-05, 5.363900000000116e-05, 5.361099999999508e-05, 5.355599999999627e-05, 5.270899999999801e-05, 5.329099999999698e-05, 5.31669999999998e-05, 5.3152000000000754e-05, 5.356900000000331e-05, 5.2943999999999214e-05, 5.2929999999999644e-05, 5.362499999999465e-05, 5.3221999999998604e-05, 5.361100000000202e-05, 5.363900000000116e-05, 5.2957999999998784e-05, 5.297200000000529e-05, 5.290299999999998e-05, 5.3221999999998604e-05, 5.283299999999519e-05, 5.350000000000493e-05, 5.279199999999595e-05, 5.28340000000016e-05, 5.361100000000202e-05, 5.363900000000116e-05, 5.277800000000332e-05, 5.2902000000000504e-05, 5.2985999999997924e-05, 5.344400000000665e-05, 5.3166000000000324e-05, 5.3471999999998854e-05, 5.311100000000152e-05, 5.358400000000235e-05, 5.331899999999612e-05, 5.347200000000579e-05, 5.336100000000177e-05, 5.338900000000091e-05, 5.300000000000443e-05, 5.290299999999998e-05, 5.309700000000195e-05, 5.33340000000021e-05, 5.308400000000185e-05, 5.344499999999919e-05, 5.287500000000084e-05, 5.3235999999998174e-05, 5.280600000000246e-05, 5.2985999999997924e-05]</msg>
<status status="PASS" starttime="20201112 10:15:48.570" endtime="20201112 10:15:48.575"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.559" endtime="20201112 10:15:48.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.583" endtime="20201112 10:15:48.585"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:48.591" endtime="20201112 10:15:48.613"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.587" endtime="20201112 10:15:48.615"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.578" endtime="20201112 10:15:48.616"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.068" endtime="20201112 10:15:48.617"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.066" endtime="20201112 10:15:48.617"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.640" endtime="20201112 10:15:48.660"></status>
</kw>
<msg timestamp="20201112 10:15:48.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:48.636" endtime="20201112 10:15:48.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:48.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:48.663" endtime="20201112 10:15:48.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.669" endtime="20201112 10:15:48.673"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.629" endtime="20201112 10:15:48.675"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.624" endtime="20201112 10:15:48.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:48.695" endtime="20201112 10:15:49.045"></status>
</kw>
<msg timestamp="20201112 10:15:49.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041698097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04175275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:48.692" endtime="20201112 10:15:49.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041698097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04175275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:49.055" endtime="20201112 10:15:49.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.073" endtime="20201112 10:15:49.079"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.684" endtime="20201112 10:15:49.080"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.678" endtime="20201112 10:15:49.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:49.093" level="INFO">${RESULT} = [{'time': 0.04175275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.465299999999479e-05, 'source_diff': 5.465299999999479e-05}, {'time': 0.041820764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:15:49.084" endtime="20201112 10:15:49.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:49.126" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:49.095" endtime="20201112 10:15:49.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.133" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 10:15:49.132" endtime="20201112 10:15:49.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.135" level="INFO">VALUE: [5.465299999999479e-05, 5.390300000000098e-05, 5.409699999999601e-05, 5.407000000000328e-05, 5.406999999999634e-05, 5.411199999999505e-05, 5.413900000000166e-05, 5.413900000000166e-05, 5.426299999999884e-05, 5.455600000000421e-05, 5.3721999999999104e-05, 5.463900000000216e-05, 5.4679999999994455e-05, 5.3721999999999104e-05, 5.430600000000396e-05, 5.459699999999651e-05, 5.455599999999727e-05, 5.433299999999669e-05, 5.4235999999999174e-05, 5.409700000000295e-05, 5.3749999999998244e-05, 5.411100000000252e-05, 5.444500000000019e-05, 5.4137999999995245e-05, 5.4291999999997453e-05, 5.452800000000507e-05, 5.413900000000166e-05, 5.4680000000001394e-05, 5.436100000000277e-05, 5.4152000000001754e-05, 5.402699999999816e-05, 5.386100000000227e-05, 5.4471999999999854e-05, 5.406899999999687e-05, 5.415300000000123e-05, 5.393100000000012e-05, 5.455500000000474e-05, 5.3721999999999104e-05, 5.4221999999999604e-05, 5.431999999999659e-05, 5.434699999999626e-05, 5.4249999999998744e-05, 5.43749999999954e-05, 5.415300000000123e-05, 5.384800000000217e-05, 5.38749999999949e-05, 5.434800000000267e-05, 5.4527999999998134e-05, 5.3763999999997814e-05, 5.3916000000001074e-05]</msg>
<status status="PASS" starttime="20201112 10:15:49.134" endtime="20201112 10:15:49.136"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.128" endtime="20201112 10:15:49.137"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.140" endtime="20201112 10:15:49.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:49.144" endtime="20201112 10:15:49.163"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.142" endtime="20201112 10:15:49.164"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.138" endtime="20201112 10:15:49.165"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.619" endtime="20201112 10:15:49.165"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:48.618" endtime="20201112 10:15:49.165"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.176" endtime="20201112 10:15:49.193"></status>
</kw>
<msg timestamp="20201112 10:15:49.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:49.174" endtime="20201112 10:15:49.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:49.195" endtime="20201112 10:15:49.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.198" endtime="20201112 10:15:49.200"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.171" endtime="20201112 10:15:49.201"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.168" endtime="20201112 10:15:49.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.209" endtime="20201112 10:15:49.527"></status>
</kw>
<msg timestamp="20201112 10:15:49.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025089611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025144472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:49.208" endtime="20201112 10:15:49.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025089611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025144472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:49.537" endtime="20201112 10:15:49.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.556" endtime="20201112 10:15:49.561"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.204" endtime="20201112 10:15:49.563"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.202" endtime="20201112 10:15:49.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:49.575" level="INFO">${RESULT} = [{'time': 0.025144472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.48609999999998e-05, 'source_diff': 5.48609999999998e-05}, {'time': 0.025213472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:15:49.566" endtime="20201112 10:15:49.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:49.606" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:49.577" endtime="20201112 10:15:49.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.616" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 10:15:49.614" endtime="20201112 10:15:49.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.622" level="INFO">VALUE: [5.48609999999998e-05, 5.511100000000005e-05, 5.570899999999754e-05, 5.4735999999999674e-05, 5.5665999999999355e-05, 5.565299999999926e-05, 5.506899999999787e-05, 5.4749999999999244e-05, 5.5527999999999134e-05, 5.500000000000296e-05, 5.476400000000228e-05, 5.511100000000005e-05, 5.5305999999998023e-05, 5.554200000000217e-05, 5.4958000000000784e-05, 5.494499999999722e-05, 5.5402000000003004e-05, 5.534699999999726e-05, 5.511100000000005e-05, 5.5722000000001104e-05, 5.53610000000003e-05, 5.5444000000001714e-05, 5.5291999999998453e-05, 5.4722000000000104e-05, 5.5236000000000174e-05, 5.538899999999944e-05, 5.512499999999962e-05, 5.513900000000266e-05, 5.5236000000000174e-05, 5.56670000000023e-05, 5.491700000000155e-05, 5.512499999999962e-05, 5.5513999999999564e-05, 5.5527999999999134e-05, 5.4763999999998814e-05, 5.5236000000000174e-05, 5.526300000000331e-05, 5.5499999999999994e-05, 5.5499999999999994e-05, 5.527800000000235e-05, 5.5429999999998675e-05, 5.48609999999998e-05, 5.4985999999999924e-05, 5.555600000000174e-05, 5.5472000000000854e-05, 5.561100000000055e-05, 5.4972000000000354e-05, 5.512499999999962e-05, 5.5277999999998884e-05, 5.557000000000131e-05]</msg>
<status status="PASS" starttime="20201112 10:15:49.619" endtime="20201112 10:15:49.629"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.608" endtime="20201112 10:15:49.631"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.637" endtime="20201112 10:15:49.640"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:49.646" endtime="20201112 10:15:49.667"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.641" endtime="20201112 10:15:49.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.633" endtime="20201112 10:15:49.671"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.166" endtime="20201112 10:15:49.671"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.166" endtime="20201112 10:15:49.672"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.694" endtime="20201112 10:15:49.715"></status>
</kw>
<msg timestamp="20201112 10:15:49.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:49.691" endtime="20201112 10:15:49.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:49.718" endtime="20201112 10:15:49.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.725" endtime="20201112 10:15:49.728"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.684" endtime="20201112 10:15:49.730"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.678" endtime="20201112 10:15:49.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.748" endtime="20201112 10:15:50.084"></status>
</kw>
<msg timestamp="20201112 10:15:50.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041693847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041750264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:49.745" endtime="20201112 10:15:50.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:50.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041693847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041750264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:50.094" endtime="20201112 10:15:50.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.112" endtime="20201112 10:15:50.118"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.737" endtime="20201112 10:15:50.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.733" endtime="20201112 10:15:50.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:50.132" level="INFO">${RESULT} = [{'time': 0.041750264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.641700000000305e-05, 'source_diff': 5.641700000000305e-05}, {'time': 0.041812319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:50.123" endtime="20201112 10:15:50.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:50.163" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:50.134" endtime="20201112 10:15:50.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:50.174" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 10:15:50.171" endtime="20201112 10:15:50.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:50.179" level="INFO">VALUE: [5.641700000000305e-05, 5.6402000000004004e-05, 5.6055999999998773e-05, 5.608399999999791e-05, 5.6541999999999704e-05, 5.612500000000409e-05, 5.6693999999996025e-05, 5.6485999999994485e-05, 5.6207999999995095e-05, 5.5944000000002214e-05, 5.665299999999679e-05, 5.6472000000001854e-05, 5.5763999999999814e-05, 5.6694000000002964e-05, 5.5805999999998523e-05, 5.583399999999766e-05, 5.6514000000000564e-05, 5.6305999999999023e-05, 5.582000000000503e-05, 5.6055999999998773e-05, 5.645900000000176e-05, 5.6528000000000134e-05, 5.6514000000000564e-05, 5.633399999999816e-05, 5.6000000000000494e-05, 5.6137999999997246e-05, 5.609699999999801e-05, 5.631899999999912e-05, 5.5763999999999814e-05, 5.588899999999647e-05, 5.6179999999995955e-05, 5.5972000000001354e-05, 5.641699999999611e-05, 5.63470000000052e-05, 5.659699999999851e-05, 5.593099999999518e-05, 5.6222000000001604e-05, 5.5972000000001354e-05, 5.609699999999801e-05, 5.6041999999999204e-05, 5.608299999999844e-05, 5.5763999999999814e-05, 5.609699999999801e-05, 5.601300000000059e-05, 5.626300000000084e-05, 5.663900000000416e-05, 5.633299999999869e-05, 5.613900000000366e-05, 5.636100000000477e-05, 5.6472000000001854e-05]</msg>
<status status="PASS" starttime="20201112 10:15:50.176" endtime="20201112 10:15:50.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.165" endtime="20201112 10:15:50.182"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.188" endtime="20201112 10:15:50.191"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:50.197" endtime="20201112 10:15:50.218"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.192" endtime="20201112 10:15:50.220"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.184" endtime="20201112 10:15:50.221"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.674" endtime="20201112 10:15:50.222"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.672" endtime="20201112 10:15:50.222"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.245" endtime="20201112 10:15:50.265"></status>
</kw>
<msg timestamp="20201112 10:15:50.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:50.241" endtime="20201112 10:15:50.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:50.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:50.268" endtime="20201112 10:15:50.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.275" endtime="20201112 10:15:50.278"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.234" endtime="20201112 10:15:50.280"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.229" endtime="20201112 10:15:50.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.298" endtime="20201112 10:15:50.632"></status>
</kw>
<msg timestamp="20201112 10:15:50.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041579014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041636139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:50.294" endtime="20201112 10:15:50.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:50.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041579014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041636139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:50.642" endtime="20201112 10:15:50.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.660" endtime="20201112 10:15:50.668"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.287" endtime="20201112 10:15:50.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.283" endtime="20201112 10:15:50.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:50.681" level="INFO">${RESULT} = [{'time': 0.041636139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.712500000000509e-05, 'source_diff': 5.712500000000509e-05}, {'time': 0.041695167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:50.672" endtime="20201112 10:15:50.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:50.712" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:50.683" endtime="20201112 10:15:50.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:50.723" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 10:15:50.721" endtime="20201112 10:15:50.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:50.728" level="INFO">VALUE: [5.712500000000509e-05, 5.6778000000000384e-05, 5.687500000000484e-05, 5.734799999999873e-05, 5.672300000000158e-05, 5.730500000000055e-05, 5.68749999999979e-05, 5.751300000000209e-05, 5.6930000000003644e-05, 5.759699999999951e-05, 5.688900000000441e-05, 5.679100000000048e-05, 5.688899999999747e-05, 5.731900000000012e-05, 5.7264000000001314e-05, 5.7278000000000884e-05, 5.6722000000002104e-05, 5.718100000000337e-05, 5.7014000000001064e-05, 5.7736000000002674e-05, 5.7137999999998246e-05, 5.7528000000001134e-05, 5.73619999999983e-05, 5.672300000000158e-05, 5.7014000000001064e-05, 5.730500000000055e-05, 5.752699999999472e-05, 5.7235999999995235e-05, 5.7278000000000884e-05, 5.7693999999997025e-05, 5.73749999999984e-05, 5.731900000000012e-05, 5.733299999999969e-05, 5.7069999999999343e-05, 5.763899999999822e-05, 5.7513999999994625e-05, 5.761099999999908e-05, 5.6778000000000384e-05, 5.6985999999994985e-05, 5.686200000000474e-05, 5.6778000000000384e-05, 5.7652000000005255e-05, 5.679100000000048e-05, 5.677700000000091e-05, 5.731900000000012e-05, 5.683299999999919e-05, 5.683299999999919e-05, 5.7264000000001314e-05, 5.7236000000002174e-05, 5.7528000000001134e-05]</msg>
<status status="PASS" starttime="20201112 10:15:50.725" endtime="20201112 10:15:50.730"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.714" endtime="20201112 10:15:50.731"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.738" endtime="20201112 10:15:50.740"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:50.746" endtime="20201112 10:15:50.767"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.741" endtime="20201112 10:15:50.769"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.733" endtime="20201112 10:15:50.770"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.224" endtime="20201112 10:15:50.771"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.223" endtime="20201112 10:15:50.771"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.794" endtime="20201112 10:15:50.815"></status>
</kw>
<msg timestamp="20201112 10:15:50.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:50.791" endtime="20201112 10:15:50.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:50.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:50.818" endtime="20201112 10:15:50.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.824" endtime="20201112 10:15:50.828"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.784" endtime="20201112 10:15:50.829"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.778" endtime="20201112 10:15:50.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:50.847" endtime="20201112 10:15:51.180"></status>
</kw>
<msg timestamp="20201112 10:15:51.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041863722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041922069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:50.844" endtime="20201112 10:15:51.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041863722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041922069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:51.189" endtime="20201112 10:15:51.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.208" endtime="20201112 10:15:51.214"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.837" endtime="20201112 10:15:51.215"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.832" endtime="20201112 10:15:51.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:51.227" level="INFO">${RESULT} = [{'time': 0.041922069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.834700000000026e-05, 'source_diff': 5.834700000000026e-05}, {'time': 0.041986069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:51.218" endtime="20201112 10:15:51.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:51.258" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:51.229" endtime="20201112 10:15:51.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.269" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 10:15:51.266" endtime="20201112 10:15:51.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.274" level="INFO">VALUE: [5.834700000000026e-05, 5.779100000000148e-05, 5.8499999999996055e-05, 5.838899999999897e-05, 5.8292000000001454e-05, 5.815300000000523e-05, 5.781900000000062e-05, 5.8235999999996235e-05, 5.8514000000002564e-05, 5.868099999999793e-05, 5.812499999999915e-05, 5.7972000000003354e-05, 5.834700000000026e-05, 5.794500000000369e-05, 5.813899999999872e-05, 5.806899999999393e-05, 5.801299999999565e-05, 5.784699999999976e-05, 5.780500000000105e-05, 5.833300000000069e-05, 5.8180000000004894e-05, 5.845899999999682e-05, 5.862499999999965e-05, 5.8486000000003424e-05, 5.8499999999996055e-05, 5.794500000000369e-05, 5.8320000000000594e-05, 5.784699999999976e-05, 5.83749999999994e-05, 5.7985999999995985e-05, 5.8334000000000163e-05, 5.790299999999804e-05, 5.773700000000215e-05, 5.845899999999682e-05, 5.8694000000004964e-05, 5.8680000000005395e-05, 5.8707999999997595e-05, 5.830499999999461e-05, 5.870899999999707e-05, 5.813899999999872e-05, 5.784699999999976e-05, 5.830500000000155e-05, 5.7764000000001814e-05, 5.7694000000003964e-05, 5.8556000000001274e-05, 5.8542000000001704e-05, 5.8556000000001274e-05, 5.786099999999933e-05, 5.8320000000000594e-05, 5.869500000000444e-05]</msg>
<status status="PASS" starttime="20201112 10:15:51.271" endtime="20201112 10:15:51.275"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.260" endtime="20201112 10:15:51.277"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.283" endtime="20201112 10:15:51.286"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:51.292" endtime="20201112 10:15:51.313"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.287" endtime="20201112 10:15:51.315"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.279" endtime="20201112 10:15:51.316"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.774" endtime="20201112 10:15:51.317"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:50.772" endtime="20201112 10:15:51.317"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.340" endtime="20201112 10:15:51.361"></status>
</kw>
<msg timestamp="20201112 10:15:51.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:51.336" endtime="20201112 10:15:51.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:51.364" endtime="20201112 10:15:51.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.370" endtime="20201112 10:15:51.374"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.329" endtime="20201112 10:15:51.375"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.324" endtime="20201112 10:15:51.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.393" endtime="20201112 10:15:51.727"></status>
</kw>
<msg timestamp="20201112 10:15:51.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041713472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041773056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:51.390" endtime="20201112 10:15:51.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041713472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041773056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:51.737" endtime="20201112 10:15:51.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.756" endtime="20201112 10:15:51.761"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.383" endtime="20201112 10:15:51.763"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.378" endtime="20201112 10:15:51.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:51.775" level="INFO">${RESULT} = [{'time': 0.041773056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9584000000001414e-05, 'source_diff': 5.9584000000001414e-05}, {'time': 0.041845069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:51.766" endtime="20201112 10:15:51.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:51.805" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:51.777" endtime="20201112 10:15:51.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.816" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 10:15:51.814" endtime="20201112 10:15:51.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.821" level="INFO">VALUE: [5.9584000000001414e-05, 5.936100000000083e-05, 5.959700000000151e-05, 5.915299999999929e-05, 5.9264000000003314e-05, 5.95550000000028e-05, 5.904099999999579e-05, 5.931900000000212e-05, 5.9221999999997665e-05, 5.963900000000022e-05, 5.911100000000058e-05, 5.8750000000003244e-05, 5.927700000000341e-05, 5.9084000000000914e-05, 5.918100000000537e-05, 5.9056000000001774e-05, 5.9291999999995515e-05, 5.9499999999997055e-05, 5.9151999999999816e-05, 5.8722000000004104e-05, 5.93750000000004e-05, 5.8972000000004354e-05, 5.9528000000003134e-05, 5.904100000000273e-05, 5.9513999999996625e-05, 5.931900000000212e-05, 5.968099999999893e-05, 5.9570000000001844e-05, 5.9736000000004674e-05, 5.9570000000001844e-05, 5.9514000000003564e-05, 5.93750000000004e-05, 5.912500000000015e-05, 5.96949999999985e-05, 5.923700000000365e-05, 5.961100000000108e-05, 5.9429999999999206e-05, 5.934700000000126e-05, 5.9264000000003314e-05, 5.8707999999997595e-05, 5.9471999999997915e-05, 5.886100000000033e-05, 5.9179999999998956e-05, 5.8806000000001524e-05, 5.8764000000002814e-05, 5.8750000000003244e-05, 5.944500000000519e-05, 5.9013999999996125e-05, 5.9264000000003314e-05, 5.9306000000002024e-05]</msg>
<status status="PASS" starttime="20201112 10:15:51.818" endtime="20201112 10:15:51.823"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.807" endtime="20201112 10:15:51.825"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.831" endtime="20201112 10:15:51.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:51.839" endtime="20201112 10:15:51.861"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.835" endtime="20201112 10:15:51.862"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.826" endtime="20201112 10:15:51.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.319" endtime="20201112 10:15:51.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.318" endtime="20201112 10:15:51.865"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.887" endtime="20201112 10:15:51.907"></status>
</kw>
<msg timestamp="20201112 10:15:51.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:51.884" endtime="20201112 10:15:51.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:51.910" endtime="20201112 10:15:51.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.917" endtime="20201112 10:15:51.920"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.877" endtime="20201112 10:15:51.922"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.871" endtime="20201112 10:15:51.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.940" endtime="20201112 10:15:52.273"></status>
</kw>
<msg timestamp="20201112 10:15:52.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041461444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041521694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:51.937" endtime="20201112 10:15:52.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041461444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041521694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:52.283" endtime="20201112 10:15:52.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.302" endtime="20201112 10:15:52.307"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.929" endtime="20201112 10:15:52.309"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.925" endtime="20201112 10:15:52.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:52.321" level="INFO">${RESULT} = [{'time': 0.041521694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0249999999997805e-05, 'source_diff': 6.0249999999997805e-05}, {'time': 0.041592764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:52.312" endtime="20201112 10:15:52.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:52.351" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:52.323" endtime="20201112 10:15:52.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.362" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 10:15:52.360" endtime="20201112 10:15:52.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.367" level="INFO">VALUE: [6.0249999999997805e-05, 6.0249999999997805e-05, 6.063900000000122e-05, 6.038900000000097e-05, 5.9778000000003384e-05, 6.011099999999464e-05, 5.9750000000004244e-05, 5.9777999999996445e-05, 6.061100000000208e-05, 6.0235999999998235e-05, 6.068099999999993e-05, 6.0221999999998665e-05, 6.062500000000165e-05, 5.98750000000009e-05, 6.012500000000115e-05, 6.0708000000006535e-05, 6.027699999999747e-05, 5.984700000000176e-05, 6.061099999999514e-05, 5.979100000000348e-05, 5.9778000000003384e-05, 6.063900000000122e-05, 6.006899999999593e-05, 5.9986000000004924e-05, 6.0499999999998055e-05, 6.065300000000079e-05, 6.041700000000011e-05, 5.994500000000569e-05, 6.0291999999996515e-05, 6.045899999999882e-05, 6.031900000000312e-05, 6.0112000000001053e-05, 6.0305999999996085e-05, 5.9902000000000566e-05, 6.058300000000294e-05, 6.0570000000002844e-05, 6.0069999999995405e-05, 6.0277999999996945e-05, 5.988900000000047e-05, 6.009700000000201e-05, 6.012500000000115e-05, 6.0471999999998916e-05, 5.9999999999997555e-05, 5.9971999999998415e-05, 5.9792000000002954e-05, 6.044499999999925e-05, 6.0263999999997375e-05, 6.044500000000619e-05, 5.973700000000415e-05, 6.0694000000000026e-05]</msg>
<status status="PASS" starttime="20201112 10:15:52.364" endtime="20201112 10:15:52.369"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.353" endtime="20201112 10:15:52.371"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.377" endtime="20201112 10:15:52.380"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:52.385" endtime="20201112 10:15:52.407"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.381" endtime="20201112 10:15:52.408"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.372" endtime="20201112 10:15:52.410"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.867" endtime="20201112 10:15:52.411"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.866" endtime="20201112 10:15:52.411"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.434" endtime="20201112 10:15:52.454"></status>
</kw>
<msg timestamp="20201112 10:15:52.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:52.430" endtime="20201112 10:15:52.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:52.458" endtime="20201112 10:15:52.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.464" endtime="20201112 10:15:52.468"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.423" endtime="20201112 10:15:52.469"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.417" endtime="20201112 10:15:52.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.487" endtime="20201112 10:15:52.799"></status>
</kw>
<msg timestamp="20201112 10:15:52.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041823153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041884653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:52.484" endtime="20201112 10:15:52.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041823153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041884653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:52.808" endtime="20201112 10:15:52.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.826" endtime="20201112 10:15:52.834"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.477" endtime="20201112 10:15:52.836"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.472" endtime="20201112 10:15:52.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:52.847" level="INFO">${RESULT} = [{'time': 0.041884653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.149999999999906e-05, 'source_diff': 6.149999999999906e-05}, {'time': 0.041960667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:52.839" endtime="20201112 10:15:52.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:52.878" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:52.849" endtime="20201112 10:15:52.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.889" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 10:15:52.887" endtime="20201112 10:15:52.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.894" level="INFO">VALUE: [6.149999999999906e-05, 6.108400000000291e-05, 6.147199999999992e-05, 6.172200000000017e-05, 6.138900000000197e-05, 6.147299999999939e-05, 6.118100000000043e-05, 6.163900000000222e-05, 6.104099999999779e-05, 6.15550000000048e-05, 6.144400000000078e-05, 6.112500000000215e-05, 6.155499999999786e-05, 6.140300000000154e-05, 6.0735999999998735e-05, 6.126399999999838e-05, 6.111100000000258e-05, 6.105600000000377e-05, 6.157000000000384e-05, 6.141700000000111e-05, 6.136199999999536e-05, 6.141600000000164e-05, 6.122300000000608e-05, 6.111099999999564e-05, 6.12499999999988e-05, 6.161099999999614e-05, 6.126399999999838e-05, 6.106900000000387e-05, 6.145800000000035e-05, 6.115300000000129e-05, 6.111099999999564e-05, 6.111100000000258e-05, 6.143100000000068e-05, 6.138900000000197e-05, 6.083300000000319e-05, 6.0735999999998735e-05, 6.165300000000179e-05, 6.145899999999982e-05, 6.133399999999622e-05, 6.072299999999864e-05, 6.0971999999999416e-05, 6.0721999999999166e-05, 6.136100000000283e-05, 6.123599999999924e-05, 6.126399999999838e-05, 6.0792000000003954e-05, 6.147199999999992e-05, 6.131899999999718e-05, 6.15279999999982e-05, 6.090300000000104e-05]</msg>
<status status="PASS" starttime="20201112 10:15:52.891" endtime="20201112 10:15:52.896"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.880" endtime="20201112 10:15:52.898"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.904" endtime="20201112 10:15:52.907"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:52.912" endtime="20201112 10:15:52.934"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.908" endtime="20201112 10:15:52.936"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.899" endtime="20201112 10:15:52.937"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.413" endtime="20201112 10:15:52.938"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.412" endtime="20201112 10:15:52.938"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.961" endtime="20201112 10:15:52.982"></status>
</kw>
<msg timestamp="20201112 10:15:52.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:52.957" endtime="20201112 10:15:52.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:52.985" endtime="20201112 10:15:52.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.991" endtime="20201112 10:15:52.995"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.950" endtime="20201112 10:15:52.997"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.945" endtime="20201112 10:15:52.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.015" endtime="20201112 10:15:53.348"></status>
</kw>
<msg timestamp="20201112 10:15:53.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042352458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042414931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:53.011" endtime="20201112 10:15:53.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042352458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042414931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:53.357" endtime="20201112 10:15:53.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.376" endtime="20201112 10:15:53.382"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.004" endtime="20201112 10:15:53.383"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.999" endtime="20201112 10:15:53.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:53.395" level="INFO">${RESULT} = [{'time': 0.042414931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.247300000000039e-05, 'source_diff': 6.247300000000039e-05}, {'time': 0.042491944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:53.386" endtime="20201112 10:15:53.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:53.426" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:53.397" endtime="20201112 10:15:53.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.436" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 10:15:53.434" endtime="20201112 10:15:53.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.442" level="INFO">VALUE: [6.247300000000039e-05, 6.222199999999373e-05, 6.198599999999999e-05, 6.255499999999886e-05, 6.25550000000058e-05, 6.184700000000376e-05, 6.261099999999714e-05, 6.2582999999998e-05, 6.267999999999552e-05, 6.177799999999845e-05, 6.201399999999913e-05, 6.180599999999759e-05, 6.193100000000118e-05, 6.236099999999689e-05, 6.273600000000074e-05, 6.241700000000211e-05, 6.227799999999895e-05, 6.211099999999664e-05, 6.217999999999502e-05, 6.177699999999897e-05, 6.218000000000196e-05, 6.22080000000011e-05, 6.195800000000085e-05, 6.206900000000487e-05, 6.263900000000322e-05, 6.251399999999963e-05, 6.268100000000193e-05, 6.201399999999913e-05, 6.218100000000143e-05, 6.179200000000495e-05, 6.198599999999999e-05, 6.248600000000049e-05, 6.18620000000028e-05, 6.205599999999784e-05, 6.234700000000426e-05, 6.199999999999956e-05, 6.199999999999956e-05, 6.2195000000001e-05, 6.17499999999993e-05, 6.216599999999545e-05, 6.188899999999553e-05, 6.265300000000279e-05, 6.256899999999843e-05, 6.201399999999913e-05, 6.24029999999956e-05, 6.211100000000358e-05, 6.19029999999951e-05, 6.194400000000128e-05, 6.215299999999535e-05, 6.22629999999999e-05]</msg>
<status status="PASS" starttime="20201112 10:15:53.439" endtime="20201112 10:15:53.443"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.427" endtime="20201112 10:15:53.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.452" endtime="20201112 10:15:53.454"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:53.460" endtime="20201112 10:15:53.481"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.456" endtime="20201112 10:15:53.483"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.447" endtime="20201112 10:15:53.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.940" endtime="20201112 10:15:53.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.939" endtime="20201112 10:15:53.486"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.508" endtime="20201112 10:15:53.529"></status>
</kw>
<msg timestamp="20201112 10:15:53.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:53.505" endtime="20201112 10:15:53.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:53.532" endtime="20201112 10:15:53.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.538" endtime="20201112 10:15:53.542"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.498" endtime="20201112 10:15:53.544"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.492" endtime="20201112 10:15:53.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.562" endtime="20201112 10:15:53.896"></status>
</kw>
<msg timestamp="20201112 10:15:53.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041589986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041653486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:53.558" endtime="20201112 10:15:53.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041589986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041653486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:53.906" endtime="20201112 10:15:53.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:53.924" endtime="20201112 10:15:53.930"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.551" endtime="20201112 10:15:53.931"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.546" endtime="20201112 10:15:53.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:53.943" level="INFO">${RESULT} = [{'time': 0.041653486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.350000000000106e-05, 'source_diff': 6.350000000000106e-05}, {'time': 0.041727431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:53.934" endtime="20201112 10:15:53.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:53.974" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:53.945" endtime="20201112 10:15:53.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.985" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 10:15:53.983" endtime="20201112 10:15:53.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:53.990" level="INFO">VALUE: [6.350000000000106e-05, 6.30279999999997e-05, 6.294500000000175e-05, 6.318100000000243e-05, 6.309799999999754e-05, 6.344400000000278e-05, 6.280599999999859e-05, 6.330499999999961e-05, 6.302700000000022e-05, 6.370799999999566e-05, 6.276399999999988e-05, 6.334700000000526e-05, 6.322200000000167e-05, 6.351299999999421e-05, 6.290300000000304e-05, 6.297200000000142e-05, 6.272200000000117e-05, 6.286100000000433e-05, 6.309699999999807e-05, 6.315199999999688e-05, 6.286100000000433e-05, 6.313799999999731e-05, 6.330499999999961e-05, 6.34159999999967e-05, 6.327700000000047e-05, 6.358399999999848e-05, 6.284699999999782e-05, 6.315299999999635e-05, 6.300000000000056e-05, 6.361099999999814e-05, 6.272199999999423e-05, 6.295799999999491e-05, 6.362500000000465e-05, 6.277799999999945e-05, 6.322199999999473e-05, 6.35280000000002e-05, 6.373600000000174e-05, 6.365299999999685e-05, 6.277699999999997e-05, 6.333300000000569e-05, 6.302700000000022e-05, 6.327799999999995e-05, 6.286100000000433e-05, 6.301400000000013e-05, 6.318100000000243e-05, 6.293099999999524e-05, 6.359799999999804e-05, 6.354199999999977e-05, 6.355599999999934e-05, 6.294500000000175e-05]</msg>
<status status="PASS" starttime="20201112 10:15:53.987" endtime="20201112 10:15:53.992"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.976" endtime="20201112 10:15:53.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.000" endtime="20201112 10:15:54.002"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:54.008" endtime="20201112 10:15:54.029"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.004" endtime="20201112 10:15:54.031"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.995" endtime="20201112 10:15:54.033"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.488" endtime="20201112 10:15:54.033"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:53.486" endtime="20201112 10:15:54.034"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.056" endtime="20201112 10:15:54.077"></status>
</kw>
<msg timestamp="20201112 10:15:54.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:54.053" endtime="20201112 10:15:54.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:54.080" endtime="20201112 10:15:54.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.086" endtime="20201112 10:15:54.090"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.046" endtime="20201112 10:15:54.092"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.040" endtime="20201112 10:15:54.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.110" endtime="20201112 10:15:54.443"></status>
</kw>
<msg timestamp="20201112 10:15:54.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041649, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041712806, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:15:54.107" endtime="20201112 10:15:54.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041649, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041712806, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:15:54.453" endtime="20201112 10:15:54.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.471" endtime="20201112 10:15:54.477"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.099" endtime="20201112 10:15:54.478"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.094" endtime="20201112 10:15:54.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:54.490" level="INFO">${RESULT} = [{'time': 0.041712806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.380599999999959e-05, 'source_diff': 6.380599999999959e-05}, {'time': 0.041788833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:54.481" endtime="20201112 10:15:54.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:54.521" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:54.492" endtime="20201112 10:15:54.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.532" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 10:15:54.530" endtime="20201112 10:15:54.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.537" level="INFO">VALUE: [6.380599999999959e-05, 6.377699999999403e-05, 6.379100000000054e-05, 6.394399999999634e-05, 6.419399999999659e-05, 6.387499999999796e-05, 6.401400000000113e-05, 6.373600000000174e-05, 6.429200000000052e-05, 6.441700000000411e-05, 6.458399999999948e-05, 6.431999999999966e-05, 6.463899999999828e-05, 6.391700000000361e-05, 6.411099999999864e-05, 6.437499999999846e-05, 6.459699999999957e-05, 6.444400000000378e-05, 6.390199999999763e-05, 6.417999999999702e-05, 6.447200000000292e-05, 6.377800000000045e-05, 6.427800000000095e-05, 6.376400000000088e-05, 6.415300000000429e-05, 6.37080000000026e-05, 6.416699999999692e-05, 6.45699999999999e-05, 6.398599999999505e-05, 6.397199999999548e-05, 6.412499999999821e-05, 6.44300000000042e-05, 6.397300000000189e-05, 6.398600000000199e-05, 6.423600000000224e-05, 6.43750000000054e-05, 6.397200000000242e-05, 6.429200000000052e-05, 6.434699999999932e-05, 6.39029999999971e-05, 6.372200000000217e-05, 6.37500000000013e-05, 6.416699999999692e-05, 6.441699999999717e-05, 6.415299999999735e-05, 6.418100000000343e-05, 6.423600000000224e-05, 6.397300000000189e-05, 6.376400000000088e-05, 6.461099999999914e-05]</msg>
<status status="PASS" starttime="20201112 10:15:54.534" endtime="20201112 10:15:54.539"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.523" endtime="20201112 10:15:54.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.547" endtime="20201112 10:15:54.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:54.555" endtime="20201112 10:15:54.576"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.551" endtime="20201112 10:15:54.578"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.542" endtime="20201112 10:15:54.580"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.036" endtime="20201112 10:15:54.580"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.035" endtime="20201112 10:15:54.581"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.603" endtime="20201112 10:15:54.624"></status>
</kw>
<msg timestamp="20201112 10:15:54.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:54.600" endtime="20201112 10:15:54.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:54.627" endtime="20201112 10:15:54.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.634" endtime="20201112 10:15:54.637"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.593" endtime="20201112 10:15:54.639"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.587" endtime="20201112 10:15:54.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.658" endtime="20201112 10:15:54.992"></status>
</kw>
<msg timestamp="20201112 10:15:54.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041666125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041731181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:54.654" endtime="20201112 10:15:54.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041666125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041731181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:55.001" endtime="20201112 10:15:55.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.020" endtime="20201112 10:15:55.027"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.647" endtime="20201112 10:15:55.029"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.642" endtime="20201112 10:15:55.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:55.041" level="INFO">${RESULT} = [{'time': 0.041731181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.505600000000084e-05, 'source_diff': 6.505600000000084e-05}, {'time': 0.041804167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:55.032" endtime="20201112 10:15:55.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:55.071" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:55.043" endtime="20201112 10:15:55.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.082" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 10:15:55.080" endtime="20201112 10:15:55.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.088" level="INFO">VALUE: [6.505600000000084e-05, 6.513900000000572e-05, 6.52080000000041e-05, 6.527699999999553e-05, 6.488899999999853e-05, 6.566600000000589e-05, 6.544400000000478e-05, 6.544399999999784e-05, 6.554200000000177e-05, 6.520799999999716e-05, 6.483399999999973e-05, 6.472199999999623e-05, 6.511099999999964e-05, 6.526400000000238e-05, 6.52500000000028e-05, 6.52909999999951e-05, 6.472300000000264e-05, 6.502700000000222e-05, 6.555600000000134e-05, 6.490199999999863e-05, 6.509700000000007e-05, 6.50830000000005e-05, 6.477800000000145e-05, 6.548600000000349e-05, 6.576399999999594e-05, 6.477800000000145e-05, 6.49029999999981e-05, 6.534700000000032e-05, 6.482000000000016e-05, 6.5195000000004e-05, 6.562499999999971e-05, 6.486199999999887e-05, 6.511199999999912e-05, 6.56950000000045e-05, 6.52080000000041e-05, 6.495799999999691e-05, 6.511099999999964e-05, 6.498600000000299e-05, 6.520799999999716e-05, 6.556899999999449e-05, 6.559700000000057e-05, 6.511099999999964e-05, 6.55280000000022e-05, 6.569499999999756e-05, 6.509799999999955e-05, 6.500000000000256e-05, 6.565300000000579e-05, 6.530600000000109e-05, 6.508299999999356e-05, 6.53479999999998e-05]</msg>
<status status="PASS" starttime="20201112 10:15:55.085" endtime="20201112 10:15:55.089"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.073" endtime="20201112 10:15:55.091"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.097" endtime="20201112 10:15:55.100"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:55.105" endtime="20201112 10:15:55.127"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.101" endtime="20201112 10:15:55.128"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.093" endtime="20201112 10:15:55.130"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.583" endtime="20201112 10:15:55.131"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.582" endtime="20201112 10:15:55.131"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.153" endtime="20201112 10:15:55.174"></status>
</kw>
<msg timestamp="20201112 10:15:55.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:55.150" endtime="20201112 10:15:55.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:55.178" endtime="20201112 10:15:55.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.184" endtime="20201112 10:15:55.187"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.143" endtime="20201112 10:15:55.189"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.137" endtime="20201112 10:15:55.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.207" endtime="20201112 10:15:55.540"></status>
</kw>
<msg timestamp="20201112 10:15:55.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041693764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04176, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 10:15:55.204" endtime="20201112 10:15:55.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041693764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04176, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 10:15:55.550" endtime="20201112 10:15:55.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.568" endtime="20201112 10:15:55.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.196" endtime="20201112 10:15:55.575"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.192" endtime="20201112 10:15:55.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:55.587" level="INFO">${RESULT} = [{'time': 0.04176, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.62359999999973e-05, 'source_diff': 6.62359999999973e-05}, {'time': 0.041836, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.5861...</msg>
<status status="PASS" starttime="20201112 10:15:55.578" endtime="20201112 10:15:55.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:55.618" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:55.589" endtime="20201112 10:15:55.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.629" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 10:15:55.626" endtime="20201112 10:15:55.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.634" level="INFO">VALUE: [6.62359999999973e-05, 6.586100000000039e-05, 6.609700000000107e-05, 6.638900000000003e-05, 6.605600000000184e-05, 6.637500000000046e-05, 6.60280000000027e-05, 6.649999999999712e-05, 6.62500000000038e-05, 6.656900000000243e-05, 6.608299999999456e-05, 6.627700000000347e-05, 6.60280000000027e-05, 6.6583000000002e-05, 6.638900000000003e-05, 6.617999999999902e-05, 6.609700000000107e-05, 6.605600000000184e-05, 6.598600000000399e-05, 6.659700000000157e-05, 6.648599999999755e-05, 6.630599999999515e-05, 6.64029999999996e-05, 6.593099999999824e-05, 6.655600000000234e-05, 6.667999999999952e-05, 6.647199999999798e-05, 6.599999999999662e-05, 6.584700000000082e-05, 6.661100000000114e-05, 6.627800000000295e-05, 6.611100000000064e-05, 6.565300000000579e-05, 6.65979999999941e-05, 6.634700000000132e-05, 6.591699999999867e-05, 6.598600000000399e-05, 6.622300000000414e-05, 6.629200000000252e-05, 6.576400000000288e-05, 6.661100000000114e-05, 6.648599999999755e-05, 6.613899999999978e-05, 6.612500000000021e-05, 6.666699999999942e-05, 6.655499999999592e-05, 6.581899999999474e-05, 6.59029999999991e-05, 6.570799999999766e-05, 6.630600000000209e-05]</msg>
<status status="PASS" starttime="20201112 10:15:55.631" endtime="20201112 10:15:55.635"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.619" endtime="20201112 10:15:55.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.643" endtime="20201112 10:15:55.646"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:55.652" endtime="20201112 10:15:55.673"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.647" endtime="20201112 10:15:55.675"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.639" endtime="20201112 10:15:55.677"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.133" endtime="20201112 10:15:55.677"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.132" endtime="20201112 10:15:55.678"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.702" endtime="20201112 10:15:55.723"></status>
</kw>
<msg timestamp="20201112 10:15:55.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:55.698" endtime="20201112 10:15:55.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:55.726" endtime="20201112 10:15:55.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.733" endtime="20201112 10:15:55.736"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.691" endtime="20201112 10:15:55.738"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.685" endtime="20201112 10:15:55.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.756" endtime="20201112 10:15:56.071"></status>
</kw>
<msg timestamp="20201112 10:15:56.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044127125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044194111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:55.752" endtime="20201112 10:15:56.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044127125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044194111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:56.081" endtime="20201112 10:15:56.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.099" endtime="20201112 10:15:56.105"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.745" endtime="20201112 10:15:56.106"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.741" endtime="20201112 10:15:56.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:56.118" level="INFO">${RESULT} = [{'time': 0.044194111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.698599999999805e-05, 'source_diff': 6.698599999999805e-05}, {'time': 0.044267167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:56.109" endtime="20201112 10:15:56.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:56.149" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:56.120" endtime="20201112 10:15:56.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.160" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 10:15:56.158" endtime="20201112 10:15:56.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.165" level="INFO">VALUE: [6.698599999999805e-05, 6.68480000000013e-05, 6.67500000000043e-05, 6.765300000000085e-05, 6.726400000000438e-05, 6.759700000000257e-05, 6.768099999999999e-05, 6.688900000000053e-05, 6.72909999999971e-05, 6.759800000000205e-05, 6.67500000000043e-05, 6.701299999999771e-05, 6.688900000000053e-05, 6.726399999999744e-05, 6.709699999999513e-05, 6.67359999999978e-05, 6.734699999999538e-05, 6.756899999999649e-05, 6.722199999999873e-05, 6.691699999999967e-05, 6.701399999999719e-05, 6.701400000000413e-05, 6.686100000000139e-05, 6.72909999999971e-05, 6.731899999999624e-05, 6.724999999999787e-05, 6.747199999999898e-05, 6.731899999999624e-05, 6.686100000000139e-05, 6.72909999999971e-05, 6.697199999999848e-05, 6.713900000000078e-05, 6.680600000000259e-05, 6.680599999999565e-05, 6.759700000000257e-05, 6.677800000000345e-05, 6.686100000000139e-05, 6.736199999999443e-05, 6.676400000000388e-05, 6.719499999999906e-05, 6.688800000000106e-05, 6.709699999999513e-05, 6.706900000000293e-05, 6.743000000000027e-05, 6.761100000000214e-05, 6.687500000000096e-05, 6.705500000000336e-05, 6.706900000000293e-05, 6.691700000000661e-05, 6.711100000000164e-05]</msg>
<status status="PASS" starttime="20201112 10:15:56.162" endtime="20201112 10:15:56.167"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.151" endtime="20201112 10:15:56.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.175" endtime="20201112 10:15:56.178"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:56.183" endtime="20201112 10:15:56.205"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.179" endtime="20201112 10:15:56.206"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.170" endtime="20201112 10:15:56.208"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.680" endtime="20201112 10:15:56.208"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.679" endtime="20201112 10:15:56.209"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.231" endtime="20201112 10:15:56.253"></status>
</kw>
<msg timestamp="20201112 10:15:56.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:56.228" endtime="20201112 10:15:56.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:56.256" endtime="20201112 10:15:56.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.262" endtime="20201112 10:15:56.266"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.221" endtime="20201112 10:15:56.267"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.215" endtime="20201112 10:15:56.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.285" endtime="20201112 10:15:56.618"></status>
</kw>
<msg timestamp="20201112 10:15:56.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041701125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041769764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:56.282" endtime="20201112 10:15:56.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041701125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041769764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:56.628" endtime="20201112 10:15:56.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.646" endtime="20201112 10:15:56.652"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.275" endtime="20201112 10:15:56.653"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.270" endtime="20201112 10:15:56.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:56.665" level="INFO">${RESULT} = [{'time': 0.041769764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.863900000000228e-05, 'source_diff': 6.863900000000228e-05}, {'time': 0.04184975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:15:56.656" endtime="20201112 10:15:56.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:56.696" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:56.667" endtime="20201112 10:15:56.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.707" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 10:15:56.704" endtime="20201112 10:15:56.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.713" level="INFO">VALUE: [6.863900000000228e-05, 6.859699999999663e-05, 6.85700000000039e-05, 6.819500000000006e-05, 6.85700000000039e-05, 6.866699999999448e-05, 6.813900000000178e-05, 6.826400000000538e-05, 6.866599999999501e-05, 6.790199999999469e-05, 6.856900000000443e-05, 6.786099999999545e-05, 6.811100000000264e-05, 6.831899999999724e-05, 6.793000000000077e-05, 6.77500000000053e-05, 6.787499999999502e-05, 6.81109999999957e-05, 6.82359999999993e-05, 6.801399999999819e-05, 6.81109999999957e-05, 6.784799999999536e-05, 6.77229999999987e-05, 6.868000000000152e-05, 6.79160000000012e-05, 6.777700000000497e-05, 6.818000000000102e-05, 6.815300000000135e-05, 6.856899999999749e-05, 6.848599999999955e-05, 6.791700000000067e-05, 6.847199999999998e-05, 6.784700000000282e-05, 6.791699999999373e-05, 6.834700000000332e-05, 6.779200000000402e-05, 6.770900000000607e-05, 6.865200000000238e-05, 6.85559999999974e-05, 6.840200000000213e-05, 6.827799999999801e-05, 6.8583000000004e-05, 6.84030000000016e-05, 6.829199999999758e-05, 6.804199999999733e-05, 6.77500000000053e-05, 6.852799999999826e-05, 6.833399999999629e-05, 6.861100000000314e-05, 6.808400000000298e-05]</msg>
<status status="PASS" starttime="20201112 10:15:56.709" endtime="20201112 10:15:56.714"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.697" endtime="20201112 10:15:56.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.723" endtime="20201112 10:15:56.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:56.731" endtime="20201112 10:15:56.753"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.727" endtime="20201112 10:15:56.755"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.718" endtime="20201112 10:15:56.756"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.211" endtime="20201112 10:15:56.757"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.210" endtime="20201112 10:15:56.757"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.780" endtime="20201112 10:15:56.802"></status>
</kw>
<msg timestamp="20201112 10:15:56.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:56.777" endtime="20201112 10:15:56.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:56.805" endtime="20201112 10:15:56.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.811" endtime="20201112 10:15:56.815"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.770" endtime="20201112 10:15:56.816"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.764" endtime="20201112 10:15:56.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.834" endtime="20201112 10:15:57.167"></status>
</kw>
<msg timestamp="20201112 10:15:57.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042250319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042319667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:56.831" endtime="20201112 10:15:57.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:57.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042250319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042319667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:57.177" endtime="20201112 10:15:57.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.196" endtime="20201112 10:15:57.203"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.824" endtime="20201112 10:15:57.205"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.819" endtime="20201112 10:15:57.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:57.217" level="INFO">${RESULT} = [{'time': 0.042319667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.934799999999686e-05, 'source_diff': 6.934799999999686e-05}, {'time': 0.042403681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:57.208" endtime="20201112 10:15:57.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:57.247" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:57.219" endtime="20201112 10:15:57.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:57.258" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 10:15:57.256" endtime="20201112 10:15:57.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:57.264" level="INFO">VALUE: [6.934799999999686e-05, 6.968100000000199e-05, 6.936199999999643e-05, 6.897299999999995e-05, 6.915199999999594e-05, 6.898600000000005e-05, 6.916599999999551e-05, 6.895800000000091e-05, 6.906900000000493e-05, 6.959700000000457e-05, 6.887499999999602e-05, 6.876399999999894e-05, 6.952799999999926e-05, 6.931999999999772e-05, 6.95280000000062e-05, 6.92360000000003e-05, 6.931999999999772e-05, 6.877699999999903e-05, 6.898600000000005e-05, 6.913800000000331e-05, 6.880500000000511e-05, 6.872200000000023e-05, 6.961100000000414e-05, 6.924999999999987e-05, 6.880599999999765e-05, 6.908299999999756e-05, 6.915300000000235e-05, 6.901399999999919e-05, 6.926399999999944e-05, 6.945900000000088e-05, 6.911199999999618e-05, 6.897200000000048e-05, 6.902699999999928e-05, 6.931900000000518e-05, 6.908299999999756e-05, 6.934699999999738e-05, 6.963899999999634e-05, 6.886100000000339e-05, 6.947200000000098e-05, 6.90830000000045e-05, 6.884700000000382e-05, 6.90979999999966e-05, 6.926399999999944e-05, 6.929200000000552e-05, 6.934700000000432e-05, 6.954199999999883e-05, 6.906999999999747e-05, 6.948700000000002e-05, 6.963900000000328e-05, 6.881899999999774e-05]</msg>
<status status="PASS" starttime="20201112 10:15:57.260" endtime="20201112 10:15:57.265"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.249" endtime="20201112 10:15:57.267"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.273" endtime="20201112 10:15:57.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:57.281" endtime="20201112 10:15:57.303"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.277" endtime="20201112 10:15:57.304"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.268" endtime="20201112 10:15:57.306"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.759" endtime="20201112 10:15:57.306"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.758" endtime="20201112 10:15:57.307"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.329" endtime="20201112 10:15:57.351"></status>
</kw>
<msg timestamp="20201112 10:15:57.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:57.326" endtime="20201112 10:15:57.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:57.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:57.354" endtime="20201112 10:15:57.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.360" endtime="20201112 10:15:57.364"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.319" endtime="20201112 10:15:57.365"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.313" endtime="20201112 10:15:57.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.383" endtime="20201112 10:15:57.717"></status>
</kw>
<msg timestamp="20201112 10:15:57.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041748597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041818694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:57.380" endtime="20201112 10:15:57.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:57.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041748597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041818694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:57.727" endtime="20201112 10:15:57.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.746" endtime="20201112 10:15:57.752"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.373" endtime="20201112 10:15:57.753"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.368" endtime="20201112 10:15:57.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:57.766" level="INFO">${RESULT} = [{'time': 0.041818694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.009699999999813e-05, 'source_diff': 7.009699999999813e-05}, {'time': 0.041903708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:57.756" endtime="20201112 10:15:57.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:57.797" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:57.768" endtime="20201112 10:15:57.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:57.808" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 10:15:57.806" endtime="20201112 10:15:57.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:57.813" level="INFO">VALUE: [7.009699999999813e-05, 6.986099999999745e-05, 6.998600000000105e-05, 7.012500000000421e-05, 6.986099999999745e-05, 7.048600000000155e-05, 7.062499999999777e-05, 6.975000000000037e-05, 6.97360000000008e-05, 7.068099999999605e-05, 6.977799999999951e-05, 7.022299999999426e-05, 7.006999999999847e-05, 7.037499999999752e-05, 6.97360000000008e-05, 7.009699999999813e-05, 7.006900000000593e-05, 6.994400000000234e-05, 7.067999999999658e-05, 6.97909999999996e-05, 7.006899999999899e-05, 6.993100000000224e-05, 7.027800000000001e-05, 7.009700000000507e-05, 7.052800000000026e-05, 6.993100000000224e-05, 7.029199999999958e-05, 6.993100000000224e-05, 7.031899999999924e-05, 7.005499999999942e-05, 7.004199999999933e-05, 7.047200000000198e-05, 7.069399999999615e-05, 7.051400000000069e-05, 7.06109999999982e-05, 7.066700000000342e-05, 7.001400000000019e-05, 7.033399999999829e-05, 7.050000000000112e-05, 7.025000000000087e-05, 7.015300000000335e-05, 6.984799999999736e-05, 7.031999999999872e-05, 7.066699999999648e-05, 7.02910000000001e-05, 7.027700000000053e-05, 7.069399999999615e-05, 7.008299999999856e-05, 6.998600000000105e-05, 6.988899999999659e-05]</msg>
<status status="PASS" starttime="20201112 10:15:57.810" endtime="20201112 10:15:57.815"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.799" endtime="20201112 10:15:57.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.823" endtime="20201112 10:15:57.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:57.831" endtime="20201112 10:15:57.853"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.827" endtime="20201112 10:15:57.854"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.818" endtime="20201112 10:15:57.856"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.309" endtime="20201112 10:15:57.856"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.308" endtime="20201112 10:15:57.857"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.879" endtime="20201112 10:15:57.901"></status>
</kw>
<msg timestamp="20201112 10:15:57.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:57.876" endtime="20201112 10:15:57.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:57.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:57.904" endtime="20201112 10:15:57.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.910" endtime="20201112 10:15:57.914"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.869" endtime="20201112 10:15:57.915"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.863" endtime="20201112 10:15:57.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.933" endtime="20201112 10:15:58.267"></status>
</kw>
<msg timestamp="20201112 10:15:58.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042132472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042203639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:57.930" endtime="20201112 10:15:58.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042132472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042203639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:58.276" endtime="20201112 10:15:58.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.295" endtime="20201112 10:15:58.301"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.923" endtime="20201112 10:15:58.302"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.918" endtime="20201112 10:15:58.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:58.314" level="INFO">${RESULT} = [{'time': 0.042203639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.116700000000392e-05, 'source_diff': 7.116700000000392e-05}, {'time': 0.042286653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:58.305" endtime="20201112 10:15:58.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:58.345" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:58.316" endtime="20201112 10:15:58.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.356" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 10:15:58.353" endtime="20201112 10:15:58.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.361" level="INFO">VALUE: [7.116700000000392e-05, 7.16109999999992e-05, 7.131999999999972e-05, 7.130600000000015e-05, 7.156999999999997e-05, 7.169399999999715e-05, 7.090199999999769e-05, 7.148600000000255e-05, 7.162499999999877e-05, 7.165299999999791e-05, 7.127800000000101e-05, 7.117999999999708e-05, 7.162499999999877e-05, 7.10559999999999e-05, 7.122200000000273e-05, 7.094499999999587e-05, 7.141699999999723e-05, 7.140299999999766e-05, 7.154200000000083e-05, 7.152800000000126e-05, 7.07910000000006e-05, 7.126300000000196e-05, 7.102800000000076e-05, 7.127800000000101e-05, 7.154099999999441e-05, 7.140299999999766e-05, 7.105500000000042e-05, 7.10559999999999e-05, 7.075000000000137e-05, 7.134699999999938e-05, 7.155500000000092e-05, 7.090299999999716e-05, 7.155500000000092e-05, 7.120799999999622e-05, 7.151400000000169e-05, 7.165199999999844e-05, 7.073599999999486e-05, 7.084699999999888e-05, 7.091699999999673e-05, 7.170900000000313e-05, 7.073599999999486e-05, 7.113899999999784e-05, 7.126400000000144e-05, 7.11109999999987e-05, 7.098600000000205e-05, 7.109699999999913e-05, 7.100000000000162e-05, 7.083399999999879e-05, 7.137499999999852e-05, 7.116600000000445e-05]</msg>
<status status="PASS" starttime="20201112 10:15:58.358" endtime="20201112 10:15:58.362"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.347" endtime="20201112 10:15:58.364"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.370" endtime="20201112 10:15:58.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:58.378" endtime="20201112 10:15:58.400"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.374" endtime="20201112 10:15:58.402"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.366" endtime="20201112 10:15:58.403"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.859" endtime="20201112 10:15:58.404"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.858" endtime="20201112 10:15:58.404"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.427" endtime="20201112 10:15:58.448"></status>
</kw>
<msg timestamp="20201112 10:15:58.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:58.423" endtime="20201112 10:15:58.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:58.451" endtime="20201112 10:15:58.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.457" endtime="20201112 10:15:58.461"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.416" endtime="20201112 10:15:58.463"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.410" endtime="20201112 10:15:58.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.480" endtime="20201112 10:15:58.817"></status>
</kw>
<msg timestamp="20201112 10:15:58.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041443708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041516306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:58.477" endtime="20201112 10:15:58.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041443708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041516306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:58.827" endtime="20201112 10:15:58.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.845" endtime="20201112 10:15:58.851"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.470" endtime="20201112 10:15:58.852"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.465" endtime="20201112 10:15:58.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:58.864" level="INFO">${RESULT} = [{'time': 0.041516306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.259800000000011e-05, 'source_diff': 7.259800000000011e-05}, {'time': 0.041591333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:58.855" endtime="20201112 10:15:58.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:58.895" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:58.867" endtime="20201112 10:15:58.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.906" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 10:15:58.904" endtime="20201112 10:15:58.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:58.911" level="INFO">VALUE: [7.259800000000011e-05, 7.216599999999851e-05, 7.270799999999772e-05, 7.223599999999636e-05, 7.197200000000348e-05, 7.2069000000001e-05, 7.193000000000477e-05, 7.19439999999974e-05, 7.241700000000517e-05, 7.227800000000201e-05, 7.234700000000038e-05, 7.207000000000047e-05, 7.202800000000176e-05, 7.193100000000424e-05, 7.186099999999945e-05, 7.197299999999601e-05, 7.236099999999995e-05, 7.215199999999894e-05, 7.201400000000219e-05, 7.224999999999593e-05, 7.209700000000013e-05, 7.195799999999697e-05, 7.198600000000305e-05, 7.20560000000009e-05, 7.238899999999909e-05, 7.170899999999619e-05, 7.232000000000072e-05, 7.177800000000151e-05, 7.25560000000014e-05, 7.22360000000033e-05, 7.251299999999627e-05, 7.259700000000063e-05, 7.272199999999729e-05, 7.197199999999654e-05, 7.227800000000201e-05, 7.236099999999995e-05, 7.208300000000056e-05, 7.207000000000047e-05, 7.233400000000029e-05, 7.236199999999943e-05, 7.220899999999669e-05, 7.234700000000038e-05, 7.230600000000115e-05, 7.223700000000277e-05, 7.183399999999979e-05, 7.236099999999995e-05, 7.238900000000603e-05, 7.247199999999704e-05, 7.213899999999884e-05, 7.231900000000124e-05]</msg>
<status status="PASS" starttime="20201112 10:15:58.908" endtime="20201112 10:15:58.913"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.897" endtime="20201112 10:15:58.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.921" endtime="20201112 10:15:58.923"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:58.929" endtime="20201112 10:15:58.950"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.925" endtime="20201112 10:15:58.952"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.916" endtime="20201112 10:15:58.954"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.406" endtime="20201112 10:15:58.954"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.405" endtime="20201112 10:15:58.955"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:58.977" endtime="20201112 10:15:58.998"></status>
</kw>
<msg timestamp="20201112 10:15:58.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:58.974" endtime="20201112 10:15:59.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:59.002" endtime="20201112 10:15:59.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.008" endtime="20201112 10:15:59.012"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.967" endtime="20201112 10:15:59.013"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.961" endtime="20201112 10:15:59.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.031" endtime="20201112 10:15:59.344"></status>
</kw>
<msg timestamp="20201112 10:15:59.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041595486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041669028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:59.028" endtime="20201112 10:15:59.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041595486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041669028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:59.349" endtime="20201112 10:15:59.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.363" endtime="20201112 10:15:59.370"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.021" endtime="20201112 10:15:59.372"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.016" endtime="20201112 10:15:59.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:59.384" level="INFO">${RESULT} = [{'time': 0.041669028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.354199999999589e-05, 'source_diff': 7.354199999999589e-05}, {'time': 0.041748042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:59.375" endtime="20201112 10:15:59.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:59.414" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:59.386" endtime="20201112 10:15:59.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.425" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 10:15:59.423" endtime="20201112 10:15:59.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.430" level="INFO">VALUE: [7.354199999999589e-05, 7.322299999999726e-05, 7.336200000000043e-05, 7.336100000000095e-05, 7.27360000000038e-05, 7.29439999999984e-05, 7.281900000000174e-05, 7.345799999999847e-05, 7.279200000000208e-05, 7.305500000000242e-05, 7.30560000000019e-05, 7.362500000000077e-05, 7.323599999999736e-05, 7.340299999999966e-05, 7.337499999999358e-05, 7.336200000000043e-05, 7.286199999999993e-05, 7.305499999999548e-05, 7.312500000000027e-05, 7.354099999999641e-05, 7.348599999999761e-05, 7.309700000000113e-05, 7.282000000000122e-05, 7.274999999999643e-05, 7.302800000000276e-05, 7.272199999999729e-05, 7.313899999999984e-05, 7.337500000000052e-05, 7.327799999999607e-05, 7.295900000000438e-05, 7.365299999999991e-05, 7.286100000000045e-05, 7.334700000000138e-05, 7.315199999999994e-05, 7.272199999999729e-05, 7.273599999999686e-05, 7.276400000000294e-05, 7.329200000000258e-05, 7.30560000000019e-05, 7.274999999999643e-05, 7.315299999999941e-05, 7.291699999999873e-05, 7.31110000000007e-05, 7.315299999999941e-05, 7.302800000000276e-05, 7.298599999999711e-05, 7.31110000000007e-05, 7.32769999999966e-05, 7.355500000000292e-05, 7.319399999999865e-05]</msg>
<status status="PASS" starttime="20201112 10:15:59.427" endtime="20201112 10:15:59.432"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.416" endtime="20201112 10:15:59.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.439" endtime="20201112 10:15:59.442"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:59.448" endtime="20201112 10:15:59.469"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.443" endtime="20201112 10:15:59.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.435" endtime="20201112 10:15:59.472"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.957" endtime="20201112 10:15:59.473"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:58.955" endtime="20201112 10:15:59.473"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.496" endtime="20201112 10:15:59.517"></status>
</kw>
<msg timestamp="20201112 10:15:59.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:59.493" endtime="20201112 10:15:59.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:59.521" endtime="20201112 10:15:59.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.527" endtime="20201112 10:15:59.530"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.485" endtime="20201112 10:15:59.532"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.480" endtime="20201112 10:15:59.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.550" endtime="20201112 10:15:59.884"></status>
</kw>
<msg timestamp="20201112 10:15:59.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041583306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041657278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:59.547" endtime="20201112 10:15:59.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041583306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041657278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:59.894" endtime="20201112 10:15:59.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.913" endtime="20201112 10:15:59.918"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.539" endtime="20201112 10:15:59.919"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.535" endtime="20201112 10:15:59.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:59.932" level="INFO">${RESULT} = [{'time': 0.041657278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.397199999999854e-05, 'source_diff': 7.397199999999854e-05}, {'time': 0.041743236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:59.923" endtime="20201112 10:15:59.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:59.962" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:15:59.934" endtime="20201112 10:15:59.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.973" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 10:15:59.971" endtime="20201112 10:15:59.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.978" level="INFO">VALUE: [7.397199999999854e-05, 7.459700000000263e-05, 7.433299999999587e-05, 7.424999999999793e-05, 7.40560000000029e-05, 7.387500000000102e-05, 7.459700000000263e-05, 7.42639999999975e-05, 7.447299999999851e-05, 7.390199999999375e-05, 7.473599999999886e-05, 7.372199999999829e-05, 7.438900000000109e-05, 7.442999999999339e-05, 7.445800000000641e-05, 7.388900000000059e-05, 7.398600000000505e-05, 7.418000000000008e-05, 7.434699999999544e-05, 7.444499999999937e-05, 7.377800000000351e-05, 7.37230000000047e-05, 7.437500000000152e-05, 7.46110000000022e-05, 7.430499999999673e-05, 7.44439999999999e-05, 7.386100000000145e-05, 7.468000000000058e-05, 7.377799999999657e-05, 7.443000000000033e-05, 7.465300000000091e-05, 7.468099999999311e-05, 7.376400000000394e-05, 7.413900000000084e-05, 7.41110000000017e-05, 7.429200000000358e-05, 7.44439999999999e-05, 7.42769999999976e-05, 7.466600000000101e-05, 7.422200000000573e-05, 7.398600000000505e-05, 7.415300000000041e-05, 7.380500000000317e-05, 7.390300000000016e-05, 7.422200000000573e-05, 7.404199999999639e-05, 7.374999999999743e-05, 7.408400000000204e-05, 7.404199999999639e-05, 7.419500000000606e-05]</msg>
<status status="PASS" starttime="20201112 10:15:59.975" endtime="20201112 10:15:59.986"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.964" endtime="20201112 10:15:59.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.994" endtime="20201112 10:15:59.996"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:00.002" endtime="20201112 10:16:00.024"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.998" endtime="20201112 10:16:00.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.989" endtime="20201112 10:16:00.027"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.475" endtime="20201112 10:16:00.028"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.474" endtime="20201112 10:16:00.028"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.050" endtime="20201112 10:16:00.073"></status>
</kw>
<msg timestamp="20201112 10:16:00.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:00.047" endtime="20201112 10:16:00.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:00.076" endtime="20201112 10:16:00.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.082" endtime="20201112 10:16:00.086"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.040" endtime="20201112 10:16:00.088"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.034" endtime="20201112 10:16:00.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.105" endtime="20201112 10:16:00.438"></status>
</kw>
<msg timestamp="20201112 10:16:00.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041844403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041919611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:00.102" endtime="20201112 10:16:00.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041844403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041919611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:00.448" endtime="20201112 10:16:00.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.466" endtime="20201112 10:16:00.472"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.095" endtime="20201112 10:16:00.473"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.090" endtime="20201112 10:16:00.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:00.485" level="INFO">${RESULT} = [{'time': 0.041919611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.520800000000022e-05, 'source_diff': 7.520800000000022e-05}, {'time': 0.041999625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:00.476" endtime="20201112 10:16:00.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:00.516" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:00.487" endtime="20201112 10:16:00.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.527" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 10:16:00.524" endtime="20201112 10:16:00.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.532" level="INFO">VALUE: [7.520800000000022e-05, 7.506899999999705e-05, 7.490300000000116e-05, 7.570900000000019e-05, 7.552799999999832e-05, 7.486099999999551e-05, 7.477799999999757e-05, 7.541600000000176e-05, 7.483399999999585e-05, 7.537499999999558e-05, 7.554099999999841e-05, 7.547200000000004e-05, 7.534699999999644e-05, 7.50969999999962e-05, 7.52639999999985e-05, 7.487499999999508e-05, 7.490300000000116e-05, 7.53890000000021e-05, 7.555599999999746e-05, 7.544500000000037e-05, 7.562499999999583e-05, 7.536200000000243e-05, 7.49440000000004e-05, 7.526300000000596e-05, 7.515300000000141e-05, 7.527799999999807e-05, 7.473599999999886e-05, 7.498599999999911e-05, 7.536099999999601e-05, 7.531999999999678e-05, 7.487500000000202e-05, 7.53890000000021e-05, 7.527799999999807e-05, 7.519500000000012e-05, 7.569499999999368e-05, 7.53890000000021e-05, 7.533299999999687e-05, 7.52639999999985e-05, 7.515200000000194e-05, 7.501399999999825e-05, 7.559700000000363e-05, 7.51110000000027e-05, 7.568100000000105e-05, 7.497199999999954e-05, 7.502800000000476e-05, 7.520899999999969e-05, 7.480600000000365e-05, 7.481900000000374e-05, 7.520899999999969e-05, 7.501399999999825e-05]</msg>
<status status="PASS" starttime="20201112 10:16:00.529" endtime="20201112 10:16:00.534"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.518" endtime="20201112 10:16:00.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.542" endtime="20201112 10:16:00.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:00.550" endtime="20201112 10:16:00.571"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.546" endtime="20201112 10:16:00.573"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.537" endtime="20201112 10:16:00.575"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.030" endtime="20201112 10:16:00.575"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.029" endtime="20201112 10:16:00.576"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.598" endtime="20201112 10:16:00.620"></status>
</kw>
<msg timestamp="20201112 10:16:00.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:00.595" endtime="20201112 10:16:00.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:00.623" endtime="20201112 10:16:00.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.629" endtime="20201112 10:16:00.633"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.588" endtime="20201112 10:16:00.634"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.582" endtime="20201112 10:16:00.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.652" endtime="20201112 10:16:00.987"></status>
</kw>
<msg timestamp="20201112 10:16:00.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041639792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041716264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:00.649" endtime="20201112 10:16:00.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041639792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041716264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:00.996" endtime="20201112 10:16:01.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.015" endtime="20201112 10:16:01.020"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.642" endtime="20201112 10:16:01.022"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.637" endtime="20201112 10:16:01.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:01.034" level="INFO">${RESULT} = [{'time': 0.041716264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.647200000000104e-05, 'source_diff': 7.647200000000104e-05}, {'time': 0.041795278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:01.025" endtime="20201112 10:16:01.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:01.064" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:01.036" endtime="20201112 10:16:01.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.075" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 10:16:01.073" endtime="20201112 10:16:01.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.080" level="INFO">VALUE: [7.647200000000104e-05, 7.636099999999701e-05, 7.597300000000001e-05, 7.61389999999959e-05, 7.630599999999821e-05, 7.651399999999975e-05, 7.640199999999625e-05, 7.62769999999996e-05, 7.615299999999547e-05, 7.648600000000061e-05, 7.598600000000011e-05, 7.572200000000029e-05, 7.584700000000388e-05, 7.644500000000137e-05, 7.652800000000626e-05, 7.590300000000216e-05, 7.58890000000026e-05, 7.651399999999975e-05, 7.616700000000198e-05, 7.602699999999935e-05, 7.570800000000072e-05, 7.608300000000456e-05, 7.5763999999999e-05, 7.648600000000061e-05, 7.577800000000551e-05, 7.659700000000463e-05, 7.666700000000248e-05, 7.58890000000026e-05, 7.651399999999975e-05, 7.598600000000011e-05, 7.594500000000087e-05, 7.61110000000037e-05, 7.591700000000173e-05, 7.579099999999866e-05, 7.601299999999978e-05, 7.63189999999983e-05, 7.60969999999972e-05, 7.609700000000413e-05, 7.609700000000413e-05, 7.666699999999554e-05, 7.643099999999486e-05, 7.645900000000094e-05, 7.626400000000644e-05, 7.586099999999651e-05, 7.573599999999986e-05, 7.622300000000026e-05, 7.668100000000205e-05, 7.598600000000011e-05, 7.595800000000097e-05, 7.602699999999935e-05]</msg>
<status status="PASS" starttime="20201112 10:16:01.077" endtime="20201112 10:16:01.082"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.066" endtime="20201112 10:16:01.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.090" endtime="20201112 10:16:01.094"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:01.100" endtime="20201112 10:16:01.123"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.095" endtime="20201112 10:16:01.125"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.085" endtime="20201112 10:16:01.127"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.578" endtime="20201112 10:16:01.127"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.577" endtime="20201112 10:16:01.128"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.155" endtime="20201112 10:16:01.179"></status>
</kw>
<msg timestamp="20201112 10:16:01.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:01.151" endtime="20201112 10:16:01.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:01.183" endtime="20201112 10:16:01.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.191" endtime="20201112 10:16:01.195"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.143" endtime="20201112 10:16:01.197"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.136" endtime="20201112 10:16:01.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.219" endtime="20201112 10:16:01.556"></status>
</kw>
<msg timestamp="20201112 10:16:01.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048940347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049017347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:01.215" endtime="20201112 10:16:01.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048940347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049017347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:01.566" endtime="20201112 10:16:01.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.584" endtime="20201112 10:16:01.592"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.207" endtime="20201112 10:16:01.593"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.200" endtime="20201112 10:16:01.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:01.605" level="INFO">${RESULT} = [{'time': 0.049017347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.700000000000068e-05, 'source_diff': 7.700000000000068e-05}, {'time': 0.049098361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:01.596" endtime="20201112 10:16:01.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:01.636" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:01.607" endtime="20201112 10:16:01.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.647" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 10:16:01.644" endtime="20201112 10:16:01.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.652" level="INFO">VALUE: [7.700000000000068e-05, 7.691700000000273e-05, 7.690299999999622e-05, 7.76389999999974e-05, 7.690300000000316e-05, 7.675000000000043e-05, 7.697200000000154e-05, 7.765300000000391e-05, 7.734800000000486e-05, 7.758300000000606e-05, 7.768000000000358e-05, 7.701300000000078e-05, 7.692999999999589e-05, 7.713900000000384e-05, 7.701400000000025e-05, 7.680499999999923e-05, 7.715299999999647e-05, 7.766699999999654e-05, 7.727800000000007e-05, 7.718100000000255e-05, 7.690300000000316e-05, 7.747200000000204e-05, 7.745900000000194e-05, 7.70969999999982e-05, 7.706899999999905e-05, 7.740199999999725e-05, 7.71110000000047e-05, 7.684699999999794e-05, 7.711099999999776e-05, 7.752800000000032e-05, 7.69169999999958e-05, 7.75969999999987e-05, 7.673599999999392e-05, 7.698599999999417e-05, 7.730599999999921e-05, 7.744500000000237e-05, 7.72640000000005e-05, 7.71389999999969e-05, 7.686099999999751e-05, 7.673600000000086e-05, 7.673600000000086e-05, 7.677799999999957e-05, 7.702799999999982e-05, 7.690300000000316e-05, 7.740299999999672e-05, 7.705599999999896e-05, 7.740300000000366e-05, 7.744500000000237e-05, 7.71110000000047e-05, 7.684799999999742e-05]</msg>
<status status="PASS" starttime="20201112 10:16:01.649" endtime="20201112 10:16:01.653"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.637" endtime="20201112 10:16:01.655"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.661" endtime="20201112 10:16:01.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:01.669" endtime="20201112 10:16:01.691"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.665" endtime="20201112 10:16:01.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.657" endtime="20201112 10:16:01.694"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.130" endtime="20201112 10:16:01.695"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.129" endtime="20201112 10:16:01.695"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.718" endtime="20201112 10:16:01.738"></status>
</kw>
<msg timestamp="20201112 10:16:01.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:01.714" endtime="20201112 10:16:01.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:01.742" endtime="20201112 10:16:01.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.748" endtime="20201112 10:16:01.752"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.707" endtime="20201112 10:16:01.753"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.702" endtime="20201112 10:16:01.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.771" endtime="20201112 10:16:02.108"></status>
</kw>
<msg timestamp="20201112 10:16:02.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041626222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04170475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:16:01.768" endtime="20201112 10:16:02.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041626222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04170475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:16:02.117" endtime="20201112 10:16:02.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.136" endtime="20201112 10:16:02.142"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.761" endtime="20201112 10:16:02.143"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.756" endtime="20201112 10:16:02.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:02.155" level="INFO">${RESULT} = [{'time': 0.04170475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.852800000000132e-05, 'source_diff': 7.852800000000132e-05}, {'time': 0.041789764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:16:02.146" endtime="20201112 10:16:02.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:02.186" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:02.157" endtime="20201112 10:16:02.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.196" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 10:16:02.194" endtime="20201112 10:16:02.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.202" level="INFO">VALUE: [7.852800000000132e-05, 7.798600000000211e-05, 7.781999999999928e-05, 7.830600000000021e-05, 7.861099999999926e-05, 7.791700000000373e-05, 7.855500000000099e-05, 7.83190000000003e-05, 7.851399999999481e-05, 7.845799999999653e-05, 7.856899999999362e-05, 7.833299999999987e-05, 7.834699999999944e-05, 7.804100000000092e-05, 7.806999999999953e-05, 7.772199999999535e-05, 7.850000000000218e-05, 7.855500000000099e-05, 7.78890000000046e-05, 7.816600000000451e-05, 7.868000000000458e-05, 7.838799999999868e-05, 7.780500000000024e-05, 7.825000000000193e-05, 7.855500000000099e-05, 7.798600000000211e-05, 7.852800000000132e-05, 7.79169999999968e-05, 7.802800000000082e-05, 7.837500000000552e-05, 7.822199999999585e-05, 7.831999999999978e-05, 7.779100000000067e-05, 7.79719999999956e-05, 7.780500000000024e-05, 7.805500000000049e-05, 7.779100000000067e-05, 7.858300000000012e-05, 7.802800000000082e-05, 7.813900000000484e-05, 7.815299999999747e-05, 7.818099999999661e-05, 7.834699999999944e-05, 7.861099999999926e-05, 7.775000000000143e-05, 7.834799999999892e-05, 7.811099999999876e-05, 7.815200000000494e-05, 7.837500000000552e-05, 7.791599999999732e-05]</msg>
<status status="PASS" starttime="20201112 10:16:02.199" endtime="20201112 10:16:02.203"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.187" endtime="20201112 10:16:02.205"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.211" endtime="20201112 10:16:02.214"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:02.219" endtime="20201112 10:16:02.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.215" endtime="20201112 10:16:02.243"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.207" endtime="20201112 10:16:02.244"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.697" endtime="20201112 10:16:02.245"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.696" endtime="20201112 10:16:02.245"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.267" endtime="20201112 10:16:02.290"></status>
</kw>
<msg timestamp="20201112 10:16:02.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:02.264" endtime="20201112 10:16:02.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:02.293" endtime="20201112 10:16:02.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.299" endtime="20201112 10:16:02.303"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.257" endtime="20201112 10:16:02.304"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.251" endtime="20201112 10:16:02.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.322" endtime="20201112 10:16:02.654"></status>
</kw>
<msg timestamp="20201112 10:16:02.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042111403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042190236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:02.319" endtime="20201112 10:16:02.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042111403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042190236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:02.658" endtime="20201112 10:16:02.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.667" endtime="20201112 10:16:02.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.312" endtime="20201112 10:16:02.670"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.307" endtime="20201112 10:16:02.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:02.676" level="INFO">${RESULT} = [{'time': 0.042190236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.883300000000037e-05, 'source_diff': 7.883300000000037e-05}, {'time': 0.04227725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:16:02.672" endtime="20201112 10:16:02.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:02.689" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:02.677" endtime="20201112 10:16:02.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.694" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 10:16:02.693" endtime="20201112 10:16:02.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.697" level="INFO">VALUE: [7.883300000000037e-05, 7.912499999999933e-05, 7.875000000000243e-05, 7.968099999999811e-05, 7.911099999999976e-05, 7.929200000000164e-05, 7.917999999999814e-05, 7.923599999999642e-05, 7.933300000000088e-05, 7.90970000000002e-05, 7.930500000000174e-05, 7.888899999999865e-05, 7.886099999999951e-05, 7.873599999999592e-05, 7.891700000000473e-05, 7.911099999999976e-05, 7.90970000000002e-05, 7.905600000000096e-05, 7.952800000000232e-05, 7.920899999999675e-05, 7.925000000000293e-05, 7.961100000000026e-05, 7.9151999999999e-05, 7.96519999999995e-05, 7.898599999999617e-05, 7.948600000000361e-05, 7.937499999999958e-05, 7.883300000000037e-05, 7.949999999999624e-05, 7.934700000000044e-05, 7.934700000000044e-05, 7.92640000000025e-05, 7.872300000000276e-05, 7.949999999999624e-05, 7.96519999999995e-05, 7.880500000000124e-05, 7.90970000000002e-05, 7.969400000000515e-05, 7.947200000000404e-05, 7.90970000000002e-05, 7.890299999999822e-05, 7.890299999999822e-05, 7.912499999999933e-05, 7.890300000000516e-05, 7.901400000000225e-05, 7.965299999999897e-05, 7.906999999999359e-05, 7.90269999999954e-05, 7.962499999999983e-05, 7.930500000000174e-05]</msg>
<status status="PASS" starttime="20201112 10:16:02.696" endtime="20201112 10:16:02.698"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.690" endtime="20201112 10:16:02.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.702" endtime="20201112 10:16:02.703"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:02.705" endtime="20201112 10:16:02.725"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.703" endtime="20201112 10:16:02.726"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.699" endtime="20201112 10:16:02.726"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.247" endtime="20201112 10:16:02.727"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.246" endtime="20201112 10:16:02.727"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.737" endtime="20201112 10:16:02.756"></status>
</kw>
<msg timestamp="20201112 10:16:02.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:02.736" endtime="20201112 10:16:02.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:02.758" endtime="20201112 10:16:02.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.760" endtime="20201112 10:16:02.762"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.733" endtime="20201112 10:16:02.763"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.730" endtime="20201112 10:16:02.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.771" endtime="20201112 10:16:03.113"></status>
</kw>
<msg timestamp="20201112 10:16:03.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024820917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024901014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:02.770" endtime="20201112 10:16:03.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:03.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024820917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024901014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:03.122" endtime="20201112 10:16:03.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:03.141" endtime="20201112 10:16:03.146"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.766" endtime="20201112 10:16:03.148"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.764" endtime="20201112 10:16:03.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:03.160" level="INFO">${RESULT} = [{'time': 0.024901014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.009699999999773e-05, 'source_diff': 8.009699999999773e-05}, {'time': 0.024996014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:03.151" endtime="20201112 10:16:03.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:03.191" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:03.162" endtime="20201112 10:16:03.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:03.201" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 10:16:03.199" endtime="20201112 10:16:03.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:03.207" level="INFO">VALUE: [8.009699999999773e-05, 8.04450000000019e-05, 7.99169999999988e-05, 7.993100000000183e-05, 7.983400000000085e-05, 8.062500000000083e-05, 8.052799999999985e-05, 8.055600000000246e-05, 8.030499999999927e-05, 7.977699999999963e-05, 8.061100000000126e-05, 7.99450000000014e-05, 7.979199999999867e-05, 8.00970000000012e-05, 7.995799999999803e-05, 7.982000000000128e-05, 8.066700000000301e-05, 8.011200000000024e-05, 8.029200000000264e-05, 7.980499999999877e-05, 8.016599999999957e-05, 8.062499999999737e-05, 7.998600000000064e-05, 8.038900000000015e-05, 8.02779999999996e-05, 7.997200000000107e-05, 8.055599999999899e-05, 8.036100000000101e-05, 8.054199999999942e-05, 8.01389999999999e-05, 8.056999999999856e-05, 8.004200000000239e-05, 8.049999999999724e-05, 8.048600000000114e-05, 8.04719999999981e-05, 8.000000000000021e-05, 7.995799999999803e-05, 8.02779999999996e-05, 8.037500000000058e-05, 7.998600000000064e-05, 8.052799999999985e-05, 8.007000000000153e-05, 8.04719999999981e-05, 8.008399999999763e-05, 7.976399999999953e-05, 7.97230000000003e-05, 7.994400000000193e-05, 7.998600000000064e-05, 8.026300000000056e-05, 7.982000000000128e-05]</msg>
<status status="PASS" starttime="20201112 10:16:03.204" endtime="20201112 10:16:03.208"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.192" endtime="20201112 10:16:03.210"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:03.216" endtime="20201112 10:16:03.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:03.224" endtime="20201112 10:16:03.246"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.220" endtime="20201112 10:16:03.248"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.212" endtime="20201112 10:16:03.249"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.728" endtime="20201112 10:16:03.250"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.727" endtime="20201112 10:16:03.250"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:03.273" endtime="20201112 10:16:03.295"></status>
</kw>
<msg timestamp="20201112 10:16:03.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:03.269" endtime="20201112 10:16:03.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:03.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:03.299" endtime="20201112 10:16:03.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:03.305" endtime="20201112 10:16:03.308"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.262" endtime="20201112 10:16:03.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.257" endtime="20201112 10:16:03.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:03.328" endtime="20201112 10:16:03.672"></status>
</kw>
<msg timestamp="20201112 10:16:03.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041989125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042070333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:03.325" endtime="20201112 10:16:03.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:03.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041989125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042070333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:03.681" endtime="20201112 10:16:03.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:03.700" endtime="20201112 10:16:03.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.317" endtime="20201112 10:16:03.709"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.313" endtime="20201112 10:16:03.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:03.721" level="INFO">${RESULT} = [{'time': 0.042070333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.120799999999928e-05, 'source_diff': 8.120799999999928e-05}, {'time': 0.042162333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:03.712" endtime="20201112 10:16:03.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:03.751" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:03.723" endtime="20201112 10:16:03.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:03.762" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 10:16:03.760" endtime="20201112 10:16:03.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:03.767" level="INFO">VALUE: [8.120799999999928e-05, 8.120800000000622e-05, 8.105500000000349e-05, 8.101399999999731e-05, 8.084700000000195e-05, 8.099999999999774e-05, 8.120899999999875e-05, 8.158399999999566e-05, 8.09719999999986e-05, 8.137500000000158e-05, 8.134800000000192e-05, 8.113800000000143e-05, 8.08190000000028e-05, 8.07919999999962e-05, 8.137500000000158e-05, 8.13049999999968e-05, 8.141699999999336e-05, 8.133399999999541e-05, 8.168100000000011e-05, 8.154200000000389e-05, 8.090199999999381e-05, 8.130600000000321e-05, 8.079200000000314e-05, 8.082000000000228e-05, 8.099999999999774e-05, 8.144399999999996e-05, 8.148599999999867e-05, 8.101399999999731e-05, 8.14719999999991e-05, 8.097299999999807e-05, 8.166700000000054e-05, 8.095799999999903e-05, 8.119500000000612e-05, 8.155600000000346e-05, 8.107000000000253e-05, 8.104200000000339e-05, 8.132000000000278e-05, 8.079099999999673e-05, 8.105500000000349e-05, 8.088900000000065e-05, 8.133300000000288e-05, 8.140300000000072e-05, 8.080500000000324e-05, 8.16249999999949e-05, 8.136100000000202e-05, 8.11390000000009e-05, 8.127799999999713e-05, 8.170899999999925e-05, 8.080600000000271e-05, 8.124999999999799e-05]</msg>
<status status="PASS" starttime="20201112 10:16:03.764" endtime="20201112 10:16:03.769"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.753" endtime="20201112 10:16:03.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:03.777" endtime="20201112 10:16:03.780"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:03.786" endtime="20201112 10:16:03.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.781" endtime="20201112 10:16:03.809"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.773" endtime="20201112 10:16:03.811"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.252" endtime="20201112 10:16:03.811"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.251" endtime="20201112 10:16:03.812"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:03.834" endtime="20201112 10:16:03.855"></status>
</kw>
<msg timestamp="20201112 10:16:03.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:03.831" endtime="20201112 10:16:03.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:03.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:03.858" endtime="20201112 10:16:03.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:03.865" endtime="20201112 10:16:03.868"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.823" endtime="20201112 10:16:03.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.818" endtime="20201112 10:16:03.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:03.888" endtime="20201112 10:16:04.223"></status>
</kw>
<msg timestamp="20201112 10:16:04.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041771653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041853917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:03.884" endtime="20201112 10:16:04.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041771653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041853917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:04.233" endtime="20201112 10:16:04.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.251" endtime="20201112 10:16:04.258"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.877" endtime="20201112 10:16:04.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.873" endtime="20201112 10:16:04.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:04.273" level="INFO">${RESULT} = [{'time': 0.041853917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.226399999999856e-05, 'source_diff': 8.226399999999856e-05}, {'time': 0.041947944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:04.264" endtime="20201112 10:16:04.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:04.304" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:04.275" endtime="20201112 10:16:04.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.315" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 10:16:04.313" endtime="20201112 10:16:04.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.320" level="INFO">VALUE: [8.226399999999856e-05, 8.220800000000028e-05, 8.215300000000147e-05, 8.256899999999762e-05, 8.190200000000175e-05, 8.1764000000005e-05, 8.19719999999996e-05, 8.208300000000363e-05, 8.26249999999959e-05, 8.186099999999558e-05, 8.19170000000008e-05, 8.188900000000165e-05, 8.204200000000439e-05, 8.177799999999763e-05, 8.218000000000114e-05, 8.255599999999752e-05, 8.206900000000406e-05, 8.172199999999935e-05, 8.240300000000172e-05, 8.188899999999472e-05, 8.17919999999972e-05, 8.218000000000114e-05, 8.268100000000111e-05, 8.248599999999967e-05, 8.229200000000464e-05, 8.176399999999806e-05, 8.174999999999849e-05, 8.184700000000295e-05, 8.192999999999395e-05, 8.193000000000089e-05, 8.269400000000121e-05, 8.206899999999712e-05, 8.266600000000207e-05, 8.237500000000259e-05, 8.190300000000122e-05, 8.261099999999633e-05, 8.20840000000031e-05, 8.202800000000482e-05, 8.268100000000111e-05, 8.176399999999806e-05, 8.187500000000208e-05, 8.2152000000002e-05, 8.222199999999985e-05, 8.241599999999488e-05, 8.224999999999899e-05, 8.184700000000295e-05, 8.201399999999831e-05, 8.266700000000154e-05, 8.222199999999985e-05, 8.256999999999709e-05]</msg>
<status status="PASS" starttime="20201112 10:16:04.317" endtime="20201112 10:16:04.322"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.306" endtime="20201112 10:16:04.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.330" endtime="20201112 10:16:04.333"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:04.338" endtime="20201112 10:16:04.359"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.334" endtime="20201112 10:16:04.361"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.325" endtime="20201112 10:16:04.363"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.814" endtime="20201112 10:16:04.363"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:03.812" endtime="20201112 10:16:04.364"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.386" endtime="20201112 10:16:04.408"></status>
</kw>
<msg timestamp="20201112 10:16:04.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:04.383" endtime="20201112 10:16:04.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:04.412" endtime="20201112 10:16:04.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.418" endtime="20201112 10:16:04.422"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.376" endtime="20201112 10:16:04.423"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.370" endtime="20201112 10:16:04.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.441" endtime="20201112 10:16:04.775"></status>
</kw>
<msg timestamp="20201112 10:16:04.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041883236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041966792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:04.438" endtime="20201112 10:16:04.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041883236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041966792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:04.785" endtime="20201112 10:16:04.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.803" endtime="20201112 10:16:04.809"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.431" endtime="20201112 10:16:04.811"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.426" endtime="20201112 10:16:04.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:04.823" level="INFO">${RESULT} = [{'time': 0.041966792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.355600000000546e-05, 'source_diff': 8.355600000000546e-05}, {'time': 0.042063792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:04.814" endtime="20201112 10:16:04.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:04.853" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:04.825" endtime="20201112 10:16:04.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.864" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 10:16:04.862" endtime="20201112 10:16:04.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.870" level="INFO">VALUE: [8.355600000000546e-05, 8.309800000000367e-05, 8.323600000000042e-05, 8.370800000000178e-05, 8.304199999999845e-05, 8.288899999999572e-05, 8.365300000000297e-05, 8.33049999999988e-05, 8.330599999999827e-05, 8.345899999999407e-05, 8.36249999999969e-05, 8.36390000000034e-05, 8.315300000000247e-05, 8.323600000000042e-05, 8.318100000000161e-05, 8.351399999999981e-05, 8.34999999999933e-05, 8.316599999999563e-05, 8.368000000000264e-05, 8.305500000000549e-05, 8.333300000000488e-05, 8.287499999999615e-05, 8.277799999999863e-05, 8.312500000000334e-05, 8.352799999999938e-05, 8.370900000000125e-05, 8.318100000000161e-05, 8.368000000000264e-05, 8.327699999999966e-05, 8.290200000000275e-05, 8.288899999999572e-05, 8.340299999999579e-05, 8.274999999999949e-05, 8.32919999999987e-05, 8.276399999999906e-05, 8.361099999999733e-05, 8.284700000000395e-05, 8.319400000000171e-05, 8.344500000000143e-05, 8.320800000000128e-05, 8.350000000000024e-05, 8.276299999999959e-05, 8.305499999999855e-05, 8.277800000000557e-05, 8.27919999999982e-05, 8.308299999999769e-05, 8.369399999999527e-05, 8.345799999999459e-05, 8.298600000000017e-05, 8.304199999999845e-05]</msg>
<status status="PASS" starttime="20201112 10:16:04.867" endtime="20201112 10:16:04.871"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.855" endtime="20201112 10:16:04.873"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.879" endtime="20201112 10:16:04.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:04.887" endtime="20201112 10:16:04.909"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.883" endtime="20201112 10:16:04.911"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.875" endtime="20201112 10:16:04.912"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.366" endtime="20201112 10:16:04.913"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.365" endtime="20201112 10:16:04.913"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.936" endtime="20201112 10:16:04.958"></status>
</kw>
<msg timestamp="20201112 10:16:04.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:04.932" endtime="20201112 10:16:04.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:04.961" endtime="20201112 10:16:04.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.967" endtime="20201112 10:16:04.971"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.925" endtime="20201112 10:16:04.973"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.919" endtime="20201112 10:16:04.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.991" endtime="20201112 10:16:05.327"></status>
</kw>
<msg timestamp="20201112 10:16:05.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042226111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042310569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:04.988" endtime="20201112 10:16:05.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:05.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042226111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042310569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:05.336" endtime="20201112 10:16:05.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:05.355" endtime="20201112 10:16:05.361"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.980" endtime="20201112 10:16:05.362"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.975" endtime="20201112 10:16:05.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:05.374" level="INFO">${RESULT} = [{'time': 0.042310569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.445800000000253e-05, 'source_diff': 8.445800000000253e-05}, {'time': 0.042409583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:05.365" endtime="20201112 10:16:05.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:05.405" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:05.376" endtime="20201112 10:16:05.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:05.416" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 10:16:05.413" endtime="20201112 10:16:05.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:05.421" level="INFO">VALUE: [8.445800000000253e-05, 8.386099999999758e-05, 8.458299999999919e-05, 8.465299999999704e-05, 8.433299999999894e-05, 8.386099999999758e-05, 8.401400000000031e-05, 8.393000000000289e-05, 8.419500000000218e-05, 8.3944999999995e-05, 8.423600000000142e-05, 8.444400000000296e-05, 8.405499999999955e-05, 8.372200000000135e-05, 8.393099999999543e-05, 8.455500000000005e-05, 8.398600000000117e-05, 8.381899999999887e-05, 8.440299999999679e-05, 8.466600000000407e-05, 8.394399999999552e-05, 8.444500000000243e-05, 8.376400000000006e-05, 8.459799999999823e-05, 8.415199999999706e-05, 8.42919999999997e-05, 8.466600000000407e-05, 8.456899999999962e-05, 8.451400000000081e-05, 8.384700000000495e-05, 8.430599999999927e-05, 8.440299999999679e-05, 8.41669999999961e-05, 8.413899999999697e-05, 8.376400000000006e-05, 8.415299999999654e-05, 8.436099999999808e-05, 8.40970000000052e-05, 8.386099999999758e-05, 8.416599999999663e-05, 8.377799999999963e-05, 8.392999999999595e-05, 8.431899999999937e-05, 8.456999999999909e-05, 8.422200000000185e-05, 8.437499999999765e-05, 8.376400000000006e-05, 8.441599999999688e-05, 8.406899999999912e-05, 8.393000000000289e-05]</msg>
<status status="PASS" starttime="20201112 10:16:05.418" endtime="20201112 10:16:05.422"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.406" endtime="20201112 10:16:05.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:05.430" endtime="20201112 10:16:05.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:05.439" endtime="20201112 10:16:05.460"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.434" endtime="20201112 10:16:05.462"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.426" endtime="20201112 10:16:05.463"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.915" endtime="20201112 10:16:05.464"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.914" endtime="20201112 10:16:05.464"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:05.487" endtime="20201112 10:16:05.509"></status>
</kw>
<msg timestamp="20201112 10:16:05.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:05.483" endtime="20201112 10:16:05.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:05.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:05.512" endtime="20201112 10:16:05.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:05.518" endtime="20201112 10:16:05.522"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.476" endtime="20201112 10:16:05.524"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.471" endtime="20201112 10:16:05.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:05.542" endtime="20201112 10:16:05.875"></status>
</kw>
<msg timestamp="20201112 10:16:05.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041625417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041711069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:05.539" endtime="20201112 10:16:05.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:05.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041625417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041711069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:05.884" endtime="20201112 10:16:05.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:05.903" endtime="20201112 10:16:05.910"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.531" endtime="20201112 10:16:05.912"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.526" endtime="20201112 10:16:05.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:05.924" level="INFO">${RESULT} = [{'time': 0.041711069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.56520000000055e-05, 'source_diff': 8.56520000000055e-05}, {'time': 0.041803028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:16:05.915" endtime="20201112 10:16:05.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:05.955" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:05.926" endtime="20201112 10:16:05.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:05.965" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 10:16:05.963" endtime="20201112 10:16:05.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:05.971" level="INFO">VALUE: [8.56520000000055e-05, 8.495899999999557e-05, 8.476400000000106e-05, 8.523600000000242e-05, 8.565299999999804e-05, 8.486099999999858e-05, 8.475000000000149e-05, 8.526400000000156e-05, 8.523600000000242e-05, 8.537500000000559e-05, 8.551400000000181e-05, 8.486099999999858e-05, 8.49720000000026e-05, 8.506999999999959e-05, 8.486099999999858e-05, 8.552800000000138e-05, 8.56119999999988e-05, 8.513799999999849e-05, 8.493000000000389e-05, 8.509699999999926e-05, 8.56669999999976e-05, 8.526399999999462e-05, 8.51390000000049e-05, 8.490299999999729e-05, 8.483399999999891e-05, 8.522200000000285e-05, 8.515299999999754e-05, 8.54449999999965e-05, 8.534799999999898e-05, 8.56249999999989e-05, 8.569399999999727e-05, 8.531900000000037e-05, 8.555499999999411e-05, 8.488899999999772e-05, 8.526400000000156e-05, 8.534700000000645e-05, 8.568100000000411e-05, 8.557000000000009e-05, 8.506999999999959e-05, 8.551400000000181e-05, 8.472300000000182e-05, 8.493099999999643e-05, 8.531900000000037e-05, 8.4846999999999e-05, 8.558300000000019e-05, 8.536099999999908e-05, 8.538900000000516e-05, 8.531900000000037e-05, 8.477800000000063e-05, 8.506999999999959e-05]</msg>
<status status="PASS" starttime="20201112 10:16:05.968" endtime="20201112 10:16:05.972"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.956" endtime="20201112 10:16:05.974"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:05.980" endtime="20201112 10:16:05.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:05.988" endtime="20201112 10:16:06.010"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.984" endtime="20201112 10:16:06.012"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.976" endtime="20201112 10:16:06.014"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.466" endtime="20201112 10:16:06.014"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.465" endtime="20201112 10:16:06.015"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:06.038" endtime="20201112 10:16:06.062"></status>
</kw>
<msg timestamp="20201112 10:16:06.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:06.035" endtime="20201112 10:16:06.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:06.065" endtime="20201112 10:16:06.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:06.072" endtime="20201112 10:16:06.075"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.027" endtime="20201112 10:16:06.077"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.021" endtime="20201112 10:16:06.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:06.095" endtime="20201112 10:16:06.427"></status>
</kw>
<msg timestamp="20201112 10:16:06.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043920958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044006694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:06.092" endtime="20201112 10:16:06.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043920958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044006694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:06.436" endtime="20201112 10:16:06.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:06.455" endtime="20201112 10:16:06.460"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.084" endtime="20201112 10:16:06.462"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.080" endtime="20201112 10:16:06.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:06.474" level="INFO">${RESULT} = [{'time': 0.044006694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.573599999999598e-05, 'source_diff': 8.573599999999598e-05}, {'time': 0.044107681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:06.465" endtime="20201112 10:16:06.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:06.505" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:06.476" endtime="20201112 10:16:06.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.515" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 10:16:06.513" endtime="20201112 10:16:06.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.521" level="INFO">VALUE: [8.573599999999598e-05, 8.584799999999948e-05, 8.572199999999641e-05, 8.627800000000213e-05, 8.601400000000231e-05, 8.5847e-05, 8.611099999999983e-05, 8.644399999999802e-05, 8.615299999999854e-05, 8.659700000000076e-05, 8.623599999999648e-05, 8.623599999999648e-05, 8.619399999999777e-05, 8.586099999999958e-05, 8.645799999999759e-05, 8.631900000000137e-05, 8.627799999999519e-05, 8.577800000000163e-05, 8.63470000000005e-05, 8.627800000000213e-05, 8.602799999999494e-05, 8.63470000000005e-05, 8.5847e-05, 8.580599999999383e-05, 8.651399999999587e-05, 8.640199999999931e-05, 8.651399999999587e-05, 8.581899999999393e-05, 8.659700000000076e-05, 8.644399999999802e-05, 8.63050000000018e-05, 8.651399999999587e-05, 8.587499999999915e-05, 8.659700000000076e-05, 8.652799999999544e-05, 8.577800000000163e-05, 8.618100000000462e-05, 8.636100000000008e-05, 8.595800000000403e-05, 8.634799999999998e-05, 8.665299999999904e-05, 8.626400000000256e-05, 8.600000000000274e-05, 8.669499999999775e-05, 8.620899999999682e-05, 8.573599999999598e-05, 8.668099999999818e-05, 8.644399999999802e-05, 8.590300000000523e-05, 8.659800000000023e-05]</msg>
<status status="PASS" starttime="20201112 10:16:06.518" endtime="20201112 10:16:06.522"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.506" endtime="20201112 10:16:06.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:06.530" endtime="20201112 10:16:06.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:06.539" endtime="20201112 10:16:06.560"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.534" endtime="20201112 10:16:06.562"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.526" endtime="20201112 10:16:06.563"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.017" endtime="20201112 10:16:06.564"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.016" endtime="20201112 10:16:06.564"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:06.587" endtime="20201112 10:16:06.608"></status>
</kw>
<msg timestamp="20201112 10:16:06.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:06.583" endtime="20201112 10:16:06.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:06.612" endtime="20201112 10:16:06.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:06.618" endtime="20201112 10:16:06.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.576" endtime="20201112 10:16:06.623"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.571" endtime="20201112 10:16:06.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:06.641" endtime="20201112 10:16:06.976"></status>
</kw>
<msg timestamp="20201112 10:16:06.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041693972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041781319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:06.638" endtime="20201112 10:16:06.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041693972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041781319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:06.985" endtime="20201112 10:16:07.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.004" endtime="20201112 10:16:07.010"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.631" endtime="20201112 10:16:07.011"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.626" endtime="20201112 10:16:07.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:07.023" level="INFO">${RESULT} = [{'time': 0.041781319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.734699999999457e-05, 'source_diff': 8.734699999999457e-05}, {'time': 0.041877333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:07.014" endtime="20201112 10:16:07.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:07.054" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:07.026" endtime="20201112 10:16:07.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.066" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 10:16:07.063" endtime="20201112 10:16:07.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.071" level="INFO">VALUE: [8.734699999999457e-05, 8.711100000000083e-05, 8.71250000000004e-05, 8.755499999999611e-05, 8.677800000000263e-05, 8.698599999999723e-05, 8.768099999999918e-05, 8.718099999999868e-05, 8.71250000000004e-05, 8.754199999999601e-05, 8.684800000000048e-05, 8.748599999999773e-05, 8.711099999999389e-05, 8.681899999999493e-05, 8.742999999999945e-05, 8.713899999999997e-05, 8.723600000000442e-05, 8.698599999999723e-05, 8.686100000000058e-05, 8.741699999999936e-05, 8.694500000000494e-05, 8.695899999999757e-05, 8.731899999999543e-05, 8.729100000000323e-05, 8.681900000000187e-05, 8.744399999999902e-05, 8.715299999999954e-05, 8.672199999999741e-05, 8.762499999999396e-05, 8.769399999999927e-05, 8.757000000000209e-05, 8.680599999999483e-05, 8.706999999999465e-05, 8.675000000000349e-05, 8.748599999999773e-05, 8.679199999999526e-05, 8.751300000000434e-05, 8.709700000000126e-05, 8.751399999999687e-05, 8.752800000000338e-05, 8.681900000000187e-05, 8.759700000000176e-05, 8.711100000000083e-05, 8.732000000000184e-05, 8.736100000000108e-05, 8.676399999999612e-05, 8.747299999999764e-05, 8.71120000000003e-05, 8.722199999999791e-05, 8.723599999999748e-05]</msg>
<status status="PASS" starttime="20201112 10:16:07.068" endtime="20201112 10:16:07.073"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.056" endtime="20201112 10:16:07.075"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.081" endtime="20201112 10:16:07.084"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:07.090" endtime="20201112 10:16:07.111"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.085" endtime="20201112 10:16:07.113"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.077" endtime="20201112 10:16:07.114"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.566" endtime="20201112 10:16:07.115"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.565" endtime="20201112 10:16:07.115"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.138" endtime="20201112 10:16:07.161"></status>
</kw>
<msg timestamp="20201112 10:16:07.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:07.135" endtime="20201112 10:16:07.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:07.164" endtime="20201112 10:16:07.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.170" endtime="20201112 10:16:07.174"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.128" endtime="20201112 10:16:07.176"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.122" endtime="20201112 10:16:07.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.194" endtime="20201112 10:16:07.530"></status>
</kw>
<msg timestamp="20201112 10:16:07.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042388389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042476264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:07.190" endtime="20201112 10:16:07.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042388389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042476264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:07.539" endtime="20201112 10:16:07.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.553" endtime="20201112 10:16:07.556"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.183" endtime="20201112 10:16:07.557"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.179" endtime="20201112 10:16:07.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:07.562" level="INFO">${RESULT} = [{'time': 0.042476264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.787500000000115e-05, 'source_diff': 8.787500000000115e-05}, {'time': 0.042573278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:07.558" endtime="20201112 10:16:07.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:07.576" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:07.563" endtime="20201112 10:16:07.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.581" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 10:16:07.580" endtime="20201112 10:16:07.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.584" level="INFO">VALUE: [8.787500000000115e-05, 8.830599999999633e-05, 8.777799999999669e-05, 8.826400000000456e-05, 8.797299999999814e-05, 8.827699999999772e-05, 8.822199999999891e-05, 8.838900000000122e-05, 8.773599999999798e-05, 8.786099999999464e-05, 8.831900000000337e-05, 8.838900000000122e-05, 8.806999999999565e-05, 8.841600000000088e-05, 8.845799999999959e-05, 8.84449999999995e-05, 8.823599999999848e-05, 8.802699999999747e-05, 8.777799999999669e-05, 8.840300000000079e-05, 8.784700000000201e-05, 8.819399999999977e-05, 8.813900000000097e-05, 8.873699999999846e-05, 8.801399999999737e-05, 8.850000000000524e-05, 8.811099999999489e-05, 8.808400000000216e-05, 8.784800000000148e-05, 8.870799999999984e-05, 8.852800000000438e-05, 8.805599999999608e-05, 8.844400000000002e-05, 8.792999999999995e-05, 8.79999999999978e-05, 8.832000000000284e-05, 8.786099999999464e-05, 8.827799999999719e-05, 8.806999999999565e-05, 8.795899999999857e-05, 8.786099999999464e-05, 8.804200000000345e-05, 8.816600000000063e-05, 8.855500000000405e-05, 8.813899999999403e-05, 8.791699999999986e-05, 8.827800000000413e-05, 8.811099999999489e-05, 8.78199999999954e-05, 8.863900000000147e-05]</msg>
<status status="PASS" starttime="20201112 10:16:07.582" endtime="20201112 10:16:07.584"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.577" endtime="20201112 10:16:07.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.588" endtime="20201112 10:16:07.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:07.592" endtime="20201112 10:16:07.612"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.590" endtime="20201112 10:16:07.613"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.586" endtime="20201112 10:16:07.613"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.118" endtime="20201112 10:16:07.613"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.116" endtime="20201112 10:16:07.614"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.624" endtime="20201112 10:16:07.643"></status>
</kw>
<msg timestamp="20201112 10:16:07.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:07.623" endtime="20201112 10:16:07.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:07.644" endtime="20201112 10:16:07.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.647" endtime="20201112 10:16:07.649"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.619" endtime="20201112 10:16:07.650"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.617" endtime="20201112 10:16:07.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.658" endtime="20201112 10:16:07.944"></status>
</kw>
<msg timestamp="20201112 10:16:07.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024997486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025086472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:07.657" endtime="20201112 10:16:07.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024997486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025086472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:07.949" endtime="20201112 10:16:07.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.957" endtime="20201112 10:16:07.961"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.653" endtime="20201112 10:16:07.961"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.651" endtime="20201112 10:16:07.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:07.967" level="INFO">${RESULT} = [{'time': 0.025086472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.898599999999923e-05, 'source_diff': 8.898599999999923e-05}, {'time': 0.025179458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:07.963" endtime="20201112 10:16:07.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:07.980" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:07.968" endtime="20201112 10:16:07.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.986" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 10:16:07.985" endtime="20201112 10:16:07.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.988" level="INFO">VALUE: [8.898599999999923e-05, 8.909699999999979e-05, 8.941700000000136e-05, 8.929200000000123e-05, 8.929200000000123e-05, 8.936099999999961e-05, 8.895899999999957e-05, 8.93190000000009e-05, 8.907000000000012e-05, 8.923699999999896e-05, 8.873699999999846e-05, 8.89999999999988e-05, 8.898599999999923e-05, 8.893000000000095e-05, 8.947200000000016e-05, 8.923599999999948e-05, 8.877799999999769e-05, 8.926399999999862e-05, 8.883299999999997e-05, 8.951399999999887e-05, 8.970899999999685e-05, 8.969499999999728e-05, 8.902700000000194e-05, 8.955500000000158e-05, 8.895800000000009e-05, 8.895800000000009e-05, 8.938899999999875e-05, 8.936099999999961e-05, 8.893100000000043e-05, 8.933399999999994e-05, 8.886099999999911e-05, 8.913900000000197e-05, 8.955600000000105e-05, 8.877800000000116e-05, 8.940200000000231e-05, 8.93190000000009e-05, 8.874999999999855e-05, 8.96939999999978e-05, 8.911100000000283e-05, 8.877799999999769e-05, 8.916699999999764e-05, 8.938899999999875e-05, 8.8945e-05, 8.898599999999923e-05, 8.923600000000295e-05, 8.930599999999733e-05, 8.966699999999814e-05, 8.931899999999743e-05, 8.911099999999936e-05, 8.93190000000009e-05]</msg>
<status status="PASS" starttime="20201112 10:16:07.987" endtime="20201112 10:16:07.989"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.981" endtime="20201112 10:16:07.990"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.993" endtime="20201112 10:16:07.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:07.997" endtime="20201112 10:16:08.016"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.995" endtime="20201112 10:16:08.017"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.991" endtime="20201112 10:16:08.017"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.615" endtime="20201112 10:16:08.018"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.614" endtime="20201112 10:16:08.018"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:08.029" endtime="20201112 10:16:08.048"></status>
</kw>
<msg timestamp="20201112 10:16:08.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:08.027" endtime="20201112 10:16:08.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:08.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:08.050" endtime="20201112 10:16:08.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:08.053" endtime="20201112 10:16:08.054"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.024" endtime="20201112 10:16:08.055"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.021" endtime="20201112 10:16:08.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:08.063" endtime="20201112 10:16:08.382"></status>
</kw>
<msg timestamp="20201112 10:16:08.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024865097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024955778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:08.062" endtime="20201112 10:16:08.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:08.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024865097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024955778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:08.392" endtime="20201112 10:16:08.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:08.410" endtime="20201112 10:16:08.416"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.059" endtime="20201112 10:16:08.417"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.056" endtime="20201112 10:16:08.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:08.429" level="INFO">${RESULT} = [{'time': 0.024955778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.068100000000218e-05, 'source_diff': 9.068100000000218e-05}, {'time': 0.025051806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:08.420" endtime="20201112 10:16:08.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:08.460" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:08.431" endtime="20201112 10:16:08.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:08.471" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 10:16:08.468" endtime="20201112 10:16:08.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:08.476" level="INFO">VALUE: [9.068100000000218e-05, 9.065299999999957e-05, 8.998600000000023e-05, 9.01389999999995e-05, 9.041699999999889e-05, 9.048600000000073e-05, 9.06939999999988e-05, 9.056899999999868e-05, 9.065299999999957e-05, 9.03199999999979e-05, 8.9945000000001e-05, 9.044399999999855e-05, 9.061099999999739e-05, 9.040299999999932e-05, 9.01389999999995e-05, 9.005500000000208e-05, 9.052699999999997e-05, 9.047200000000116e-05, 8.990299999999882e-05, 8.993000000000195e-05, 8.973599999999998e-05, 9.029200000000223e-05, 9.019400000000177e-05, 9.016699999999864e-05, 9.04450000000015e-05, 9.023699999999996e-05, 9.066599999999966e-05, 8.984699999999707e-05, 8.997200000000066e-05, 8.988899999999925e-05, 8.977799999999869e-05, 9.052799999999944e-05, 8.970800000000084e-05, 8.974999999999955e-05, 9.015299999999907e-05, 9.051399999999987e-05, 9.001399999999937e-05, 9.007000000000112e-05, 9.027699999999972e-05, 9.012499999999993e-05, 9.006900000000165e-05, 8.987499999999968e-05, 9.031899999999843e-05, 9.048600000000073e-05, 8.984700000000054e-05, 9.066699999999914e-05, 9.057000000000162e-05, 9.047200000000116e-05, 9.034800000000051e-05, 8.994399999999805e-05]</msg>
<status status="PASS" starttime="20201112 10:16:08.473" endtime="20201112 10:16:08.477"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.462" endtime="20201112 10:16:08.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:08.485" endtime="20201112 10:16:08.488"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:08.494" endtime="20201112 10:16:08.515"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.489" endtime="20201112 10:16:08.517"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.481" endtime="20201112 10:16:08.518"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.019" endtime="20201112 10:16:08.519"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.018" endtime="20201112 10:16:08.519"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:08.542" endtime="20201112 10:16:08.564"></status>
</kw>
<msg timestamp="20201112 10:16:08.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:08.539" endtime="20201112 10:16:08.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:08.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:08.568" endtime="20201112 10:16:08.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:08.574" endtime="20201112 10:16:08.578"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.531" endtime="20201112 10:16:08.579"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.526" endtime="20201112 10:16:08.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:08.597" endtime="20201112 10:16:08.939"></status>
</kw>
<msg timestamp="20201112 10:16:08.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042230542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04232125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:16:08.594" endtime="20201112 10:16:08.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:08.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042230542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04232125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:16:08.949" endtime="20201112 10:16:08.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:08.969" endtime="20201112 10:16:08.976"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.587" endtime="20201112 10:16:08.979"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.582" endtime="20201112 10:16:08.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:08.993" level="INFO">${RESULT} = [{'time': 0.04232125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.07079999999949e-05, 'source_diff': 9.07079999999949e-05}, {'time': 0.042421278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 10:16:08.983" endtime="20201112 10:16:08.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:09.024" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:08.995" endtime="20201112 10:16:09.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.034" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 10:16:09.032" endtime="20201112 10:16:09.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.040" level="INFO">VALUE: [9.07079999999949e-05, 9.090299999999635e-05, 9.16529999999971e-05, 9.08199999999984e-05, 9.118099999999574e-05, 9.169500000000275e-05, 9.086100000000458e-05, 9.152700000000097e-05, 9.081899999999893e-05, 9.094400000000252e-05, 9.165300000000404e-05, 9.15000000000013e-05, 9.108399999999822e-05, 9.095899999999463e-05, 9.106999999999865e-05, 9.083399999999797e-05, 9.147300000000164e-05, 9.077700000000022e-05, 9.104100000000004e-05, 9.084700000000501e-05, 9.113900000000397e-05, 9.148600000000173e-05, 9.131900000000637e-05, 9.126400000000062e-05, 9.13199999999989e-05, 9.147300000000164e-05, 9.109700000000526e-05, 9.093100000000243e-05, 9.130599999999933e-05, 9.10000000000008e-05, 9.091599999999644e-05, 9.081899999999893e-05, 9.090299999999635e-05, 9.101400000000037e-05, 9.136099999999814e-05, 9.09859999999943e-05, 9.091699999999592e-05, 9.11529999999966e-05, 9.118099999999574e-05, 9.119499999999531e-05, 9.129199999999976e-05, 9.152700000000097e-05, 9.119400000000277e-05, 9.076400000000012e-05, 9.077799999999969e-05, 9.16800000000037e-05, 9.095800000000209e-05, 9.08199999999984e-05, 9.076400000000012e-05, 9.082000000000534e-05]</msg>
<status status="PASS" starttime="20201112 10:16:09.037" endtime="20201112 10:16:09.041"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.025" endtime="20201112 10:16:09.043"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.049" endtime="20201112 10:16:09.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:09.059" endtime="20201112 10:16:09.081"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.054" endtime="20201112 10:16:09.083"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.045" endtime="20201112 10:16:09.084"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.522" endtime="20201112 10:16:09.085"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:08.520" endtime="20201112 10:16:09.085"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.109" endtime="20201112 10:16:09.132"></status>
</kw>
<msg timestamp="20201112 10:16:09.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:09.106" endtime="20201112 10:16:09.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:09.135" endtime="20201112 10:16:09.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.141" endtime="20201112 10:16:09.145"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.099" endtime="20201112 10:16:09.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.092" endtime="20201112 10:16:09.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.167" endtime="20201112 10:16:09.513"></status>
</kw>
<msg timestamp="20201112 10:16:09.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044370528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044463167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:09.162" endtime="20201112 10:16:09.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044370528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044463167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:09.523" endtime="20201112 10:16:09.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.541" endtime="20201112 10:16:09.547"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.154" endtime="20201112 10:16:09.548"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.149" endtime="20201112 10:16:09.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:09.560" level="INFO">${RESULT} = [{'time': 0.044463167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.263899999999853e-05, 'source_diff': 9.263899999999853e-05}, {'time': 0.044560167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:09.551" endtime="20201112 10:16:09.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:09.591" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:09.562" endtime="20201112 10:16:09.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.602" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 10:16:09.600" endtime="20201112 10:16:09.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.608" level="INFO">VALUE: [9.263899999999853e-05, 9.227800000000119e-05, 9.262499999999896e-05, 9.18879999999983e-05, 9.188800000000524e-05, 9.244399999999708e-05, 9.251399999999493e-05, 9.190299999999735e-05, 9.238899999999828e-05, 9.220899999999588e-05, 9.18199999999994e-05, 9.211099999999889e-05, 9.188900000000472e-05, 9.247300000000264e-05, 9.176399999999418e-05, 9.234699999999957e-05, 9.244400000000402e-05, 9.204200000000051e-05, 9.175000000000155e-05, 9.256900000000068e-05, 9.184699999999907e-05, 9.266699999999767e-05, 9.241700000000436e-05, 9.204200000000051e-05, 9.240299999999785e-05, 9.186199999999811e-05, 9.26800000000047e-05, 9.255500000000111e-05, 9.255500000000111e-05, 9.190300000000429e-05, 9.259800000000623e-05, 9.199999999999486e-05, 9.240299999999785e-05, 9.209699999999932e-05, 9.252800000000144e-05, 9.257000000000015e-05, 9.212499999999846e-05, 9.183399999999897e-05, 9.26659999999982e-05, 9.256900000000068e-05, 9.263900000000547e-05, 9.225000000000205e-05, 9.248600000000273e-05, 9.231900000000043e-05, 9.198600000000223e-05, 9.237499999999871e-05, 9.212499999999846e-05, 9.263899999999853e-05, 9.237500000000565e-05, 9.21659999999977e-05]</msg>
<status status="PASS" starttime="20201112 10:16:09.605" endtime="20201112 10:16:09.609"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.593" endtime="20201112 10:16:09.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.617" endtime="20201112 10:16:09.620"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:09.625" endtime="20201112 10:16:09.647"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.621" endtime="20201112 10:16:09.649"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.613" endtime="20201112 10:16:09.650"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.088" endtime="20201112 10:16:09.651"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.086" endtime="20201112 10:16:09.651"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.674" endtime="20201112 10:16:09.695"></status>
</kw>
<msg timestamp="20201112 10:16:09.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:09.670" endtime="20201112 10:16:09.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:09.699" endtime="20201112 10:16:09.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.705" endtime="20201112 10:16:09.709"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.663" endtime="20201112 10:16:09.710"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.657" endtime="20201112 10:16:09.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.728" endtime="20201112 10:16:10.062"></status>
</kw>
<msg timestamp="20201112 10:16:10.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04168, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041773417, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 10:16:09.725" endtime="20201112 10:16:10.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:10.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04168, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041773417, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 10:16:10.072" endtime="20201112 10:16:10.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:10.090" endtime="20201112 10:16:10.098"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.718" endtime="20201112 10:16:10.099"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.713" endtime="20201112 10:16:10.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:10.111" level="INFO">${RESULT} = [{'time': 0.041773417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.341699999999842e-05, 'source_diff': 9.341699999999842e-05}, {'time': 0.0418815, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:16:10.102" endtime="20201112 10:16:10.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:10.146" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:10.113" endtime="20201112 10:16:10.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:10.157" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 10:16:10.155" endtime="20201112 10:16:10.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:10.163" level="INFO">VALUE: [9.341699999999842e-05, 9.3333000000001e-05, 9.275000000000255e-05, 9.338899999999928e-05, 9.295800000000409e-05, 9.323600000000348e-05, 9.295799999999715e-05, 9.347199999999722e-05, 9.366700000000561e-05, 9.290299999999835e-05, 9.277700000000222e-05, 9.340299999999885e-05, 9.279200000000126e-05, 9.273599999999604e-05, 9.280500000000136e-05, 9.340299999999885e-05, 9.291599999999844e-05, 9.369399999999833e-05, 9.37079999999979e-05, 9.344399999999808e-05, 9.34450000000045e-05, 9.301399999999543e-05, 9.279200000000126e-05, 9.329100000000229e-05, 9.336100000000014e-05, 9.270800000000384e-05, 9.312499999999946e-05, 9.305500000000161e-05, 9.319399999999783e-05, 9.341700000000536e-05, 9.308400000000022e-05, 9.319399999999783e-05, 9.320899999999688e-05, 9.35279999999955e-05, 9.291599999999844e-05, 9.26659999999982e-05, 9.309700000000032e-05, 9.324999999999611e-05, 9.349999999999636e-05, 9.331900000000143e-05, 9.361100000000039e-05, 9.326400000000262e-05, 9.298600000000323e-05, 9.28200000000004e-05, 9.311099999999989e-05, 9.295900000000357e-05, 9.312499999999946e-05, 9.336100000000014e-05, 9.29859999999963e-05, 9.308300000000075e-05]</msg>
<status status="PASS" starttime="20201112 10:16:10.160" endtime="20201112 10:16:10.165"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.148" endtime="20201112 10:16:10.166"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:10.173" endtime="20201112 10:16:10.176"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:10.181" endtime="20201112 10:16:10.203"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.177" endtime="20201112 10:16:10.205"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.168" endtime="20201112 10:16:10.207"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.653" endtime="20201112 10:16:10.207"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.652" endtime="20201112 10:16:10.208"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:10.231" endtime="20201112 10:16:10.253"></status>
</kw>
<msg timestamp="20201112 10:16:10.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:10.227" endtime="20201112 10:16:10.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:10.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:10.257" endtime="20201112 10:16:10.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:10.263" endtime="20201112 10:16:10.267"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.220" endtime="20201112 10:16:10.268"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.214" endtime="20201112 10:16:10.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:10.286" endtime="20201112 10:16:10.627"></status>
</kw>
<msg timestamp="20201112 10:16:10.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042998639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043092542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:10.283" endtime="20201112 10:16:10.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:10.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042998639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043092542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:10.638" endtime="20201112 10:16:10.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:10.661" endtime="20201112 10:16:10.667"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.276" endtime="20201112 10:16:10.670"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.271" endtime="20201112 10:16:10.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:10.685" level="INFO">${RESULT} = [{'time': 0.043092542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.390299999999935e-05, 'source_diff': 9.390299999999935e-05}, {'time': 0.043201542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:10.674" endtime="20201112 10:16:10.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:10.718" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:10.688" endtime="20201112 10:16:10.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:10.729" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 10:16:10.727" endtime="20201112 10:16:10.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:10.735" level="INFO">VALUE: [9.390299999999935e-05, 9.407000000000165e-05, 9.443099999999899e-05, 9.461200000000086e-05, 9.448600000000473e-05, 9.375000000000355e-05, 9.409700000000132e-05, 9.394399999999858e-05, 9.429200000000276e-05, 9.372199999999747e-05, 9.387500000000021e-05, 9.404200000000251e-05, 9.395900000000457e-05, 9.399999999999686e-05, 9.443099999999899e-05, 9.39859999999973e-05, 9.426299999999721e-05, 9.456899999999574e-05, 9.377799999999575e-05, 9.431900000000243e-05, 9.419400000000577e-05, 9.46530000000001e-05, 9.393099999999849e-05, 9.469499999999881e-05, 9.409800000000079e-05, 9.45130000000044e-05, 9.455500000000311e-05, 9.398600000000423e-05, 9.454100000000354e-05, 9.422200000000491e-05, 9.45279999999965e-05, 9.381900000000193e-05, 9.416699999999917e-05, 9.46530000000001e-05, 9.448600000000473e-05, 9.456999999999521e-05, 9.46660000000002e-05, 9.415200000000012e-05, 9.391599999999944e-05, 9.424999999999711e-05, 9.409800000000079e-05, 9.45279999999965e-05, 9.379200000000226e-05, 9.376400000000312e-05, 9.38059999999949e-05, 9.455600000000258e-05, 9.44729999999977e-05, 9.430600000000233e-05, 9.402700000000347e-05, 9.459700000000182e-05]</msg>
<status status="PASS" starttime="20201112 10:16:10.731" endtime="20201112 10:16:10.742"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.720" endtime="20201112 10:16:10.744"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:10.750" endtime="20201112 10:16:10.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:10.759" endtime="20201112 10:16:10.781"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.755" endtime="20201112 10:16:10.782"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.746" endtime="20201112 10:16:10.784"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.210" endtime="20201112 10:16:10.785"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.208" endtime="20201112 10:16:10.785"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:10.808" endtime="20201112 10:16:10.831"></status>
</kw>
<msg timestamp="20201112 10:16:10.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:10.805" endtime="20201112 10:16:10.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:10.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:10.834" endtime="20201112 10:16:10.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:10.840" endtime="20201112 10:16:10.844"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.797" endtime="20201112 10:16:10.846"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.791" endtime="20201112 10:16:10.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:10.864" endtime="20201112 10:16:11.204"></status>
</kw>
<msg timestamp="20201112 10:16:11.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042815847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042911528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:10.861" endtime="20201112 10:16:11.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042815847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042911528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:11.214" endtime="20201112 10:16:11.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:11.232" endtime="20201112 10:16:11.238"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.853" endtime="20201112 10:16:11.239"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.849" endtime="20201112 10:16:11.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:11.252" level="INFO">${RESULT} = [{'time': 0.042911528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.568100000000024e-05, 'source_diff': 9.568100000000024e-05}, {'time': 0.043014556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:11.243" endtime="20201112 10:16:11.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:11.283" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:11.254" endtime="20201112 10:16:11.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.294" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 10:16:11.292" endtime="20201112 10:16:11.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.299" level="INFO">VALUE: [9.568100000000024e-05, 9.559800000000229e-05, 9.501299999999796e-05, 9.513900000000103e-05, 9.509799999999485e-05, 9.554100000000454e-05, 9.536100000000214e-05, 9.477800000000369e-05, 9.51530000000006e-05, 9.476399999999718e-05, 9.497199999999872e-05, 9.474999999999761e-05, 9.48609999999947e-05, 9.51530000000006e-05, 9.524999999999811e-05, 9.569400000000033e-05, 9.523600000000548e-05, 9.479099999999685e-05, 9.525000000000505e-05, 9.495799999999915e-05, 9.491699999999992e-05, 9.487500000000121e-05, 9.508399999999528e-05, 9.54859999999988e-05, 9.480600000000283e-05, 9.520900000000582e-05, 9.498699999999777e-05, 9.563799999999512e-05, 9.512500000000146e-05, 9.551399999999793e-05, 9.501399999999743e-05, 9.504200000000351e-05, 9.516700000000017e-05, 9.526399999999768e-05, 9.487500000000121e-05, 9.558400000000272e-05, 9.507000000000265e-05, 9.568100000000024e-05, 9.491600000000044e-05, 9.473600000000498e-05, 9.547199999999922e-05, 9.519399999999983e-05, 9.544400000000008e-05, 9.486100000000164e-05, 9.493099999999949e-05, 9.476400000000412e-05, 9.506999999999571e-05, 9.499999999999786e-05, 9.562499999999502e-05, 9.526299999999821e-05]</msg>
<status status="PASS" starttime="20201112 10:16:11.296" endtime="20201112 10:16:11.301"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.285" endtime="20201112 10:16:11.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:11.309" endtime="20201112 10:16:11.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:11.317" endtime="20201112 10:16:11.339"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.313" endtime="20201112 10:16:11.341"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.305" endtime="20201112 10:16:11.342"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.787" endtime="20201112 10:16:11.343"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:10.786" endtime="20201112 10:16:11.343"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:11.366" endtime="20201112 10:16:11.389"></status>
</kw>
<msg timestamp="20201112 10:16:11.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:11.363" endtime="20201112 10:16:11.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:11.393" endtime="20201112 10:16:11.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:11.397" endtime="20201112 10:16:11.398"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.356" endtime="20201112 10:16:11.399"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.350" endtime="20201112 10:16:11.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:11.408" endtime="20201112 10:16:11.713"></status>
</kw>
<msg timestamp="20201112 10:16:11.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042790167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042886806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:11.406" endtime="20201112 10:16:11.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042790167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042886806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:11.723" endtime="20201112 10:16:11.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:11.742" endtime="20201112 10:16:11.748"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.403" endtime="20201112 10:16:11.749"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.400" endtime="20201112 10:16:11.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:11.761" level="INFO">${RESULT} = [{'time': 0.042886806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.663900000000253e-05, 'source_diff': 9.663900000000253e-05}, {'time': 0.042992833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:11.752" endtime="20201112 10:16:11.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:11.793" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:11.763" endtime="20201112 10:16:11.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.804" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 10:16:11.802" endtime="20201112 10:16:11.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.809" level="INFO">VALUE: [9.663900000000253e-05, 9.587500000000221e-05, 9.622199999999997e-05, 9.593000000000101e-05, 9.630499999999792e-05, 9.622299999999945e-05, 9.605600000000408e-05, 9.577799999999775e-05, 9.626299999999921e-05, 9.587499999999527e-05, 9.656899999999774e-05, 9.59859999999993e-05, 9.609699999999638e-05, 9.672200000000047e-05, 9.641700000000142e-05, 9.590300000000135e-05, 9.638899999999534e-05, 9.63609999999962e-05, 9.673699999999952e-05, 9.605599999999714e-05, 9.605600000000408e-05, 9.648699999999927e-05, 9.609800000000279e-05, 9.615200000000212e-05, 9.619400000000083e-05, 9.645800000000065e-05, 9.584700000000307e-05, 9.655500000000511e-05, 9.575000000000555e-05, 9.63609999999962e-05, 9.672299999999995e-05, 9.641700000000142e-05, 9.63200000000039e-05, 9.666599999999526e-05, 9.58880000000023e-05, 9.627700000000572e-05, 9.593000000000101e-05, 9.623599999999954e-05, 9.652800000000544e-05, 9.613900000000203e-05, 9.618100000000074e-05, 9.573599999999904e-05, 9.63200000000039e-05, 9.595800000000015e-05, 9.624999999999911e-05, 9.649999999999936e-05, 9.605499999999767e-05, 9.623599999999954e-05, 9.588900000000178e-05, 9.609699999999638e-05]</msg>
<status status="PASS" starttime="20201112 10:16:11.806" endtime="20201112 10:16:11.811"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.795" endtime="20201112 10:16:11.813"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:11.819" endtime="20201112 10:16:11.822"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:11.827" endtime="20201112 10:16:11.849"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.823" endtime="20201112 10:16:11.851"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.815" endtime="20201112 10:16:11.853"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.346" endtime="20201112 10:16:11.853"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.344" endtime="20201112 10:16:11.854"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:11.876" endtime="20201112 10:16:11.900"></status>
</kw>
<msg timestamp="20201112 10:16:11.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:11.873" endtime="20201112 10:16:11.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:11.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:11.903" endtime="20201112 10:16:11.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:11.910" endtime="20201112 10:16:11.913"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.866" endtime="20201112 10:16:11.915"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.860" endtime="20201112 10:16:11.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:11.933" endtime="20201112 10:16:12.272"></status>
</kw>
<msg timestamp="20201112 10:16:12.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042397861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042495389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:11.930" endtime="20201112 10:16:12.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042397861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042495389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:12.282" endtime="20201112 10:16:12.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.301" endtime="20201112 10:16:12.308"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.922" endtime="20201112 10:16:12.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.918" endtime="20201112 10:16:12.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:12.322" level="INFO">${RESULT} = [{'time': 0.042495389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.75279999999995e-05, 'source_diff': 9.75279999999995e-05}, {'time': 0.042597361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:16:12.313" endtime="20201112 10:16:12.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:12.353" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:12.324" endtime="20201112 10:16:12.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.364" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 10:16:12.362" endtime="20201112 10:16:12.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.369" level="INFO">VALUE: [9.75279999999995e-05, 9.684699999999713e-05, 9.694500000000106e-05, 9.738900000000328e-05, 9.755600000000558e-05, 9.727799999999925e-05, 9.740300000000285e-05, 9.769500000000181e-05, 9.74860000000008e-05, 9.747200000000122e-05, 9.74860000000008e-05, 9.71530000000026e-05, 9.730499999999892e-05, 9.690300000000235e-05, 9.694500000000106e-05, 9.740300000000285e-05, 9.756999999999821e-05, 9.686200000000311e-05, 9.69730000000002e-05, 9.722200000000097e-05, 9.762499999999702e-05, 9.691699999999498e-05, 9.743099999999505e-05, 9.694400000000158e-05, 9.769500000000181e-05, 9.679199999999832e-05, 9.723600000000054e-05, 9.69730000000002e-05, 9.680600000000483e-05, 9.751300000000046e-05, 9.679100000000579e-05, 9.694400000000158e-05, 9.723600000000054e-05, 9.736100000000414e-05, 9.695800000000115e-05, 9.69860000000003e-05, 9.693099999999455e-05, 9.738899999999634e-05, 9.681999999999746e-05, 9.706999999999771e-05, 9.752700000000003e-05, 9.672199999999354e-05, 9.686100000000364e-05, 9.754199999999907e-05, 9.741700000000242e-05, 9.699999999999986e-05, 9.752700000000003e-05, 9.697200000000072e-05, 9.670900000000038e-05, 9.737499999999677e-05]</msg>
<status status="PASS" starttime="20201112 10:16:12.366" endtime="20201112 10:16:12.371"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.355" endtime="20201112 10:16:12.373"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.379" endtime="20201112 10:16:12.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:12.387" endtime="20201112 10:16:12.409"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.383" endtime="20201112 10:16:12.411"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.374" endtime="20201112 10:16:12.412"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.856" endtime="20201112 10:16:12.413"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:11.854" endtime="20201112 10:16:12.413"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.436" endtime="20201112 10:16:12.459"></status>
</kw>
<msg timestamp="20201112 10:16:12.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:12.433" endtime="20201112 10:16:12.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:12.462" endtime="20201112 10:16:12.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.468" endtime="20201112 10:16:12.472"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.425" endtime="20201112 10:16:12.474"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.420" endtime="20201112 10:16:12.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.492" endtime="20201112 10:16:12.830"></status>
</kw>
<msg timestamp="20201112 10:16:12.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042503986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042602417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:12.489" endtime="20201112 10:16:12.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042503986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042602417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:12.840" endtime="20201112 10:16:12.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.859" endtime="20201112 10:16:12.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.481" endtime="20201112 10:16:12.866"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.477" endtime="20201112 10:16:12.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:12.878" level="INFO">${RESULT} = [{'time': 0.042602417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.843099999999605e-05, 'source_diff': 9.843099999999605e-05}, {'time': 0.042708417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:12.869" endtime="20201112 10:16:12.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:12.909" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:12.880" endtime="20201112 10:16:12.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.921" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 10:16:12.918" endtime="20201112 10:16:12.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:12.926" level="INFO">VALUE: [9.843099999999605e-05, 9.773600000000104e-05, 9.836200000000461e-05, 9.805499999999967e-05, 9.85410000000006e-05, 9.801400000000043e-05, 9.808299999999881e-05, 9.780499999999942e-05, 9.811099999999795e-05, 9.816699999999623e-05, 9.808400000000522e-05, 9.788899999999684e-05, 9.848700000000127e-05, 9.831899999999949e-05, 9.811099999999795e-05, 9.851400000000093e-05, 9.8028e-05, 9.81939999999959e-05, 9.823700000000102e-05, 9.82359999999946e-05, 9.831999999999896e-05, 9.815299999999666e-05, 9.856999999999921e-05, 9.786200000000411e-05, 9.826400000000068e-05, 9.801300000000096e-05, 9.801400000000043e-05, 9.772200000000147e-05, 9.773600000000104e-05, 9.794400000000258e-05, 9.869499999999587e-05, 9.854200000000007e-05, 9.783400000000497e-05, 9.804199999999957e-05, 9.78059999999989e-05, 9.784700000000507e-05, 9.80410000000001e-05, 9.799999999999393e-05, 9.844399999999615e-05, 9.831899999999949e-05, 9.83609999999982e-05, 9.843100000000299e-05, 9.838899999999734e-05, 9.856999999999921e-05, 9.76809999999953e-05, 9.859800000000529e-05, 9.8333000000006e-05, 9.790200000000387e-05, 9.805499999999967e-05, 9.777799999999975e-05]</msg>
<status status="PASS" starttime="20201112 10:16:12.923" endtime="20201112 10:16:12.927"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.911" endtime="20201112 10:16:12.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.936" endtime="20201112 10:16:12.939"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:12.944" endtime="20201112 10:16:12.966"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.940" endtime="20201112 10:16:12.968"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.931" endtime="20201112 10:16:12.969"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.415" endtime="20201112 10:16:12.970"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.414" endtime="20201112 10:16:12.970"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:12.993" endtime="20201112 10:16:13.016"></status>
</kw>
<msg timestamp="20201112 10:16:13.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:12.990" endtime="20201112 10:16:13.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:13.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:13.019" endtime="20201112 10:16:13.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:13.025" endtime="20201112 10:16:13.029"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.983" endtime="20201112 10:16:13.031"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.977" endtime="20201112 10:16:13.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:13.049" endtime="20201112 10:16:13.388"></status>
</kw>
<msg timestamp="20201112 10:16:13.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042501681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042600556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:13.046" endtime="20201112 10:16:13.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:13.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042501681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042600556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:13.398" endtime="20201112 10:16:13.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:13.417" endtime="20201112 10:16:13.422"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.038" endtime="20201112 10:16:13.424"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.034" endtime="20201112 10:16:13.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:13.436" level="INFO">${RESULT} = [{'time': 0.042600556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.887499999999827e-05, 'source_diff': 9.887499999999827e-05}, {'time': 0.042706583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:13.427" endtime="20201112 10:16:13.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:13.467" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:13.438" endtime="20201112 10:16:13.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:13.478" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 10:16:13.476" endtime="20201112 10:16:13.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:13.484" level="INFO">VALUE: [9.887499999999827e-05, 9.879100000000085e-05, 9.873600000000204e-05, 9.919400000000383e-05, 9.89860000000023e-05, 9.912499999999852e-05, 9.876400000000118e-05, 9.886100000000564e-05, 9.91809999999968e-05, 9.888899999999784e-05, 9.891600000000444e-05, 9.911099999999895e-05, 9.917999999999733e-05, 9.873600000000204e-05, 9.97080000000039e-05, 9.954199999999414e-05, 9.915200000000512e-05, 9.927799999999432e-05, 9.906999999999971e-05, 9.95280000000015e-05, 9.937500000000571e-05, 9.886200000000511e-05, 9.902700000000153e-05, 9.936100000000614e-05, 9.897200000000272e-05, 9.944400000000408e-05, 9.911100000000589e-05, 9.955600000000064e-05, 9.91530000000046e-05, 9.89860000000023e-05, 9.926400000000168e-05, 9.927800000000125e-05, 9.937499999999877e-05, 9.927700000000178e-05, 9.883299999999956e-05, 9.956900000000074e-05, 9.884699999999913e-05, 9.927800000000125e-05, 9.950000000000236e-05, 9.969499999999687e-05, 9.890299999999741e-05, 9.934699999999963e-05, 9.920799999999647e-05, 9.879200000000032e-05, 9.915199999999819e-05, 9.963899999999859e-05, 9.900000000000186e-05, 9.877799999999382e-05, 9.941699999999748e-05, 9.922300000000245e-05]</msg>
<status status="PASS" starttime="20201112 10:16:13.481" endtime="20201112 10:16:13.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.469" endtime="20201112 10:16:13.487"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:13.494" endtime="20201112 10:16:13.496"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:13.502" endtime="20201112 10:16:13.524"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.498" endtime="20201112 10:16:13.525"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.489" endtime="20201112 10:16:13.527"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.972" endtime="20201112 10:16:13.528"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:12.971" endtime="20201112 10:16:13.528"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:13.551" endtime="20201112 10:16:13.574"></status>
</kw>
<msg timestamp="20201112 10:16:13.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:13.548" endtime="20201112 10:16:13.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:13.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:13.577" endtime="20201112 10:16:13.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:13.583" endtime="20201112 10:16:13.587"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.540" endtime="20201112 10:16:13.589"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.534" endtime="20201112 10:16:13.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:13.607" endtime="20201112 10:16:13.946"></status>
</kw>
<msg timestamp="20201112 10:16:13.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042640069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04274025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:16:13.603" endtime="20201112 10:16:13.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:13.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042640069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04274025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:16:13.956" endtime="20201112 10:16:13.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:13.974" endtime="20201112 10:16:13.980"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.596" endtime="20201112 10:16:13.982"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.592" endtime="20201112 10:16:13.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:13.993" level="INFO">${RESULT} = [{'time': 0.04274025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001001809999999978, 'source_diff': 0.0001001809999999978}, {'time': 0.042853278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:16:13.985" endtime="20201112 10:16:13.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:14.024" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:13.996" endtime="20201112 10:16:14.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.035" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 10:16:14.033" endtime="20201112 10:16:14.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.041" level="INFO">VALUE: [0.0001001809999999978, 0.0001003610000000002, 0.00010027799999999532, 0.00010033400000000053, 9.977800000000175e-05, 0.00010045899999999719, 9.970799999999697e-05, 9.997199999999679e-05, 9.995799999999722e-05, 0.00010019400000000483, 9.994400000000458e-05, 0.00010043099999999805, 9.995800000000415e-05, 0.00010045900000000413, 0.0001004860000000038, 0.00010018100000000474, 0.00010006900000000124, 9.994399999999765e-05, 0.00010002799999999507, 9.991699999999798e-05, 0.00010042999999999858, 0.00010034700000000063, 0.00010063899999999959, 9.988899999999884e-05, 9.977800000000175e-05, 9.977800000000175e-05, 0.0001006809999999983, 0.00010030500000000192, 9.998599999999636e-05, 0.00010011099999999995, 9.995800000000415e-05, 0.00010027799999999532, 0.00010007000000000071, 9.98609999999997e-05, 0.00010058399999999384, 0.0001003060000000014, 0.00010045799999999772, 0.00010023600000000354, 0.00010044399999999815, 0.00010056900000000174, 0.00010013899999999909, 0.00010058300000000131, 0.0001006530000000061, 9.997200000000372e-05, 0.00010073600000000404, 9.98479999999996e-05, 0.00010009799999999985, 0.00010020900000000388, 0.00010058300000000131, 0.00010062500000000002]</msg>
<status status="PASS" starttime="20201112 10:16:14.038" endtime="20201112 10:16:14.042"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.026" endtime="20201112 10:16:14.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.051" endtime="20201112 10:16:14.053"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:14.059" endtime="20201112 10:16:14.081"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.054" endtime="20201112 10:16:14.083"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.046" endtime="20201112 10:16:14.084"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.530" endtime="20201112 10:16:14.085"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.529" endtime="20201112 10:16:14.085"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.108" endtime="20201112 10:16:14.131"></status>
</kw>
<msg timestamp="20201112 10:16:14.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:14.105" endtime="20201112 10:16:14.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:14.134" endtime="20201112 10:16:14.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.141" endtime="20201112 10:16:14.144"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.097" endtime="20201112 10:16:14.146"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.092" endtime="20201112 10:16:14.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.164" endtime="20201112 10:16:14.515"></status>
</kw>
<msg timestamp="20201112 10:16:14.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04295, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043051208, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 10:16:14.161" endtime="20201112 10:16:14.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04295, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043051208, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 10:16:14.525" endtime="20201112 10:16:14.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.543" endtime="20201112 10:16:14.551"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.153" endtime="20201112 10:16:14.552"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.149" endtime="20201112 10:16:14.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:14.564" level="INFO">${RESULT} = [{'time': 0.043051208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010120799999999847, 'source_diff': 0.00010120799999999847}, {'time': 0.043160222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:14.555" endtime="20201112 10:16:14.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:14.595" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:14.566" endtime="20201112 10:16:14.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.606" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 10:16:14.603" endtime="20201112 10:16:14.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.611" level="INFO">VALUE: [0.00010120799999999847, 0.00010115299999999966, 0.0001008060000000019, 0.00010076400000000318, 0.00010084700000000113, 0.00010140299999999991, 0.00010140299999999991, 0.00010091699999999898, 0.00010172199999999854, 0.0001012359999999976, 0.00010101300000000396, 0.00010077699999999634, 0.00010144399999999915, 0.00010077799999999582, 0.00010115299999999966, 0.00010108400000000128, 0.00010156999999999528, 0.00010155600000000264, 0.00010113900000000009, 0.00010161200000000092, 0.00010102699999999659, 0.00010111100000000095, 0.00010076400000000318, 0.00010143099999999905, 0.00010124999999999718, 0.00010154200000000307, 0.00010134699999999469, 0.00010169499999999887, 0.0001011809999999988, 0.0001017080000000059, 0.00010112500000000052, 0.00010084700000000113, 0.00010122199999999804, 0.0001008610000000007, 0.00010161100000000145, 0.00010162500000000102, 0.00010134700000000163, 0.00010133400000000153, 0.00010148599999999786, 0.00010163899999999365, 0.00010132000000000196, 0.00010072199999999754, 0.00010079200000000232, 0.00010165300000000016, 0.00010155499999999623, 0.00010112500000000052, 0.00010138900000000034, 0.00010166699999999973, 0.00010126399999999675, 0.00010161200000000092]</msg>
<status status="PASS" starttime="20201112 10:16:14.608" endtime="20201112 10:16:14.613"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.596" endtime="20201112 10:16:14.614"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.621" endtime="20201112 10:16:14.623"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:14.629" endtime="20201112 10:16:14.651"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.625" endtime="20201112 10:16:14.653"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.616" endtime="20201112 10:16:14.654"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.087" endtime="20201112 10:16:14.655"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.086" endtime="20201112 10:16:14.655"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.678" endtime="20201112 10:16:14.701"></status>
</kw>
<msg timestamp="20201112 10:16:14.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:14.675" endtime="20201112 10:16:14.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:14.705" endtime="20201112 10:16:14.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.711" endtime="20201112 10:16:14.715"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.667" endtime="20201112 10:16:14.716"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.662" endtime="20201112 10:16:14.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.735" endtime="20201112 10:16:15.062"></status>
</kw>
<msg timestamp="20201112 10:16:15.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042610083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042712528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:14.731" endtime="20201112 10:16:15.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:15.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042610083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042712528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:15.071" endtime="20201112 10:16:15.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:15.090" endtime="20201112 10:16:15.095"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.724" endtime="20201112 10:16:15.097"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.719" endtime="20201112 10:16:15.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:15.109" level="INFO">${RESULT} = [{'time': 0.042712528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010244499999999962, 'source_diff': 0.00010244499999999962}, {'time': 0.042818542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:15.100" endtime="20201112 10:16:15.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:15.139" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:15.111" endtime="20201112 10:16:15.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:15.150" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 10:16:15.148" endtime="20201112 10:16:15.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:15.156" level="INFO">VALUE: [0.00010244499999999962, 0.0001025280000000045, 0.0001022359999999986, 0.00010249999999999843, 0.00010259800000000235, 0.00010262499999999508, 0.00010198599999999836, 0.00010256900000000374, 0.00010233300000000306, 0.00010229200000000382, 0.00010236200000000167, 0.00010222199999999904, 0.00010177800000000375, 0.0001023480000000021, 0.00010173700000000452, 0.00010244400000000015, 0.00010259699999999594, 0.00010268000000000083, 0.0001025689999999968, 0.00010209700000000238, 0.00010170799999999897, 0.00010251400000000493, 0.0001017359999999981, 0.00010252799999999757, 0.00010231900000000349, 0.00010219500000000631, 0.00010195799999999922, 0.00010176399999999725, 0.00010181900000000299, 0.00010216700000000023, 0.00010245799999999972, 0.00010212499999999458, 0.00010269499999999987, 0.00010177800000000375, 0.00010187500000000127, 0.00010249999999999843, 0.00010223600000000554, 0.00010249999999999843, 0.00010272199999999954, 0.00010212499999999458, 0.00010173600000000504, 0.00010193099999999955, 0.00010190300000000041, 0.00010232000000000296, 0.0001020139999999975, 0.00010216600000000076, 0.00010255499999999723, 0.00010190200000000094, 0.00010190300000000041, 0.00010265300000000116]</msg>
<status status="PASS" starttime="20201112 10:16:15.153" endtime="20201112 10:16:15.157"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.141" endtime="20201112 10:16:15.159"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:15.166" endtime="20201112 10:16:15.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:15.174" endtime="20201112 10:16:15.196"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.169" endtime="20201112 10:16:15.197"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.161" endtime="20201112 10:16:15.199"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.657" endtime="20201112 10:16:15.200"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.656" endtime="20201112 10:16:15.200"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:15.223" endtime="20201112 10:16:15.246"></status>
</kw>
<msg timestamp="20201112 10:16:15.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:15.220" endtime="20201112 10:16:15.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:15.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:15.249" endtime="20201112 10:16:15.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:15.256" endtime="20201112 10:16:15.260"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.212" endtime="20201112 10:16:15.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.206" endtime="20201112 10:16:15.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:15.279" endtime="20201112 10:16:15.620"></status>
</kw>
<msg timestamp="20201112 10:16:15.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042657222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042760694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:15.276" endtime="20201112 10:16:15.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:15.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042657222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042760694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:15.630" endtime="20201112 10:16:15.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:15.648" endtime="20201112 10:16:15.653"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.269" endtime="20201112 10:16:15.655"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.264" endtime="20201112 10:16:15.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:15.667" level="INFO">${RESULT} = [{'time': 0.042760694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010347200000000029, 'source_diff': 0.00010347200000000029}, {'time': 0.042873708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:15.658" endtime="20201112 10:16:15.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:15.697" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:15.669" endtime="20201112 10:16:15.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:15.708" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 10:16:15.706" endtime="20201112 10:16:15.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:15.714" level="INFO">VALUE: [0.00010347200000000029, 0.00010368000000000183, 0.0001036940000000014, 0.00010293100000000055, 0.00010293000000000108, 0.0001036940000000014, 0.00010308400000000328, 0.00010331999999999703, 0.00010318099999999386, 0.00010351299999999952, 0.00010366600000000226, 0.0001035689999999978, 0.0001029860000000063, 0.0001027359999999991, 0.00010365300000000216, 0.00010294400000000065, 0.00010311099999999601, 0.00010344500000000062, 0.00010327799999999832, 0.00010301400000000543, 0.00010362500000000302, 0.00010283299999999662, 0.0001034019999999955, 0.00010333300000000406, 0.00010331999999999703, 0.00010281900000000399, 0.00010284699999999619, 0.00010347200000000029, 0.00010265300000000116, 0.000103028000000005, 0.00010344500000000062, 0.00010280599999999696, 0.00010348599999999986, 0.00010276399999999825, 0.00010286099999999576, 0.00010284699999999619, 0.00010348599999999986, 0.00010365300000000216, 0.00010356999999999728, 0.00010340300000000191, 0.00010327799999999832, 0.00010286099999999576, 0.00010284699999999619, 0.00010297199999999979, 0.00010276400000000518, 0.00010340300000000191, 0.00010290300000000141, 0.00010297199999999979, 0.00010315300000000166, 0.0001030689999999973]</msg>
<status status="PASS" starttime="20201112 10:16:15.711" endtime="20201112 10:16:15.715"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.699" endtime="20201112 10:16:15.717"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:15.723" endtime="20201112 10:16:15.726"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:15.732" endtime="20201112 10:16:15.754"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.727" endtime="20201112 10:16:15.755"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.719" endtime="20201112 10:16:15.757"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.202" endtime="20201112 10:16:15.757"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.201" endtime="20201112 10:16:15.758"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:15.781" endtime="20201112 10:16:15.804"></status>
</kw>
<msg timestamp="20201112 10:16:15.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:15.777" endtime="20201112 10:16:15.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:15.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:15.807" endtime="20201112 10:16:15.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:15.814" endtime="20201112 10:16:15.817"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.770" endtime="20201112 10:16:15.819"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.764" endtime="20201112 10:16:15.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:15.837" endtime="20201112 10:16:16.176"></status>
</kw>
<msg timestamp="20201112 10:16:16.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042464417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042568653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:15.834" endtime="20201112 10:16:16.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:16.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042464417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042568653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:16.185" endtime="20201112 10:16:16.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:16.203" endtime="20201112 10:16:16.208"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.826" endtime="20201112 10:16:16.210"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.822" endtime="20201112 10:16:16.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:16.222" level="INFO">${RESULT} = [{'time': 0.042568653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001042360000000006, 'source_diff': 0.0001042360000000006}, {'time': 0.042679681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:16.213" endtime="20201112 10:16:16.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:16.252" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:16.224" endtime="20201112 10:16:16.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:16.264" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 10:16:16.261" endtime="20201112 10:16:16.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:16.269" level="INFO">VALUE: [0.0001042360000000006, 0.00010441699999999554, 0.00010406900000000524, 0.00010402699999999959, 0.00010450000000000043, 0.00010458299999999837, 0.00010415300000000266, 0.0001040139999999995, 0.00010466700000000273, 0.0001037360000000001, 0.00010379199999999839, 0.00010440300000000291, 0.00010372300000000001, 0.00010411099999999701, 0.00010437500000000377, 0.00010430499999999898, 0.0001046940000000024, 0.00010445800000000172, 0.00010388900000000284, 0.00010436099999999726, 0.00010408399999999735, 0.0001043610000000042, 0.0001043060000000054, 0.00010412500000000352, 0.00010452700000000009, 0.00010372200000000054, 0.00010448600000000086, 0.00010437500000000377, 0.00010436099999999726, 0.00010436099999999726, 0.00010406999999999778, 0.00010401300000000002, 0.00010441699999999554, 0.00010426399999999975, 0.0001040139999999995, 0.00010427699999999984, 0.0001046810000000023, 0.00010461099999999751, 0.0001042360000000006, 0.0001037219999999936, 0.0001042360000000006, 0.00010408399999999735, 0.00010458400000000478, 0.000104514, 0.0001045410000000066, 0.00010455499999999923, 0.00010420800000000147, 0.0001038889999999959, 0.0001043060000000054, 0.00010406999999999778]</msg>
<status status="PASS" starttime="20201112 10:16:16.266" endtime="20201112 10:16:16.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.254" endtime="20201112 10:16:16.281"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:16.288" endtime="20201112 10:16:16.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:16.296" endtime="20201112 10:16:16.318"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.292" endtime="20201112 10:16:16.320"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.283" endtime="20201112 10:16:16.321"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.760" endtime="20201112 10:16:16.322"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:15.759" endtime="20201112 10:16:16.322"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:16.346" endtime="20201112 10:16:16.371"></status>
</kw>
<msg timestamp="20201112 10:16:16.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:16.343" endtime="20201112 10:16:16.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:16.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:16.374" endtime="20201112 10:16:16.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:16.381" endtime="20201112 10:16:16.384"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.335" endtime="20201112 10:16:16.386"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.329" endtime="20201112 10:16:16.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:16.404" endtime="20201112 10:16:16.743"></status>
</kw>
<msg timestamp="20201112 10:16:16.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043830931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043935944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:16.401" endtime="20201112 10:16:16.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:16.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043830931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043935944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:16.752" endtime="20201112 10:16:16.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:16.771" endtime="20201112 10:16:16.778"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.393" endtime="20201112 10:16:16.780"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.389" endtime="20201112 10:16:16.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:16.792" level="INFO">${RESULT} = [{'time': 0.043935944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010501300000000102, 'source_diff': 0.00010501300000000102}, {'time': 0.044045028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:16.783" endtime="20201112 10:16:16.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:16.822" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:16.794" endtime="20201112 10:16:16.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:16.833" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 10:16:16.831" endtime="20201112 10:16:16.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:16.838" level="INFO">VALUE: [0.00010501300000000102, 0.00010552800000000057, 0.00010490299999999647, 0.00010540299999999697, 0.00010527800000000032, 0.00010536099999999826, 0.00010494500000000212, 0.00010534799999999817, 0.00010509799999999792, 0.00010548700000000133, 0.00010497200000000179, 0.00010493000000000308, 0.00010570800000000297, 0.00010552800000000057, 0.00010570800000000297, 0.00010482000000000546, 0.00010494500000000212, 0.00010548599999999492, 0.00010568099999999636, 0.00010563799999999818, 0.00010513800000000462, 0.00010502700000000059, 0.00010529199999999989, 0.00010543100000000305, 0.00010569399999999646, 0.00010480599999999896, 0.00010566699999999679, 0.00010556999999999928, 0.00010479199999999939, 0.00010561099999999851, 0.00010548600000000186, 0.00010547199999999535, 0.00010565300000000416, 0.00010475000000000068, 0.00010569399999999646, 0.00010486099999999776, 0.00010554200000000014, 0.00010552800000000057, 0.00010475000000000068, 0.00010561199999999799, 0.0001055689999999998, 0.00010498600000000136, 0.00010572200000000254, 0.00010569399999999646, 0.00010470800000000197, 0.00010472200000000154, 0.00010557000000000621, 0.00010511099999999801, 0.00010541700000000348, 0.00010536199999999774]</msg>
<status status="PASS" starttime="20201112 10:16:16.835" endtime="20201112 10:16:16.840"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.824" endtime="20201112 10:16:16.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:16.848" endtime="20201112 10:16:16.851"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:16.856" endtime="20201112 10:16:16.878"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.852" endtime="20201112 10:16:16.880"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.843" endtime="20201112 10:16:16.881"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.324" endtime="20201112 10:16:16.882"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.323" endtime="20201112 10:16:16.882"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:16.905" endtime="20201112 10:16:16.928"></status>
</kw>
<msg timestamp="20201112 10:16:16.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:16.902" endtime="20201112 10:16:16.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:16.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:16.931" endtime="20201112 10:16:16.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:16.938" endtime="20201112 10:16:16.942"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.894" endtime="20201112 10:16:16.943"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.889" endtime="20201112 10:16:16.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:16.961" endtime="20201112 10:16:17.299"></status>
</kw>
<msg timestamp="20201112 10:16:17.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042334806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042441375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:16.958" endtime="20201112 10:16:17.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042334806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042441375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:17.308" endtime="20201112 10:16:17.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.327" endtime="20201112 10:16:17.332"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.951" endtime="20201112 10:16:17.334"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.946" endtime="20201112 10:16:17.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:17.346" level="INFO">${RESULT} = [{'time': 0.042441375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001065690000000008, 'source_diff': 0.0001065690000000008}, {'time': 0.042553417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:17.337" endtime="20201112 10:16:17.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:17.377" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:17.348" endtime="20201112 10:16:17.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.388" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 10:16:17.386" endtime="20201112 10:16:17.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.394" level="INFO">VALUE: [0.0001065690000000008, 0.0001060560000000002, 0.00010619499999999643, 0.00010594500000000312, 0.00010570900000000244, 0.00010615299999999772, 0.00010627700000000184, 0.0001058610000000057, 0.00010611099999999901, 0.00010593000000000408, 0.00010586099999999876, 0.00010611100000000595, 0.00010606999999999978, 0.00010669500000000387, 0.00010654200000000114, 0.00010623599999999567, 0.00010631899999999361, 0.00010626400000000175, 0.00010627800000000132, 0.00010652799999999463, 0.0001060690000000003, 0.00010577800000000082, 0.00010632000000000003, 0.00010627800000000132, 0.000106514000000002, 0.00010586199999999824, 0.00010616599999999782, 0.0001062769999999949, 0.00010644399999999721, 0.00010665299999999822, 0.00010611099999999901, 0.00010672300000000301, 0.00010595900000000269, 0.0001065560000000007, 0.00010657000000000028, 0.00010572300000000201, 0.00010658300000000037, 0.00010623599999999567, 0.00010666599999999832, 0.00010604200000000064, 0.00010631900000000055, 0.00010656999999999334, 0.00010594500000000312, 0.00010576400000000125, 0.0001057360000000021, 0.00010612499999999858, 0.00010643000000000458, 0.00010659699999999994, 0.00010611099999999901, 0.00010648600000000286]</msg>
<status status="PASS" starttime="20201112 10:16:17.391" endtime="20201112 10:16:17.396"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.379" endtime="20201112 10:16:17.397"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.404" endtime="20201112 10:16:17.407"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:17.412" endtime="20201112 10:16:17.434"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.408" endtime="20201112 10:16:17.436"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.399" endtime="20201112 10:16:17.437"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.884" endtime="20201112 10:16:17.438"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:16.883" endtime="20201112 10:16:17.438"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.461" endtime="20201112 10:16:17.485"></status>
</kw>
<msg timestamp="20201112 10:16:17.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:17.458" endtime="20201112 10:16:17.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:17.488" endtime="20201112 10:16:17.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.495" endtime="20201112 10:16:17.498"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.451" endtime="20201112 10:16:17.500"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.445" endtime="20201112 10:16:17.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.518" endtime="20201112 10:16:17.858"></status>
</kw>
<msg timestamp="20201112 10:16:17.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042573097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042680139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:17.515" endtime="20201112 10:16:17.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042573097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042680139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:17.867" endtime="20201112 10:16:17.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.885" endtime="20201112 10:16:17.891"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.508" endtime="20201112 10:16:17.892"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.503" endtime="20201112 10:16:17.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:17.904" level="INFO">${RESULT} = [{'time': 0.042680139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010704200000000164, 'source_diff': 0.00010704200000000164}, {'time': 0.042795167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:17.895" endtime="20201112 10:16:17.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:17.935" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:17.906" endtime="20201112 10:16:17.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.946" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 10:16:17.944" endtime="20201112 10:16:17.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:17.951" level="INFO">VALUE: [0.00010704200000000164, 0.00010675000000000268, 0.0001068889999999989, 0.00010769499999999793, 0.00010761099999999357, 0.0001073889999999994, 0.00010706899999999436, 0.00010761100000000051, 0.00010727800000000232, 0.00010725000000000318, 0.00010707000000000078, 0.00010712499999999958, 0.00010715299999999872, 0.00010690299999999847, 0.0001074019999999995, 0.000106901999999999, 0.00010683300000000062, 0.00010677799999999488, 0.0001067360000000031, 0.00010759700000000094, 0.00010687499999999933, 0.00010749999999999649, 0.00010677800000000182, 0.00010752700000000309, 0.00010733300000000112, 0.0001073889999999994, 0.00010673599999999617, 0.00010686099999999976, 0.00010684700000000019, 0.00010679200000000139, 0.00010727799999999538, 0.00010745899999999725, 0.0001068889999999989, 0.00010695800000000422, 0.00010698599999999642, 0.00010733300000000112, 0.0001076940000000054, 0.0001071940000000049, 0.00010694399999999771, 0.00010682000000000053, 0.0001067360000000031, 0.0001073889999999994, 0.00010729199999999495, 0.00010716599999999882, 0.00010754099999999572, 0.000106901999999999, 0.00010730499999999504, 0.0001075560000000017, 0.00010727799999999538, 0.00010707000000000078]</msg>
<status status="PASS" starttime="20201112 10:16:17.948" endtime="20201112 10:16:17.953"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.937" endtime="20201112 10:16:17.955"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:17.961" endtime="20201112 10:16:17.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:17.969" endtime="20201112 10:16:17.991"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.965" endtime="20201112 10:16:17.993"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.956" endtime="20201112 10:16:17.994"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.441" endtime="20201112 10:16:17.995"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.439" endtime="20201112 10:16:17.995"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:18.019" endtime="20201112 10:16:18.042"></status>
</kw>
<msg timestamp="20201112 10:16:18.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:18.015" endtime="20201112 10:16:18.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:18.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:18.046" endtime="20201112 10:16:18.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:18.052" endtime="20201112 10:16:18.056"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.008" endtime="20201112 10:16:18.057"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.002" endtime="20201112 10:16:18.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:18.075" endtime="20201112 10:16:18.376"></status>
</kw>
<msg timestamp="20201112 10:16:18.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043060431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043168444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:18.072" endtime="20201112 10:16:18.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:18.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043060431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043168444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:18.380" endtime="20201112 10:16:18.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:18.389" endtime="20201112 10:16:18.391"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.065" endtime="20201112 10:16:18.392"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.060" endtime="20201112 10:16:18.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:18.398" level="INFO">${RESULT} = [{'time': 0.043168444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010801299999999708, 'source_diff': 0.00010801299999999708}, {'time': 0.043285458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:18.393" endtime="20201112 10:16:18.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:18.412" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:18.399" endtime="20201112 10:16:18.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:18.417" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 10:16:18.416" endtime="20201112 10:16:18.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:18.419" level="INFO">VALUE: [0.00010801299999999708, 0.0001078889999999999, 0.00010824999999999724, 0.0001080549999999958, 0.00010848599999999792, 0.00010798600000000436, 0.00010834800000000117, 0.00010797200000000479, 0.00010780600000000196, 0.00010847299999999782, 0.00010841600000000007, 0.00010861100000000151, 0.00010869399999999946, 0.00010863900000000065, 0.00010819399999999896, 0.00010848600000000486, 0.00010793099999999861, 0.00010787500000000033, 0.00010786200000000024, 0.00010862500000000108, 0.0001082219999999981, 0.0001080140000000035, 0.00010836100000000126, 0.00010836100000000126, 0.00010870799999999903, 0.00010818099999999886, 0.0001087089999999985, 0.0001080560000000022, 0.00010770900000000444, 0.00010779199999999545, 0.00010826299999999733, 0.0001082219999999981, 0.0001077219999999976, 0.00010851399999999706, 0.00010770799999999803, 0.00010802800000000307, 0.00010794499999999818, 0.00010787500000000033, 0.00010852699999999715, 0.00010787500000000033, 0.00010813900000000015, 0.00010854200000000314, 0.00010861100000000151, 0.00010869399999999946, 0.00010790299999999947, 0.00010836100000000126, 0.00010812500000000058, 0.00010837500000000083, 0.00010854099999999672, 0.00010798600000000436]</msg>
<status status="PASS" starttime="20201112 10:16:18.418" endtime="20201112 10:16:18.420"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.413" endtime="20201112 10:16:18.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:18.424" endtime="20201112 10:16:18.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:18.428" endtime="20201112 10:16:18.447"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.426" endtime="20201112 10:16:18.448"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.422" endtime="20201112 10:16:18.449"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.997" endtime="20201112 10:16:18.449"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:17.996" endtime="20201112 10:16:18.449"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:18.460" endtime="20201112 10:16:18.481"></status>
</kw>
<msg timestamp="20201112 10:16:18.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:18.458" endtime="20201112 10:16:18.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:18.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:18.485" endtime="20201112 10:16:18.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:18.491" endtime="20201112 10:16:18.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.455" endtime="20201112 10:16:18.497"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.453" endtime="20201112 10:16:18.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:18.515" endtime="20201112 10:16:18.853"></status>
</kw>
<msg timestamp="20201112 10:16:18.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024954667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025063847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:18.511" endtime="20201112 10:16:18.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:18.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024954667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025063847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:18.862" endtime="20201112 10:16:18.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:18.880" endtime="20201112 10:16:18.888"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.504" endtime="20201112 10:16:18.890"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.499" endtime="20201112 10:16:18.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:18.902" level="INFO">${RESULT} = [{'time': 0.025063847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010918000000000039, 'source_diff': 0.00010918000000000039}, {'time': 0.025177861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:18.893" endtime="20201112 10:16:18.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:18.932" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:18.904" endtime="20201112 10:16:18.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:18.943" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 10:16:18.941" endtime="20201112 10:16:18.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:18.948" level="INFO">VALUE: [0.00010918000000000039, 0.00010906899999999983, 0.00010931900000000008, 0.00010955600000000024, 0.00010943100000000011, 0.00010898599999999842, 0.00010876399999999731, 0.0001090280000000006, 0.00010877700000000087, 0.00010902700000000112, 0.00010904200000000017, 0.00010970800000000003, 0.00010886100000000176, 0.00010873599999999817, 0.00010965300000000122, 0.00010947199999999935, 0.0001090280000000006, 0.00010913900000000115, 0.00010902700000000112, 0.00010948599999999892, 0.00010931900000000008, 0.000109208999999999, 0.00010961099999999904, 0.00010934699999999922, 0.00010950000000000196, 0.00010925000000000171, 0.00010961099999999904, 0.00010965199999999828, 0.00010931900000000008, 0.00010879100000000044, 0.0001088890000000009, 0.00010968100000000036, 0.00010909699999999897, 0.00010933399999999913, 0.0001090280000000006, 0.00010887500000000133, 0.00010874999999999774, 0.00010930499999999704, 0.00010920799999999953, 0.00010886100000000176, 0.00010918000000000039, 0.00010930599999999999, 0.00010877800000000035, 0.00010897199999999885, 0.00010877800000000035, 0.00010899999999999799, 0.0001090280000000006, 0.0001094159999999976, 0.00010879100000000044, 0.00010919399999999996]</msg>
<status status="PASS" starttime="20201112 10:16:18.945" endtime="20201112 10:16:18.950"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.934" endtime="20201112 10:16:18.951"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:18.958" endtime="20201112 10:16:18.961"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:18.966" endtime="20201112 10:16:18.988"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.962" endtime="20201112 10:16:18.989"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.953" endtime="20201112 10:16:18.991"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.451" endtime="20201112 10:16:18.992"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.450" endtime="20201112 10:16:18.992"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:19.015" endtime="20201112 10:16:19.038"></status>
</kw>
<msg timestamp="20201112 10:16:19.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:19.012" endtime="20201112 10:16:19.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:19.042" endtime="20201112 10:16:19.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:19.048" endtime="20201112 10:16:19.052"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.004" endtime="20201112 10:16:19.053"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.998" endtime="20201112 10:16:19.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:19.072" endtime="20201112 10:16:19.410"></status>
</kw>
<msg timestamp="20201112 10:16:19.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042592097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042701861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:19.068" endtime="20201112 10:16:19.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042592097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042701861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:19.419" endtime="20201112 10:16:19.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:19.438" endtime="20201112 10:16:19.444"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.061" endtime="20201112 10:16:19.446"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.056" endtime="20201112 10:16:19.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:19.458" level="INFO">${RESULT} = [{'time': 0.042701861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010976399999999831, 'source_diff': 0.00010976399999999831}, {'time': 0.042814875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:19.449" endtime="20201112 10:16:19.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:19.488" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:19.460" endtime="20201112 10:16:19.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.499" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 10:16:19.497" endtime="20201112 10:16:19.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.505" level="INFO">VALUE: [0.00010976399999999831, 0.00011008300000000387, 0.00011006999999999684, 0.00011019500000000043, 0.00011066700000000179, 0.00010991600000000157, 0.00011011099999999607, 0.0001100560000000042, 0.00010981900000000405, 0.00010994400000000071, 0.00011002799999999813, 0.00011030599999999752, 0.00011044500000000068, 0.000110596999999997, 0.00011013900000000215, 0.00011002800000000507, 0.00011052700000000609, 0.00011037500000000283, 0.00011015300000000172, 0.000110514000000006, 0.00011005599999999727, 0.00010990300000000147, 0.00011055599999999777, 0.00011008399999999641, 0.00011045900000000025, 0.00011068099999999442, 0.00011018000000000139, 0.00011024999999999924, 0.00011019400000000096, 0.00010987500000000233, 0.00011066699999999485, 0.00011024999999999924, 0.00011023599999999967, 0.00011019499999999349, 0.00010997299999999932, 0.00010999999999999899, 0.00011052799999999863, 0.00010980599999999702, 0.00011036099999999632, 0.0001105560000000047, 0.00010984700000000319, 0.00011027799999999838, 0.00011033299999999718, 0.00010987500000000233, 0.00011027799999999838, 0.00011052699999999915, 0.00010994400000000071, 0.00010991700000000104, 0.00010974999999999874, 0.00011023599999999967]</msg>
<status status="PASS" starttime="20201112 10:16:19.502" endtime="20201112 10:16:19.506"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.490" endtime="20201112 10:16:19.508"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:19.515" endtime="20201112 10:16:19.517"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:19.523" endtime="20201112 10:16:19.545"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.519" endtime="20201112 10:16:19.547"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.510" endtime="20201112 10:16:19.548"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.994" endtime="20201112 10:16:19.549"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.993" endtime="20201112 10:16:19.549"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:19.572" endtime="20201112 10:16:19.595"></status>
</kw>
<msg timestamp="20201112 10:16:19.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:19.569" endtime="20201112 10:16:19.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:19.599" endtime="20201112 10:16:19.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:19.605" endtime="20201112 10:16:19.609"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.561" endtime="20201112 10:16:19.610"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.556" endtime="20201112 10:16:19.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:19.629" endtime="20201112 10:16:19.967"></status>
</kw>
<msg timestamp="20201112 10:16:19.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042436458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042547569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:19.625" endtime="20201112 10:16:19.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:19.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042436458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042547569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:19.977" endtime="20201112 10:16:19.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:19.995" endtime="20201112 10:16:20.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.618" endtime="20201112 10:16:20.003"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.613" endtime="20201112 10:16:20.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:20.015" level="INFO">${RESULT} = [{'time': 0.042547569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011111099999999707, 'source_diff': 0.00011111099999999707}, {'time': 0.042663583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:20.006" endtime="20201112 10:16:20.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:20.045" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:20.017" endtime="20201112 10:16:20.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:20.056" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 10:16:20.054" endtime="20201112 10:16:20.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:20.062" level="INFO">VALUE: [0.00011111099999999707, 0.00011129099999999947, 0.00011088800000000343, 0.00011076399999999931, 0.00011154099999999972, 0.00011102799999999913, 0.00011079199999999845, 0.00011097300000000032, 0.00011086099999999682, 0.00011097200000000085, 0.00011098699999999989, 0.00011148600000000092, 0.00011090199999999606, 0.00011136099999999732, 0.00011120800000000153, 0.00011098600000000042, 0.00011165299999999628, 0.00011129199999999895, 0.00011169500000000193, 0.00011148700000000039, 0.00011137499999999689, 0.0001115549999999993, 0.0001107769999999994, 0.00011115299999999578, 0.00011140300000000297, 0.00011119400000000196, 0.00011076399999999931, 0.00011147300000000082, 0.00011107000000000478, 0.00011143099999999517, 0.00011129099999999947, 0.00011106899999999836, 0.00011077799999999888, 0.00011166700000000279, 0.00011074999999999974, 0.000111596999999998, 0.0001112220000000011, 0.00011118100000000186, 0.00011086100000000376, 0.00011102799999999913, 0.00011079099999999897, 0.00011141600000000307, 0.00011131899999999861, 0.00011080499999999854, 0.00011125000000000024, 0.00011161099999999757, 0.00011115299999999578, 0.00011102799999999913, 0.0001110549999999988, 0.00011151400000000006]</msg>
<status status="PASS" starttime="20201112 10:16:20.059" endtime="20201112 10:16:20.063"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.047" endtime="20201112 10:16:20.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:20.071" endtime="20201112 10:16:20.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:20.080" endtime="20201112 10:16:20.102"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.076" endtime="20201112 10:16:20.104"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.067" endtime="20201112 10:16:20.105"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.551" endtime="20201112 10:16:20.106"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:19.550" endtime="20201112 10:16:20.106"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:20.129" endtime="20201112 10:16:20.152"></status>
</kw>
<msg timestamp="20201112 10:16:20.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:20.126" endtime="20201112 10:16:20.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:20.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:20.156" endtime="20201112 10:16:20.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:20.162" endtime="20201112 10:16:20.166"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.118" endtime="20201112 10:16:20.167"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.112" endtime="20201112 10:16:20.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:20.186" endtime="20201112 10:16:20.525"></status>
</kw>
<msg timestamp="20201112 10:16:20.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042713458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042825208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:20.182" endtime="20201112 10:16:20.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:20.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042713458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042825208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:20.535" endtime="20201112 10:16:20.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:20.553" endtime="20201112 10:16:20.558"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.175" endtime="20201112 10:16:20.560"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.170" endtime="20201112 10:16:20.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:20.572" level="INFO">${RESULT} = [{'time': 0.042825208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001117499999999938, 'source_diff': 0.0001117499999999938}, {'time': 0.042943222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:20.563" endtime="20201112 10:16:20.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:20.602" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:20.574" endtime="20201112 10:16:20.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:20.613" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 10:16:20.611" endtime="20201112 10:16:20.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:20.619" level="INFO">VALUE: [0.0001117499999999938, 0.00011223600000000167, 0.00011186099999999782, 0.00011206899999999936, 0.00011245899999999531, 0.00011232000000000603, 0.0001125560000000067, 0.00011195800000000228, 0.00011198600000000142, 0.00011241700000000354, 0.00011247199999999541, 0.00011194400000000271, 0.00011248599999999498, 0.00011269400000000346, 0.00011227800000000038, 0.00011256999999999934, 0.00011190300000000347, 0.00011181999999999859, 0.00011194399999999577, 0.00011195799999999534, 0.0001118890000000039, 0.0001123890000000044, 0.00011175000000000074, 0.00011216700000000329, 0.00011268099999999642, 0.00011256999999999934, 0.00011216700000000329, 0.00011254100000000072, 0.00011180499999999954, 0.00011191600000000357, 0.00011184699999999825, 0.00011240299999999703, 0.00011201400000000056, 0.00011219500000000243, 0.00011256999999999934, 0.00011219499999999549, 0.00011190199999999706, 0.00011216600000000382, 0.00011256899999999986, 0.00011251400000000106, 0.00011194400000000271, 0.00011212499999999764, 0.00011190300000000347, 0.00011248600000000192, 0.00011211200000000449, 0.00011255599999999977, 0.00011251399999999412, 0.00011201299999999415, 0.00011227800000000038, 0.0001118890000000039]</msg>
<status status="PASS" starttime="20201112 10:16:20.616" endtime="20201112 10:16:20.620"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.604" endtime="20201112 10:16:20.622"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:20.629" endtime="20201112 10:16:20.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:20.637" endtime="20201112 10:16:20.658"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.633" endtime="20201112 10:16:20.660"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.624" endtime="20201112 10:16:20.662"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.108" endtime="20201112 10:16:20.663"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.107" endtime="20201112 10:16:20.663"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:20.686" endtime="20201112 10:16:20.709"></status>
</kw>
<msg timestamp="20201112 10:16:20.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:20.683" endtime="20201112 10:16:20.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:20.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:20.712" endtime="20201112 10:16:20.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:20.719" endtime="20201112 10:16:20.722"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.675" endtime="20201112 10:16:20.724"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.669" endtime="20201112 10:16:20.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:20.742" endtime="20201112 10:16:21.081"></status>
</kw>
<msg timestamp="20201112 10:16:21.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042367319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042480833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:20.739" endtime="20201112 10:16:21.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:21.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042367319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042480833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:21.090" endtime="20201112 10:16:21.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:21.108" endtime="20201112 10:16:21.116"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.732" endtime="20201112 10:16:21.118"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.727" endtime="20201112 10:16:21.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:21.129" level="INFO">${RESULT} = [{'time': 0.042480833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011351400000000206, 'source_diff': 0.00011351400000000206}, {'time': 0.042608847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:16:21.121" endtime="20201112 10:16:21.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:21.160" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:21.132" endtime="20201112 10:16:21.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:21.171" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 10:16:21.169" endtime="20201112 10:16:21.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:21.176" level="INFO">VALUE: [0.00011351400000000206, 0.00011286099999999882, 0.00011336099999999932, 0.00011344399999999727, 0.00011273600000000217, 0.00011330599999999358, 0.00011318100000000386, 0.00011290299999999753, 0.00011329100000000147, 0.00011326400000000181, 0.00011311099999999907, 0.00011338899999999846, 0.00011269400000000346, 0.00011326399999999487, 0.00011288899999999796, 0.00011366600000000532, 0.00011276400000000131, 0.00011286100000000576, 0.00011281900000000011, 0.00011348599999999598, 0.00011365299999999828, 0.00011279200000000045, 0.00011334699999999975, 0.0001137220000000036, 0.00011344500000000368, 0.00011266699999999685, 0.00011348700000000239, 0.00011288899999999796, 0.00011268000000000389, 0.00011290299999999753, 0.0001135550000000013, 0.00011361099999999957, 0.00011311099999999907, 0.00011327799999999444, 0.0001130550000000008, 0.00011370799999999709, 0.00011294400000000371, 0.00011273600000000217, 0.00011369499999999699, 0.00011356900000000086, 0.00011318100000000386, 0.00011326400000000181, 0.00011312499999999864, 0.00011319399999999702, 0.00011363899999999871, 0.00011268099999999642, 0.00011316600000000482, 0.00011315199999999831, 0.00011348600000000292, 0.00011356900000000086]</msg>
<status status="PASS" starttime="20201112 10:16:21.173" endtime="20201112 10:16:21.178"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.162" endtime="20201112 10:16:21.180"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:21.186" endtime="20201112 10:16:21.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:21.194" endtime="20201112 10:16:21.216"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.190" endtime="20201112 10:16:21.218"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.182" endtime="20201112 10:16:21.219"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.665" endtime="20201112 10:16:21.220"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:20.664" endtime="20201112 10:16:21.220"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:21.243" endtime="20201112 10:16:21.267"></status>
</kw>
<msg timestamp="20201112 10:16:21.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:21.240" endtime="20201112 10:16:21.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:21.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:21.270" endtime="20201112 10:16:21.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:21.277" endtime="20201112 10:16:21.280"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.233" endtime="20201112 10:16:21.282"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.227" endtime="20201112 10:16:21.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:21.300" endtime="20201112 10:16:21.641"></status>
</kw>
<msg timestamp="20201112 10:16:21.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042404222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042518264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:21.297" endtime="20201112 10:16:21.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:21.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042404222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042518264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:21.650" endtime="20201112 10:16:21.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:21.668" endtime="20201112 10:16:21.674"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.289" endtime="20201112 10:16:21.676"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.285" endtime="20201112 10:16:21.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:21.687" level="INFO">${RESULT} = [{'time': 0.042518264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001140420000000017, 'source_diff': 0.0001140420000000017}, {'time': 0.042642306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:16:21.679" endtime="20201112 10:16:21.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:16:21.718" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:16:21.690" endtime="20201112 10:16:21.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:21.723" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 10:16:21.722" endtime="20201112 10:16:21.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:21.726" level="INFO">VALUE: [0.0001140420000000017, 0.0001138749999999994, 0.0001143749999999999, 0.0001143619999999998, 0.0001139299999999982, 0.00011467999999999895, 0.00011467999999999895, 0.00011426399999999587, 0.0001144169999999986, 0.00011380600000000102, 0.00011405600000000127, 0.00011430600000000152, 0.00011419499999999749, 0.00011433400000000066, 0.00011419399999999802, 0.00011438899999999946, 0.00011438899999999946, 0.0001140420000000017, 0.0001137220000000036, 0.00011398600000000342, 0.00011456899999999492, 0.0001145699999999944, 0.00011434700000000075, 0.00011411100000000007, 0.00011377799999999494, 0.00011394399999999777, 0.00011413899999999921, 0.00011438899999999946, 0.00011448599999999698, 0.00011413899999999921, 0.00011372299999999613, 0.00011431900000000161, 0.0001144299999999987, 0.00011415199999999931, 0.00011391600000000557, 0.00011448599999999698, 0.00011383300000000068, 0.00011384700000000025, 0.00011393099999999767, 0.00011420899999999706, 0.00011466599999999938, 0.00011376400000000231, 0.00011436100000000032, 0.00011411100000000007, 0.00011408300000000093, 0.00011397200000000385, 0.00011380500000000154, 0.00011419499999999749, 0.00011411100000000007, 0.00011394399999999777]</msg>
<status status="PASS" starttime="20201112 10:16:21.724" endtime="20201112 10:16:21.732"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.719" endtime="20201112 10:16:21.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:21.737" endtime="20201112 10:16:21.738"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:21.741" endtime="20201112 10:16:21.760"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.739" endtime="20201112 10:16:21.761"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.734" endtime="20201112 10:16:21.762"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.222" endtime="20201112 10:16:21.762"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.221" endtime="20201112 10:16:21.762"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:27.607" endtime="20201112 10:16:21.763"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:21.768" endtime="20201112 10:16:21.788"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.766" endtime="20201112 10:16:21.789"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.765" endtime="20201112 10:16:21.789"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 10:15:27.475" endtime="20201112 10:16:21.790" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 10:14:30.871" endtime="20201112 10:16:21.797"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 10:16:21.926" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 10:16:21.942" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 10:16:23.894" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 10:16:21.923" endtime="20201112 10:16:23.895"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 10:16:23.901" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 10:16:23.898" endtime="20201112 10:16:23.902"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.920" endtime="20201112 10:16:23.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:23.908" endtime="20201112 10:16:24.326"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:23.905" endtime="20201112 10:16:24.328"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:24.359" endtime="20201112 10:16:24.397"></status>
</kw>
<msg timestamp="20201112 10:16:24.398" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['in(): This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f1...</msg>
<status status="PASS" starttime="20201112 10:16:24.355" endtime="20201112 10:16:24.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.405" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['in(): This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f1...</msg>
<status status="PASS" starttime="20201112 10:16:24.400" endtime="20201112 10:16:24.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.412" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:16:24.407" endtime="20201112 10:16:24.412"></status>
</kw>
<status status="FAIL" starttime="20201112 10:16:24.349" endtime="20201112 10:16:24.414"></status>
</kw>
<status status="FAIL" starttime="20201112 10:16:24.344" endtime="20201112 10:16:24.416"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.341" endtime="20201112 10:16:24.417"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:16:24.425" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:16:24.424" endtime="20201112 10:16:24.426"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.419" endtime="20201112 10:16:24.427"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.339" endtime="20201112 10:16:24.427"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.337" endtime="20201112 10:16:24.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:24.430" endtime="20201112 10:16:24.433"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.334" endtime="20201112 10:16:24.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:24.437" endtime="20201112 10:16:24.441"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.329" endtime="20201112 10:16:24.443"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:21.917" endtime="20201112 10:16:24.443"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:24.460" endtime="20201112 10:16:24.484"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.456" endtime="20201112 10:16:24.486"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:24.521" endtime="20201112 10:16:24.548"></status>
</kw>
<msg timestamp="20201112 10:16:24.549" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:24.517" endtime="20201112 10:16:24.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.556" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:16:24.552" endtime="20201112 10:16:24.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:16:24.563" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:16:24.559" endtime="20201112 10:16:24.564"></status>
</kw>
<status status="FAIL" starttime="20201112 10:16:24.510" endtime="20201112 10:16:24.566"></status>
</kw>
<status status="FAIL" starttime="20201112 10:16:24.503" endtime="20201112 10:16:24.568"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.500" endtime="20201112 10:16:24.568"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:16:24.577" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:16:24.575" endtime="20201112 10:16:24.578"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.570" endtime="20201112 10:16:24.578"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.498" endtime="20201112 10:16:24.578"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.497" endtime="20201112 10:16:24.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:24.580" endtime="20201112 10:16:24.584"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.492" endtime="20201112 10:16:24.586"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.487" endtime="20201112 10:16:24.588"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.453" endtime="20201112 10:16:24.589"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:24.599" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:24.622" endtime="20201112 10:16:26.716"></status>
</kw>
<msg timestamp="20201112 10:16:26.717" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 813470, 'wakeups': [823478, 833479, 843479, 853479, 863479, 873479, 88...</msg>
<status status="PASS" starttime="20201112 10:16:24.619" endtime="20201112 10:16:26.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:26.721" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 813470, 'wakeups': [823478, 833479, 843479, 853479, 863479, 873479, 88...</msg>
<status status="PASS" starttime="20201112 10:16:26.718" endtime="20201112 10:16:26.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:26.722" endtime="20201112 10:16:26.724"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.611" endtime="20201112 10:16:26.725"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.604" endtime="20201112 10:16:26.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:26.728" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [823478, 833479, 843479, 853479, 863479, 873479, 883479, 893479, 903479, 913479, 923479, 933479, 943479, 953479, 963479, 973479, 983479, 993479, 1003479, 1013479, ...</msg>
<status status="PASS" starttime="20201112 10:16:26.726" endtime="20201112 10:16:26.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:26.735" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:26.733" endtime="20201112 10:16:26.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:26.737" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:26.736" endtime="20201112 10:16:26.737"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:26.729" endtime="20201112 10:16:26.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:26.743" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 10:16:26.742" endtime="20201112 10:16:26.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:26.745" level="INFO">VALUE: 813470</msg>
<status status="PASS" starttime="20201112 10:16:26.744" endtime="20201112 10:16:26.746"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:26.739" endtime="20201112 10:16:26.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:26.751" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:26.750" endtime="20201112 10:16:26.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:26.754" level="INFO">VALUE: [823478, 833479, 843479, 853479, 863479, 873479, 883479, 893479, 903479, 913479, 923479, 933479, 943479, 953479, 963479, 973479, 983479, 993479, 1003479, 1013479, 1023479, 1033479, 1043479, 1053479, 1063479, 1073479, 1083479, 1093479, 1103479, 1113479, 1123479, 1133479, 1143479, 1153479, 1163479, 1173479, 1183479, 1193479, 1203479, 1213479, 1223479, 1233479, 1243479, 1253479, 1263479, 1273479, 1283479, 1293479, 1303479, 1313479, 1323479, 1333479, 1343479, 1353479, 1363479, 1373479, 1383479, 1393479, 1403479, 1413479, 1423479, 1433479, 1443479, 1453479, 1463479, 1473479, 1483479, 1493479, 1503479, 1513479, 1523479, 1533479, 1543479, 1553479, 1563479, 1573479, 1583479, 1593479, 1603479, 1613479, 1623479, 1633479, 1643479, 1653479, 1663479, 1673479, 1683479, 1693479, 1703479, 1713479, 1723479, 1733479, 1743479, 1753479, 1763479, 1773479, 1783479, 1793479, 1803479, 1813479]</msg>
<status status="PASS" starttime="20201112 10:16:26.753" endtime="20201112 10:16:26.754"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:26.747" endtime="20201112 10:16:26.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:26.763" endtime="20201112 10:16:27.147"></status>
</kw>
<msg timestamp="20201112 10:16:27.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.154152681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164162722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:26.761" endtime="20201112 10:16:27.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.154152681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164162722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:27.156" endtime="20201112 10:16:27.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.175" endtime="20201112 10:16:27.179"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:26.758" endtime="20201112 10:16:27.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:26.756" endtime="20201112 10:16:27.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:27.243" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:16:27.184" endtime="20201112 10:16:27.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.262" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 10:16:27.259" endtime="20201112 10:16:27.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.267" level="INFO">VALUE: 0.154152681</msg>
<status status="PASS" starttime="20201112 10:16:27.264" endtime="20201112 10:16:27.267"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.245" endtime="20201112 10:16:27.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.281" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:27.278" endtime="20201112 10:16:27.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.286" level="INFO">VALUE: [0.164162722, 0.174164875, 0.184165889, 0.194167056, 0.204168097, 0.21416925, 0.224170236, 0.234171389, 0.244172417, 0.254173569, 0.264174583, 0.27417575, 0.284176764, 0.294177931, 0.304178944, 0.314180139, 0.324181125, 0.334182264, 0.344183292, 0.354184528, 0.364185458, 0.374186611, 0.384187625, 0.394188792, 0.404189875, 0.414190958, 0.424191972, 0.434193139, 0.444194153, 0.454195319, 0.464196333, 0.4741975, 0.484198514, 0.494199667, 0.504200681, 0.514201833, 0.524202861, 0.534204042, 0.544205028, 0.554206181, 0.564207208, 0.574208375, 0.584209375, 0.594210583, 0.604211569, 0.614212722, 0.624213722, 0.634214889, 0.644215917, 0.654217069, 0.664218083, 0.674219236, 0.68422025, 0.694221403, 0.704222431, 0.714223583, 0.724224597, 0.734225764, 0.744226764, 0.754227944, 0.764228958, 0.774230097, 0.784231125, 0.794232347, 0.804233292, 0.814234444, 0.824235472, 0.834236625, 0.844237639, 0.854238792, 0.864239819, 0.874240972, 0.884241986, 0.894243153, 0.904244181, 0.914245319, 0.924246347, 0.934247542, 0.944248514, 0.954249667, 0.964250681, 0.974251861, 0.984252861, 0.994254014, 1.004255042, 1.014256194, 1.024257208, 1.034258361, 1.044259403, 1.054260542, 1.064261556, 1.074262736, 1.08426375, 1.094264903, 1.104265903, 1.114267125, 1.124268083, 1.134269236, 1.144270278, 1.154271417] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:27.283" endtime="20201112 10:16:27.287"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.271" endtime="20201112 10:16:27.288"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.295" endtime="20201112 10:16:27.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:27.304" endtime="20201112 10:16:27.326"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.300" endtime="20201112 10:16:27.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.290" endtime="20201112 10:16:27.330"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.600" endtime="20201112 10:16:27.331"></status>
</kw>
<msg timestamp="20201112 10:16:27.332" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.355" endtime="20201112 10:16:29.475"></status>
</kw>
<msg timestamp="20201112 10:16:29.476" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3543912, 'wakeups': [3553920, 3563921, 3573921, 3583921, 3593921, 3603...</msg>
<status status="PASS" starttime="20201112 10:16:27.351" endtime="20201112 10:16:29.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.483" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3543912, 'wakeups': [3553920, 3563921, 3573921, 3583921, 3593921, 3603...</msg>
<status status="PASS" starttime="20201112 10:16:29.478" endtime="20201112 10:16:29.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:29.486" endtime="20201112 10:16:29.490"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.343" endtime="20201112 10:16:29.492"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.337" endtime="20201112 10:16:29.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:29.500" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [3553920, 3563921, 3573921, 3583921, 3593921, 3603921, 3613921, 3623921, 3633921, 3643921, 3653921, 3663921, 3673921, 3683921, 3693921, 3703921, 3713921, 3723921, ...</msg>
<status status="PASS" starttime="20201112 10:16:29.495" endtime="20201112 10:16:29.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.511" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:29.508" endtime="20201112 10:16:29.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.515" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:29.513" endtime="20201112 10:16:29.516"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.502" endtime="20201112 10:16:29.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.529" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 10:16:29.527" endtime="20201112 10:16:29.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.535" level="INFO">VALUE: 3543912</msg>
<status status="PASS" starttime="20201112 10:16:29.533" endtime="20201112 10:16:29.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.520" endtime="20201112 10:16:29.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.549" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:29.546" endtime="20201112 10:16:29.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.554" level="INFO">VALUE: [3553920, 3563921, 3573921, 3583921, 3593921, 3603921, 3613921, 3623921, 3633921, 3643921, 3653921, 3663921, 3673921, 3683921, 3693921, 3703921, 3713921, 3723921, 3733921, 3743921, 3753921, 3763921, 3773921, 3783921, 3793921, 3803921, 3813921, 3823921, 3833921, 3843921, 3853921, 3863921, 3873921, 3883921, 3893921, 3903921, 3913921, 3923921, 3933921, 3943921, 3953921, 3963921, 3973921, 3983921, 3993921, 4003921, 4013921, 4023921, 4033921, 4043921, 4053921, 4063921, 4073921, 4083921, 4093921, 4103921, 4113921, 4123921, 4133921, 4143921, 4153921, 4163921, 4173921, 4183921, 4193921, 4203921, 4213921, 4223921, 4233921, 4243921, 4253921, 4263921, 4273921, 4283921, 4293921, 4303921, 4313921, 4323921, 4333921, 4343921, 4353921, 4363921, 4373921, 4383921, 4393921, 4403921, 4413921, 4423921, 4433921, 4443921, 4453921, 4463921, 4473921, 4483921, 4493921, 4503921, 4513921, 4523921, 4533921, 4543921]</msg>
<status status="PASS" starttime="20201112 10:16:29.551" endtime="20201112 10:16:29.557"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.539" endtime="20201112 10:16:29.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:29.577" endtime="20201112 10:16:29.912"></status>
</kw>
<msg timestamp="20201112 10:16:29.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041722167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051732194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:29.573" endtime="20201112 10:16:29.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:29.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041722167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051732194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:29.920" endtime="20201112 10:16:29.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:29.937" endtime="20201112 10:16:29.941"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.565" endtime="20201112 10:16:29.942"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:29.560" endtime="20201112 10:16:29.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:29.998" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:16:29.945" endtime="20201112 10:16:29.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.009" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 10:16:30.007" endtime="20201112 10:16:30.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.014" level="INFO">VALUE: 0.041722167</msg>
<status status="PASS" starttime="20201112 10:16:30.011" endtime="20201112 10:16:30.014"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.000" endtime="20201112 10:16:30.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.027" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:30.025" endtime="20201112 10:16:30.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:30.032" level="INFO">VALUE: [0.051732194, 0.061734361, 0.071735361, 0.081736528, 0.091737542, 0.101738722, 0.111739694, 0.121740847, 0.131741861, 0.141743028, 0.151744042, 0.161745208, 0.171746208, 0.181747375, 0.191748431, 0.201749528, 0.211750569, 0.221751722, 0.231752736, 0.241753889, 0.251754889, 0.261756042, 0.271757056, 0.28175825, 0.291759236, 0.301760389, 0.311761403, 0.321762569, 0.331763583, 0.34176475, 0.351765764, 0.361766903, 0.371767917, 0.381769139, 0.391770097, 0.401771264, 0.411772306, 0.421773417, 0.431774444, 0.441775597, 0.451776611, 0.461777764, 0.471778778, 0.481779944, 0.491780958, 0.501782125, 0.511783139, 0.521784292, 0.531785306, 0.541786458, 0.551787486, 0.561788625, 0.571789653, 0.581790806, 0.591791819, 0.601792986, 0.611793986, 0.621795139, 0.631796194, 0.641797333, 0.651798403, 0.6617995, 0.671800542, 0.681801681, 0.691802681, 0.701803833, 0.711804847, 0.721806014, 0.731807042, 0.741808181, 0.751809264, 0.761810361, 0.771811361, 0.781812556, 0.791813542, 0.801814694, 0.811815708, 0.821816861, 0.831817889, 0.841819097, 0.851820069, 0.861821208, 0.871822236, 0.881823389, 0.891824417, 0.901825569, 0.911826583, 0.921827736, 0.93182875, 0.941829903, 0.951830944, 0.961832083, 0.971833097, 0.98183425, 0.991835278, 1.001836431, 1.011837444, 1.021838597, 1.031839611, 1.041840764] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:30.029" endtime="20201112 10:16:30.033"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.017" endtime="20201112 10:16:30.035"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:30.041" endtime="20201112 10:16:30.044"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:30.049" endtime="20201112 10:16:30.071"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.045" endtime="20201112 10:16:30.073"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.036" endtime="20201112 10:16:30.074"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.333" endtime="20201112 10:16:30.075"></status>
</kw>
<msg timestamp="20201112 10:16:30.076" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:30.096" endtime="20201112 10:16:32.205"></status>
</kw>
<msg timestamp="20201112 10:16:32.207" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6285473, 'wakeups': [6295481, 6305482, 6315482, 6325482, 6335482, 6345...</msg>
<status status="PASS" starttime="20201112 10:16:30.093" endtime="20201112 10:16:32.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.214" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6285473, 'wakeups': [6295481, 6305482, 6315482, 6325482, 6335482, 6345...</msg>
<status status="PASS" starttime="20201112 10:16:32.209" endtime="20201112 10:16:32.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:32.216" endtime="20201112 10:16:32.219"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.086" endtime="20201112 10:16:32.221"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.081" endtime="20201112 10:16:32.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:32.229" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [6295481, 6305482, 6315482, 6325482, 6335482, 6345482, 6355482, 6365482, 6375482, 6385482, 6395482, 6405482, 6415482, 6425482, 6435482, 6445482, 6455482, 6465482, ...</msg>
<status status="PASS" starttime="20201112 10:16:32.224" endtime="20201112 10:16:32.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.239" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:32.236" endtime="20201112 10:16:32.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.243" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:32.241" endtime="20201112 10:16:32.244"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.230" endtime="20201112 10:16:32.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.255" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 10:16:32.253" endtime="20201112 10:16:32.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.260" level="INFO">VALUE: 6285473</msg>
<status status="PASS" starttime="20201112 10:16:32.258" endtime="20201112 10:16:32.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.247" endtime="20201112 10:16:32.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.272" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:32.270" endtime="20201112 10:16:32.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.277" level="INFO">VALUE: [6295481, 6305482, 6315482, 6325482, 6335482, 6345482, 6355482, 6365482, 6375482, 6385482, 6395482, 6405482, 6415482, 6425482, 6435482, 6445482, 6455482, 6465482, 6475482, 6485482, 6495482, 6505482, 6515482, 6525482, 6535482, 6545482, 6555482, 6565482, 6575482, 6585482, 6595482, 6605482, 6615482, 6625482, 6635482, 6645482, 6655482, 6665482, 6675482, 6685482, 6695482, 6705482, 6715482, 6725482, 6735482, 6745482, 6755482, 6765482, 6775482, 6785482, 6795482, 6805482, 6815482, 6825482, 6835482, 6845482, 6855482, 6865482, 6875482, 6885482, 6895482, 6905482, 6915482, 6925482, 6935482, 6945482, 6955482, 6965482, 6975482, 6985482, 6995482, 7005482, 7015482, 7025482, 7035482, 7045482, 7055482, 7065482, 7075482, 7085482, 7095482, 7105482, 7115482, 7125482, 7135482, 7145482, 7155482, 7165482, 7175482, 7185482, 7195482, 7205482, 7215482, 7225482, 7235482, 7245482, 7255482, 7265482, 7275482, 7285482]</msg>
<status status="PASS" starttime="20201112 10:16:32.274" endtime="20201112 10:16:32.278"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.264" endtime="20201112 10:16:32.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:32.303" endtime="20201112 10:16:32.646"></status>
</kw>
<msg timestamp="20201112 10:16:32.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038259264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048268958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:32.299" endtime="20201112 10:16:32.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038259264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048268958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:32.654" endtime="20201112 10:16:32.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:32.671" endtime="20201112 10:16:32.676"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.292" endtime="20201112 10:16:32.678"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.281" endtime="20201112 10:16:32.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:32.735" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:16:32.681" endtime="20201112 10:16:32.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.746" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 10:16:32.744" endtime="20201112 10:16:32.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.750" level="INFO">VALUE: 0.038259264</msg>
<status status="PASS" starttime="20201112 10:16:32.748" endtime="20201112 10:16:32.751"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.737" endtime="20201112 10:16:32.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.764" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:32.761" endtime="20201112 10:16:32.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.768" level="INFO">VALUE: [0.048268958, 0.058271125, 0.068272139, 0.078273347, 0.088274333, 0.098275486, 0.108276514, 0.118277667, 0.128278681, 0.138279847, 0.148280903, 0.158282014, 0.168283042, 0.178284194, 0.18828525, 0.198286375, 0.208287472, 0.218288556, 0.228289583, 0.23829075, 0.248291778, 0.258292917, 0.268293958, 0.278295111, 0.288296125, 0.298297292, 0.308298306, 0.318299472, 0.328300486, 0.338301653, 0.348302681, 0.358303833, 0.368304847, 0.378306028, 0.388307028, 0.398308194, 0.408309208, 0.418310389, 0.428311403, 0.438312597, 0.448313653, 0.458314806, 0.468315764, 0.478316931, 0.488317944, 0.498319111, 0.508320194, 0.518321292, 0.528322333, 0.538323472, 0.5483245, 0.558325667, 0.568326667, 0.578327833, 0.588328847, 0.598330014, 0.608331028, 0.618332194, 0.628333222, 0.638334389, 0.648335417, 0.658336556, 0.668337583, 0.678338764, 0.688339806, 0.698340917, 0.708341958, 0.718343139, 0.728344125, 0.738345292, 0.748346306, 0.758347486, 0.768348528, 0.778349653, 0.788350667, 0.798351833, 0.808352903, 0.818354056, 0.828355028, 0.838356194, 0.848357222, 0.858358375, 0.868359403, 0.878360569, 0.888361583, 0.898362736, 0.908363792, 0.918364931, 0.928365958, 0.938367125, 0.948368125, 0.958369292, 0.968370306, 0.978371472, 0.9883725, 0.998373653, 1.008374667, 1.018375847, 1.028376847, 1.038378014] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:32.766" endtime="20201112 10:16:32.769"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.754" endtime="20201112 10:16:32.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:32.777" endtime="20201112 10:16:32.779"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:32.785" endtime="20201112 10:16:32.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.781" endtime="20201112 10:16:32.808"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.773" endtime="20201112 10:16:32.810"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:30.077" endtime="20201112 10:16:32.811"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.595" endtime="20201112 10:16:32.811"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.593" endtime="20201112 10:16:32.812"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:32.817" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:32.838" endtime="20201112 10:16:34.948"></status>
</kw>
<msg timestamp="20201112 10:16:34.949" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 9027528, 'wakeups': [9037543, 9047543, 9057543, 9067543, 9077543, 9087...</msg>
<status status="PASS" starttime="20201112 10:16:32.834" endtime="20201112 10:16:34.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:34.956" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 9027528, 'wakeups': [9037543, 9047543, 9057543, 9067543, 9077543, 9087...</msg>
<status status="PASS" starttime="20201112 10:16:34.952" endtime="20201112 10:16:34.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:34.959" endtime="20201112 10:16:34.961"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.827" endtime="20201112 10:16:34.962"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.822" endtime="20201112 10:16:34.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:34.966" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [9037543, 9047543, 9057543, 9067543, 9077543, 9087543, 9097543, 9107543, 9117543, 9127543, 9137543, 9147543, 9157543, 9167543, 9177543, 9187543, 9197543, 9207543, ...</msg>
<status status="PASS" starttime="20201112 10:16:34.963" endtime="20201112 10:16:34.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:34.971" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:34.970" endtime="20201112 10:16:34.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:34.973" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:34.972" endtime="20201112 10:16:34.974"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:34.967" endtime="20201112 10:16:34.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:34.979" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 10:16:34.978" endtime="20201112 10:16:34.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:34.981" level="INFO">VALUE: 9027528</msg>
<status status="PASS" starttime="20201112 10:16:34.980" endtime="20201112 10:16:34.982"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:34.975" endtime="20201112 10:16:34.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:34.987" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:34.986" endtime="20201112 10:16:34.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:34.989" level="INFO">VALUE: [9037543, 9047543, 9057543, 9067543, 9077543, 9087543, 9097543, 9107543, 9117543, 9127543, 9137543, 9147543, 9157543, 9167543, 9177543, 9187543, 9197543, 9207543, 9217543, 9227543, 9237543, 9247543, 9257543, 9267543, 9277543, 9287543, 9297543, 9307543, 9317543, 9327543, 9337543, 9347543, 9357543, 9367543, 9377543, 9387543, 9397543, 9407543, 9417543, 9427543, 9437543, 9447543, 9457543, 9467543, 9477543, 9487543, 9497543, 9507543, 9517543, 9527543, 9537543, 9547543, 9557543, 9567543, 9577543, 9587543, 9597543, 9607543, 9617543, 9627543, 9637543, 9647543, 9657543, 9667543, 9677543, 9687543, 9697543, 9707543, 9717543, 9727543, 9737543, 9747543, 9757543, 9767543, 9777543, 9787543, 9797543, 9807543, 9817543, 9827543, 9837543, 9847543, 9857543, 9867543, 9877543, 9887543, 9897543, 9907543, 9917543, 9927543, 9937543, 9947543, 9957543, 9967543, 9977543, 9987543, 9997543, 10007543, 10017543, 10027543]</msg>
<status status="PASS" starttime="20201112 10:16:34.988" endtime="20201112 10:16:34.990"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:34.983" endtime="20201112 10:16:34.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:34.998" endtime="20201112 10:16:35.331"></status>
</kw>
<msg timestamp="20201112 10:16:35.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044507903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05452475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:16:34.997" endtime="20201112 10:16:35.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044507903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05452475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:16:35.340" endtime="20201112 10:16:35.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:35.357" endtime="20201112 10:16:35.361"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:34.993" endtime="20201112 10:16:35.363"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:34.991" endtime="20201112 10:16:35.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:35.420" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:16:35.366" endtime="20201112 10:16:35.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.431" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 10:16:35.429" endtime="20201112 10:16:35.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.435" level="INFO">VALUE: 0.044507903</msg>
<status status="PASS" starttime="20201112 10:16:35.433" endtime="20201112 10:16:35.436"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.422" endtime="20201112 10:16:35.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.448" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:35.446" endtime="20201112 10:16:35.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:35.453" level="INFO">VALUE: [0.05452475, 0.064525903, 0.074526917, 0.084528097, 0.094529097, 0.104530278, 0.114531306, 0.124532444, 0.134533458, 0.144534625, 0.154535625, 0.164536792, 0.174537806, 0.184538986, 0.194539986, 0.204541153, 0.214542167, 0.224543319, 0.234544361, 0.2445455, 0.254546528, 0.264547681, 0.274548708, 0.284549875, 0.294550917, 0.304552056, 0.314553056, 0.324554222, 0.334555236, 0.344556403, 0.354557417, 0.364558583, 0.374559597, 0.384560764, 0.394561792, 0.404562931, 0.414563958, 0.424565125, 0.434566139, 0.444567292, 0.454568319, 0.464569542, 0.474570514, 0.484571708, 0.494572694, 0.504573833, 0.514574861, 0.524576042, 0.534577028, 0.544578236, 0.554579208, 0.564580389, 0.574581403, 0.584582556, 0.594583597, 0.604584764, 0.61458575, 0.624586917, 0.634587931, 0.644589097, 0.654590125, 0.664591278, 0.674592306, 0.684593458, 0.694594472, 0.704595639, 0.714596653, 0.724597819, 0.734598833, 0.744600014, 0.754601014, 0.764602167, 0.774603222, 0.784604347, 0.794605389, 0.804606528, 0.814607556, 0.824608708, 0.83460975, 0.844610903, 0.854611931, 0.864613083, 0.874614139, 0.88461525, 0.894616264, 0.904617431, 0.914618444, 0.924619611, 0.934620625, 0.944621806, 0.954622806, 0.964623972, 0.974624986, 0.984626167, 0.994627167, 1.004628333, 1.014629347, 1.024630514, 1.034631542, 1.044632722] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:35.451" endtime="20201112 10:16:35.454"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.439" endtime="20201112 10:16:35.456"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:35.462" endtime="20201112 10:16:35.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:35.470" endtime="20201112 10:16:35.492"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.466" endtime="20201112 10:16:35.493"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.457" endtime="20201112 10:16:35.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.818" endtime="20201112 10:16:35.495"></status>
</kw>
<msg timestamp="20201112 10:16:35.496" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:35.517" endtime="20201112 10:16:37.636"></status>
</kw>
<msg timestamp="20201112 10:16:37.637" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11705719, 'wakeups': [11715734, 11725734, 11735734, 11745734, 11755734...</msg>
<status status="PASS" starttime="20201112 10:16:35.513" endtime="20201112 10:16:37.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.644" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11705719, 'wakeups': [11715734, 11725734, 11735734, 11745734, 11755734...</msg>
<status status="PASS" starttime="20201112 10:16:37.639" endtime="20201112 10:16:37.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:37.646" endtime="20201112 10:16:37.650"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.506" endtime="20201112 10:16:37.651"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.501" endtime="20201112 10:16:37.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:37.659" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [11715734, 11725734, 11735734, 11745734, 11755734, 11765734, 11775734, 11785734, 11795734, 11805734, 11815734, 11825734, 11835734, 11845734, 11855734, 11865734, 11...</msg>
<status status="PASS" starttime="20201112 10:16:37.654" endtime="20201112 10:16:37.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.675" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:37.673" endtime="20201112 10:16:37.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.679" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:37.677" endtime="20201112 10:16:37.680"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.661" endtime="20201112 10:16:37.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.692" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 10:16:37.689" endtime="20201112 10:16:37.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.696" level="INFO">VALUE: 11705719</msg>
<status status="PASS" starttime="20201112 10:16:37.694" endtime="20201112 10:16:37.697"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.683" endtime="20201112 10:16:37.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.708" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:37.706" endtime="20201112 10:16:37.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:37.713" level="INFO">VALUE: [11715734, 11725734, 11735734, 11745734, 11755734, 11765734, 11775734, 11785734, 11795734, 11805734, 11815734, 11825734, 11835734, 11845734, 11855734, 11865734, 11875734, 11885734, 11895734, 11905734, 11915734, 11925734, 11935734, 11945734, 11955734, 11965734, 11975734, 11985734, 11995734, 12005734, 12015734, 12025734, 12035734, 12045734, 12055734, 12065734, 12075734, 12085734, 12095734, 12105734, 12115734, 12125734, 12135734, 12145734, 12155734, 12165734, 12175734, 12185734, 12195734, 12205734, 12215734, 12225734, 12235734, 12245734, 12255734, 12265734, 12275734, 12285734, 12295734, 12305734, 12315734, 12325734, 12335734, 12345734, 12355734, 12365734, 12375734, 12385734, 12395734, 12405734, 12415734, 12425734, 12435734, 12445734, 12455734, 12465734, 12475734, 12485734, 12495734, 12505734, 12515734, 12525734, 12535734, 12545734, 12555734, 12565734, 12575734, 12585734, 12595734, 12605734, 12615734, 12625734, 12635734, 12645734, 12655734, 12665734, 12675734, 12685734, 12695734, 12705734]</msg>
<status status="PASS" starttime="20201112 10:16:37.710" endtime="20201112 10:16:37.714"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.699" endtime="20201112 10:16:37.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:37.734" endtime="20201112 10:16:38.079"></status>
</kw>
<msg timestamp="20201112 10:16:38.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037761236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047778417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:37.731" endtime="20201112 10:16:38.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:38.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037761236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047778417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:38.087" endtime="20201112 10:16:38.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:38.104" endtime="20201112 10:16:38.106"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.722" endtime="20201112 10:16:38.107"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:37.717" endtime="20201112 10:16:38.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:38.132" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:16:38.109" endtime="20201112 10:16:38.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:38.137" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 10:16:38.136" endtime="20201112 10:16:38.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:38.139" level="INFO">VALUE: 0.037761236</msg>
<status status="PASS" starttime="20201112 10:16:38.138" endtime="20201112 10:16:38.140"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.133" endtime="20201112 10:16:38.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:38.146" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:38.145" endtime="20201112 10:16:38.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:38.148" level="INFO">VALUE: [0.047778417, 0.057779569, 0.067780597, 0.07778175, 0.087782764, 0.097783917, 0.107784931, 0.117786097, 0.127787111, 0.137788278, 0.147789292, 0.157790444, 0.167791458, 0.177792639, 0.187793639, 0.197794792, 0.207795819, 0.217796986, 0.227797986, 0.237799167, 0.247800181, 0.257801319, 0.267802361, 0.277803514, 0.287804528, 0.297805694, 0.307806694, 0.317807875, 0.327808917, 0.337810028, 0.347811056, 0.357812278, 0.367813236, 0.377814417, 0.387815403, 0.397816583, 0.407817597, 0.417818764, 0.427819778, 0.437820972, 0.447821944, 0.457823111, 0.467824194, 0.477825278, 0.487826292, 0.497827458, 0.507828472, 0.517829639, 0.527830667, 0.537831806, 0.547832833, 0.557834, 0.567835, 0.577836194, 0.587837181, 0.597838375, 0.607839417, 0.617840528, 0.627841542, 0.637842736, 0.647843722, 0.657844875, 0.667845958, 0.677847056, 0.687848083, 0.697849236, 0.70785025, 0.717851403, 0.727852431, 0.737853597, 0.747854611, 0.757855764, 0.767856778, 0.777858, 0.787858958, 0.797860125, 0.807861139, 0.817862306, 0.827863319, 0.837864472, 0.8478655, 0.857866667, 0.867867667, 0.877868833, 0.887869889, 0.897871014, 0.907872042, 0.917873194, 0.927874208, 0.937875375, 0.947876389, 0.957877542, 0.967878556, 0.977879722, 0.987880736, 0.997881903, 1.007882931, 1.017884069, 1.027885097, 1.03788625] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:38.147" endtime="20201112 10:16:38.149"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.141" endtime="20201112 10:16:38.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:38.153" endtime="20201112 10:16:38.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:38.157" endtime="20201112 10:16:38.176"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.155" endtime="20201112 10:16:38.177"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.150" endtime="20201112 10:16:38.177"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:35.497" endtime="20201112 10:16:38.178"></status>
</kw>
<msg timestamp="20201112 10:16:38.178" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:38.189" endtime="20201112 10:16:40.307"></status>
</kw>
<msg timestamp="20201112 10:16:40.308" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14376032, 'wakeups': [14386047, 14396047, 14406047, 14416047, 14426047...</msg>
<status status="PASS" starttime="20201112 10:16:38.186" endtime="20201112 10:16:40.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.315" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14376032, 'wakeups': [14386047, 14396047, 14406047, 14416047, 14426047...</msg>
<status status="PASS" starttime="20201112 10:16:40.310" endtime="20201112 10:16:40.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:40.317" endtime="20201112 10:16:40.321"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.183" endtime="20201112 10:16:40.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.180" endtime="20201112 10:16:40.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:40.331" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [14386047, 14396047, 14406047, 14416047, 14426047, 14436047, 14446047, 14456047, 14466047, 14476047, 14486047, 14496047, 14506047, 14516047, 14526047, 14536047, 14...</msg>
<status status="PASS" starttime="20201112 10:16:40.326" endtime="20201112 10:16:40.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.341" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:40.339" endtime="20201112 10:16:40.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.345" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:40.343" endtime="20201112 10:16:40.346"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.333" endtime="20201112 10:16:40.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.357" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 10:16:40.355" endtime="20201112 10:16:40.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.362" level="INFO">VALUE: 14376032</msg>
<status status="PASS" starttime="20201112 10:16:40.360" endtime="20201112 10:16:40.363"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.349" endtime="20201112 10:16:40.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.374" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:40.372" endtime="20201112 10:16:40.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.380" level="INFO">VALUE: [14386047, 14396047, 14406047, 14416047, 14426047, 14436047, 14446047, 14456047, 14466047, 14476047, 14486047, 14496047, 14506047, 14516047, 14526047, 14536047, 14546047, 14556047, 14566047, 14576047, 14586047, 14596047, 14606047, 14616047, 14626047, 14636047, 14646047, 14656047, 14666047, 14676047, 14686047, 14696047, 14706047, 14716047, 14726047, 14736047, 14746047, 14756047, 14766047, 14776047, 14786047, 14796047, 14806047, 14816047, 14826047, 14836047, 14846047, 14856047, 14866047, 14876047, 14886047, 14896047, 14906047, 14916047, 14926047, 14936047, 14946047, 14956047, 14966047, 14976047, 14986047, 14996047, 15006047, 15016047, 15026047, 15036047, 15046047, 15056047, 15066047, 15076047, 15086047, 15096047, 15106047, 15116047, 15126047, 15136047, 15146047, 15156047, 15166047, 15176047, 15186047, 15196047, 15206047, 15216047, 15226047, 15236047, 15246047, 15256047, 15266047, 15276047, 15286047, 15296047, 15306047, 15316047, 15326047, 15336047, 15346047, 15356047, 15366047, 15376047]</msg>
<status status="PASS" starttime="20201112 10:16:40.377" endtime="20201112 10:16:40.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.366" endtime="20201112 10:16:40.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:40.399" endtime="20201112 10:16:40.742"></status>
</kw>
<msg timestamp="20201112 10:16:40.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022463944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032481389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:40.395" endtime="20201112 10:16:40.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022463944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032481389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:40.751" endtime="20201112 10:16:40.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:40.768" endtime="20201112 10:16:40.772"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.388" endtime="20201112 10:16:40.773"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.384" endtime="20201112 10:16:40.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:40.831" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:16:40.776" endtime="20201112 10:16:40.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.841" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 10:16:40.839" endtime="20201112 10:16:40.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.846" level="INFO">VALUE: 0.022463944</msg>
<status status="PASS" starttime="20201112 10:16:40.843" endtime="20201112 10:16:40.846"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.833" endtime="20201112 10:16:40.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.859" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:40.857" endtime="20201112 10:16:40.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:40.864" level="INFO">VALUE: [0.032481389, 0.042482556, 0.052483569, 0.062484722, 0.07248575, 0.082486917, 0.092487903, 0.102489097, 0.112490097, 0.12249125, 0.13249225, 0.142493417, 0.152494431, 0.162495583, 0.172496597, 0.182497778, 0.192498819, 0.202499944, 0.212501, 0.222502125, 0.232503125, 0.242504278, 0.252505292, 0.262506528, 0.272507472, 0.282508653, 0.292509653, 0.302510806, 0.312511819, 0.322512986, 0.332514, 0.342515153, 0.352516167, 0.362517347, 0.372518361, 0.382519514, 0.392520528, 0.402521681, 0.412522708, 0.422523861, 0.432524875, 0.442526028, 0.452527042, 0.462528208, 0.472529222, 0.482530389, 0.492531403, 0.502532556, 0.512533569, 0.522534736, 0.532535764, 0.542536903, 0.552537931, 0.562539111, 0.572540097, 0.582541264, 0.592542278, 0.602543431, 0.612544444, 0.622545611, 0.632546625, 0.642547778, 0.652548806, 0.662549958, 0.672550972, 0.682552139, 0.692553153, 0.702554306, 0.712555347, 0.722556486, 0.732557514, 0.742558681, 0.752559681, 0.762560847, 0.772561861, 0.782563028, 0.792564028, 0.802565208, 0.812566208, 0.822567361, 0.832568389, 0.842569542, 0.852570556, 0.862571722, 0.872572736, 0.882573944, 0.892574903, 0.902576069, 0.912577083, 0.92257825, 0.932579278, 0.942580431, 0.952581431, 0.962582597, 0.972583625, 0.982584764, 0.992585792, 1.002586958, 1.012587958, 1.022589125] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:40.861" endtime="20201112 10:16:40.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.849" endtime="20201112 10:16:40.866"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:40.872" endtime="20201112 10:16:40.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:40.881" endtime="20201112 10:16:40.902"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.876" endtime="20201112 10:16:40.904"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.868" endtime="20201112 10:16:40.906"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:38.179" endtime="20201112 10:16:40.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.814" endtime="20201112 10:16:40.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.812" endtime="20201112 10:16:40.908"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:40.913" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:40.934" endtime="20201112 10:16:43.038"></status>
</kw>
<msg timestamp="20201112 10:16:43.039" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 17122975, 'wakeups': [17132999, 17142999, 17152999, 17162999, 17172999...</msg>
<status status="PASS" starttime="20201112 10:16:40.931" endtime="20201112 10:16:43.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.042" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 17122975, 'wakeups': [17132999, 17142999, 17152999, 17162999, 17172999...</msg>
<status status="PASS" starttime="20201112 10:16:43.040" endtime="20201112 10:16:43.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:43.043" endtime="20201112 10:16:43.045"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.924" endtime="20201112 10:16:43.046"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.918" endtime="20201112 10:16:43.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:43.049" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [17132999, 17142999, 17152999, 17162999, 17172999, 17182999, 17192999, 17202999, 17212999, 17222999, 17232999, 17242999, 17252999, 17262999, 17272999, 17282999, 17...</msg>
<status status="PASS" starttime="20201112 10:16:43.047" endtime="20201112 10:16:43.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.054" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:43.053" endtime="20201112 10:16:43.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.056" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:43.055" endtime="20201112 10:16:43.057"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.050" endtime="20201112 10:16:43.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.062" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 10:16:43.061" endtime="20201112 10:16:43.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.064" level="INFO">VALUE: 17122975</msg>
<status status="PASS" starttime="20201112 10:16:43.063" endtime="20201112 10:16:43.065"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.058" endtime="20201112 10:16:43.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.070" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:43.069" endtime="20201112 10:16:43.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.072" level="INFO">VALUE: [17132999, 17142999, 17152999, 17162999, 17172999, 17182999, 17192999, 17202999, 17212999, 17222999, 17232999, 17242999, 17252999, 17262999, 17272999, 17282999, 17292999, 17302999, 17312999, 17322999, 17332999, 17342999, 17352999, 17362999, 17372999, 17382999, 17392999, 17402999, 17412999, 17422999, 17432999, 17442999, 17452999, 17462999, 17472999, 17482999, 17492999, 17502999, 17512999, 17522999, 17532999, 17542999, 17552999, 17562999, 17572999, 17582999, 17592999, 17602999, 17612999, 17622999, 17632999, 17642999, 17652999, 17662999, 17672999, 17682999, 17692999, 17702999, 17712999, 17722999, 17732999, 17742999, 17752999, 17762999, 17772999, 17782999, 17792999, 17802999, 17812999, 17822999, 17832999, 17842999, 17852999, 17862999, 17872999, 17882999, 17892999, 17902999, 17912999, 17922999, 17932999, 17942999, 17952999, 17962999, 17972999, 17982999, 17992999, 18002999, 18012999, 18022999, 18032999, 18042999, 18052999, 18062999, 18072999, 18082999, 18092999, 18102999, 18112999, 18122999]</msg>
<status status="PASS" starttime="20201112 10:16:43.071" endtime="20201112 10:16:43.074"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.066" endtime="20201112 10:16:43.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:43.092" endtime="20201112 10:16:43.423"></status>
</kw>
<msg timestamp="20201112 10:16:43.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044648431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054674236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:43.081" endtime="20201112 10:16:43.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044648431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054674236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:43.432" endtime="20201112 10:16:43.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:43.449" endtime="20201112 10:16:43.453"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.077" endtime="20201112 10:16:43.454"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.075" endtime="20201112 10:16:43.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:43.510" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:16:43.457" endtime="20201112 10:16:43.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.521" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 10:16:43.518" endtime="20201112 10:16:43.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.525" level="INFO">VALUE: 0.044648431</msg>
<status status="PASS" starttime="20201112 10:16:43.523" endtime="20201112 10:16:43.526"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.512" endtime="20201112 10:16:43.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.539" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:43.536" endtime="20201112 10:16:43.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:43.543" level="INFO">VALUE: [0.054674236, 0.064675389, 0.074676389, 0.084677583, 0.094678569, 0.104679722, 0.114680722, 0.124681889, 0.134682903, 0.144684056, 0.154685083, 0.164686236, 0.174687264, 0.184688403, 0.194689417, 0.204690569, 0.214691611, 0.22469275, 0.234693764, 0.244694917, 0.254695958, 0.264697111, 0.274698167, 0.284699264, 0.294700292, 0.304701458, 0.314702472, 0.324703625, 0.334704639, 0.344705806, 0.354706819, 0.364707972, 0.374708986, 0.384710139, 0.394711153, 0.404712333, 0.414713347, 0.424714486, 0.434715569, 0.444716667, 0.454717694, 0.464718847, 0.474719861, 0.484721014, 0.494722028, 0.504723194, 0.514724208, 0.524725403, 0.534726375, 0.544727542, 0.554728556, 0.564729708, 0.574730722, 0.584731889, 0.594732917, 0.604734056, 0.614735125, 0.624736236, 0.634737264, 0.644738472, 0.654739431, 0.664740597, 0.674741597, 0.684742778, 0.694743778, 0.704744931, 0.714745958, 0.724747139, 0.734748139, 0.744749278, 0.754750319, 0.764751458, 0.774752486, 0.784753639, 0.794754667, 0.804755806, 0.814756833, 0.824758042, 0.834759014, 0.844760153, 0.854761181, 0.864762333, 0.874763417, 0.8847645, 0.894765569, 0.904766681, 0.914767694, 0.924768931, 0.934769875, 0.944771028, 0.954772056, 0.964773208, 0.974774222, 0.984775375, 0.994776389, 1.004777569, 1.014778569, 1.024779792, 1.03478075, 1.044781917] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:43.541" endtime="20201112 10:16:43.544"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.529" endtime="20201112 10:16:43.546"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:43.552" endtime="20201112 10:16:43.555"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:43.560" endtime="20201112 10:16:43.584"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.556" endtime="20201112 10:16:43.586"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.548" endtime="20201112 10:16:43.587"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.915" endtime="20201112 10:16:43.588"></status>
</kw>
<msg timestamp="20201112 10:16:43.589" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:43.609" endtime="20201112 10:16:45.728"></status>
</kw>
<msg timestamp="20201112 10:16:45.729" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 19798410, 'wakeups': [19808434, 19818434, 19828434, 19838434, 19848434...</msg>
<status status="PASS" starttime="20201112 10:16:43.606" endtime="20201112 10:16:45.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.737" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 19798410, 'wakeups': [19808434, 19818434, 19828434, 19838434, 19848434...</msg>
<status status="PASS" starttime="20201112 10:16:45.732" endtime="20201112 10:16:45.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:45.739" endtime="20201112 10:16:45.743"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.599" endtime="20201112 10:16:45.745"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.594" endtime="20201112 10:16:45.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:45.752" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [19808434, 19818434, 19828434, 19838434, 19848434, 19858434, 19868434, 19878434, 19888434, 19898434, 19908434, 19918434, 19928434, 19938434, 19948434, 19958434, 19...</msg>
<status status="PASS" starttime="20201112 10:16:45.748" endtime="20201112 10:16:45.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.762" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:45.760" endtime="20201112 10:16:45.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.767" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:45.764" endtime="20201112 10:16:45.767"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.754" endtime="20201112 10:16:45.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.779" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 10:16:45.777" endtime="20201112 10:16:45.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.783" level="INFO">VALUE: 19798410</msg>
<status status="PASS" starttime="20201112 10:16:45.781" endtime="20201112 10:16:45.784"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.770" endtime="20201112 10:16:45.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.796" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:45.794" endtime="20201112 10:16:45.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.801" level="INFO">VALUE: [19808434, 19818434, 19828434, 19838434, 19848434, 19858434, 19868434, 19878434, 19888434, 19898434, 19908434, 19918434, 19928434, 19938434, 19948434, 19958434, 19968434, 19978434, 19988434, 19998434, 20008434, 20018434, 20028434, 20038434, 20048434, 20058434, 20068434, 20078434, 20088434, 20098434, 20108434, 20118434, 20128434, 20138434, 20148434, 20158434, 20168434, 20178434, 20188434, 20198434, 20208434, 20218434, 20228434, 20238434, 20248434, 20258434, 20268434, 20278434, 20288434, 20298434, 20308434, 20318434, 20328434, 20338434, 20348434, 20358434, 20368434, 20378434, 20388434, 20398434, 20408434, 20418434, 20428434, 20438434, 20448434, 20458434, 20468434, 20478434, 20488434, 20498434, 20508434, 20518434, 20528434, 20538434, 20548434, 20558434, 20568434, 20578434, 20588434, 20598434, 20608434, 20618434, 20628434, 20638434, 20648434, 20658434, 20668434, 20678434, 20688434, 20698434, 20708434, 20718434, 20728434, 20738434, 20748434, 20758434, 20768434, 20778434, 20788434, 20798434]</msg>
<status status="PASS" starttime="20201112 10:16:45.798" endtime="20201112 10:16:45.801"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.787" endtime="20201112 10:16:45.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:45.819" endtime="20201112 10:16:46.164"></status>
</kw>
<msg timestamp="20201112 10:16:46.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03810525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048131417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:16:45.816" endtime="20201112 10:16:46.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:46.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03810525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048131417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:16:46.172" endtime="20201112 10:16:46.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:46.189" endtime="20201112 10:16:46.195"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.809" endtime="20201112 10:16:46.196"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.804" endtime="20201112 10:16:46.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:46.221" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:16:46.198" endtime="20201112 10:16:46.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:46.227" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 10:16:46.226" endtime="20201112 10:16:46.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:46.229" level="INFO">VALUE: 0.03810525</msg>
<status status="PASS" starttime="20201112 10:16:46.228" endtime="20201112 10:16:46.229"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.223" endtime="20201112 10:16:46.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:46.235" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:46.234" endtime="20201112 10:16:46.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:46.238" level="INFO">VALUE: [0.048131417, 0.058132514, 0.068133514, 0.078134681, 0.088135694, 0.098136861, 0.108137889, 0.118139056, 0.128140056, 0.138141222, 0.148142236, 0.158143403, 0.168144417, 0.178145569, 0.188146583, 0.19814775, 0.208148764, 0.218149931, 0.228150958, 0.238152111, 0.248153194, 0.258154319, 0.268155306, 0.278156472, 0.288157486, 0.298158639, 0.308159667, 0.318160819, 0.328161875, 0.338163, 0.348164028, 0.358165194, 0.368166222, 0.378167361, 0.388168431, 0.398169542, 0.408170583, 0.418171722, 0.42817275, 0.438173903, 0.448174931, 0.458176111, 0.468177111, 0.478178264, 0.488179292, 0.498180458, 0.508181486, 0.518182625, 0.528183639, 0.538184806, 0.548185819, 0.558186986, 0.568188, 0.578189167, 0.588190181, 0.598191347, 0.608192375, 0.618193556, 0.628194583, 0.638195722, 0.648196736, 0.658197903, 0.668198944, 0.678200097, 0.688201097, 0.69820225, 0.708203264, 0.718204431, 0.728205444, 0.738206611, 0.748207625, 0.758208792, 0.768209806, 0.778210972, 0.788211986, 0.798213167, 0.808214167, 0.818215361, 0.828216375, 0.838217528, 0.848218569, 0.858219694, 0.868220708, 0.878221889, 0.888222889, 0.898224083, 0.908225125, 0.918226236, 0.92822725, 0.938228417, 0.948229431, 0.958230611, 0.968231639, 0.978232778, 0.988233792, 0.998234972, 1.008235972, 1.018237153, 1.028238194, 1.038239319] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:46.236" endtime="20201112 10:16:46.238"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.231" endtime="20201112 10:16:46.239"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:46.242" endtime="20201112 10:16:46.243"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:46.245" endtime="20201112 10:16:46.265"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.243" endtime="20201112 10:16:46.266"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.239" endtime="20201112 10:16:46.266"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:43.590" endtime="20201112 10:16:46.267"></status>
</kw>
<msg timestamp="20201112 10:16:46.267" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:46.277" endtime="20201112 10:16:48.394"></status>
</kw>
<msg timestamp="20201112 10:16:48.395" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 22463843, 'wakeups': [22473867, 22483867, 22493867, 22503867, 22513867...</msg>
<status status="PASS" starttime="20201112 10:16:46.275" endtime="20201112 10:16:48.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:48.402" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 22463843, 'wakeups': [22473867, 22483867, 22493867, 22503867, 22513867...</msg>
<status status="PASS" starttime="20201112 10:16:48.398" endtime="20201112 10:16:48.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:48.404" endtime="20201112 10:16:48.410"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.272" endtime="20201112 10:16:48.411"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.269" endtime="20201112 10:16:48.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:48.419" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [22473867, 22483867, 22493867, 22503867, 22513867, 22523867, 22533867, 22543867, 22553867, 22563867, 22573867, 22583867, 22593867, 22603867, 22613867, 22623867, 22...</msg>
<status status="PASS" starttime="20201112 10:16:48.414" endtime="20201112 10:16:48.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:48.429" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:48.427" endtime="20201112 10:16:48.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:48.433" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:48.431" endtime="20201112 10:16:48.434"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.421" endtime="20201112 10:16:48.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:48.446" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 10:16:48.445" endtime="20201112 10:16:48.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:48.448" level="INFO">VALUE: 22463843</msg>
<status status="PASS" starttime="20201112 10:16:48.447" endtime="20201112 10:16:48.449"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.442" endtime="20201112 10:16:48.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:48.454" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:48.453" endtime="20201112 10:16:48.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:48.456" level="INFO">VALUE: [22473867, 22483867, 22493867, 22503867, 22513867, 22523867, 22533867, 22543867, 22553867, 22563867, 22573867, 22583867, 22593867, 22603867, 22613867, 22623867, 22633867, 22643867, 22653867, 22663867, 22673867, 22683867, 22693867, 22703867, 22713867, 22723867, 22733867, 22743867, 22753867, 22763867, 22773867, 22783867, 22793867, 22803867, 22813867, 22823867, 22833867, 22843867, 22853867, 22863867, 22873867, 22883867, 22893867, 22903867, 22913867, 22923867, 22933867, 22943867, 22953867, 22963867, 22973867, 22983867, 22993867, 23003867, 23013867, 23023867, 23033867, 23043867, 23053867, 23063867, 23073867, 23083867, 23093867, 23103867, 23113867, 23123867, 23133867, 23143867, 23153867, 23163867, 23173867, 23183867, 23193867, 23203867, 23213867, 23223867, 23233867, 23243867, 23253867, 23263867, 23273867, 23283867, 23293867, 23303867, 23313867, 23323867, 23333867, 23343867, 23353867, 23363867, 23373867, 23383867, 23393867, 23403867, 23413867, 23423867, 23433867, 23443867, 23453867, 23463867]</msg>
<status status="PASS" starttime="20201112 10:16:48.455" endtime="20201112 10:16:48.457"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.450" endtime="20201112 10:16:48.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:48.465" endtime="20201112 10:16:48.805"></status>
</kw>
<msg timestamp="20201112 10:16:48.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021468722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031494528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:48.464" endtime="20201112 10:16:48.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:48.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021468722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031494528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:48.814" endtime="20201112 10:16:48.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:48.832" endtime="20201112 10:16:48.836"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.460" endtime="20201112 10:16:48.838"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.458" endtime="20201112 10:16:48.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:48.899" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:16:48.841" endtime="20201112 10:16:48.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:48.911" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 10:16:48.908" endtime="20201112 10:16:48.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:48.916" level="INFO">VALUE: 0.021468722</msg>
<status status="PASS" starttime="20201112 10:16:48.913" endtime="20201112 10:16:48.916"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.902" endtime="20201112 10:16:48.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:48.930" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:48.927" endtime="20201112 10:16:48.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:48.936" level="INFO">VALUE: [0.031494528, 0.041495653, 0.051496681, 0.061497833, 0.071498847, 0.081500014, 0.091501042, 0.101502181, 0.111503208, 0.121504361, 0.131505403, 0.141506556, 0.151507569, 0.161508722, 0.17150975, 0.181510903, 0.191511931, 0.201513069, 0.211514083, 0.22151525, 0.231516278, 0.241517431, 0.251518486, 0.261519597, 0.271520625, 0.281521778, 0.291522819, 0.301523972, 0.311524972, 0.321526139, 0.331527153, 0.341528347, 0.351529333, 0.361530514, 0.371531528, 0.381532708, 0.391533694, 0.401534861, 0.411535917, 0.421537056, 0.431538069, 0.441539222, 0.451540236, 0.461541403, 0.471542417, 0.481543569, 0.491544597, 0.50154575, 0.511546778, 0.521547958, 0.531548958, 0.541550125, 0.551551125, 0.561552319, 0.571553306, 0.581554486, 0.591555514, 0.601556653, 0.611557667, 0.621558833, 0.631559903, 0.641561028, 0.651562028, 0.661563208, 0.671564208, 0.681565375, 0.691566389, 0.701567583, 0.711568583, 0.721569722, 0.731570819, 0.741571917, 0.751572917, 0.761574139, 0.771575111, 0.781576264, 0.791577278, 0.801578444, 0.811579458, 0.821580653, 0.831581653, 0.841582806, 0.851583833, 0.861584986, 0.871586056, 0.881587153, 0.891588181, 0.901589333, 0.911590361, 0.921591514, 0.931592528, 0.941593694, 0.951594708, 0.961595889, 0.971596889, 0.981598069, 0.991599069, 1.001600292, 1.01160125, 1.021602417] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:48.933" endtime="20201112 10:16:48.938"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.919" endtime="20201112 10:16:48.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:48.946" endtime="20201112 10:16:48.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:48.955" endtime="20201112 10:16:48.977"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.951" endtime="20201112 10:16:48.979"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.942" endtime="20201112 10:16:48.981"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.267" endtime="20201112 10:16:48.981"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.910" endtime="20201112 10:16:48.982"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:40.908" endtime="20201112 10:16:48.982"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:48.989" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:49.022" endtime="20201112 10:16:51.153"></status>
</kw>
<msg timestamp="20201112 10:16:51.155" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25211532, 'wakeups': [25221566, 25231566, 25241566, 25251566, 25261566...</msg>
<status status="PASS" starttime="20201112 10:16:49.015" endtime="20201112 10:16:51.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:51.162" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25211532, 'wakeups': [25221566, 25231566, 25241566, 25251566, 25261566...</msg>
<status status="PASS" starttime="20201112 10:16:51.157" endtime="20201112 10:16:51.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:51.164" endtime="20201112 10:16:51.168"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:49.005" endtime="20201112 10:16:51.170"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.994" endtime="20201112 10:16:51.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:51.178" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [25221566, 25231566, 25241566, 25251566, 25261566, 25271566, 25281566, 25291566, 25301566, 25311566, 25321566, 25331566, 25341566, 25351566, 25361566, 25371566, 25...</msg>
<status status="PASS" starttime="20201112 10:16:51.173" endtime="20201112 10:16:51.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:51.189" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:51.186" endtime="20201112 10:16:51.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:51.194" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:51.191" endtime="20201112 10:16:51.195"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:51.180" endtime="20201112 10:16:51.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:51.207" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 10:16:51.205" endtime="20201112 10:16:51.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:51.212" level="INFO">VALUE: 25211532</msg>
<status status="PASS" starttime="20201112 10:16:51.209" endtime="20201112 10:16:51.213"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:51.198" endtime="20201112 10:16:51.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:51.225" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:51.222" endtime="20201112 10:16:51.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:51.233" level="INFO">VALUE: [25221566, 25231566, 25241566, 25251566, 25261566, 25271566, 25281566, 25291566, 25301566, 25311566, 25321566, 25331566, 25341566, 25351566, 25361566, 25371566, 25381566, 25391566, 25401566, 25411566, 25421566, 25431566, 25441566, 25451566, 25461566, 25471566, 25481566, 25491566, 25501566, 25511566, 25521566, 25531566, 25541566, 25551566, 25561566, 25571566, 25581566, 25591566, 25601566, 25611566, 25621566, 25631566, 25641566, 25651566, 25661566, 25671566, 25681566, 25691566, 25701566, 25711566, 25721566, 25731566, 25741566, 25751566, 25761566, 25771566, 25781566, 25791566, 25801566, 25811566, 25821566, 25831566, 25841566, 25851566, 25861566, 25871566, 25881566, 25891566, 25901566, 25911566, 25921566, 25931566, 25941566, 25951566, 25961566, 25971566, 25981566, 25991566, 26001566, 26011566, 26021566, 26031566, 26041566, 26051566, 26061566, 26071566, 26081566, 26091566, 26101566, 26111566, 26121566, 26131566, 26141566, 26151566, 26161566, 26171566, 26181566, 26191566, 26201566, 26211566]</msg>
<status status="PASS" starttime="20201112 10:16:51.227" endtime="20201112 10:16:51.235"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:51.216" endtime="20201112 10:16:51.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:51.254" endtime="20201112 10:16:51.610"></status>
</kw>
<msg timestamp="20201112 10:16:51.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.058712847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068748694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:51.251" endtime="20201112 10:16:51.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:51.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.058712847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068748694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:51.614" endtime="20201112 10:16:51.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:51.622" endtime="20201112 10:16:51.624"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:51.243" endtime="20201112 10:16:51.625"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:51.238" endtime="20201112 10:16:51.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:51.650" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:16:51.626" endtime="20201112 10:16:51.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:51.656" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 10:16:51.654" endtime="20201112 10:16:51.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:51.658" level="INFO">VALUE: 0.058712847</msg>
<status status="PASS" starttime="20201112 10:16:51.657" endtime="20201112 10:16:51.658"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:51.651" endtime="20201112 10:16:51.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:51.664" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:51.663" endtime="20201112 10:16:51.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:51.667" level="INFO">VALUE: [0.068748694, 0.078749847, 0.088750833, 0.098751986, 0.108753014, 0.118754167, 0.128755181, 0.138756347, 0.148757361, 0.158758514, 0.168759542, 0.178760681, 0.188761708, 0.198762917, 0.208763875, 0.218765028, 0.228766056, 0.238767208, 0.248768222, 0.258769403, 0.268770417, 0.278771556, 0.288772569, 0.29877375, 0.308774764, 0.318775917, 0.328776931, 0.338778083, 0.348779097, 0.358780278, 0.368781278, 0.378782431, 0.388783458, 0.398784639, 0.408785653, 0.418786819, 0.428787806, 0.438788958, 0.448789972, 0.458791139, 0.468792153, 0.478793361, 0.488794333, 0.4987955, 0.508796514, 0.518797681, 0.528798694, 0.538799847, 0.548800875, 0.558802014, 0.568803028, 0.578804208, 0.588805208, 0.598806361, 0.608807389, 0.618808542, 0.628809556, 0.638810722, 0.648811736, 0.658812889, 0.668813917, 0.678815069, 0.688816083, 0.698817319, 0.708818278, 0.718819431, 0.728820458, 0.738821597, 0.748822611, 0.758823778, 0.768824806, 0.778825944, 0.788826972, 0.798828125, 0.808829208, 0.818830306, 0.828831333, 0.838832472, 0.848833486, 0.858834653, 0.868835667, 0.878836833, 0.888837847, 0.898839, 0.908840014, 0.918841222, 0.928842194, 0.938843361, 0.948844389, 0.958845542, 0.968846542, 0.978847722, 0.988848722, 0.998849875, 1.008850903, 1.018852056, 1.028853069, 1.038854236, 1.04885525, 1.058856403] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:51.665" endtime="20201112 10:16:51.667"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:51.659" endtime="20201112 10:16:51.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:51.671" endtime="20201112 10:16:51.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:51.675" endtime="20201112 10:16:51.695"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:51.673" endtime="20201112 10:16:51.696"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:51.669" endtime="20201112 10:16:51.697"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.990" endtime="20201112 10:16:51.697"></status>
</kw>
<msg timestamp="20201112 10:16:51.697" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:51.708" endtime="20201112 10:16:53.837"></status>
</kw>
<msg timestamp="20201112 10:16:53.838" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 27895217, 'wakeups': [27905251, 27915251, 27925251, 27935251, 27945251...</msg>
<status status="PASS" starttime="20201112 10:16:51.706" endtime="20201112 10:16:53.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.846" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 27895217, 'wakeups': [27905251, 27915251, 27925251, 27935251, 27945251...</msg>
<status status="PASS" starttime="20201112 10:16:53.841" endtime="20201112 10:16:53.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:53.848" endtime="20201112 10:16:53.851"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:51.702" endtime="20201112 10:16:53.852"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:51.700" endtime="20201112 10:16:53.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:53.856" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [27905251, 27915251, 27925251, 27935251, 27945251, 27955251, 27965251, 27975251, 27985251, 27995251, 28005251, 28015251, 28025251, 28035251, 28045251, 28055251, 28...</msg>
<status status="PASS" starttime="20201112 10:16:53.853" endtime="20201112 10:16:53.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.861" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:53.860" endtime="20201112 10:16:53.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.863" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:53.862" endtime="20201112 10:16:53.863"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.857" endtime="20201112 10:16:53.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.869" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 10:16:53.868" endtime="20201112 10:16:53.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.871" level="INFO">VALUE: 27895217</msg>
<status status="PASS" starttime="20201112 10:16:53.870" endtime="20201112 10:16:53.872"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.865" endtime="20201112 10:16:53.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.877" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:53.876" endtime="20201112 10:16:53.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:53.880" level="INFO">VALUE: [27905251, 27915251, 27925251, 27935251, 27945251, 27955251, 27965251, 27975251, 27985251, 27995251, 28005251, 28015251, 28025251, 28035251, 28045251, 28055251, 28065251, 28075251, 28085251, 28095251, 28105251, 28115251, 28125251, 28135251, 28145251, 28155251, 28165251, 28175251, 28185251, 28195251, 28205251, 28215251, 28225251, 28235251, 28245251, 28255251, 28265251, 28275251, 28285251, 28295251, 28305251, 28315251, 28325251, 28335251, 28345251, 28355251, 28365251, 28375251, 28385251, 28395251, 28405251, 28415251, 28425251, 28435251, 28445251, 28455251, 28465251, 28475251, 28485251, 28495251, 28505251, 28515251, 28525251, 28535251, 28545251, 28555251, 28565251, 28575251, 28585251, 28595251, 28605251, 28615251, 28625251, 28635251, 28645251, 28655251, 28665251, 28675251, 28685251, 28695251, 28705251, 28715251, 28725251, 28735251, 28745251, 28755251, 28765251, 28775251, 28785251, 28795251, 28805251, 28815251, 28825251, 28835251, 28845251, 28855251, 28865251, 28875251, 28885251, 28895251]</msg>
<status status="PASS" starttime="20201112 10:16:53.879" endtime="20201112 10:16:53.880"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.873" endtime="20201112 10:16:53.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:53.889" endtime="20201112 10:16:54.226"></status>
</kw>
<msg timestamp="20201112 10:16:54.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022729417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032764903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:53.887" endtime="20201112 10:16:54.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:54.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022729417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032764903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:54.235" endtime="20201112 10:16:54.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:54.252" endtime="20201112 10:16:54.257"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.884" endtime="20201112 10:16:54.260"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:53.882" endtime="20201112 10:16:54.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:54.315" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:16:54.263" endtime="20201112 10:16:54.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:54.326" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 10:16:54.324" endtime="20201112 10:16:54.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:54.330" level="INFO">VALUE: 0.022729417</msg>
<status status="PASS" starttime="20201112 10:16:54.328" endtime="20201112 10:16:54.331"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:54.317" endtime="20201112 10:16:54.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:54.344" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:54.341" endtime="20201112 10:16:54.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:54.348" level="INFO">VALUE: [0.032764903, 0.042766028, 0.052767042, 0.062768236, 0.072769222, 0.082770389, 0.092771389, 0.102772542, 0.112773556, 0.122774736, 0.13277575, 0.142776944, 0.152777903, 0.162779083, 0.172780069, 0.18278125, 0.192782264, 0.202783403, 0.212784431, 0.222785583, 0.232786597, 0.24278775, 0.252788778, 0.262789917, 0.272790944, 0.282792125, 0.292793111, 0.302794264, 0.312795292, 0.322796444, 0.332797486, 0.342798611, 0.352799653, 0.362800833, 0.372801819, 0.382802958, 0.392804, 0.402805139, 0.412806153, 0.422807319, 0.432808347, 0.442809486, 0.4528105, 0.462811667, 0.472812694, 0.482813847, 0.492814847, 0.502816, 0.512817028, 0.522818181, 0.532819194, 0.542820361, 0.552821389, 0.562822542, 0.572823542, 0.582824722, 0.592825722, 0.602826875, 0.612827903, 0.622829056, 0.632830069, 0.642831236, 0.652832236, 0.662833458, 0.672834444, 0.682835569, 0.692836583, 0.702837792, 0.712838778, 0.722839917, 0.732840931, 0.742842097, 0.752843125, 0.762844264, 0.772845278, 0.782846444, 0.792847486, 0.802848625, 0.812849667, 0.822850806, 0.832851819, 0.842852972, 0.852853972, 0.862855139, 0.872856222, 0.882857306, 0.892858319, 0.9028595, 0.9128605, 0.922861653, 0.932862681, 0.942863847, 0.952864861, 0.962866042, 0.972867014, 0.982868181, 0.992869194, 1.002870361, 1.012871375, 1.022872528] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:54.346" endtime="20201112 10:16:54.349"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:54.334" endtime="20201112 10:16:54.351"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:54.357" endtime="20201112 10:16:54.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:54.365" endtime="20201112 10:16:54.387"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:54.361" endtime="20201112 10:16:54.388"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:54.352" endtime="20201112 10:16:54.390"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:51.698" endtime="20201112 10:16:54.391"></status>
</kw>
<msg timestamp="20201112 10:16:54.391" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:54.412" endtime="20201112 10:16:56.532"></status>
</kw>
<msg timestamp="20201112 10:16:56.534" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 30600413, 'wakeups': [30610447, 30620447, 30630447, 30640447, 30650447...</msg>
<status status="PASS" starttime="20201112 10:16:54.408" endtime="20201112 10:16:56.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:56.540" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 30600413, 'wakeups': [30610447, 30620447, 30630447, 30640447, 30650447...</msg>
<status status="PASS" starttime="20201112 10:16:56.536" endtime="20201112 10:16:56.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:56.543" endtime="20201112 10:16:56.548"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:54.401" endtime="20201112 10:16:56.549"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:54.396" endtime="20201112 10:16:56.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:56.557" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [30610447, 30620447, 30630447, 30640447, 30650447, 30660447, 30670447, 30680447, 30690447, 30700447, 30710447, 30720447, 30730447, 30740447, 30750447, 30760447, 30...</msg>
<status status="PASS" starttime="20201112 10:16:56.552" endtime="20201112 10:16:56.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:56.568" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:56.565" endtime="20201112 10:16:56.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:56.572" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:56.570" endtime="20201112 10:16:56.573"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:56.559" endtime="20201112 10:16:56.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:56.584" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 10:16:56.582" endtime="20201112 10:16:56.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:56.593" level="INFO">VALUE: 30600413</msg>
<status status="PASS" starttime="20201112 10:16:56.590" endtime="20201112 10:16:56.594"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:56.576" endtime="20201112 10:16:56.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:56.606" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:56.604" endtime="20201112 10:16:56.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:56.611" level="INFO">VALUE: [30610447, 30620447, 30630447, 30640447, 30650447, 30660447, 30670447, 30680447, 30690447, 30700447, 30710447, 30720447, 30730447, 30740447, 30750447, 30760447, 30770447, 30780447, 30790447, 30800447, 30810447, 30820447, 30830447, 30840447, 30850447, 30860447, 30870447, 30880447, 30890447, 30900447, 30910447, 30920447, 30930447, 30940447, 30950447, 30960447, 30970447, 30980447, 30990447, 31000447, 31010447, 31020447, 31030447, 31040447, 31050447, 31060447, 31070447, 31080447, 31090447, 31100447, 31110447, 31120447, 31130447, 31140447, 31150447, 31160447, 31170447, 31180447, 31190447, 31200447, 31210447, 31220447, 31230447, 31240447, 31250447, 31260447, 31270447, 31280447, 31290447, 31300447, 31310447, 31320447, 31330447, 31340447, 31350447, 31360447, 31370447, 31380447, 31390447, 31400447, 31410447, 31420447, 31430447, 31440447, 31450447, 31460447, 31470447, 31480447, 31490447, 31500447, 31510447, 31520447, 31530447, 31540447, 31550447, 31560447, 31570447, 31580447, 31590447, 31600447]</msg>
<status status="PASS" starttime="20201112 10:16:56.608" endtime="20201112 10:16:56.612"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:56.597" endtime="20201112 10:16:56.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:56.631" endtime="20201112 10:16:56.979"></status>
</kw>
<msg timestamp="20201112 10:16:56.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037862903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047898389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:56.628" endtime="20201112 10:16:56.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:57.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037862903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047898389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:56.988" endtime="20201112 10:16:57.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:57.005" endtime="20201112 10:16:57.009"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:56.620" endtime="20201112 10:16:57.010"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:56.615" endtime="20201112 10:16:57.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:57.038" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:16:57.013" endtime="20201112 10:16:57.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:57.044" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 10:16:57.043" endtime="20201112 10:16:57.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:57.046" level="INFO">VALUE: 0.037862903</msg>
<status status="PASS" starttime="20201112 10:16:57.045" endtime="20201112 10:16:57.046"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:57.039" endtime="20201112 10:16:57.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:57.052" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:57.051" endtime="20201112 10:16:57.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:57.055" level="INFO">VALUE: [0.047898389, 0.057899514, 0.067900528, 0.077901681, 0.087902694, 0.097903875, 0.107904889, 0.117906028, 0.127907042, 0.137908194, 0.147909208, 0.157910361, 0.167911389, 0.177912542, 0.187913611, 0.19791475, 0.207915722, 0.217916889, 0.227917889, 0.237919097, 0.247920083, 0.257921236, 0.267922236, 0.277923458, 0.287924403, 0.297925556, 0.307926569, 0.317927736, 0.327928764, 0.337929917, 0.347930917, 0.357932097, 0.367933097, 0.37793425, 0.387935278, 0.397936431, 0.407937444, 0.417938597, 0.427939611, 0.437940764, 0.447941778, 0.457942931, 0.467943986, 0.477945125, 0.487946125, 0.497947306, 0.507948292, 0.517949486, 0.527950472, 0.537951625, 0.547952639, 0.557953792, 0.567954806, 0.577955972, 0.587956986, 0.597958139, 0.607959167, 0.617960319, 0.627961333, 0.637962486, 0.6479635, 0.657964694, 0.667965708, 0.677966917, 0.687967847, 0.697969014, 0.707970042, 0.717971181, 0.727972236, 0.737973361, 0.747974403, 0.757975514, 0.767976583, 0.777977694, 0.787978708, 0.797979875, 0.807980875, 0.817982028, 0.827983069, 0.837984208, 0.847985236, 0.857986403, 0.867987444, 0.877988597, 0.887989611, 0.897990778, 0.907991806, 0.917992972, 0.927994, 0.937995153, 0.947996181, 0.957997389, 0.967998375, 0.977999542, 0.988000569, 0.998001722, 1.008002764, 1.018003931, 1.028004944, 1.038006097] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:57.053" endtime="20201112 10:16:57.055"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:57.047" endtime="20201112 10:16:57.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:57.059" endtime="20201112 10:16:57.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:57.063" endtime="20201112 10:16:57.082"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:57.061" endtime="20201112 10:16:57.083"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:57.057" endtime="20201112 10:16:57.084"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:54.392" endtime="20201112 10:16:57.084"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.985" endtime="20201112 10:16:57.084"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:48.983" endtime="20201112 10:16:57.085"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:57.087" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:57.097" endtime="20201112 10:16:59.216"></status>
</kw>
<msg timestamp="20201112 10:16:59.218" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33284220, 'wakeups': [33294264, 33304265, 33314265, 33324265, 33334265...</msg>
<status status="PASS" starttime="20201112 10:16:57.096" endtime="20201112 10:16:59.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:59.225" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33284220, 'wakeups': [33294264, 33304265, 33314265, 33324265, 33334265...</msg>
<status status="PASS" starttime="20201112 10:16:59.220" endtime="20201112 10:16:59.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:59.227" endtime="20201112 10:16:59.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:57.092" endtime="20201112 10:16:59.232"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:57.090" endtime="20201112 10:16:59.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:59.240" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [33294264, 33304265, 33314265, 33324265, 33334265, 33344265, 33354265, 33364265, 33374265, 33384265, 33394265, 33404265, 33414265, 33424265, 33434265, 33444265, 33...</msg>
<status status="PASS" starttime="20201112 10:16:59.235" endtime="20201112 10:16:59.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:59.250" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:59.248" endtime="20201112 10:16:59.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:59.255" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:59.252" endtime="20201112 10:16:59.255"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:59.242" endtime="20201112 10:16:59.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:59.269" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 10:16:59.267" endtime="20201112 10:16:59.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:59.274" level="INFO">VALUE: 33284220</msg>
<status status="PASS" starttime="20201112 10:16:59.272" endtime="20201112 10:16:59.275"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:59.259" endtime="20201112 10:16:59.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:59.287" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:59.285" endtime="20201112 10:16:59.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:59.292" level="INFO">VALUE: [33294264, 33304265, 33314265, 33324265, 33334265, 33344265, 33354265, 33364265, 33374265, 33384265, 33394265, 33404265, 33414265, 33424265, 33434265, 33444265, 33454265, 33464265, 33474265, 33484265, 33494265, 33504265, 33514265, 33524265, 33534265, 33544265, 33554265, 33564265, 33574265, 33584265, 33594265, 33604265, 33614265, 33624265, 33634265, 33644265, 33654265, 33664265, 33674265, 33684265, 33694265, 33704265, 33714265, 33724265, 33734265, 33744265, 33754265, 33764265, 33774265, 33784265, 33794265, 33804265, 33814265, 33824265, 33834265, 33844265, 33854265, 33864265, 33874265, 33884265, 33894265, 33904265, 33914265, 33924265, 33934265, 33944265, 33954265, 33964265, 33974265, 33984265, 33994265, 34004265, 34014265, 34024265, 34034265, 34044265, 34054265, 34064265, 34074265, 34084265, 34094265, 34104265, 34114265, 34124265, 34134265, 34144265, 34154265, 34164265, 34174265, 34184265, 34194265, 34204265, 34214265, 34224265, 34234265, 34244265, 34254265, 34264265, 34274265, 34284265]</msg>
<status status="PASS" starttime="20201112 10:16:59.289" endtime="20201112 10:16:59.295"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:59.278" endtime="20201112 10:16:59.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:59.313" endtime="20201112 10:16:59.663"></status>
</kw>
<msg timestamp="20201112 10:16:59.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024494444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034541056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:59.310" endtime="20201112 10:16:59.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:59.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024494444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034541056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:59.672" endtime="20201112 10:16:59.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:59.689" endtime="20201112 10:16:59.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:59.303" endtime="20201112 10:16:59.695"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:59.298" endtime="20201112 10:16:59.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:59.753" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:16:59.698" endtime="20201112 10:16:59.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:59.764" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 10:16:59.762" endtime="20201112 10:16:59.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:59.768" level="INFO">VALUE: 0.024494444</msg>
<status status="PASS" starttime="20201112 10:16:59.766" endtime="20201112 10:16:59.769"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:59.755" endtime="20201112 10:16:59.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:59.782" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:59.780" endtime="20201112 10:16:59.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:59.787" level="INFO">VALUE: [0.034541056, 0.044542292, 0.054543306, 0.064544458, 0.0745455, 0.084546639, 0.094547667, 0.104548819, 0.114549833, 0.124551028, 0.134552014, 0.144553167, 0.154554194, 0.164555375, 0.174556375, 0.184557611, 0.194558542, 0.204559708, 0.214560722, 0.224561889, 0.234562917, 0.244564069, 0.254565153, 0.264566236, 0.274567264, 0.284568417, 0.294569431, 0.304570597, 0.314571625, 0.324572778, 0.334573806, 0.344574958, 0.354575986, 0.364577139, 0.374578153, 0.384579333, 0.394580333, 0.404581542, 0.414582528, 0.424583681, 0.434584694, 0.444585847, 0.454586889, 0.464588028, 0.474589069, 0.484590208, 0.494591236, 0.504592389, 0.514593403, 0.524594569, 0.534595583, 0.544596764, 0.554597778, 0.564598944, 0.574599972, 0.584601125, 0.594602125, 0.604603292, 0.614604306, 0.624605486, 0.634606486, 0.644607639, 0.654608667, 0.664609819, 0.674610847, 0.684612042, 0.694613028, 0.704614181, 0.714615222, 0.724616375, 0.734617389, 0.744618542, 0.754619556, 0.764620722, 0.774621764, 0.784622917, 0.794623944, 0.804625097, 0.814626125, 0.824627264, 0.834628278, 0.844629458, 0.854630486, 0.864631625, 0.874632639, 0.884633792, 0.894634819, 0.904636, 0.914637014, 0.924638153, 0.934639181, 0.944640333, 0.954641361, 0.964642514, 0.974643542, 0.984644694, 0.994645722, 1.004646875, 1.014647889, 1.024649056] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:59.784" endtime="20201112 10:16:59.788"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:59.772" endtime="20201112 10:16:59.789"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:59.796" endtime="20201112 10:16:59.799"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:59.805" endtime="20201112 10:16:59.828"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:59.800" endtime="20201112 10:16:59.830"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:59.791" endtime="20201112 10:16:59.831"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:57.088" endtime="20201112 10:16:59.832"></status>
</kw>
<msg timestamp="20201112 10:16:59.832" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:59.853" endtime="20201112 10:17:01.974"></status>
</kw>
<msg timestamp="20201112 10:17:01.976" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36042040, 'wakeups': [36052084, 36062085, 36072085, 36082085, 36092085...</msg>
<status status="PASS" starttime="20201112 10:16:59.850" endtime="20201112 10:17:01.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:01.983" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36042040, 'wakeups': [36052084, 36062085, 36072085, 36082085, 36092085...</msg>
<status status="PASS" starttime="20201112 10:17:01.978" endtime="20201112 10:17:01.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:01.985" endtime="20201112 10:17:01.989"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:59.843" endtime="20201112 10:17:01.991"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:59.837" endtime="20201112 10:17:01.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:01.998" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [36052084, 36062085, 36072085, 36082085, 36092085, 36102085, 36112085, 36122085, 36132085, 36142085, 36152085, 36162085, 36172085, 36182085, 36192085, 36202085, 36...</msg>
<status status="PASS" starttime="20201112 10:17:01.994" endtime="20201112 10:17:01.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:02.009" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:02.006" endtime="20201112 10:17:02.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:02.013" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:02.011" endtime="20201112 10:17:02.014"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:02.000" endtime="20201112 10:17:02.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:02.026" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 10:17:02.023" endtime="20201112 10:17:02.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:02.030" level="INFO">VALUE: 36042040</msg>
<status status="PASS" starttime="20201112 10:17:02.028" endtime="20201112 10:17:02.031"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:02.017" endtime="20201112 10:17:02.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:02.043" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:02.041" endtime="20201112 10:17:02.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:02.048" level="INFO">VALUE: [36052084, 36062085, 36072085, 36082085, 36092085, 36102085, 36112085, 36122085, 36132085, 36142085, 36152085, 36162085, 36172085, 36182085, 36192085, 36202085, 36212085, 36222085, 36232085, 36242085, 36252085, 36262085, 36272085, 36282085, 36292085, 36302085, 36312085, 36322085, 36332085, 36342085, 36352085, 36362085, 36372085, 36382085, 36392085, 36402085, 36412085, 36422085, 36432085, 36442085, 36452085, 36462085, 36472085, 36482085, 36492085, 36502085, 36512085, 36522085, 36532085, 36542085, 36552085, 36562085, 36572085, 36582085, 36592085, 36602085, 36612085, 36622085, 36632085, 36642085, 36652085, 36662085, 36672085, 36682085, 36692085, 36702085, 36712085, 36722085, 36732085, 36742085, 36752085, 36762085, 36772085, 36782085, 36792085, 36802085, 36812085, 36822085, 36832085, 36842085, 36852085, 36862085, 36872085, 36882085, 36892085, 36902085, 36912085, 36922085, 36932085, 36942085, 36952085, 36962085, 36972085, 36982085, 36992085, 37002085, 37012085, 37022085, 37032085, 37042085]</msg>
<status status="PASS" starttime="20201112 10:17:02.045" endtime="20201112 10:17:02.049"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:02.034" endtime="20201112 10:17:02.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:02.068" endtime="20201112 10:17:02.414"></status>
</kw>
<msg timestamp="20201112 10:17:02.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038512639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04855925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:17:02.064" endtime="20201112 10:17:02.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:02.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038512639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04855925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:17:02.423" endtime="20201112 10:17:02.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:02.440" endtime="20201112 10:17:02.446"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:02.056" endtime="20201112 10:17:02.447"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:02.052" endtime="20201112 10:17:02.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:02.505" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:17:02.450" endtime="20201112 10:17:02.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:02.516" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 10:17:02.514" endtime="20201112 10:17:02.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:02.521" level="INFO">VALUE: 0.038512639</msg>
<status status="PASS" starttime="20201112 10:17:02.518" endtime="20201112 10:17:02.522"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:02.507" endtime="20201112 10:17:02.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:02.534" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:02.532" endtime="20201112 10:17:02.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:02.539" level="INFO">VALUE: [0.04855925, 0.058560486, 0.068561569, 0.078562667, 0.088563694, 0.098564833, 0.108565861, 0.118567028, 0.128568042, 0.138569194, 0.148570222, 0.158571375, 0.168572375, 0.178573542, 0.188574569, 0.198575708, 0.208576736, 0.218577889, 0.228578903, 0.238580069, 0.248581083, 0.258582236, 0.268583264, 0.278584431, 0.288585458, 0.298586597, 0.308587625, 0.318588778, 0.328589792, 0.338590958, 0.348591958, 0.358593167, 0.368594139, 0.378595319, 0.388596361, 0.398597472, 0.408598556, 0.418599653, 0.428600667, 0.438601847, 0.448602847, 0.458604014, 0.468605028, 0.478606194, 0.488607208, 0.498608361, 0.508609389, 0.518610542, 0.528611556, 0.538612722, 0.548613736, 0.558614903, 0.568615903, 0.578617083, 0.588618083, 0.598619278, 0.608620306, 0.618621417, 0.628622444, 0.638623611, 0.648624625, 0.658625792, 0.668626792, 0.678627944, 0.688629014, 0.698630181, 0.708631153, 0.718632347, 0.728633319, 0.738634472, 0.748635514, 0.758636653, 0.768637681, 0.778638889, 0.788639847, 0.798641014, 0.808642028, 0.818643194, 0.828644278, 0.838645361, 0.848646375, 0.858647542, 0.868648583, 0.878649708, 0.888650736, 0.898651889, 0.908652903, 0.918654097, 0.928655083, 0.93865625, 0.948657278, 0.958658417, 0.968659444, 0.978660611, 0.988661639, 0.998662778, 1.008663792, 1.018664944, 1.028665972, 1.038667153] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:02.537" endtime="20201112 10:17:02.540"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:02.524" endtime="20201112 10:17:02.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:02.548" endtime="20201112 10:17:02.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:02.556" endtime="20201112 10:17:02.578"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:02.552" endtime="20201112 10:17:02.580"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:02.543" endtime="20201112 10:17:02.581"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:59.834" endtime="20201112 10:17:02.582"></status>
</kw>
<msg timestamp="20201112 10:17:02.582" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:02.603" endtime="20201112 10:17:04.707"></status>
</kw>
<msg timestamp="20201112 10:17:04.707" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 38791843, 'wakeups': [38801887, 38811888, 38821888, 38831888, 38841888...</msg>
<status status="PASS" starttime="20201112 10:17:02.600" endtime="20201112 10:17:04.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:04.711" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 38791843, 'wakeups': [38801887, 38811888, 38821888, 38831888, 38841888...</msg>
<status status="PASS" starttime="20201112 10:17:04.708" endtime="20201112 10:17:04.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:04.712" endtime="20201112 10:17:04.714"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:02.593" endtime="20201112 10:17:04.715"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:02.587" endtime="20201112 10:17:04.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:04.719" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [38801887, 38811888, 38821888, 38831888, 38841888, 38851888, 38861888, 38871888, 38881888, 38891888, 38901888, 38911888, 38921888, 38931888, 38941888, 38951888, 38...</msg>
<status status="PASS" starttime="20201112 10:17:04.716" endtime="20201112 10:17:04.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:04.725" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:04.724" endtime="20201112 10:17:04.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:04.728" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:04.726" endtime="20201112 10:17:04.729"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:04.721" endtime="20201112 10:17:04.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:04.737" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 10:17:04.735" endtime="20201112 10:17:04.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:04.739" level="INFO">VALUE: 38791843</msg>
<status status="PASS" starttime="20201112 10:17:04.738" endtime="20201112 10:17:04.739"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:04.730" endtime="20201112 10:17:04.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:04.745" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:04.744" endtime="20201112 10:17:04.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:04.747" level="INFO">VALUE: [38801887, 38811888, 38821888, 38831888, 38841888, 38851888, 38861888, 38871888, 38881888, 38891888, 38901888, 38911888, 38921888, 38931888, 38941888, 38951888, 38961888, 38971888, 38981888, 38991888, 39001888, 39011888, 39021888, 39031888, 39041888, 39051888, 39061888, 39071888, 39081888, 39091888, 39101888, 39111888, 39121888, 39131888, 39141888, 39151888, 39161888, 39171888, 39181888, 39191888, 39201888, 39211888, 39221888, 39231888, 39241888, 39251888, 39261888, 39271888, 39281888, 39291888, 39301888, 39311888, 39321888, 39331888, 39341888, 39351888, 39361888, 39371888, 39381888, 39391888, 39401888, 39411888, 39421888, 39431888, 39441888, 39451888, 39461888, 39471888, 39481888, 39491888, 39501888, 39511888, 39521888, 39531888, 39541888, 39551888, 39561888, 39571888, 39581888, 39591888, 39601888, 39611888, 39621888, 39631888, 39641888, 39651888, 39661888, 39671888, 39681888, 39691888, 39701888, 39711888, 39721888, 39731888, 39741888, 39751888, 39761888, 39771888, 39781888, 39791888]</msg>
<status status="PASS" starttime="20201112 10:17:04.746" endtime="20201112 10:17:04.748"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:04.741" endtime="20201112 10:17:04.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:04.759" endtime="20201112 10:17:05.118"></status>
</kw>
<msg timestamp="20201112 10:17:05.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038256708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048303, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:17:04.756" endtime="20201112 10:17:05.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:05.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038256708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048303, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:17:05.127" endtime="20201112 10:17:05.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:05.147" endtime="20201112 10:17:05.151"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:04.752" endtime="20201112 10:17:05.153"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:04.749" endtime="20201112 10:17:05.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:05.213" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:17:05.156" endtime="20201112 10:17:05.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:05.226" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 10:17:05.223" endtime="20201112 10:17:05.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:05.231" level="INFO">VALUE: 0.038256708</msg>
<status status="PASS" starttime="20201112 10:17:05.228" endtime="20201112 10:17:05.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:05.216" endtime="20201112 10:17:05.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:05.245" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:05.242" endtime="20201112 10:17:05.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:05.250" level="INFO">VALUE: [0.048303, 0.058304236, 0.06830525, 0.078306417, 0.088307417, 0.098308583, 0.108309597, 0.11831075, 0.128311764, 0.138312931, 0.148313944, 0.158315111, 0.168316111, 0.178317333, 0.188318306, 0.198319486, 0.208320472, 0.218321611, 0.228322625, 0.238323806, 0.248324819, 0.258325958, 0.268327, 0.278328139, 0.288329153, 0.298330319, 0.308331347, 0.3183325, 0.3283335, 0.338334667, 0.348335708, 0.358336847, 0.368337861, 0.378339014, 0.388340042, 0.398341222, 0.408342194, 0.418343347, 0.428344389, 0.438345542, 0.448346542, 0.458347708, 0.468348736, 0.478349889, 0.488350889, 0.498352083, 0.508353069, 0.518354236, 0.528355236, 0.538356403, 0.548357417, 0.558358569, 0.568359583, 0.57836075, 0.588361764, 0.598362931, 0.608363958, 0.618365111, 0.628366125, 0.638367264, 0.648368292, 0.658369444, 0.668370458, 0.678371625, 0.688372653, 0.698373792, 0.708374806, 0.718376, 0.728376986, 0.738378139, 0.748379167, 0.758380319, 0.768381347, 0.778382486, 0.788383528, 0.798384681, 0.808385681, 0.818386861, 0.828387875, 0.838389014, 0.848390028, 0.858391194, 0.868392208, 0.878393361, 0.888394375, 0.898395556, 0.908396556, 0.918397722, 0.928398736, 0.938399889, 0.948400917, 0.958402069, 0.968403069, 0.978404236, 0.988405306, 0.998406403, 1.0084075, 1.018408583, 1.028409597, 1.038410778] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:05.247" endtime="20201112 10:17:05.251"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:05.235" endtime="20201112 10:17:05.252"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:05.259" endtime="20201112 10:17:05.262"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:05.268" endtime="20201112 10:17:05.290"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:05.263" endtime="20201112 10:17:05.292"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:05.254" endtime="20201112 10:17:05.294"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:02.584" endtime="20201112 10:17:05.294"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:57.086" endtime="20201112 10:17:05.295"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:57.085" endtime="20201112 10:17:05.295"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:17:05.301" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:05.323" endtime="20201112 10:17:07.453"></status>
</kw>
<msg timestamp="20201112 10:17:07.454" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41512032, 'wakeups': [41522088, 41532088, 41542088, 41552088, 41562088...</msg>
<status status="PASS" starttime="20201112 10:17:05.320" endtime="20201112 10:17:07.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:07.461" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41512032, 'wakeups': [41522088, 41532088, 41542088, 41552088, 41562088...</msg>
<status status="PASS" starttime="20201112 10:17:07.457" endtime="20201112 10:17:07.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:07.464" endtime="20201112 10:17:07.468"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:05.312" endtime="20201112 10:17:07.470"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:05.307" endtime="20201112 10:17:07.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:07.478" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [41522088, 41532088, 41542088, 41552088, 41562088, 41572088, 41582088, 41592088, 41602088, 41612088, 41622088, 41632088, 41642088, 41652088, 41662088, 41672088, 41...</msg>
<status status="PASS" starttime="20201112 10:17:07.473" endtime="20201112 10:17:07.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:07.489" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:07.486" endtime="20201112 10:17:07.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:07.494" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:07.492" endtime="20201112 10:17:07.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:07.479" endtime="20201112 10:17:07.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:07.507" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 10:17:07.505" endtime="20201112 10:17:07.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:07.512" level="INFO">VALUE: 41512032</msg>
<status status="PASS" starttime="20201112 10:17:07.510" endtime="20201112 10:17:07.513"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:07.498" endtime="20201112 10:17:07.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:07.525" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:07.523" endtime="20201112 10:17:07.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:07.530" level="INFO">VALUE: [41522088, 41532088, 41542088, 41552088, 41562088, 41572088, 41582088, 41592088, 41602088, 41612088, 41622088, 41632088, 41642088, 41652088, 41662088, 41672088, 41682088, 41692088, 41702088, 41712088, 41722088, 41732088, 41742088, 41752088, 41762088, 41772088, 41782088, 41792088, 41802088, 41812088, 41822088, 41832088, 41842088, 41852088, 41862088, 41872088, 41882088, 41892088, 41902088, 41912088, 41922088, 41932088, 41942088, 41952088, 41962088, 41972088, 41982088, 41992088, 42002088, 42012088, 42022088, 42032088, 42042088, 42052088, 42062088, 42072088, 42082088, 42092088, 42102088, 42112088, 42122088, 42132088, 42142088, 42152088, 42162088, 42172088, 42182088, 42192088, 42202088, 42212088, 42222088, 42232088, 42242088, 42252088, 42262088, 42272088, 42282088, 42292088, 42302088, 42312088, 42322088, 42332088, 42342088, 42352088, 42362088, 42372088, 42382088, 42392088, 42402088, 42412088, 42422088, 42432088, 42442088, 42452088, 42462088, 42472088, 42482088, 42492088, 42502088, 42512088]</msg>
<status status="PASS" starttime="20201112 10:17:07.528" endtime="20201112 10:17:07.532"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:07.516" endtime="20201112 10:17:07.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:07.554" endtime="20201112 10:17:07.902"></status>
</kw>
<msg timestamp="20201112 10:17:07.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046624833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056682681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:07.550" endtime="20201112 10:17:07.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:07.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046624833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056682681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:07.906" endtime="20201112 10:17:07.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:07.914" endtime="20201112 10:17:07.916"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:07.541" endtime="20201112 10:17:07.917"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:07.535" endtime="20201112 10:17:07.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:07.944" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:17:07.918" endtime="20201112 10:17:07.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:07.949" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 10:17:07.948" endtime="20201112 10:17:07.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:07.951" level="INFO">VALUE: 0.046624833</msg>
<status status="PASS" starttime="20201112 10:17:07.950" endtime="20201112 10:17:07.952"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:07.945" endtime="20201112 10:17:07.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:07.958" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:07.957" endtime="20201112 10:17:07.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:07.961" level="INFO">VALUE: [0.056682681, 0.066683639, 0.076684667, 0.086685819, 0.096686833, 0.106688028, 0.116689014, 0.126690167, 0.136691167, 0.146692333, 0.156693347, 0.1666945, 0.176695514, 0.186696681, 0.196697681, 0.206698833, 0.216699861, 0.226701056, 0.236702028, 0.246703181, 0.256704194, 0.266705361, 0.276706375, 0.286707528, 0.296708542, 0.306709694, 0.316710722, 0.326711917, 0.336712889, 0.346714056, 0.356715056, 0.366716208, 0.376717236, 0.386718389, 0.396719403, 0.406720583, 0.416721583, 0.426722736, 0.436723778, 0.446724944, 0.456725917, 0.466727111, 0.476728097, 0.486729264, 0.496730264, 0.506731444, 0.516732444, 0.526733611, 0.536734625, 0.546735764, 0.556736792, 0.566737944, 0.576738958, 0.586740139, 0.596741125, 0.606742306, 0.616743319, 0.626744458, 0.636745472, 0.646746653, 0.656747667, 0.666748806, 0.676749819, 0.686750986, 0.696752014, 0.706753153, 0.716754167, 0.726755319, 0.736756347, 0.746757556, 0.756758514, 0.766759667, 0.776760694, 0.786761847, 0.796762875, 0.806764028, 0.816765042, 0.82676625, 0.836767222, 0.846768375, 0.856769375, 0.866770542, 0.876771569, 0.886772722, 0.896773792, 0.906774875, 0.916775903, 0.926777069, 0.936778083, 0.946779222, 0.956780236, 0.966781403, 0.976782431, 0.986783569, 0.996784583, 1.006785764, 1.016786778, 1.026787917, 1.036788944, 1.046790083] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:07.959" endtime="20201112 10:17:07.962"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:07.953" endtime="20201112 10:17:07.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:07.966" endtime="20201112 10:17:07.967"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:07.971" endtime="20201112 10:17:07.990"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:07.968" endtime="20201112 10:17:07.991"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:07.964" endtime="20201112 10:17:07.992"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:05.303" endtime="20201112 10:17:07.992"></status>
</kw>
<msg timestamp="20201112 10:17:07.992" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:08.003" endtime="20201112 10:17:10.134"></status>
</kw>
<msg timestamp="20201112 10:17:10.136" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44190344, 'wakeups': [44200400, 44210400, 44220400, 44230400, 44240400...</msg>
<status status="PASS" starttime="20201112 10:17:08.002" endtime="20201112 10:17:10.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:10.143" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44190344, 'wakeups': [44200400, 44210400, 44220400, 44230400, 44240400...</msg>
<status status="PASS" starttime="20201112 10:17:10.138" endtime="20201112 10:17:10.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:10.146" endtime="20201112 10:17:10.150"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:07.997" endtime="20201112 10:17:10.152"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:07.995" endtime="20201112 10:17:10.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:10.160" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [44200400, 44210400, 44220400, 44230400, 44240400, 44250400, 44260400, 44270400, 44280400, 44290400, 44300400, 44310400, 44320400, 44330400, 44340400, 44350400, 44...</msg>
<status status="PASS" starttime="20201112 10:17:10.155" endtime="20201112 10:17:10.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:10.171" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:10.168" endtime="20201112 10:17:10.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:10.176" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:10.173" endtime="20201112 10:17:10.177"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:10.162" endtime="20201112 10:17:10.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:10.190" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 10:17:10.187" endtime="20201112 10:17:10.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:10.195" level="INFO">VALUE: 44190344</msg>
<status status="PASS" starttime="20201112 10:17:10.193" endtime="20201112 10:17:10.196"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:10.181" endtime="20201112 10:17:10.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:10.208" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:10.205" endtime="20201112 10:17:10.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:10.213" level="INFO">VALUE: [44200400, 44210400, 44220400, 44230400, 44240400, 44250400, 44260400, 44270400, 44280400, 44290400, 44300400, 44310400, 44320400, 44330400, 44340400, 44350400, 44360400, 44370400, 44380400, 44390400, 44400400, 44410400, 44420400, 44430400, 44440400, 44450400, 44460400, 44470400, 44480400, 44490400, 44500400, 44510400, 44520400, 44530400, 44540400, 44550400, 44560400, 44570400, 44580400, 44590400, 44600400, 44610400, 44620400, 44630400, 44640400, 44650400, 44660400, 44670400, 44680400, 44690400, 44700400, 44710400, 44720400, 44730400, 44740400, 44750400, 44760400, 44770400, 44780400, 44790400, 44800400, 44810400, 44820400, 44830400, 44840400, 44850400, 44860400, 44870400, 44880400, 44890400, 44900400, 44910400, 44920400, 44930400, 44940400, 44950400, 44960400, 44970400, 44980400, 44990400, 45000400, 45010400, 45020400, 45030400, 45040400, 45050400, 45060400, 45070400, 45080400, 45090400, 45100400, 45110400, 45120400, 45130400, 45140400, 45150400, 45160400, 45170400, 45180400, 45190400]</msg>
<status status="PASS" starttime="20201112 10:17:10.210" endtime="20201112 10:17:10.214"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:10.199" endtime="20201112 10:17:10.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:10.234" endtime="20201112 10:17:10.615"></status>
</kw>
<msg timestamp="20201112 10:17:10.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0230305, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033088417, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:17:10.230" endtime="20201112 10:17:10.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:10.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0230305, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033088417, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:17:10.624" endtime="20201112 10:17:10.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:10.642" endtime="20201112 10:17:10.646"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:10.223" endtime="20201112 10:17:10.648"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:10.217" endtime="20201112 10:17:10.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:10.709" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:17:10.651" endtime="20201112 10:17:10.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:10.721" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 10:17:10.718" endtime="20201112 10:17:10.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:10.725" level="INFO">VALUE: 0.0230305</msg>
<status status="PASS" starttime="20201112 10:17:10.723" endtime="20201112 10:17:10.726"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:10.711" endtime="20201112 10:17:10.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:10.741" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:10.738" endtime="20201112 10:17:10.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:10.746" level="INFO">VALUE: [0.033088417, 0.043089389, 0.053090389, 0.063091569, 0.073092583, 0.083093736, 0.09309475, 0.103095972, 0.113096931, 0.123098153, 0.133099111, 0.143100278, 0.153101319, 0.163102514, 0.173103486, 0.183104639, 0.193105653, 0.203106819, 0.213107833, 0.223109, 0.233110028, 0.243111181, 0.253112236, 0.263113375, 0.273114403, 0.283115556, 0.293116569, 0.303117736, 0.31311875, 0.323119917, 0.333120931, 0.343122097, 0.353123125, 0.363124278, 0.373125306, 0.383126458, 0.393127486, 0.403128653, 0.413129681, 0.423130847, 0.433131847, 0.443133014, 0.453134042, 0.463135208, 0.473136222, 0.483137375, 0.493138403, 0.503139583, 0.513140653, 0.52314175, 0.533142764, 0.543143958, 0.553144972, 0.563146111, 0.573147139, 0.583148292, 0.593149319, 0.603150514, 0.613151556, 0.623152681, 0.633153694, 0.643154917, 0.653155903, 0.663157028, 0.673158056, 0.683159208, 0.693160264, 0.703161403, 0.713162431, 0.723163583, 0.733164597, 0.743165764, 0.753166806, 0.763167944, 0.773168972, 0.783170125, 0.793171153, 0.803172333, 0.813173333, 0.8231745, 0.833175528, 0.843176694, 0.853177722, 0.863178875, 0.873179903, 0.883181042, 0.893182083, 0.90318325, 0.91318425, 0.923185417, 0.933186444, 0.943187625, 0.953188625, 0.963189778, 0.973190806, 0.983191958, 0.993192986, 1.003194167, 1.013195167, 1.023196333] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:10.743" endtime="20201112 10:17:10.747"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:10.729" endtime="20201112 10:17:10.748"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:10.755" endtime="20201112 10:17:10.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:10.764" endtime="20201112 10:17:10.786"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:10.759" endtime="20201112 10:17:10.788"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:10.750" endtime="20201112 10:17:10.790"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:07.993" endtime="20201112 10:17:10.790"></status>
</kw>
<msg timestamp="20201112 10:17:10.791" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:10.814" endtime="20201112 10:17:12.947"></status>
</kw>
<msg timestamp="20201112 10:17:12.948" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 47002158, 'wakeups': [47012214, 47022214, 47032214, 47042214, 47052214...</msg>
<status status="PASS" starttime="20201112 10:17:10.810" endtime="20201112 10:17:12.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:12.951" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 47002158, 'wakeups': [47012214, 47022214, 47032214, 47042214, 47052214...</msg>
<status status="PASS" starttime="20201112 10:17:12.949" endtime="20201112 10:17:12.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:12.953" endtime="20201112 10:17:12.955"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:10.802" endtime="20201112 10:17:12.955"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:10.796" endtime="20201112 10:17:12.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:12.959" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [47012214, 47022214, 47032214, 47042214, 47052214, 47062214, 47072214, 47082214, 47092214, 47102214, 47112214, 47122214, 47132214, 47142214, 47152214, 47162214, 47...</msg>
<status status="PASS" starttime="20201112 10:17:12.957" endtime="20201112 10:17:12.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:12.964" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:12.963" endtime="20201112 10:17:12.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:12.966" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:12.965" endtime="20201112 10:17:12.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:12.960" endtime="20201112 10:17:12.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:12.973" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 10:17:12.971" endtime="20201112 10:17:12.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:12.975" level="INFO">VALUE: 47002158</msg>
<status status="PASS" starttime="20201112 10:17:12.974" endtime="20201112 10:17:12.975"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:12.968" endtime="20201112 10:17:12.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:12.981" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:12.980" endtime="20201112 10:17:12.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:12.983" level="INFO">VALUE: [47012214, 47022214, 47032214, 47042214, 47052214, 47062214, 47072214, 47082214, 47092214, 47102214, 47112214, 47122214, 47132214, 47142214, 47152214, 47162214, 47172214, 47182214, 47192214, 47202214, 47212214, 47222214, 47232214, 47242214, 47252214, 47262214, 47272214, 47282214, 47292214, 47302214, 47312214, 47322214, 47332214, 47342214, 47352214, 47362214, 47372214, 47382214, 47392214, 47402214, 47412214, 47422214, 47432214, 47442214, 47452214, 47462214, 47472214, 47482214, 47492214, 47502214, 47512214, 47522214, 47532214, 47542214, 47552214, 47562214, 47572214, 47582214, 47592214, 47602214, 47612214, 47622214, 47632214, 47642214, 47652214, 47662214, 47672214, 47682214, 47692214, 47702214, 47712214, 47722214, 47732214, 47742214, 47752214, 47762214, 47772214, 47782214, 47792214, 47802214, 47812214, 47822214, 47832214, 47842214, 47852214, 47862214, 47872214, 47882214, 47892214, 47902214, 47912214, 47922214, 47932214, 47942214, 47952214, 47962214, 47972214, 47982214, 47992214, 48002214]</msg>
<status status="PASS" starttime="20201112 10:17:12.982" endtime="20201112 10:17:12.984"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:12.977" endtime="20201112 10:17:12.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:12.994" endtime="20201112 10:17:13.311"></status>
</kw>
<msg timestamp="20201112 10:17:13.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040813056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050871653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:12.992" endtime="20201112 10:17:13.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040813056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050871653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:13.320" endtime="20201112 10:17:13.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:13.339" endtime="20201112 10:17:13.343"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:12.988" endtime="20201112 10:17:13.345"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:12.985" endtime="20201112 10:17:13.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:13.407" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:17:13.348" endtime="20201112 10:17:13.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.418" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 10:17:13.416" endtime="20201112 10:17:13.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.423" level="INFO">VALUE: 0.040813056</msg>
<status status="PASS" starttime="20201112 10:17:13.421" endtime="20201112 10:17:13.424"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.409" endtime="20201112 10:17:13.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.438" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:13.435" endtime="20201112 10:17:13.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.443" level="INFO">VALUE: [0.050871653, 0.060872611, 0.070873597, 0.08087475, 0.090875792, 0.100876944, 0.110877958, 0.120879111, 0.130880125, 0.140881333, 0.150882306, 0.160883486, 0.1708845, 0.180885653, 0.190886681, 0.200887861, 0.210888861, 0.220890042, 0.230891042, 0.240892181, 0.250893222, 0.260894361, 0.270895389, 0.280896542, 0.290897569, 0.300898722, 0.31089975, 0.320900903, 0.330901931, 0.340903097, 0.350904125, 0.360905264, 0.370906319, 0.380907444, 0.390908472, 0.400909625, 0.410910653, 0.420911806, 0.430912833, 0.440914, 0.450915014, 0.460916167, 0.470917194, 0.480918375, 0.490919375, 0.500920542, 0.510921556, 0.520922778, 0.530923736, 0.540924917, 0.550925917, 0.560927083, 0.570928111, 0.580929264, 0.590930278, 0.600931444, 0.610932458, 0.620933625, 0.630934694, 0.640935806, 0.650936819, 0.660937986, 0.670939, 0.680940167, 0.690941194, 0.700942361, 0.710943361, 0.720944528, 0.730945542, 0.740946722, 0.750947722, 0.760948903, 0.770949931, 0.780951083, 0.790952111, 0.80095325, 0.810954278, 0.820955444, 0.830956444, 0.840957611, 0.850958653, 0.860959792, 0.870960819, 0.880961972, 0.890963, 0.900964167, 0.910965222, 0.920966333, 0.930967375, 0.940968514, 0.950969542, 0.960970694, 0.970971736, 0.980972875, 0.990973917, 1.000975056, 1.010976097, 1.020977236, 1.030978319, 1.040979417] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:13.440" endtime="20201112 10:17:13.443"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.427" endtime="20201112 10:17:13.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:13.452" endtime="20201112 10:17:13.455"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:13.461" endtime="20201112 10:17:13.483"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.457" endtime="20201112 10:17:13.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.447" endtime="20201112 10:17:13.487"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:10.793" endtime="20201112 10:17:13.487"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:05.298" endtime="20201112 10:17:13.488"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:05.296" endtime="20201112 10:17:13.488"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:17:13.494" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:13.518" endtime="20201112 10:17:15.648"></status>
</kw>
<msg timestamp="20201112 10:17:15.649" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 49707094, 'wakeups': [49717162, 49727162, 49737162, 49747162, 49757162...</msg>
<status status="PASS" starttime="20201112 10:17:13.515" endtime="20201112 10:17:15.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:15.657" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 49707094, 'wakeups': [49717162, 49727162, 49737162, 49747162, 49757162...</msg>
<status status="PASS" starttime="20201112 10:17:15.652" endtime="20201112 10:17:15.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:15.659" endtime="20201112 10:17:15.663"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.506" endtime="20201112 10:17:15.665"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.500" endtime="20201112 10:17:15.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:15.673" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [49717162, 49727162, 49737162, 49747162, 49757162, 49767162, 49777162, 49787162, 49797162, 49807162, 49817162, 49827162, 49837162, 49847162, 49857162, 49867162, 49...</msg>
<status status="PASS" starttime="20201112 10:17:15.668" endtime="20201112 10:17:15.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:15.691" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:15.688" endtime="20201112 10:17:15.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:15.695" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:15.693" endtime="20201112 10:17:15.696"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:15.681" endtime="20201112 10:17:15.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:15.709" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 10:17:15.706" endtime="20201112 10:17:15.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:15.714" level="INFO">VALUE: 49707094</msg>
<status status="PASS" starttime="20201112 10:17:15.711" endtime="20201112 10:17:15.714"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:15.699" endtime="20201112 10:17:15.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:15.727" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:15.724" endtime="20201112 10:17:15.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:15.732" level="INFO">VALUE: [49717162, 49727162, 49737162, 49747162, 49757162, 49767162, 49777162, 49787162, 49797162, 49807162, 49817162, 49827162, 49837162, 49847162, 49857162, 49867162, 49877162, 49887162, 49897162, 49907162, 49917162, 49927162, 49937162, 49947162, 49957162, 49967162, 49977162, 49987162, 49997162, 50007162, 50017162, 50027162, 50037162, 50047162, 50057162, 50067162, 50077162, 50087162, 50097162, 50107162, 50117162, 50127162, 50137162, 50147162, 50157162, 50167162, 50177162, 50187162, 50197162, 50207162, 50217162, 50227162, 50237162, 50247162, 50257162, 50267162, 50277162, 50287162, 50297162, 50307162, 50317162, 50327162, 50337162, 50347162, 50357162, 50367162, 50377162, 50387162, 50397162, 50407162, 50417162, 50427162, 50437162, 50447162, 50457162, 50467162, 50477162, 50487162, 50497162, 50507162, 50517162, 50527162, 50537162, 50547162, 50557162, 50567162, 50577162, 50587162, 50597162, 50607162, 50617162, 50627162, 50637162, 50647162, 50657162, 50667162, 50677162, 50687162, 50697162, 50707162]</msg>
<status status="PASS" starttime="20201112 10:17:15.729" endtime="20201112 10:17:15.733"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:15.717" endtime="20201112 10:17:15.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:15.752" endtime="20201112 10:17:16.121"></status>
</kw>
<msg timestamp="20201112 10:17:16.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048637569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.058708181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:15.749" endtime="20201112 10:17:16.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:16.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048637569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.058708181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:16.130" endtime="20201112 10:17:16.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:16.147" endtime="20201112 10:17:16.152"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:15.741" endtime="20201112 10:17:16.154"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:15.736" endtime="20201112 10:17:16.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:16.216" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:17:16.157" endtime="20201112 10:17:16.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:16.227" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 10:17:16.225" endtime="20201112 10:17:16.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:16.232" level="INFO">VALUE: 0.048637569</msg>
<status status="PASS" starttime="20201112 10:17:16.230" endtime="20201112 10:17:16.233"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:16.218" endtime="20201112 10:17:16.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:16.241" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:16.239" endtime="20201112 10:17:16.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:16.243" level="INFO">VALUE: [0.058708181, 0.068709292, 0.078710222, 0.088711375, 0.098712403, 0.108713556, 0.118714639, 0.128715764, 0.138716819, 0.148717903, 0.158718931, 0.168720097, 0.178721097, 0.188722264, 0.198723319, 0.208724444, 0.218725486, 0.228726681, 0.238727639, 0.248728792, 0.258729833, 0.268730986, 0.278731986, 0.288733167, 0.298734167, 0.308735347, 0.318736361, 0.3287375, 0.338738542, 0.348739681, 0.358740722, 0.368741931, 0.378742889, 0.388744042, 0.398745069, 0.408746236, 0.418747236, 0.428748417, 0.438749417, 0.448750625, 0.458751597, 0.46875275, 0.478753778, 0.488754931, 0.498756, 0.508757111, 0.518758153, 0.528759292, 0.538760306, 0.548761486, 0.5587625, 0.568763653, 0.578764667, 0.588765833, 0.598766903, 0.608768014, 0.618769028, 0.628770181, 0.638771208, 0.648772361, 0.658773389, 0.668774542, 0.678775556, 0.688776736, 0.69877775, 0.708778903, 0.718779917, 0.728781083, 0.738782097, 0.748783264, 0.758784306, 0.768785431, 0.7787865, 0.788787611, 0.798788639, 0.808789792, 0.818790819, 0.828791972, 0.838792986, 0.848794153, 0.858795181, 0.868796333, 0.878797361, 0.888798514, 0.898799542, 0.908800681, 0.918801722, 0.928802944, 0.938803903, 0.948805042, 0.958806069, 0.968807236, 0.97880825, 0.988809417, 0.998810431, 1.008811653, 1.018812597, 1.028813764, 1.038814778, 1.048815944] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:16.242" endtime="20201112 10:17:16.244"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:16.236" endtime="20201112 10:17:16.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:16.248" endtime="20201112 10:17:16.249"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:16.252" endtime="20201112 10:17:16.272"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:16.250" endtime="20201112 10:17:16.273"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:16.246" endtime="20201112 10:17:16.273"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.496" endtime="20201112 10:17:16.274"></status>
</kw>
<msg timestamp="20201112 10:17:16.274" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:16.284" endtime="20201112 10:17:18.412"></status>
</kw>
<msg timestamp="20201112 10:17:18.413" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 52470902, 'wakeups': [52480970, 52490970, 52500970, 52510970, 52520970...</msg>
<status status="PASS" starttime="20201112 10:17:16.282" endtime="20201112 10:17:18.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:18.420" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 52470902, 'wakeups': [52480970, 52490970, 52500970, 52510970, 52520970...</msg>
<status status="PASS" starttime="20201112 10:17:18.416" endtime="20201112 10:17:18.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:18.423" endtime="20201112 10:17:18.427"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:16.279" endtime="20201112 10:17:18.429"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:16.276" endtime="20201112 10:17:18.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:18.437" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [52480970, 52490970, 52500970, 52510970, 52520970, 52530970, 52540970, 52550970, 52560970, 52570970, 52580970, 52590970, 52600970, 52610970, 52620970, 52630970, 52...</msg>
<status status="PASS" starttime="20201112 10:17:18.432" endtime="20201112 10:17:18.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:18.447" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:18.445" endtime="20201112 10:17:18.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:18.452" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:18.450" endtime="20201112 10:17:18.453"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:18.439" endtime="20201112 10:17:18.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:18.466" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 10:17:18.463" endtime="20201112 10:17:18.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:18.470" level="INFO">VALUE: 52470902</msg>
<status status="PASS" starttime="20201112 10:17:18.468" endtime="20201112 10:17:18.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:18.456" endtime="20201112 10:17:18.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:18.483" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:18.481" endtime="20201112 10:17:18.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:18.489" level="INFO">VALUE: [52480970, 52490970, 52500970, 52510970, 52520970, 52530970, 52540970, 52550970, 52560970, 52570970, 52580970, 52590970, 52600970, 52610970, 52620970, 52630970, 52640970, 52650970, 52660970, 52670970, 52680970, 52690970, 52700970, 52710970, 52720970, 52730970, 52740970, 52750970, 52760970, 52770970, 52780970, 52790970, 52800970, 52810970, 52820970, 52830970, 52840970, 52850970, 52860970, 52870970, 52880970, 52890970, 52900970, 52910970, 52920970, 52930970, 52940970, 52950970, 52960970, 52970970, 52980970, 52990970, 53000970, 53010970, 53020970, 53030970, 53040970, 53050970, 53060970, 53070970, 53080970, 53090970, 53100970, 53110970, 53120970, 53130970, 53140970, 53150970, 53160970, 53170970, 53180970, 53190970, 53200970, 53210970, 53220970, 53230970, 53240970, 53250970, 53260970, 53270970, 53280970, 53290970, 53300970, 53310970, 53320970, 53330970, 53340970, 53350970, 53360970, 53370970, 53380970, 53390970, 53400970, 53410970, 53420970, 53430970, 53440970, 53450970, 53460970, 53470970]</msg>
<status status="PASS" starttime="20201112 10:17:18.486" endtime="20201112 10:17:18.490"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:18.474" endtime="20201112 10:17:18.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:18.512" endtime="20201112 10:17:18.879"></status>
</kw>
<msg timestamp="20201112 10:17:18.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022255167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032325111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:18.508" endtime="20201112 10:17:18.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:18.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022255167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032325111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:18.888" endtime="20201112 10:17:18.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:18.907" endtime="20201112 10:17:18.911"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:18.500" endtime="20201112 10:17:18.913"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:18.493" endtime="20201112 10:17:18.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:18.973" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:17:18.916" endtime="20201112 10:17:18.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:18.985" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 10:17:18.982" endtime="20201112 10:17:18.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:18.989" level="INFO">VALUE: 0.022255167</msg>
<status status="PASS" starttime="20201112 10:17:18.987" endtime="20201112 10:17:18.990"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:18.975" endtime="20201112 10:17:18.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:19.004" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:19.001" endtime="20201112 10:17:19.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:19.009" level="INFO">VALUE: [0.032325111, 0.042326208, 0.052327153, 0.062328319, 0.072329333, 0.082330486, 0.092331514, 0.102332667, 0.112333694, 0.122334833, 0.132335847, 0.142337028, 0.152338028, 0.162339208, 0.172340208, 0.182341361, 0.192342389, 0.202343542, 0.212344556, 0.222345722, 0.232346736, 0.242347889, 0.252348944, 0.262350069, 0.272351083, 0.28235225, 0.29235325, 0.302354417, 0.312355458, 0.322356583, 0.332357611, 0.342358778, 0.352359778, 0.362360944, 0.372361958, 0.382363125, 0.392364139, 0.402365292, 0.412366319, 0.422367486, 0.432368486, 0.442369681, 0.452370667, 0.462371819, 0.472372847, 0.482374, 0.492375083, 0.502376222, 0.512377194, 0.522378361, 0.532379375, 0.542380597, 0.552381569, 0.562382708, 0.572383722, 0.582384889, 0.592385917, 0.602387056, 0.612388139, 0.622389236, 0.63239025, 0.642391417, 0.652392431, 0.662393597, 0.672394625, 0.682395806, 0.692396792, 0.702397958, 0.712398958, 0.722400181, 0.732401139, 0.742402306, 0.752403361, 0.762404486, 0.772405486, 0.782406653, 0.792407667, 0.802408833, 0.812409847, 0.822411, 0.832412028, 0.842413181, 0.852414194, 0.862415361, 0.872416403, 0.882417542, 0.892418556, 0.902419708, 0.912420722, 0.922421889, 0.932422917, 0.942424069, 0.952425083, 0.96242625, 0.972427278, 0.982428431, 0.992429431, 1.002430667, 1.012431611, 1.022432778] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:19.006" endtime="20201112 10:17:19.010"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:18.993" endtime="20201112 10:17:19.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:19.018" endtime="20201112 10:17:19.021"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:19.027" endtime="20201112 10:17:19.049"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:19.023" endtime="20201112 10:17:19.052"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:19.013" endtime="20201112 10:17:19.053"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:16.274" endtime="20201112 10:17:19.054"></status>
</kw>
<msg timestamp="20201112 10:17:19.055" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:19.079" endtime="20201112 10:17:21.209"></status>
</kw>
<msg timestamp="20201112 10:17:21.210" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 55267462, 'wakeups': [55277530, 55287530, 55297530, 55307530, 55317530...</msg>
<status status="PASS" starttime="20201112 10:17:19.075" endtime="20201112 10:17:21.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:21.216" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 55267462, 'wakeups': [55277530, 55287530, 55297530, 55307530, 55317530...</msg>
<status status="PASS" starttime="20201112 10:17:21.213" endtime="20201112 10:17:21.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:21.217" endtime="20201112 10:17:21.219"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:19.066" endtime="20201112 10:17:21.220"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:19.060" endtime="20201112 10:17:21.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:21.224" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [55277530, 55287530, 55297530, 55307530, 55317530, 55327530, 55337530, 55347530, 55357530, 55367530, 55377530, 55387530, 55397530, 55407530, 55417530, 55427530, 55...</msg>
<status status="PASS" starttime="20201112 10:17:21.222" endtime="20201112 10:17:21.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:21.229" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:21.228" endtime="20201112 10:17:21.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:21.231" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:21.230" endtime="20201112 10:17:21.232"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:21.225" endtime="20201112 10:17:21.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:21.237" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 10:17:21.236" endtime="20201112 10:17:21.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:21.240" level="INFO">VALUE: 55267462</msg>
<status status="PASS" starttime="20201112 10:17:21.239" endtime="20201112 10:17:21.240"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:21.233" endtime="20201112 10:17:21.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:21.246" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:21.245" endtime="20201112 10:17:21.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:21.248" level="INFO">VALUE: [55277530, 55287530, 55297530, 55307530, 55317530, 55327530, 55337530, 55347530, 55357530, 55367530, 55377530, 55387530, 55397530, 55407530, 55417530, 55427530, 55437530, 55447530, 55457530, 55467530, 55477530, 55487530, 55497530, 55507530, 55517530, 55527530, 55537530, 55547530, 55557530, 55567530, 55577530, 55587530, 55597530, 55607530, 55617530, 55627530, 55637530, 55647530, 55657530, 55667530, 55677530, 55687530, 55697530, 55707530, 55717530, 55727530, 55737530, 55747530, 55757530, 55767530, 55777530, 55787530, 55797530, 55807530, 55817530, 55827530, 55837530, 55847530, 55857530, 55867530, 55877530, 55887530, 55897530, 55907530, 55917530, 55927530, 55937530, 55947530, 55957530, 55967530, 55977530, 55987530, 55997530, 56007530, 56017530, 56027530, 56037530, 56047530, 56057530, 56067530, 56077530, 56087530, 56097530, 56107530, 56117530, 56127530, 56137530, 56147530, 56157530, 56167530, 56177530, 56187530, 56197530, 56207530, 56217530, 56227530, 56237530, 56247530, 56257530, 56267530]</msg>
<status status="PASS" starttime="20201112 10:17:21.247" endtime="20201112 10:17:21.249"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:21.241" endtime="20201112 10:17:21.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:21.258" endtime="20201112 10:17:21.590"></status>
</kw>
<msg timestamp="20201112 10:17:21.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043124306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05319425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:17:21.256" endtime="20201112 10:17:21.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:21.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043124306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05319425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:17:21.600" endtime="20201112 10:17:21.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:21.618" endtime="20201112 10:17:21.623"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:21.252" endtime="20201112 10:17:21.624"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:21.250" endtime="20201112 10:17:21.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:21.685" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:17:21.627" endtime="20201112 10:17:21.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:21.697" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 10:17:21.695" endtime="20201112 10:17:21.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:21.702" level="INFO">VALUE: 0.043124306</msg>
<status status="PASS" starttime="20201112 10:17:21.699" endtime="20201112 10:17:21.703"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:21.687" endtime="20201112 10:17:21.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:21.716" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:21.714" endtime="20201112 10:17:21.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:21.721" level="INFO">VALUE: [0.05319425, 0.063195292, 0.073196319, 0.0831975, 0.093198458, 0.103199625, 0.113200653, 0.123201792, 0.133202861, 0.143203958, 0.153204986, 0.163206153, 0.173207181, 0.183208306, 0.193209319, 0.203210514, 0.2132115, 0.223212722, 0.233213667, 0.243214819, 0.253215847, 0.263217014, 0.273218028, 0.283219167, 0.293220208, 0.303221361, 0.313222361, 0.323223514, 0.333224556, 0.343225694, 0.353226708, 0.363227861, 0.373228889, 0.383230042, 0.393231056, 0.403232208, 0.413233236, 0.423234389, 0.433235403, 0.443236583, 0.453237597, 0.463238736, 0.473239764, 0.483240917, 0.493241931, 0.503243097, 0.513244125, 0.523245264, 0.533246278, 0.543247444, 0.553248444, 0.563249639, 0.573250625, 0.583251778, 0.593252819, 0.603253958, 0.613254972, 0.623256125, 0.633257153, 0.643258319, 0.653259319, 0.663260486, 0.6732615, 0.683262653, 0.693263667, 0.703264833, 0.713265847, 0.723267, 0.733268014, 0.743269194, 0.753270194, 0.763271347, 0.773272361, 0.783273528, 0.793274556, 0.803275694, 0.813276722, 0.823277889, 0.833278889, 0.843280056, 0.853281097, 0.863282222, 0.873283236, 0.883284403, 0.893285417, 0.903286569, 0.913287583, 0.923288764, 0.933289778, 0.943290931, 0.953291958, 0.963293097, 0.973294125, 0.983295278, 0.993296292, 1.003297444, 1.013298458, 1.023299625, 1.033300653, 1.043301792] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:21.719" endtime="20201112 10:17:21.722"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:21.705" endtime="20201112 10:17:21.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:21.731" endtime="20201112 10:17:21.733"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:21.739" endtime="20201112 10:17:21.762"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:21.735" endtime="20201112 10:17:21.763"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:21.726" endtime="20201112 10:17:21.765"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:19.056" endtime="20201112 10:17:21.766"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.491" endtime="20201112 10:17:21.767"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.489" endtime="20201112 10:17:21.767"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:17:21.773" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:21.795" endtime="20201112 10:17:23.925"></status>
</kw>
<msg timestamp="20201112 10:17:23.926" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 57983656, 'wakeups': [57993737, 58003738, 58013738, 58023738, 58033738...</msg>
<status status="PASS" starttime="20201112 10:17:21.792" endtime="20201112 10:17:23.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:23.934" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 57983656, 'wakeups': [57993737, 58003738, 58013738, 58023738, 58033738...</msg>
<status status="PASS" starttime="20201112 10:17:23.929" endtime="20201112 10:17:23.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:23.937" endtime="20201112 10:17:23.941"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:21.784" endtime="20201112 10:17:23.943"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:21.778" endtime="20201112 10:17:23.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:23.951" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [57993737, 58003738, 58013738, 58023738, 58033738, 58043738, 58053738, 58063738, 58073738, 58083738, 58093738, 58103738, 58113738, 58123738, 58133738, 58143738, 58...</msg>
<status status="PASS" starttime="20201112 10:17:23.946" endtime="20201112 10:17:23.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:23.962" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:23.959" endtime="20201112 10:17:23.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:23.966" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:23.964" endtime="20201112 10:17:23.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:23.953" endtime="20201112 10:17:23.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:23.980" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 10:17:23.977" endtime="20201112 10:17:23.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:23.985" level="INFO">VALUE: 57983656</msg>
<status status="PASS" starttime="20201112 10:17:23.982" endtime="20201112 10:17:23.985"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:23.970" endtime="20201112 10:17:23.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:23.997" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:23.995" endtime="20201112 10:17:23.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:24.005" level="INFO">VALUE: [57993737, 58003738, 58013738, 58023738, 58033738, 58043738, 58053738, 58063738, 58073738, 58083738, 58093738, 58103738, 58113738, 58123738, 58133738, 58143738, 58153738, 58163738, 58173738, 58183738, 58193738, 58203738, 58213738, 58223738, 58233738, 58243738, 58253738, 58263738, 58273738, 58283738, 58293738, 58303738, 58313738, 58323738, 58333738, 58343738, 58353738, 58363738, 58373738, 58383738, 58393738, 58403738, 58413738, 58423738, 58433738, 58443738, 58453738, 58463738, 58473738, 58483738, 58493738, 58503738, 58513738, 58523738, 58533738, 58543738, 58553738, 58563738, 58573738, 58583738, 58593738, 58603738, 58613738, 58623738, 58633738, 58643738, 58653738, 58663738, 58673738, 58683738, 58693738, 58703738, 58713738, 58723738, 58733738, 58743738, 58753738, 58763738, 58773738, 58783738, 58793738, 58803738, 58813738, 58823738, 58833738, 58843738, 58853738, 58863738, 58873738, 58883738, 58893738, 58903738, 58913738, 58923738, 58933738, 58943738, 58953738, 58963738, 58973738, 58983738]</msg>
<status status="PASS" starttime="20201112 10:17:24.000" endtime="20201112 10:17:24.006"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:23.988" endtime="20201112 10:17:24.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:24.026" endtime="20201112 10:17:24.397"></status>
</kw>
<msg timestamp="20201112 10:17:24.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047069222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057152208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:24.022" endtime="20201112 10:17:24.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:24.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047069222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057152208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:24.406" endtime="20201112 10:17:24.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:24.424" endtime="20201112 10:17:24.428"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:24.014" endtime="20201112 10:17:24.429"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:24.009" endtime="20201112 10:17:24.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:24.455" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:17:24.431" endtime="20201112 10:17:24.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:24.461" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 10:17:24.460" endtime="20201112 10:17:24.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:24.463" level="INFO">VALUE: 0.047069222</msg>
<status status="PASS" starttime="20201112 10:17:24.462" endtime="20201112 10:17:24.464"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:24.456" endtime="20201112 10:17:24.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:24.470" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:24.469" endtime="20201112 10:17:24.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:24.473" level="INFO">VALUE: [0.057152208, 0.067153903, 0.077154944, 0.087156069, 0.097157083, 0.107158236, 0.11715925, 0.127160444, 0.137161431, 0.147162583, 0.157163611, 0.167164764, 0.177165764, 0.187166958, 0.197167958, 0.207169097, 0.217170139, 0.227171264, 0.237172306, 0.247173514, 0.257174458, 0.267175625, 0.277176681, 0.287177806, 0.297178806, 0.307179958, 0.317181, 0.327182125, 0.337183194, 0.347184306, 0.357185333, 0.367186486, 0.377187514, 0.387188653, 0.397189681, 0.407190833, 0.417191833, 0.427193, 0.437194014, 0.447195167, 0.457196194, 0.467197347, 0.477198361, 0.487199528, 0.497200528, 0.507201694, 0.517202722, 0.527203875, 0.537204889, 0.547206042, 0.557207056, 0.567208292, 0.577209222, 0.587210389, 0.597211403, 0.607212569, 0.617213569, 0.627214736, 0.63721575, 0.647216903, 0.657217917, 0.667219069, 0.677220097, 0.687221278, 0.697222264, 0.707223417, 0.717224444, 0.727225597, 0.737226611, 0.747227778, 0.757228875, 0.767229986, 0.777230958, 0.787232111, 0.797233139, 0.807234306, 0.817235319, 0.827236472, 0.837237472, 0.847238653, 0.857239653, 0.867240806, 0.877241819, 0.887242986, 0.897244028, 0.907245153, 0.917246194, 0.927247333, 0.937248361, 0.947249556, 0.957250514, 0.967251667, 0.977252694, 0.987253917, 0.997254861, 1.007256014, 1.017257042, 1.027258194, 1.037259222, 1.047260389] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:24.471" endtime="20201112 10:17:24.473"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:24.465" endtime="20201112 10:17:24.474"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:24.477" endtime="20201112 10:17:24.478"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:24.481" endtime="20201112 10:17:24.502"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:24.479" endtime="20201112 10:17:24.503"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:24.475" endtime="20201112 10:17:24.503"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:21.775" endtime="20201112 10:17:24.504"></status>
</kw>
<msg timestamp="20201112 10:17:24.504" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:24.514" endtime="20201112 10:17:26.642"></status>
</kw>
<msg timestamp="20201112 10:17:26.643" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 60700708, 'wakeups': [60710789, 60720790, 60730790, 60740790, 60750790...</msg>
<status status="PASS" starttime="20201112 10:17:24.512" endtime="20201112 10:17:26.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.651" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 60700708, 'wakeups': [60710789, 60720790, 60730790, 60740790, 60750790...</msg>
<status status="PASS" starttime="20201112 10:17:26.646" endtime="20201112 10:17:26.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:26.653" endtime="20201112 10:17:26.657"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:24.509" endtime="20201112 10:17:26.659"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:24.506" endtime="20201112 10:17:26.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:26.667" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [60710789, 60720790, 60730790, 60740790, 60750790, 60760790, 60770790, 60780790, 60790790, 60800790, 60810790, 60820790, 60830790, 60840790, 60850790, 60860790, 60...</msg>
<status status="PASS" starttime="20201112 10:17:26.662" endtime="20201112 10:17:26.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.678" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:26.676" endtime="20201112 10:17:26.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.683" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:26.680" endtime="20201112 10:17:26.684"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:26.669" endtime="20201112 10:17:26.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.703" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 10:17:26.700" endtime="20201112 10:17:26.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.707" level="INFO">VALUE: 60700708</msg>
<status status="PASS" starttime="20201112 10:17:26.705" endtime="20201112 10:17:26.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:26.693" endtime="20201112 10:17:26.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.721" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:26.718" endtime="20201112 10:17:26.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.726" level="INFO">VALUE: [60710789, 60720790, 60730790, 60740790, 60750790, 60760790, 60770790, 60780790, 60790790, 60800790, 60810790, 60820790, 60830790, 60840790, 60850790, 60860790, 60870790, 60880790, 60890790, 60900790, 60910790, 60920790, 60930790, 60940790, 60950790, 60960790, 60970790, 60980790, 60990790, 61000790, 61010790, 61020790, 61030790, 61040790, 61050790, 61060790, 61070790, 61080790, 61090790, 61100790, 61110790, 61120790, 61130790, 61140790, 61150790, 61160790, 61170790, 61180790, 61190790, 61200790, 61210790, 61220790, 61230790, 61240790, 61250790, 61260790, 61270790, 61280790, 61290790, 61300790, 61310790, 61320790, 61330790, 61340790, 61350790, 61360790, 61370790, 61380790, 61390790, 61400790, 61410790, 61420790, 61430790, 61440790, 61450790, 61460790, 61470790, 61480790, 61490790, 61500790, 61510790, 61520790, 61530790, 61540790, 61550790, 61560790, 61570790, 61580790, 61590790, 61600790, 61610790, 61620790, 61630790, 61640790, 61650790, 61660790, 61670790, 61680790, 61690790, 61700790]</msg>
<status status="PASS" starttime="20201112 10:17:26.723" endtime="20201112 10:17:26.727"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:26.711" endtime="20201112 10:17:26.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:26.746" endtime="20201112 10:17:27.114"></status>
</kw>
<msg timestamp="20201112 10:17:27.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022176833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032259806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:26.743" endtime="20201112 10:17:27.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:27.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022176833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032259806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:27.123" endtime="20201112 10:17:27.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:27.141" endtime="20201112 10:17:27.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:26.735" endtime="20201112 10:17:27.149"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:26.730" endtime="20201112 10:17:27.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:27.208" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:17:27.152" endtime="20201112 10:17:27.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:27.220" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 10:17:27.217" endtime="20201112 10:17:27.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:27.224" level="INFO">VALUE: 0.022176833</msg>
<status status="PASS" starttime="20201112 10:17:27.222" endtime="20201112 10:17:27.225"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:27.210" endtime="20201112 10:17:27.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:27.239" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:27.236" endtime="20201112 10:17:27.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:27.244" level="INFO">VALUE: [0.032259806, 0.042261583, 0.052262556, 0.062263708, 0.072264736, 0.082265889, 0.092266903, 0.102268111, 0.112269083, 0.122270264, 0.132271264, 0.142272431, 0.152273444, 0.162274625, 0.172275625, 0.182276806, 0.192277819, 0.202278972, 0.212280014, 0.222281167, 0.232282167, 0.242283333, 0.252284347, 0.262285542, 0.272286528, 0.282287694, 0.292288722, 0.302289889, 0.312290903, 0.322292056, 0.332293083, 0.342294236, 0.352295347, 0.362296417, 0.372297458, 0.382298653, 0.392299625, 0.402300778, 0.412301819, 0.422302972, 0.432304014, 0.442305167, 0.452306181, 0.462307333, 0.472308347, 0.482309569, 0.492310528, 0.502311694, 0.512312708, 0.522313875, 0.532314931, 0.542316069, 0.552317097, 0.56231825, 0.572319264, 0.582320417, 0.592321444, 0.602322625, 0.612323639, 0.622324792, 0.632325833, 0.642326972, 0.652328, 0.662329167, 0.672330167, 0.682331333, 0.692332347, 0.702333514, 0.712334569, 0.722335764, 0.73233675, 0.742337875, 0.752338903, 0.762340056, 0.772341083, 0.78234225, 0.792343278, 0.802344444, 0.812345458, 0.822346611, 0.832347681, 0.842348792, 0.852349806, 0.862350986, 0.872351986, 0.882353153, 0.892354194, 0.902355333, 0.912356361, 0.922357528, 0.932358542, 0.942359736, 0.952360764, 0.962361903, 0.972362917, 0.982364069, 0.992365125, 1.00236625, 1.012367264, 1.022368431] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:27.241" endtime="20201112 10:17:27.245"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:27.228" endtime="20201112 10:17:27.247"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:27.254" endtime="20201112 10:17:27.257"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:27.263" endtime="20201112 10:17:27.285"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:27.258" endtime="20201112 10:17:27.287"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:27.249" endtime="20201112 10:17:27.288"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:24.504" endtime="20201112 10:17:27.289"></status>
</kw>
<msg timestamp="20201112 10:17:27.290" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:27.312" endtime="20201112 10:17:29.414"></status>
</kw>
<msg timestamp="20201112 10:17:29.415" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 63500154, 'wakeups': [63510235, 63520236, 63530236, 63540236, 63550236...</msg>
<status status="PASS" starttime="20201112 10:17:27.308" endtime="20201112 10:17:29.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:29.418" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 63500154, 'wakeups': [63510235, 63520236, 63530236, 63540236, 63550236...</msg>
<status status="PASS" starttime="20201112 10:17:29.416" endtime="20201112 10:17:29.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:29.419" endtime="20201112 10:17:29.422"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:27.301" endtime="20201112 10:17:29.423"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:27.295" endtime="20201112 10:17:29.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:29.427" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [63510235, 63520236, 63530236, 63540236, 63550236, 63560236, 63570236, 63580236, 63590236, 63600236, 63610236, 63620236, 63630236, 63640236, 63650236, 63660236, 63...</msg>
<status status="PASS" starttime="20201112 10:17:29.425" endtime="20201112 10:17:29.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:29.432" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:29.431" endtime="20201112 10:17:29.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:29.434" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:29.433" endtime="20201112 10:17:29.435"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:29.428" endtime="20201112 10:17:29.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:29.441" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 10:17:29.439" endtime="20201112 10:17:29.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:29.443" level="INFO">VALUE: 63500154</msg>
<status status="PASS" starttime="20201112 10:17:29.442" endtime="20201112 10:17:29.443"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:29.436" endtime="20201112 10:17:29.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:29.449" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:29.448" endtime="20201112 10:17:29.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:29.451" level="INFO">VALUE: [63510235, 63520236, 63530236, 63540236, 63550236, 63560236, 63570236, 63580236, 63590236, 63600236, 63610236, 63620236, 63630236, 63640236, 63650236, 63660236, 63670236, 63680236, 63690236, 63700236, 63710236, 63720236, 63730236, 63740236, 63750236, 63760236, 63770236, 63780236, 63790236, 63800236, 63810236, 63820236, 63830236, 63840236, 63850236, 63860236, 63870236, 63880236, 63890236, 63900236, 63910236, 63920236, 63930236, 63940236, 63950236, 63960236, 63970236, 63980236, 63990236, 64000236, 64010236, 64020236, 64030236, 64040236, 64050236, 64060236, 64070236, 64080236, 64090236, 64100236, 64110236, 64120236, 64130236, 64140236, 64150236, 64160236, 64170236, 64180236, 64190236, 64200236, 64210236, 64220236, 64230236, 64240236, 64250236, 64260236, 64270236, 64280236, 64290236, 64300236, 64310236, 64320236, 64330236, 64340236, 64350236, 64360236, 64370236, 64380236, 64390236, 64400236, 64410236, 64420236, 64430236, 64440236, 64450236, 64460236, 64470236, 64480236, 64490236, 64500236]</msg>
<status status="PASS" starttime="20201112 10:17:29.450" endtime="20201112 10:17:29.452"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:29.445" endtime="20201112 10:17:29.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:29.461" endtime="20201112 10:17:29.802"></status>
</kw>
<msg timestamp="20201112 10:17:29.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040347819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050430778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:29.459" endtime="20201112 10:17:29.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:29.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040347819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050430778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:29.811" endtime="20201112 10:17:29.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:29.829" endtime="20201112 10:17:29.833"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:29.456" endtime="20201112 10:17:29.835"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:29.453" endtime="20201112 10:17:29.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:29.896" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:17:29.838" endtime="20201112 10:17:29.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:29.907" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 10:17:29.905" endtime="20201112 10:17:29.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:29.912" level="INFO">VALUE: 0.040347819</msg>
<status status="PASS" starttime="20201112 10:17:29.910" endtime="20201112 10:17:29.913"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:29.898" endtime="20201112 10:17:29.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:29.926" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:29.924" endtime="20201112 10:17:29.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:29.931" level="INFO">VALUE: [0.050430778, 0.060432528, 0.070433556, 0.08043475, 0.090435764, 0.100436875, 0.110437889, 0.120439056, 0.130440111, 0.14044125, 0.15044225, 0.160443417, 0.170444458, 0.180445611, 0.190446597, 0.200447764, 0.210448792, 0.220449944, 0.230451028, 0.240452125, 0.250453139, 0.260454306, 0.270455319, 0.280456472, 0.2904575, 0.300458653, 0.310459694, 0.320460833, 0.330461861, 0.340463014, 0.350464042, 0.360465194, 0.370466208, 0.380467389, 0.390468389, 0.400469556, 0.410470569, 0.420471736, 0.43047275, 0.440473931, 0.450474986, 0.460476111, 0.470477111, 0.480478278, 0.490479292, 0.500480472, 0.510481486, 0.520482625, 0.530483667, 0.540484847, 0.550485833, 0.560487028, 0.570488014, 0.580489167, 0.590490194, 0.600491375, 0.610492375, 0.620493528, 0.630494556, 0.640495722, 0.650496722, 0.660497903, 0.670498986, 0.680500069, 0.690501097, 0.70050225, 0.710503264, 0.720504431, 0.7305055, 0.740506611, 0.750507653, 0.760508861, 0.770509806, 0.780511, 0.790511986, 0.800513153, 0.810514167, 0.820515403, 0.830516347, 0.840517514, 0.850518542, 0.860519681, 0.870520722, 0.880521903, 0.890522889, 0.900524056, 0.910525069, 0.920526236, 0.930527236, 0.940528417, 0.950529417, 0.960530597, 0.970531597, 0.980532764, 0.990533778, 1.000534972, 1.010535958, 1.020537125, 1.030538153, 1.040539306] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:29.929" endtime="20201112 10:17:29.932"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:29.916" endtime="20201112 10:17:29.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:29.941" endtime="20201112 10:17:29.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:29.950" endtime="20201112 10:17:29.972"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:29.945" endtime="20201112 10:17:29.974"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:29.936" endtime="20201112 10:17:29.975"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:27.291" endtime="20201112 10:17:29.976"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:21.770" endtime="20201112 10:17:29.977"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:21.768" endtime="20201112 10:17:29.977"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:17:29.983" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:30.007" endtime="20201112 10:17:32.136"></status>
</kw>
<msg timestamp="20201112 10:17:32.138" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66195089, 'wakeups': [66205187, 66215188, 66225189, 66235189, 66245189...</msg>
<status status="PASS" starttime="20201112 10:17:30.002" endtime="20201112 10:17:32.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:32.145" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66195089, 'wakeups': [66205187, 66215188, 66225189, 66235189, 66245189...</msg>
<status status="PASS" starttime="20201112 10:17:32.140" endtime="20201112 10:17:32.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:32.148" endtime="20201112 10:17:32.152"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:29.994" endtime="20201112 10:17:32.153"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:29.989" endtime="20201112 10:17:32.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:32.161" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [66205187, 66215188, 66225189, 66235189, 66245189, 66255189, 66265189, 66275189, 66285189, 66295189, 66305189, 66315189, 66325189, 66335189, 66345189, 66355189, 66...</msg>
<status status="PASS" starttime="20201112 10:17:32.157" endtime="20201112 10:17:32.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:32.172" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:32.170" endtime="20201112 10:17:32.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:32.177" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:32.175" endtime="20201112 10:17:32.178"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:32.163" endtime="20201112 10:17:32.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:32.191" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 10:17:32.188" endtime="20201112 10:17:32.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:32.195" level="INFO">VALUE: 66195089</msg>
<status status="PASS" starttime="20201112 10:17:32.193" endtime="20201112 10:17:32.196"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:32.181" endtime="20201112 10:17:32.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:32.208" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:32.206" endtime="20201112 10:17:32.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:32.217" level="INFO">VALUE: [66205187, 66215188, 66225189, 66235189, 66245189, 66255189, 66265189, 66275189, 66285189, 66295189, 66305189, 66315189, 66325189, 66335189, 66345189, 66355189, 66365189, 66375189, 66385189, 66395189, 66405189, 66415189, 66425189, 66435189, 66445189, 66455189, 66465189, 66475189, 66485189, 66495189, 66505189, 66515189, 66525189, 66535189, 66545189, 66555189, 66565189, 66575189, 66585189, 66595189, 66605189, 66615189, 66625189, 66635189, 66645189, 66655189, 66665189, 66675189, 66685189, 66695189, 66705189, 66715189, 66725189, 66735189, 66745189, 66755189, 66765189, 66775189, 66785189, 66795189, 66805189, 66815189, 66825189, 66835189, 66845189, 66855189, 66865189, 66875189, 66885189, 66895189, 66905189, 66915189, 66925189, 66935189, 66945189, 66955189, 66965189, 66975189, 66985189, 66995189, 67005189, 67015189, 67025189, 67035189, 67045189, 67055189, 67065189, 67075189, 67085189, 67095189, 67105189, 67115189, 67125189, 67135189, 67145189, 67155189, 67165189, 67175189, 67185189, 67195189]</msg>
<status status="PASS" starttime="20201112 10:17:32.211" endtime="20201112 10:17:32.218"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:32.199" endtime="20201112 10:17:32.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:32.237" endtime="20201112 10:17:32.605"></status>
</kw>
<msg timestamp="20201112 10:17:32.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048363361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.058462847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:32.233" endtime="20201112 10:17:32.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:32.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048363361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.058462847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:32.614" endtime="20201112 10:17:32.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:32.626" endtime="20201112 10:17:32.629"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:32.226" endtime="20201112 10:17:32.630"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:32.221" endtime="20201112 10:17:32.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:32.655" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:17:32.631" endtime="20201112 10:17:32.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:32.660" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 10:17:32.659" endtime="20201112 10:17:32.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:32.663" level="INFO">VALUE: 0.048363361</msg>
<status status="PASS" starttime="20201112 10:17:32.662" endtime="20201112 10:17:32.663"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:32.656" endtime="20201112 10:17:32.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:32.669" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:32.668" endtime="20201112 10:17:32.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:32.672" level="INFO">VALUE: [0.058462847, 0.068465514, 0.078467528, 0.088468681, 0.098469722, 0.108470861, 0.118471889, 0.128473056, 0.138474056, 0.148475264, 0.158476278, 0.168477389, 0.178478417, 0.188479583, 0.198480597, 0.208481736, 0.218482778, 0.228483917, 0.238484931, 0.248486111, 0.258487111, 0.268488278, 0.278489292, 0.288490444, 0.298491472, 0.308492625, 0.318493653, 0.328494806, 0.338495833, 0.348497056, 0.358498, 0.368499167, 0.378500181, 0.388501361, 0.398502375, 0.408503556, 0.418504542, 0.428505722, 0.438506736, 0.448507931, 0.458508889, 0.468510056, 0.478511111, 0.488512236, 0.49851325, 0.508514431, 0.518515431, 0.528516597, 0.538517625, 0.548518764, 0.558519806, 0.568520972, 0.578521958, 0.588523125, 0.598524139, 0.608525306, 0.618526333, 0.6285275, 0.6385285, 0.648529653, 0.658530681, 0.668531847, 0.678532861, 0.688534014, 0.698535042, 0.708536194, 0.718537208, 0.728538375, 0.738539444, 0.748540556, 0.758541639, 0.768542722, 0.778543792, 0.788544917, 0.798545931, 0.808547083, 0.818548097, 0.828549264, 0.838550278, 0.848551458, 0.858552458, 0.868553681, 0.878554653, 0.888555806, 0.898556819, 0.908558, 0.918559014, 0.928560167, 0.938561194, 0.948562333, 0.958563361, 0.968564528, 0.978565528, 0.988566708, 0.998567708, 1.008568875, 1.018569903, 1.028571042, 1.038572097, 1.04857325] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:32.670" endtime="20201112 10:17:32.672"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:32.664" endtime="20201112 10:17:32.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:32.676" endtime="20201112 10:17:32.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:32.680" endtime="20201112 10:17:32.700"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:32.678" endtime="20201112 10:17:32.701"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:32.674" endtime="20201112 10:17:32.702"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:29.985" endtime="20201112 10:17:32.702"></status>
</kw>
<msg timestamp="20201112 10:17:32.703" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:32.714" endtime="20201112 10:17:34.841"></status>
</kw>
<msg timestamp="20201112 10:17:34.843" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 68900268, 'wakeups': [68910366, 68920367, 68930368, 68940368, 68950368...</msg>
<status status="PASS" starttime="20201112 10:17:32.712" endtime="20201112 10:17:34.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:34.850" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 68900268, 'wakeups': [68910366, 68920367, 68930368, 68940368, 68950368...</msg>
<status status="PASS" starttime="20201112 10:17:34.845" endtime="20201112 10:17:34.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:34.853" endtime="20201112 10:17:34.857"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:32.708" endtime="20201112 10:17:34.859"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:32.705" endtime="20201112 10:17:34.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:34.867" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [68910366, 68920367, 68930368, 68940368, 68950368, 68960368, 68970368, 68980368, 68990368, 69000368, 69010368, 69020368, 69030368, 69040368, 69050368, 69060368, 69...</msg>
<status status="PASS" starttime="20201112 10:17:34.862" endtime="20201112 10:17:34.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:34.878" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:34.876" endtime="20201112 10:17:34.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:34.883" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:34.880" endtime="20201112 10:17:34.884"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:34.869" endtime="20201112 10:17:34.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:34.896" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 10:17:34.894" endtime="20201112 10:17:34.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:34.901" level="INFO">VALUE: 68900268</msg>
<status status="PASS" starttime="20201112 10:17:34.899" endtime="20201112 10:17:34.902"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:34.886" endtime="20201112 10:17:34.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:34.914" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:34.912" endtime="20201112 10:17:34.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:34.919" level="INFO">VALUE: [68910366, 68920367, 68930368, 68940368, 68950368, 68960368, 68970368, 68980368, 68990368, 69000368, 69010368, 69020368, 69030368, 69040368, 69050368, 69060368, 69070368, 69080368, 69090368, 69100368, 69110368, 69120368, 69130368, 69140368, 69150368, 69160368, 69170368, 69180368, 69190368, 69200368, 69210368, 69220368, 69230368, 69240368, 69250368, 69260368, 69270368, 69280368, 69290368, 69300368, 69310368, 69320368, 69330368, 69340368, 69350368, 69360368, 69370368, 69380368, 69390368, 69400368, 69410368, 69420368, 69430368, 69440368, 69450368, 69460368, 69470368, 69480368, 69490368, 69500368, 69510368, 69520368, 69530368, 69540368, 69550368, 69560368, 69570368, 69580368, 69590368, 69600368, 69610368, 69620368, 69630368, 69640368, 69650368, 69660368, 69670368, 69680368, 69690368, 69700368, 69710368, 69720368, 69730368, 69740368, 69750368, 69760368, 69770368, 69780368, 69790368, 69800368, 69810368, 69820368, 69830368, 69840368, 69850368, 69860368, 69870368, 69880368, 69890368, 69900368]</msg>
<status status="PASS" starttime="20201112 10:17:34.917" endtime="20201112 10:17:34.920"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:34.905" endtime="20201112 10:17:34.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:34.939" endtime="20201112 10:17:35.310"></status>
</kw>
<msg timestamp="20201112 10:17:35.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023437986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033537819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:34.936" endtime="20201112 10:17:35.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:35.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023437986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033537819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:35.319" endtime="20201112 10:17:35.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:35.337" endtime="20201112 10:17:35.342"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:34.928" endtime="20201112 10:17:35.344"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:34.923" endtime="20201112 10:17:35.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:35.404" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:17:35.348" endtime="20201112 10:17:35.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:35.416" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 10:17:35.413" endtime="20201112 10:17:35.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:35.420" level="INFO">VALUE: 0.023437986</msg>
<status status="PASS" starttime="20201112 10:17:35.418" endtime="20201112 10:17:35.421"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:35.406" endtime="20201112 10:17:35.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:35.434" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:35.432" endtime="20201112 10:17:35.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:35.440" level="INFO">VALUE: [0.033537819, 0.043540472, 0.053542514, 0.063543653, 0.073544667, 0.083545833, 0.093546833, 0.103548014, 0.113549056, 0.123550167, 0.133551181, 0.143552361, 0.153553361, 0.163554514, 0.173555528, 0.183556764, 0.193557708, 0.203558889, 0.213559875, 0.223561042, 0.233562056, 0.243563208, 0.253564222, 0.263565389, 0.273566403, 0.283567556, 0.293568569, 0.303569736, 0.31357075, 0.323571903, 0.333572944, 0.343574083, 0.353575097, 0.363576264, 0.373577292, 0.383578431, 0.393579458, 0.403580653, 0.413581639, 0.423582778, 0.433583819, 0.443584958, 0.453585972, 0.463587139, 0.473588167, 0.483589333, 0.493590333, 0.5035915, 0.513592514, 0.523593681, 0.533594681, 0.543595833, 0.553596847, 0.563598042, 0.573599028, 0.583600194, 0.593601208, 0.603602403, 0.613603389, 0.623604556, 0.633605625, 0.643606708, 0.653607778, 0.663608889, 0.673609903, 0.683611083, 0.693612097, 0.70361325, 0.71361425, 0.723615417, 0.733616431, 0.743617583, 0.753618611, 0.763619764, 0.773620778, 0.783621986, 0.793622958, 0.803624111, 0.813625139, 0.823626292, 0.833627319, 0.843628472, 0.853629486, 0.863630639, 0.873631681, 0.883632833, 0.893633833, 0.903635, 0.913636014, 0.923637181, 0.933638194, 0.943639361, 0.953640361, 0.963641528, 0.973642556, 0.983643694, 0.993644708, 1.003645875, 1.013646889, 1.023648056] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:35.438" endtime="20201112 10:17:35.441"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:35.424" endtime="20201112 10:17:35.443"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:35.450" endtime="20201112 10:17:35.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:35.459" endtime="20201112 10:17:35.481"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:35.454" endtime="20201112 10:17:35.483"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:35.445" endtime="20201112 10:17:35.484"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:32.703" endtime="20201112 10:17:35.485"></status>
</kw>
<msg timestamp="20201112 10:17:35.485" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:35.508" endtime="20201112 10:17:37.636"></status>
</kw>
<msg timestamp="20201112 10:17:37.638" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 71696082, 'wakeups': [71706182, 71716182, 71726182, 71736182, 71746182...</msg>
<status status="PASS" starttime="20201112 10:17:35.504" endtime="20201112 10:17:37.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:37.645" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 71696082, 'wakeups': [71706182, 71716182, 71726182, 71736182, 71746182...</msg>
<status status="PASS" starttime="20201112 10:17:37.640" endtime="20201112 10:17:37.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:37.648" endtime="20201112 10:17:37.652"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:35.496" endtime="20201112 10:17:37.653"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:35.491" endtime="20201112 10:17:37.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:37.657" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [71706182, 71716182, 71726182, 71736182, 71746182, 71756182, 71766182, 71776182, 71786182, 71796182, 71806182, 71816182, 71826182, 71836182, 71846182, 71856182, 71...</msg>
<status status="PASS" starttime="20201112 10:17:37.654" endtime="20201112 10:17:37.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:37.662" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:37.661" endtime="20201112 10:17:37.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:37.664" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:37.663" endtime="20201112 10:17:37.664"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:37.658" endtime="20201112 10:17:37.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:37.670" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 10:17:37.669" endtime="20201112 10:17:37.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:37.672" level="INFO">VALUE: 71696082</msg>
<status status="PASS" starttime="20201112 10:17:37.671" endtime="20201112 10:17:37.673"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:37.666" endtime="20201112 10:17:37.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:37.678" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:37.677" endtime="20201112 10:17:37.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:37.686" level="INFO">VALUE: [71706182, 71716182, 71726182, 71736182, 71746182, 71756182, 71766182, 71776182, 71786182, 71796182, 71806182, 71816182, 71826182, 71836182, 71846182, 71856182, 71866182, 71876182, 71886182, 71896182, 71906182, 71916182, 71926182, 71936182, 71946182, 71956182, 71966182, 71976182, 71986182, 71996182, 72006182, 72016182, 72026182, 72036182, 72046182, 72056182, 72066182, 72076182, 72086182, 72096182, 72106182, 72116182, 72126182, 72136182, 72146182, 72156182, 72166182, 72176182, 72186182, 72196182, 72206182, 72216182, 72226182, 72236182, 72246182, 72256182, 72266182, 72276182, 72286182, 72296182, 72306182, 72316182, 72326182, 72336182, 72346182, 72356182, 72366182, 72376182, 72386182, 72396182, 72406182, 72416182, 72426182, 72436182, 72446182, 72456182, 72466182, 72476182, 72486182, 72496182, 72506182, 72516182, 72526182, 72536182, 72546182, 72556182, 72566182, 72576182, 72586182, 72596182, 72606182, 72616182, 72626182, 72636182, 72646182, 72656182, 72666182, 72676182, 72686182, 72696182]</msg>
<status status="PASS" starttime="20201112 10:17:37.685" endtime="20201112 10:17:37.687"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:37.674" endtime="20201112 10:17:37.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:37.696" endtime="20201112 10:17:38.044"></status>
</kw>
<msg timestamp="20201112 10:17:38.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040600986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050702819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:37.694" endtime="20201112 10:17:38.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:38.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040600986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050702819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:38.053" endtime="20201112 10:17:38.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:38.071" endtime="20201112 10:17:38.075"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:37.691" endtime="20201112 10:17:38.076"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:37.688" endtime="20201112 10:17:38.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:38.139" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:17:38.080" endtime="20201112 10:17:38.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:38.151" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 10:17:38.148" endtime="20201112 10:17:38.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:38.155" level="INFO">VALUE: 0.040600986</msg>
<status status="PASS" starttime="20201112 10:17:38.153" endtime="20201112 10:17:38.156"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:38.141" endtime="20201112 10:17:38.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:38.170" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:38.167" endtime="20201112 10:17:38.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:38.175" level="INFO">VALUE: [0.050702819, 0.060703819, 0.070704833, 0.080706, 0.090707, 0.100708153, 0.110709167, 0.120710347, 0.130711361, 0.140712514, 0.150713514, 0.160714681, 0.170715694, 0.180716903, 0.190717861, 0.200719056, 0.210720028, 0.220721194, 0.230722208, 0.240723375, 0.250724375, 0.260725542, 0.270726625, 0.280727778, 0.290728722, 0.300729875, 0.310730917, 0.320732056, 0.330733111, 0.340734236, 0.35073525, 0.360736417, 0.370737444, 0.380738583, 0.390739597, 0.40074075, 0.410741764, 0.420742944, 0.430744, 0.440745111, 0.450746153, 0.460747278, 0.470748306, 0.480749458, 0.490750472, 0.500751639, 0.510752653, 0.520753792, 0.530754819, 0.540756028, 0.550756986, 0.560758139, 0.570759167, 0.580760319, 0.590761347, 0.6007625, 0.610763514, 0.620764667, 0.630765694, 0.640766847, 0.650767861, 0.660769028, 0.670770028, 0.680771208, 0.690772222, 0.700773417, 0.710774375, 0.720775569, 0.730776556, 0.740777722, 0.750778778, 0.760779903, 0.770780917, 0.780782069, 0.790783069, 0.800784236, 0.81078525, 0.820786417, 0.830787431, 0.840788597, 0.850789597, 0.86079075, 0.870791778, 0.880792931, 0.890793944, 0.900795097, 0.910796125, 0.920797278, 0.930798292, 0.940799444, 0.950800486, 0.960801639, 0.970802639, 0.980803792, 0.990804833, 1.000805972, 1.010806986, 1.020808139, 1.030809181, 1.040810319] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:38.172" endtime="20201112 10:17:38.176"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:38.159" endtime="20201112 10:17:38.177"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:38.184" endtime="20201112 10:17:38.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:38.193" endtime="20201112 10:17:38.215"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:38.188" endtime="20201112 10:17:38.217"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:38.179" endtime="20201112 10:17:38.219"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:35.487" endtime="20201112 10:17:38.220"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:29.980" endtime="20201112 10:17:38.220"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:29.978" endtime="20201112 10:17:38.221"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:17:38.227" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:38.249" endtime="20201112 10:17:40.378"></status>
</kw>
<msg timestamp="20201112 10:17:40.380" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74437499, 'wakeups': [74447615, 74457616, 74467616, 74477616, 744876...</msg>
<status status="PASS" starttime="20201112 10:17:38.245" endtime="20201112 10:17:40.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:40.387" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74437499, 'wakeups': [74447615, 74457616, 74467616, 74477616, 744876...</msg>
<status status="PASS" starttime="20201112 10:17:40.382" endtime="20201112 10:17:40.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:40.389" endtime="20201112 10:17:40.393"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:38.238" endtime="20201112 10:17:40.395"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:38.232" endtime="20201112 10:17:40.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:40.403" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [74447615, 74457616, 74467616, 74477616, 74487616, 74497616, 74507616, 74517616, 74527616, 74537616, 74547616, 74557616, 74567616, 74577616, 74587616, 74597616, 74...</msg>
<status status="PASS" starttime="20201112 10:17:40.398" endtime="20201112 10:17:40.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:40.414" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:40.412" endtime="20201112 10:17:40.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:40.419" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:40.417" endtime="20201112 10:17:40.420"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:40.405" endtime="20201112 10:17:40.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:40.432" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 10:17:40.430" endtime="20201112 10:17:40.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:40.437" level="INFO">VALUE: 74437499</msg>
<status status="PASS" starttime="20201112 10:17:40.435" endtime="20201112 10:17:40.438"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:40.423" endtime="20201112 10:17:40.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:40.450" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:40.448" endtime="20201112 10:17:40.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:40.455" level="INFO">VALUE: [74447615, 74457616, 74467616, 74477616, 74487616, 74497616, 74507616, 74517616, 74527616, 74537616, 74547616, 74557616, 74567616, 74577616, 74587616, 74597616, 74607616, 74617616, 74627616, 74637616, 74647616, 74657616, 74667616, 74677616, 74687616, 74697616, 74707616, 74717616, 74727616, 74737616, 74747616, 74757616, 74767616, 74777616, 74787616, 74797616, 74807616, 74817616, 74827616, 74837616, 74847616, 74857616, 74867616, 74877616, 74887616, 74897616, 74907616, 74917616, 74927616, 74937616, 74947616, 74957616, 74967616, 74977616, 74987616, 74997616, 75007616, 75017616, 75027616, 75037616, 75047616, 75057616, 75067616, 75077616, 75087616, 75097616, 75107616, 75117616, 75127616, 75137616, 75147616, 75157616, 75167616, 75177616, 75187616, 75197616, 75207616, 75217616, 75227616, 75237616, 75247616, 75257616, 75267616, 75277616, 75287616, 75297616, 75307616, 75317616, 75327616, 75337616, 75347616, 75357616, 75367616, 75377616, 75387616, 75397616, 75407616, 75417616, 75427616, 75437616]</msg>
<status status="PASS" starttime="20201112 10:17:40.453" endtime="20201112 10:17:40.458"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:40.441" endtime="20201112 10:17:40.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:40.479" endtime="20201112 10:17:40.838"></status>
</kw>
<msg timestamp="20201112 10:17:40.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047857486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0579755, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:17:40.474" endtime="20201112 10:17:40.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:40.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047857486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0579755, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:17:40.842" endtime="20201112 10:17:40.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:40.850" endtime="20201112 10:17:40.852"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:40.467" endtime="20201112 10:17:40.853"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:40.462" endtime="20201112 10:17:40.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:40.878" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:17:40.854" endtime="20201112 10:17:40.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:40.884" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 10:17:40.883" endtime="20201112 10:17:40.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:40.886" level="INFO">VALUE: 0.047857486</msg>
<status status="PASS" starttime="20201112 10:17:40.885" endtime="20201112 10:17:40.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:40.879" endtime="20201112 10:17:40.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:40.893" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:40.892" endtime="20201112 10:17:40.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:40.895" level="INFO">VALUE: [0.0579755, 0.067977417, 0.077978417, 0.087979583, 0.097980597, 0.107981792, 0.117982792, 0.127983903, 0.137984931, 0.147986069, 0.157987083, 0.16798825, 0.17798925, 0.187990444, 0.197991444, 0.207992597, 0.217993597, 0.22799475, 0.237995764, 0.247996958, 0.257997931, 0.267999083, 0.278000111, 0.288001278, 0.298002278, 0.308003431, 0.318004444, 0.328005597, 0.338006611, 0.348007778, 0.358008792, 0.368009944, 0.378010986, 0.388012111, 0.398013125, 0.408014347, 0.418015319, 0.428016486, 0.438017514, 0.448018667, 0.458019708, 0.468020861, 0.478021889, 0.488023069, 0.498024069, 0.50802525, 0.518026264, 0.528027444, 0.538028444, 0.548029611, 0.558030653, 0.568031806, 0.578032833, 0.588034, 0.598035014, 0.608036194, 0.618037208, 0.628038361, 0.638039403, 0.648040569, 0.658041569, 0.66804275, 0.678043764, 0.688044931, 0.698045958, 0.708047111, 0.718048139, 0.728049306, 0.738050333, 0.7480515, 0.758052514, 0.768053694, 0.778054722, 0.788055861, 0.798056875, 0.808058056, 0.818059069, 0.828060236, 0.83806125, 0.848062444, 0.858063444, 0.868064597, 0.878065625, 0.888066806, 0.898067819, 0.908069028, 0.91807, 0.928071181, 0.938072194, 0.948073361, 0.958074361, 0.968075528, 0.978076542, 0.988077722, 0.998078819, 1.008079958, 1.018080917, 1.028082069, 1.038083097, 1.048084264] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:40.894" endtime="20201112 10:17:40.895"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:40.888" endtime="20201112 10:17:40.896"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:40.899" endtime="20201112 10:17:40.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:40.903" endtime="20201112 10:17:40.923"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:40.901" endtime="20201112 10:17:40.924"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:40.897" endtime="20201112 10:17:40.925"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:38.228" endtime="20201112 10:17:40.925"></status>
</kw>
<msg timestamp="20201112 10:17:40.926" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:40.937" endtime="20201112 10:17:43.066"></status>
</kw>
<msg timestamp="20201112 10:17:43.067" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 77123680, 'wakeups': [77133796, 77143797, 77153797, 77163797, 771737...</msg>
<status status="PASS" starttime="20201112 10:17:40.935" endtime="20201112 10:17:43.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:43.081" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 77123680, 'wakeups': [77133796, 77143797, 77153797, 77163797, 771737...</msg>
<status status="PASS" starttime="20201112 10:17:43.070" endtime="20201112 10:17:43.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:43.084" endtime="20201112 10:17:43.088"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:40.931" endtime="20201112 10:17:43.090"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:40.928" endtime="20201112 10:17:43.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:43.098" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [77133796, 77143797, 77153797, 77163797, 77173797, 77183797, 77193797, 77203797, 77213797, 77223797, 77233797, 77243797, 77253797, 77263797, 77273797, 77283797, 77...</msg>
<status status="PASS" starttime="20201112 10:17:43.093" endtime="20201112 10:17:43.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:43.108" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:43.106" endtime="20201112 10:17:43.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:43.113" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:43.111" endtime="20201112 10:17:43.114"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:43.100" endtime="20201112 10:17:43.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:43.126" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 10:17:43.124" endtime="20201112 10:17:43.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:43.131" level="INFO">VALUE: 77123680</msg>
<status status="PASS" starttime="20201112 10:17:43.129" endtime="20201112 10:17:43.132"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:43.117" endtime="20201112 10:17:43.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:43.144" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:43.142" endtime="20201112 10:17:43.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:43.150" level="INFO">VALUE: [77133796, 77143797, 77153797, 77163797, 77173797, 77183797, 77193797, 77203797, 77213797, 77223797, 77233797, 77243797, 77253797, 77263797, 77273797, 77283797, 77293797, 77303797, 77313797, 77323797, 77333797, 77343797, 77353797, 77363797, 77373797, 77383797, 77393797, 77403797, 77413797, 77423797, 77433797, 77443797, 77453797, 77463797, 77473797, 77483797, 77493797, 77503797, 77513797, 77523797, 77533797, 77543797, 77553797, 77563797, 77573797, 77583797, 77593797, 77603797, 77613797, 77623797, 77633797, 77643797, 77653797, 77663797, 77673797, 77683797, 77693797, 77703797, 77713797, 77723797, 77733797, 77743797, 77753797, 77763797, 77773797, 77783797, 77793797, 77803797, 77813797, 77823797, 77833797, 77843797, 77853797, 77863797, 77873797, 77883797, 77893797, 77903797, 77913797, 77923797, 77933797, 77943797, 77953797, 77963797, 77973797, 77983797, 77993797, 78003797, 78013797, 78023797, 78033797, 78043797, 78053797, 78063797, 78073797, 78083797, 78093797, 78103797, 78113797, 78123797]</msg>
<status status="PASS" starttime="20201112 10:17:43.147" endtime="20201112 10:17:43.151"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:43.135" endtime="20201112 10:17:43.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:43.170" endtime="20201112 10:17:43.539"></status>
</kw>
<msg timestamp="20201112 10:17:43.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023588167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033705847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:43.166" endtime="20201112 10:17:43.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:43.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023588167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033705847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:43.548" endtime="20201112 10:17:43.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:43.566" endtime="20201112 10:17:43.572"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:43.159" endtime="20201112 10:17:43.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:43.154" endtime="20201112 10:17:43.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:43.635" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:17:43.577" endtime="20201112 10:17:43.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:43.647" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 10:17:43.645" endtime="20201112 10:17:43.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:43.652" level="INFO">VALUE: 0.023588167</msg>
<status status="PASS" starttime="20201112 10:17:43.649" endtime="20201112 10:17:43.653"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:43.638" endtime="20201112 10:17:43.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:43.666" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:43.664" endtime="20201112 10:17:43.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:43.671" level="INFO">VALUE: [0.033705847, 0.04370775, 0.053708778, 0.063709931, 0.073710958, 0.083712167, 0.093713125, 0.103714278, 0.113715306, 0.123716458, 0.133717486, 0.143718653, 0.153719681, 0.163720833, 0.173721833, 0.183722986, 0.193724042, 0.203725181, 0.213726194, 0.223727347, 0.233728375, 0.243729528, 0.253730542, 0.263731694, 0.273732736, 0.283733875, 0.293734903, 0.303736056, 0.313737069, 0.323738236, 0.333739278, 0.343740417, 0.353741431, 0.363742597, 0.373743611, 0.383744764, 0.393745792, 0.403746944, 0.413747986, 0.423749125, 0.433750167, 0.443751306, 0.453752319, 0.463753486, 0.4737545, 0.483755667, 0.493756681, 0.503757847, 0.513758861, 0.523760028, 0.533761042, 0.543762194, 0.553763236, 0.563764375, 0.573765458, 0.583766556, 0.593767583, 0.60376875, 0.61376975, 0.623770931, 0.633771931, 0.643773097, 0.653774125, 0.663775292, 0.673776319, 0.683777486, 0.693778472, 0.703779639, 0.713780653, 0.723781806, 0.733782847, 0.743783986, 0.753785014, 0.763786181, 0.773787181, 0.783788347, 0.793789361, 0.803790528, 0.813791597, 0.823792708, 0.833793722, 0.843794889, 0.853795903, 0.863797083, 0.873798167, 0.88379925, 0.893800264, 0.903801417, 0.913802444, 0.923803597, 0.933804611, 0.943805778, 0.953806806, 0.963807958, 0.973808986, 0.983810194, 0.993811167, 1.003812306, 1.013813347, 1.023814486] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:43.669" endtime="20201112 10:17:43.672"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:43.656" endtime="20201112 10:17:43.674"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:43.681" endtime="20201112 10:17:43.683"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:43.689" endtime="20201112 10:17:43.711"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:43.685" endtime="20201112 10:17:43.714"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:43.676" endtime="20201112 10:17:43.715"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:40.926" endtime="20201112 10:17:43.716"></status>
</kw>
<msg timestamp="20201112 10:17:43.716" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:43.739" endtime="20201112 10:17:45.841"></status>
</kw>
<msg timestamp="20201112 10:17:45.842" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 79926870, 'wakeups': [79936986, 79946987, 79956987, 79966987, 799769...</msg>
<status status="PASS" starttime="20201112 10:17:43.735" endtime="20201112 10:17:45.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:45.845" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 79926870, 'wakeups': [79936986, 79946987, 79956987, 79966987, 799769...</msg>
<status status="PASS" starttime="20201112 10:17:45.843" endtime="20201112 10:17:45.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:45.846" endtime="20201112 10:17:45.848"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:43.727" endtime="20201112 10:17:45.849"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:43.722" endtime="20201112 10:17:45.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:45.854" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [79936986, 79946987, 79956987, 79966987, 79976987, 79986987, 79996987, 80006987, 80016987, 80026987, 80036987, 80046987, 80056987, 80066987, 80076987, 80086987, 80...</msg>
<status status="PASS" starttime="20201112 10:17:45.851" endtime="20201112 10:17:45.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:45.859" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:45.858" endtime="20201112 10:17:45.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:45.861" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:45.860" endtime="20201112 10:17:45.862"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:45.855" endtime="20201112 10:17:45.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:45.868" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 10:17:45.867" endtime="20201112 10:17:45.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:45.871" level="INFO">VALUE: 79926870</msg>
<status status="PASS" starttime="20201112 10:17:45.869" endtime="20201112 10:17:45.871"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:45.864" endtime="20201112 10:17:45.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:45.877" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:45.875" endtime="20201112 10:17:45.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:45.879" level="INFO">VALUE: [79936986, 79946987, 79956987, 79966987, 79976987, 79986987, 79996987, 80006987, 80016987, 80026987, 80036987, 80046987, 80056987, 80066987, 80076987, 80086987, 80096987, 80106987, 80116987, 80126987, 80136987, 80146987, 80156987, 80166987, 80176987, 80186987, 80196987, 80206987, 80216987, 80226987, 80236987, 80246987, 80256987, 80266987, 80276987, 80286987, 80296987, 80306987, 80316987, 80326987, 80336987, 80346987, 80356987, 80366987, 80376987, 80386987, 80396987, 80406987, 80416987, 80426987, 80436987, 80446987, 80456987, 80466987, 80476987, 80486987, 80496987, 80506987, 80516987, 80526987, 80536987, 80546987, 80556987, 80566987, 80576987, 80586987, 80596987, 80606987, 80616987, 80626987, 80636987, 80646987, 80656987, 80666987, 80676987, 80686987, 80696987, 80706987, 80716987, 80726987, 80736987, 80746987, 80756987, 80766987, 80776987, 80786987, 80796987, 80806987, 80816987, 80826987, 80836987, 80846987, 80856987, 80866987, 80876987, 80886987, 80896987, 80906987, 80916987, 80926987]</msg>
<status status="PASS" starttime="20201112 10:17:45.878" endtime="20201112 10:17:45.879"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:45.872" endtime="20201112 10:17:45.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:45.888" endtime="20201112 10:17:46.237"></status>
</kw>
<msg timestamp="20201112 10:17:46.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040711653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050829347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:45.887" endtime="20201112 10:17:46.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:46.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040711653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050829347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:46.246" endtime="20201112 10:17:46.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:46.264" endtime="20201112 10:17:46.268"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:45.883" endtime="20201112 10:17:46.269"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:45.881" endtime="20201112 10:17:46.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:46.331" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:17:46.273" endtime="20201112 10:17:46.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:46.342" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 10:17:46.340" endtime="20201112 10:17:46.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:46.347" level="INFO">VALUE: 0.040711653</msg>
<status status="PASS" starttime="20201112 10:17:46.345" endtime="20201112 10:17:46.348"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:46.333" endtime="20201112 10:17:46.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:46.361" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:46.359" endtime="20201112 10:17:46.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:46.366" level="INFO">VALUE: [0.050829347, 0.06083125, 0.07083225, 0.080833444, 0.090834431, 0.100835583, 0.110836597, 0.120837778, 0.130838792, 0.140839944, 0.150840944, 0.160842167, 0.170843153, 0.180844278, 0.190845306, 0.200846458, 0.210847472, 0.220848639, 0.230849653, 0.240850806, 0.250851847, 0.260853, 0.270854, 0.280855153, 0.290856194, 0.300857333, 0.310858361, 0.320859514, 0.330860528, 0.340861681, 0.350862736, 0.360863861, 0.370864889, 0.380866097, 0.390867056, 0.40086825, 0.410869264, 0.420870389, 0.430871431, 0.440872569, 0.450873583, 0.460874792, 0.470875764, 0.480876917, 0.490877944, 0.500879111, 0.510880125, 0.520881278, 0.530882319, 0.540883444, 0.5508845, 0.560885667, 0.570886653, 0.580887861, 0.590888819, 0.600889972, 0.610891, 0.620892153, 0.630893181, 0.640894333, 0.650895347, 0.660896514, 0.670897542, 0.680898681, 0.690899708, 0.700900875, 0.710901889, 0.720903042, 0.730904056, 0.740905236, 0.750906236, 0.760907389, 0.770908431, 0.780909583, 0.790910597, 0.800911806, 0.810912764, 0.820913917, 0.830915014, 0.840916097, 0.850917111, 0.860918278, 0.870919306, 0.880920458, 0.890921472, 0.900922639, 0.910923639, 0.920924806, 0.930925819, 0.940926986, 0.950928014, 0.960929167, 0.970930208, 0.980931347, 0.990932347, 1.000933514, 1.010934528, 1.020935681, 1.030936708, 1.040937875] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:46.363" endtime="20201112 10:17:46.367"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:46.351" endtime="20201112 10:17:46.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:46.376" endtime="20201112 10:17:46.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:46.385" endtime="20201112 10:17:46.407"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:46.380" endtime="20201112 10:17:46.409"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:46.371" endtime="20201112 10:17:46.411"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:43.718" endtime="20201112 10:17:46.411"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:38.224" endtime="20201112 10:17:46.412"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:38.222" endtime="20201112 10:17:46.412"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:24.591" endtime="20201112 10:17:46.413"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 10:16:24.444" endtime="20201112 10:17:46.416" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 10:16:21.812" endtime="20201112 10:17:46.425"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased</item>
</metadata>
<status status="PASS" starttime="20201112 10:13:57.432" endtime="20201112 10:17:46.469"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
